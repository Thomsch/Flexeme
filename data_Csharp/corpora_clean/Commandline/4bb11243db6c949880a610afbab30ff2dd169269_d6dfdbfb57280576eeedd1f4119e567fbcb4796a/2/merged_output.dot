digraph  {
m7_30 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m7_32 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProps'');", span="49-49"];
m7_31 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="specProps == null", span="49-49"];
m7_33 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", span="51-51"];
m7_34 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m7_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m7_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="13-13"];
m7_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m7_20 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: TypeDescriptorKind.Sequence", span="33-33"];
m7_19 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp.Specification.ConversionType.ToDescriptor()", span="31-31"];
m7_21 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="34-38"];
m7_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="29-29"];
m7_22 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", span="40-40"];
m7_18 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", span="29-29"];
m7_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m7_29 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m7_2 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.ToWords(int, string)", file="SpecificationPropertyExtensions.cs", label="Entry Humanizer.Tests.Localisation.he.NumberToWordsTests.ToWords(int, string)", span="53-53"];
m7_4 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.ToWords(int, string)", file="SpecificationPropertyExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.NumberToWordsTests.ToWords(int, string)", span="53-53"];
m7_3 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.ToWords(int, string)", file="SpecificationPropertyExtensions.cs", label="Assert.Equal(expected, number.ToWords())", span="55-55"];
m7_5 [cluster="int.ToWords()", file="SpecificationPropertyExtensions.cs", label="Entry int.ToWords()", span="32-32"];
m7_6 [cluster="Unk.Equal", file="SpecificationPropertyExtensions.cs", label="Entry Unk.Equal", span=""];
m7_8 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", file="SpecificationPropertyExtensions.cs", label="Assert.Equal(expected, number.ToWords())", span="62-62"];
m7_9 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", file="SpecificationPropertyExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", span="60-60"];
m7_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''specProp'');", span="21-21"];
m7_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", span="22-22"];
m7_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="specProp == null", span="21-21"];
m7_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="newValue == null", span="22-22"];
m7_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="24-24"];
m7_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m7_25 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m7_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m7_27 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m7_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m7_36 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="51-51"];
m7_37 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="rule(specProps)", span="51-51"];
m7_38 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="51-51"];
m7_24 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m7_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_28 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_40 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m9_5 [cluster="lambda expression", file="Switch.cs", label="Entry lambda expression", span="16-16"];
m9_6 [cluster="lambda expression", color=green, community=0, file="Switch.cs", label="1: t.IsName() && info.Item1 == TypeDescriptorKind.Boolean", span="16-16"];
m9_7 [cluster="lambda expression", file="Switch.cs", label="Exit lambda expression", span="16-16"];
m9_4 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Switch.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m9_8 [cluster="CommandLine.Core.Token.IsName()", file="Switch.cs", label="Entry CommandLine.Core.Token.IsName()", span="72-72"];
m9_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>>>>)", file="Switch.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>>>>)", span="11-11"];
m9_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=1, file="Switch.cs", label="1: return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == TypeDescriptorKind.Boolean, false)\r\n                   select t;", span="15-17"];
m9_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>>>>)", file="Switch.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>>>>)", span="11-11"];
m9_3 [cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_9 [file="Switch.cs", label=t, span=""];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m7_30 -> m7_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m7_32 -> m7_7  [key=2, style=dotted];
m7_32 -> m7_34  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [key=2, style=dotted];
m7_33 -> m7_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_34 -> m7_30  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m7_0 -> m7_5  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_16 -> m7_19  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m7_16 -> m7_21  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_22  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_22  [key=0, style=solid];
m7_19 -> m7_24  [key=2, style=dotted];
m7_21 -> m7_23  [key=0, style=solid];
m7_21 -> m7_25  [key=2, style=dotted];
m7_21 -> m7_26  [key=2, style=dotted];
m7_21 -> m7_27  [key=2, style=dotted];
m7_21 -> m7_28  [key=2, style=dotted];
m7_21 -> m7_29  [key=2, style=dotted];
m7_17 -> m7_19  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_18 -> m7_23  [key=0, style=solid];
m7_18 -> m7_7  [key=2, style=dotted];
m7_23 -> m7_16  [color=blue, key=0, style=bold];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_6  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_4 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_6  [key=0, style=solid];
m7_4 -> m7_2  [color=blue, key=0, style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_3 -> m7_6  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_0  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_5  [key=2, style=dotted];
m7_8 -> m7_6  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m7_9 -> m7_14  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m7_9 -> m7_7  [color=blue, key=0, style=bold];
m7_11 -> m7_7  [key=2, style=dotted];
m7_11 -> m7_15  [key=0, style=solid];
m7_13 -> m7_7  [key=2, style=dotted];
m7_13 -> m7_15  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_8  [key=2, style=dotted];
m7_15 -> m7_9  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_39  [key=2, style=dotted];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_40 -> m7_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_6 -> m9_7  [color=green, key=0, style=solid];
m9_6 -> m9_8  [color=green, key=2, style=dotted];
m9_7 -> m9_5  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_1 -> m9_1  [color=green, key=1, label=t, style=dashed];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_3  [color=green, key=2, style=dotted];
m9_1 -> m9_4  [color=green, key=2, style=dotted];
m9_1 -> m9_5  [color=green, key=1, label="lambda expression", style=dashed];
m9_1 -> m9_6  [color=green, key=1, label=t, style=dashed];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_9 -> m9_6  [color=green, key=1, label=t, style=dashed];
}
