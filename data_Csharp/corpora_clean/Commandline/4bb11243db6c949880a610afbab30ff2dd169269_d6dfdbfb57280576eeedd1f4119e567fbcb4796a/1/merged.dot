digraph  {
d13 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future)", span="56-56", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", color=green, community=0];
d12 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="54-54", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)"];
d14 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="54-54", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)"];
d5 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)"];
d3 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="20-20", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)"];
d7 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future)", span="30-30", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)"];
d10 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="44-44", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)"];
d16 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="66-66", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)"];
d19 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future)", span="76-76", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)"];
d22 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="86-86", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)"];
d25 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future)", span="96-96", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)"];
d28 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="106-106", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)"];
d31 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future)", span="116-116", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)"];
d34 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="124-124", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)"];
d37 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future)", span="132-132", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)"];
d40 [label="DateHumanize.Verify(''now'', 0, TimeUnit.Year, Tense.Future)", span="138-138", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()"];
d2 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="18-18", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)"];
d4 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="18-18", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)"];
d6 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)"];
d8 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)"];
d9 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="42-42", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)"];
d11 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="42-42", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)"];
d15 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="64-64", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)"];
d17 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="64-64", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)"];
d18 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="74-74", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)"];
d20 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="74-74", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)"];
d21 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="84-84", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)"];
d23 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="84-84", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)"];
d24 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="94-94", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)"];
d26 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="94-94", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)"];
d27 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="104-104", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)"];
d29 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="104-104", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)"];
d30 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="114-114", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)"];
d32 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="114-114", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)"];
d33 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="122-122", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)"];
d35 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="122-122", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)"];
d36 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="130-130", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)"];
d38 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="130-130", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)"];
d39 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="136-136", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()"];
d41 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="136-136", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()"];
m0_0 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="13-13", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_3 [label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="20-20", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_1 [label="var writer = new StringWriter()", span="16-16", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_2 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="17-17", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_4 [label="var text = writer.ToString()", span="23-23", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_5 [label="Assert.True(text.Length > 0)", span="24-24", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_6 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="13-13", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs"];
m0_108 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="188-188", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m0_109 [label="var expectedError = new HelpRequestedError()", span="191-191", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, file="ParserTests.cs"];
m0_110 [label="var sut = new Parser()", span="192-192", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, file="ParserTests.cs"];
m0_113 [label="result.Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="199-199", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, file="ParserTests.cs"];
m0_111 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="195-195", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, file="ParserTests.cs"];
m0_112 [label="result.Errors.Should().HaveCount(x => x == 1)", span="198-198", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, file="ParserTests.cs"];
m0_114 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="188-188", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m0_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ParserTests.cs"];
m0_85 [label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ParserTests.cs"];
m0_126 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="204-204", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m0_127 [label="var help = new StringWriter()", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m0_128 [label="var sut = new Parser(config => config.HelpWriter = help)", span="208-208", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m0_130 [label="var result = help.ToString()", span="212-212", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m0_129 [label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="211-211", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m0_131 [label="result.Length.Should().BeGreaterThan(0)", span="215-215", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m0_132 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="204-204", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m0_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="ParserTests.cs"];
m0_49 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="80-80", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_52 [label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="93-94", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_51 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="90-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_53 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="97-97", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_54 [label="Assert.False(result.Errors.Any())", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_50 [label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="83-89", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_55 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="80-80", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m0_118 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="ParserTests.cs"];
m0_69 [label="Entry Unk.>", span="", cluster="Unk.>", file="ParserTests.cs"];
m0_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ParserTests.cs"];
m0_33 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs"];
m0_89 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="149-149", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_91 [label="var sut = new Parser()", span="157-157", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_90 [label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="152-156", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_92 [label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="160-161", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_94 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="165-165", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_93 [label="Assert.IsType<CloneOptions>(result.Value)", span="164-164", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_95 [label="Assert.False(result.Errors.Any())", span="166-166", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_96 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="149-149", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m0_60 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_62 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_61 [label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_63 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_65 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_64 [label="Assert.IsType<AddOptions>(result.Value)", span="119-119", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_66 [label="Assert.False(result.Errors.Any())", span="121-121", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_67 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m0_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ParserTests.cs"];
m0_133 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="ParserTests.cs"];
m0_76 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs"];
m0_45 [label="Entry CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="ParserTests.cs"];
m0_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ParserTests.cs"];
m0_73 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="ParserTests.cs"];
m0_123 [label="e.Equals(expectedError)", span="199-199", cluster="lambda expression", color=green, community=0, file="ParserTests.cs"];
m0_122 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="ParserTests.cs"];
m0_124 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="ParserTests.cs"];
m0_119 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="ParserTests.cs"];
m0_120 [label="x == 1", span="198-198", cluster="lambda expression", color=green, community=0, file="ParserTests.cs"];
m0_121 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="ParserTests.cs"];
m0_135 [label="config.HelpWriter = help", span="208-208", cluster="lambda expression", color=green, community=0, file="ParserTests.cs"];
m0_134 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="ParserTests.cs"];
m0_136 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="ParserTests.cs"];
m0_13 [label="with.HelpWriter = writer", span="17-17", cluster="lambda expression", file="ParserTests.cs"];
m0_24 [label="with.HelpWriter = writer", span="33-33", cluster="lambda expression", file="ParserTests.cs"];
m0_35 [label="with.HelpWriter = writer", span="49-49", cluster="lambda expression", file="ParserTests.cs"];
m0_58 [label="with.EnableDashDash = true", span="90-90", cluster="lambda expression", file="ParserTests.cs"];
m0_71 [label="with.EnableDashDash = true", span="111-111", cluster="lambda expression", file="ParserTests.cs"];
m0_12 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="ParserTests.cs"];
m0_14 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="ParserTests.cs"];
m0_23 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ParserTests.cs"];
m0_25 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ParserTests.cs"];
m0_34 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ParserTests.cs"];
m0_36 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ParserTests.cs"];
m0_57 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="ParserTests.cs"];
m0_59 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="ParserTests.cs"];
m0_70 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ParserTests.cs"];
m0_72 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ParserTests.cs"];
m0_86 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="ParserTests.cs"];
m0_97 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="ParserTests.cs"];
m0_88 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="ParserTests.cs"];
m0_87 [label="o.RespectingRuntimeTypes()", span="143-143", cluster="lambda expression", file="ParserTests.cs"];
m0_99 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="ParserTests.cs"];
m0_98 [label="o.RespectingRuntimeTypes()", span="165-165", cluster="lambda expression", file="ParserTests.cs"];
m0_74 [label="o.RespectingRuntimeTypes()", span="120-120", cluster="lambda expression", file="ParserTests.cs"];
m0_75 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="ParserTests.cs"];
m0_26 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_27 [label="var writer = new StringWriter()", span="48-48", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_28 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="49-49", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_30 [label="var text = writer.ToString()", span="55-55", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_29 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="52-52", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_31 [label="Assert.True(text.Length > 0)", span="56-56", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_32 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m0_116 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserTests.cs"];
m0_125 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="ParserTests.cs"];
m0_48 [label="Entry Unk.False", span="", cluster="Unk.False", file="ParserTests.cs"];
m0_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs"];
m0_117 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="ParserTests.cs"];
m0_107 [label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs"];
m0_68 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ParserTests.cs"];
m0_37 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_39 [label="var sut = new Parser()", span="68-68", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_40 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="71-71", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_38 [label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="64-67", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_41 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="74-74", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_42 [label="Assert.False(result.Errors.Any())", span="75-75", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_43 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m0_100 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="171-171", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_102 [label="var sut = new Parser()", span="176-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_103 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_101 [label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="174-175", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_104 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="182-182", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_105 [label="Assert.False(result.Errors.Any())", span="183-183", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_106 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="171-171", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m0_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="29-29", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_16 [label="var writer = new StringWriter()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="33-33", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_19 [label="var text = writer.ToString()", span="39-39", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_18 [label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="36-36", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_20 [label="Assert.True(text.Length > 0)", span="40-40", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="29-29", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m0_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs"];
m0_77 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="126-126", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_79 [label="var sut = new Parser()", span="134-134", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_78 [label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="129-133", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_80 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="137-139", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_82 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="143-143", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_81 [label="Assert.IsType<CloneOptions>(result.Value)", span="142-142", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_83 [label="Assert.False(result.Errors.Any())", span="144-144", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_84 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="126-126", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m0_44 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ParserTests.cs"];
m0_56 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ParserTests.cs"];
m0_115 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs"];
m0_46 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs"];
m0_140 [label=expectedError, span="", file="ParserTests.cs"];
m0_141 [label=help, span="", file="ParserTests.cs"];
m0_137 [label=writer, span="", file="ParserTests.cs"];
m0_138 [label=writer, span="", file="ParserTests.cs"];
m0_139 [label=writer, span="", file="ParserTests.cs"];
m1_9 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionHelper.cs"];
m1_20 [label="Entry CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="42-42", cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="ReflectionHelper.cs"];
m1_21 [label="return condition ? builder.Append(ifTrue) : builder.Append(ifFalse);", span="44-44", cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="ReflectionHelper.cs", color=green, community=0];
m1_22 [label="Exit CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="42-42", cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="ReflectionHelper.cs"];
m1_1 [label=condition, span="11-11", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_0 [label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_2 [label=values, span="13-13", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_3 [label="builder.Append(value)", span="15-15", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_4 [label="return builder;", span="18-18", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_14 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs"];
m1_17 [label="return assembly.GetName().Version.ToStringInvariant();", span="30-30", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", color=green, community=0, file="ReflectionHelper.cs"];
m1_15 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="27-27", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs"];
m1_16 [label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="29-29", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs"];
m1_18 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="27-27", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs"];
m1_19 [label="Entry T.ToStringInvariant<T>()", span="14-14", cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs"];
m1_8 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ReflectionHelper.cs"];
m1_7 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs"];
m1_6 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ReflectionHelper.cs"];
m1_5 [label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9", cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionHelper.cs"];
m1_23 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionHelper.cs"];
m1_26 [label="builder.Append(value)", span="53-53", cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="ReflectionHelper.cs"];
m1_24 [label=values, span="49-49", cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="ReflectionHelper.cs"];
m1_25 [label="value.Length > 0", span="51-51", cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="ReflectionHelper.cs"];
m1_27 [label="return builder;", span="56-56", cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="ReflectionHelper.cs"];
m1_28 [label="Exit CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="47-47", cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="ReflectionHelper.cs"];
m1_11 [label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs"];
m1_10 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="21-21", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs"];
m1_12 [label="return assembly.GetName().Name;", span="24-24", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs"];
m1_13 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="21-21", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs"];
m3_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m3_1 [label="this.index = index", span="22-22", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m3_2 [label="min = -1", span="23-23", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m3_3 [label="max = -1", span="24-24", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m3_4 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m3_5 [label="CommandLine.ValueAttribute", span="", file="ValueAttribute.cs"];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d5  [key=2, style=dotted, color=green];
d12 -> d13  [key=0, style=solid, color=green];
d14 -> d12  [key=0, style=bold, color=blue];
d3 -> d5  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d7 -> d5  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d10 -> d5  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d16 -> d5  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d19 -> d5  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d22 -> d5  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d25 -> d5  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d28 -> d5  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d31 -> d5  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d34 -> d5  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d37 -> d5  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d40 -> d5  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d4 -> d2  [key=0, style=bold, color=blue];
d6 -> d7  [key=0, style=solid];
d8 -> d6  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d11 -> d9  [key=0, style=bold, color=blue];
d15 -> d16  [key=0, style=solid];
d17 -> d15  [key=0, style=bold, color=blue];
d18 -> d19  [key=0, style=solid];
d20 -> d18  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid];
d23 -> d21  [key=0, style=bold, color=blue];
d24 -> d25  [key=0, style=solid];
d26 -> d24  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid];
d29 -> d27  [key=0, style=bold, color=blue];
d30 -> d31  [key=0, style=solid];
d32 -> d30  [key=0, style=bold, color=blue];
d33 -> d34  [key=0, style=solid];
d35 -> d33  [key=0, style=bold, color=blue];
d36 -> d37  [key=0, style=solid];
d38 -> d36  [key=0, style=bold, color=blue];
d39 -> d40  [key=0, style=solid];
d41 -> d39  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid, color=green];
m0_109 -> m0_110  [key=0, style=solid, color=green];
m0_109 -> m0_115  [key=2, style=dotted, color=green];
m0_109 -> m0_113  [key=1, style=dashed, color=green, label=expectedError];
m0_109 -> m0_123  [key=1, style=dashed, color=green, label=expectedError];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_110 -> m0_45  [key=2, style=dotted, color=green];
m0_113 -> m0_114  [key=0, style=solid, color=green];
m0_113 -> m0_116  [key=2, style=dotted, color=green];
m0_113 -> m0_118  [key=2, style=dotted, color=green];
m0_113 -> m0_122  [key=1, style=dashed, color=green, label="lambda expression"];
m0_111 -> m0_113  [key=1, style=dashed, color=green, label=result];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_9  [key=2, style=dotted, color=green];
m0_112 -> m0_113  [key=0, style=solid, color=green];
m0_112 -> m0_116  [key=2, style=dotted, color=green];
m0_112 -> m0_117  [key=2, style=dotted, color=green];
m0_112 -> m0_119  [key=1, style=dashed, color=green, label="lambda expression"];
m0_114 -> m0_108  [key=0, style=bold, color=blue];
m0_126 -> m0_127  [key=0, style=solid, color=green];
m0_127 -> m0_128  [key=0, style=solid, color=green];
m0_127 -> m0_7  [key=2, style=dotted, color=green];
m0_127 -> m0_135  [key=1, style=dashed, color=green, label=help];
m0_127 -> m0_130  [key=1, style=dashed, color=green, label=help];
m0_128 -> m0_129  [key=0, style=solid, color=green];
m0_128 -> m0_8  [key=2, style=dotted, color=green];
m0_128 -> m0_135  [key=1, style=dashed, color=green, label="CommandLine.ParserSettings"];
m0_130 -> m0_131  [key=0, style=solid, color=green];
m0_130 -> m0_10  [key=2, style=dotted, color=green];
m0_129 -> m0_130  [key=0, style=solid, color=green];
m0_129 -> m0_9  [key=2, style=dotted, color=green];
m0_131 -> m0_132  [key=0, style=solid, color=green];
m0_131 -> m0_116  [key=2, style=dotted, color=green];
m0_131 -> m0_133  [key=2, style=dotted, color=green];
m0_132 -> m0_126  [key=0, style=bold, color=blue];
m0_49 -> m0_50  [key=0, style=solid];
m0_52 -> m0_9  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_51 -> m0_8  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_46  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_47  [key=2, style=dotted];
m0_54 -> m0_48  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_50 -> m0_56  [key=2, style=dotted];
m0_55 -> m0_49  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_91 -> m0_45  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_85  [key=2, style=dotted];
m0_90 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_33  [key=2, style=dotted];
m0_92 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_92 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_46  [key=2, style=dotted];
m0_94 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_69  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_47  [key=2, style=dotted];
m0_95 -> m0_48  [key=2, style=dotted];
m0_96 -> m0_89  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_62 -> m0_8  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_68  [key=2, style=dotted];
m0_61 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_22  [key=2, style=dotted];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_63 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_65 -> m0_46  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_69  [key=2, style=dotted];
m0_66 -> m0_47  [key=2, style=dotted];
m0_66 -> m0_48  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_60  [key=0, style=bold, color=blue];
m0_73 -> m0_74  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid, color=green];
m0_123 -> m0_125  [key=2, style=dotted, color=green];
m0_122 -> m0_123  [key=0, style=solid, color=green];
m0_124 -> m0_122  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid, color=green];
m0_120 -> m0_121  [key=0, style=solid, color=green];
m0_121 -> m0_119  [key=0, style=bold, color=blue];
m0_135 -> m0_136  [key=0, style=solid, color=green];
m0_134 -> m0_135  [key=0, style=solid, color=green];
m0_136 -> m0_134  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_70 -> m0_71  [key=0, style=solid];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_88 -> m0_86  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_76  [key=2, style=dotted];
m0_99 -> m0_97  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_7  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_28 -> m0_8  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_30 -> m0_10  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_11  [key=2, style=dotted];
m0_32 -> m0_26  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_39 -> m0_45  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_9  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_44  [key=2, style=dotted];
m0_38 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_47  [key=2, style=dotted];
m0_42 -> m0_48  [key=2, style=dotted];
m0_43 -> m0_37  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_102 -> m0_45  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_9  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_107  [key=2, style=dotted];
m0_101 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_46  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_47  [key=2, style=dotted];
m0_105 -> m0_48  [key=2, style=dotted];
m0_106 -> m0_100  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_7  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_17 -> m0_8  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_19 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_11  [key=2, style=dotted];
m0_21 -> m0_15  [key=0, style=bold, color=blue];
m0_77 -> m0_78  [key=0, style=solid];
m0_79 -> m0_45  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_85  [key=2, style=dotted];
m0_78 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_22  [key=2, style=dotted];
m0_80 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_80 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_46  [key=2, style=dotted];
m0_82 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_69  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_47  [key=2, style=dotted];
m0_83 -> m0_48  [key=2, style=dotted];
m0_84 -> m0_77  [key=0, style=bold, color=blue];
m0_140 -> m0_123  [key=1, style=dashed, color=green, label=expectedError];
m0_141 -> m0_135  [key=1, style=dashed, color=green, label=help];
m0_137 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_138 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_139 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_20 -> m1_21  [key=0, style=solid, color=green];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_21 -> m1_23  [key=2, style=dotted];
m1_21 -> m1_6  [key=2, style=dotted, color=green];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_4  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_0 -> m1_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendWhen"];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_4  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_2  [key=0, style=solid];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_14 -> m1_17  [key=1, style=dashed, color=green, label="System.Text.StringBuilder"];
m1_14 -> m1_14  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendFormatWhen"];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_17 -> m1_14  [key=2, style=dotted];
m1_17 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_17  [key=0, style=solid, color=green];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_5  [key=2, style=dotted];
m1_16 -> m1_6  [key=2, style=dotted];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_23 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_23 -> m1_23  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendIfNotEmpty"];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_26 -> m1_6  [key=2, style=dotted];
m1_26 -> m1_24  [key=0, style=solid];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_24  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_23  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_6  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_10  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m3_5 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m3_5 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
}
