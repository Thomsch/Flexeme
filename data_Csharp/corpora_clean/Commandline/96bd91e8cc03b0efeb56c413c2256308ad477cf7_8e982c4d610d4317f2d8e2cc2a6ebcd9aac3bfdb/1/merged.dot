digraph  {
n109 [label="System.StringComparer", span=""];
n110 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n111 [label="System.StringComparer", span=""];
n112 [label=optionSpecs, span=""];
n113 [label="System.Globalization.CultureInfo", span=""];
n114 [label=token, span=""];
n0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n1 [label="return InstanceBuilder.Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22", cluster="lambda expression"];
n12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22", cluster="lambda expression"];
n6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25", cluster="lambda expression"];
n16 [label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression"];
n2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n4 [label="Entry lambda expression", span="20-27", cluster="lambda expression"];
n9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)"];
n11 [label="Entry lambda expression", span="22-22", cluster="lambda expression"];
n7 [label="return explodedTokens;", span="26-26", cluster="lambda expression"];
n10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="52-52", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)"];
n15 [label="Entry lambda expression", span="25-25", cluster="lambda expression"];
n8 [label="Exit lambda expression", span="20-27", cluster="lambda expression"];
n13 [label="Exit lambda expression", span="22-22", cluster="lambda expression"];
n14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n17 [label="Exit lambda expression", span="25-25", cluster="lambda expression"];
n18 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n19 [label="var instance = factory()", span="40-40", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n20 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer))", span="61-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0];
n66 [label="TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer)", span="63-63", cluster="lambda expression", color=red, community=0];
n27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n70 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68", cluster="lambda expression"];
n28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n74 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74", cluster="lambda expression"];
n29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n77 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78", cluster="lambda expression"];
n35 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n21 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="44-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n22 [label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="50-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n31 [label="instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptor() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0];
n36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n38 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)"];
n23 [label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="53-55", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n41 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n42 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)"];
n59 [label="Entry lambda expression", span="50-51", cluster="lambda expression"];
n43 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate"];
n44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
n25 [label="var tokens = tokenizerResult.Value", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n45 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)"];
n33 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n46 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)"];
n65 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n47 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()"];
n48 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues"];
n69 [label="Entry lambda expression", span="68-68", cluster="lambda expression"];
n30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n49 [label="Entry CommandLine.Core.Specification.IsValue()", span="18-18", cluster="CommandLine.Core.Specification.IsValue()"];
n73 [label="Entry lambda expression", span="74-74", cluster="lambda expression"];
n50 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)"];
n51 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n52 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification"];
n76 [label="Entry lambda expression", span="78-78", cluster="lambda expression"];
n53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n32 [label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n54 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)"];
n80 [label="Entry lambda expression", span="84-84", cluster="lambda expression"];
n84 [label="Entry lambda expression", span="85-85", cluster="lambda expression"];
n88 [label="Entry lambda expression", span="87-87", cluster="lambda expression"];
n92 [label="Entry lambda expression", span="88-88", cluster="lambda expression"];
n95 [label="Entry lambda expression", span="90-92", cluster="lambda expression"];
n100 [label="Entry lambda expression", span="93-93", cluster="lambda expression"];
n55 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)"];
n56 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n106 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
n34 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)"];
n57 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
n58 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
n39 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()"];
n40 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n60 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="50-51", cluster="lambda expression"];
n61 [label="Exit lambda expression", span="50-51", cluster="lambda expression"];
n62 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)"];
n63 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()"];
n64 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)"];
n67 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n68 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n71 [label="Exit lambda expression", span="68-68", cluster="lambda expression"];
n72 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)"];
n75 [label="Exit lambda expression", span="74-74", cluster="lambda expression"];
n78 [label="Exit lambda expression", span="78-78", cluster="lambda expression"];
n79 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)"];
n81 [label="sp.Value.IsJust()", span="84-84", cluster="lambda expression"];
n82 [label="Exit lambda expression", span="84-84", cluster="lambda expression"];
n83 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()"];
n85 [label="sp.Value.FromJust()", span="85-85", cluster="lambda expression"];
n86 [label="Exit lambda expression", span="85-85", cluster="lambda expression"];
n87 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)"];
n89 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87", cluster="lambda expression"];
n90 [label="Exit lambda expression", span="87-87", cluster="lambda expression"];
n91 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()"];
n93 [label="sp.Specification.DefaultValue.FromJust()", span="88-88", cluster="lambda expression"];
n94 [label="Exit lambda expression", span="88-88", cluster="lambda expression"];
n96 [label="sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptor() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92", cluster="lambda expression", color=red, community=0];
n97 [label="Exit lambda expression", span="90-92", cluster="lambda expression"];
n98 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()"];
n99 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()"];
n101 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93", cluster="lambda expression"];
n102 [label="Exit lambda expression", span="93-93", cluster="lambda expression"];
n103 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
n104 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
n105 [label="Entry System.Type.CreateEmptyArray()", span="83-83", cluster="System.Type.CreateEmptyArray()"];
n107 [label="e.Value", span="96-96", cluster="lambda expression"];
n108 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
d59 [label="var replaces = tokens.Select((t, i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="63-66", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", color=green, community=0];
d57 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d58 [label="var tokens = tokenizerResult.SucceededWith()", span="61-61", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d60 [label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t })))", span="68-71", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d42 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
d65 [label="Entry Unk.SkipWhile", span="", cluster="Unk.SkipWhile"];
d68 [label="Entry lambda expression", span="63-66", cluster="lambda expression"];
d77 [label="Entry lambda expression", span="66-66", cluster="lambda expression"];
d81 [label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t }))", span="69-71", cluster="lambda expression"];
d98 [label="var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJust()", span="81-92", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", color=green, community=0];
d97 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
d99 [label="var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJust()", span="94-98", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
d23 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d103 [label="Entry Unk.FromJust", span="", cluster="Unk.FromJust"];
d105 [label="Entry lambda expression", span="84-91", cluster="lambda expression"];
d119 [label="Entry lambda expression", span="91-91", cluster="lambda expression"];
d124 [label="indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>()", span="96-96", cluster="lambda expression"];
d120 [label="i.IsJust()", span="91-91", cluster="lambda expression", color=green, community=0];
d121 [label="Exit lambda expression", span="91-91", cluster="lambda expression"];
d122 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust"];
d63 [label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d135 [label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="127-127", cluster="lambda expression"];
d69 [label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="64-66", cluster="lambda expression"];
d62 [label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="75-75", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d64 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()"];
d61 [label="var flattened = exploded.SelectMany(x => x)", span="73-73", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
d80 [label="Entry lambda expression", span="68-71", cluster="lambda expression"];
d34 [label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="51-51", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d91 [label="t.Text.Split(r.Item2).Select(Token.Value)", span="70-70", cluster="lambda expression"];
d70 [label="Exit lambda expression", span="63-66", cluster="lambda expression"];
d74 [label="Tuple.Create(i + 1, sep)", span="65-65", cluster="lambda expression"];
d79 [label="Exit lambda expression", span="66-66", cluster="lambda expression"];
d78 [label="x.Item1 < 0", span="66-66", cluster="lambda expression"];
d207 [label=replaces, span=""];
d82 [label="Exit lambda expression", span="68-71", cluster="lambda expression"];
d83 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault"];
d84 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe"];
d85 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
d86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
d72 [label="Entry Unk.Return", span="", cluster="Unk.Return"];
d87 [label="Entry lambda expression", span="69-69", cluster="lambda expression"];
d90 [label="Entry lambda expression", span="70-70", cluster="lambda expression"];
d102 [label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
d140 [label="Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)", span="117-118", cluster="lambda expression"];
d106 [label="var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe()", span="86-86", cluster="lambda expression"];
d107 [label="return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.Return(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();", span="87-90", cluster="lambda expression"];
d115 [label="p.IsName() && !nameLookup(p.Text)", span="88-88", cluster="lambda expression"];
d100 [label="var normalized = tokens.Except(toExclude)", span="100-100", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
d123 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
d126 [label="Entry lambda expression", span="97-97", cluster="lambda expression"];
d12 [label="return Result.Succeed(normalized.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="41-41", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d108 [label="Exit lambda expression", span="84-91", cluster="lambda expression"];
d212 [label=indexes, span=""];
d125 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
d30 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
d112 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)"];
d113 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()"];
d127 [label="t.IsJust()", span="97-97", cluster="lambda expression"];
d213 [label="System.StringComparer", span=""];
d129 [label="Entry CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="109-109", cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)"];
d130 [label="return (arguments, optionSpecs) =>\r\n                {\r\n                    var normalize = ignoreUnknownArguments\r\n                        ? toks => Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)\r\n                        : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks);\r\n\r\n                    var tokens = enableDashDash\r\n                        ? Tokenizer.PreprocessDashDash(\r\n                                arguments,\r\n                                args =>\r\n                                    Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize))\r\n                        : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize);\r\n                    var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                    return explodedTokens;\r\n                };", span="114-129", cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)"];
d134 [label="var tokens = enableDashDash\r\n                        ? Tokenizer.PreprocessDashDash(\r\n                                arguments,\r\n                                args =>\r\n                                    Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize))\r\n                        : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize)", span="121-126", cluster="lambda expression"];
d132 [label="Entry lambda expression", span="114-129", cluster="lambda expression"];
d136 [label="return explodedTokens;", span="128-128", cluster="lambda expression"];
d158 [label="Entry lambda expression", span="127-127", cluster="lambda expression"];
d205 [label="System.Func<string, CSharpx.Maybe<char>>", span=""];
d22 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
d71 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
d73 [label="Entry lambda expression", span="65-65", cluster="lambda expression"];
d67 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="15-15", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()"];
d26 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed"];
d66 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany"];
d94 [label="Entry lambda expression", span="73-73", cluster="lambda expression"];
d88 [label="x.Item1 == i", span="69-69", cluster="lambda expression"];
d31 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d33 [label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="50-50", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d35 [label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="52-52", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)"];
d41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)"];
d51 [label="Entry lambda expression", span="51-51", cluster="lambda expression"];
d55 [label="tokens.Concat(values)", span="52-52", cluster="lambda expression"];
d209 [label="CommandLine.Core.Token", span=""];
d92 [label="Exit lambda expression", span="70-70", cluster="lambda expression"];
d93 [label="Entry Unk.Split", span="", cluster="Unk.Split"];
d206 [label=int, span=""];
d75 [label="Exit lambda expression", span="65-65", cluster="lambda expression"];
d76 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
d89 [label="Exit lambda expression", span="69-69", cluster="lambda expression"];
d101 [label="return normalized;", span="102-102", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
d216 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
d133 [label="var normalize = ignoreUnknownArguments\r\n                        ? toks => Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)\r\n                        : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks)", span="116-119", cluster="lambda expression"];
d139 [label="Entry lambda expression", span="117-118", cluster="lambda expression"];
d141 [label="Exit lambda expression", span="117-118", cluster="lambda expression"];
d142 [label="Entry lambda expression", span="118-118", cluster="lambda expression"];
d210 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
d109 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)"];
d110 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()"];
d211 [label="System.Func<string, bool>", span=""];
d111 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()"];
d114 [label="Entry lambda expression", span="88-88", cluster="lambda expression"];
d116 [label="Exit lambda expression", span="88-88", cluster="lambda expression"];
d117 [label="Entry Unk.IsName", span="", cluster="Unk.IsName"];
d118 [label="Entry Unk.nameLookup", span="", cluster="Unk.nameLookup"];
d104 [label="Entry Unk.Except", span="", cluster="Unk.Except"];
d128 [label="Exit lambda expression", span="97-97", cluster="lambda expression"];
d7 [label="var errors = new List<Error>()", span="25-25", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d10 [label="var normalized = normalize(tokens)", span="37-37", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d11 [label="var unkTokens = (from t in normalized where t.IsName() && nameLookup(t.Text) == NameLookupResult.NoOptionFound select t).Memorize()", span="39-39", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d13 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d24 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr"];
d25 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
d28 [label="!unkTokens.Contains(x)", span="41-41", cluster="lambda expression"];
d143 [label="NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound", span="118-118", cluster="lambda expression"];
d150 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize)", span="125-125", cluster="lambda expression"];
d153 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="125-125", cluster="lambda expression"];
d156 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="126-126", cluster="lambda expression"];
d159 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="127-127", cluster="lambda expression"];
d131 [label="Exit CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="109-109", cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)"];
d215 [label=bool, span=""];
d3 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d149 [label="Entry lambda expression", span="124-125", cluster="lambda expression"];
d155 [label="Entry lambda expression", span="126-126", cluster="lambda expression"];
d160 [label="Exit lambda expression", span="127-127", cluster="lambda expression"];
d36 [label="return tokenizer(arguments);", span="54-54", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d173 [label="var r = nameLookup(n)", span="156-156", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d96 [label="Exit lambda expression", span="73-73", cluster="lambda expression"];
d95 [label=x, span="73-73", cluster="lambda expression"];
d208 [label=int, span=""];
d37 [label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d32 [label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="48-48", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
d39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)"];
d48 [label="Entry lambda expression", span="50-50", cluster="lambda expression"];
d43 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)"];
d54 [label="Entry lambda expression", span="52-52", cluster="lambda expression"];
d53 [label="Exit lambda expression", span="51-51", cluster="lambda expression"];
d52 [label="!arg.EqualsOrdinal(''--'')", span="51-51", cluster="lambda expression"];
d204 [label=values, span=""];
d56 [label="Exit lambda expression", span="52-52", cluster="lambda expression"];
d214 [label=bool, span=""];
d138 [label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span="", cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr"];
d147 [label=toks, span="119-119", cluster="lambda expression"];
d144 [label="Exit lambda expression", span="118-118", cluster="lambda expression"];
d8 [label="Action<Error> onError = errors.Add", span="26-26", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d14 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d9 [label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="28-35", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
d20 [label="Entry Unk.normalize", span="", cluster="Unk.normalize"];
d21 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()"];
d19 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize"];
d203 [label=unkTokens, span=""];
d217 [label=normalize, span=""];
d151 [label="Exit lambda expression", span="124-125", cluster="lambda expression"];
d152 [label="Entry lambda expression", span="125-125", cluster="lambda expression"];
d157 [label="Exit lambda expression", span="126-126", cluster="lambda expression"];
d161 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
d1 [label="return Tokenizer.Tokenize(arguments, nameLookup, tokens => tokens);", span="17-17", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d18 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d172 [label="var n = new string(c, 1)", span="155-155", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d174 [label="i > 0 && r == NameLookupResult.NoOptionFound", span="158-158", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d177 [label="r == NameLookupResult.OtherOptionFound", span="162-162", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d38 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
d44 [label="Entry lambda expression", span="48-48", cluster="lambda expression"];
d50 [label="Exit lambda expression", span="50-50", cluster="lambda expression"];
d49 [label="!arg.EqualsOrdinal(''--'')", span="50-50", cluster="lambda expression"];
d47 [label="Entry string.EqualsOrdinal(string)", span="40-40", cluster="string.EqualsOrdinal(string)"];
d146 [label="Entry lambda expression", span="119-119", cluster="lambda expression"];
d148 [label="Exit lambda expression", span="119-119", cluster="lambda expression"];
d15 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)"];
d16 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)"];
d17 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="172-172", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d2 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d180 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d162 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="136-136", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d165 [label="yield return Token.Value(value);", span="142-142", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d166 [label="yield break;", span="143-143", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d168 [label="yield return Token.Name(text);", span="148-148", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d169 [label="yield break;", span="149-149", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d176 [label="yield return Token.Name(n);", span="160-160", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d179 [label="yield return Token.Value(text.Substring(i));", span="167-167", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d163 [label="var text = value.Substring(1)", span="138-138", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d167 [label="value.Length == 2", span="146-146", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d171 [label=text, span="153-153", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d184 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
d170 [label="var i = 0", span="152-152", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d175 [label="i++", span="159-159", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d178 [label="i < text.Length", span="165-165", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d46 [label="Exit lambda expression", span="48-48", cluster="lambda expression"];
d45 [label="arg.EqualsOrdinal(''--'')", span="48-48", cluster="lambda expression"];
d185 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="176-176", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d197 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="172-172", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d189 [label="yield return Token.Name(text);", span="182-182", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d190 [label="yield break;", span="183-183", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d193 [label="yield break;", span="188-188", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d195 [label="yield return Token.Name(parts[0]);", span="191-191", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d196 [label="yield return Token.Value(parts[1], true);", span="192-192", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d186 [label="var text = value.Substring(2)", span="178-178", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d192 [label="onError(new BadFormatTokenError(value))", span="187-187", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d164 [label="char.IsDigit(text[0])", span="140-140", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)"];
d183 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)"];
d181 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
d188 [label="equalIndex <= 0", span="180-180", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d191 [label="equalIndex == 1", span="185-185", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d194 [label="var parts = text.Split('=')", span="190-190", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d202 [label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29", cluster="CommandLine.Core.Token.Value(string, bool)"];
d187 [label="var equalIndex = text.IndexOf('=')", span="179-179", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)"];
d199 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="221-221", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)"];
d200 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
d182 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)"];
d201 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
d198 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)"];
m0_0 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_1 [label="var writer = new StringWriter()", span="18-18", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_2 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="19-19", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_4 [label="var text = writer.ToString()", span="25-25", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_3 [label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="22-22", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", color=red, community=0, file="ReflectionExtensions.cs"];
m0_5 [label="Assert.True(text.Length > 0)", span="26-26", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_6 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ReflectionExtensions.cs"];
m0_100 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_101 [label="var expectedError = new HelpRequestedError()", span="187-187", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_102 [label="var sut = new Parser()", span="188-188", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_105 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_103 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_104 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_106 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ReflectionExtensions.cs"];
m0_160 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="252-252", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_161 [label="var help = new StringWriter()", span="255-255", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_162 [label="var sut = new Parser(config => config.HelpWriter = help)", span="256-256", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_164 [label="var result = help.ToString()", span="260-260", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_163 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="259-259", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_165 [label="result.Length.Should().BeGreaterThan(0)", span="263-263", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_166 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="264-264", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_167 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_168 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="266-266", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_169 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="267-267", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_170 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="268-268", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_171 [label="lines[4].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_172 [label="lines[5].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="270-270", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_173 [label="lines[6].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="271-271", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_174 [label="lines[7].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="272-272", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_175 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="252-252", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ReflectionExtensions.cs"];
m0_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ReflectionExtensions.cs"];
m0_79 [label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ReflectionExtensions.cs"];
m0_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="ReflectionExtensions.cs"];
m0_118 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_119 [label="var help = new StringWriter()", span="203-203", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_120 [label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_122 [label="var result = help.ToString()", span="208-208", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_121 [label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_123 [label="result.Length.Should().BeGreaterThan(0)", span="211-211", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_124 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ReflectionExtensions.cs"];
m0_46 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_47 [label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="84-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_48 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="91-91", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_50 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_49 [label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="94-95", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_51 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ReflectionExtensions.cs"];
m0_110 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="ReflectionExtensions.cs"];
m0_199 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", span="300-300", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_200 [label="var help = new StringWriter()", span="303-303", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_201 [label="var sut = new Parser(config => config.HelpWriter = help)", span="304-304", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_203 [label="var result = help.ToString()", span="308-308", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_202 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''--version'' })", span="307-307", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_204 [label="result.Length.Should().BeGreaterThan(0)", span="311-311", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_205 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="312-312", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_206 [label="lines.Should().HaveCount(x => x == 1)", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_207 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="314-314", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_208 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", span="300-300", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_64 [label="Entry Unk.>", span="", cluster="Unk.>", file="ReflectionExtensions.cs"];
m0_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ReflectionExtensions.cs"];
m0_33 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionExtensions.cs"];
m0_83 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_84 [label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_85 [label="var sut = new Parser()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_88 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_86 [label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_87 [label="Assert.IsType<CloneOptions>(result.Value)", span="162-162", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_89 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_177 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ReflectionExtensions.cs"];
m0_56 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_57 [label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_58 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_61 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_59 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_60 [label="Assert.IsType<AddOptions>(result.Value)", span="119-119", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_62 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ReflectionExtensions.cs"];
m0_71 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="ReflectionExtensions.cs"];
m0_125 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="ReflectionExtensions.cs"];
m0_129 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_130 [label="var expectedError = new VersionRequestedError()", span="219-219", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_131 [label="var sut = new Parser()", span="220-220", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_134 [label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_132 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_133 [label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_135 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ReflectionExtensions.cs"];
m0_136 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ReflectionExtensions.cs"];
m0_44 [label="Entry CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="ReflectionExtensions.cs"];
m0_182 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_183 [label="var help = new StringWriter()", span="280-280", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_184 [label="var sut = new Parser(config => config.HelpWriter = help)", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_186 [label="var result = help.ToString()", span="285-285", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_185 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_187 [label="result.Length.Should().BeGreaterThan(0)", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_188 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="289-289", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_189 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="290-290", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_190 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="291-291", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_191 [label="lines[2].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_192 [label="lines[3].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="293-293", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_193 [label="lines[4].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="294-294", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_194 [label="lines[5].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="295-295", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_195 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_209 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_13 [label="with.HelpWriter = writer", span="19-19", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_24 [label="with.HelpWriter = writer", span="35-35", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_23 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_25 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_35 [label="with.HelpWriter = writer", span="51-51", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_34 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_36 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_54 [label="with.EnableDashDash = true", span="91-91", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_53 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_55 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_66 [label="with.EnableDashDash = true", span="111-111", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_68 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_65 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_67 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_69 [label="o.RespectingRuntimeTypes()", span="120-120", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_70 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_80 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_81 [label="o.RespectingRuntimeTypes()", span="142-142", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_82 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_90 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_91 [label="o.RespectingRuntimeTypes()", span="163-163", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_92 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_115 [label="e.Equals(expectedError)", span="195-195", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_111 [label="Entry lambda expression", span="194-194", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_114 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_112 [label="x == 1", span="194-194", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_113 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_116 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_127 [label="config.HelpWriter = help", span="204-204", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_126 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_128 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_141 [label="e.Equals(expectedError)", span="227-227", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_137 [label="Entry lambda expression", span="226-226", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_140 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_138 [label="x == 1", span="226-226", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_139 [label="Exit lambda expression", span="226-226", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_142 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_158 [label="config.HelpWriter = help", span="239-239", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_155 [label="config.HelpWriter = version", span="237-237", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_154 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_156 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_157 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_159 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_180 [label="config.HelpWriter = help", span="256-256", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_179 [label="Entry lambda expression", span="256-256", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_181 [label="Exit lambda expression", span="256-256", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_197 [label="config.HelpWriter = help", span="281-281", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_196 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_198 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_210 [label="config.HelpWriter = help", span="304-304", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_212 [label="Entry lambda expression", span="313-313", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_211 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_213 [label="x == 1", span="313-313", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_214 [label="Exit lambda expression", span="313-313", cluster="lambda expression", file="ReflectionExtensions.cs"];
m0_26 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_27 [label="var writer = new StringWriter()", span="50-50", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_28 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_30 [label="var text = writer.ToString()", span="57-57", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_29 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_31 [label="Assert.True(text.Length > 0)", span="58-58", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_32 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ReflectionExtensions.cs"];
m0_108 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ReflectionExtensions.cs"];
m0_117 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="ReflectionExtensions.cs"];
m0_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ReflectionExtensions.cs"];
m0_178 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="ReflectionExtensions.cs"];
m0_109 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="ReflectionExtensions.cs"];
m0_99 [label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ReflectionExtensions.cs"];
m0_63 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ReflectionExtensions.cs"];
m0_37 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_38 [label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_39 [label="var sut = new Parser()", span="70-70", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_41 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_40 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_42 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ReflectionExtensions.cs"];
m0_143 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_144 [label="var help = new StringWriter()", span="235-235", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_145 [label="var version = new StringWriter()", span="236-236", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_147 [label="new Parser(config => config.HelpWriter = help).ParseArguments<FakeOptions>(new[] { ''--help'' })", span="239-239", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_148 [label="var helpText = help.ToString()", span="240-240", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_146 [label="var sut = new Parser(config => config.HelpWriter = version)", span="237-237", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_150 [label="var result = version.ToString()", span="244-244", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_149 [label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="243-243", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_151 [label="result.Length.Should().BeLessThan(helpText.Length)", span="247-247", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_152 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ReflectionExtensions.cs"];
m0_93 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_94 [label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_95 [label="var sut = new Parser()", span="173-173", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_97 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_96 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_98 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ReflectionExtensions.cs"];
m0_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_16 [label="var writer = new StringWriter()", span="34-34", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_19 [label="var text = writer.ToString()", span="41-41", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_18 [label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_20 [label="Assert.True(text.Length > 0)", span="42-42", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ReflectionExtensions.cs"];
m0_176 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="ReflectionExtensions.cs"];
m0_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ReflectionExtensions.cs"];
m0_72 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_73 [label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_74 [label="var sut = new Parser()", span="133-133", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_77 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_75 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_76 [label="Assert.IsType<CloneOptions>(result.Value)", span="141-141", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_78 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ReflectionExtensions.cs"];
m0_43 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ReflectionExtensions.cs"];
m0_153 [label="Entry Unk.BeLessThan", span="", cluster="Unk.BeLessThan", file="ReflectionExtensions.cs"];
m0_52 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ReflectionExtensions.cs"];
m0_45 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ReflectionExtensions.cs"];
m0_215 [label=writer, span="", file="ReflectionExtensions.cs"];
m0_216 [label=writer, span="", file="ReflectionExtensions.cs"];
m0_217 [label=writer, span="", file="ReflectionExtensions.cs"];
m0_218 [label=expectedError, span="", file="ReflectionExtensions.cs"];
m0_219 [label=help, span="", file="ReflectionExtensions.cs"];
m0_220 [label=expectedError, span="", file="ReflectionExtensions.cs"];
m0_221 [label=version, span="", file="ReflectionExtensions.cs"];
m0_222 [label=help, span="", file="ReflectionExtensions.cs"];
m0_223 [label=help, span="", file="ReflectionExtensions.cs"];
m0_224 [label=help, span="", file="ReflectionExtensions.cs"];
m0_225 [label=help, span="", file="ReflectionExtensions.cs"];
m2_0 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="Sequence.cs"];
m2_1 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Past, defaultPrecision)", span="18-18", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="Sequence.cs"];
m2_2 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="Sequence.cs"];
m2_22 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", span="113-113", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", file="Sequence.cs"];
m2_23 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future, defaultPrecision)", span="115-115", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", file="Sequence.cs"];
m2_24 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", span="113-113", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", file="Sequence.cs"];
m2_28 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", span="141-141", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="Sequence.cs"];
m2_29 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future, defaultPrecision)", span="143-143", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="Sequence.cs"];
m2_30 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", span="141-141", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="Sequence.cs"];
m2_34 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", file="Sequence.cs"];
m2_35 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future, defaultPrecision)", span="169-169", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", file="Sequence.cs"];
m2_36 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", file="Sequence.cs"];
m2_40 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", file="Sequence.cs"];
m2_41 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future, defaultPrecision)", span="185-185", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", file="Sequence.cs"];
m2_42 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", file="Sequence.cs"];
m2_3 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="Sequence.cs"];
m2_10 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", span="56-56", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", file="Sequence.cs"];
m2_11 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future, defaultPrecision)", span="58-58", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", color=green, community=0, file="Sequence.cs"];
m2_12 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", span="56-56", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", file="Sequence.cs"];
m2_16 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", file="Sequence.cs"];
m2_17 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future, defaultPrecision)", span="86-86", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", file="Sequence.cs"];
m2_18 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", file="Sequence.cs"];
m2_25 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="Sequence.cs"];
m2_26 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past, defaultPrecision)", span="129-129", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="Sequence.cs"];
m2_27 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="Sequence.cs"];
m2_13 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", span="70-70", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", file="Sequence.cs"];
m2_14 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past, defaultPrecision)", span="72-72", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", file="Sequence.cs"];
m2_15 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", span="70-70", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", file="Sequence.cs"];
m2_19 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="Sequence.cs"];
m2_20 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past, defaultPrecision)", span="101-101", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="Sequence.cs"];
m2_21 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="Sequence.cs"];
m2_31 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", span="154-154", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", file="Sequence.cs"];
m2_32 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past, defaultPrecision)", span="156-156", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", file="Sequence.cs"];
m2_33 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", span="154-154", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", file="Sequence.cs"];
m2_7 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", span="42-42", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="Sequence.cs"];
m2_8 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past, defaultPrecision)", span="44-44", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="Sequence.cs"];
m2_9 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", span="42-42", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="Sequence.cs"];
m2_4 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="Sequence.cs"];
m2_5 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Future, defaultPrecision)", span="30-30", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="Sequence.cs"];
m2_6 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="Sequence.cs"];
m2_37 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", file="Sequence.cs"];
m2_38 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past, defaultPrecision)", span="177-177", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", file="Sequence.cs"];
m2_39 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", file="Sequence.cs"];
m4_109 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="SpecificationGuards.cs"];
m4_27 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="SpecificationGuards.cs"];
m4_16 [label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="73-73", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_17 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="75-75", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_20 [label="var map = new OptionMap(list.Count, settings)", span="80-80", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_24 [label="map.RawOptions = target", span="88-88", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_18 [label="list == null", span="76-76", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_21 [label=list, span="81-81", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_19 [label="return null;", span="78-78", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_23 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="85-85", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_25 [label="return map;", span="89-89", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_22 [label="pair.Left != null && pair.Right != null", span="83-83", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_26 [label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="73-73", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_39 [label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="128-128", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_58 [label="_property.PropertyType.IsEnum", span="132-132", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_60 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="136-136", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_62 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="143-143", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_59 [label=_setValueLock, span="134-134", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_61 [label=_setValueLock, span="141-141", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_63 [label=InvalidCastException, span="147-147", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_65 [label=FormatException, span="148-148", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_67 [label=ArgumentException, span="149-149", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_69 [label=OverflowException, span="150-150", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_71 [label="return true;", span="151-151", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_64 [label="return false;", span="147-147", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_66 [label="return false;", span="148-148", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_68 [label="return false;", span="149-149", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_70 [label="return false;", span="150-150", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_72 [label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="128-128", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="SpecificationGuards.cs"];
m4_54 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="SpecificationGuards.cs"];
m4_28 [label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="SpecificationGuards.cs"];
m4_57 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="SpecificationGuards.cs"];
m4_56 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="SpecificationGuards.cs"];
m4_55 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="SpecificationGuards.cs"];
m4_29 [label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="92-92", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_30 [label="_attribute is OptionListAttribute", span="94-94", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_31 [label="return SetValueList(value, options);", span="96-96", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_33 [label="return SetNullableValue(value, options);", span="100-100", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_34 [label="return SetValueScalar(value, options);", span="102-102", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_32 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="98-98", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_35 [label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="92-92", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="SpecificationGuards.cs"];
m4_38 [label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="154-154", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_74 [label="var nc = new NullableConverter(_property.PropertyType)", span="156-156", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_76 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="161-161", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_75 [label=_setValueLock, span="159-159", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_77 [label=Exception, span="166-166", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_79 [label="return true;", span="170-170", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_78 [label="return false;", span="168-168", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_80 [label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="154-154", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="SpecificationGuards.cs"];
m4_83 [label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="173-173", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="SpecificationGuards.cs"];
m4_84 [label=_setValueLock, span="175-175", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="SpecificationGuards.cs"];
m4_85 [label="_property.SetValue(options, value, null)", span="177-177", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="SpecificationGuards.cs"];
m4_86 [label="return true;", span="178-178", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="SpecificationGuards.cs"];
m4_87 [label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="173-173", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="SpecificationGuards.cs"];
m4_101 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="SpecificationGuards.cs"];
m4_0 [label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="44-44", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_1 [label="attribute == null", span="46-46", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_3 [label="property == null", span="50-50", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_5 [label="_required = attribute.Required", span="54-54", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_6 [label="_helpText = attribute.HelpText", span="55-55", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_7 [label="_shortName = attribute.ShortName", span="56-56", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_8 [label="_longName = attribute.LongName", span="57-57", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_9 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="58-58", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_10 [label="_defaultValue = attribute.DefaultValue", span="59-59", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_11 [label="_hasDefaultValue = attribute.HasDefaultValue", span="60-60", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_12 [label="_attribute = attribute", span="61-61", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_13 [label="_property = property", span="62-62", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_2 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="48-48", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_4 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="52-52", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_14 [label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="44-44", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="SpecificationGuards.cs"];
m4_37 [label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="SpecificationGuards.cs"];
m4_73 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="SpecificationGuards.cs"];
m4_53 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="SpecificationGuards.cs"];
m4_81 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="SpecificationGuards.cs"];
m4_98 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SpecificationGuards.cs"];
m4_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SpecificationGuards.cs"];
m4_82 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="SpecificationGuards.cs"];
m4_102 [label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="197-197", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="SpecificationGuards.cs"];
n109 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n109 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n109 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n109 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n110 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n110 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n111 -> n66  [key=1, style=dashed, color=red, label="System.StringComparer"];
n111 -> n77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n112 -> n66  [key=1, style=dashed, color=red, label=optionSpecs];
n113 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n113 -> n74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n114 -> n77  [key=1, style=dashed, color=darkseagreen4, label=token];
n0 -> n1  [key=0, style=solid];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n1 -> n1  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
n5 -> n6  [key=0, style=solid];
n5 -> n9  [key=2, style=dotted];
n5 -> n11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n6 -> n15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n19  [key=0, style=solid];
n3 -> n20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n3 -> n24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
n3 -> n26  [key=1, style=dashed, color=red, label="System.StringComparer"];
n3 -> n66  [key=1, style=dashed, color=red, label="System.StringComparer"];
n3 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n28  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n29  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n4 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n11 -> n12  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n8 -> n4  [key=0, style=bold, color=blue];
n8 -> d132  [key=0, style=bold, color=blue];
n13 -> n11  [key=0, style=bold, color=blue];
n13 -> d152  [key=0, style=bold, color=blue];
n17 -> n15  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n35  [key=2, style=dotted];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label=instance];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=instance];
n19 -> n31  [key=1, style=dashed, color=red, label=instance];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n20 -> n36  [key=2, style=dotted];
n20 -> n37  [key=2, style=dotted];
n20 -> n38  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n45  [key=2, style=dotted];
n24 -> n33  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
n26 -> n27  [key=0, style=solid, color=red];
n26 -> n46  [key=2, style=dotted, color=red];
n26 -> n65  [key=1, style=dashed, color=red, label="lambda expression"];
n26 -> n28  [key=1, style=dashed, color=red, label=partitions];
n26 -> n29  [key=1, style=dashed, color=red, label=partitions];
n66 -> n67  [key=0, style=solid, color=red];
n66 -> n68  [key=2, style=dotted, color=red];
n27 -> n28  [key=0, style=solid];
n27 -> n47  [key=2, style=dotted];
n27 -> n48  [key=2, style=dotted];
n27 -> n27  [key=1, style=dashed, color=darkseagreen4, label=pt];
n27 -> n69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n27 -> n30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
n27 -> n33  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n49  [key=2, style=dotted];
n28 -> n48  [key=2, style=dotted];
n28 -> n28  [key=1, style=dashed, color=darkseagreen4, label=pt];
n28 -> n73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n28 -> n30  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
n28 -> n33  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
n74 -> n75  [key=0, style=solid];
n74 -> n72  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n50  [key=2, style=dotted];
n29 -> n51  [key=2, style=dotted];
n29 -> n52  [key=2, style=dotted];
n29 -> n29  [key=1, style=dashed, color=darkseagreen4, label=token];
n29 -> n76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n29 -> n77  [key=1, style=dashed, color=darkseagreen4, label=token];
n29 -> n33  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [key=2, style=dotted];
n21 -> n34  [key=0, style=solid];
n21 -> n39  [key=2, style=dotted];
n21 -> n40  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n41  [key=2, style=dotted];
n22 -> n42  [key=2, style=dotted];
n22 -> n59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n22 -> n27  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n22 -> n28  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n31 -> n32  [key=0, style=solid, color=red];
n31 -> n54  [key=2, style=dotted, color=red];
n31 -> n31  [key=1, style=dashed, color=red, label=instance];
n31 -> n80  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n84  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n88  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n92  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n95  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n100  [key=1, style=dashed, color=red, label="lambda expression"];
n31 -> n33  [key=1, style=dashed, color=red, label=instance];
n23 -> n24  [key=0, style=solid];
n23 -> n43  [key=2, style=dotted];
n23 -> n44  [key=2, style=dotted];
n23 -> n23  [key=1, style=dashed, color=darkseagreen4, label=pt];
n23 -> n26  [key=1, style=dashed, color=red, label=optionSpecs];
n23 -> n66  [key=1, style=dashed, color=red, label=optionSpecs];
n23 -> n29  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n59 -> n60  [key=0, style=solid];
n25 -> n26  [key=0, style=solid, color=red];
n33 -> n34  [key=0, style=solid];
n33 -> n57  [key=2, style=dotted];
n33 -> n58  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid, color=red];
n69 -> n70  [key=0, style=solid];
n30 -> n31  [key=0, style=solid, color=red];
n30 -> n53  [key=2, style=dotted];
n30 -> n32  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n73 -> n74  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n55  [key=2, style=dotted];
n32 -> n44  [key=2, style=dotted];
n32 -> n56  [key=2, style=dotted];
n32 -> n106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n80 -> n81  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n95 -> n96  [key=0, style=solid, color=red];
n95 -> d28  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n34 -> n3  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=2, style=dotted];
n60 -> n63  [key=2, style=dotted];
n60 -> n64  [key=2, style=dotted];
n61 -> n59  [key=0, style=bold, color=blue];
n67 -> n65  [key=0, style=bold, color=blue];
n71 -> n69  [key=0, style=bold, color=blue];
n75 -> n73  [key=0, style=bold, color=blue];
n78 -> n76  [key=0, style=bold, color=blue];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=2, style=dotted];
n82 -> n80  [key=0, style=bold, color=blue];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=2, style=dotted];
n86 -> n84  [key=0, style=bold, color=blue];
n89 -> n90  [key=0, style=solid];
n89 -> n91  [key=2, style=dotted];
n89 -> n83  [key=2, style=dotted];
n90 -> n88  [key=0, style=bold, color=blue];
n93 -> n94  [key=0, style=solid];
n93 -> n87  [key=2, style=dotted];
n94 -> n92  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid, color=red];
n96 -> n91  [key=2, style=dotted, color=red];
n96 -> n98  [key=2, style=dotted, color=red];
n96 -> n99  [key=2, style=dotted, color=red];
n97 -> n95  [key=0, style=bold, color=blue];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=2, style=dotted];
n101 -> n104  [key=2, style=dotted];
n101 -> n105  [key=2, style=dotted];
n102 -> n100  [key=0, style=bold, color=blue];
n107 -> n108  [key=0, style=solid];
n108 -> n106  [key=0, style=bold, color=blue];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> d42  [key=2, style=dotted, color=green];
d59 -> d65  [key=2, style=dotted, color=green];
d59 -> d68  [key=1, style=dashed, color=green, label="lambda expression"];
d59 -> d77  [key=1, style=dashed, color=green, label="lambda expression"];
d59 -> d81  [key=1, style=dashed, color=green, label=replaces];
d57 -> d59  [key=1, style=dashed, color=green, label="System.Func<string, CSharpx.Maybe<char>>"];
d57 -> d58  [key=0, style=solid];
d57 -> d69  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
d57 -> d62  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>"];
d58 -> d59  [key=0, style=solid, color=green];
d58 -> d64  [key=2, style=dotted];
d58 -> d60  [key=1, style=dashed, color=darkseagreen4, label=tokens];
d60 -> d61  [key=0, style=solid];
d60 -> d42  [key=2, style=dotted];
d60 -> d80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d68 -> d69  [key=0, style=solid];
d68 -> d74  [key=1, style=dashed, color=darkseagreen4, label=int];
d77 -> d78  [key=0, style=solid];
d81 -> d82  [key=0, style=solid];
d81 -> d83  [key=2, style=dotted];
d81 -> d84  [key=2, style=dotted];
d81 -> d85  [key=2, style=dotted];
d81 -> d86  [key=2, style=dotted];
d81 -> d72  [key=2, style=dotted];
d81 -> d87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d81 -> d90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d98 -> d98  [key=1, style=dashed, color=green, label=i];
d98 -> d99  [key=0, style=solid, color=green];
d98 -> d42  [key=2, style=dotted, color=green];
d98 -> d23  [key=2, style=dotted, color=green];
d98 -> d103  [key=2, style=dotted, color=green];
d98 -> d105  [key=1, style=dashed, color=green, label="lambda expression"];
d98 -> d119  [key=1, style=dashed, color=green, label="lambda expression"];
d98 -> d124  [key=1, style=dashed, color=green, label=indexes];
d97 -> d98  [key=0, style=solid, color=green];
d97 -> d106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d97 -> d107  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
d97 -> d115  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
d97 -> d99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d97 -> d100  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d99 -> d42  [key=2, style=dotted];
d99 -> d99  [key=1, style=dashed, color=darkseagreen4, label=t];
d99 -> d100  [key=0, style=solid];
d99 -> d23  [key=2, style=dotted];
d99 -> d103  [key=2, style=dotted];
d99 -> d123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d99 -> d126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d105 -> d106  [key=0, style=solid];
d105 -> d107  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
d119 -> d120  [key=0, style=solid, color=green];
d124 -> d125  [key=0, style=solid];
d124 -> d30  [key=2, style=dotted];
d124 -> d112  [key=2, style=dotted];
d124 -> d113  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid, color=green];
d120 -> d122  [key=2, style=dotted, color=green];
d121 -> d119  [key=0, style=bold, color=blue];
d63 -> d57  [key=0, style=bold, color=blue];
d135 -> d57  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d135 -> d158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d69 -> d70  [key=0, style=solid];
d69 -> d22  [key=2, style=dotted];
d69 -> d71  [key=2, style=dotted];
d69 -> d72  [key=2, style=dotted];
d69 -> d73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d62 -> d63  [key=0, style=solid];
d62 -> d67  [key=2, style=dotted];
d62 -> d26  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d61 -> d66  [key=2, style=dotted];
d61 -> d94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d80 -> d81  [key=0, style=solid];
d80 -> d88  [key=1, style=dashed, color=darkseagreen4, label=int];
d80 -> d91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
d34 -> d42  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d40  [key=2, style=dotted];
d34 -> d41  [key=2, style=dotted];
d34 -> d51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d34 -> d55  [key=1, style=dashed, color=darkseagreen4, label=values];
d91 -> d42  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d91 -> d93  [key=2, style=dotted];
d70 -> d68  [key=0, style=bold, color=blue];
d74 -> d75  [key=0, style=solid];
d74 -> d76  [key=2, style=dotted];
d79 -> d77  [key=0, style=bold, color=blue];
d78 -> d79  [key=0, style=solid];
d207 -> d81  [key=1, style=dashed, color=darkseagreen4, label=replaces];
d82 -> d80  [key=0, style=bold, color=blue];
d87 -> d88  [key=0, style=solid];
d90 -> d91  [key=0, style=solid];
d102 -> d97  [key=0, style=bold, color=blue];
d140 -> d97  [key=2, style=dotted];
d140 -> d141  [key=0, style=solid];
d140 -> d142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d106 -> d107  [key=0, style=solid];
d106 -> d109  [key=2, style=dotted];
d106 -> d110  [key=2, style=dotted];
d107 -> d72  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d107 -> d111  [key=2, style=dotted];
d107 -> d112  [key=2, style=dotted];
d107 -> d113  [key=2, style=dotted];
d107 -> d114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d115 -> d116  [key=0, style=solid];
d115 -> d117  [key=2, style=dotted];
d115 -> d118  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d100 -> d104  [key=2, style=dotted];
d123 -> d124  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d12 -> d23  [key=2, style=dotted];
d12 -> d12  [key=1, style=dashed, color=darkseagreen4, label=t];
d12 -> d13  [key=0, style=solid];
d12 -> d24  [key=2, style=dotted];
d12 -> d25  [key=2, style=dotted];
d12 -> d26  [key=2, style=dotted];
d12 -> n95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d108 -> d105  [key=0, style=bold, color=blue];
d212 -> d124  [key=1, style=dashed, color=darkseagreen4, label=indexes];
d125 -> d123  [key=0, style=bold, color=blue];
d127 -> d122  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d213 -> d135  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d133  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d143  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d134  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d150  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d153  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d156  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d213 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d135  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d130  [key=0, style=solid];
d129 -> d133  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d143  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d134  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d150  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d153  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d156  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d129 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
d130 -> d135  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d131  [key=0, style=solid];
d130 -> d133  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d143  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d134  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d130 -> d150  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d153  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d156  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d130 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d134 -> d135  [key=0, style=solid];
d134 -> d31  [key=2, style=dotted];
d134 -> d3  [key=2, style=dotted];
d134 -> d149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d134 -> d155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d132 -> d135  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d134  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d132 -> d133  [key=0, style=solid];
d132 -> d143  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d150  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d153  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d156  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d132 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d136 -> n8  [key=0, style=solid];
d158 -> d159  [key=0, style=solid];
d205 -> d69  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
d73 -> d74  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d31 -> d34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d31 -> d36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d33 -> d34  [key=0, style=solid];
d33 -> d22  [key=2, style=dotted];
d33 -> d39  [key=2, style=dotted];
d33 -> d48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d33 -> d35  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
d35 -> d37  [key=0, style=solid];
d35 -> d43  [key=2, style=dotted];
d35 -> d54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d51 -> d52  [key=0, style=solid];
d55 -> d56  [key=0, style=solid];
d55 -> d25  [key=2, style=dotted];
d209 -> d91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
d92 -> d90  [key=0, style=bold, color=blue];
d206 -> d74  [key=1, style=dashed, color=darkseagreen4, label=int];
d75 -> d73  [key=0, style=bold, color=blue];
d89 -> d87  [key=0, style=bold, color=blue];
d101 -> d102  [key=0, style=solid];
d216 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d216 -> d143  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d216 -> d150  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d216 -> d153  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d216 -> d156  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d216 -> d159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
d133 -> d140  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d133 -> d134  [key=0, style=solid];
d133 -> d138  [key=2, style=dotted];
d133 -> d147  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d133 -> d150  [key=1, style=dashed, color=darkseagreen4, label=normalize];
d139 -> d140  [key=0, style=solid];
d141 -> d139  [key=0, style=bold, color=blue];
d142 -> d143  [key=0, style=solid];
d210 -> d106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
d211 -> d107  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
d211 -> d115  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
d114 -> d115  [key=0, style=solid];
d116 -> d114  [key=0, style=bold, color=blue];
d128 -> d126  [key=0, style=bold, color=blue];
d7 -> d12  [key=1, style=dashed, color=darkseagreen4, label=errors];
d7 -> d8  [key=0, style=solid];
d7 -> d14  [key=2, style=dotted];
d10 -> d12  [key=1, style=dashed, color=darkseagreen4, label=normalized];
d10 -> d11  [key=0, style=solid];
d10 -> d20  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d11 -> d22  [key=2, style=dotted];
d11 -> d11  [key=1, style=dashed, color=darkseagreen4, label=t];
d11 -> d21  [key=2, style=dotted];
d11 -> d19  [key=2, style=dotted];
d11 -> d28  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
d13 -> d3  [key=0, style=bold, color=blue];
d28 -> d30  [key=2, style=dotted];
d28 -> n97  [key=0, style=solid];
d143 -> d144  [key=0, style=solid];
d143 -> n14  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d150 -> d3  [key=2, style=dotted];
d150 -> d152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d153 -> n13  [key=0, style=solid];
d153 -> n14  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d156 -> n14  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d159 -> d161  [key=2, style=dotted];
d131 -> d129  [key=0, style=bold, color=blue];
d215 -> d134  [key=1, style=dashed, color=darkseagreen4, label=bool];
d3 -> d7  [key=0, style=solid];
d3 -> d10  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>"];
d3 -> d11  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Core.NameLookupResult>"];
d3 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
d149 -> d150  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d160 -> d158  [key=0, style=bold, color=blue];
d36 -> d22  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d173 -> d22  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d173 -> d177  [key=1, style=dashed, color=darkseagreen4, label=r];
d96 -> d94  [key=0, style=bold, color=blue];
d95 -> d96  [key=0, style=solid];
d208 -> d88  [key=1, style=dashed, color=darkseagreen4, label=int];
d37 -> d31  [key=0, style=bold, color=blue];
d32 -> d33  [key=0, style=solid];
d32 -> d36  [key=0, style=solid];
d32 -> d38  [key=2, style=dotted];
d32 -> d44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d48 -> d49  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d53 -> d51  [key=0, style=bold, color=blue];
d52 -> d53  [key=0, style=solid];
d52 -> d47  [key=2, style=dotted];
d204 -> d55  [key=1, style=dashed, color=darkseagreen4, label=values];
d56 -> d54  [key=0, style=bold, color=blue];
d214 -> d133  [key=1, style=dashed, color=darkseagreen4, label=bool];
d147 -> d148  [key=0, style=solid];
d144 -> d142  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d9  [key=1, style=dashed, color=darkseagreen4, label=arg];
d9 -> d15  [key=2, style=dotted];
d9 -> d16  [key=2, style=dotted];
d9 -> d17  [key=2, style=dotted];
d9 -> d18  [key=2, style=dotted];
d9 -> d19  [key=2, style=dotted];
d203 -> d28  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
d217 -> d150  [key=1, style=dashed, color=darkseagreen4, label=normalize];
d151 -> d149  [key=0, style=bold, color=blue];
d152 -> d153  [key=0, style=solid];
d157 -> d155  [key=0, style=bold, color=blue];
d1 -> d3  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d18 -> d173  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Core.NameLookupResult>"];
d18 -> d162  [key=0, style=solid];
d18 -> d165  [key=0, style=bold, color=crimson];
d18 -> d166  [key=0, style=bold, color=crimson];
d18 -> d168  [key=0, style=bold, color=crimson];
d18 -> d169  [key=0, style=bold, color=crimson];
d18 -> d176  [key=0, style=bold, color=crimson];
d18 -> d179  [key=0, style=bold, color=crimson];
d18 -> d163  [key=1, style=dashed, color=darkseagreen4, label=string];
d18 -> d167  [key=1, style=dashed, color=darkseagreen4, label=string];
d172 -> d173  [key=0, style=solid];
d172 -> d184  [key=2, style=dotted];
d172 -> d176  [key=1, style=dashed, color=darkseagreen4, label=n];
d174 -> d175  [key=0, style=solid];
d174 -> d178  [key=0, style=solid];
d177 -> d171  [key=0, style=solid];
d177 -> d178  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d50 -> d48  [key=0, style=bold, color=blue];
d49 -> d50  [key=0, style=solid];
d49 -> d47  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d148 -> d146  [key=0, style=bold, color=blue];
d17 -> d185  [key=0, style=solid];
d17 -> d189  [key=0, style=bold, color=crimson];
d17 -> d190  [key=0, style=bold, color=crimson];
d17 -> d193  [key=0, style=bold, color=crimson];
d17 -> d195  [key=0, style=bold, color=crimson];
d17 -> d196  [key=0, style=bold, color=crimson];
d17 -> d186  [key=1, style=dashed, color=darkseagreen4, label=string];
d17 -> d192  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d180 -> d18  [key=0, style=bold, color=blue];
d162 -> d180  [key=0, style=solid];
d162 -> d163  [key=0, style=solid];
d165 -> d16  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d166 -> d167  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d183  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d176 -> d183  [key=2, style=dotted];
d179 -> d16  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d179 -> d181  [key=2, style=dotted];
d163 -> d168  [key=1, style=dashed, color=darkseagreen4, label=text];
d163 -> d179  [key=1, style=dashed, color=darkseagreen4, label=text];
d163 -> d164  [key=0, style=solid];
d163 -> d181  [key=2, style=dotted];
d163 -> d171  [key=1, style=dashed, color=darkseagreen4, label=text];
d163 -> d178  [key=1, style=dashed, color=darkseagreen4, label=text];
d167 -> d168  [key=0, style=solid];
d167 -> d170  [key=0, style=solid];
d171 -> d172  [key=0, style=solid];
d171 -> d178  [key=0, style=solid];
d170 -> d174  [key=1, style=dashed, color=darkseagreen4, label=i];
d170 -> d179  [key=1, style=dashed, color=darkseagreen4, label=i];
d170 -> d171  [key=0, style=solid];
d170 -> d175  [key=1, style=dashed, color=darkseagreen4, label=i];
d170 -> d178  [key=1, style=dashed, color=darkseagreen4, label=i];
d175 -> d176  [key=0, style=solid];
d175 -> d179  [key=1, style=dashed, color=darkseagreen4, label=i];
d175 -> d175  [key=1, style=dashed, color=darkseagreen4, label=i];
d175 -> d178  [key=1, style=dashed, color=darkseagreen4, label=i];
d178 -> d180  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d46 -> d44  [key=0, style=bold, color=blue];
d45 -> d47  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d185 -> d15  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d197  [key=0, style=solid];
d197 -> d17  [key=0, style=bold, color=blue];
d189 -> d190  [key=0, style=solid];
d189 -> d183  [key=2, style=dotted];
d190 -> d191  [key=0, style=solid];
d193 -> d194  [key=0, style=solid];
d195 -> d196  [key=0, style=solid];
d195 -> d183  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d196 -> d202  [key=2, style=dotted];
d186 -> d189  [key=1, style=dashed, color=darkseagreen4, label=text];
d186 -> d187  [key=0, style=solid];
d186 -> d181  [key=2, style=dotted];
d186 -> d194  [key=1, style=dashed, color=darkseagreen4, label=text];
d192 -> d193  [key=0, style=solid];
d192 -> d199  [key=2, style=dotted];
d192 -> d200  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid];
d164 -> d167  [key=0, style=solid];
d164 -> d182  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d191  [key=0, style=solid];
d191 -> d192  [key=0, style=solid];
d191 -> d194  [key=0, style=solid];
d194 -> d195  [key=0, style=solid];
d194 -> d196  [key=1, style=dashed, color=darkseagreen4, label=parts];
d194 -> d201  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d191  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
d187 -> d198  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_2 -> m0_3  [key=0, style=solid, color=red];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=red];
m0_3 -> m0_9  [key=2, style=dotted, color=red];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> n39  [key=2, style=dotted];
m0_101 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_101 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_44  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_108  [key=2, style=dotted];
m0_105 -> m0_110  [key=2, style=dotted];
m0_105 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_9  [key=2, style=dotted];
m0_103 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_108  [key=2, style=dotted];
m0_104 -> m0_109  [key=2, style=dotted];
m0_104 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_106 -> m0_100  [key=0, style=bold, color=blue];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_7  [key=2, style=dotted];
m0_161 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_161 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_8  [key=2, style=dotted];
m0_162 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_10  [key=2, style=dotted];
m0_164 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_33  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_108  [key=2, style=dotted];
m0_165 -> m0_125  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_176  [key=2, style=dotted];
m0_166 -> m0_177  [key=2, style=dotted];
m0_166 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_166 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_108  [key=2, style=dotted];
m0_167 -> m0_178  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_45  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_45  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_45  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_45  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_45  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_45  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_45  [key=2, style=dotted];
m0_175 -> m0_160  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_7  [key=2, style=dotted];
m0_119 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_119 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_8  [key=2, style=dotted];
m0_120 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_10  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_9  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_108  [key=2, style=dotted];
m0_123 -> m0_125  [key=2, style=dotted];
m0_124 -> m0_118  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_52  [key=2, style=dotted];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_8  [key=2, style=dotted];
m0_48 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_45  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_9  [key=2, style=dotted];
m0_51 -> m0_46  [key=0, style=bold, color=blue];
m0_199 -> m0_200  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_7  [key=2, style=dotted];
m0_200 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_200 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_8  [key=2, style=dotted];
m0_201 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_10  [key=2, style=dotted];
m0_203 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_33  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_108  [key=2, style=dotted];
m0_204 -> m0_125  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_176  [key=2, style=dotted];
m0_205 -> m0_177  [key=2, style=dotted];
m0_205 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_108  [key=2, style=dotted];
m0_206 -> m0_109  [key=2, style=dotted];
m0_206 -> m0_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_108  [key=2, style=dotted];
m0_207 -> m0_178  [key=2, style=dotted];
m0_208 -> m0_199  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_79  [key=2, style=dotted];
m0_84 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_44  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_45  [key=2, style=dotted];
m0_88 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_33  [key=2, style=dotted];
m0_86 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_64  [key=2, style=dotted];
m0_89 -> m0_83  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_8  [key=2, style=dotted];
m0_58 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_45  [key=2, style=dotted];
m0_61 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_22  [key=2, style=dotted];
m0_59 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_64  [key=2, style=dotted];
m0_62 -> m0_56  [key=0, style=bold, color=blue];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_136  [key=2, style=dotted];
m0_130 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_130 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_44  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_108  [key=2, style=dotted];
m0_134 -> m0_110  [key=2, style=dotted];
m0_134 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_9  [key=2, style=dotted];
m0_132 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_108  [key=2, style=dotted];
m0_133 -> m0_109  [key=2, style=dotted];
m0_133 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_135 -> m0_129  [key=0, style=bold, color=blue];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_7  [key=2, style=dotted];
m0_183 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_183 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_8  [key=2, style=dotted];
m0_184 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_10  [key=2, style=dotted];
m0_186 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_33  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_108  [key=2, style=dotted];
m0_187 -> m0_125  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_176  [key=2, style=dotted];
m0_188 -> m0_177  [key=2, style=dotted];
m0_188 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_188 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_188 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_188 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_188 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_108  [key=2, style=dotted];
m0_189 -> m0_178  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_45  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_45  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_45  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_45  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_45  [key=2, style=dotted];
m0_195 -> m0_182  [key=0, style=bold, color=blue];
m0_209 -> m0_210  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_36 -> m0_34  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_65  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_71  [key=2, style=dotted];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_71  [key=2, style=dotted];
m0_92 -> m0_90  [key=0, style=bold, color=blue];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_111  [key=0, style=bold, color=blue];
m0_116 -> m0_114  [key=0, style=bold, color=blue];
m0_127 -> m0_128  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_128 -> m0_126  [key=0, style=bold, color=blue];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_117  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_137  [key=0, style=bold, color=blue];
m0_142 -> m0_140  [key=0, style=bold, color=blue];
m0_158 -> m0_159  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_154 -> m0_155  [key=0, style=solid];
m0_156 -> m0_154  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid];
m0_159 -> m0_157  [key=0, style=bold, color=blue];
m0_180 -> m0_181  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_181 -> m0_179  [key=0, style=bold, color=blue];
m0_197 -> m0_198  [key=0, style=solid];
m0_196 -> m0_197  [key=0, style=solid];
m0_198 -> m0_196  [key=0, style=bold, color=blue];
m0_210 -> m0_211  [key=0, style=solid];
m0_212 -> m0_213  [key=0, style=solid];
m0_211 -> m0_209  [key=0, style=bold, color=blue];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_212  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_7  [key=2, style=dotted];
m0_27 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_8  [key=2, style=dotted];
m0_28 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_10  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_11  [key=2, style=dotted];
m0_32 -> m0_26  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_43  [key=2, style=dotted];
m0_38 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_9  [key=2, style=dotted];
m0_42 -> m0_37  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_7  [key=2, style=dotted];
m0_144 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_144 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_144 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_7  [key=2, style=dotted];
m0_145 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_145 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_8  [key=2, style=dotted];
m0_147 -> m0_9  [key=2, style=dotted];
m0_147 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_10  [key=2, style=dotted];
m0_148 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_8  [key=2, style=dotted];
m0_146 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_146 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_10  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_9  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_108  [key=2, style=dotted];
m0_151 -> m0_153  [key=2, style=dotted];
m0_152 -> m0_143  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_99  [key=2, style=dotted];
m0_94 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_44  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_45  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_9  [key=2, style=dotted];
m0_98 -> m0_93  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_7  [key=2, style=dotted];
m0_16 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_8  [key=2, style=dotted];
m0_17 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_10  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_11  [key=2, style=dotted];
m0_21 -> m0_15  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_79  [key=2, style=dotted];
m0_73 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_44  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_45  [key=2, style=dotted];
m0_77 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_22  [key=2, style=dotted];
m0_75 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_64  [key=2, style=dotted];
m0_78 -> m0_72  [key=0, style=bold, color=blue];
m0_215 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_216 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_217 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_218 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_219 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_220 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_221 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_222 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_223 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_224 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_225 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label=help];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_3  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_3  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_3  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_3  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_3  [key=2, style=dotted, color=green];
m2_12 -> m2_10  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_3  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_3  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_3  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_3  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_3  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_31  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_3  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_3  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_3  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
m4_16 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_27  [key=2, style=dotted];
m4_17 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_17 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=list];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_28  [key=2, style=dotted];
m4_20 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=map];
m4_20 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=map];
m4_20 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=map];
m4_24 -> m4_25  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_24  [key=0, style=solid];
m4_21 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=pair];
m4_19 -> m4_26  [key=0, style=solid];
m4_23 -> m4_21  [key=0, style=solid];
}
