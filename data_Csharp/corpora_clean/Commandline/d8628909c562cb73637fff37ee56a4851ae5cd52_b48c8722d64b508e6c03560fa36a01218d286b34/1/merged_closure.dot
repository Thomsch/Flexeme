digraph  {
m2_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="99-99"];
m2_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="ReflectionExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", prediction=0, span="103-106"];
m2_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="110-110"];
m2_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="111-111"];
m2_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="112-112"];
m2_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="113-113"];
m2_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="114-114"];
m2_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="115-115"];
m2_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="116-116"];
m2_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="99-99"];
m2_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", span="162-162"];
m2_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="167-170"];
m2_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="173-173"];
m2_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131'')) { MaximumDisplayWidth = 100}", span="166-166"];
m2_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description of the verbosity to test out the wrapping capabilities of '')", span="174-174"];
m2_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                the Help Text.'')", span="176-176"];
m2_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", span="162-162"];
m2_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="83-83"];
m2_141 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="481-481"];
m2_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="51-51"];
m2_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Simple_Options>(TypeInfo.Create(typeof(Simple_Options)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="55-58"];
m2_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="62-62"];
m2_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="63-63"];
m2_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue         Define a string value here.'')", span="64-64"];
m2_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-s, --shortandlong    Example with both short and long name.'')", span="65-65"];
m2_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''-i                    Define a int sequence here.'')", span="66-66"];
m2_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''-x                    Define a boolean or switch value here.'')", span="67-67"];
m2_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--help                Display this help screen.'')", span="68-68"];
m2_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''--version             Display version information.'')", span="69-69"];
m2_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''value pos. 0          Define a long value here.'')", span="70-70"];
m2_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'')", span="71-71"];
m2_34 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="51-51"];
m2_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", span="181-181"];
m2_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="186-189"];
m2_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="192-192"];
m2_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="185-185"];
m2_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description of the verbosity to test out the '')", span="193-193"];
m2_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                wrapping capabilities of the Help Text.'')", span="195-195"];
m2_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", span="181-181"];
m2_307 [cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", span="29-29"];
m2_249 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="539-539"];
m2_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="200-200"];
m2_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces)),\r\n                    Enumerable.Empty<Error>()))", span="206-209"];
m2_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="212-212"];
m2_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="204-204"];
m2_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="205-205"];
m2_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="213-213"];
m2_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="214-214"];
m2_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="215-215"];
m2_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="216-216"];
m2_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="217-217"];
m2_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="218-218"];
m2_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="200-200"];
m2_327 [cluster="System.Reflection.AssemblyTitleAttribute.AssemblyTitleAttribute(string)", file="ReflectionExtensions.cs", label="Entry System.Reflection.AssemblyTitleAttribute.AssemblyTitleAttribute(string)", span="0-0"];
m2_346 [cluster="System.Reflection.AssemblyCompanyAttribute.AssemblyCompanyAttribute(string)", file="ReflectionExtensions.cs", label="Entry System.Reflection.AssemblyCompanyAttribute.AssemblyCompanyAttribute(string)", span="0-0"];
m2_309 [cluster="Unk.BeTrue", file="ReflectionExtensions.cs", label="Entry Unk.BeTrue", span=""];
m2_131 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="226-226"];
m2_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="439-439"];
m2_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_HelpText_And_MetaValue>(TypeInfo.Create(typeof(Options_With_HelpText_And_MetaValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="443-446"];
m2_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="450-450"];
m2_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="451-451"];
m2_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="452-452"];
m2_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="453-453"];
m2_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="454-454"];
m2_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="455-455"];
m2_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="456-456"];
m2_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="457-457"];
m2_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="458-458"];
m2_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="459-459"];
m2_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="439-439"];
m2_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="305-305"];
m2_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="308-314"];
m2_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="320-320"];
m2_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="317-317"];
m2_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="329-329"];
m2_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="330-330"];
m2_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="331-331"];
m2_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue         Define a string value here.'')", span="332-332"];
m2_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''-s, --shortandlong    Example with both short and long name.'')", span="333-333"];
m2_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''-i                    Define a int sequence here.'')", span="334-334"];
m2_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''-x                    Define a boolean or switch value here.'')", span="335-335"];
m2_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[9].ShouldBeEquivalentTo(''--help                Display this help screen.'')", span="336-336"];
m2_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="322-322"];
m2_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="323-323"];
m2_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="305-305"];
m2_78 [cluster="string.Split(string[], System.StringSplitOptions)", file="ReflectionExtensions.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", span="137-137"];
m2_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="143-146"];
m2_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="149-149"];
m2_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="141-141"];
m2_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="142-142"];
m2_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="150-150"];
m2_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="152-152"];
m2_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="153-153"];
m2_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="154-154"];
m2_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="155-155"];
m2_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", span="137-137"];
m2_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="76-76"];
m2_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="80-83"];
m2_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="87-87"];
m2_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="88-88"];
m2_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="89-89"];
m2_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="90-90"];
m2_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="91-91"];
m2_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="92-92"];
m2_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="93-93"];
m2_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="94-94"];
m2_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="76-76"];
m2_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="223-223"];
m2_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<Simple_Options_Without_HelpText>(TypeInfo.Create(typeof(Simple_Options_Without_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="229-231"];
m2_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="234-234"];
m2_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="var sut = new HelpText(''Heading Info.'')", span="227-227"];
m2_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="228-228"];
m2_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="235-235"];
m2_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="236-236"];
m2_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="237-237"];
m2_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="238-238"];
m2_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="239-239"];
m2_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="240-240"];
m2_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="223-223"];
m2_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="406-406"];
m2_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="411-414"];
m2_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="409-410"];
m2_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="420-420"];
m2_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="417-417"];
m2_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="430-430"];
m2_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="431-431"];
m2_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="432-432"];
m2_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="433-433"];
m2_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="434-434"];
m2_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="423-423"];
m2_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="424-424"];
m2_217 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="406-406"];
m2_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="21-21"];
m2_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="23-23"];
m2_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="21-21"];
m2_135 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="327-327"];
m2_295 [cluster="System.Type.ToTypeInfo()", file="ReflectionExtensions.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m2_293 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ReflectionExtensions.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m2_160 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ReflectionExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m2_37 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_39 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m2_35 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ReflectionExtensions.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m2_138 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="393-393"];
m2_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="37-37"];
m2_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="121-121"];
m2_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<Options_With_MetaValue>(TypeInfo.Create(typeof(Options_With_MetaValue)), Enumerable.Empty<Error>()))", span="125-127"];
m2_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="130-130"];
m2_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="132-132"];
m2_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="121-121"];
m2_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="345-345"];
m2_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="464-464"];
m2_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="ParserResult<Options_With_Usage_Attribute> result =\r\n                new NotParsed<Options_With_Usage_Attribute>(\r\n                    TypeInfo.Create(typeof(Options_With_Usage_Attribute)), Enumerable.Empty<Error>())", span="467-469"];
m2_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="var lines = text.ToNotEmptyLines()", span="475-475"];
m2_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="var text = HelpText.RenderUsageText(result)", span="472-472"];
m2_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="478-478"];
m2_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="479-479"];
m2_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="480-480"];
m2_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="481-481"];
m2_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="482-482"];
m2_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="483-483"];
m2_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="484-484"];
m2_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''List:'')", span="485-485"];
m2_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''  mono testapp.exe -l 1,2'')", span="486-486"];
m2_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[9].ShouldBeEquivalentTo(''Value:'')", span="487-487"];
m2_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="lines[10].ShouldBeEquivalentTo(''  mono testapp.exe value'')", span="488-488"];
m2_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="464-464"];
m2_317 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", span="599-599"];
m2_321 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="612-613"];
m2_320 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="ReflectionHelper.SetAttributeOverride(new Attribute[]\r\n                {\r\n                    new AssemblyTitleAttribute(expectedTitle),\r\n                    new AssemblyInformationalVersionAttribute(expectedVersion)\r\n                })", span="606-610"];
m2_322 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="bool onErrorCalled = false", span="614-614"];
m2_323 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht =>\r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="615-619"];
m2_318 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="string expectedTitle = ''Title''", span="603-603"];
m2_319 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="string expectedVersion = ''1.2.3.4''", span="604-604"];
m2_324 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="onErrorCalled.Should().BeTrue()", span="621-621"];
m2_325 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="actualResult.Heading.Should().Be(string.Format(''{0} {1}'', expectedTitle, expectedVersion))", span="622-622"];
m2_326 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", span="599-599"];
m2_140 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ReflectionExtensions.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="419-419"];
m2_328 [cluster="System.Reflection.AssemblyInformationalVersionAttribute.AssemblyInformationalVersionAttribute(string)", file="ReflectionExtensions.cs", label="Entry System.Reflection.AssemblyInformationalVersionAttribute.AssemblyInformationalVersionAttribute(string)", span="0-0"];
m2_347 [cluster="Unk.BeFalse", file="ReflectionExtensions.cs", label="Entry Unk.BeFalse", span=""];
m2_136 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ReflectionExtensions.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="371-371"];
m2_38 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="412-412"];
m2_281 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="545-545"];
m2_283 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="var fakeResult =\r\n                new NotParsed<Options_With_Default_Set_To_Sequence>(\r\n                    typeof(Options_With_Default_Set_To_Sequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="549-552"];
m2_287 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="var text = helpText.ToString()", span="560-560"];
m2_288 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="561-561"];
m2_282 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="548-548"];
m2_284 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="handlers.ChangeCulture()", span="555-555"];
m2_285 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="556-556"];
m2_286 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="handlers.ResetCulture()", span="557-557"];
m2_289 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="563-563"];
m2_290 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="564-564"];
m2_291 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="565-565"];
m2_292 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="545-545"];
m2_219 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ReflectionExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m2_142 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="263-284"];
m2_143 [cluster="lambda expression", file="ReflectionExtensions.cs", label="err.Tag", span="265-265"];
m2_145 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="268-268"];
m2_147 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="270-270"];
m2_149 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="272-272"];
m2_151 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="274-274"];
m2_153 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="276-276"];
m2_157 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="280-280"];
m2_310 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="583-587"];
m2_314 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="587-587"];
m2_330 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="615-619"];
m2_334 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="619-619"];
m2_348 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="646-650"];
m2_352 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="650-650"];
m2_144 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.BadFormatTokenError", span="267-267"];
m2_146 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.MissingValueOptionError", span="269-269"];
m2_148 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.UnknownOptionError", span="271-271"];
m2_150 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.MissingRequiredOptionError", span="273-273"];
m2_152 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.SequenceOutOfRangeError", span="275-275"];
m2_154 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.NoVerbSelectedError", span="277-277"];
m2_156 [cluster="lambda expression", file="ReflectionExtensions.cs", label="ErrorType.BadVerbSelectedError", span="279-279"];
m2_158 [cluster="lambda expression", file="ReflectionExtensions.cs", label="throw new InvalidOperationException();", span="282-282"];
m2_159 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="263-284"];
m2_313 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="583-587"];
m2_311 [cluster="lambda expression", file="ReflectionExtensions.cs", label="onErrorCalled = true", span="585-585"];
m2_312 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ht;", span="586-586"];
m2_316 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="587-587"];
m2_315 [cluster="lambda expression", file="ReflectionExtensions.cs", label=ex, span="587-587"];
m2_333 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="615-619"];
m2_331 [cluster="lambda expression", file="ReflectionExtensions.cs", label="onErrorCalled = true", span="617-617"];
m2_332 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ht;", span="618-618"];
m2_336 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="619-619"];
m2_335 [cluster="lambda expression", file="ReflectionExtensions.cs", label=ex, span="619-619"];
m2_351 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="646-650"];
m2_349 [cluster="lambda expression", file="ReflectionExtensions.cs", label="onErrorCalled = true", span="648-648"];
m2_350 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ht;", span="649-649"];
m2_353 [cluster="lambda expression", file="ReflectionExtensions.cs", label=ex, span="650-650"];
m2_155 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return ''ERR no-verb-selected'';", span="278-278"];
m2_354 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="650-650"];
m2_36 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m2_179 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", span="283-283"];
m2_308 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", span="205-205"];
m2_66 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="60-60"];
m2_132 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="305-305"];
m2_180 [cluster="Unk.Should", file="ReflectionExtensions.cs", label="Entry Unk.Should", span=""];
m2_329 [cluster="string.Format(string, object, object)", file="ReflectionExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_294 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="ReflectionExtensions.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="17-17"];
m2_297 [cluster="Unk.Be", file="ReflectionExtensions.cs", label="Entry Unk.Be", span=""];
m2_4 [cluster="CommandLine.Text.HelpText.ToString()", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="603-603"];
m2_181 [cluster="Unk.StartWithEquivalent", file="ReflectionExtensions.cs", label="Entry Unk.StartWithEquivalent", span=""];
m2_137 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="ReflectionExtensions.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="457-457"];
m2_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m2_134 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="316-316"];
m2_337 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", span="632-632"];
m2_340 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="643-644"];
m2_339 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="ReflectionHelper.SetAttributeOverride(new Attribute[]\r\n                {\r\n                    new AssemblyCompanyAttribute(expectedCompany)\r\n                })", span="638-641"];
m2_341 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="bool onErrorCalled = false", span="645-645"];
m2_342 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht =>\r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="646-650"];
m2_338 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="string expectedCompany = ''Company''", span="636-636"];
m2_343 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="onErrorCalled.Should().BeFalse()", span="652-652"];
m2_344 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="actualResult.Copyright.Should().Be(string.Format(''Copyright (C) {0} {1}'', DateTime.Now.Year, expectedCompany))", span="653-653"];
m2_345 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", span="632-632"];
m2_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="72-72"];
m2_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="356-356"];
m2_21 [cluster="string.ToNotEmptyLines()", file="ReflectionExtensions.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m2_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="374-374"];
m2_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="377-382"];
m2_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="388-388"];
m2_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult, maxDisplayWidth: 100)", span="385-385"];
m2_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="392-392"];
m2_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which changes to commit.'')", span="398-398"];
m2_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="399-399"];
m2_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="400-400"];
m2_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="401-401"];
m2_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="391-391"];
m2_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="374-374"];
m2_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="492-492"];
m2_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<Options_With_Usage_Attribute>(\r\n                TypeInfo.Create(typeof(Options_With_Usage_Attribute)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="495-500"];
m2_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var text = helpText.ToString()", span="506-506"];
m2_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="507-507"];
m2_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="503-503"];
m2_257 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="516-516"];
m2_258 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="517-517"];
m2_259 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="518-518"];
m2_260 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="519-519"];
m2_261 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="520-520"];
m2_262 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="521-521"];
m2_263 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="522-522"];
m2_264 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="523-523"];
m2_265 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="524-524"];
m2_266 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="525-525"];
m2_267 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[12].ShouldBeEquivalentTo(''List:'')", span="526-526"];
m2_268 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[13].ShouldBeEquivalentTo(''mono testapp.exe -l 1,2'')", span="527-527"];
m2_269 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[14].ShouldBeEquivalentTo(''Value:'')", span="528-528"];
m2_270 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[15].ShouldBeEquivalentTo(''mono testapp.exe value'')", span="529-529"];
m2_271 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[16].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="530-530"];
m2_272 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[17].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="531-531"];
m2_273 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[18].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="532-532"];
m2_274 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[19].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="533-533"];
m2_275 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[20].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="534-534"];
m2_276 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[21].ShouldBeEquivalentTo(''-l              List.'')", span="535-535"];
m2_277 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[22].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="536-536"];
m2_278 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[23].ShouldBeEquivalentTo(''--version       Display version information.'')", span="537-537"];
m2_279 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[24].ShouldBeEquivalentTo(''value pos. 0    Value.'')", span="538-538"];
m2_255 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="509-509"];
m2_256 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="510-510"];
m2_280 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="492-492"];
m2_133 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m2_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="27-27"];
m2_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="31-36"];
m2_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="39-39"];
m2_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="41-41"];
m2_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="42-42"];
m2_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="43-43"];
m2_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="44-44"];
m2_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="45-45"];
m2_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="46-46"];
m2_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="27-27"];
m2_117 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="246-246"];
m2_118 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="249-262"];
m2_122 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var lines = errorsText.ToNotEmptyLines()", span="292-292"];
m2_119 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="263-284"];
m2_121 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="289-289"];
m2_123 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="294-294"];
m2_124 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="295-295"];
m2_125 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="296-296"];
m2_126 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="297-297"];
m2_127 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="298-298"];
m2_128 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="299-299"];
m2_129 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="300-300"];
m2_120 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="285-286"];
m2_130 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="246-246"];
m2_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="341-341"];
m2_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="344-349"];
m2_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="355-355"];
m2_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="352-352"];
m2_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="365-365"];
m2_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="366-366"];
m2_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="367-367"];
m2_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="368-368"];
m2_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="369-369"];
m2_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="358-358"];
m2_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="359-359"];
m2_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="341-341"];
m2_296 [cluster="System.Action.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_139 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ReflectionExtensions.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="404-404"];
m2_218 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_5 [cluster="Unk.ShouldBeEquivalentTo", file="ReflectionExtensions.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m2_298 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="572-572"];
m2_301 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="580-581"];
m2_300 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="ReflectionHelper.SetAttributeOverride(new Attribute[0])", span="578-578"];
m2_302 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="bool onErrorCalled = false", span="582-582"];
m2_303 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht => \r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="583-587"];
m2_299 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="string expectedCopyright = ''Copyright (C) 1 author''", span="576-576"];
m2_304 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="onErrorCalled.Should().BeTrue()", span="589-589"];
m2_305 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="actualResult.Copyright.Should().Be(expectedCopyright)", span="590-590"];
m2_306 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="572-572"];
m2_53 -> m2_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_53 -> m2_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_53 -> m2_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_53 -> m2_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_53 -> m2_59  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_33  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_97 -> m2_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_97 -> m2_101  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_97 -> m2_102  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_97 -> m2_103  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_222 -> m2_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_222 -> m2_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_169  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_167 -> m2_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_71 -> m2_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_71 -> m2_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_71 -> m2_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_68 -> m2_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_42 -> m2_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_42 -> m2_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_42 -> m2_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_42 -> m2_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_42 -> m2_49  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_109 -> m2_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_109 -> m2_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_109 -> m2_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_109 -> m2_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_109 -> m2_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_106 -> m2_108  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_209 -> m2_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_209 -> m2_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_209 -> m2_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_209 -> m2_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_209 -> m2_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_209 -> m2_216  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_242  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_243  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_244  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_245  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_246  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_236 -> m2_247  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_323 -> m2_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_323 -> m2_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_323 -> m2_325  [color=darkseagreen4, key=1, label=actualResult, style=dashed];
m2_318 -> m2_320  [color=darkseagreen4, key=1, label=expectedTitle, style=dashed];
m2_318 -> m2_325  [color=darkseagreen4, key=1, label=expectedTitle, style=dashed];
m2_319 -> m2_325  [color=darkseagreen4, key=1, label=expectedVersion, style=dashed];
m2_288 -> m2_290  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_288 -> m2_291  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_282 -> m2_284  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m2_282 -> m2_286  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m2_142 -> m2_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_142 -> m2_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_142 -> m2_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_142 -> m2_151  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_142 -> m2_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_142 -> m2_157  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_310 -> m2_312  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_330 -> m2_332  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_348 -> m2_350  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_311 -> m2_313  [color=darkseagreen4, key=1, label=onErrorCalled, style=dashed];
m2_331 -> m2_333  [color=darkseagreen4, key=1, label=onErrorCalled, style=dashed];
m2_349 -> m2_351  [color=darkseagreen4, key=1, label=onErrorCalled, style=dashed];
m2_342 -> m2_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_342 -> m2_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_342 -> m2_344  [color=darkseagreen4, key=1, label=actualResult, style=dashed];
m2_338 -> m2_344  [color=darkseagreen4, key=1, label=expectedCompany, style=dashed];
m2_197 -> m2_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_197 -> m2_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_197 -> m2_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_197 -> m2_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_197 -> m2_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_256  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_257  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_258  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_259  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_260  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_261  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_262  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_263  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_264  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_265  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_266  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_267  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_268  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_269  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_270  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_271  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_272  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_273  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_274  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_275  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_276  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_277  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_278  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_254 -> m2_279  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_124  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_125  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_126  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_127  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_128  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_122 -> m2_129  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_119 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_151  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_119 -> m2_157  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_185 -> m2_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_303 -> m2_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_303 -> m2_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_303 -> m2_305  [color=darkseagreen4, key=1, label=actualResult, style=dashed];
m2_299 -> m2_305  [color=darkseagreen4, key=1, label=expectedCopyright, style=dashed];
}
