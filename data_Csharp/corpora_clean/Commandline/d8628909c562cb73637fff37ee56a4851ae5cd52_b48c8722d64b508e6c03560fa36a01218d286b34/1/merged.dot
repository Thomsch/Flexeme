digraph  {
m2_51 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="99-99", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_52 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="103-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="ReflectionExtensions.cs"];
m2_53 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_54 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_55 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="112-112", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_56 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="113-113", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_57 [label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="114-114", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_58 [label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_59 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="116-116", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_60 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="99-99", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="ReflectionExtensions.cs"];
m2_79 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", span="162-162", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_81 [label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="167-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_82 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="173-173", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_80 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131'')) { MaximumDisplayWidth = 100}", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_83 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description of the verbosity to test out the wrapping capabilities of '')", span="174-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_84 [label="lines[3].ShouldBeEquivalentTo(''                the Help Text.'')", span="176-176", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_85 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", span="162-162", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_100()", file="ReflectionExtensions.cs"];
m2_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="83-83", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="ReflectionExtensions.cs"];
m2_141 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="481-481", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="ReflectionExtensions.cs"];
m2_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="51-51", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Simple_Options>(TypeInfo.Create(typeof(Simple_Options)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="55-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_25 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_26 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue         Define a string value here.'')", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_27 [label="lines[2].ShouldBeEquivalentTo(''-s, --shortandlong    Example with both short and long name.'')", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_28 [label="lines[3].ShouldBeEquivalentTo(''-i                    Define a int sequence here.'')", span="66-66", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_29 [label="lines[4].ShouldBeEquivalentTo(''-x                    Define a boolean or switch value here.'')", span="67-67", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_30 [label="lines[5].ShouldBeEquivalentTo(''--help                Display this help screen.'')", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_31 [label="lines[6].ShouldBeEquivalentTo(''--version             Display version information.'')", span="69-69", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_32 [label="lines[7].ShouldBeEquivalentTo(''value pos. 0          Define a long value here.'')", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_33 [label="lines[8].ShouldBeEquivalentTo(''post-options'')", span="71-71", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_34 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="51-51", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="ReflectionExtensions.cs"];
m2_86 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_88 [label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="186-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_89 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_87 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="185-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_90 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description of the verbosity to test out the '')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_91 [label="lines[3].ShouldBeEquivalentTo(''                wrapping capabilities of the Help Text.'')", span="195-195", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_92 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="ReflectionExtensions.cs"];
m2_307 [label="Entry CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", span="29-29", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="ReflectionExtensions.cs"];
m2_249 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="539-539", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="ReflectionExtensions.cs"];
m2_93 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_96 [label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description_Without_Spaces)),\r\n                    Enumerable.Empty<Error>()))", span="206-209", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_97 [label="var lines = sut.ToString().ToNotEmptyLines()", span="212-212", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_94 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="204-204", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_95 [label="sut.MaximumDisplayWidth = 40", span="205-205", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_98 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="213-213", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_99 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="214-214", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_100 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="215-215", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_101 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="216-216", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_102 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="217-217", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_103 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="218-218", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_104 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="ReflectionExtensions.cs"];
m2_327 [label="Entry System.Reflection.AssemblyTitleAttribute.AssemblyTitleAttribute(string)", span="0-0", cluster="System.Reflection.AssemblyTitleAttribute.AssemblyTitleAttribute(string)", file="ReflectionExtensions.cs"];
m2_346 [label="Entry System.Reflection.AssemblyCompanyAttribute.AssemblyCompanyAttribute(string)", span="0-0", cluster="System.Reflection.AssemblyCompanyAttribute.AssemblyCompanyAttribute(string)", file="ReflectionExtensions.cs"];
m2_309 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ReflectionExtensions.cs"];
m2_131 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="226-226", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="ReflectionExtensions.cs"];
m2_220 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="439-439", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_221 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_HelpText_And_MetaValue>(TypeInfo.Create(typeof(Options_With_HelpText_And_MetaValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="443-446", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_222 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="450-450", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_223 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="451-451", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_224 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="452-452", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_225 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="453-453", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_226 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="454-454", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_227 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="455-455", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_228 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="456-456", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_229 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="457-457", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_230 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="458-458", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_231 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="459-459", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_232 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="439-439", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="ReflectionExtensions.cs"];
m2_164 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_165 [label="var fakeResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="308-314", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_167 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="320-320", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_166 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="317-317", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_170 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="329-329", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_171 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_172 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_173 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue         Define a string value here.'')", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_174 [label="lines[6].ShouldBeEquivalentTo(''-s, --shortandlong    Example with both short and long name.'')", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_175 [label="lines[7].ShouldBeEquivalentTo(''-i                    Define a int sequence here.'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_176 [label="lines[8].ShouldBeEquivalentTo(''-x                    Define a boolean or switch value here.'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_177 [label="lines[9].ShouldBeEquivalentTo(''--help                Display this help screen.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_168 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="322-322", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_169 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="323-323", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_178 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_78 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="ReflectionExtensions.cs"];
m2_67 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", span="137-137", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_70 [label="sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="143-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_71 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_68 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="141-141", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_69 [label="sut.MaximumDisplayWidth = 40", span="142-142", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_72 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_73 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_74 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="153-153", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_75 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_76 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="155-155", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_77 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", span="137-137", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="ReflectionExtensions.cs"];
m2_40 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="76-76", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_41 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_Enum_Having_HelpText>(TypeInfo.Create(typeof(Options_With_Enum_Having_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="80-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_42 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_43 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_44 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="89-89", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_45 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_46 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="91-91", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_47 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="92-92", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_48 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_49 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="94-94", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_50 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="76-76", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="ReflectionExtensions.cs"];
m2_105 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="223-223", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_108 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<Simple_Options_Without_HelpText>(TypeInfo.Create(typeof(Simple_Options_Without_HelpText)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="229-231", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_109 [label="var lines = sut.ToString().ToNotEmptyLines()", span="234-234", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_106 [label="var sut = new HelpText(''Heading Info.'')", span="227-227", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_107 [label="sut.MaximumDisplayWidth = 40", span="228-228", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_110 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="235-235", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_111 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="236-236", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_112 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="237-237", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_113 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="238-238", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_114 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="239-239", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_115 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="240-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_116 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="223-223", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="ReflectionExtensions.cs"];
m2_205 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="406-406", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_207 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="411-414", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_206 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="409-410", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_209 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="420-420", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_208 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="417-417", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_212 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="430-430", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_213 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="431-431", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_214 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="432-432", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_215 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="433-433", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_216 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="434-434", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_210 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="423-423", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_211 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="424-424", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_217 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="406-406", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="21-21", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs"];
m2_1 [label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="23-23", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs"];
m2_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="21-21", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="ReflectionExtensions.cs"];
m2_135 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="327-327", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m2_295 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="ReflectionExtensions.cs"];
m2_293 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ReflectionExtensions.cs"];
m2_160 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ReflectionExtensions.cs"];
m2_37 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs"];
m2_39 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ReflectionExtensions.cs"];
m2_35 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ReflectionExtensions.cs"];
m2_138 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="393-393", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ReflectionExtensions.cs"];
m2_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="37-37", cluster="CommandLine.Text.HelpText.HelpText()", file="ReflectionExtensions.cs"];
m2_61 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="121-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs"];
m2_62 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<Options_With_MetaValue>(TypeInfo.Create(typeof(Options_With_MetaValue)), Enumerable.Empty<Error>()))", span="125-127", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs"];
m2_63 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs"];
m2_64 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="132-132", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs"];
m2_65 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="121-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="ReflectionExtensions.cs"];
m2_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="345-345", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="ReflectionExtensions.cs"];
m2_233 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="464-464", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_234 [label="ParserResult<Options_With_Usage_Attribute> result =\r\n                new NotParsed<Options_With_Usage_Attribute>(\r\n                    TypeInfo.Create(typeof(Options_With_Usage_Attribute)), Enumerable.Empty<Error>())", span="467-469", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_236 [label="var lines = text.ToNotEmptyLines()", span="475-475", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_235 [label="var text = HelpText.RenderUsageText(result)", span="472-472", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_237 [label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="478-478", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_238 [label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="479-479", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_239 [label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="480-480", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_240 [label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="481-481", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_241 [label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="482-482", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_242 [label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="483-483", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_243 [label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="484-484", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_244 [label="lines[7].ShouldBeEquivalentTo(''List:'')", span="485-485", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_245 [label="lines[8].ShouldBeEquivalentTo(''  mono testapp.exe -l 1,2'')", span="486-486", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_246 [label="lines[9].ShouldBeEquivalentTo(''Value:'')", span="487-487", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_247 [label="lines[10].ShouldBeEquivalentTo(''  mono testapp.exe value'')", span="488-488", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_248 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="464-464", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="ReflectionExtensions.cs"];
m2_317 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", span="599-599", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_321 [label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="612-613", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_320 [label="ReflectionHelper.SetAttributeOverride(new Attribute[]\r\n                {\r\n                    new AssemblyTitleAttribute(expectedTitle),\r\n                    new AssemblyInformationalVersionAttribute(expectedVersion)\r\n                })", span="606-610", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_322 [label="bool onErrorCalled = false", span="614-614", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_323 [label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht =>\r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="615-619", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_318 [label="string expectedTitle = ''Title''", span="603-603", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_319 [label="string expectedVersion = ''1.2.3.4''", span="604-604", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_324 [label="onErrorCalled.Should().BeTrue()", span="621-621", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_325 [label="actualResult.Heading.Should().Be(string.Format(''{0} {1}'', expectedTitle, expectedVersion))", span="622-622", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_326 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", span="599-599", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_title_and_version_attributes_only()", file="ReflectionExtensions.cs"];
m2_140 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="419-419", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ReflectionExtensions.cs"];
m2_328 [label="Entry System.Reflection.AssemblyInformationalVersionAttribute.AssemblyInformationalVersionAttribute(string)", span="0-0", cluster="System.Reflection.AssemblyInformationalVersionAttribute.AssemblyInformationalVersionAttribute(string)", file="ReflectionExtensions.cs"];
m2_347 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ReflectionExtensions.cs"];
m2_136 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="371-371", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m2_38 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="412-412", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="ReflectionExtensions.cs"];
m2_281 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="545-545", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_283 [label="var fakeResult =\r\n                new NotParsed<Options_With_Default_Set_To_Sequence>(\r\n                    typeof(Options_With_Default_Set_To_Sequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="549-552", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_287 [label="var text = helpText.ToString()", span="560-560", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_288 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="561-561", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_282 [label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="548-548", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_284 [label="handlers.ChangeCulture()", span="555-555", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_285 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="556-556", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_286 [label="handlers.ResetCulture()", span="557-557", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_289 [label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="563-563", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_290 [label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="564-564", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_291 [label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="565-565", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_292 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="545-545", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="ReflectionExtensions.cs"];
m2_219 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ReflectionExtensions.cs"];
m2_142 [label="Entry lambda expression", span="263-284", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_143 [label="err.Tag", span="265-265", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_145 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="268-268", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_147 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="270-270", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_149 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="272-272", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_151 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="274-274", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_153 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="276-276", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_157 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="280-280", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_310 [label="Entry lambda expression", span="583-587", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_314 [label="Entry lambda expression", span="587-587", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_330 [label="Entry lambda expression", span="615-619", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_334 [label="Entry lambda expression", span="619-619", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_348 [label="Entry lambda expression", span="646-650", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_352 [label="Entry lambda expression", span="650-650", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_144 [label="ErrorType.BadFormatTokenError", span="267-267", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_146 [label="ErrorType.MissingValueOptionError", span="269-269", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_148 [label="ErrorType.UnknownOptionError", span="271-271", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_150 [label="ErrorType.MissingRequiredOptionError", span="273-273", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_152 [label="ErrorType.SequenceOutOfRangeError", span="275-275", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_154 [label="ErrorType.NoVerbSelectedError", span="277-277", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_156 [label="ErrorType.BadVerbSelectedError", span="279-279", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_158 [label="throw new InvalidOperationException();", span="282-282", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_159 [label="Exit lambda expression", span="263-284", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_313 [label="Exit lambda expression", span="583-587", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_311 [label="onErrorCalled = true", span="585-585", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_312 [label="return ht;", span="586-586", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_316 [label="Exit lambda expression", span="587-587", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_315 [label=ex, span="587-587", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_333 [label="Exit lambda expression", span="615-619", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_331 [label="onErrorCalled = true", span="617-617", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_332 [label="return ht;", span="618-618", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_336 [label="Exit lambda expression", span="619-619", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_335 [label=ex, span="619-619", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_351 [label="Exit lambda expression", span="646-650", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_349 [label="onErrorCalled = true", span="648-648", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_350 [label="return ht;", span="649-649", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_353 [label=ex, span="650-650", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_155 [label="return ''ERR no-verb-selected'';", span="278-278", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_354 [label="Exit lambda expression", span="650-650", cluster="lambda expression", file="ReflectionExtensions.cs"];
m2_36 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="ReflectionExtensions.cs"];
m2_179 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", span="283-283", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", file="ReflectionExtensions.cs"];
m2_308 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", span="205-205", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", file="ReflectionExtensions.cs"];
m2_66 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="60-60", cluster="CommandLine.Text.HelpText.HelpText(string)", file="ReflectionExtensions.cs"];
m2_132 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m2_180 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ReflectionExtensions.cs"];
m2_329 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ReflectionExtensions.cs"];
m2_294 [label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="17-17", cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="ReflectionExtensions.cs"];
m2_297 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ReflectionExtensions.cs"];
m2_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="603-603", cluster="CommandLine.Text.HelpText.ToString()", file="ReflectionExtensions.cs"];
m2_181 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="ReflectionExtensions.cs"];
m2_137 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="457-457", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="ReflectionExtensions.cs"];
m2_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ReflectionExtensions.cs"];
m2_134 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="316-316", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="ReflectionExtensions.cs"];
m2_337 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", span="632-632", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_340 [label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="643-644", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_339 [label="ReflectionHelper.SetAttributeOverride(new Attribute[]\r\n                {\r\n                    new AssemblyCompanyAttribute(expectedCompany)\r\n                })", span="638-641", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_341 [label="bool onErrorCalled = false", span="645-645", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_342 [label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht =>\r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="646-650", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_338 [label="string expectedCompany = ''Company''", span="636-636", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_343 [label="onErrorCalled.Should().BeFalse()", span="652-652", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_344 [label="actualResult.Copyright.Should().Be(string.Format(''Copyright (C) {0} {1}'', DateTime.Now.Year, expectedCompany))", span="653-653", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_345 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", span="632-632", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_with_assembly_company_attribute_only()", file="ReflectionExtensions.cs"];
m2_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="72-72", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ReflectionExtensions.cs"];
m2_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="356-356", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="ReflectionExtensions.cs"];
m2_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="ReflectionExtensions.cs"];
m2_194 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="374-374", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_195 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="377-382", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_197 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="388-388", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_196 [label="var helpText = HelpText.AutoBuild(fakeResult, maxDisplayWidth: 100)", span="385-385", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_199 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="392-392", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_200 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which changes to commit.'')", span="398-398", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_201 [label="lines[3].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="399-399", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_202 [label="lines[4].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="400-400", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_203 [label="lines[5].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="401-401", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_198 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="391-391", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_204 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="374-374", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="ReflectionExtensions.cs"];
m2_250 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="492-492", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_251 [label="var fakeResult = new NotParsed<Options_With_Usage_Attribute>(\r\n                TypeInfo.Create(typeof(Options_With_Usage_Attribute)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="495-500", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_253 [label="var text = helpText.ToString()", span="506-506", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_254 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="507-507", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_252 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="503-503", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_257 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="516-516", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_258 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="517-517", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_259 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="518-518", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_260 [label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="519-519", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_261 [label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="520-520", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_262 [label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="521-521", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_263 [label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="522-522", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_264 [label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="523-523", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_265 [label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="524-524", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_266 [label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="525-525", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_267 [label="lines[12].ShouldBeEquivalentTo(''List:'')", span="526-526", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_268 [label="lines[13].ShouldBeEquivalentTo(''mono testapp.exe -l 1,2'')", span="527-527", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_269 [label="lines[14].ShouldBeEquivalentTo(''Value:'')", span="528-528", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_270 [label="lines[15].ShouldBeEquivalentTo(''mono testapp.exe value'')", span="529-529", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_271 [label="lines[16].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="530-530", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_272 [label="lines[17].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="531-531", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_273 [label="lines[18].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="532-532", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_274 [label="lines[19].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="533-533", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_275 [label="lines[20].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="534-534", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_276 [label="lines[21].ShouldBeEquivalentTo(''-l              List.'')", span="535-535", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_277 [label="lines[22].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="536-536", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_278 [label="lines[23].ShouldBeEquivalentTo(''--version       Display version information.'')", span="537-537", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_279 [label="lines[24].ShouldBeEquivalentTo(''value pos. 0    Value.'')", span="538-538", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_255 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="509-509", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_256 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="510-510", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_280 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="492-492", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_133 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="ReflectionExtensions.cs"];
m2_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="27-27", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="31-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="42-42", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="43-43", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="44-44", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="45-45", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="27-27", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="ReflectionExtensions.cs"];
m2_117 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_118 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="249-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_122 [label="var lines = errorsText.ToNotEmptyLines()", span="292-292", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_119 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="263-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_121 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_123 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="294-294", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_124 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="295-295", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_125 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="296-296", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_126 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="297-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_127 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="298-298", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_128 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="299-299", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_129 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_120 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="285-286", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_130 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_182 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="341-341", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_183 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="344-349", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_185 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="355-355", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_184 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="352-352", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_188 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="365-365", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_189 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="366-366", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_190 [label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="367-367", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_191 [label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="368-368", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_192 [label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="369-369", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_186 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_187 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_193 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="341-341", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="ReflectionExtensions.cs"];
m2_296 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="ReflectionExtensions.cs"];
m2_139 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="404-404", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ReflectionExtensions.cs"];
m2_218 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ReflectionExtensions.cs"];
m2_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ReflectionExtensions.cs"];
m2_298 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="572-572", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_301 [label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof (Simple_Options)), new Error[0])", span="580-581", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_300 [label="ReflectionHelper.SetAttributeOverride(new Attribute[0])", span="578-578", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_302 [label="bool onErrorCalled = false", span="582-582", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_303 [label="HelpText actualResult = HelpText.AutoBuild(fakeResult, ht => \r\n                {\r\n                    onErrorCalled = true;\r\n                    return ht;\r\n                }, ex => ex)", span="583-587", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_299 [label="string expectedCopyright = ''Copyright (C) 1 author''", span="576-576", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_304 [label="onErrorCalled.Should().BeTrue()", span="589-589", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_305 [label="actualResult.Copyright.Should().Be(expectedCopyright)", span="590-590", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_306 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="572-572", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="ReflectionExtensions.cs"];
m2_51 -> m2_52  [key=0, style=solid, color=green];
m2_52 -> m2_53  [key=0, style=solid, color=green];
m2_52 -> m2_3  [key=2, style=dotted, color=green];
m2_52 -> m2_19  [key=2, style=dotted, color=green];
m2_52 -> m2_35  [key=2, style=dotted, color=green];
m2_52 -> m2_36  [key=2, style=dotted, color=green];
m2_52 -> m2_37  [key=2, style=dotted, color=green];
m2_52 -> m2_38  [key=2, style=dotted, color=green];
m2_52 -> m2_20  [key=2, style=dotted, color=green];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_4  [key=2, style=dotted];
m2_53 -> m2_21  [key=2, style=dotted];
m2_53 -> m2_39  [key=2, style=dotted];
m2_53 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_53 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_53 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_53 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_53 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_5  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_5  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_5  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_5  [key=2, style=dotted];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_5  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_5  [key=2, style=dotted];
m2_60 -> m2_51  [key=0, style=bold, color=blue];
m2_79 -> m2_80  [key=0, style=solid];
m2_81 -> m2_35  [key=2, style=dotted];
m2_81 -> m2_36  [key=2, style=dotted];
m2_81 -> m2_37  [key=2, style=dotted];
m2_81 -> m2_38  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_4  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_78  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_80 -> m2_17  [key=2, style=dotted];
m2_80 -> m2_66  [key=2, style=dotted];
m2_83 -> m2_5  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_5  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_85 -> m2_79  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_3  [key=2, style=dotted];
m2_23 -> m2_19  [key=2, style=dotted];
m2_23 -> m2_35  [key=2, style=dotted];
m2_23 -> m2_36  [key=2, style=dotted];
m2_23 -> m2_37  [key=2, style=dotted];
m2_23 -> m2_38  [key=2, style=dotted];
m2_23 -> m2_20  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_4  [key=2, style=dotted];
m2_24 -> m2_21  [key=2, style=dotted];
m2_24 -> m2_39  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_24 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_25 -> m2_5  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_5  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_5  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_5  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_5  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_5  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_5  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_5  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_34 -> m2_22  [key=0, style=bold, color=blue];
m2_86 -> m2_87  [key=0, style=solid];
m2_88 -> m2_35  [key=2, style=dotted];
m2_88 -> m2_36  [key=2, style=dotted];
m2_88 -> m2_37  [key=2, style=dotted];
m2_88 -> m2_38  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_4  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_78  [key=2, style=dotted];
m2_89 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_87 -> m2_17  [key=2, style=dotted];
m2_87 -> m2_66  [key=2, style=dotted];
m2_90 -> m2_5  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_5  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_86  [key=0, style=bold, color=blue];
m2_93 -> m2_94  [key=0, style=solid];
m2_96 -> m2_35  [key=2, style=dotted];
m2_96 -> m2_36  [key=2, style=dotted];
m2_96 -> m2_37  [key=2, style=dotted];
m2_96 -> m2_38  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_97 -> m2_4  [key=2, style=dotted];
m2_97 -> m2_21  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_97 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_97 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_97 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_97 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_94 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_94 -> m2_17  [key=2, style=dotted];
m2_94 -> m2_66  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_98 -> m2_5  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_5  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_5  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_101 -> m2_5  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_102 -> m2_5  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_5  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_104 -> m2_93  [key=0, style=bold, color=blue];
m2_220 -> m2_221  [key=0, style=solid];
m2_221 -> m2_3  [key=2, style=dotted];
m2_221 -> m2_19  [key=2, style=dotted];
m2_221 -> m2_35  [key=2, style=dotted];
m2_221 -> m2_36  [key=2, style=dotted];
m2_221 -> m2_37  [key=2, style=dotted];
m2_221 -> m2_38  [key=2, style=dotted];
m2_221 -> m2_20  [key=2, style=dotted];
m2_221 -> m2_222  [key=0, style=solid];
m2_222 -> m2_4  [key=2, style=dotted];
m2_222 -> m2_21  [key=2, style=dotted];
m2_222 -> m2_39  [key=2, style=dotted];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_222 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_223 -> m2_5  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_224 -> m2_5  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_225 -> m2_5  [key=2, style=dotted];
m2_225 -> m2_226  [key=0, style=solid];
m2_226 -> m2_5  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_227 -> m2_5  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_228 -> m2_5  [key=2, style=dotted];
m2_228 -> m2_229  [key=0, style=solid];
m2_229 -> m2_5  [key=2, style=dotted];
m2_229 -> m2_230  [key=0, style=solid];
m2_230 -> m2_5  [key=2, style=dotted];
m2_230 -> m2_231  [key=0, style=solid];
m2_231 -> m2_5  [key=2, style=dotted];
m2_231 -> m2_232  [key=0, style=solid];
m2_232 -> m2_220  [key=0, style=bold, color=blue];
m2_164 -> m2_165  [key=0, style=solid];
m2_165 -> m2_35  [key=2, style=dotted];
m2_165 -> m2_36  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_131  [key=2, style=dotted];
m2_165 -> m2_136  [key=2, style=dotted];
m2_165 -> m2_133  [key=2, style=dotted];
m2_167 -> m2_4  [key=2, style=dotted];
m2_167 -> m2_21  [key=2, style=dotted];
m2_167 -> m2_39  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_167 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_179  [key=2, style=dotted];
m2_170 -> m2_5  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_171 -> m2_5  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_172 -> m2_5  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_173 -> m2_5  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_174 -> m2_5  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_175 -> m2_5  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_176 -> m2_5  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_5  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_180  [key=2, style=dotted];
m2_168 -> m2_181  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_180  [key=2, style=dotted];
m2_169 -> m2_181  [key=2, style=dotted];
m2_178 -> m2_164  [key=0, style=bold, color=blue];
m2_67 -> m2_68  [key=0, style=solid];
m2_70 -> m2_35  [key=2, style=dotted];
m2_70 -> m2_36  [key=2, style=dotted];
m2_70 -> m2_37  [key=2, style=dotted];
m2_70 -> m2_38  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_4  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_78  [key=2, style=dotted];
m2_71 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_71 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_71 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_71 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_68 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_68 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_68 -> m2_17  [key=2, style=dotted];
m2_68 -> m2_66  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_72 -> m2_5  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_5  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_5  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_5  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_5  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_67  [key=0, style=bold, color=blue];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_3  [key=2, style=dotted];
m2_41 -> m2_19  [key=2, style=dotted];
m2_41 -> m2_35  [key=2, style=dotted];
m2_41 -> m2_36  [key=2, style=dotted];
m2_41 -> m2_37  [key=2, style=dotted];
m2_41 -> m2_38  [key=2, style=dotted];
m2_41 -> m2_20  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_4  [key=2, style=dotted];
m2_42 -> m2_21  [key=2, style=dotted];
m2_42 -> m2_39  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_42 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_43 -> m2_5  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_5  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_5  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_5  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_5  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_5  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_5  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_40  [key=0, style=bold, color=blue];
m2_105 -> m2_106  [key=0, style=solid];
m2_108 -> m2_19  [key=2, style=dotted];
m2_108 -> m2_35  [key=2, style=dotted];
m2_108 -> m2_36  [key=2, style=dotted];
m2_108 -> m2_37  [key=2, style=dotted];
m2_108 -> m2_38  [key=2, style=dotted];
m2_108 -> m2_20  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_109 -> m2_4  [key=2, style=dotted];
m2_109 -> m2_21  [key=2, style=dotted];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_109 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_109 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_109 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_109 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_106 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_106 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=sut];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_66  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_110 -> m2_5  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_5  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_5  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_5  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_5  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_5  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_105  [key=0, style=bold, color=blue];
m2_205 -> m2_206  [key=0, style=solid];
m2_207 -> m2_35  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_219  [key=2, style=dotted];
m2_207 -> m2_140  [key=2, style=dotted];
m2_206 -> m2_37  [key=2, style=dotted];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_218  [key=2, style=dotted];
m2_209 -> m2_4  [key=2, style=dotted];
m2_209 -> m2_21  [key=2, style=dotted];
m2_209 -> m2_39  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_209 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_209 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_209 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_209 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_209 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_179  [key=2, style=dotted];
m2_212 -> m2_5  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_213 -> m2_5  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_214 -> m2_5  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_215 -> m2_5  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_5  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_180  [key=2, style=dotted];
m2_210 -> m2_181  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_180  [key=2, style=dotted];
m2_211 -> m2_181  [key=2, style=dotted];
m2_217 -> m2_205  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_35  [key=2, style=dotted];
m2_62 -> m2_36  [key=2, style=dotted];
m2_62 -> m2_37  [key=2, style=dotted];
m2_62 -> m2_38  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_66  [key=2, style=dotted];
m2_63 -> m2_4  [key=2, style=dotted];
m2_63 -> m2_21  [key=2, style=dotted];
m2_63 -> m2_39  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_5  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_61  [key=0, style=bold, color=blue];
m2_233 -> m2_234  [key=0, style=solid];
m2_234 -> m2_35  [key=2, style=dotted];
m2_234 -> m2_36  [key=2, style=dotted];
m2_234 -> m2_37  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_236 -> m2_21  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_241  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_243  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_236 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_249  [key=2, style=dotted];
m2_237 -> m2_5  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_238 -> m2_5  [key=2, style=dotted];
m2_238 -> m2_239  [key=0, style=solid];
m2_239 -> m2_5  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_240 -> m2_5  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_241 -> m2_5  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid];
m2_242 -> m2_5  [key=2, style=dotted];
m2_242 -> m2_243  [key=0, style=solid];
m2_243 -> m2_5  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_244 -> m2_5  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_245 -> m2_5  [key=2, style=dotted];
m2_245 -> m2_246  [key=0, style=solid];
m2_246 -> m2_5  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_247 -> m2_5  [key=2, style=dotted];
m2_247 -> m2_248  [key=0, style=solid];
m2_248 -> m2_233  [key=0, style=bold, color=blue];
m2_317 -> m2_318  [key=0, style=solid];
m2_321 -> m2_35  [key=2, style=dotted];
m2_321 -> m2_36  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_327  [key=2, style=dotted];
m2_320 -> m2_328  [key=2, style=dotted];
m2_320 -> m2_307  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_308  [key=2, style=dotted];
m2_323 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_323 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_323 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=actualResult];
m2_318 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=expectedTitle];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=expectedTitle];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=expectedVersion];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_180  [key=2, style=dotted];
m2_324 -> m2_309  [key=2, style=dotted];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_180  [key=2, style=dotted];
m2_325 -> m2_329  [key=2, style=dotted];
m2_325 -> m2_297  [key=2, style=dotted];
m2_326 -> m2_317  [key=0, style=bold, color=blue];
m2_281 -> m2_282  [key=0, style=solid];
m2_283 -> m2_35  [key=2, style=dotted];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_295  [key=2, style=dotted];
m2_283 -> m2_131  [key=2, style=dotted];
m2_283 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_287 -> m2_4  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_288 -> m2_21  [key=2, style=dotted];
m2_288 -> m2_39  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_288 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_293  [key=2, style=dotted];
m2_282 -> m2_294  [key=2, style=dotted];
m2_282 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=handlers];
m2_282 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=handlers];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_296  [key=2, style=dotted];
m2_285 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_179  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_296  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_180  [key=2, style=dotted];
m2_289 -> m2_297  [key=2, style=dotted];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_180  [key=2, style=dotted];
m2_290 -> m2_297  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_180  [key=2, style=dotted];
m2_291 -> m2_297  [key=2, style=dotted];
m2_292 -> m2_281  [key=0, style=bold, color=blue];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_142 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_142 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_142 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_142 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_142 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_146  [key=0, style=solid];
m2_143 -> m2_148  [key=0, style=solid];
m2_143 -> m2_150  [key=0, style=solid];
m2_143 -> m2_152  [key=0, style=solid];
m2_143 -> m2_154  [key=0, style=solid];
m2_143 -> m2_156  [key=0, style=solid];
m2_143 -> m2_158  [key=0, style=solid];
m2_145 -> m2_159  [key=0, style=solid];
m2_147 -> m2_159  [key=0, style=solid];
m2_149 -> m2_159  [key=0, style=solid];
m2_151 -> m2_159  [key=0, style=solid];
m2_153 -> m2_159  [key=0, style=solid];
m2_157 -> m2_159  [key=0, style=solid];
m2_310 -> m2_311  [key=0, style=solid];
m2_310 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_314 -> m2_315  [key=0, style=solid];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_334 -> m2_335  [key=0, style=solid];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_352 -> m2_353  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_154 -> m2_155  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_160  [key=2, style=dotted];
m2_159 -> m2_142  [key=0, style=bold, color=blue];
m2_313 -> m2_310  [key=0, style=bold, color=blue];
m2_311 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label=onErrorCalled];
m2_311 -> m2_312  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_316 -> m2_314  [key=0, style=bold, color=blue];
m2_315 -> m2_316  [key=0, style=solid];
m2_333 -> m2_330  [key=0, style=bold, color=blue];
m2_331 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label=onErrorCalled];
m2_331 -> m2_332  [key=0, style=solid];
m2_332 -> m2_333  [key=0, style=solid];
m2_336 -> m2_334  [key=0, style=bold, color=blue];
m2_335 -> m2_336  [key=0, style=solid];
m2_351 -> m2_348  [key=0, style=bold, color=blue];
m2_349 -> m2_351  [key=1, style=dashed, color=darkseagreen4, label=onErrorCalled];
m2_349 -> m2_350  [key=0, style=solid];
m2_350 -> m2_351  [key=0, style=solid];
m2_353 -> m2_354  [key=0, style=solid];
m2_155 -> m2_159  [key=0, style=solid];
m2_354 -> m2_352  [key=0, style=bold, color=blue];
m2_337 -> m2_338  [key=0, style=solid];
m2_340 -> m2_35  [key=2, style=dotted];
m2_340 -> m2_36  [key=2, style=dotted];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_342  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_346  [key=2, style=dotted];
m2_339 -> m2_307  [key=2, style=dotted];
m2_341 -> m2_342  [key=0, style=solid];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_308  [key=2, style=dotted];
m2_342 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_342 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_342 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=actualResult];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label=expectedCompany];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_180  [key=2, style=dotted];
m2_343 -> m2_347  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_180  [key=2, style=dotted];
m2_344 -> m2_329  [key=2, style=dotted];
m2_344 -> m2_297  [key=2, style=dotted];
m2_345 -> m2_337  [key=0, style=bold, color=blue];
m2_194 -> m2_195  [key=0, style=solid];
m2_195 -> m2_35  [key=2, style=dotted];
m2_195 -> m2_36  [key=2, style=dotted];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_140  [key=2, style=dotted];
m2_197 -> m2_4  [key=2, style=dotted];
m2_197 -> m2_21  [key=2, style=dotted];
m2_197 -> m2_39  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_197 -> m2_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_197 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_197 -> m2_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_197 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_179  [key=2, style=dotted];
m2_199 -> m2_5  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_200 -> m2_5  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_5  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_202 -> m2_5  [key=2, style=dotted];
m2_202 -> m2_203  [key=0, style=solid];
m2_203 -> m2_5  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_180  [key=2, style=dotted];
m2_198 -> m2_181  [key=2, style=dotted];
m2_204 -> m2_194  [key=0, style=bold, color=blue];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_35  [key=2, style=dotted];
m2_251 -> m2_36  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_131  [key=2, style=dotted];
m2_253 -> m2_4  [key=2, style=dotted];
m2_253 -> m2_254  [key=0, style=solid];
m2_254 -> m2_21  [key=2, style=dotted];
m2_254 -> m2_39  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_260  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_266  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_269  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_270  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_271  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_272  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_277  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_254 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_179  [key=2, style=dotted];
m2_257 -> m2_5  [key=2, style=dotted];
m2_257 -> m2_258  [key=0, style=solid];
m2_258 -> m2_5  [key=2, style=dotted];
m2_258 -> m2_259  [key=0, style=solid];
m2_259 -> m2_5  [key=2, style=dotted];
m2_259 -> m2_260  [key=0, style=solid];
m2_260 -> m2_5  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_261 -> m2_5  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_262 -> m2_5  [key=2, style=dotted];
m2_262 -> m2_263  [key=0, style=solid];
m2_263 -> m2_5  [key=2, style=dotted];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_5  [key=2, style=dotted];
m2_264 -> m2_265  [key=0, style=solid];
m2_265 -> m2_5  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_266 -> m2_5  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_267 -> m2_5  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_268 -> m2_5  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_269 -> m2_5  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_270 -> m2_5  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_5  [key=2, style=dotted];
m2_271 -> m2_272  [key=0, style=solid];
m2_272 -> m2_5  [key=2, style=dotted];
m2_272 -> m2_273  [key=0, style=solid];
m2_273 -> m2_5  [key=2, style=dotted];
m2_273 -> m2_274  [key=0, style=solid];
m2_274 -> m2_5  [key=2, style=dotted];
m2_274 -> m2_275  [key=0, style=solid];
m2_275 -> m2_5  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_276 -> m2_5  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_277 -> m2_5  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_278 -> m2_5  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_279 -> m2_5  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_180  [key=2, style=dotted];
m2_255 -> m2_181  [key=2, style=dotted];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_180  [key=2, style=dotted];
m2_256 -> m2_181  [key=2, style=dotted];
m2_280 -> m2_250  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_19  [key=2, style=dotted];
m2_7 -> m2_20  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_18  [key=2, style=dotted];
m2_8 -> m2_4  [key=2, style=dotted];
m2_8 -> m2_21  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_8 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_9 -> m2_5  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_5  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_5  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_5  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_5  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_5  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_6  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_35  [key=2, style=dotted];
m2_118 -> m2_36  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_131  [key=2, style=dotted];
m2_118 -> m2_132  [key=2, style=dotted];
m2_118 -> m2_133  [key=2, style=dotted];
m2_118 -> m2_134  [key=2, style=dotted];
m2_118 -> m2_135  [key=2, style=dotted];
m2_118 -> m2_136  [key=2, style=dotted];
m2_118 -> m2_137  [key=2, style=dotted];
m2_118 -> m2_138  [key=2, style=dotted];
m2_118 -> m2_139  [key=2, style=dotted];
m2_118 -> m2_140  [key=2, style=dotted];
m2_118 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_122 -> m2_21  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_122 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_122 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_122 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_122 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_122 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m2_119 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_141  [key=2, style=dotted];
m2_123 -> m2_5  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_5  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_5  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_126 -> m2_5  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_5  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_5  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_5  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_130 -> m2_117  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_35  [key=2, style=dotted];
m2_183 -> m2_36  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_140  [key=2, style=dotted];
m2_185 -> m2_4  [key=2, style=dotted];
m2_185 -> m2_21  [key=2, style=dotted];
m2_185 -> m2_39  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_185 -> m2_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_185 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_185 -> m2_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_185 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_185 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label=lines];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_179  [key=2, style=dotted];
m2_188 -> m2_5  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_189 -> m2_5  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_190 -> m2_5  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_191 -> m2_5  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_192 -> m2_5  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_180  [key=2, style=dotted];
m2_186 -> m2_181  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_180  [key=2, style=dotted];
m2_187 -> m2_181  [key=2, style=dotted];
m2_193 -> m2_182  [key=0, style=bold, color=blue];
m2_298 -> m2_299  [key=0, style=solid];
m2_301 -> m2_35  [key=2, style=dotted];
m2_301 -> m2_36  [key=2, style=dotted];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_307  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_308  [key=2, style=dotted];
m2_303 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_303 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_303 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label=actualResult];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_305  [key=1, style=dashed, color=darkseagreen4, label=expectedCopyright];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_180  [key=2, style=dotted];
m2_304 -> m2_309  [key=2, style=dotted];
m2_305 -> m2_306  [key=0, style=solid];
m2_305 -> m2_180  [key=2, style=dotted];
m2_305 -> m2_297  [key=2, style=dotted];
m2_306 -> m2_298  [key=0, style=bold, color=blue];
}
