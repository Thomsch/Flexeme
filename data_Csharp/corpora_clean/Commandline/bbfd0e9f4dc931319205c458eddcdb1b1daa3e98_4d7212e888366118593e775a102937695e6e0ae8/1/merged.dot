digraph  {
m1_45 [label="maybe.MatchJust(out value)", span="137-137", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="LongOptionParser.cs"];
m1_48 [label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="LongOptionParser.cs"];
m1_12 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="51-51", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="LongOptionParser.cs"];
m1_13 [label="return PresentParserState.Failure;", span="53-53", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="LongOptionParser.cs"];
m1_14 [label="parts.Length == 2", span="56-56", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="LongOptionParser.cs"];
m1_52 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="118-118", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="LongOptionParser.cs"];
m1_34 [label="valueSetting = option.SetValue(items, options)", span="99-99", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="LongOptionParser.cs"];
m1_70 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="LongOptionParser.cs"];
m1_56 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="LongOptionParser.cs"];
m1_3 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="LongOptionParser.cs"];
m1_6 [label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", color=green, community=0, file="LongOptionParser.cs"];
m1_5 [label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="LongOptionParser.cs"];
m1_7 [label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", span="36-38", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="LongOptionParser.cs"];
m1_11 [label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", color=green, community=0, file="LongOptionParser.cs"];
m1_10 [label="Entry CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", file="LongOptionParser.cs"];
m1_38 [label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="LongOptionParser.cs"];
m1_4 [label="return Tag == MaybeType.Nothing;", span="31-31", cluster="CSharpx.Maybe<T>.MatchNothing()", file="LongOptionParser.cs"];
m1_9 [label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="LongOptionParser.cs"];
m1_15 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="LongOptionParser.cs"];
m1_16 [label="return new Nothing<T>();", span="77-77", cluster="CSharpx.Maybe.Nothing<T>()", file="LongOptionParser.cs"];
m1_18 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="LongOptionParser.cs"];
m1_20 [label="Exit CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="LongOptionParser.cs"];
m1_23 [label="return new Just<T1>(((Either1Of2<T1, T2>)either).Value);", span="93-93", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="LongOptionParser.cs"];
m1_25 [label="Exit CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="LongOptionParser.cs"];
m1_27 [label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="107-107", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="LongOptionParser.cs"];
m1_28 [label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="LongOptionParser.cs"];
m1_30 [label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="LongOptionParser.cs"];
m1_32 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : Maybe.Nothing<T2>();", span="113-115", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="LongOptionParser.cs"];
m1_36 [label="T1 value1", span="120-120", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="LongOptionParser.cs"];
m1_40 [label="T1 value1", span="128-128", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="LongOptionParser.cs"];
m1_42 [label="Exit CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="LongOptionParser.cs"];
m1_8 [label="return Tag == MaybeType.Just;", span="39-39", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="LongOptionParser.cs"];
m1_39 [label="Entry CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="LongOptionParser.cs"];
m1_21 [label="Entry CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="LongOptionParser.cs"];
m1_33 [label="Exit CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="LongOptionParser.cs"];
m1_22 [label="either.Tag == Either2Type.Either1Of2", span="91-91", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="LongOptionParser.cs"];
m1_17 [label="Exit CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="LongOptionParser.cs"];
m1_19 [label="return new Just<T>(value);", span="82-82", cluster="CSharpx.Maybe.Just<T>(T)", file="LongOptionParser.cs"];
m1_24 [label="return new Nothing<T1>();", span="95-95", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="LongOptionParser.cs"];
m1_26 [label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="LongOptionParser.cs"];
m1_29 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="LongOptionParser.cs"];
m1_31 [label="T1 value1", span="112-112", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="LongOptionParser.cs"];
m1_35 [label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="LongOptionParser.cs"];
m1_37 [label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", span="121-123", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="LongOptionParser.cs"];
m1_41 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : noneValue;", span="129-131", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="LongOptionParser.cs"];
m1_43 [label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="LongOptionParser.cs"];
m1_44 [label="T value", span="136-136", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="LongOptionParser.cs"];
m1_49 [label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165", cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="LongOptionParser.cs"];
m1_50 [label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="LongOptionParser.cs"];
m1_51 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="LongOptionParser.cs"];
m1_64 [label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_65 [label="T value", span="162-162", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_66 [label="maybe.MatchJust(out value)", span="163-163", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_68 [label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="167-167", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_67 [label="return value;", span="165-165", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_69 [label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="LongOptionParser.cs"];
m1_57 [label="Entry lambda expression", span="155-157", cluster="lambda expression", file="LongOptionParser.cs"];
m1_0 [label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="LongOptionParser.cs"];
m1_1 [label="this.tag = tag", span="21-21", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="LongOptionParser.cs"];
m1_2 [label="Exit CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="LongOptionParser.cs"];
m1_60 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="LongOptionParser.cs"];
m1_58 [label="CommandLine.Parsing.LongOptionParser", span="", cluster="lambda expression", file="LongOptionParser.cs"];
m1_61 [label="resultSelector(sourceValue, resultValue)", span="157-157", cluster="lambda expression", file="LongOptionParser.cs"];
m1_59 [label="Exit lambda expression", span="155-157", cluster="lambda expression", file="LongOptionParser.cs"];
m1_62 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="LongOptionParser.cs"];
m1_54 [label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="LongOptionParser.cs"];
m1_74 [label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_75 [label="return maybe.Tag == MaybeType.Just;", span="177-177", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_76 [label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_55 [label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="LongOptionParser.cs"];
m1_71 [label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_72 [label="return maybe.Tag == MaybeType.Nothing;", span="172-172", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_73 [label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="LongOptionParser.cs"];
m1_46 [label="action(value)", span="139-139", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="LongOptionParser.cs"];
m1_53 [label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="LongOptionParser.cs"];
m1_47 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="LongOptionParser.cs"];
m1_63 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="LongOptionParser.cs"];
m1_77 [label="CSharpx.Maybe<T>", span="", file="LongOptionParser.cs"];
m1_78 [label="CSharpx.Just<T>", span="", file="LongOptionParser.cs"];
m1_79 [label="System.Func<TSource, CSharpx.Maybe<TValue>>", span="", file="LongOptionParser.cs"];
m1_80 [label="System.Func<TSource, TValue, TResult>", span="", file="LongOptionParser.cs"];
m1_81 [label=TSource, span="", file="LongOptionParser.cs"];
m2_0 [label="Entry CommandLine.Tests.MyClass.MyClass()", span="5-5", cluster="CommandLine.Tests.MyClass.MyClass()", file="MyClass.cs"];
m2_1 [label="Exit CommandLine.Tests.MyClass.MyClass()", span="5-5", cluster="CommandLine.Tests.MyClass.MyClass()", file="MyClass.cs"];
m3_9 [label="Entry CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78", cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs"];
m3_10 [label="return new OptionInfo(ShortName, LongName);", span="80-80", cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs"];
m3_11 [label="Exit CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78", cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs"];
m3_12 [label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78", cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionAttribute.cs"];
m3_3 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m3_4 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m3_7 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m3_8 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m3_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="41-41", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m3_1 [label="AutoLongName = true", span="43-43", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m3_2 [label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="41-41", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m3_5 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m3_6 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m3_13 [label="CommandLine.OptionAttribute", span="", file="OptionAttribute.cs"];
m4_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="OptionGroupParser.cs"];
m4_17 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="66-66", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="OptionGroupParser.cs"];
m4_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="OptionGroupParser.cs"];
m4_18 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="OptionGroupParser.cs"];
m4_88 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="OptionGroupParser.cs"];
m4_89 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", color=red, community=0, file="OptionGroupParser.cs"];
m4_90 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="OptionGroupParser.cs"];
m4_51 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="OptionGroupParser.cs"];
m4_52 [label="var builder = new StringBuilder()", span="60-60", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_53 [label="spec.TargetType", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_55 [label="builder.Append(FormatWithQuotesIfString(value))", span="64-64", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_57 [label="var sep = spec.SeperatorOrSpace()", span="67-67", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_59 [label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_61 [label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_62 [label="builder.TrimEndIfMatch(' ')", span="73-73", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_63 [label="return builder.ToString();", span="76-76", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_54 [label="TargetType.Scalar", span="63-63", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_56 [label="TargetType.Sequence", span="66-66", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_58 [label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_60 [label="e.MoveNext()", span="71-71", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_64 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionGroupParser.cs"];
m4_68 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="OptionGroupParser.cs"];
m4_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_35 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="OptionGroupParser.cs"];
m4_36 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionGroupParser.cs"];
m4_33 [label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_20 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="OptionGroupParser.cs", color=green, community=0];
m4_70 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="OptionGroupParser.cs"];
m4_102 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_103 [label="value == null", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_105 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_107 [label="value is string && ((string)value).Length == 0", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_109 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_104 [label="return true;", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_106 [label="return true;", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_108 [label="return true;", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_110 [label="return true;", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_111 [label="return false;", span="117-117", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_112 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionGroupParser.cs"];
m4_21 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="OptionGroupParser.cs"];
m4_82 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="OptionGroupParser.cs"];
m4_39 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_41 [label="i.Specification.Tag == SpecificationType.Value", span="45-45", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_44 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_13 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionGroupParser.cs"];
m4_16 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", color=green, community=0, file="OptionGroupParser.cs"];
m4_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="OptionGroupParser.cs"];
m4_94 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="OptionGroupParser.cs"];
m4_95 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", color=red, community=0, file="OptionGroupParser.cs"];
m4_96 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="OptionGroupParser.cs"];
m4_19 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="OptionGroupParser.cs"];
m4_77 [label="Entry T.ToMaybe<T>()", span="105-105", cluster="T.ToMaybe<T>()", file="OptionGroupParser.cs"];
m4_81 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="OptionGroupParser.cs"];
m4_91 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_28 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="105-105", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="OptionGroupParser.cs"];
m4_48 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="158-162", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="OptionGroupParser.cs"];
m4_27 [label="Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="104-104", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="OptionGroupParser.cs", color=green, community=0];
m4_47 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="155-155", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="OptionGroupParser.cs"];
m4_29 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="OptionGroupParser.cs"];
m4_38 [label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13", cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", color=red, community=0, file="OptionGroupParser.cs"];
m4_45 [label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="48-48", cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="OptionGroupParser.cs"];
m4_49 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="165-165", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="OptionGroupParser.cs"];
m4_72 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_71 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_73 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_79 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_84 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_83 [label="Entry lambda expression", span="86-87", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_78 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_80 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_85 [label="Exit lambda expression", span="86-87", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_92 [label="o.Separator != '\0' ? o.Separator : ' '", span="93-93", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_93 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="OptionGroupParser.cs"];
m4_24 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="OptionGroupParser.cs"];
m4_25 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", color=green, community=0, file="OptionGroupParser.cs"];
m4_26 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", color=green, community=0, file="OptionGroupParser.cs"];
m4_98 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="OptionGroupParser.cs"];
m4_8 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="45-48", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_9 [label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="OptionGroupParser.cs"];
m4_10 [label="builder.TrimEndIfMatch(' ')", span="51-51", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="OptionGroupParser.cs"];
m4_11 [label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_12 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs", color=red, community=0];
m4_46 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="OptionGroupParser.cs"];
m4_50 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="OptionGroupParser.cs"];
m4_113 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="OptionGroupParser.cs"];
m4_6 [label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_22 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="85-85", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="OptionGroupParser.cs"];
m4_5 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_87 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="OptionGroupParser.cs"];
m4_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="OptionGroupParser.cs"];
m4_67 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="OptionGroupParser.cs"];
m4_97 [label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105", cluster="CommandLine.Core.OptionSpecification.FormatName()", file="OptionGroupParser.cs"];
m4_65 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionGroupParser.cs"];
m4_74 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionGroupParser.cs"];
m4_75 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionGroupParser.cs"];
m4_76 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionGroupParser.cs"];
m4_23 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="OptionGroupParser.cs"];
m4_66 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="OptionGroupParser.cs"];
m4_114 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="OptionGroupParser.cs"];
m4_69 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="OptionGroupParser.cs"];
m4_99 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="OptionGroupParser.cs"];
m4_100 [label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", color=red, community=0, file="OptionGroupParser.cs"];
m4_101 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="OptionGroupParser.cs"];
m4_0 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_2 [label="throw new ArgumentNullException(''options'');", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_3 [label="var type = options.GetType()", span="28-28", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_1 [label="options == null", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_4 [label="var builder = new StringBuilder()", span="29-29", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionGroupParser.cs"];
m4_7 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", color=red, community=0, file="OptionGroupParser.cs"];
m4_115 [label=builder, span="", file="OptionGroupParser.cs"];
m4_116 [label=T, span="", file="OptionGroupParser.cs"];
m4_117 [label=sep, span="", file="OptionGroupParser.cs"];
m4_118 [label=doubQt, span="", file="OptionGroupParser.cs"];
m6_31 [label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_32 [label="return token.Tag == TokenType.Value;", span="75-75", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_33 [label="Exit CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_28 [label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_29 [label="return token.Tag == TokenType.Name;", span="70-70", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_30 [label="Exit CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_21 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="ParserSettings.cs"];
m6_0 [label="Entry CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="ParserSettings.cs"];
m6_1 [label="this.tag = tag", span="15-15", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="ParserSettings.cs"];
m6_2 [label="this.text = text", span="16-16", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="ParserSettings.cs"];
m6_3 [label="Exit CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="ParserSettings.cs"];
m6_17 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="ParserSettings.cs"];
m6_26 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)", file="ParserSettings.cs"];
m6_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="ParserSettings.cs"];
m6_16 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_22 [label="other == null", span="57-57", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_24 [label="return Tag.Equals(other.Tag) && Text.Equals(other.Text);", span="62-62", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_23 [label="return false;", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_25 [label="Exit CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserSettings.cs"];
m6_4 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="ParserSettings.cs"];
m6_5 [label="return new Token(TokenType.Name, text);", span="21-21", cluster="CommandLine.Core.Token.Name(string)", file="ParserSettings.cs"];
m6_6 [label="Exit CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="ParserSettings.cs"];
m6_18 [label="Entry CommandLine.Core.Token.GetHashCode()", span="50-50", cluster="CommandLine.Core.Token.GetHashCode()", file="ParserSettings.cs"];
m6_19 [label="return new {Tag, Text}.GetHashCode();", span="52-52", cluster="CommandLine.Core.Token.GetHashCode()", file="ParserSettings.cs"];
m6_20 [label="Exit CommandLine.Core.Token.GetHashCode()", span="50-50", cluster="CommandLine.Core.Token.GetHashCode()", file="ParserSettings.cs"];
m6_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="ParserSettings.cs"];
m6_8 [label="return new Token(TokenType.Value, text);", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="ParserSettings.cs"];
m6_9 [label="Exit CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="ParserSettings.cs"];
m6_10 [label="Entry CommandLine.Core.Token.Equals(object)", span="39-39", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_11 [label="var other = obj as Token", span="41-41", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_14 [label="return base.Equals(obj);", span="47-47", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_12 [label="other != null", span="42-42", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_13 [label="return Equals(other);", span="44-44", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_15 [label="Exit CommandLine.Core.Token.Equals(object)", span="39-39", cluster="CommandLine.Core.Token.Equals(object)", file="ParserSettings.cs"];
m6_34 [label="CommandLine.Core.Token", span="", file="ParserSettings.cs"];
m11_4 [label="Entry CommandLine.Extensions.StringExtensions.IsNumeric(string)", span="40-40", cluster="CommandLine.Extensions.StringExtensions.IsNumeric(string)", file="StringExtensions.cs"];
m11_5 [label="decimal temporary", span="42-42", cluster="CommandLine.Extensions.StringExtensions.IsNumeric(string)", file="StringExtensions.cs"];
m11_6 [label="return decimal.TryParse(value, out temporary);", span="43-43", cluster="CommandLine.Extensions.StringExtensions.IsNumeric(string)", file="StringExtensions.cs"];
m11_7 [label="Exit CommandLine.Extensions.StringExtensions.IsNumeric(string)", span="40-40", cluster="CommandLine.Extensions.StringExtensions.IsNumeric(string)", file="StringExtensions.cs"];
m11_8 [label="Entry decimal.TryParse(string, out decimal)", span="0-0", cluster="decimal.TryParse(string, out decimal)", file="StringExtensions.cs"];
m11_13 [label="Entry CommandLine.Extensions.StringExtensions.FormatLocal(string, params object[])", span="51-51", cluster="CommandLine.Extensions.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m11_14 [label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="53-53", cluster="CommandLine.Extensions.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m11_15 [label="Exit CommandLine.Extensions.StringExtensions.FormatLocal(string, params object[])", span="51-51", cluster="CommandLine.Extensions.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m11_28 [label="Entry CommandLine.Extensions.StringExtensions.IsShortOption(string)", span="71-71", cluster="CommandLine.Extensions.StringExtensions.IsShortOption(string)", file="StringExtensions.cs"];
m11_29 [label="return value[0] == '-';", span="73-73", cluster="CommandLine.Extensions.StringExtensions.IsShortOption(string)", color=red, community=0, file="StringExtensions.cs"];
m11_30 [label="Exit CommandLine.Extensions.StringExtensions.IsShortOption(string)", span="71-71", cluster="CommandLine.Extensions.StringExtensions.IsShortOption(string)", file="StringExtensions.cs"];
m11_3 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="StringExtensions.cs"];
m11_9 [label="Entry CommandLine.Extensions.StringExtensions.FormatInvariant(string, params object[])", span="46-46", cluster="CommandLine.Extensions.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m11_10 [label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="48-48", cluster="CommandLine.Extensions.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m11_11 [label="Exit CommandLine.Extensions.StringExtensions.FormatInvariant(string, params object[])", span="46-46", cluster="CommandLine.Extensions.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m11_24 [label="Entry CommandLine.Extensions.StringExtensions.IsDash(string)", span="66-66", cluster="CommandLine.Extensions.StringExtensions.IsDash(string)", file="StringExtensions.cs"];
m11_25 [label="return string.CompareOrdinal(value, ''-'') == 0;", span="68-68", cluster="CommandLine.Extensions.StringExtensions.IsDash(string)", color=red, community=0, file="StringExtensions.cs"];
m11_26 [label="Exit CommandLine.Extensions.StringExtensions.IsDash(string)", span="66-66", cluster="CommandLine.Extensions.StringExtensions.IsDash(string)", file="StringExtensions.cs"];
m11_27 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="StringExtensions.cs"];
m11_19 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="StringExtensions.cs"];
m11_16 [label="Entry CommandLine.Extensions.StringExtensions.ToOption(string)", span="56-56", cluster="CommandLine.Extensions.StringExtensions.ToOption(string)", file="StringExtensions.cs"];
m11_17 [label="return string.Concat(''--'', value);", span="58-58", cluster="CommandLine.Extensions.StringExtensions.ToOption(string)", color=red, community=0, file="StringExtensions.cs"];
m11_18 [label="Exit CommandLine.Extensions.StringExtensions.ToOption(string)", span="56-56", cluster="CommandLine.Extensions.StringExtensions.ToOption(string)", file="StringExtensions.cs"];
m11_31 [label="Entry CommandLine.Extensions.StringExtensions.IsLongOption(string)", span="76-76", cluster="CommandLine.Extensions.StringExtensions.IsLongOption(string)", file="StringExtensions.cs"];
m11_32 [label="return value[0] == '-' && value[1] == '-';", span="78-78", cluster="CommandLine.Extensions.StringExtensions.IsLongOption(string)", color=red, community=0, file="StringExtensions.cs"];
m11_33 [label="Exit CommandLine.Extensions.StringExtensions.IsLongOption(string)", span="76-76", cluster="CommandLine.Extensions.StringExtensions.IsLongOption(string)", file="StringExtensions.cs"];
m11_0 [label="Entry CommandLine.Extensions.StringExtensions.Spaces(int)", span="35-35", cluster="CommandLine.Extensions.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m11_1 [label="return new string(' ', value);", span="37-37", cluster="CommandLine.Extensions.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m11_2 [label="Exit CommandLine.Extensions.StringExtensions.Spaces(int)", span="35-35", cluster="CommandLine.Extensions.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m11_23 [label="Entry string.Concat(object, object)", span="0-0", cluster="string.Concat(object, object)", file="StringExtensions.cs"];
m11_20 [label="Entry CommandLine.Extensions.StringExtensions.ToOption(char?)", span="61-61", cluster="CommandLine.Extensions.StringExtensions.ToOption(char?)", file="StringExtensions.cs"];
m11_21 [label="return string.Concat(''-'', value);", span="63-63", cluster="CommandLine.Extensions.StringExtensions.ToOption(char?)", color=red, community=0, file="StringExtensions.cs"];
m11_22 [label="Exit CommandLine.Extensions.StringExtensions.ToOption(char?)", span="61-61", cluster="CommandLine.Extensions.StringExtensions.ToOption(char?)", file="StringExtensions.cs"];
m11_12 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringExtensions.cs"];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> m1_6  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=0, style=solid];
m1_12 -> m1_48  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_44  [key=0, style=solid];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_27  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_55  [key=2, style=dotted];
m1_34 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionMap"];
m1_3 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_3 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m1_3 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_3 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m1_3 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m1_3 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_3 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_11  [key=1, style=dashed, color=green, label=option];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=option];
m1_5 -> m1_3  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_11 -> m1_38  [key=0, style=solid, color=green];
m1_11 -> m1_10  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_47  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> m1_35  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_4 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_4 -> m1_45  [key=2, style=dotted];
m1_4 -> m1_46  [key=2, style=dotted];
m1_4 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_4 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_4 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=parts];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_6  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_49  [key=2, style=dotted];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m1_16 -> m1_10  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_50  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_52  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_55  [key=2, style=dotted];
m1_23 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_12  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_50  [key=2, style=dotted];
m1_25 -> m1_21  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_32  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_27 -> m1_15  [key=2, style=dotted];
m1_27 -> m1_18  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_49  [key=2, style=dotted];
m1_28 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_50  [key=2, style=dotted];
m1_30 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_52  [key=2, style=dotted];
m1_32 -> m1_6  [key=2, style=dotted];
m1_32 -> m1_34  [key=2, style=dotted];
m1_32 -> m1_15  [key=2, style=dotted];
m1_32 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=value1];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_50  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_57  [key=2, style=dotted];
m1_40 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_50  [key=2, style=dotted];
m1_42 -> m1_39  [key=0, style=bold, color=blue];
m1_8 -> m1_44  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_39 -> m1_44  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Either<T1, T2>"];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_53  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_53  [key=2, style=dotted];
m1_33 -> m1_30  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_54  [key=2, style=dotted];
m1_22 -> m1_24  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_19 -> m1_44  [key=0, style=solid];
m1_19 -> m1_51  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_12  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=0, style=solid];
m1_24 -> m1_10  [key=2, style=dotted];
m1_26 -> m1_44  [key=0, style=solid];
m1_26 -> m1_51  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_31 -> m1_44  [key=0, style=solid];
m1_31 -> m1_56  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=0, style=solid];
m1_37 -> m1_44  [key=0, style=solid];
m1_37 -> m1_51  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_6  [key=2, style=dotted];
m1_37 -> m1_34  [key=2, style=dotted];
m1_37 -> m1_18  [key=2, style=dotted];
m1_37 -> m1_15  [key=2, style=dotted];
m1_37 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=value1];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_6  [key=2, style=dotted];
m1_41 -> m1_34  [key=2, style=dotted];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=value1];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_51  [key=2, style=dotted];
m1_43 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m1_44 -> m1_3  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=2, style=dotted];
m1_51 -> m1_49  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_64 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=0, style=solid];
m1_66 -> m1_6  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=2, style=dotted];
m1_67 -> m1_69  [key=0, style=solid];
m1_69 -> m1_64  [key=0, style=bold, color=blue];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_34  [key=2, style=dotted];
m1_58 -> m1_52  [key=2, style=dotted];
m1_58 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_58 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_58 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_59 -> m1_57  [key=0, style=bold, color=blue];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=2, style=dotted];
m1_54 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_74  [key=0, style=bold, color=blue];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m1_53 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m1_47 -> m1_43  [key=0, style=bold, color=blue];
m1_77 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_77 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_77 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_77 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m1_78 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Just<T>"];
m1_79 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m1_80 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m1_80 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m1_81 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_11 -> m3_9  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_3  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_7  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_5  [key=0, style=bold, color=blue];
m3_13 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_13 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_7  [key=2, style=dotted];
m4_18 -> m4_14  [key=0, style=bold, color=blue];
m4_88 -> m4_89  [key=0, style=solid, color=red];
m4_89 -> m4_90  [key=0, style=solid, color=red];
m4_89 -> m4_77  [key=2, style=dotted, color=red];
m4_89 -> m4_18  [key=2, style=dotted, color=red];
m4_89 -> m4_91  [key=1, style=dashed, color=red, label="lambda expression"];
m4_90 -> m4_88  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_53  [key=1, style=dashed, color=red, label="CommandLine.Core.Specification"];
m4_51 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_51 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_51 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_51 -> m4_46  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid, color=red];
m4_52 -> m4_16  [key=2, style=dotted];
m4_52 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_52 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_52 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_52 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_53 -> m4_54  [key=0, style=solid, color=red];
m4_53 -> m4_56  [key=0, style=solid, color=red];
m4_55 -> m4_63  [key=0, style=solid];
m4_55 -> m4_65  [key=2, style=dotted];
m4_55 -> m4_66  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_67  [key=2, style=dotted];
m4_57 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_57 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_68  [key=2, style=dotted];
m4_59 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=e];
m4_61 -> m4_60  [key=0, style=solid];
m4_61 -> m4_70  [key=2, style=dotted];
m4_61 -> m4_66  [key=2, style=dotted];
m4_61 -> m4_31  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_24  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_25  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_58 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=fmtWithQuotesIfStr];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_62  [key=0, style=solid];
m4_60 -> m4_69  [key=2, style=dotted];
m4_64 -> m4_51  [key=0, style=bold, color=blue];
m4_32 -> m4_33  [key=0, style=solid];
m4_34 -> m4_6  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_34 -> m4_32  [key=0, style=bold, color=blue];
m4_35 -> m4_31  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_7  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_33 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_35  [key=2, style=dotted];
m4_37 -> m4_32  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid, color=red];
m4_20 -> m4_21  [key=0, style=solid, color=green];
m4_20 -> m4_13  [key=2, style=dotted, color=green];
m4_20 -> m4_22  [key=1, style=dashed, color=green, label=expectedErrors];
m4_102 -> m4_103  [key=0, style=solid, color=red];
m4_102 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_102 -> m4_107  [key=1, style=dashed, color=red, label=object];
m4_102 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_103 -> m4_104  [key=0, style=solid, color=red];
m4_103 -> m4_105  [key=0, style=solid, color=red];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_107  [key=0, style=solid, color=red];
m4_105 -> m4_15  [key=2, style=dotted];
m4_105 -> m4_113  [key=2, style=dotted];
m4_105 -> m4_114  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid, color=red];
m4_107 -> m4_109  [key=0, style=solid, color=red];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [key=0, style=solid];
m4_109 -> m4_68  [key=2, style=dotted];
m4_109 -> m4_69  [key=2, style=dotted];
m4_104 -> m4_112  [key=0, style=solid, color=red];
m4_106 -> m4_112  [key=0, style=solid];
m4_108 -> m4_112  [key=0, style=solid, color=red];
m4_110 -> m4_112  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_112 -> m4_102  [key=0, style=bold, color=blue];
m4_21 -> m4_6  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_41 -> m4_6  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_42 -> m4_31  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_40  [key=0, style=bold, color=blue];
m4_43 -> m4_7  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_40 -> m4_45  [key=2, style=dotted];
m4_44 -> m4_39  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=2, style=dotted];
m4_44 -> m4_30  [key=2, style=dotted];
m4_44 -> m4_31  [key=2, style=dotted];
m4_13 -> m4_0  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid, color=green];
m4_16 -> m4_6  [key=2, style=dotted, color=green];
m4_15 -> m4_16  [key=0, style=solid, color=green];
m4_15 -> m4_13  [key=2, style=dotted];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m4_94 -> m4_95  [key=0, style=solid, color=red];
m4_95 -> m4_96  [key=0, style=solid, color=red];
m4_95 -> m4_16  [key=2, style=dotted, color=red];
m4_95 -> m4_97  [key=2, style=dotted, color=red];
m4_95 -> m4_30  [key=2, style=dotted, color=red];
m4_95 -> m4_31  [key=2, style=dotted, color=red];
m4_95 -> m4_51  [key=2, style=dotted, color=red];
m4_95 -> m4_98  [key=2, style=dotted, color=red];
m4_95 -> m4_25  [key=2, style=dotted, color=red];
m4_96 -> m4_94  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_91 -> m4_92  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_28 -> m4_31  [key=2, style=dotted];
m4_28 -> m4_7  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=2, style=dotted];
m4_48 -> m4_30  [key=2, style=dotted];
m4_48 -> m4_31  [key=2, style=dotted];
m4_48 -> m4_6  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid, color=green];
m4_27 -> m4_31  [key=2, style=dotted, color=green];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_47 -> m4_45  [key=2, style=dotted];
m4_29 -> m4_27  [key=0, style=bold, color=blue];
m4_29 -> m4_24  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid, color=red];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_49 -> m4_31  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_65  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_73 -> m4_71  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=2, style=dotted];
m4_79 -> m4_82  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=2, style=dotted];
m4_84 -> m4_81  [key=2, style=dotted];
m4_84 -> m4_70  [key=2, style=dotted];
m4_84 -> m4_87  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_80 -> m4_78  [key=0, style=bold, color=blue];
m4_85 -> m4_83  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_91  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid, color=green];
m4_25 -> m4_26  [key=0, style=solid, color=green];
m4_25 -> m4_30  [key=2, style=dotted, color=green];
m4_25 -> m4_28  [key=1, style=dashed, color=green, label=expected];
m4_26 -> m4_27  [key=0, style=solid, color=green];
m4_26 -> m4_6  [key=2, style=dotted, color=green];
m4_26 -> m4_28  [key=1, style=dashed, color=green, label=result];
m4_8 -> m4_9  [key=0, style=solid, color=green];
m4_8 -> m4_21  [key=2, style=dotted];
m4_8 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m4_9 -> m4_10  [key=0, style=solid, color=green];
m4_9 -> m4_13  [key=2, style=dotted, color=green];
m4_9 -> m4_11  [key=1, style=dashed, color=green, label=expectedErrors];
m4_9 -> m4_23  [key=2, style=dotted];
m4_9 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_10 -> m4_11  [key=0, style=solid, color=green];
m4_10 -> m4_6  [key=2, style=dotted, color=green];
m4_10 -> m4_24  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid, color=red];
m4_11 -> m4_7  [key=2, style=dotted];
m4_11 -> m4_23  [key=2, style=dotted];
m4_11 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_12 -> m4_8  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid, color=red];
m4_12 -> m4_25  [key=2, style=dotted, color=red];
m4_12 -> m4_26  [key=2, style=dotted, color=red];
m4_12 -> m4_0  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> expected"];
m4_12 -> m4_7  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> expected"];
m4_12 -> m4_19  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> result"];
m4_12 -> m4_4  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> result"];
m4_46 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_46 -> m4_47  [key=0, style=solid];
m4_50 -> m4_7  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_19  [key=2, style=dotted];
m4_6 -> m4_20  [key=2, style=dotted];
m4_6 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_6 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_6 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_5 -> m4_18  [key=2, style=dotted];
m4_5 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_65 -> m4_74  [key=0, style=solid];
m4_65 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_74 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [key=2, style=dotted];
m4_75 -> m4_18  [key=2, style=dotted];
m4_75 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_65  [key=0, style=bold, color=blue];
m4_23 -> m4_19  [key=0, style=bold, color=blue];
m4_99 -> m4_100  [key=0, style=solid, color=red];
m4_100 -> m4_101  [key=0, style=solid, color=red];
m4_100 -> m4_87  [key=2, style=dotted, color=red];
m4_101 -> m4_99  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_0 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_13  [key=0, style=solid];
m4_2 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_3 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m4_1 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_4 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_12  [key=1, style=dashed, color=red, label=builder];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_21  [key=2, style=dotted, color=red];
m4_7 -> m4_22  [key=2, style=dotted, color=red];
m4_7 -> m4_37  [key=1, style=dashed, color=red, label="lambda expression"];
m4_7 -> m4_7  [key=1, style=dashed, color=red, label=info];
m4_7 -> m4_9  [key=1, style=dashed, color=red, label=optSpecs];
m4_115 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_115 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_115 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_116 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_117 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_118 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_33 -> m6_31  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_28  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_16 -> m6_22  [key=0, style=solid];
m6_16 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_27  [key=2, style=dotted];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_16  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_0  [key=2, style=dotted];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_0  [key=2, style=dotted];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=other];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_17  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=0, style=solid];
m6_13 -> m6_16  [key=2, style=dotted];
m6_15 -> m6_10  [key=0, style=bold, color=blue];
m6_34 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_34 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_34 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_34 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_34 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m6_34 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_8  [key=2, style=dotted];
m11_7 -> m11_4  [key=0, style=bold, color=blue];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_12  [key=2, style=dotted];
m11_15 -> m11_13  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid, color=red];
m11_29 -> m11_30  [key=0, style=solid, color=red];
m11_30 -> m11_28  [key=0, style=bold, color=blue];
m11_9 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_12  [key=2, style=dotted];
m11_11 -> m11_9  [key=0, style=bold, color=blue];
m11_24 -> m11_25  [key=0, style=solid, color=red];
m11_25 -> m11_26  [key=0, style=solid, color=red];
m11_25 -> m11_27  [key=2, style=dotted, color=red];
m11_26 -> m11_24  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid, color=red];
m11_17 -> m11_18  [key=0, style=solid, color=red];
m11_17 -> m11_19  [key=2, style=dotted, color=red];
m11_18 -> m11_16  [key=0, style=bold, color=blue];
m11_31 -> m11_32  [key=0, style=solid, color=red];
m11_32 -> m11_33  [key=0, style=solid, color=red];
m11_33 -> m11_31  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_20 -> m11_21  [key=0, style=solid, color=red];
m11_21 -> m11_22  [key=0, style=solid, color=red];
m11_21 -> m11_23  [key=2, style=dotted, color=red];
m11_22 -> m11_20  [key=0, style=bold, color=blue];
}
