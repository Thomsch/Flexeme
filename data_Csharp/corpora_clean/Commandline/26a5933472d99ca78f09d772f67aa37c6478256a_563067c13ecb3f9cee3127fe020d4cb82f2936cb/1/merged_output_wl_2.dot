digraph  {
n233 [label="CommandLine.CommandLineParser", span=""];
n234 [label=object, span=""];
n0 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
n1 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="_settings = new CommandLineParserSettings()", span="53-53"];
n2 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
n3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
n4 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
n5 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="61-61"];
n6 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
n7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
n8 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
n9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="72-72"];
n10 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="_settings = settings", span="73-73"];
n12 [cluster="CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", label="Entry CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", span="45-45"];
n11 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
n13 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
n14 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="96-96"];
n15 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="97-97"];
n16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="return DoParseArguments(args, options);", span="99-99"];
n17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
n18 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
n19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
n20 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="117-117"];
n21 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="118-118"];
n22 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="_settings.HelpWriter = helpWriter", span="120-120"];
n23 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return DoParseArguments(args, options);", span="121-121"];
n24 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
n25 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="126-126"];
n27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="_context = new ParserContext(args, options)", span="129-129"];
n29 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="ParseHelp(args, pair.Right) || !DoParseArgumentsDispatcher(_context)", span="134-134"];
n31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="137-137"];
n26 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var helpWriter = _settings.HelpWriter", span="127-127"];
n37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
n28 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="pair != null && helpWriter != null", span="131-131"];
n32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="helpWriter.Write(helpText)", span="138-138"];
n38 [cluster="CommandLine.ParserContext.ParserContext(string[], object)", label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="42-42"];
n35 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="return DoParseArgumentsDispatcher(_context);", span="144-144"];
n30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="string helpText", span="136-136"];
n34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="return true;", span="141-141"];
n39 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
n40 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", label="Entry CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
n41 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
n33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="return false;", span="139-139"];
n42 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
n43 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", label="return context.Target.HasVerbs() ?\r\n                DoParseArgumentsVerbs(context) :\r\n                DoParseArgumentsCore(context);", span="149-151"];
n44 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", label="Exit CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
n45 [cluster="object.HasVerbs()", label="Entry object.HasVerbs()", span="33-33"];
n46 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="Entry CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
n47 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
n48 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, label="0: bool hadError = false", span="156-156"];
n49 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="var optionMap = OptionMap.Create(context.Target, _settings)", span="157-157"];
n51 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, label="0: var target = new Target(context.Target)", span="159-159"];
n52 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(context.Arguments)", span="161-161"];
n58 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="var result = parser.Parse(arguments, optionMap, context.Target)", span="172-172"];
n60 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="SetParserStateIfNeeded(context.Target, parser.PostParsingState)", span="175-175"];
n67 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="hadError |= !optionMap.EnforceRules()", span="194-194"];
n50 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="optionMap.SetDefaults()", span="158-158"];
n70 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
n71 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
n72 [cluster="CommandLine.Internal.Target.Target(object)", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
n64 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, label="0: target.IsValueListDefined", span="185-185"];
n65 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, label="0: !target.AddValueItemIfAllowed(argument)", span="187-187"];
n53 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="arguments.MoveNext()", span="162-162"];
n73 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
n54 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="var argument = arguments.Current", span="164-164"];
n63 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="arguments.MoveNext()", span="182-182"];
n74 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
n55 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="string.IsNullOrEmpty(argument)", span="165-165"];
n56 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="169-169"];
n75 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n57 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="parser != null", span="170-170"];
n76 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="52-52"];
n59 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="173-173"];
n77 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
n62 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="180-180"];
n61 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="hadError = true", span="176-176"];
n78 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
n66 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="hadError = true", span="189-189"];
n79 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
n68 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="return !hadError;", span="196-196"];
n80 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
n69 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
n81 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="var caseSensitive = _settings.CaseSensitive", span="201-201"];
n82 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label=args, span="202-202"];
n83 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="helpOption.ShortName != null", span="204-204"];
n84 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="206-206"];
n86 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="string.IsNullOrEmpty(helpOption.LongName)", span="211-211"];
n87 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="215-215"];
n89 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return false;", span="220-220"];
n85 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="208-208"];
n91 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
n88 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="217-217"];
n92 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
n90 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
n93 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
n94 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="found = false", span="234-234"];
n95 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="string.IsNullOrEmpty(verb)", span="235-235"];
n96 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="return target;", span="237-237"];
n97 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="239-239"];
n99 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="return found ? pair.Left.GetValue(target, null) : target;", span="241-241"];
n98 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="found = pair != null", span="240-240"];
n101 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
n100 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
n102 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n103 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="Entry CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
n104 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="string.IsNullOrEmpty(verb) || (verb.Length > 0 && verb[0] == '-')", span="254-254"];
n108 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="return string.Compare(_context.FirstArgument, verb, _settings.StringComparison) == 0;", span="262-262"];
n105 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="return false;", span="256-256"];
n106 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="!_context.HasAtLeastOneArgument()", span="258-258"];
n107 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="return false;", span="260-260"];
n110 [cluster="CommandLine.ParserContext.HasAtLeastOneArgument()", label="Entry CommandLine.ParserContext.HasAtLeastOneArgument()", span="65-65"];
n109 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", label="Exit CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
n111 [cluster="string.Compare(string, string, System.StringComparison)", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
n112 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(context.Target)", span="267-267"];
n113 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(context.Target)", span="268-268"];
n114 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="context.HasNoArguments()", span="269-269"];
n116 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="273-273"];
n118 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="var optionMap = OptionMap.Create(context.Target, verbs, _settings)", span="277-277"];
n119 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="TryParseHelpVerb(context.Arguments, context.Target, helpInfo, optionMap)", span="279-279"];
n121 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="var verbOption = optionMap[context.FirstArgument]", span="284-284"];
n124 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="290-290"];
n126 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="verbOption.GetValue(context.Target) == null", span="294-294"];
n127 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="verbOption.CreateInstance(context.Target)", span="297-297"];
n128 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="var verbResult = DoParseArgumentsCore(context.ToCoreInstance(verbOption))", span="299-299"];
n130 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="DisplayHelpVerbText(context.Target, helpInfo, context.FirstArgument)", span="303-303"];
n133 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
n115 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="helpInfo != null || _settings.HelpWriter != null", span="271-271"];
n123 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="helpInfo != null", span="288-288"];
n134 [cluster="CommandLine.ParserContext.HasNoArguments()", label="Entry CommandLine.ParserContext.HasNoArguments()", span="60-60"];
n117 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="return false;", span="275-275"];
n135 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
n136 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
n120 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="return false;", span="282-282"];
n137 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
n122 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="verbOption == null", span="286-286"];
n125 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="return false;", span="292-292"];
n138 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
n139 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
n129 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="!verbResult", span="300-300"];
n140 [cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", span="48-48"];
n131 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="return verbResult;", span="305-305"];
n132 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", label="Exit CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
n141 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="var helpWriter = _settings.HelpWriter", span="310-310"];
n142 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="helpInfo != null && helpWriter != null", span="311-311"];
n143 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", span="313-313"];
n144 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="var verb = args.Length > 1 ? args[1] : null", span="316-316"];
n146 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="var verbOption = optionMap[verb]", span="319-319"];
n148 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="verbOption.GetValue(options) == null", span="322-322"];
n149 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="verbOption.CreateInstance(options)", span="325-325"];
n150 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="DisplayHelpVerbText(options, helpInfo, verb)", span="329-329"];
n152 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="return false;", span="333-333"];
n145 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="verb != null", span="317-317"];
n147 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="verbOption != null", span="320-320"];
n151 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="return true;", span="330-330"];
n153 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
n154 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="string helpText", span="338-338"];
n155 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="verb == null", span="339-339"];
n156 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="341-341"];
n157 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="345-345"];
n158 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="_settings.HelpWriter != null", span="347-347"];
n161 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
n159 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="_settings.HelpWriter.Write(helpText)", span="349-349"];
n160 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
n162 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
n163 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="374-374"];
n164 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="375-375"];
n165 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="377-377"];
n166 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
n167 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="Entry CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
n168 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
n169 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="394-394"];
n170 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="395-395"];
n171 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", label="return DoParseArgumentsStrict(args, options, exitCode);", span="397-397"];
n172 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
n173 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
n174 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="416-416"];
n175 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="417-417"];
n176 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="_settings.HelpWriter = helpWriter", span="419-419"];
n177 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="421-421"];
n178 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
n179 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
n180 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="441-441"];
n181 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="442-442"];
n182 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="_settings.HelpWriter = helpWriter", span="444-444"];
n183 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="return DoParseArgumentsStrict(args, options, exitCode);", span="446-446"];
n184 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
n185 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="!DoParseArguments(args, options)", span="451-451"];
n186 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="InvokeAutoBuildIfNeeded(options)", span="453-453"];
n187 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="Environment.Exit(exitCode)", span="456-456"];
n188 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="return true;", span="464-464"];
n190 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", label="Entry CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
n191 [cluster="System.Environment.Exit(int)", label="Entry System.Environment.Exit(int)", span="0-0"];
n189 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", label="Exit CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
n192 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="469-471"];
n194 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", label="_settings.HelpWriter.Write(HelpText.AutoBuild(options,\r\n                current => HelpText.DefaultParsingErrorsHandler(options, current), options.HasVerbs()))", span="477-478"];
n200 [cluster="lambda expression", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="478-478"];
n193 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", label="return;", span="473-473"];
n196 [cluster="object.HasHelp()", label="Entry object.HasHelp()", span="38-38"];
n197 [cluster="object.HasVerbHelp()", label="Entry object.HasVerbHelp()", span="43-43"];
n195 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", label="Exit CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
n198 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", span="209-209"];
n199 [cluster="lambda expression", label="Entry lambda expression", span="478-478"];
n201 [cluster="lambda expression", label="Exit lambda expression", span="478-478"];
n202 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="248-248"];
n203 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="!options.CanReceiveParserState()", span="484-484"];
n205 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="488-488"];
n206 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="property.GetValue(options, null) == null", span="490-490"];
n207 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="property.SetValue(options, new ParserState(), null)", span="493-493"];
n208 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="var parserState = (IParserState) property.GetValue(options, null)", span="495-495"];
n209 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label=errors, span="496-496"];
n204 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="return;", span="486-486"];
n212 [cluster="object.CanReceiveParserState()", label="Entry object.CanReceiveParserState()", span="48-48"];
n213 [cluster="CommandLine.ParserState.ParserState()", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
n214 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n210 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="parserState.Errors.Add(error)", span="498-498"];
n211 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
n215 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n216 [cluster="CommandLine.CommandLineParser.Dispose()", label="Entry CommandLine.CommandLineParser.Dispose()", span="505-505"];
n217 [cluster="CommandLine.CommandLineParser.Dispose()", label="Dispose(true)", span="507-507"];
n218 [cluster="CommandLine.CommandLineParser.Dispose()", label="GC.SuppressFinalize(this)", span="509-509"];
n220 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
n219 [cluster="CommandLine.CommandLineParser.Dispose()", label="Exit CommandLine.CommandLineParser.Dispose()", span="505-505"];
n221 [cluster="System.GC.SuppressFinalize(object)", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
n222 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label=_disposed, span="514-514"];
n224 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label=disposing, span="518-518"];
n223 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="return;", span="516-516"];
n225 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="_settings != null", span="520-520"];
n228 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="Exit CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
n226 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="_settings.Dispose()", span="522-522"];
n227 [cluster="CommandLine.CommandLineParser.Dispose(bool)", label="_disposed = true", span="524-524"];
n229 [cluster="CommandLine.CommandLineParserSettings.Dispose()", label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="163-163"];
n230 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", label="Entry CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
n231 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", label="Dispose(false)", span="533-533"];
n232 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", label="Exit CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m2_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="PropertyWriter.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m2_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PropertyWriter.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_13 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="PropertyWriter.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58"];
m2_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38"];
m2_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="41-42"];
m2_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, typeof(IEnumerable<string>), TargetType.Sequence, string.Empty, string.Empty, new List<string>())}", span="43-44"];
m2_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.True(expectedTokens.SequenceEqual(result.Value))", span="56-56"];
m2_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="47-53"];
m2_26 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="PropertyWriter.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38"];
m2_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", file="PropertyWriter.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", span="18-18"];
m2_20 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="PropertyWriter.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m2_16 [cluster="Unk.True", file="PropertyWriter.cs", label="Entry Unk.True", span=""];
m2_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="14-14"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="17-18"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, typeof(IEnumerable<string>), TargetType.Sequence, string.Empty, string.Empty, new List<string>())}", span="19-20"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.True(expectedTokens.SequenceEqual(result.Value))", span="32-32"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="PropertyWriter.cs", label="0: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="23-29"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="PropertyWriter.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="14-14"];
m2_27 [cluster="lambda expression", file="PropertyWriter.cs", label="Entry lambda expression", span="53-53"];
m2_18 [cluster="lambda expression", color=green, community=0, file="PropertyWriter.cs", label="0: NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="29-29"];
m2_17 [cluster="lambda expression", file="PropertyWriter.cs", label="Entry lambda expression", span="29-29"];
m2_19 [cluster="lambda expression", file="PropertyWriter.cs", label="Exit lambda expression", span="29-29"];
m2_28 [cluster="lambda expression", color=green, community=0, file="PropertyWriter.cs", label="0: NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="53-53"];
m2_29 [cluster="lambda expression", file="PropertyWriter.cs", label="Exit lambda expression", span="53-53"];
m2_6 [cluster="CommandLine.Core.Token.Name(string)", file="PropertyWriter.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m2_15 [cluster="Unk.SequenceEqual", file="PropertyWriter.cs", label="Entry Unk.SequenceEqual", span=""];
m2_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="PropertyWriter.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m2_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="PropertyWriter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_7 [cluster="CommandLine.Core.Token.Value(string)", file="PropertyWriter.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m2_10 [cluster="System.Collections.Generic.List<T>.List()", file="PropertyWriter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_30 [file="PropertyWriter.cs", label=specs, span=""];
m2_31 [file="PropertyWriter.cs", label=specs, span=""];
m5_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Target.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m5_60 [cluster="Unk.FromJustOrFail", file="Target.cs", label="Entry Unk.FromJustOrFail", span=""];
m5_74 [cluster="NameInfo.cstr", file="Target.cs", label="Entry NameInfo.cstr", span=""];
m5_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m5_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=red, community=0, file="Target.cs", label="0: return specProps =>\r\n            {\r\n                var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o;\r\n                var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g;\r\n                if (groups.Count() > 1)\r\n                {\r\n                    return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);\r\n                }\r\n                return Enumerable.Empty<Error>();\r\n            };", span="26-45"];
m5_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m5_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m5_40 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="98-114"];
m5_41 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m5_38 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Target.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316"];
m5_20 [cluster="MutuallyExclusiveSetError.cstr", file="Target.cs", label="Entry MutuallyExclusiveSetError.cstr", span=""];
m5_49 [cluster="Unk.Any", file="Target.cs", label="Entry Unk.Any", span=""];
m5_70 [cluster="CommandLine.Core.Token.IsName()", file="Target.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m5_37 [cluster="CommandLine.Core.Specification.IsValue()", file="Target.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m5_22 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Target.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_33 [cluster="Unk.IsNothing", file="Target.cs", label="Entry Unk.IsNothing", span=""];
m5_48 [cluster="Unk.Where", file="Target.cs", label="Entry Unk.Where", span=""];
m5_39 [cluster="Unk.FromSpecification", file="Target.cs", label="Entry Unk.FromSpecification", span=""];
m5_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m5_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="119-139"];
m5_62 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m5_50 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="Target.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m5_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Target.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m5_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m5_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m5_63 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="119-139"];
m5_11 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o", span="28-34"];
m5_10 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="26-45"];
m5_12 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g", span="35-37"];
m5_14 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);", span="40-42"];
m5_13 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: groups.Count() > 1", span="38-38"];
m5_15 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: return Enumerable.Empty<Error>();", span="44-44"];
m5_16 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="26-45"];
m5_26 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58"];
m5_28 [cluster="lambda expression", file="Target.cs", label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72"];
m5_29 [cluster="lambda expression", file="Target.cs", label="var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89"];
m5_25 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="50-93"];
m5_27 [cluster="lambda expression", color=red, community=0, file="Target.cs", label="0: var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64"];
m5_30 [cluster="lambda expression", file="Target.cs", label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92"];
m5_31 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="50-93"];
m5_43 [cluster="lambda expression", file="Target.cs", label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())\r\n                        )", span="100-106"];
m5_42 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="98-114"];
m5_44 [cluster="lambda expression", file="Target.cs", label="options.Any()", span="107-107"];
m5_51 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="101-101"];
m5_54 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="102-102"];
m5_57 [cluster="lambda expression", file="Target.cs", label="Entry lambda expression", span="103-105"];
m5_45 [cluster="lambda expression", file="Target.cs", label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111"];
m5_46 [cluster="lambda expression", file="Target.cs", label="return Enumerable.Empty<Error>();", span="113-113"];
m5_47 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="98-114"];
m5_52 [cluster="lambda expression", file="Target.cs", label="sp.Specification.TargetType == TargetType.Sequence", span="101-101"];
m5_53 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="101-101"];
m5_55 [cluster="lambda expression", file="Target.cs", label="sp.Value.IsJust()", span="102-102"];
m5_56 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="102-102"];
m5_58 [cluster="lambda expression", file="Target.cs", label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length < sp.Specification.Min.FromJustOrFail())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJustOrFail()).Length > sp.Specification.Max.FromJustOrFail())", span="104-105"];
m5_59 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="103-105"];
m5_65 [cluster="lambda expression", file="Target.cs", label="var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="125-130"];
m5_64 [cluster="lambda expression", file="Target.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-124"];
m5_66 [cluster="lambda expression", file="Target.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="131-134"];
m5_67 [cluster="lambda expression", file="Target.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="135-137"];
m5_68 [cluster="lambda expression", file="Target.cs", label="return errors;", span="138-138"];
m5_69 [cluster="lambda expression", file="Target.cs", label="Exit lambda expression", span="119-139"];
m5_73 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="Target.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="371-371"];
m5_36 [cluster="Unk.Concat", file="Target.cs", label="Entry Unk.Concat", span=""];
m5_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m5_23 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=red, community=0, file="Target.cs", label="0: return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93"];
m5_24 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m5_18 [cluster="Unk.IsJust", file="Target.cs", label="Entry Unk.IsJust", span=""];
m5_34 [cluster="Unk.ContainsIfNotEmpty", file="Target.cs", label="Entry Unk.ContainsIfNotEmpty", span=""];
m5_71 [cluster="Unk.UniqueName", file="Target.cs", label="Entry Unk.UniqueName", span=""];
m5_35 [cluster="Unk.Except", file="Target.cs", label="Entry Unk.Except", span=""];
m5_72 [cluster="Unk.DefaultIfEmpty", file="Target.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m5_17 [cluster="CommandLine.Core.Specification.IsOption()", file="Target.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m5_75 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m5_76 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs", label="sequence.Any()", span="144-144"];
m5_77 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs", label="return sequence.Contains(value);", span="146-146"];
m5_78 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs", label="return true;", span="148-148"];
m5_79 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="Target.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m5_3 [cluster="System.Collections.Generic.List<T>.List()", file="Target.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_32 [cluster="Unk.Distinct", file="Target.cs", label="Entry Unk.Distinct", span=""];
m5_19 [cluster="Unk.Count", file="Target.cs", label="Entry Unk.Count", span=""];
m5_21 [cluster="Unk.FromOptionSpecification", file="Target.cs", label="Entry Unk.FromOptionSpecification", span=""];
m5_82 [file="Target.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m6_17 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m6_14 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m6_15 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", color=green, community=0, file="TargetExtensions.cs", label="0: return new ValueMapper(target);", span="58-58"];
m6_16 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m7_4 [cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="ValueListAttribute.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="17-17"];
m7_0 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21"];
m7_1 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs", label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", span="23-25"];
m7_2 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="ValueListAttribute.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21"];
m7_5 [cluster="Unk.ShouldBeEquivalentTo", file="ValueListAttribute.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m7_3 [cluster="CommandLine.Parser.Parser()", file="ValueListAttribute.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m8_43 [cluster="System.Action<T>.Invoke(T)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m8_12 [cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Just<T>.Just(T)", span="58-58"];
m8_13 [cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs", label="this.value = value", span="61-61"];
m8_14 [cluster="CSharpx.Just<T>.Just(T)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Just<T>.Just(T)", span="58-58"];
m8_29 [cluster="System.Func<T, TResult>.Invoke(T)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m8_65 [cluster="System.ArgumentException.ArgumentException(string)", file="ValueListAttributeParsingFixture.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_51 [cluster="CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m8_44 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143"];
m8_45 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.Map(selector);", span="146-146"];
m8_46 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143"];
m8_47 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="118-118"];
m8_34 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126"];
m8_35 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs", label="T1 value1", span="128-128"];
m8_36 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs", label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : noneValue;", span="129-131"];
m8_37 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126"];
m8_59 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160"];
m8_60 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="T value", span="162-162"];
m8_61 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="maybe.MatchJust(out value)", span="163-163"];
m8_63 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="167-167"];
m8_62 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="return value;", span="165-165"];
m8_64 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160"];
m8_18 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m8_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs", label="return new Just<T>(value);", span="82-82"];
m8_20 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Maybe.Just<T>(T)", span="80-80"];
m8_55 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Entry lambda expression", span="157-157"];
m8_53 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue))", span="155-157"];
m8_56 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="resultSelector(sourceValue, resultValue)", span="157-157"];
m8_52 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Entry lambda expression", span="155-157"];
m8_54 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Exit lambda expression", span="155-157"];
m8_57 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Exit lambda expression", span="157-157"];
m8_69 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175"];
m8_70 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.Tag == MaybeType.Just;", span="177-177"];
m8_71 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175"];
m8_25 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m8_26 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs", label="T1 value1", span="112-112"];
m8_27 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : Maybe.Nothing<T2>();", span="113-115"];
m8_28 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m8_66 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170"];
m8_67 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.Tag == MaybeType.Nothing;", span="172-172"];
m8_68 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170"];
m8_15 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m8_16 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs", label="return new Nothing<T>();", span="77-77"];
m8_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Maybe.Nothing<T>()", span="75-75"];
m8_3 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m8_4 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs", label="return Tag == MaybeType.Nothing;", span="31-31"];
m8_5 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m8_24 [cluster="object.Equals(object, object)", file="ValueListAttributeParsingFixture.cs", label="Entry object.Equals(object, object)", span="0-0"];
m8_10 [cluster="CSharpx.Nothing<T>.Nothing()", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Nothing<T>.Nothing()", span="48-48"];
m8_11 [cluster="CSharpx.Nothing<T>.Nothing()", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48"];
m8_38 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m8_39 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs", label="T value", span="136-136"];
m8_40 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs", label="maybe.MatchJust(out value)", span="137-137"];
m8_41 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs", label="action(value)", span="139-139"];
m8_42 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m8_48 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m8_49 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157"];
m8_50 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m8_0 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19"];
m8_1 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs", label="this.tag = tag", span="21-21"];
m8_2 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19"];
m8_21 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m8_22 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs", label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="107-107"];
m8_23 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m8_58 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m8_30 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m8_31 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs", label="T1 value1", span="120-120"];
m8_32 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs", label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", span="121-123"];
m8_33 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m8_6 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m8_7 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs", label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", span="36-38"];
m8_8 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs", label="return Tag == MaybeType.Just;", span="39-39"];
m8_9 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="ValueListAttributeParsingFixture.cs", label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m8_72 [file="ValueListAttributeParsingFixture.cs", label="CSharpx.Maybe<T>", span=""];
m8_73 [file="ValueListAttributeParsingFixture.cs", label="CSharpx.Just<T>", span=""];
m8_74 [file="ValueListAttributeParsingFixture.cs", label="System.Func<TSource, CSharpx.Maybe<TValue>>", span=""];
m8_75 [file="ValueListAttributeParsingFixture.cs", label="System.Func<TSource, TValue, TResult>", span=""];
m8_76 [file="ValueListAttributeParsingFixture.cs", label=TSource, span=""];
m9_0 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="49-49"];
m9_1 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs", label="0: concreteType == null", span="52-52"];
m9_2 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs", label="0: throw new ArgumentNullException(''concreteType'');", span="54-54"];
m9_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs", label="0: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="57-57"];
m9_4 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs", label="0: throw new ParserException(SR.CommandLineParserException_IncompatibleTypes);", span="59-59"];
m9_5 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="ValueMapper.cs", label="1: _concreteType = concreteType", span="62-62"];
m9_6 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueMapper.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="49-49"];
m9_25 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="99-99"];
m9_26 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="var list = ReflectionHelper.RetrievePropertyList<ValueListAttribute>(target)", span="101-101"];
m9_28 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="return null;", span="104-104"];
m9_30 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="throw new InvalidOperationException();", span="109-109"];
m9_32 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="return pairZero.Right;", span="113-113"];
m9_27 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="list == null || list.Count == 0", span="102-102"];
m9_29 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="list.Count > 1", span="107-107"];
m9_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="var pairZero = list[0]", span="112-112"];
m9_33 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="99-99"];
m9_9 [cluster="CommandLine.ParserException.ParserException(string)", file="ValueMapper.cs", label="Entry CommandLine.ParserException.ParserException(string)", span="49-49"];
m9_13 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="85-85"];
m9_14 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="2: Type concreteType", span="87-87"];
m9_15 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="0: var property = GetProperty(target, out concreteType)", span="88-88"];
m9_16 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="0: property == null || concreteType == null", span="89-89"];
m9_18 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="0: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="94-94"];
m9_19 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="0: return (IList<string>)property.GetValue(target, null);", span="96-96"];
m9_17 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="ValueMapper.cs", label="1: return null;", span="91-91"];
m9_20 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="85-85"];
m9_21 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="116-116"];
m9_36 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="concreteType = null", span="118-118"];
m9_37 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="var list = ReflectionHelper.RetrievePropertyList<ValueListAttribute>(target)", span="119-119"];
m9_39 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="return null;", span="122-122"];
m9_41 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="throw new InvalidOperationException();", span="127-127"];
m9_43 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="concreteType = pairZero.Right.ConcreteType", span="131-131"];
m9_44 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="return pairZero.Left;", span="132-132"];
m9_38 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="list == null || list.Count == 0", span="120-120"];
m9_40 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="list.Count > 1", span="125-125"];
m9_42 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="var pairZero = list[0]", span="130-130"];
m9_45 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueMapper.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="116-116"];
m9_10 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="65-65"];
m9_11 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, file="ValueMapper.cs", label="1: MaximumElements = -1", span="67-67"];
m9_12 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueMapper.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="65-65"];
m9_22 [cluster="System.Activator.CreateInstance(System.Type)", file="ValueMapper.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m9_34 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m9_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueMapper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_8 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueMapper.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m9_24 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueMapper.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m9_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueMapper.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m9_46 [file="ValueMapper.cs", label="CommandLine.ValueListAttribute", span=""];
n233 -> n1  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n5  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n16  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n22  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n23  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n26  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n27  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n29  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n35  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n43  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n49  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n56  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n81  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n106  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n108  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n115  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n116  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n118  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n119  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n124  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n128  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n130  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n141  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n143  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n150  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n158  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n159  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n165  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n171  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n176  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n177  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n182  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n183  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n185  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n186  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n192  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n194  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n217  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n218  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n222  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n225  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n226  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n227  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n233 -> n231  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n234 -> n200  [color=darkseagreen4, key=1, label=object, style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n6 -> n4  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n11 -> n8  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [color=darkseagreen4, key=1, label=object, style=dashed];
n13 -> n16  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n13 -> n18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n14 -> n15  [key=0, style=solid];
n14 -> n12  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n13  [color=blue, key=0, style=bold];
n18 -> n25  [key=0, style=solid];
n18 -> n27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n18 -> n29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n18 -> n31  [color=darkseagreen4, key=1, label=object, style=dashed];
n18 -> n13  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n18 -> n19  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n18 -> n167  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n18 -> n33  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
n18 -> n34  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
n18 -> n40  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [color=darkseagreen4, key=1, label=object, style=dashed];
n19 -> n22  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n19 -> n23  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n19 -> n18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n20 -> n21  [key=0, style=solid];
n20 -> n12  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n12  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n18  [key=2, style=dotted];
n24 -> n19  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n37  [key=2, style=dotted];
n25 -> n28  [color=darkseagreen4, key=1, label=pair, style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label=pair, style=dashed];
n25 -> n31  [color=darkseagreen4, key=1, label=pair, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n38  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n34  [key=0, style=solid];
n29 -> n39  [key=2, style=dotted];
n29 -> n40  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n41  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
n26 -> n32  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n35  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n42  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n40  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n39 -> n81  [key=0, style=solid];
n39 -> n82  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n39 -> n83  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n39 -> n84  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n39 -> n86  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n39 -> n87  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n39 -> n18  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
n39 -> n34  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
n39 -> n33  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
n40 -> n43  [key=0, style=solid];
n33 -> n36  [key=0, style=solid];
n36 -> n18  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n43 -> n46  [key=2, style=dotted];
n43 -> n47  [key=2, style=dotted];
n44 -> n40  [color=blue, key=0, style=bold];
n46 -> n112  [key=0, style=solid];
n46 -> n113  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n114  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n116  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n118  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n119  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n121  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n124  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n126  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n127  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n128  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n130  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n46 -> n40  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserContext context", style=bold];
n46 -> n33  [color=darkorchid, key=3, label="method methodReturn bool DoParseArgumentsVerbs", style=bold];
n47 -> n48  [color=red, key=0, style=solid];
n47 -> n49  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n47 -> n51  [color=red, key=1, label="CommandLine.ParserContext", style=dashed];
n47 -> n52  [color=red, key=1, label="CommandLine.ParserContext", style=dashed];
n47 -> n58  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n47 -> n60  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
n47 -> n40  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserContext context", style=bold];
n48 -> n49  [color=red, key=0, style=solid];
n48 -> n67  [color=red, key=1, label=hadError, style=dashed];
n48 -> n33  [color=red, key=3, label="Local variable bool hadError", style=bold];
n49 -> n50  [key=0, style=solid];
n49 -> n70  [key=2, style=dotted];
n49 -> n58  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
n49 -> n67  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
n51 -> n52  [color=red, key=0, style=solid];
n51 -> n72  [color=red, key=2, style=dotted];
n51 -> n64  [color=red, key=1, label=target, style=dashed];
n51 -> n65  [color=red, key=1, label=target, style=dashed];
n52 -> n53  [color=red, key=0, style=solid];
n52 -> n73  [color=red, key=2, style=dotted];
n52 -> n54  [color=red, key=1, label=arguments, style=dashed];
n52 -> n58  [color=red, key=1, label=arguments, style=dashed];
n52 -> n63  [color=red, key=1, label=arguments, style=dashed];
n58 -> n59  [key=0, style=solid];
n58 -> n77  [key=2, style=dotted];
n58 -> n62  [color=darkseagreen4, key=1, label=result, style=dashed];
n60 -> n61  [key=0, style=solid];
n60 -> n78  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n80  [key=2, style=dotted];
n67 -> n67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
n50 -> n51  [color=red, key=0, style=solid];
n50 -> n71  [key=2, style=dotted];
n64 -> n65  [color=red, key=0, style=solid];
n64 -> n53  [color=red, key=0, style=solid];
n65 -> n66  [color=red, key=0, style=solid];
n65 -> n53  [color=red, key=0, style=solid];
n65 -> n79  [color=red, key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n67  [key=0, style=solid];
n53 -> n74  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [color=darkseagreen4, key=1, label=argument, style=dashed];
n54 -> n65  [color=red, key=1, label=argument, style=dashed];
n63 -> n53  [key=0, style=solid];
n63 -> n74  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n53  [key=0, style=solid];
n55 -> n75  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n76  [key=2, style=dotted];
n56 -> n58  [color=darkseagreen4, key=1, label=parser, style=dashed];
n56 -> n60  [color=darkseagreen4, key=1, label=parser, style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n64  [color=red, key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n53  [key=0, style=solid];
n61 -> n53  [key=0, style=solid];
n61 -> n67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
n78 -> n203  [key=0, style=solid];
n78 -> n205  [color=darkseagreen4, key=1, label=object, style=dashed];
n78 -> n206  [color=darkseagreen4, key=1, label=object, style=dashed];
n78 -> n207  [color=darkseagreen4, key=1, label=object, style=dashed];
n78 -> n208  [color=darkseagreen4, key=1, label=object, style=dashed];
n78 -> n209  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
n66 -> n53  [key=0, style=solid];
n66 -> n67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
n68 -> n69  [key=0, style=solid];
n69 -> n47  [color=blue, key=0, style=bold];
n81 -> n82  [key=0, style=solid];
n81 -> n84  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n81 -> n87  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n82 -> n83  [key=0, style=solid];
n82 -> n89  [key=0, style=solid];
n82 -> n84  [color=darkseagreen4, key=1, label=arg, style=dashed];
n82 -> n87  [color=darkseagreen4, key=1, label=arg, style=dashed];
n83 -> n84  [key=0, style=solid];
n83 -> n86  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=0, style=solid];
n84 -> n91  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n82  [key=0, style=solid];
n86 -> n75  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n82  [key=0, style=solid];
n87 -> n92  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n85 -> n90  [key=0, style=solid];
n88 -> n90  [key=0, style=solid];
n90 -> n39  [color=blue, key=0, style=bold];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [color=darkseagreen4, key=1, label=string, style=dashed];
n93 -> n96  [color=darkseagreen4, key=1, label=object, style=dashed];
n93 -> n97  [color=darkseagreen4, key=1, label=string, style=dashed];
n93 -> n99  [color=darkseagreen4, key=1, label=object, style=dashed];
n93 -> n93  [color=darkorchid, key=3, label="method methodReturn object GetVerbOptionsInstanceByName", style=bold];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n95 -> n75  [key=2, style=dotted];
n96 -> n100  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n101  [key=2, style=dotted];
n97 -> n99  [color=darkseagreen4, key=1, label=pair, style=dashed];
n99 -> n100  [key=0, style=solid];
n99 -> n102  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [color=darkseagreen4, key=1, label="out bool", style=dashed];
n100 -> n93  [color=blue, key=0, style=bold];
n103 -> n104  [key=0, style=solid];
n103 -> n108  [color=darkseagreen4, key=1, label=string, style=dashed];
n103 -> n33  [color=darkorchid, key=3, label="method methodReturn bool WasVerbOptionInvoked", style=bold];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=0, style=solid];
n104 -> n75  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n111  [key=2, style=dotted];
n105 -> n109  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n106 -> n110  [key=2, style=dotted];
n107 -> n109  [key=0, style=solid];
n109 -> n103  [color=blue, key=0, style=bold];
n112 -> n113  [key=0, style=solid];
n112 -> n133  [key=2, style=dotted];
n112 -> n118  [color=darkseagreen4, key=1, label=verbs, style=dashed];
n113 -> n114  [key=0, style=solid];
n113 -> n37  [key=2, style=dotted];
n113 -> n115  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n113 -> n116  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n113 -> n119  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n113 -> n123  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n113 -> n124  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n113 -> n130  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
n114 -> n115  [key=0, style=solid];
n114 -> n118  [key=0, style=solid];
n114 -> n134  [key=2, style=dotted];
n116 -> n117  [key=0, style=solid];
n116 -> n135  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n136  [key=2, style=dotted];
n118 -> n121  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=0, style=solid];
n119 -> n137  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n126  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
n121 -> n127  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
n121 -> n128  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
n124 -> n125  [key=0, style=solid];
n124 -> n135  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n126 -> n138  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n139  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n140  [key=2, style=dotted];
n128 -> n47  [key=2, style=dotted];
n128 -> n131  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
n130 -> n131  [key=0, style=solid];
n130 -> n135  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n117  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=0, style=solid];
n117 -> n132  [key=0, style=solid];
n135 -> n154  [key=0, style=solid];
n135 -> n155  [color=darkseagreen4, key=1, label=string, style=dashed];
n135 -> n156  [color=darkseagreen4, key=1, label=object, style=dashed];
n135 -> n157  [color=darkseagreen4, key=1, label=object, style=dashed];
n135 -> n137  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
n135 -> n113  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
n135 -> n116  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
n135 -> n144  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
n120 -> n132  [key=0, style=solid];
n137 -> n141  [key=0, style=solid];
n137 -> n142  [color=darkseagreen4, key=1, label="CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
n137 -> n143  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n137 -> n144  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n137 -> n146  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
n137 -> n148  [color=darkseagreen4, key=1, label=object, style=dashed];
n137 -> n149  [color=darkseagreen4, key=1, label=object, style=dashed];
n137 -> n150  [color=darkseagreen4, key=1, label=object, style=dashed];
n137 -> n113  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
n137 -> n118  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionMap optionMap", style=bold];
n137 -> n34  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
n137 -> n33  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
n122 -> n123  [key=0, style=solid];
n122 -> n126  [key=0, style=solid];
n125 -> n132  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n132 -> n46  [color=blue, key=0, style=bold];
n141 -> n142  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n152  [key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n143 -> n152  [key=0, style=solid];
n143 -> n111  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [color=darkseagreen4, key=1, label=verb, style=dashed];
n144 -> n150  [color=darkseagreen4, key=1, label=verb, style=dashed];
n146 -> n147  [key=0, style=solid];
n146 -> n148  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
n146 -> n149  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
n148 -> n149  [key=0, style=solid];
n148 -> n150  [key=0, style=solid];
n148 -> n138  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n139  [key=2, style=dotted];
n150 -> n151  [key=0, style=solid];
n150 -> n135  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n145 -> n150  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n147 -> n150  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n153 -> n137  [color=blue, key=0, style=bold];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n156 -> n158  [key=0, style=solid];
n156 -> n161  [key=2, style=dotted];
n156 -> n159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n157 -> n158  [key=0, style=solid];
n157 -> n161  [key=2, style=dotted];
n157 -> n159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n42  [key=2, style=dotted];
n160 -> n135  [color=blue, key=0, style=bold];
n162 -> n163  [key=0, style=solid];
n162 -> n164  [color=darkseagreen4, key=1, label=object, style=dashed];
n162 -> n165  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n162 -> n167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
n163 -> n164  [key=0, style=solid];
n163 -> n12  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n12  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=2, style=dotted];
n166 -> n162  [color=blue, key=0, style=bold];
n167 -> n185  [key=0, style=solid];
n167 -> n186  [color=darkseagreen4, key=1, label=object, style=dashed];
n167 -> n187  [color=darkseagreen4, key=1, label=int, style=dashed];
n167 -> n162  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n167 -> n168  [color=darkorchid, key=3, label="Parameter variable int exitCode", style=bold];
n167 -> n173  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n167 -> n179  [color=darkorchid, key=3, label="Parameter variable int exitCode", style=bold];
n167 -> n34  [color=darkorchid, key=3, label="method methodReturn bool DoParseArgumentsStrict", style=bold];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [color=darkseagreen4, key=1, label=object, style=dashed];
n168 -> n171  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n168 -> n167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
n169 -> n170  [key=0, style=solid];
n169 -> n12  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n12  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n167  [key=2, style=dotted];
n172 -> n168  [color=blue, key=0, style=bold];
n173 -> n174  [key=0, style=solid];
n173 -> n175  [color=darkseagreen4, key=1, label=object, style=dashed];
n173 -> n176  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n173 -> n177  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n173 -> n167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n12  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n12  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n167  [key=2, style=dotted];
n178 -> n173  [color=blue, key=0, style=bold];
n179 -> n180  [key=0, style=solid];
n179 -> n181  [color=darkseagreen4, key=1, label=object, style=dashed];
n179 -> n182  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n179 -> n183  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n179 -> n167  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n180 -> n181  [key=0, style=solid];
n180 -> n12  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n12  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n167  [key=2, style=dotted];
n184 -> n179  [color=blue, key=0, style=bold];
n185 -> n186  [key=0, style=solid];
n185 -> n188  [key=0, style=solid];
n185 -> n18  [key=2, style=dotted];
n186 -> n187  [key=0, style=solid];
n186 -> n190  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n191  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n190 -> n192  [key=0, style=solid];
n190 -> n194  [color=darkseagreen4, key=1, label=object, style=dashed];
n190 -> n200  [color=darkseagreen4, key=1, label=object, style=dashed];
n190 -> n167  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n189 -> n167  [color=blue, key=0, style=bold];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [key=0, style=solid];
n192 -> n196  [key=2, style=dotted];
n192 -> n197  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n45  [key=2, style=dotted];
n194 -> n198  [key=2, style=dotted];
n194 -> n42  [key=2, style=dotted];
n194 -> n199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=2, style=dotted];
n193 -> n195  [key=0, style=solid];
n195 -> n190  [color=blue, key=0, style=bold];
n199 -> n200  [key=0, style=solid];
n201 -> n199  [color=blue, key=0, style=bold];
n203 -> n204  [key=0, style=solid];
n203 -> n205  [key=0, style=solid];
n203 -> n212  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n133  [key=2, style=dotted];
n205 -> n207  [color=darkseagreen4, key=1, label=property, style=dashed];
n205 -> n208  [color=darkseagreen4, key=1, label=property, style=dashed];
n206 -> n207  [key=0, style=solid];
n206 -> n208  [key=0, style=solid];
n206 -> n102  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n213  [key=2, style=dotted];
n207 -> n214  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n102  [key=2, style=dotted];
n208 -> n210  [color=darkseagreen4, key=1, label=parserState, style=dashed];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [key=0, style=solid];
n204 -> n211  [key=0, style=solid];
n210 -> n209  [key=0, style=solid];
n210 -> n215  [key=2, style=dotted];
n211 -> n78  [color=blue, key=0, style=bold];
n216 -> n217  [key=0, style=solid];
n217 -> n218  [key=0, style=solid];
n217 -> n220  [key=2, style=dotted];
n218 -> n219  [key=0, style=solid];
n218 -> n221  [key=2, style=dotted];
n220 -> n222  [key=0, style=solid];
n220 -> n224  [color=darkseagreen4, key=1, label=bool, style=dashed];
n220 -> n34  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
n220 -> n33  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
n219 -> n216  [color=blue, key=0, style=bold];
n222 -> n223  [key=0, style=solid];
n222 -> n224  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n228  [key=0, style=solid];
n223 -> n228  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n227  [key=0, style=solid];
n228 -> n220  [color=blue, key=0, style=bold];
n226 -> n227  [key=0, style=solid];
n226 -> n229  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n231 -> n220  [key=2, style=dotted];
n232 -> n230  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [color=green, key=0, style=solid];
m2_22 -> m2_23  [color=green, key=0, style=solid];
m2_22 -> m2_6  [color=green, key=2, style=dotted];
m2_22 -> m2_7  [color=green, key=2, style=dotted];
m2_22 -> m2_25  [color=green, key=1, label=expectedTokens, style=dashed];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_23 -> m2_8  [color=green, key=2, style=dotted];
m2_23 -> m2_9  [color=green, key=2, style=dotted];
m2_23 -> m2_10  [color=green, key=2, style=dotted];
m2_23 -> m2_28  [color=green, key=1, label=specs, style=dashed];
m2_25 -> m2_26  [color=green, key=0, style=solid];
m2_25 -> m2_15  [color=green, key=2, style=dotted];
m2_25 -> m2_16  [color=green, key=2, style=dotted];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_11  [color=green, key=2, style=dotted];
m2_24 -> m2_6  [color=green, key=2, style=dotted];
m2_24 -> m2_7  [color=green, key=2, style=dotted];
m2_24 -> m2_12  [color=green, key=2, style=dotted];
m2_24 -> m2_13  [color=green, key=2, style=dotted];
m2_24 -> m2_14  [color=green, key=2, style=dotted];
m2_24 -> m2_27  [color=green, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_21  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_6  [color=green, key=2, style=dotted];
m2_1 -> m2_7  [color=green, key=2, style=dotted];
m2_1 -> m2_4  [color=green, key=1, label=expectedTokens, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_8  [color=green, key=2, style=dotted];
m2_2 -> m2_9  [color=green, key=2, style=dotted];
m2_2 -> m2_10  [color=green, key=2, style=dotted];
m2_2 -> m2_18  [color=green, key=1, label=specs, style=dashed];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_15  [color=green, key=2, style=dotted];
m2_4 -> m2_16  [color=green, key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_11  [color=green, key=2, style=dotted];
m2_3 -> m2_6  [color=green, key=2, style=dotted];
m2_3 -> m2_7  [color=green, key=2, style=dotted];
m2_3 -> m2_12  [color=green, key=2, style=dotted];
m2_3 -> m2_13  [color=green, key=2, style=dotted];
m2_3 -> m2_14  [color=green, key=2, style=dotted];
m2_3 -> m2_17  [color=green, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [color=green, key=0, style=solid];
m2_18 -> m2_19  [color=green, key=0, style=solid];
m2_18 -> m2_20  [color=green, key=2, style=dotted];
m2_17 -> m2_18  [color=green, key=0, style=solid];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [color=green, key=0, style=solid];
m2_28 -> m2_20  [color=green, key=2, style=dotted];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m2_30 -> m2_18  [color=green, key=1, label=specs, style=dashed];
m2_31 -> m2_28  [color=green, key=1, label=specs, style=dashed];
m5_4 -> m5_8  [color=red, key=0, style=solid];
m5_8 -> m5_9  [color=red, key=0, style=solid];
m5_8 -> m5_11  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_9 -> m5_4  [color=blue, key=0, style=bold];
m5_6 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_41 -> m5_6  [color=blue, key=0, style=bold];
m5_7 -> m5_61  [key=0, style=solid];
m5_7 -> m5_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_61 -> m5_61  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Error> ", style=bold];
m5_62 -> m5_7  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_5  [key=2, style=dotted];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_63 -> m5_64  [key=0, style=solid];
m5_11 -> m5_12  [color=red, key=0, style=solid];
m5_11 -> m5_17  [color=red, key=2, style=dotted];
m5_11 -> m5_18  [color=red, key=2, style=dotted];
m5_11 -> m5_11  [color=red, key=1, label=sp, style=dashed];
m5_11 -> m5_14  [color=red, key=1, label=options, style=dashed];
m5_10 -> m5_11  [color=red, key=0, style=solid];
m5_12 -> m5_13  [color=red, key=0, style=solid];
m5_12 -> m5_12  [color=red, key=1, label=o, style=dashed];
m5_14 -> m5_16  [color=red, key=0, style=solid];
m5_14 -> m5_20  [color=red, key=2, style=dotted];
m5_14 -> m5_21  [color=red, key=2, style=dotted];
m5_14 -> m5_14  [color=red, key=1, label=o, style=dashed];
m5_13 -> m5_14  [color=red, key=0, style=solid];
m5_13 -> m5_15  [color=red, key=0, style=solid];
m5_13 -> m5_19  [color=red, key=2, style=dotted];
m5_15 -> m5_16  [color=red, key=0, style=solid];
m5_15 -> m5_22  [color=red, key=2, style=dotted];
m5_16 -> m5_10  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_26 -> m5_17  [color=red, key=2, style=dotted];
m5_26 -> m5_18  [color=red, key=2, style=dotted];
m5_26 -> m5_26  [color=red, key=1, label=sp, style=dashed];
m5_26 -> m5_29  [color=red, key=1, label=requiredWithValue, style=dashed];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_17  [key=2, style=dotted];
m5_28 -> m5_33  [key=2, style=dotted];
m5_28 -> m5_34  [key=2, style=dotted];
m5_28 -> m5_28  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_35  [key=2, style=dotted];
m5_29 -> m5_17  [key=2, style=dotted];
m5_29 -> m5_33  [key=2, style=dotted];
m5_29 -> m5_36  [key=2, style=dotted];
m5_29 -> m5_37  [key=2, style=dotted];
m5_29 -> m5_29  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_25 -> m5_26  [color=red, key=0, style=solid];
m5_25 -> m5_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_25 -> m5_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_32  [color=red, key=2, style=dotted];
m5_27 -> m5_27  [color=red, key=1, label=s, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_38  [key=2, style=dotted];
m5_30 -> m5_39  [key=2, style=dotted];
m5_30 -> m5_30  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_31 -> m5_25  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_48  [key=2, style=dotted];
m5_43 -> m5_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_42 -> m5_43  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_49  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_45 -> m5_50  [key=2, style=dotted];
m5_45 -> m5_39  [key=2, style=dotted];
m5_45 -> m5_45  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_22  [key=2, style=dotted];
m5_47 -> m5_42  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_51  [color=blue, key=0, style=bold];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_18  [key=2, style=dotted];
m5_56 -> m5_54  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_18  [key=2, style=dotted];
m5_58 -> m5_60  [key=2, style=dotted];
m5_59 -> m5_57  [color=blue, key=0, style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_70  [key=2, style=dotted];
m5_65 -> m5_71  [key=2, style=dotted];
m5_65 -> m5_72  [key=2, style=dotted];
m5_65 -> m5_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_17  [key=2, style=dotted];
m5_64 -> m5_18  [key=2, style=dotted];
m5_64 -> m5_64  [color=darkseagreen4, key=1, label=sp, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_19  [key=2, style=dotted];
m5_66 -> m5_66  [color=darkseagreen4, key=1, label=x, style=dashed];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_73  [key=2, style=dotted];
m5_67 -> m5_74  [key=2, style=dotted];
m5_67 -> m5_67  [color=darkseagreen4, key=1, label=y, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_63  [color=blue, key=0, style=bold];
m5_5 -> m5_23  [color=red, key=0, style=solid];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> m5_26  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_23 -> m5_28  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_23 -> m5_29  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m5_24 -> m5_5  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_77  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m5_75 -> m5_78  [color=darkorchid, key=3, label="method methodReturn bool ContainsIfNotEmpty", style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_76 -> m5_80  [key=2, style=dotted];
m5_77 -> m5_79  [key=0, style=solid];
m5_77 -> m5_81  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_75  [color=blue, key=0, style=bold];
m5_82 -> m5_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m6_14 -> m6_15  [color=green, key=0, style=solid];
m6_15 -> m6_16  [color=green, key=0, style=solid];
m6_15 -> m6_17  [color=green, key=2, style=dotted];
m6_16 -> m6_14  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=2, style=dotted];
m8_46 -> m8_44  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_6  [key=2, style=dotted];
m8_36 -> m8_29  [key=2, style=dotted];
m8_36 -> m8_36  [color=darkseagreen4, key=1, label=value1, style=dashed];
m8_37 -> m8_34  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_59 -> m8_63  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_61 -> m8_6  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_65  [key=2, style=dotted];
m8_62 -> m8_64  [key=0, style=solid];
m8_64 -> m8_59  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_12  [key=2, style=dotted];
m8_20 -> m8_18  [color=blue, key=0, style=bold];
m8_55 -> m8_56  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_29  [key=2, style=dotted];
m8_53 -> m8_47  [key=2, style=dotted];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_58  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_56  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m8_54 -> m8_52  [color=blue, key=0, style=bold];
m8_57 -> m8_55  [color=blue, key=0, style=bold];
m8_69 -> m8_70  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_69  [color=blue, key=0, style=bold];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_6  [key=2, style=dotted];
m8_27 -> m8_29  [key=2, style=dotted];
m8_27 -> m8_15  [key=2, style=dotted];
m8_27 -> m8_27  [color=darkseagreen4, key=1, label=value1, style=dashed];
m8_28 -> m8_25  [color=blue, key=0, style=bold];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_68 -> m8_66  [color=blue, key=0, style=bold];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_10  [key=2, style=dotted];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_3  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_10  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid];
m8_40 -> m8_6  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_43  [key=2, style=dotted];
m8_42 -> m8_38  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_53  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m8_48 -> m8_56  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [key=2, style=dotted];
m8_49 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_50 -> m8_48  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_24  [key=2, style=dotted];
m8_22 -> m8_15  [key=2, style=dotted];
m8_22 -> m8_18  [key=2, style=dotted];
m8_23 -> m8_21  [color=blue, key=0, style=bold];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_6  [key=2, style=dotted];
m8_32 -> m8_29  [key=2, style=dotted];
m8_32 -> m8_18  [key=2, style=dotted];
m8_32 -> m8_15  [key=2, style=dotted];
m8_32 -> m8_32  [color=darkseagreen4, key=1, label=value1, style=dashed];
m8_33 -> m8_30  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [color=darkseagreen4, key=1, label="out T", style=dashed];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_6  [color=blue, key=0, style=bold];
m8_72 -> m8_1  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_72 -> m8_4  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_72 -> m8_7  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_72 -> m8_8  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m8_73 -> m8_13  [color=darkseagreen4, key=1, label="CSharpx.Just<T>", style=dashed];
m8_74 -> m8_53  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m8_75 -> m8_53  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m8_75 -> m8_56  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m8_76 -> m8_56  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_0 -> m9_3  [color=green, key=1, label="System.Type", style=dashed];
m9_0 -> m9_5  [color=green, key=1, label="System.Type", style=dashed];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_6  [color=green, key=0, style=solid];
m9_2 -> m9_7  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_5  [color=green, key=0, style=solid];
m9_3 -> m9_8  [color=green, key=2, style=dotted];
m9_4 -> m9_6  [color=green, key=0, style=solid];
m9_4 -> m9_9  [color=green, key=2, style=dotted];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_25 -> m9_17  [color=green, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_34  [key=2, style=dotted];
m9_26 -> m9_29  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_26 -> m9_31  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_28 -> m9_33  [key=0, style=solid];
m9_30 -> m9_33  [key=0, style=solid];
m9_30 -> m9_35  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_33 -> m9_25  [color=blue, key=0, style=bold];
m9_13 -> m9_14  [color=green, key=0, style=solid];
m9_13 -> m9_15  [color=green, key=1, label=object, style=dashed];
m9_13 -> m9_18  [color=green, key=1, label=object, style=dashed];
m9_13 -> m9_19  [color=green, key=1, label=object, style=dashed];
m9_13 -> m9_17  [color=green, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
m9_14 -> m9_15  [color=green, key=0, style=solid];
m9_15 -> m9_16  [color=green, key=0, style=solid];
m9_15 -> m9_21  [color=green, key=2, style=dotted];
m9_15 -> m9_18  [color=green, key=1, label=concreteType, style=dashed];
m9_15 -> m9_19  [color=green, key=1, label=property, style=dashed];
m9_16 -> m9_18  [color=green, key=0, style=solid];
m9_16 -> m9_17  [color=green, key=0, style=solid];
m9_18 -> m9_19  [color=green, key=0, style=solid];
m9_18 -> m9_22  [color=green, key=2, style=dotted];
m9_18 -> n214  [color=green, key=2, style=dotted];
m9_19 -> m9_20  [color=green, key=0, style=solid];
m9_19 -> m9_24  [color=green, key=2, style=dotted];
m9_17 -> m9_20  [color=green, key=0, style=solid];
m9_20 -> m9_13  [color=blue, key=0, style=bold];
m9_21 -> m9_14  [color=green, key=3, label="Parameter variable System.Type concreteType", style=bold];
m9_21 -> m9_17  [color=green, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
m9_21 -> m9_13  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m9_21 -> m9_36  [key=0, style=solid];
m9_21 -> m9_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_34  [key=2, style=dotted];
m9_37 -> m9_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_37 -> m9_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_39 -> m9_45  [key=0, style=solid];
m9_41 -> m9_45  [key=0, style=solid];
m9_41 -> m9_35  [key=2, style=dotted];
m9_43 -> m9_45  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_44  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
m9_45 -> m9_21  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [color=green, key=0, style=solid];
m9_11 -> m9_12  [color=green, key=0, style=solid];
m9_12 -> m9_10  [color=blue, key=0, style=bold];
m9_46 -> m9_5  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m9_46 -> m9_11  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
}
