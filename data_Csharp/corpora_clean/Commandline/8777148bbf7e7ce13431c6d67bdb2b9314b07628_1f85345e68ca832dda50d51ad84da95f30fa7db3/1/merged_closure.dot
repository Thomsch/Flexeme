digraph  {
n25 [label="CommandLine.HelpOptionAttribute", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="HelpText = DefaultHelpText", span="52-52"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49"];
n3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60"];
n4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", label="HelpText = DefaultHelpText", span="63-63"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60"];
n6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="71-71"];
n7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", label="HelpText = DefaultHelpText", span="74-74"];
n8 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="71-71"];
n9 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="83-83"];
n10 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", label="HelpText = DefaultHelpText", span="86-86"];
n11 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="83-83"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
n13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = null", span="103-103"];
n14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="var method = pair.Left", span="104-104"];
n17 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = (string)method.Invoke(target, null)", span="106-106"];
n15 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="!CheckMethodSignature(method)", span="105-105"];
n16 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="throw new MemberAccessException();", span="105-105"];
n19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="109-109"];
n18 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
n20 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n21 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n22 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="111-111"];
n23 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="109-109"];
n24 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d129 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", color=green, community=0, label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", prediction=0, span="170-175"];
d128 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="168-168"];
d130 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="168-168"];
d131 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="97-100"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="105-105"];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="106-106"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="107-107"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="108-108"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[4])", span="109-109"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''post-options'', lines[5])", span="110-110"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="90-90"];
m1_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m1_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[5])", span="63-63"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''value pos. 0     Define a long value here.'', lines[6])", span="64-64"];
m1_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''post-options'', lines[7])", span="65-65"];
m1_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="134-134"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="sut.MaximumDisplayWidth = 40", span="135-135"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="136-136"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="139-139"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="140-140"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="142-142"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="143-143"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="144-144"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="lines[6].Should().Be(''                Help Text.'')", span="145-145"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="154-154"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="sut.MaximumDisplayWidth = 40", span="155-155"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="156-156"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="159-159"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="160-160"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="161-161"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[4].Should().Be(''                After'')", span="162-162"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="163-163"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="164-164"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[7].Should().Be(''                456789 After'')", span="165-165"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150"];
m1_121 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_198 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_172 [cluster="Unk.True", file="UnParserExtensionsTests.cs", label="Entry Unk.True", span=""];
m1_123 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="254-254"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="257-263"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266"];
m1_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269"];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273"];
m1_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274"];
m1_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275"];
m1_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="254-254"];
m1_171 [cluster="string.StartsWith(string, System.StringComparison)", file="UnParserExtensionsTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m1_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="74-77"];
m1_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81"];
m1_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="82-82"];
m1_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="83-83"];
m1_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="84-84"];
m1_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''Triangle'', lines[3])", span="85-85"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="86-86"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--version        Display version information.'', lines[5])", span="87-87"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''post-options'', lines[6])", span="88-88"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_127 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_48 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="11-11"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="174-174"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="sut.MaximumDisplayWidth = 40", span="175-175"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="176-178"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="181-181"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[1].Should().Be(''Before '')", span="182-182"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="183-183"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[3].Should().Be(''012 After'')", span="184-184"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="185-185"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="186-186"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="187-187"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m1_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="310-310"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="313-314"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="315-318"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="321-321"];
m1_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="324-324"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="326-326"];
m1_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="327-327"];
m1_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''add        Add file contents to the index.'', lines[2])", span="328-328"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''commit     Record changes to the repository.'', lines[3])", span="329-329"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''clone      Clone a repository into a new directory.'', lines[4])", span="330-330"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''help       Display more information on a specific command.'', lines[5])", span="331-331"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''version    Display version information.'', lines[6])", span="332-332"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="310-310"];
m1_199 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m1_134 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="459-459"];
m1_155 [cluster="System.InvalidOperationException.InvalidOperationException()", file="UnParserExtensionsTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_36 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="UnParserExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_197 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="UnParserExtensionsTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_131 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
m1_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="44-44"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="119-120"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="123-123"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="125-125"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="374-374"];
m1_133 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m1_65 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m1_129 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m1_135 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="211-234"];
m1_136 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="err.Tag", span="213-213"];
m1_138 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="216-216"];
m1_140 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="218-218"];
m1_142 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="220-220"];
m1_144 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="222-222"];
m1_146 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="224-224"];
m1_148 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="226-226"];
m1_152 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="230-230"];
m1_137 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.BadFormatTokenError", span="215-215"];
m1_139 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.MissingValueOptionError", span="217-217"];
m1_141 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.UnknownOptionError", span="219-219"];
m1_143 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.MissingRequiredOptionError", span="221-221"];
m1_145 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.MutuallyExclusiveSetError", span="223-223"];
m1_147 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.SequenceOutOfRangeError", span="225-225"];
m1_149 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.NoVerbSelectedError", span="227-227"];
m1_151 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="ErrorType.BadVerbSelectedError", span="229-229"];
m1_153 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="throw new InvalidOperationException();", span="232-232"];
m1_150 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="return ''ERR no-verb-selected'';", span="228-228"];
m1_154 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="211-234"];
m1_64 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="67-67"];
m1_124 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_79 [cluster="Unk.Should", file="UnParserExtensionsTests.cs", label="Entry Unk.Should", span=""];
m1_80 [cluster="Unk.Be", file="UnParserExtensionsTests.cs", label="Entry Unk.Be", span=""];
m1_4 [cluster="CommandLine.Text.HelpText.ToString()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="490-490"];
m1_35 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="394-394"];
m1_106 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m1_130 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26"];
m1_93 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m1_126 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m1_170 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="298-298"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="384-384"];
m1_128 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m1_21 [cluster="string.ToNotEmptyLines()", file="UnParserExtensionsTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_122 [cluster="CommandLine.NullInstance.NullInstance()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m1_125 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_34 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m1_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m1_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="196-210"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="211-234"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="237-237"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="240-240"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="242-242"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="243-243"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="244-244"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="245-245"];
m1_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="246-246"];
m1_117 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="247-247"];
m1_118 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="248-248"];
m1_119 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="249-249"];
m1_120 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="287-292"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="295-295"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="298-298"];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="300-300"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="301-301"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="302-302"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="303-303"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="304-304"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="305-305"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m1_132 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m1_5 [cluster="Unk.Equal", file="UnParserExtensionsTests.cs", label="Entry Unk.Equal", span=""];
m1_78 [cluster="string.Split(string[], System.StringSplitOptions)", file="UnParserExtensionsTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_77 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m1_51 -> m1_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_51 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_85 -> m1_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_166  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_167  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_159 -> m1_168  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_39 -> m1_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_101  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_102  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_103  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_98 -> m1_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_193  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_194  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_188 -> m1_195  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_135 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_146  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_135 -> m1_152  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_109 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_146  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_109 -> m1_152  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_111 -> m1_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_111 -> m1_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_176 -> m1_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_176 -> m1_179  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_176 -> m1_180  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_176 -> m1_181  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_176 -> m1_182  [color=darkseagreen4, key=1, label=lines, style=dashed];
}
