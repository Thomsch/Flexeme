digraph  {
n25 [label="CommandLine.HelpOptionAttribute", span=""];
n0 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n1 [label="HelpText = DefaultHelpText", span="52-52", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n2 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="49-49", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n3 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)"];
n4 [label="HelpText = DefaultHelpText", span="63-63", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)"];
n5 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)", span="60-60", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char)"];
n6 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="71-71", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)"];
n7 [label="HelpText = DefaultHelpText", span="74-74", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)"];
n8 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)", span="71-71", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string)"];
n9 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="83-83", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)"];
n10 [label="HelpText = DefaultHelpText", span="86-86", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)"];
n11 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)", span="83-83", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(char, string)"];
n12 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n13 [label="text = null", span="103-103", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n14 [label="var method = pair.Left", span="104-104", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n17 [label="text = (string)method.Invoke(target, null)", span="106-106", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n15 [label="!CheckMethodSignature(method)", span="105-105", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n16 [label="throw new MemberAccessException();", span="105-105", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n19 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="109-109", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n18 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n20 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()"];
n21 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])"];
n22 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="111-111", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n23 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="109-109", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n24 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
d129 [label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="170-175", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", color=green, community=0];
d128 [label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="168-168", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])"];
d130 [label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="168-168", cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])"];
d131 [label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0", cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])"];
m1_49 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_50 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="97-100", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_51 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_52 [label="Assert.Equal(''pre-options'', lines[0])", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_53 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_54 [label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_55 [label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_56 [label="Assert.Equal(''--version        Display version information.'', lines[4])", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_57 [label="Assert.Equal(''post-options'', lines[5])", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_58 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="UnParserExtensionsTests.cs"];
m1_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="90-90", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="UnParserExtensionsTests.cs"];
m1_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_25 [label="Assert.Equal(''pre-options'', lines[0])", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_26 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_27 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_28 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_29 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_30 [label="Assert.Equal(''--version        Display version information.'', lines[5])", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_31 [label="Assert.Equal(''value pos. 0     Define a long value here.'', lines[6])", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_32 [label="Assert.Equal(''post-options'', lines[7])", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_33 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="UnParserExtensionsTests.cs"];
m1_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_68 [label="sut.MaximumDisplayWidth = 40", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_69 [label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_71 [label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="140-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_72 [label="lines[3].Should().Be(''                of the verbosity to '')", span="142-142", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_73 [label="lines[4].Should().Be(''                test out the wrapping '')", span="143-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_74 [label="lines[5].Should().Be(''                capabilities of the '')", span="144-144", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_75 [label="lines[6].Should().Be(''                Help Text.'')", span="145-145", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="UnParserExtensionsTests.cs"];
m1_81 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_82 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_83 [label="sut.MaximumDisplayWidth = 40", span="155-155", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_84 [label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="156-156", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_85 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_86 [label="lines[2].Should().Be(''  v, verbose    Before '')", span="160-160", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_87 [label="lines[3].Should().Be(''                012345678901234567890123'')", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_88 [label="lines[4].Should().Be(''                After'')", span="162-162", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_89 [label="lines[5].Should().Be(''  input-file    Before '')", span="163-163", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_90 [label="lines[6].Should().Be(''                012345678901234567890123'')", span="164-164", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_91 [label="lines[7].Should().Be(''                456789 After'')", span="165-165", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_92 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_121 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnParserExtensionsTests.cs"];
m1_198 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="UnParserExtensionsTests.cs"];
m1_172 [label="Entry Unk.True", span="", cluster="Unk.True", file="UnParserExtensionsTests.cs"];
m1_123 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="UnParserExtensionsTests.cs"];
m1_156 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_157 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="257-263", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_158 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_159 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_160 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_161 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_162 [label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_163 [label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_164 [label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_165 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_166 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_167 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_168 [label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_169 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_171 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="UnParserExtensionsTests.cs"];
m1_37 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_38 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="74-77", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_39 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_40 [label="Assert.Equal(''pre-options'', lines[0])", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_41 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_42 [label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_43 [label="Assert.Equal(''Triangle'', lines[3])", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_44 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_45 [label="Assert.Equal(''--version        Display version information.'', lines[5])", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_46 [label="Assert.Equal(''post-options'', lines[6])", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_47 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="UnParserExtensionsTests.cs"];
m1_127 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs"];
m1_48 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="11-11", cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="UnParserExtensionsTests.cs"];
m1_94 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_95 [label="var sut = new HelpText(''Heading Info.'')", span="174-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_96 [label="sut.MaximumDisplayWidth = 40", span="175-175", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_97 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="176-178", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_98 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_99 [label="lines[1].Should().Be(''Before '')", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_100 [label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="183-183", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_101 [label="lines[3].Should().Be(''012 After'')", span="184-184", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_102 [label="lines[lines.Length - 3].Should().Be(''Before '')", span="185-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_103 [label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="186-186", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_104 [label="lines[lines.Length - 1].Should().Be('' After'')", span="187-187", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_105 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="UnParserExtensionsTests.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs"];
m1_1 [label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs"];
m1_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="UnParserExtensionsTests.cs"];
m1_184 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_185 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="313-314", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_186 [label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="315-318", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_187 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="321-321", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_188 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="324-324", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_189 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="326-326", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_190 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="327-327", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_191 [label="Assert.Equal(''add        Add file contents to the index.'', lines[2])", span="328-328", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_192 [label="Assert.Equal(''commit     Record changes to the repository.'', lines[3])", span="329-329", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_193 [label="Assert.Equal(''clone      Clone a repository into a new directory.'', lines[4])", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_194 [label="Assert.Equal(''help       Display more information on a specific command.'', lines[5])", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_195 [label="Assert.Equal(''version    Display version information.'', lines[6])", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_196 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_199 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnParserExtensionsTests.cs"];
m1_134 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="459-459", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="UnParserExtensionsTests.cs"];
m1_155 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="UnParserExtensionsTests.cs"];
m1_36 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="UnParserExtensionsTests.cs"];
m1_197 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="UnParserExtensionsTests.cs"];
m1_131 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="UnParserExtensionsTests.cs"];
m1_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="44-44", cluster="CommandLine.Text.HelpText.HelpText()", file="UnParserExtensionsTests.cs"];
m1_59 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs"];
m1_60 [label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="119-120", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs"];
m1_61 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="123-123", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs"];
m1_62 [label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="125-125", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs"];
m1_63 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="UnParserExtensionsTests.cs"];
m1_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="374-374", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="UnParserExtensionsTests.cs"];
m1_133 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="UnParserExtensionsTests.cs"];
m1_65 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="UnParserExtensionsTests.cs"];
m1_129 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs"];
m1_135 [label="Entry lambda expression", span="211-234", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_136 [label="err.Tag", span="213-213", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_138 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="216-216", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_140 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="218-218", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_142 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="220-220", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_144 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="222-222", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_146 [label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="224-224", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_148 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="226-226", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_152 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="230-230", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_137 [label="ErrorType.BadFormatTokenError", span="215-215", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_139 [label="ErrorType.MissingValueOptionError", span="217-217", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_141 [label="ErrorType.UnknownOptionError", span="219-219", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_143 [label="ErrorType.MissingRequiredOptionError", span="221-221", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_145 [label="ErrorType.MutuallyExclusiveSetError", span="223-223", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_147 [label="ErrorType.SequenceOutOfRangeError", span="225-225", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_149 [label="ErrorType.NoVerbSelectedError", span="227-227", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_151 [label="ErrorType.BadVerbSelectedError", span="229-229", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_153 [label="throw new InvalidOperationException();", span="232-232", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_150 [label="return ''ERR no-verb-selected'';", span="228-228", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_154 [label="Exit lambda expression", span="211-234", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_64 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="67-67", cluster="CommandLine.Text.HelpText.HelpText(string)", file="UnParserExtensionsTests.cs"];
m1_124 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs"];
m1_79 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="UnParserExtensionsTests.cs"];
m1_80 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="UnParserExtensionsTests.cs"];
m1_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="490-490", cluster="CommandLine.Text.HelpText.ToString()", file="UnParserExtensionsTests.cs"];
m1_35 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="394-394", cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="UnParserExtensionsTests.cs"];
m1_106 [label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="UnParserExtensionsTests.cs"];
m1_130 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="UnParserExtensionsTests.cs"];
m1_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="UnParserExtensionsTests.cs"];
m1_93 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="UnParserExtensionsTests.cs"];
m1_126 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="UnParserExtensionsTests.cs"];
m1_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="UnParserExtensionsTests.cs"];
m1_170 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="298-298", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="UnParserExtensionsTests.cs"];
m1_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="384-384", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="UnParserExtensionsTests.cs"];
m1_128 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="UnParserExtensionsTests.cs"];
m1_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="UnParserExtensionsTests.cs"];
m1_122 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="UnParserExtensionsTests.cs"];
m1_125 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="UnParserExtensionsTests.cs"];
m1_34 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="UnParserExtensionsTests.cs"];
m1_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_9 [label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_10 [label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_11 [label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_12 [label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_13 [label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_14 [label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="UnParserExtensionsTests.cs"];
m1_107 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_108 [label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="196-210", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_109 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="211-234", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_110 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="237-237", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_111 [label="var lines = errorsText.ToNotEmptyLines()", span="240-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_112 [label="Assert.Equal(''  ERR badtoken'', lines[0])", span="242-242", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_113 [label="Assert.Equal(''  ERR x, switch'', lines[1])", span="243-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_114 [label="Assert.Equal(''  ERR unknown'', lines[2])", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_115 [label="Assert.Equal(''  ERR missing'', lines[3])", span="245-245", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_116 [label="Assert.Equal(''  ERR z'', lines[4])", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_117 [label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_118 [label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="248-248", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_119 [label="Assert.Equal(''  ERR badverb'', lines[7])", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_120 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_173 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_174 [label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="287-292", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_175 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="295-295", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_176 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="298-298", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_177 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_178 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="301-301", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_179 [label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_180 [label="Assert.Equal(''changes to commit.'', lines[3])", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_181 [label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="304-304", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_182 [label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_183 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="UnParserExtensionsTests.cs"];
m1_132 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="UnParserExtensionsTests.cs"];
m1_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="UnParserExtensionsTests.cs"];
m1_78 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="UnParserExtensionsTests.cs"];
m1_77 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="UnParserExtensionsTests.cs"];
n25 -> n1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n25 -> n4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n25 -> n7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n25 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n3  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n6  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n10  [key=3, color=darkorchid, style=bold, label="method methodReturn T SetValue"];
n11 -> n9  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>"];
n12 -> n17  [key=1, style=dashed, color=darkseagreen4, label=object];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n17  [key=1, style=dashed, color=darkseagreen4, label=method];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n15 -> n19  [key=2, style=dotted];
n16 -> n18  [key=0, style=solid];
n16 -> n20  [key=2, style=dotted];
n19 -> n22  [key=0, style=solid];
n18 -> n12  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n23 -> n19  [key=0, style=bold, color=blue];
d129 -> d130  [key=0, style=solid, color=green];
d129 -> d131  [key=2, style=dotted, color=green];
d128 -> d129  [key=0, style=solid, color=green];
d130 -> d128  [key=0, style=bold, color=blue];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_3  [key=2, style=dotted];
m1_50 -> m1_19  [key=2, style=dotted];
m1_50 -> m1_48  [key=2, style=dotted];
m1_50 -> m1_35  [key=2, style=dotted];
m1_50 -> m1_20  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_4  [key=2, style=dotted];
m1_51 -> m1_21  [key=2, style=dotted];
m1_51 -> m1_36  [key=2, style=dotted];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_51 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_51 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_51 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_51 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_5  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_5  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_5  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_58 -> m1_49  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_34  [key=2, style=dotted];
m1_23 -> m1_35  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_36  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_5  [key=2, style=dotted];
m1_33 -> m1_22  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_64  [key=2, style=dotted];
m1_67 -> m1_17  [key=2, style=dotted];
m1_67 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_67 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_35  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_78  [key=2, style=dotted];
m1_70 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_79  [key=2, style=dotted];
m1_71 -> m1_80  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_79  [key=2, style=dotted];
m1_72 -> m1_80  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_80  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_79  [key=2, style=dotted];
m1_74 -> m1_80  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_79  [key=2, style=dotted];
m1_75 -> m1_80  [key=2, style=dotted];
m1_76 -> m1_66  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_64  [key=2, style=dotted];
m1_82 -> m1_17  [key=2, style=dotted];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_93  [key=2, style=dotted];
m1_84 -> m1_35  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_4  [key=2, style=dotted];
m1_85 -> m1_78  [key=2, style=dotted];
m1_85 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_85 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_85 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_85 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_85 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_79  [key=2, style=dotted];
m1_86 -> m1_80  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_79  [key=2, style=dotted];
m1_87 -> m1_80  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_79  [key=2, style=dotted];
m1_88 -> m1_80  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_79  [key=2, style=dotted];
m1_89 -> m1_80  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_79  [key=2, style=dotted];
m1_90 -> m1_80  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_79  [key=2, style=dotted];
m1_91 -> m1_80  [key=2, style=dotted];
m1_92 -> m1_81  [key=0, style=bold, color=blue];
m1_156 -> m1_157  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_121  [key=2, style=dotted];
m1_157 -> m1_34  [key=2, style=dotted];
m1_157 -> m1_123  [key=2, style=dotted];
m1_157 -> m1_129  [key=2, style=dotted];
m1_157 -> m1_125  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_170  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_4  [key=2, style=dotted];
m1_159 -> m1_21  [key=2, style=dotted];
m1_159 -> m1_36  [key=2, style=dotted];
m1_159 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_159 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_171  [key=2, style=dotted];
m1_160 -> m1_172  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_171  [key=2, style=dotted];
m1_161 -> m1_172  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_5  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_5  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_5  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_5  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_5  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_5  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_5  [key=2, style=dotted];
m1_169 -> m1_156  [key=0, style=bold, color=blue];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_3  [key=2, style=dotted];
m1_38 -> m1_19  [key=2, style=dotted];
m1_38 -> m1_48  [key=2, style=dotted];
m1_38 -> m1_35  [key=2, style=dotted];
m1_38 -> m1_20  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_4  [key=2, style=dotted];
m1_39 -> m1_21  [key=2, style=dotted];
m1_39 -> m1_36  [key=2, style=dotted];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_39 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_39 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_39 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_39 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_39 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_5  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_5  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_5  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_5  [key=2, style=dotted];
m1_47 -> m1_37  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_64  [key=2, style=dotted];
m1_95 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_95 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_19  [key=2, style=dotted];
m1_97 -> m1_106  [key=2, style=dotted];
m1_97 -> m1_35  [key=2, style=dotted];
m1_97 -> m1_20  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_4  [key=2, style=dotted];
m1_98 -> m1_78  [key=2, style=dotted];
m1_98 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_98 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_98 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_98 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_98 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_79  [key=2, style=dotted];
m1_99 -> m1_80  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_79  [key=2, style=dotted];
m1_100 -> m1_80  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_79  [key=2, style=dotted];
m1_101 -> m1_80  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_79  [key=2, style=dotted];
m1_102 -> m1_80  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_79  [key=2, style=dotted];
m1_103 -> m1_80  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_79  [key=2, style=dotted];
m1_104 -> m1_80  [key=2, style=dotted];
m1_105 -> m1_94  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_184 -> m1_185  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_197  [key=2, style=dotted];
m1_185 -> m1_198  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_199  [key=2, style=dotted];
m1_186 -> m1_122  [key=2, style=dotted];
m1_186 -> m1_133  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_170  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_4  [key=2, style=dotted];
m1_188 -> m1_21  [key=2, style=dotted];
m1_188 -> m1_36  [key=2, style=dotted];
m1_188 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_188 -> m1_195  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_171  [key=2, style=dotted];
m1_189 -> m1_172  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_171  [key=2, style=dotted];
m1_190 -> m1_172  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_5  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_5  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_5  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_5  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_5  [key=2, style=dotted];
m1_196 -> m1_184  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_60 -> m1_65  [key=2, style=dotted];
m1_60 -> m1_35  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_4  [key=2, style=dotted];
m1_61 -> m1_21  [key=2, style=dotted];
m1_61 -> m1_36  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_5  [key=2, style=dotted];
m1_63 -> m1_59  [key=0, style=bold, color=blue];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_135 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_139  [key=0, style=solid];
m1_136 -> m1_141  [key=0, style=solid];
m1_136 -> m1_143  [key=0, style=solid];
m1_136 -> m1_145  [key=0, style=solid];
m1_136 -> m1_147  [key=0, style=solid];
m1_136 -> m1_149  [key=0, style=solid];
m1_136 -> m1_151  [key=0, style=solid];
m1_136 -> m1_153  [key=0, style=solid];
m1_138 -> m1_154  [key=0, style=solid];
m1_140 -> m1_154  [key=0, style=solid];
m1_142 -> m1_154  [key=0, style=solid];
m1_144 -> m1_154  [key=0, style=solid];
m1_146 -> m1_154  [key=0, style=solid];
m1_148 -> m1_154  [key=0, style=solid];
m1_152 -> m1_154  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=2, style=dotted];
m1_150 -> m1_154  [key=0, style=solid];
m1_154 -> m1_135  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_5  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_6  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_121  [key=2, style=dotted];
m1_108 -> m1_122  [key=2, style=dotted];
m1_108 -> m1_123  [key=2, style=dotted];
m1_108 -> m1_124  [key=2, style=dotted];
m1_108 -> m1_125  [key=2, style=dotted];
m1_108 -> m1_126  [key=2, style=dotted];
m1_108 -> m1_127  [key=2, style=dotted];
m1_108 -> m1_128  [key=2, style=dotted];
m1_108 -> m1_129  [key=2, style=dotted];
m1_108 -> m1_130  [key=2, style=dotted];
m1_108 -> m1_131  [key=2, style=dotted];
m1_108 -> m1_132  [key=2, style=dotted];
m1_108 -> m1_133  [key=2, style=dotted];
m1_108 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_109 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_134  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_21  [key=2, style=dotted];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_111 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_5  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_5  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_5  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_5  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_5  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_5  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_5  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_5  [key=2, style=dotted];
m1_120 -> m1_107  [key=0, style=bold, color=blue];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_121  [key=2, style=dotted];
m1_174 -> m1_122  [key=2, style=dotted];
m1_174 -> m1_133  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_170  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_4  [key=2, style=dotted];
m1_176 -> m1_21  [key=2, style=dotted];
m1_176 -> m1_36  [key=2, style=dotted];
m1_176 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_176 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_176 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_176 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_176 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_171  [key=2, style=dotted];
m1_177 -> m1_172  [key=2, style=dotted];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_171  [key=2, style=dotted];
m1_178 -> m1_172  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_5  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_5  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_5  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_5  [key=2, style=dotted];
m1_183 -> m1_173  [key=0, style=bold, color=blue];
}
