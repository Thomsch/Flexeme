digraph  {
m1_57 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Program.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m1_48 [cluster="Unk.ThrowingValidate", file="Program.cs", label="Entry Unk.ThrowingValidate", span=""];
m1_67 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="Program.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m1_80 [cluster="NotParsed<T>.cstr", file="Program.cs", label="Entry NotParsed<T>.cstr", span=""];
m1_115 [cluster="string.MatchName(string, string, System.StringComparer)", file="Program.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m1_53 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Program.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m1_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42"];
m1_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="10: Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-57"];
m1_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="12: arguments.Any()", span="59-59"];
m1_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="10: var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61"];
m1_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="9: var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68"];
m1_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="3: var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74"];
m1_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="9: var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80"];
m1_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85"];
m1_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89"];
m1_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="97-97"];
m1_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45"];
m1_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="typeInfo.IsMutable()", span="95-95"];
m1_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="113-113"];
m1_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var specs = from pt in specProps select pt.Specification", span="47-47"];
m1_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="12: var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="49-51"];
m1_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="return new NotParsed<T>(makeDefault(), preprocessorErrors);", span="64-64"];
m1_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="10: preprocessorErrors.Any()", span="62-62"];
m1_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="14: var tokens = tokenizerResult.SucceededWith()", span="70-70"];
m1_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var allErrors = tokenizerResult.SuccessfulMessages()\r\n                .Concat(missingValueErrors)\r\n                .Concat(optionSpecProps.SuccessfulMessages())\r\n                .Concat(valueSpecProps.SuccessfulMessages())\r\n                .Concat(validationErrors)", span="125-129"];
m1_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="122-123"];
m1_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var specPropsWithValue = optionSpecProps.SucceededWith()\r\n                .Concat(valueSpecProps.SucceededWith())", span="91-92"];
m1_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="T instance", span="94-94"];
m1_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="98-109"];
m1_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="114-118"];
m1_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="instance = (T)ctor.Invoke(values)", span="119-119"];
m1_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="return allErrors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance, allErrors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="131-133"];
m1_45 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m1_86 [cluster="Unk.GetType", file="Program.cs", label="Entry Unk.GetType", span=""];
m1_70 [cluster="Unk.GetParameters", file="Program.cs", label="Entry Unk.GetParameters", span=""];
m1_108 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="Program.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m1_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m1_97 [cluster="Unk.>", file="Program.cs", label="Entry Unk.>", span=""];
m1_79 [cluster="Unk.Any", file="Program.cs", label="Entry Unk.Any", span=""];
m1_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Program.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_60 [cluster="CommandLine.Core.Specification.IsValue()", file="Program.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m1_76 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m1_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Program.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_69 [cluster="Unk.GetConstructor", file="Program.cs", label="Entry Unk.GetConstructor", span=""];
m1_62 [cluster="Unk.Single", file="Program.cs", label="Entry Unk.Single", span=""];
m1_74 [cluster="Unk.Invoke", file="Program.cs", label="Entry Unk.Invoke", span=""];
m1_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_54 [cluster="System.Func<TResult>.Invoke()", file="Program.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_75 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Program.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m1_98 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="55-55"];
m1_5 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="13: var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m1_12 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="14: NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m1_6 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="1: var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27"];
m1_16 [cluster="lambda expression", file="Program.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27"];
m1_4 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="22-29"];
m1_11 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="24-24"];
m1_7 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="0: return explodedTokens;", span="28-28"];
m1_15 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="27-27"];
m1_8 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="22-29"];
m1_13 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="24-24"];
m1_17 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="27-27"];
m1_94 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="15: typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57"];
m1_102 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="3: TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74"];
m1_106 [cluster="lambda expression", file="Program.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79"];
m1_110 [cluster="lambda expression", file="Program.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85"];
m1_113 [cluster="lambda expression", file="Program.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89"];
m1_82 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="42-42"];
m1_87 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="44-45"];
m1_101 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="74-74"];
m1_105 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="79-79"];
m1_109 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="85-85"];
m1_112 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="89-89"];
m1_116 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="97-97"];
m1_144 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="116-116"];
m1_147 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="117-117"];
m1_119 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="100-100"];
m1_123 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="101-101"];
m1_127 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="103-103"];
m1_131 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="104-104"];
m1_134 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="106-108"];
m1_138 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="109-109"];
m1_83 [cluster="lambda expression", file="Program.cs", label="f().GetType()", span="42-42"];
m1_84 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="42-42"];
m1_88 [cluster="lambda expression", file="Program.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45"];
m1_89 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="44-45"];
m1_93 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="53-57"];
m1_95 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="53-57"];
m1_99 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="8: f()", span="55-55"];
m1_100 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="55-55"];
m1_103 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="74-74"];
m1_107 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="79-79"];
m1_111 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="85-85"];
m1_114 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="89-89"];
m1_117 [cluster="lambda expression", file="Program.cs", label="f()", span="97-97"];
m1_118 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="97-97"];
m1_120 [cluster="lambda expression", file="Program.cs", label="sp.Value.IsJust()", span="100-100"];
m1_121 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="100-100"];
m1_124 [cluster="lambda expression", file="Program.cs", label="sp.Value.FromJust()", span="101-101"];
m1_125 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="101-101"];
m1_128 [cluster="lambda expression", file="Program.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="103-103"];
m1_129 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="103-103"];
m1_132 [cluster="lambda expression", file="Program.cs", label="sp.Specification.DefaultValue.FromJust()", span="104-104"];
m1_133 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="104-104"];
m1_135 [cluster="lambda expression", file="Program.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="106-108"];
m1_136 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="106-108"];
m1_139 [cluster="lambda expression", file="Program.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="109-109"];
m1_140 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="109-109"];
m1_145 [cluster="lambda expression", file="Program.cs", label=v, span="116-116"];
m1_146 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="116-116"];
m1_148 [cluster="lambda expression", file="Program.cs", label=d, span="117-117"];
m1_149 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="117-117"];
m1_52 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m1_61 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Program.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m1_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="Program.cs", label="1: return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32"];
m1_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Program.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m1_47 [cluster="Unk.GetSpecifications", file="Program.cs", label="Entry Unk.GetSpecifications", span=""];
m1_73 [cluster="Unk.CreateDefaultForImmutable", file="Program.cs", label="Entry Unk.CreateDefaultForImmutable", span=""];
m1_77 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="Program.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m1_78 [cluster="Unk.Concat", file="Program.cs", label="Entry Unk.Concat", span=""];
m1_81 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="Program.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72"];
m1_142 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_143 [cluster="System.Type.CreateEmptyArray()", file="Program.cs", label="Entry System.Type.CreateEmptyArray()", span="114-114"];
m1_72 [cluster="string.ToLower()", file="Program.cs", label="Entry string.ToLower()", span="0-0"];
m1_141 [cluster="System.Type.GetGenericArguments()", file="Program.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m1_46 [cluster="Unk.Return", file="Program.cs", label="Entry Unk.Return", span=""];
m1_90 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Program.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m1_104 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Program.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m1_85 [cluster="Unk.f", file="Program.cs", label="Entry Unk.f", span=""];
m1_66 [cluster="System.Activator.CreateInstance<T>()", file="Program.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m1_56 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Program.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m1_58 [cluster="CommandLine.Core.Specification.IsOption()", file="Program.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m1_91 [cluster="CSharpx.Maybe.Nothing<T>()", file="Program.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_126 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="Program.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m1_130 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="Program.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334"];
m1_137 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="Program.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m1_96 [cluster="System.Type.IsMutable()", file="Program.cs", label="Entry System.Type.IsMutable()", span="128-128"];
m1_92 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="Program.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m1_71 [cluster="Unk.ToLower", file="Program.cs", label="Entry Unk.ToLower", span=""];
m1_49 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Program.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_51 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="Program.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m1_65 [cluster="Unk.IsMutable", file="Program.cs", label="Entry Unk.IsMutable", span=""];
m1_68 [cluster="Unk.ToArray", file="Program.cs", label="Entry Unk.ToArray", span=""];
m1_122 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="Program.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m1_63 [cluster="Unk.FromOptionSpecification", file="Program.cs", label="Entry Unk.FromOptionSpecification", span=""];
m1_55 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Program.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m1_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_59 [cluster="Unk.MapValues", file="Program.cs", label="Entry Unk.MapValues", span=""];
m1_150 [file="Program.cs", label="System.StringComparer", span=""];
m1_151 [file="Program.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_152 [file="Program.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m1_153 [file="Program.cs", label=specProps, span=""];
m1_154 [file="Program.cs", label="System.StringComparer", span=""];
m1_155 [file="Program.cs", label=optionSpecs, span=""];
m1_156 [file="Program.cs", label="System.Globalization.CultureInfo", span=""];
m1_157 [file="Program.cs", label=token, span=""];
m1_3 -> m1_19  [key=0, style=solid];
m1_3 -> m1_23  [color=red, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_3 -> m1_94  [color=red, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_3 -> m1_24  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_25  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_28  [color=red, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m1_3 -> m1_30  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_102  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_31  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_106  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_32  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_110  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_33  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_113  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_46  [key=2, style=dotted];
m1_19 -> m1_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_36  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m1_19 -> m1_39  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m1_23 -> m1_24  [color=red, key=0, style=solid];
m1_23 -> m1_27  [color=red, key=1, label=makeDefault, style=dashed];
m1_24 -> m1_25  [color=red, key=0, style=solid];
m1_24 -> m1_28  [color=red, key=0, style=solid];
m1_24 -> m1_50  [color=red, key=2, style=dotted];
m1_25 -> m1_26  [color=red, key=0, style=solid];
m1_25 -> m1_51  [color=red, key=2, style=dotted];
m1_25 -> m1_52  [color=red, key=2, style=dotted];
m1_25 -> m1_27  [color=red, key=1, label=preprocessorErrors, style=dashed];
m1_28 -> m1_29  [color=red, key=0, style=solid];
m1_28 -> m1_55  [color=red, key=2, style=dotted];
m1_28 -> m1_43  [color=red, key=1, label=tokenizerResult, style=dashed];
m1_30 -> m1_31  [color=red, key=0, style=solid];
m1_30 -> m1_57  [color=red, key=2, style=dotted];
m1_30 -> m1_101  [color=red, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_32  [color=red, key=1, label=partitions, style=dashed];
m1_30 -> m1_33  [color=red, key=1, label=partitions, style=dashed];
m1_31 -> m1_32  [color=red, key=0, style=solid];
m1_31 -> m1_58  [color=red, key=2, style=dotted];
m1_31 -> m1_59  [color=red, key=2, style=dotted];
m1_31 -> m1_31  [color=red, key=1, label=pt, style=dashed];
m1_31 -> m1_105  [color=red, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_34  [color=red, key=1, label=optionSpecProps, style=dashed];
m1_31 -> m1_43  [color=red, key=1, label=optionSpecProps, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_60  [key=2, style=dotted];
m1_32 -> m1_59  [key=2, style=dotted];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_32 -> m1_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m1_32 -> m1_43  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_61  [key=2, style=dotted];
m1_33 -> m1_62  [key=2, style=dotted];
m1_33 -> m1_63  [key=2, style=dotted];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_33 -> m1_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_113  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_33 -> m1_43  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_66  [key=2, style=dotted];
m1_37 -> m1_46  [key=2, style=dotted];
m1_37 -> m1_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_47  [key=2, style=dotted];
m1_20 -> m1_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_23  [color=red, key=1, label=specProps, style=dashed];
m1_20 -> m1_94  [color=red, key=1, label=specProps, style=dashed];
m1_20 -> m1_31  [color=red, key=1, label=specProps, style=dashed];
m1_20 -> m1_32  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_20 -> m1_39  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_36 -> m1_65  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_68  [key=2, style=dotted];
m1_39 -> m1_69  [key=2, style=dotted];
m1_39 -> m1_39  [color=darkseagreen4, key=1, label=sp, style=dashed];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m1_21 -> m1_22  [color=red, key=0, style=solid];
m1_21 -> m1_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_22 -> m1_23  [color=red, key=0, style=solid];
m1_22 -> m1_48  [color=red, key=2, style=dotted];
m1_22 -> m1_49  [color=red, key=2, style=dotted];
m1_22 -> m1_28  [color=red, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_30  [color=red, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_102  [color=red, key=1, label=optionSpecs, style=dashed];
m1_22 -> m1_33  [color=red, key=1, label=optionSpecs, style=dashed];
m1_27 -> m1_45  [key=0, style=solid];
m1_27 -> m1_53  [key=2, style=dotted];
m1_27 -> m1_54  [key=2, style=dotted];
m1_26 -> m1_27  [color=red, key=0, style=solid];
m1_26 -> m1_28  [color=red, key=0, style=solid];
m1_26 -> m1_50  [color=red, key=2, style=dotted];
m1_29 -> m1_30  [color=red, key=0, style=solid];
m1_29 -> m1_56  [color=red, key=2, style=dotted];
m1_29 -> m1_42  [color=red, key=1, label=tokens, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_77  [key=2, style=dotted];
m1_43 -> m1_78  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_75  [key=2, style=dotted];
m1_42 -> m1_76  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_56  [key=2, style=dotted];
m1_34 -> m1_64  [key=2, style=dotted];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_34 -> m1_42  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_38 -> m1_42  [key=0, style=solid];
m1_38 -> m1_67  [key=2, style=dotted];
m1_38 -> m1_38  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_38 -> m1_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_44  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_70  [key=2, style=dotted];
m1_40 -> m1_71  [key=2, style=dotted];
m1_40 -> m1_72  [key=2, style=dotted];
m1_40 -> m1_73  [key=2, style=dotted];
m1_40 -> m1_46  [key=2, style=dotted];
m1_40 -> m1_68  [key=2, style=dotted];
m1_40 -> m1_40  [color=darkseagreen4, key=1, label=prms, style=dashed];
m1_40 -> m1_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_40 -> m1_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_74  [key=2, style=dotted];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_79  [key=2, style=dotted];
m1_44 -> m1_80  [key=2, style=dotted];
m1_44 -> m1_81  [key=2, style=dotted];
m1_45 -> m1_3  [color=blue, key=0, style=bold];
m1_98 -> m1_99  [color=red, key=0, style=solid];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_9  [color=red, key=2, style=dotted];
m1_5 -> m1_11  [color=red, key=1, label="lambda expression", style=dashed];
m1_12 -> m1_13  [color=red, key=0, style=solid];
m1_12 -> m1_14  [color=red, key=2, style=dotted];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_6 -> m1_10  [color=red, key=2, style=dotted];
m1_6 -> m1_15  [color=red, key=1, label="lambda expression", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_6  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_11 -> m1_12  [color=red, key=0, style=solid];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_8 -> m1_4  [color=blue, key=0, style=bold];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [color=red, key=0, style=solid];
m1_94 -> m1_96  [color=red, key=2, style=dotted];
m1_94 -> m1_66  [color=red, key=2, style=dotted];
m1_94 -> m1_46  [color=red, key=2, style=dotted];
m1_94 -> m1_68  [color=red, key=2, style=dotted];
m1_94 -> m1_97  [color=red, key=2, style=dotted];
m1_94 -> m1_98  [color=red, key=1, label="lambda expression", style=dashed];
m1_94 -> m1_94  [color=red, key=1, label=p, style=dashed];
m1_102 -> m1_103  [color=red, key=0, style=solid];
m1_102 -> m1_104  [color=red, key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_108  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_108  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_101 -> m1_102  [color=red, key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=2, style=dotted];
m1_83 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_82  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=2, style=dotted];
m1_88 -> m1_91  [key=2, style=dotted];
m1_88 -> m1_92  [key=2, style=dotted];
m1_89 -> m1_87  [color=blue, key=0, style=bold];
m1_93 -> m1_94  [color=red, key=0, style=solid];
m1_95 -> m1_93  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [color=red, key=0, style=solid];
m1_99 -> m1_85  [color=red, key=2, style=dotted];
m1_100 -> m1_98  [color=blue, key=0, style=bold];
m1_103 -> m1_101  [color=blue, key=0, style=bold];
m1_107 -> m1_105  [color=blue, key=0, style=bold];
m1_111 -> m1_109  [color=blue, key=0, style=bold];
m1_114 -> m1_112  [color=blue, key=0, style=bold];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_85  [key=2, style=dotted];
m1_118 -> m1_116  [color=blue, key=0, style=bold];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=2, style=dotted];
m1_121 -> m1_119  [color=blue, key=0, style=bold];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [key=2, style=dotted];
m1_125 -> m1_123  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=2, style=dotted];
m1_128 -> m1_122  [key=2, style=dotted];
m1_129 -> m1_127  [color=blue, key=0, style=bold];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_126  [key=2, style=dotted];
m1_133 -> m1_131  [color=blue, key=0, style=bold];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_130  [key=2, style=dotted];
m1_135 -> m1_137  [key=2, style=dotted];
m1_136 -> m1_134  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=2, style=dotted];
m1_139 -> m1_142  [key=2, style=dotted];
m1_139 -> m1_143  [key=2, style=dotted];
m1_140 -> m1_138  [color=blue, key=0, style=bold];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_144  [color=blue, key=0, style=bold];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_147  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_5  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_12  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_6  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=2, style=dotted];
m1_1 -> m1_4  [color=red, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_150 -> m1_5  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_150 -> m1_12  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_150 -> m1_6  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_150 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_151 -> m1_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_151 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_152 -> m1_94  [color=red, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m1_153 -> m1_94  [color=red, key=1, label=specProps, style=dashed];
m1_154 -> m1_102  [color=red, key=1, label="System.StringComparer", style=dashed];
m1_154 -> m1_113  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_155 -> m1_102  [color=red, key=1, label=optionSpecs, style=dashed];
m1_156 -> m1_106  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_156 -> m1_110  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_157 -> m1_113  [color=darkseagreen4, key=1, label=token, style=dashed];
}
