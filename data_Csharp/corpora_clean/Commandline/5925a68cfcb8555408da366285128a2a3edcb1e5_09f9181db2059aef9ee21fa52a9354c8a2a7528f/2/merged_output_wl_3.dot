digraph  {
n52 [label="CommandLine.Text.Tests.VerbsHelpTextFixture", span=""];
n0 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", span="43-43"];
n1 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", label="DoCoreTestForIndex(new string[] {})", span="45-45"];
n2 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", span="43-43"];
n3 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
n4 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
n5 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", label="DoCoreTestForIndex(new string[] {''help''})", span="51-51"];
n6 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
n7 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", span="55-55"];
n8 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", label="DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", span="57-57"];
n9 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", span="55-55"];
n10 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="61-61"];
n11 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="var options = new OptionsWithVerbsHelp()", span="63-63"];
n12 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="var testWriter = new StringWriter()", span="64-64"];
n22 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80"];
n13 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="Result = Parser.ParseArguments(new string[] { ''clone'', ''--no_hardlinks'' }, options, testWriter)", span="65-65"];
n23 [cluster="System.IO.StringWriter.StringWriter()", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
n15 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="var helpText = testWriter.ToString()", span="69-69"];
n14 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="ResultShouldBeFalse()", span="67-67"];
n24 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
n25 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
n16 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="Console.WriteLine(helpText)", span="70-70"];
n26 [cluster="System.IO.StringWriter.ToString()", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
n17 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="71-71"];
n27 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n18 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="lines[5].Trim().Should().Equal(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="73-73"];
n28 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
n19 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="lines[6].Trim().Should().Equal(''filesystem by copying files.'')", span="74-74"];
n20 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="lines[7].Trim().Should().Equal(''-q, --quiet       Suppress summary message.'')", span="75-75"];
n29 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n30 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n31 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n21 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="61-61"];
n32 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", span="80-80"];
n33 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="var options = new OptionsWithVerbsHelp()", span="82-82"];
n34 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="var testWriter = new StringWriter()", span="83-83"];
n35 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="Result = Parser.ParseArguments(new string[] {''help'', ''add''}, options, testWriter)", span="84-84"];
n37 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="var helpText = testWriter.ToString()", span="88-88"];
n36 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="ResultShouldBeFalse()", span="86-86"];
n38 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="Console.WriteLine(helpText)", span="89-89"];
n39 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
n40 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", span="80-80"];
n41 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="var options = new OptionsWithVerbsHelp()", span="96-96"];
n43 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="Result = Parser.ParseArguments(args, options, testWriter)", span="98-98"];
n42 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="var testWriter = new StringWriter()", span="97-97"];
n45 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="var helpText = testWriter.ToString()", span="102-102"];
n44 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="ResultShouldBeFalse()", span="100-100"];
n46 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="Console.WriteLine(helpText)", span="103-103"];
n47 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="104-104"];
n48 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", span="106-106"];
n49 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="lines[6].Trim().Should().Equal(''commit    Record changes to the repository.'')", span="107-107"];
n50 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", span="108-108"];
n51 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m0_4 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="InstanceChooser.cs", label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m0_5 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="InstanceChooser.cs", label="Dispose(false)", span="36-36"];
m0_6 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="InstanceChooser.cs", label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m0_0 [cluster="CommandLine.ParserSettings.ParserSettings()", file="InstanceChooser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m0_1 [cluster="CommandLine.ParserSettings.ParserSettings()", file="InstanceChooser.cs", label="this.caseSensitive = true", span="27-27"];
m0_2 [cluster="CommandLine.ParserSettings.ParserSettings()", file="InstanceChooser.cs", label="this.parsingCulture = CultureInfo.InvariantCulture", span="28-28"];
m0_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="InstanceChooser.cs", label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m0_7 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="Entry CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m0_13 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="this.disposed", span="128-128"];
m0_15 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label=disposing, span="133-133"];
m0_14 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="return;", span="130-130"];
m0_16 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="HelpWriter != null", span="135-135"];
m0_17 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="this.helpWriter.Dispose()", span="137-137"];
m0_19 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="this.disposed = true", span="141-141"];
m0_18 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="this.helpWriter = null", span="138-138"];
m0_20 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="InstanceChooser.cs", label="Exit CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m0_12 [cluster="System.GC.SuppressFinalize(object)", file="InstanceChooser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m0_21 [cluster="System.IO.TextWriter.Dispose()", file="InstanceChooser.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m0_8 [cluster="CommandLine.ParserSettings.Dispose()", file="InstanceChooser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m0_9 [cluster="CommandLine.ParserSettings.Dispose()", file="InstanceChooser.cs", label="Dispose(true)", span="121-121"];
m0_10 [cluster="CommandLine.ParserSettings.Dispose()", file="InstanceChooser.cs", label="GC.SuppressFinalize(this)", span="123-123"];
m0_11 [cluster="CommandLine.ParserSettings.Dispose()", file="InstanceChooser.cs", label="Exit CommandLine.ParserSettings.Dispose()", span="119-119"];
m0_22 [file="InstanceChooser.cs", label="CommandLine.ParserSettings", span=""];
m2_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m2_133 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_14 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m2_23 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m2_24 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="37-37"];
m2_25 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="39-39"];
m2_26 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="40-40"];
m2_28 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="43-43"];
m2_27 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="41-41"];
m2_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m2_79 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_131 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m2_50 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m2_51 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var tokens = tokenizerResult.SucceededWith()", span="50-50"];
m2_52 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var replaces = tokens.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="52-55"];
m2_55 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="64-64"];
m2_53 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="57-60"];
m2_54 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var flattened = exploded.SelectMany(x => x)", span="62-62"];
m2_56 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m2_8 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_58 [cluster="Unk.SkipWhile", file="Tokenizer.cs", label="Entry Unk.SkipWhile", span=""];
m2_111 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m2_132 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_30 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m2_9 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m2_13 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m2_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_15 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m2_69 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m2_78 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_112 [cluster="string.Substring(int, int)", file="Tokenizer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_113 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m2_77 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m2_64 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Tokenizer.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m2_83 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="59-59"];
m2_20 [cluster="lambda expression", file="Tokenizer.cs", label="!unkTokens.Contains(x)", span="30-30"];
m2_19 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="30-30"];
m2_21 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="30-30"];
m2_37 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="37-37"];
m2_41 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m2_44 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="40-40"];
m2_48 [cluster="lambda expression", file="Tokenizer.cs", label="tokens.Concat(values)", span="41-41"];
m2_47 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="41-41"];
m2_38 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="37-37"];
m2_39 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="37-37"];
m2_42 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="39-39"];
m2_43 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m2_45 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="40-40"];
m2_46 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="40-40"];
m2_49 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="41-41"];
m2_62 [cluster="lambda expression", file="Tokenizer.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="53-55"];
m2_61 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="52-55"];
m2_70 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="55-55"];
m2_74 [cluster="lambda expression", file="Tokenizer.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="58-60"];
m2_73 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="57-60"];
m2_87 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="62-62"];
m2_67 [cluster="lambda expression", file="Tokenizer.cs", label="Tuple.Create(i + 1, sep)", span="54-54"];
m2_63 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="52-55"];
m2_66 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="54-54"];
m2_68 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="54-54"];
m2_71 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 < 0", span="55-55"];
m2_72 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="55-55"];
m2_81 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 == i", span="58-58"];
m2_84 [cluster="lambda expression", file="Tokenizer.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="59-59"];
m2_75 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="57-60"];
m2_80 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="58-58"];
m2_82 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="58-58"];
m2_85 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="59-59"];
m2_88 [cluster="lambda expression", file="Tokenizer.cs", label=x, span="62-62"];
m2_89 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="62-62"];
m2_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m2_10 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112"];
m2_117 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116"];
m2_121 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="122-122"];
m2_122 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="123-123"];
m2_125 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="128-128"];
m2_127 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="131-131"];
m2_128 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1], true);", span="132-132"];
m2_118 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="118-118"];
m2_124 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="127-127"];
m2_119 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="119-119"];
m2_126 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="130-130"];
m2_120 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="120-120"];
m2_123 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="125-125"];
m2_129 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112"];
m2_60 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m2_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m2_17 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m2_36 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m2_40 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="40-40"];
m2_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m2_130 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m2_35 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m2_12 [cluster="Unk.Memorize", file="Tokenizer.cs", label="Entry Unk.Memorize", span=""];
m2_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m2_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="17-17"];
m2_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).Memorize()", span="20-26"];
m2_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="28-28"];
m2_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = errors.Add", span="18-18"];
m2_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="return Result.Succeed(tokens.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30"];
m2_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m2_65 [cluster="Unk.Return", file="Tokenizer.cs", label="Entry Unk.Return", span=""];
m2_115 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_57 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m2_110 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m2_7 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_134 [cluster="CommandLine.Core.Token.Value(string, bool)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m2_16 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m2_116 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_59 [cluster="Unk.SelectMany", file="Tokenizer.cs", label="Entry Unk.SelectMany", span=""];
m2_76 [cluster="Unk.FirstOrDefault", file="Tokenizer.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_86 [cluster="Unk.Split", file="Tokenizer.cs", label="Entry Unk.Split", span=""];
m2_11 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67"];
m2_90 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71"];
m2_93 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="77-77"];
m2_94 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="78-78"];
m2_96 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="83-83"];
m2_97 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="84-84"];
m2_99 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="88-88"];
m2_105 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="98-98"];
m2_107 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107"];
m2_91 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="73-73"];
m2_95 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="81-81"];
m2_103 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="95-95"];
m2_92 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="75-75"];
m2_98 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="87-87"];
m2_101 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="92-92"];
m2_106 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="105-105"];
m2_100 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="90-90"];
m2_104 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="97-97"];
m2_102 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="94-94"];
m2_108 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67"];
m2_18 [cluster="Unk.Succeed", file="Tokenizer.cs", label="Entry Unk.Succeed", span=""];
m2_114 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_109 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m2_135 [file="Tokenizer.cs", label=unkTokens, span=""];
m2_136 [file="Tokenizer.cs", label=values, span=""];
m2_137 [file="Tokenizer.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m2_138 [file="Tokenizer.cs", label=int, span=""];
m2_139 [file="Tokenizer.cs", label=replaces, span=""];
m2_140 [file="Tokenizer.cs", label=int, span=""];
m2_141 [file="Tokenizer.cs", label="CommandLine.Core.Token", span=""];
m3_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TokenizerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m3_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="47-48"];
m3_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="53-59"];
m3_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="62-62"];
m3_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="49-50"];
m3_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44"];
m3_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m3_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m3_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=1, file="TokenizerTests.cs", label="0: var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') }", span="71-73"];
m3_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=1, file="TokenizerTests.cs", label="0: Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="74-75"];
m3_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=0, file="TokenizerTests.cs", label="0: ((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="90-90"];
m3_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=1, file="TokenizerTests.cs", label="0: var result =\r\n                Tokenizer.Normalize(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                    nameLookup)", span="78-87"];
m3_34 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m3_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m3_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m3_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m3_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24"];
m3_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-35"];
m3_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="38-38"];
m3_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26"];
m3_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m3_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="59-59"];
m3_38 [cluster="lambda expression", color=green, community=0, file="TokenizerTests.cs", label="0: name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="75-75"];
m3_37 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="75-75"];
m3_39 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="75-75"];
m3_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="35-35"];
m3_17 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="35-35"];
m3_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="35-35"];
m3_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="59-59"];
m3_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="59-59"];
m3_36 [cluster="CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, bool>)", span="67-67"];
m3_40 [cluster="string.Equals(string)", file="TokenizerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m3_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m3_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m3_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m3_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m3_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m3_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m3_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_41 [file="TokenizerTests.cs", label=specs, span=""];
m3_42 [file="TokenizerTests.cs", label=specs, span=""];
n52 -> n1  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n5  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n8  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n13  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n14  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n35  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n36  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n43  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n52 -> n44  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n41  [key=0, style=solid];
n3 -> n43  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n3  [key=2, style=dotted];
n6 -> n4  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n3  [key=2, style=dotted];
n9 -> n7  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n22  [key=2, style=dotted];
n11 -> n13  [color=darkseagreen4, key=1, label=options, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n12 -> n15  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n24  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n26  [key=2, style=dotted];
n15 -> n17  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n25  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n27  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n28  [key=2, style=dotted];
n17 -> n19  [color=darkseagreen4, key=1, label=lines, style=dashed];
n17 -> n20  [color=darkseagreen4, key=1, label=lines, style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n29  [key=2, style=dotted];
n18 -> n30  [key=2, style=dotted];
n18 -> n31  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n29  [key=2, style=dotted];
n19 -> n30  [key=2, style=dotted];
n19 -> n31  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n29  [key=2, style=dotted];
n20 -> n30  [key=2, style=dotted];
n20 -> n31  [key=2, style=dotted];
n21 -> n10  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n22  [key=2, style=dotted];
n33 -> n35  [color=darkseagreen4, key=1, label=options, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n23  [key=2, style=dotted];
n34 -> n37  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
n35 -> n36  [key=0, style=solid];
n35 -> n24  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n26  [key=2, style=dotted];
n37 -> n39  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n25  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n27  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n28  [key=2, style=dotted];
n40 -> n32  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n41 -> n22  [key=2, style=dotted];
n41 -> n43  [color=darkseagreen4, key=1, label=options, style=dashed];
n43 -> n44  [key=0, style=solid];
n43 -> n24  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n23  [key=2, style=dotted];
n42 -> n45  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n26  [key=2, style=dotted];
n45 -> n47  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n25  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n27  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n28  [key=2, style=dotted];
n47 -> n49  [color=darkseagreen4, key=1, label=lines, style=dashed];
n47 -> n50  [color=darkseagreen4, key=1, label=lines, style=dashed];
n48 -> n49  [key=0, style=solid];
n48 -> n29  [key=2, style=dotted];
n48 -> n30  [key=2, style=dotted];
n48 -> n31  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n29  [key=2, style=dotted];
n49 -> n30  [key=2, style=dotted];
n49 -> n31  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n29  [key=2, style=dotted];
n50 -> n30  [key=2, style=dotted];
n50 -> n31  [key=2, style=dotted];
n51 -> n3  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_13  [key=0, style=solid];
m0_7 -> m0_15  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_20  [key=0, style=solid];
m0_14 -> m0_20  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_7  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_7  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_8  [color=blue, key=0, style=bold];
m0_22 -> m0_1  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_2  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_5  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_9  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_10  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_16  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_17  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_18  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_22 -> m0_19  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_23 -> m2_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=0, style=solid];
m2_24 -> m2_30  [key=2, style=dotted];
m2_24 -> m2_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=2, style=dotted];
m2_25 -> m2_32  [key=2, style=dotted];
m2_25 -> m2_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_27  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_33  [key=2, style=dotted];
m2_26 -> m2_34  [key=2, style=dotted];
m2_26 -> m2_35  [key=2, style=dotted];
m2_26 -> m2_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_27 -> m2_29  [key=0, style=solid];
m2_27 -> m2_36  [key=2, style=dotted];
m2_27 -> m2_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_23  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m2_50 -> m2_62  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m2_50 -> m2_55  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_57  [key=2, style=dotted];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_35  [key=2, style=dotted];
m2_52 -> m2_58  [key=2, style=dotted];
m2_52 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_52 -> m2_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_52 -> m2_74  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_18  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_35  [key=2, style=dotted];
m2_53 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_59  [key=2, style=dotted];
m2_54 -> m2_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_56 -> m2_50  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_17  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_40  [key=2, style=dotted];
m2_43 -> m2_41  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_40  [key=2, style=dotted];
m2_46 -> m2_44  [color=blue, key=0, style=bold];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_32  [key=2, style=dotted];
m2_62 -> m2_64  [key=2, style=dotted];
m2_62 -> m2_65  [key=2, style=dotted];
m2_62 -> m2_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=2, style=dotted];
m2_74 -> m2_77  [key=2, style=dotted];
m2_74 -> m2_78  [key=2, style=dotted];
m2_74 -> m2_79  [key=2, style=dotted];
m2_74 -> m2_65  [key=2, style=dotted];
m2_74 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_74 -> m2_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_81  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_73 -> m2_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_69  [key=2, style=dotted];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_68 -> m2_66  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_35  [key=2, style=dotted];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_80 -> m2_81  [key=0, style=solid];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_10 -> m2_117  [key=0, style=solid];
m2_10 -> m2_121  [color=crimson, key=0, style=bold];
m2_10 -> m2_122  [color=crimson, key=0, style=bold];
m2_10 -> m2_125  [color=crimson, key=0, style=bold];
m2_10 -> m2_127  [color=crimson, key=0, style=bold];
m2_10 -> m2_128  [color=crimson, key=0, style=bold];
m2_10 -> m2_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_10 -> m2_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_129  [key=0, style=solid];
m2_117 -> m2_8  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_111  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_111  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_134  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_109  [key=2, style=dotted];
m2_118 -> m2_121  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_118 -> m2_126  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_131  [key=2, style=dotted];
m2_124 -> m2_132  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_130  [key=2, style=dotted];
m2_119 -> m2_123  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_133  [key=2, style=dotted];
m2_126 -> m2_128  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_126  [key=0, style=solid];
m2_129 -> m2_10  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_3  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_13  [key=2, style=dotted];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_12  [key=2, style=dotted];
m2_4 -> m2_4  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_4 -> m2_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_17  [key=2, style=dotted];
m2_5 -> m2_18  [key=2, style=dotted];
m2_5 -> m2_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_5  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_11 -> m2_90  [key=0, style=solid];
m2_11 -> m2_93  [color=crimson, key=0, style=bold];
m2_11 -> m2_94  [color=crimson, key=0, style=bold];
m2_11 -> m2_96  [color=crimson, key=0, style=bold];
m2_11 -> m2_97  [color=crimson, key=0, style=bold];
m2_11 -> m2_99  [color=crimson, key=0, style=bold];
m2_11 -> m2_105  [color=crimson, key=0, style=bold];
m2_11 -> m2_107  [color=crimson, key=0, style=bold];
m2_11 -> m2_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_11 -> m2_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_11 -> m2_103  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_108  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_9  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_111  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_111  [key=2, style=dotted];
m2_105 -> m2_101  [key=0, style=solid];
m2_105 -> m2_111  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_116  [key=2, style=dotted];
m2_107 -> m2_109  [key=2, style=dotted];
m2_107 -> m2_9  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_109  [key=2, style=dotted];
m2_91 -> m2_96  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_91 -> m2_98  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_91 -> m2_101  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_91 -> m2_106  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_91 -> m2_107  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_98  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_106  [key=0, style=solid];
m2_103 -> m2_114  [key=2, style=dotted];
m2_103 -> m2_32  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=0, style=solid];
m2_92 -> m2_110  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_112  [key=2, style=dotted];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label=first, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_106  [key=0, style=solid];
m2_101 -> m2_109  [key=2, style=dotted];
m2_101 -> m2_103  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_101 -> m2_104  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_106 -> m2_116  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_7  [key=2, style=dotted];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_100 -> m2_104  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_100 -> m2_106  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_100 -> m2_107  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_115  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_113  [key=2, style=dotted];
m2_102 -> m2_105  [color=darkseagreen4, key=1, label=n, style=dashed];
m2_108 -> m2_11  [color=blue, key=0, style=bold];
m2_135 -> m2_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m2_136 -> m2_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m2_137 -> m2_62  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m2_138 -> m2_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_139 -> m2_74  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m2_140 -> m2_81  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_141 -> m2_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_6  [key=2, style=dotted];
m3_21 -> m3_7  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m3_23 -> m3_6  [key=2, style=dotted];
m3_23 -> m3_7  [key=2, style=dotted];
m3_23 -> m3_11  [key=2, style=dotted];
m3_23 -> m3_12  [key=2, style=dotted];
m3_23 -> m3_13  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_14  [key=2, style=dotted];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_24 -> m3_15  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_8  [key=2, style=dotted];
m3_22 -> m3_9  [key=2, style=dotted];
m3_22 -> m3_10  [key=2, style=dotted];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m3_25 -> m3_20  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [color=green, key=0, style=solid];
m3_30 -> m3_31  [color=green, key=0, style=solid];
m3_30 -> m3_6  [color=green, key=2, style=dotted];
m3_30 -> m3_7  [color=green, key=2, style=dotted];
m3_30 -> m3_35  [color=green, key=2, style=dotted];
m3_30 -> m3_33  [color=green, key=1, label=expectedTokens, style=dashed];
m3_31 -> m3_31  [color=green, key=3, label="Local variable System.Func<string, bool> nameLookup", style=bold];
m3_31 -> m3_32  [color=green, key=0, style=solid];
m3_31 -> m3_38  [color=green, key=1, label=string, style=dashed];
m3_33 -> m3_34  [color=green, key=0, style=solid];
m3_33 -> m3_15  [color=green, key=2, style=dotted];
m3_32 -> m3_33  [color=green, key=0, style=solid];
m3_32 -> m3_11  [color=green, key=2, style=dotted];
m3_32 -> m3_6  [color=green, key=2, style=dotted];
m3_32 -> m3_7  [color=green, key=2, style=dotted];
m3_32 -> m3_12  [color=green, key=2, style=dotted];
m3_32 -> m3_13  [color=green, key=2, style=dotted];
m3_32 -> m3_36  [color=green, key=2, style=dotted];
m3_34 -> m3_29  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m3_3 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_11  [key=2, style=dotted];
m3_3 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_15  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_10  [key=2, style=dotted];
m3_2 -> m3_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [key=0, style=solid];
m3_38 -> m3_39  [color=green, key=0, style=solid];
m3_38 -> m3_40  [color=green, key=2, style=dotted];
m3_37 -> m3_38  [color=green, key=0, style=solid];
m3_39 -> m3_37  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_19  [key=2, style=dotted];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_41 -> m3_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m3_42 -> m3_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
}
