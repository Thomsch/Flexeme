digraph  {
m0_0 [label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_1 [label="var expected = Maybe.Just(''.'')", span="17-17", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="18-19", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_4 [label="expected.ShouldBeEquivalentTo(result)", span="25-25", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_3 [label="var result = NameLookup.HavingSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_5 [label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="InstanceBuilderTests.cs"];
m0_6 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilderTests.cs"];
m0_191 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_192 [label="var help = new StringWriter()", span="335-335", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_193 [label="var sut = new Parser(config => config.HelpWriter = help)", span="336-336", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_195 [label="var result = help.ToString()", span="340-340", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_196 [label="result.Length.Should().BeGreaterThan(0)", span="343-343", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_198 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="345-345", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_197 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="344-344", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_194 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="339-339", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_199 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="346-346", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_200 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="347-347", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_201 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="348-348", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_202 [label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="349-349", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_203 [label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="350-350", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_204 [label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="351-351", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_205 [label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="352-352", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_206 [label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="353-353", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_207 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_274 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_275 [label="var help = new StringWriter()", span="447-447", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_276 [label="var sut = new Parser(config => config.HelpWriter = help)", span="448-448", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_278 [label="var result = help.ToString()", span="453-453", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_280 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="457-457", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_279 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="456-456", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_277 [label="sut.ParseArguments<Add_Verb_With_Usage_Attribute, Commit_Verb_With_Usage_Attribute, Clone_Verb_With_Usage_Attribute>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="451-452", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_281 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="458-458", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_282 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="459-459", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_283 [label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="460-460", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_284 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="461-461", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_285 [label="lines[5].ShouldBeEquivalentTo(''Basic cloning:'')", span="462-462", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_286 [label="lines[6].ShouldBeEquivalentTo(''git clone https://github.com/gsscoder/csharpx'')", span="463-463", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_287 [label="lines[7].ShouldBeEquivalentTo(''Cloning quietly:'')", span="464-464", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_288 [label="lines[8].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="465-465", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_289 [label="lines[9].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="466-466", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_290 [label="lines[10].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="467-467", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_291 [label="lines[11].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="468-468", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_292 [label="lines[12].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="469-469", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_293 [label="lines[13].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="470-470", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_294 [label="lines[14].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="471-471", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_295 [label="lines[15].ShouldBeEquivalentTo(''--version         Display version information.'')", span="472-472", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_296 [label="lines[16].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="473-473", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_297 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilderTests.cs"];
m0_130 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_133 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="272-272", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_135 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="276-276", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_134 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="275-275", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_132 [label="var sut = new Parser()", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_131 [label="var expectedError = new HelpRequestedError()", span="268-268", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_136 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m0_67 [label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="InstanceBuilderTests.cs"];
m0_97 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_100 [label="var result = sut.ParseArguments(\r\n                args,\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="196-198", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_99 [label="var sut = new Parser()", span="193-193", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_102 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="202-202", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_101 [label="Assert.IsType<Commit_Verb>(((Parsed<object>)result).Value)", span="201-201", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_98 [label="var expectedOptions = new Commit_Verb() { Message = message }", span="192-192", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_103 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="InstanceBuilderTests.cs"];
m0_332 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="525-525", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_333 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="530-530", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_334 [label="var result = sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(arguments)", span="533-533", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_336 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="537-537", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_335 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="536-536", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_337 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="525-525", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilderTests.cs"];
m0_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs"];
m0_369 [label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="20-20", cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="InstanceBuilderTests.cs"];
m0_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="InstanceBuilderTests.cs"];
m0_147 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_148 [label="var help = new StringWriter()", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_149 [label="var sut = new Parser(config => config.HelpWriter = help)", span="285-285", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_151 [label="var result = help.ToString()", span="289-289", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_150 [label="sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_152 [label="result.Length.Should().BeGreaterThan(0)", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_153 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_11 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs"];
m0_264 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_265 [label="var help = new StringWriter()", span="431-431", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_266 [label="var sut = new Parser(config => config.HelpWriter = help)", span="432-432", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_268 [label="var result = help.ToString()", span="436-436", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_269 [label="result.Length.Should().BeGreaterThan(0)", span="439-439", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_267 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''commit'', ''--help'' })", span="435-435", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_270 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilderTests.cs"];
m0_61 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_63 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="122-122", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_64 [label="var result =\r\n                sut.ParseArguments<Simple_Options_With_Values>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="125-127", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_62 [label="var expectedOptions = new Simple_Options_With_Values\r\n                                  {\r\n                                      StringValue = ''astring'',\r\n                                      LongValue = 20L,\r\n                                      StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                                      IntValue = 30\r\n                                  }", span="115-121", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_65 [label="((Parsed<Simple_Options_With_Values>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="130-130", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_66 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilderTests.cs"];
m0_139 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="InstanceBuilderTests.cs"];
m0_60 [label="Entry Unk.>", span="", cluster="Unk.>", file="InstanceBuilderTests.cs"];
m0_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="InstanceBuilderTests.cs"];
m0_319 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="506-506", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_320 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="511-511", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_321 [label="var result = sut.ParseArguments<Simple_Options>(arguments)", span="514-514", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_322 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="517-517", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_323 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="518-518", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_324 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="506-506", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilderTests.cs"];
m0_35 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs"];
m0_78 [label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7", cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="InstanceBuilderTests.cs"];
m0_108 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_110 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="213-215", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_111 [label="Assert.IsType<NotParsed<object>>(result)", span="218-218", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_109 [label="var sut = Parser.Default", span="210-210", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_112 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="InstanceBuilderTests.cs"];
m0_183 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="InstanceBuilderTests.cs"];
m0_113 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_116 [label="var result =\r\n                sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="239-241", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_115 [label="var sut = new Parser()", span="236-236", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_118 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="245-245", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_117 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="244-244", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_114 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="226-235", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_119 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_71 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_73 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="139-139", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_72 [label="var expectedOptions = new Add_Verb { Patch = true, FileName = ''--strange-fn'' }", span="138-138", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_74 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(Add_Verb),\r\n                typeof(Commit_Verb),\r\n                typeof(Clone_Verb))", span="142-146", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_76 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="150-150", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_75 [label="Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="149-149", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_77 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_55 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilderTests.cs"];
m0_57 [label="var result = sut.ParseArguments<Options_With_Switches>(new[] { ''-i'', ''-i'', ''-o'', ''file'' })", span="104-104", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilderTests.cs"];
m0_56 [label="var sut = Parser.Default", span="101-101", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilderTests.cs"];
m0_58 [label="Assert.IsType<NotParsed<Options_With_Switches>>(result)", span="107-107", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilderTests.cs"];
m0_59 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilderTests.cs"];
m0_154 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="InstanceBuilderTests.cs"];
m0_158 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_161 [label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="304-304", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_163 [label="((NotParsed<Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="308-308", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_162 [label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="307-307", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_160 [label="var sut = new Parser()", span="301-301", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_159 [label="var expectedError = new VersionRequestedError()", span="300-300", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_164 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilderTests.cs"];
m0_129 [label="Entry CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="InstanceBuilderTests.cs"];
m0_364 [label="Entry CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", span="571-571", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m0_366 [label="Parser.Default.ParseArguments<Options_With_SetName_That_Ends_With_Previous_SetName>(new[] { ''--weburl'', ''value'', ''--somethingelse'', ''othervalue'' })\r\n                .WithParsed(opts => expected = opts.WebUrl)\r\n                .WithNotParsed(err => expected = ''changed'')", span="574-576", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m0_365 [label="var expected = string.Empty", span="573-573", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m0_367 [label="''changed''.ShouldBeEquivalentTo(expected)", span="578-578", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m0_368 [label="Exit CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", span="571-571", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m0_165 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceBuilderTests.cs"];
m0_48 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_51 [label="var result = sut.ParseArguments<Options_With_Switches>(args)", span="90-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_50 [label="var sut = new Parser()", span="87-87", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_52 [label="((Parsed<Options_With_Switches>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="93-93", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_49 [label="var expectedOptions = new Options_With_Switches { OutputFile = outputFile }", span="86-86", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_53 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilderTests.cs"];
m0_46 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="InstanceBuilderTests.cs"];
m0_85 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="InstanceBuilderTests.cs"];
m0_211 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_212 [label="var help = new StringWriter()", span="361-361", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_213 [label="var sut = new Parser(config => config.HelpWriter = help)", span="362-362", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_215 [label="var result = help.ToString()", span="366-366", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_217 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="370-370", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_216 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="369-369", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_214 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''--help'' })", span="365-365", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_218 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="371-371", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_219 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="372-372", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_220 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="373-373", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_221 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="374-374", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_222 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="375-375", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_223 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="376-376", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_224 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_120 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_186 [label="config.HelpWriter = help", span="317-317", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_185 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_187 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_188 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_189 [label="x == 1", span="326-326", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_190 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_13 [label="with.HelpWriter = writer", span="20-20", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_26 [label="with.HelpWriter = writer", span="36-36", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_37 [label="with.HelpWriter = writer", span="52-52", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_156 [label="config.HelpWriter = help", span="285-285", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_209 [label="config.HelpWriter = help", span="336-336", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_226 [label="config.HelpWriter = help", span="362-362", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_239 [label="config.HelpWriter = help", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_262 [label="config.HelpWriter = help", span="406-406", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_272 [label="config.HelpWriter = help", span="432-432", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_299 [label="config.HelpWriter = help", span="448-448", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_317 [label="config.HelpWriter = help", span="483-483", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_362 [label="config.HelpWriter = help", span="547-547", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_69 [label="with.EnableDashDash = true", span="122-122", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_80 [label="with.EnableDashDash = true", span="139-139", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_327 [label="config.IgnoreUnknownArguments = true", span="511-511", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_339 [label="config.IgnoreUnknownArguments = true", span="530-530", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_371 [label="Entry lambda expression", span="575-575", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_374 [label="Entry lambda expression", span="576-576", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_143 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_140 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_169 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_166 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_241 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_12 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_14 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_25 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_27 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_36 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_38 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_155 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_157 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_208 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_210 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_225 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_227 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_238 [label="Entry lambda expression", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_240 [label="Exit lambda expression", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_261 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_263 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_271 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_273 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_298 [label="Entry lambda expression", span="448-448", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_300 [label="Exit lambda expression", span="448-448", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_316 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_318 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_361 [label="Entry lambda expression", span="547-547", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_363 [label="Exit lambda expression", span="547-547", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_68 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_70 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_79 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_81 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_330 [label="opts.ShouldBeEquivalentTo(expected)", span="518-518", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_326 [label="Entry lambda expression", span="511-511", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_328 [label="Exit lambda expression", span="511-511", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_342 [label="opts.ShouldBeEquivalentTo(expected)", span="537-537", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_338 [label="Entry lambda expression", span="530-530", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_340 [label="Exit lambda expression", span="530-530", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_329 [label="Entry lambda expression", span="518-518", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_373 [label="Exit lambda expression", span="575-575", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_372 [label="expected = opts.WebUrl", span="575-575", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_376 [label="Exit lambda expression", span="576-576", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_375 [label="expected = ''changed''", span="576-576", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_144 [label="e.Equals(expectedError)", span="276-276", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_145 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_142 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_141 [label="x == 1", span="275-275", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_170 [label="e.Equals(expectedError)", span="308-308", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_171 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_168 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_167 [label="x == 1", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_243 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_242 [label="x == 1", span="396-396", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_82 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_331 [label="Exit lambda expression", span="518-518", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_341 [label="Entry lambda expression", span="537-537", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_343 [label="Exit lambda expression", span="537-537", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_84 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_83 [label="o.RespectingRuntimeTypes()", span="150-150", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_94 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_105 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_96 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_95 [label="o.RespectingRuntimeTypes()", span="180-180", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_107 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_106 [label="o.RespectingRuntimeTypes()", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_121 [label="o.RespectingRuntimeTypes()", span="245-245", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_122 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m0_244 [label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_245 [label="var help = new StringWriter()", span="405-405", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_246 [label="var sut = new Parser(config => config.HelpWriter = help)", span="406-406", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_248 [label="var result = help.ToString()", span="410-410", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_247 [label="sut.ParseArguments<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="409-409", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_250 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="414-414", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_249 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="413-413", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_251 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="415-415", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_252 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="416-416", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_253 [label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="417-417", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_254 [label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="418-418", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_255 [label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="419-419", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_256 [label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="420-420", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_257 [label="lines[7].ShouldBeEquivalentTo(''-a'')", span="421-421", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_258 [label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="422-422", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_259 [label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="423-423", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_260 [label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilderTests.cs"];
m0_93 [label="Entry CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", span="36-36", cluster="CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", file="InstanceBuilderTests.cs"];
m0_28 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_29 [label="var writer = new StringWriter()", span="51-51", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_30 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="52-52", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_32 [label="var text = writer.ToString()", span="58-58", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_33 [label="text.Should().NotBeEmpty()", span="59-59", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_31 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="55-55", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_34 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceBuilderTests.cs"];
m0_23 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="InstanceBuilderTests.cs"];
m0_146 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="InstanceBuilderTests.cs"];
m0_24 [label="Entry Unk.NotBeEmpty", span="", cluster="Unk.NotBeEmpty", file="InstanceBuilderTests.cs"];
m0_184 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="InstanceBuilderTests.cs"];
m0_138 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="InstanceBuilderTests.cs"];
m0_39 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_42 [label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="71-71", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_41 [label="var sut = new Parser()", span="68-68", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_43 [label="((Parsed<Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="74-74", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_40 [label="var expectedOptions = new Simple_Options { StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 } }", span="67-67", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_44 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceBuilderTests.cs"];
m0_172 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilderTests.cs"];
m0_173 [label="var help = new StringWriter()", span="316-316", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_174 [label="var sut = new Parser(config => config.HelpWriter = help)", span="317-317", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_176 [label="var result = help.ToString()", span="321-321", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_175 [label="sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="320-320", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_177 [label="result.Length.Should().BeGreaterThan(0)", span="324-324", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_178 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="325-325", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_179 [label="lines.Should().HaveCount(x => x == 1)", span="326-326", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_180 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="327-327", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_181 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilderTests.cs"];
m0_344 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="543-543", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_345 [label="var help = new StringWriter()", span="546-546", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_346 [label="var sut = new Parser(config => config.HelpWriter = help)", span="547-547", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_348 [label="var result = help.ToString()", span="552-552", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_350 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="556-556", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_349 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="555-555", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_347 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''--bad-arg'', ''--help'' })", span="550-551", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_351 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="557-557", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_352 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="558-558", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_353 [label="lines[3].ShouldBeEquivalentTo(''Option 'bad-arg' is unknown.'')", span="559-559", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_354 [label="lines[4].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="560-560", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_355 [label="lines[5].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="561-561", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_356 [label="lines[6].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="562-562", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_357 [label="lines[7].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="563-563", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_358 [label="lines[8].ShouldBeEquivalentTo(''--version         Display version information.'')", span="564-564", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_359 [label="lines[9].ShouldBeEquivalentTo(''value pos. 0'')", span="565-565", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_360 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="543-543", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilderTests.cs"];
m0_370 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="InstanceBuilderTests.cs"];
m0_123 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_126 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="257-257", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_125 [label="var sut = new Parser()", span="254-254", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_127 [label="((Parsed<Immutable_Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="260-260", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_124 [label="var expectedOptions = new Immutable_Simple_Options(''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="253-253", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_128 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilderTests.cs"];
m0_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_16 [label="var writer = new StringWriter()", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="36-36", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_19 [label="var text = writer.ToString()", span="42-42", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_20 [label="text.Should().NotBeEmpty()", span="43-43", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_18 [label="sut.ParseArguments(new string[] { }, typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="39-39", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilderTests.cs"];
m0_301 [label="Entry CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="479-479", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_302 [label="var help = new StringWriter()", span="482-482", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_303 [label="var sut = new Parser(config => config.HelpWriter = help)", span="483-483", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_305 [label="var result = help.ToString()", span="488-488", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_307 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="492-492", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_306 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="491-491", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_304 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''help'', ''clone'', ''extra-arg'' })", span="486-487", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_308 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="493-493", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_309 [label="lines[2].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="494-494", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_310 [label="lines[3].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="495-495", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_311 [label="lines[4].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="496-496", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_312 [label="lines[5].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="497-497", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_313 [label="lines[6].ShouldBeEquivalentTo(''--version         Display version information.'')", span="498-498", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_314 [label="lines[7].ShouldBeEquivalentTo(''value pos. 0'')", span="499-499", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_315 [label="Exit CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="479-479", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilderTests.cs"];
m0_182 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="InstanceBuilderTests.cs"];
m0_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilderTests.cs"];
m0_104 [label="Entry CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", span="22-22", cluster="CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", file="InstanceBuilderTests.cs"];
m0_54 [label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4", cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="InstanceBuilderTests.cs"];
m0_325 [label="Entry Unk.WithParsed", span="", cluster="Unk.WithParsed", file="InstanceBuilderTests.cs"];
m0_86 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_89 [label="var result =\r\n                sut.ParseArguments(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                    typeof(Add_Verb),\r\n                    typeof(Commit_Verb),\r\n                    typeof(Clone_Verb))", span="171-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_88 [label="var sut = new Parser()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_91 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="180-180", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_90 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_87 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="158-167", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_92 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilderTests.cs"];
m0_228 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_229 [label="var help = new StringWriter()", span="386-386", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_230 [label="var sut = new Parser(config => config.HelpWriter = help)", span="387-387", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_232 [label="var result = help.ToString()", span="391-391", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_233 [label="result.Length.Should().BeGreaterThan(0)", span="394-394", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_235 [label="lines.Should().HaveCount(x => x == 1)", span="396-396", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_236 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="397-397", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_234 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="395-395", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_231 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { command })", span="390-390", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_237 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilderTests.cs"];
m0_45 [label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="InstanceBuilderTests.cs"];
m0_137 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs"];
m0_47 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs"];
m0_383 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_377 [label=writer, span="", file="InstanceBuilderTests.cs"];
m0_378 [label=writer, span="", file="InstanceBuilderTests.cs"];
m0_379 [label=writer, span="", file="InstanceBuilderTests.cs"];
m0_381 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_384 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_385 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_386 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_387 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_388 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_389 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_390 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_393 [label=help, span="", file="InstanceBuilderTests.cs"];
m0_391 [label="CommandLine.Tests.Fakes.Simple_Options", span="", file="InstanceBuilderTests.cs"];
m0_392 [label="CommandLine.Tests.Fakes.Commit_Verb", span="", file="InstanceBuilderTests.cs"];
m0_380 [label=expectedError, span="", file="InstanceBuilderTests.cs"];
m0_382 [label=expectedError, span="", file="InstanceBuilderTests.cs"];
m1_42 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs"];
m1_15 [label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_16 [label=guardsLookup, span="44-44", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_17 [label="specifications.Any(spec => guard.Item1(spec))", span="46-46", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_19 [label="return specifications;", span="52-52", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_18 [label="throw new ApplicationException(guard.Item2);", span="48-48", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_20 [label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m1_41 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs"];
m1_0 [label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_1 [label="specification == null", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_3 [label="return specification.Tag == SpecificationType.Option;", span="15-15", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_2 [label="throw new ArgumentNullException(''specification'');", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_4 [label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_6 [label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_7 [label="specification == null", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_9 [label="return specification.Tag == SpecificationType.Value;", span="22-22", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_8 [label="throw new ArgumentNullException(''specification'');", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_10 [label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_23 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m1_24 [label="guard.Item1(spec)", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m1_25 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m1_27 [label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_28 [label="specification == null", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_30 [label="specification.ConversionType.ToDescriptor()", span="59-59", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_34 [label="var min = specification.Min", span="64-64", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_35 [label="var max = specification.Max", span="65-65", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_29 [label="throw new ArgumentNullException(''specification'');", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_31 [label="DescriptorType.Scalar", span="61-61", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_33 [label="DescriptorType.Sequence", span="63-63", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_32 [label="return  Maybe.Just(1);", span="62-62", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_36 [label="min >= 0 && max >= 0", span="66-66", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_37 [label="return Maybe.Just(max);", span="68-68", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_38 [label="return Maybe.Nothing<int>();", span="73-73", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_39 [label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_22 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs"];
m1_26 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs"];
m1_14 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m1_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs"];
m1_40 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs"];
m1_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SpecificationExtensions.cs"];
m1_43 [label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_44 [label="return specification.Min == -1;", span="78-78", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_45 [label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_11 [label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m1_12 [label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m1_13 [label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m1_46 [label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_47 [label="return specification.Max == -1;", span="83-83", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_48 [label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m1_49 [label=guard, span="", file="SpecificationExtensions.cs"];
m2_11 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs"];
m2_20 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_24 [label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="62-62", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_21 [label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="47-48", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_23 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="53-59", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_22 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="49-50", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_25 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="44-44", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_35 [label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29", cluster="CommandLine.Core.Token.Value(string, bool)", file="SpecificationPropertyRules.cs"];
m2_29 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_33 [label="result.ShouldBeEquivalentTo(expectedTokens)", span="90-90", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_30 [label="var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="71-73", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_32 [label="var result =\r\n                Tokenizer.Normalize(\r\n                    //Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') })\r\n                        //,Enumerable.Empty<Error>()),\r\n                    ,nameLookup)", span="78-87", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_31 [label="Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="74-75", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_34 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="SpecificationPropertyRules.cs"];
m2_19 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationPropertyRules.cs"];
m2_36 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="SpecificationPropertyRules.cs"];
m2_8 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="SpecificationPropertyRules.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_4 [label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="38-38", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=green, community=0, file="SpecificationPropertyRules.cs"];
m2_1 [label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_3 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-35", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_5 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="SpecificationPropertyRules.cs"];
m2_37 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_16 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_17 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="35-35", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_18 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_26 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_27 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="59-59", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_28 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_38 [label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="75-75", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_39 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m2_40 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="SpecificationPropertyRules.cs"];
m2_14 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="SpecificationPropertyRules.cs"];
m2_6 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="SpecificationPropertyRules.cs"];
m2_9 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="SpecificationPropertyRules.cs"];
m2_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationPropertyRules.cs"];
m2_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="SpecificationPropertyRules.cs"];
m2_15 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="SpecificationPropertyRules.cs"];
m2_13 [label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202", cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="SpecificationPropertyRules.cs"];
m2_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SpecificationPropertyRules.cs"];
m2_41 [label=specs, span="", file="SpecificationPropertyRules.cs"];
m2_42 [label=specs, span="", file="SpecificationPropertyRules.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_1 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_191 -> m0_192  [key=0, style=solid];
m0_192 -> m0_7  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_192 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_193 -> m0_8  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_195 -> m0_10  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_196 -> m0_23  [key=2, style=dotted];
m0_196 -> m0_154  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_198 -> m0_23  [key=2, style=dotted];
m0_198 -> m0_184  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_197 -> m0_182  [key=2, style=dotted];
m0_197 -> m0_183  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_197 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_35  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_47  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_47  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_47  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_47  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_47  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_47  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_47  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_47  [key=2, style=dotted];
m0_207 -> m0_191  [key=0, style=bold, color=blue];
m0_274 -> m0_275  [key=0, style=solid];
m0_275 -> m0_7  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_275 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_276 -> m0_8  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_278 -> m0_10  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_280 -> m0_23  [key=2, style=dotted];
m0_280 -> m0_184  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_279 -> m0_182  [key=2, style=dotted];
m0_279 -> m0_183  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_282  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_286  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_279 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_35  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_47  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_47  [key=2, style=dotted];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_47  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_47  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_47  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_47  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_47  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_47  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_47  [key=2, style=dotted];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_47  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_47  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_47  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_47  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_47  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_47  [key=2, style=dotted];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_47  [key=2, style=dotted];
m0_297 -> m0_274  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_133 -> m0_9  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_135 -> m0_23  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_139  [key=2, style=dotted];
m0_135 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_134 -> m0_23  [key=2, style=dotted];
m0_134 -> m0_138  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_46  [key=2, style=dotted];
m0_131 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_137  [key=2, style=dotted];
m0_131 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_136 -> m0_130  [key=0, style=bold, color=blue];
m0_97 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_97 -> m0_98  [key=0, style=solid];
m0_100 -> m0_22  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_99 -> m0_46  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_102 -> m0_47  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_101 -> m0_60  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_98 -> m0_104  [key=2, style=dotted];
m0_103 -> m0_97  [key=0, style=bold, color=blue];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_332 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m0_332 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m0_333 -> m0_8  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_333 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_35  [key=2, style=dotted];
m0_334 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_325  [key=2, style=dotted];
m0_336 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_47  [key=2, style=dotted];
m0_337 -> m0_332  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_7  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_148 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_149 -> m0_8  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_151 -> m0_10  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_150 -> m0_9  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_152 -> m0_23  [key=2, style=dotted];
m0_152 -> m0_154  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_147  [key=0, style=bold, color=blue];
m0_264 -> m0_265  [key=0, style=solid];
m0_265 -> m0_7  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_265 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_266 -> m0_8  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_268 -> m0_10  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_269 -> m0_23  [key=2, style=dotted];
m0_269 -> m0_154  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_35  [key=2, style=dotted];
m0_270 -> m0_264  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid];
m0_63 -> m0_8  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_64 -> m0_9  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_67  [key=2, style=dotted];
m0_62 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_47  [key=2, style=dotted];
m0_66 -> m0_61  [key=0, style=bold, color=blue];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_319 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m0_319 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m0_320 -> m0_8  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_327  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_321 -> m0_9  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_47  [key=2, style=dotted];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_325  [key=2, style=dotted];
m0_323 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_324 -> m0_319  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_110 -> m0_22  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_60  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_112 -> m0_108  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid];
m0_116 -> m0_35  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_115 -> m0_46  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_118 -> m0_47  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_117 -> m0_60  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_114 -> m0_93  [key=2, style=dotted];
m0_119 -> m0_113  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_73 -> m0_8  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_78  [key=2, style=dotted];
m0_72 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_22  [key=2, style=dotted];
m0_74 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_47  [key=2, style=dotted];
m0_76 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_60  [key=2, style=dotted];
m0_77 -> m0_71  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_57 -> m0_9  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=2, style=dotted];
m0_59 -> m0_55  [key=0, style=bold, color=blue];
m0_158 -> m0_159  [key=0, style=solid];
m0_161 -> m0_9  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_163 -> m0_23  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_139  [key=2, style=dotted];
m0_163 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_162 -> m0_23  [key=2, style=dotted];
m0_162 -> m0_138  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_46  [key=2, style=dotted];
m0_159 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_165  [key=2, style=dotted];
m0_159 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_164 -> m0_158  [key=0, style=bold, color=blue];
m0_364 -> m0_365  [key=0, style=solid];
m0_366 -> m0_9  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_369  [key=2, style=dotted];
m0_366 -> m0_370  [key=2, style=dotted];
m0_366 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_366 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_365 -> m0_366  [key=0, style=solid];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_47  [key=2, style=dotted];
m0_368 -> m0_364  [key=0, style=bold, color=blue];
m0_48 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m0_48 -> m0_49  [key=0, style=solid];
m0_51 -> m0_9  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_46  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_47  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_49 -> m0_54  [key=2, style=dotted];
m0_53 -> m0_48  [key=0, style=bold, color=blue];
m0_211 -> m0_212  [key=0, style=solid];
m0_212 -> m0_7  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_212 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_213 -> m0_8  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_215 -> m0_10  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_217 -> m0_23  [key=2, style=dotted];
m0_217 -> m0_184  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_216 -> m0_182  [key=2, style=dotted];
m0_216 -> m0_183  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_216 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_216 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_216 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_216 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_216 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_35  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_47  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_47  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_47  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_47  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_47  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_47  [key=2, style=dotted];
m0_224 -> m0_211  [key=0, style=bold, color=blue];
m0_120 -> m0_121  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid, color=green];
m0_185 -> m0_186  [key=0, style=solid, color=green];
m0_187 -> m0_185  [key=0, style=bold, color=blue];
m0_188 -> m0_189  [key=0, style=solid, color=green];
m0_189 -> m0_190  [key=0, style=solid, color=green];
m0_190 -> m0_188  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_226 -> m0_227  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_317 -> m0_318  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_327 -> m0_328  [key=0, style=solid];
m0_339 -> m0_340  [key=0, style=solid];
m0_371 -> m0_372  [key=0, style=solid];
m0_374 -> m0_375  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_241 -> m0_242  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_27 -> m0_25  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_38 -> m0_36  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_208 -> m0_209  [key=0, style=solid];
m0_210 -> m0_208  [key=0, style=bold, color=blue];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_225  [key=0, style=bold, color=blue];
m0_238 -> m0_239  [key=0, style=solid];
m0_240 -> m0_238  [key=0, style=bold, color=blue];
m0_261 -> m0_262  [key=0, style=solid];
m0_263 -> m0_261  [key=0, style=bold, color=blue];
m0_271 -> m0_272  [key=0, style=solid];
m0_273 -> m0_271  [key=0, style=bold, color=blue];
m0_298 -> m0_299  [key=0, style=solid];
m0_300 -> m0_298  [key=0, style=bold, color=blue];
m0_316 -> m0_317  [key=0, style=solid];
m0_318 -> m0_316  [key=0, style=bold, color=blue];
m0_361 -> m0_362  [key=0, style=solid];
m0_363 -> m0_361  [key=0, style=bold, color=blue];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_79 -> m0_80  [key=0, style=solid];
m0_81 -> m0_79  [key=0, style=bold, color=blue];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_47  [key=2, style=dotted];
m0_326 -> m0_327  [key=0, style=solid];
m0_328 -> m0_326  [key=0, style=bold, color=blue];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_47  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_340 -> m0_338  [key=0, style=bold, color=blue];
m0_329 -> m0_330  [key=0, style=solid];
m0_373 -> m0_371  [key=0, style=bold, color=blue];
m0_372 -> m0_373  [key=0, style=solid];
m0_376 -> m0_374  [key=0, style=bold, color=blue];
m0_375 -> m0_376  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_146  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_142 -> m0_140  [key=0, style=bold, color=blue];
m0_141 -> m0_142  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_146  [key=2, style=dotted];
m0_171 -> m0_169  [key=0, style=bold, color=blue];
m0_168 -> m0_166  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_243 -> m0_241  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_331 -> m0_329  [key=0, style=bold, color=blue];
m0_341 -> m0_342  [key=0, style=solid];
m0_343 -> m0_341  [key=0, style=bold, color=blue];
m0_84 -> m0_82  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_96 -> m0_94  [key=0, style=bold, color=blue];
m0_95 -> m0_85  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_107 -> m0_105  [key=0, style=bold, color=blue];
m0_106 -> m0_85  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_121 -> m0_85  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_120  [key=0, style=bold, color=blue];
m0_244 -> m0_245  [key=0, style=solid];
m0_245 -> m0_7  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_245 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_246 -> m0_8  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_248 -> m0_10  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_247 -> m0_9  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_250 -> m0_23  [key=2, style=dotted];
m0_250 -> m0_184  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_249 -> m0_182  [key=2, style=dotted];
m0_249 -> m0_183  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_249 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_47  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_47  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_47  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_47  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_47  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_47  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_47  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_47  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_47  [key=2, style=dotted];
m0_260 -> m0_244  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_7  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_29 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_30 -> m0_8  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_32 -> m0_10  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_23  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_24  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_34 -> m0_28  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_42 -> m0_9  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_46  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_47  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_40 -> m0_45  [key=2, style=dotted];
m0_44 -> m0_39  [key=0, style=bold, color=blue];
m0_172 -> m0_173  [key=0, style=solid, color=green];
m0_173 -> m0_174  [key=0, style=solid, color=green];
m0_173 -> m0_7  [key=2, style=dotted, color=green];
m0_173 -> m0_186  [key=1, style=dashed, color=green, label=help];
m0_173 -> m0_176  [key=1, style=dashed, color=green, label=help];
m0_174 -> m0_175  [key=0, style=solid, color=green];
m0_174 -> m0_8  [key=2, style=dotted, color=green];
m0_174 -> m0_186  [key=1, style=dashed, color=green, label="CommandLine.ParserSettings"];
m0_176 -> m0_177  [key=0, style=solid, color=green];
m0_176 -> m0_10  [key=2, style=dotted, color=green];
m0_176 -> m0_178  [key=1, style=dashed, color=green, label=result];
m0_175 -> m0_176  [key=0, style=solid, color=green];
m0_175 -> m0_9  [key=2, style=dotted, color=green];
m0_177 -> m0_178  [key=0, style=solid, color=green];
m0_177 -> m0_23  [key=2, style=dotted, color=green];
m0_177 -> m0_154  [key=2, style=dotted, color=green];
m0_178 -> m0_179  [key=0, style=solid, color=green];
m0_178 -> m0_182  [key=2, style=dotted, color=green];
m0_178 -> m0_183  [key=2, style=dotted, color=green];
m0_178 -> m0_180  [key=1, style=dashed, color=green, label=lines];
m0_179 -> m0_180  [key=0, style=solid, color=green];
m0_179 -> m0_23  [key=2, style=dotted, color=green];
m0_179 -> m0_138  [key=2, style=dotted, color=green];
m0_179 -> m0_188  [key=1, style=dashed, color=green, label="lambda expression"];
m0_180 -> m0_181  [key=0, style=solid, color=green];
m0_180 -> m0_23  [key=2, style=dotted, color=green];
m0_180 -> m0_184  [key=2, style=dotted, color=green];
m0_181 -> m0_172  [key=0, style=bold, color=blue];
m0_344 -> m0_345  [key=0, style=solid];
m0_345 -> m0_7  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_345 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_346 -> m0_8  [key=2, style=dotted];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_348 -> m0_10  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_350 -> m0_23  [key=2, style=dotted];
m0_350 -> m0_184  [key=2, style=dotted];
m0_350 -> m0_351  [key=0, style=solid];
m0_349 -> m0_182  [key=2, style=dotted];
m0_349 -> m0_183  [key=2, style=dotted];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_357  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_349 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_35  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_47  [key=2, style=dotted];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_47  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_47  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_47  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_47  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_47  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_47  [key=2, style=dotted];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_47  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_47  [key=2, style=dotted];
m0_360 -> m0_344  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_126 -> m0_9  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_46  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_47  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_124 -> m0_129  [key=2, style=dotted];
m0_128 -> m0_123  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_7  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_17 -> m0_8  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_19 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_23  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_24  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_21 -> m0_15  [key=0, style=bold, color=blue];
m0_301 -> m0_302  [key=0, style=solid];
m0_302 -> m0_7  [key=2, style=dotted];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_302 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_303 -> m0_8  [key=2, style=dotted];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_305 -> m0_10  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_307 -> m0_23  [key=2, style=dotted];
m0_307 -> m0_184  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_306 -> m0_182  [key=2, style=dotted];
m0_306 -> m0_183  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_308  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_306 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_35  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_47  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_47  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_47  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_47  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_47  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_47  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_47  [key=2, style=dotted];
m0_315 -> m0_301  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_89 -> m0_22  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_88 -> m0_46  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_91 -> m0_47  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_90 -> m0_60  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m0_87 -> m0_93  [key=2, style=dotted];
m0_92 -> m0_86  [key=0, style=bold, color=blue];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_229 -> m0_7  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_229 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_230 -> m0_8  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_232 -> m0_10  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_233 -> m0_23  [key=2, style=dotted];
m0_233 -> m0_154  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_235 -> m0_23  [key=2, style=dotted];
m0_235 -> m0_138  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_236 -> m0_23  [key=2, style=dotted];
m0_236 -> m0_184  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_234 -> m0_182  [key=2, style=dotted];
m0_234 -> m0_183  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_35  [key=2, style=dotted];
m0_237 -> m0_228  [key=0, style=bold, color=blue];
m0_383 -> m0_186  [key=1, style=dashed, color=green, label=help];
m0_377 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_378 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_379 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_381 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_384 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_385 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_386 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_387 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_388 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_389 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_390 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_393 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=help];
m0_391 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m0_392 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m0_380 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m0_382 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_15 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_15 -> m1_15  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=0, style=solid];
m1_16 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m1_16 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=guard];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_16  [key=0, style=solid];
m1_17 -> m1_21  [key=2, style=dotted];
m1_17 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_19 -> m1_20  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_15  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_8 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_6  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_27 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_27 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=0, style=solid];
m1_30 -> m1_40  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=min];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=max];
m1_29 -> m1_39  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_32 -> m1_39  [key=0, style=solid];
m1_32 -> m1_41  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_37 -> m1_41  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_42  [key=2, style=dotted];
m1_39 -> m1_27  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_43  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_49 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m2_20 -> m2_21  [key=0, style=solid];
m2_24 -> m2_15  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_21 -> m2_6  [key=2, style=dotted];
m2_21 -> m2_7  [key=2, style=dotted];
m2_21 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m2_21 -> m2_22  [key=0, style=solid];
m2_23 -> m2_6  [key=2, style=dotted];
m2_23 -> m2_7  [key=2, style=dotted];
m2_23 -> m2_11  [key=2, style=dotted];
m2_23 -> m2_12  [key=2, style=dotted];
m2_23 -> m2_13  [key=2, style=dotted];
m2_23 -> m2_14  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_22 -> m2_8  [key=2, style=dotted];
m2_22 -> m2_9  [key=2, style=dotted];
m2_22 -> m2_10  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=specs];
m2_25 -> m2_20  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_33 -> m2_15  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_30 -> m2_6  [key=2, style=dotted];
m2_30 -> m2_7  [key=2, style=dotted];
m2_30 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m2_30 -> m2_31  [key=0, style=solid];
m2_32 -> m2_6  [key=2, style=dotted];
m2_32 -> m2_7  [key=2, style=dotted];
m2_32 -> m2_11  [key=2, style=dotted];
m2_32 -> m2_12  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_35  [key=2, style=dotted];
m2_32 -> m2_36  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_34 -> m2_29  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_15  [key=2, style=dotted, color=green];
m2_1 -> m2_4  [key=1, style=dashed, color=green, label=expectedTokens];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>> EnforceRequired"];
m2_3 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_14  [key=2, style=dotted];
m2_3 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_37 -> m2_38  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_19  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m2_41 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m2_42 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=specs];
}
