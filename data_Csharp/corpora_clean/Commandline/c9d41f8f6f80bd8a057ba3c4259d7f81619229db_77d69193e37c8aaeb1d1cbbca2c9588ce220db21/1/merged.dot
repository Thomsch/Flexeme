digraph  {
n682 [label="CommandLine.HelpOptionAttribute", span=""];
n683 [label="CommandLine.OptionAttribute", span=""];
n684 [label="CommandLine.OptionListAttribute", span=""];
n685 [label="CommandLine.ValueListAttribute", span=""];
n686 [label="CommandLine.ArgumentParser", span=""];
n687 [label="CommandLine.BadOptionInfo", span=""];
n688 [label="CommandLine.LongOptionParser", span=""];
n689 [label="CommandLine.OneCharStringEnumerator", span=""];
n690 [label="CommandLine.OptionGroupParser", span=""];
n691 [label="CommandLine.OptionInfo", span=""];
n692 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n693 [label="CommandLine.OptionMap", span=""];
n694 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n695 [label="CommandLine.ParsingError", span=""];
n696 [label="CommandLine.PostParsingState", span=""];
n697 [label="CommandLine.StringArrayEnumerator", span=""];
n698 [label="CommandLine.TargetWrapper", span=""];
n699 [label="CommandLine.CommandLineOptionsBase", span=""];
n700 [label="CommandLine.CommandLineParserSettings", span=""];
n701 [label="CommandLine.CommandLineParser", span=""];
n0 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="126-126", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n1 [label="HelpText = _defaultHelpText", span="129-129", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n2 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="126-126", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n3 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="138-138", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n4 [label="ShortName = shortName", span="140-140", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n5 [label="LongName = longName", span="141-141", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n6 [label="HelpText = _defaultHelpText", span="142-142", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n7 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="138-138", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n8 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="156-156", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n9 [label="text = null", span="159-159", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n10 [label="var method = pair.Left", span="161-161", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n13 [label="text = (string)method.Invoke(target, null)", span="165-165", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n11 [label="!CheckMethodSignature(method)", span="162-162", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n12 [label="throw new MemberAccessException();", span="163-163", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n15 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="168-168", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n14 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="156-156", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n16 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()"];
n17 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])"];
n18 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="170-170", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n19 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="168-168", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n20 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
n21 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="184-184", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)"];
n22 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="184-184", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)"];
n23 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="206-206", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n24 [label="!string.IsNullOrEmpty(shortName)", span="208-208", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n25 [label="_uniqueName = shortName", span="209-209", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n26 [label="!string.IsNullOrEmpty(longName)", span="210-210", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n27 [label="_uniqueName = longName", span="211-211", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n30 [label="base.ShortName = shortName", span="216-216", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n31 [label="base.LongName = longName", span="217-217", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n33 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n28 [label="_uniqueName == null", span="213-213", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n29 [label="throw new InvalidOperationException();", span="214-214", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n32 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="206-206", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n34 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()"];
n35 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="260-260", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)"];
n36 [label="Separator = ':'", span="263-263", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)"];
n37 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="260-260", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)"];
n38 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="272-272", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)"];
n39 [label="Separator = separator", span="275-275", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)"];
n40 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="272-272", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)"];
n41 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="296-296", cluster="CommandLine.ValueListAttribute.ValueListAttribute()"];
n42 [label="MaximumElements = -1", span="298-298", cluster="CommandLine.ValueListAttribute.ValueListAttribute()"];
n43 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="296-296", cluster="CommandLine.ValueListAttribute.ValueListAttribute()"];
n44 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="306-306", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n45 [label="concreteType == null", span="309-309", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n47 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="312-312", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n49 [label="_concreteType = concreteType", span="315-315", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n46 [label="throw new ArgumentNullException(''concreteType'');", span="310-310", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n48 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="313-313", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n52 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n50 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="306-306", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n53 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1521-1521", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)"];
n51 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n54 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="330-330", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n55 [label="Type concreteType", span="332-332", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n56 [label="var property = GetProperty(target, out concreteType)", span="333-333", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n59 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="338-338", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n60 [label="return (IList<string>)property.GetValue(target, null);", span="340-340", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n57 [label="property == null || concreteType == null", span="335-335", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n62 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="357-357", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n58 [label="return null;", span="336-336", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n63 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)"];
n64 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])"];
n61 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="330-330", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n65 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])"];
n66 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="343-343", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n67 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="345-345", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n68 [label="list == null || list.Count == 0", span="346-346", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n75 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1828-1828", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n70 [label="list.Count > 1", span="349-349", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n72 [label="var pairZero = list[0]", span="352-352", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n69 [label="return null;", span="347-347", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n71 [label="throw new InvalidOperationException();", span="350-350", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n73 [label="return pairZero.Right;", span="354-354", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n74 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="343-343", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n76 [label="concreteType = null", span="359-359", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n77 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="361-361", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n78 [label="list == null || list.Count == 0", span="362-362", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n80 [label="list.Count > 1", span="365-365", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n82 [label="var pairZero = list[0]", span="368-368", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n79 [label="return null;", span="363-363", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n81 [label="throw new InvalidOperationException();", span="366-366", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n83 [label="concreteType = pairZero.Right.ConcreteType", span="369-369", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n84 [label="return pairZero.Left;", span="371-371", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n85 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="357-357", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n86 [label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="387-387", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n87 [label="this.PostParsingState = new List<ParsingError>()", span="389-389", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n88 [label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="387-387", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n89 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n90 [label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="392-392", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n91 [label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="392-392", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n92 [label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="396-396", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n93 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="400-400", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n94 [label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="396-396", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n95 [label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1270-1270", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n96 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n97 [label="Entry CommandLine.ArgumentParser.Create(string)", span="403-403", cluster="CommandLine.ArgumentParser.Create(string)"];
n98 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="405-405", cluster="CommandLine.ArgumentParser.Create(string)"];
n100 [label="argument[0] == '-' && argument[1] == '-'", span="408-408", cluster="CommandLine.ArgumentParser.Create(string)"];
n102 [label="argument[0] == '-'", span="411-411", cluster="CommandLine.ArgumentParser.Create(string)"];
n99 [label="return null;", span="406-406", cluster="CommandLine.ArgumentParser.Create(string)"];
n106 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
n101 [label="return new LongOptionParser();", span="409-409", cluster="CommandLine.ArgumentParser.Create(string)"];
n103 [label="return new OptionGroupParser();", span="412-412", cluster="CommandLine.ArgumentParser.Create(string)"];
n104 [label="return null;", span="414-414", cluster="CommandLine.ArgumentParser.Create(string)"];
n105 [label="Exit CommandLine.ArgumentParser.Create(string)", span="403-403", cluster="CommandLine.ArgumentParser.Create(string)"];
n107 [label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="542-542", cluster="CommandLine.LongOptionParser.LongOptionParser()"];
n108 [label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="716-716", cluster="CommandLine.OptionGroupParser.OptionGroupParser()"];
n109 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="417-417", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n110 [label="argument.Length > 0", span="419-419", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n111 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="420-420", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n112 [label="return true;", span="422-422", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n113 [label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="417-417", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n114 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="432-432", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n115 [label="IList<string> list = new List<string>()", span="434-434", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n116 [label="ae.MoveNext()", span="436-436", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n117 [label="IsInputValue(ae.Current)", span="438-438", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n118 [label="list.Add(ae.Current)", span="439-439", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n119 [label="!ae.MovePrevious()", span="443-443", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n121 [label="return list;", span="446-446", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n123 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="533-533", cluster="CommandLine.IArgumentEnumerator.MoveNext()"];
n124 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n120 [label="throw new CommandLineParserException();", span="444-444", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n125 [label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="535-535", cluster="CommandLine.IArgumentEnumerator.MovePrevious()"];
n122 [label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="432-432", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n126 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1516-1516", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
n127 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="449-449", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n128 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="451-451", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n129 [label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="449-449", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n130 [label="Entry string.Compare(string, string, bool)", span="0-0", cluster="string.Compare(string, string, bool)"];
n131 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="454-454", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n132 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="456-456", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n133 [label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="454-454", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n134 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="459-459", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n135 [label="return BooleanToParserState(value, false);", span="461-461", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n136 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="459-459", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n137 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="464-464", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n138 [label="value && !addMoveNextIfTrue", span="466-466", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n140 [label="value && addMoveNextIfTrue", span="468-468", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n139 [label="return ParserState.Success;", span="467-467", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n141 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="469-469", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n142 [label="return ParserState.Failure;", span="471-471", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n143 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="464-464", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n144 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="474-474", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n145 [label="!option.IsAttributeArrayCompatible", span="476-476", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n146 [label="throw new CommandLineParserException();", span="477-477", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n147 [label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="474-474", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n148 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="480-480", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n149 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="482-482", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n150 [label="throw new CommandLineParserException();", span="483-483", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n151 [label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="480-480", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n152 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="492-492", cluster="CommandLine.BadOptionInfo.BadOptionInfo()"];
n153 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="492-492", cluster="CommandLine.BadOptionInfo.BadOptionInfo()"];
n154 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="496-496", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n155 [label="ShortName = shortName", span="498-498", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n156 [label="LongName = longName", span="499-499", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n157 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="496-496", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n158 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="528-528", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()"];
n159 [label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="528-528", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()"];
n160 [label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="533-533", cluster="CommandLine.IArgumentEnumerator.MoveNext()"];
n161 [label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="535-535", cluster="CommandLine.IArgumentEnumerator.MovePrevious()"];
n162 [label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="542-542", cluster="CommandLine.LongOptionParser.LongOptionParser()"];
n163 [label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="547-547", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n164 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="549-549", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n165 [label="var option = map[parts[0]]", span="550-550", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n172 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="562-562", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n176 [label="valueSetting = option.SetValue(parts[1], options)", span="569-569", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n181 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="579-579", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n183 [label="valueSetting = option.SetValue(items, options)", span="582-582", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n188 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="593-593", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n193 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="603-603", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n194 [label="valueSetting = option.SetValue(items, options)", span="605-605", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n200 [label="valueSetting = option.SetValue(true, options)", span="618-618", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n205 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n206 [label="Entry string.Split(char[], int)", span="0-0", cluster="string.Split(char[], int)"];
n174 [label="parts.Length == 2", span="565-565", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n182 [label="items.Insert(0, parts[1])", span="580-580", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n198 [label="parts.Length == 2", span="615-615", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n166 [label="var valueSetting = false", span="551-551", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n167 [label="option == null", span="553-553", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n169 [label="option.IsDefined = true", span="556-556", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n170 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="558-558", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n171 [label="!option.IsBoolean", span="560-560", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n175 [label="!option.IsArray", span="567-567", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n178 [label="this.DefineOptionThatViolatesFormat(option)", span="571-571", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n180 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="577-577", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n185 [label="this.DefineOptionThatViolatesFormat(option)", span="584-584", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n187 [label="!option.IsArray", span="591-591", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n190 [label="this.DefineOptionThatViolatesFormat(option)", span="595-595", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n192 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="601-601", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n196 [label="this.DefineOptionThatViolatesFormat(option)", span="607-607", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n202 [label="this.DefineOptionThatViolatesFormat(option)", span="620-620", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n168 [label="return ParserState.Failure;", span="554-554", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n173 [label="return ParserState.Failure;", span="563-563", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n177 [label="!valueSetting", span="570-570", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n207 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="868-868", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n179 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="573-573", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n208 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)"];
n184 [label="!valueSetting", span="583-583", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n209 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n186 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="586-586", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n189 [label="!valueSetting", span="594-594", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n191 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="597-597", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n195 [label="!valueSetting", span="606-606", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n197 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="609-609", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n199 [label="return ParserState.Failure;", span="616-616", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n201 [label="!valueSetting", span="619-619", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n210 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="962-962", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n203 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="622-622", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n204 [label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="547-547", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n211 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="633-633", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n212 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="635-635", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n213 [label="_data = value", span="637-637", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n216 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1813-1813", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n214 [label="_index = -1", span="638-638", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n215 [label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="633-633", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n217 [label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="677-677", cluster="CommandLine.OneCharStringEnumerator.Reset()"];
n218 [label="_index = -1", span="679-679", cluster="CommandLine.OneCharStringEnumerator.Reset()"];
n219 [label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="677-677", cluster="CommandLine.OneCharStringEnumerator.Reset()"];
n220 [label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n221 [label="_index < (_data.Length - 1)", span="684-684", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n222 [label="_index++", span="686-686", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n225 [label="_index = _data.Length", span="690-690", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n223 [label="_currentElement = _data.Substring(_index, 1)", span="687-687", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n224 [label="return true;", span="688-688", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n228 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n226 [label="return false;", span="692-692", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n227 [label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n229 [label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="695-695", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n230 [label="_index == -1", span="697-697", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n231 [label="throw new InvalidOperationException();", span="698-698", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n232 [label="_index > _data.Length", span="700-700", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n233 [label="throw new InvalidOperationException();", span="701-701", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n234 [label="return _data.Substring(_index + 1);", span="703-703", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n235 [label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="695-695", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n236 [label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="706-706", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()"];
n237 [label="throw new NotSupportedException();", span="708-708", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()"];
n238 [label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="706-706", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()"];
n239 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()"];
n240 [label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="711-711", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()"];
n241 [label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="711-711", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()"];
n242 [label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="718-718", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n243 [label="var valueSetting = false", span="720-720", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n244 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="722-722", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n246 [label="var option = map[group.Current]", span="725-725", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n252 [label="argumentEnumerator.IsLast && group.IsLast", span="735-735", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n256 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="742-742", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n261 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="752-752", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n263 [label="valueSetting = option.SetValue(items, options)", span="755-755", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n267 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="763-763", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n270 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="769-769", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n275 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="779-779", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n276 [label="valueSetting = option.SetValue(items, options)", span="781-781", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n280 [label="!group.IsLast && map[group.Next] == null", span="791-791", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n282 [label="!option.SetValue(true, options)", span="794-794", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n245 [label="group.MoveNext()", span="723-723", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n254 [label="!group.IsLast", span="738-738", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n262 [label="items.Insert(0, group.GetRemainingFromNext())", span="753-753", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n284 [label="return ParserState.Success;", span="799-799", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n247 [label="option == null", span="726-726", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n249 [label="option.IsDefined = true", span="729-729", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n250 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="731-731", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n251 [label="!option.IsBoolean", span="733-733", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n255 [label="!option.IsArray", span="740-740", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n258 [label="this.DefineOptionThatViolatesFormat(option)", span="744-744", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n260 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="750-750", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n265 [label="this.DefineOptionThatViolatesFormat(option)", span="757-757", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n269 [label="!option.IsArray", span="767-767", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n272 [label="this.DefineOptionThatViolatesFormat(option)", span="771-771", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n274 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="777-777", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n278 [label="this.DefineOptionThatViolatesFormat(option)", span="783-783", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n248 [label="return ParserState.Failure;", span="727-727", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n253 [label="return ParserState.Failure;", span="736-736", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n257 [label="!valueSetting", span="743-743", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n259 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="746-746", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n264 [label="!valueSetting", span="756-756", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n266 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="759-759", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n268 [label="return ParserState.Failure;", span="764-764", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n271 [label="!valueSetting", span="770-770", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n273 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="773-773", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n277 [label="!valueSetting", span="782-782", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n279 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="785-785", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n281 [label="return ParserState.Failure;", span="792-792", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n283 [label="return ParserState.Failure;", span="795-795", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n285 [label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="718-718", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n286 [label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="817-817", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n287 [label="attribute != null", span="819-819", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n288 [label="_required = attribute.Required", span="821-821", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n289 [label="_helpText = attribute.HelpText", span="822-822", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n290 [label="_shortName = attribute.ShortName", span="823-823", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n291 [label="_longName = attribute.LongName", span="824-824", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n292 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="825-825", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n293 [label="_defaultValue = attribute.DefaultValue", span="826-826", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n294 [label="_hasDefaultValue = attribute.HasDefaultValue", span="827-827", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n295 [label="_attribute = attribute", span="828-828", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n297 [label="property != null", span="833-833", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n298 [label="_property = property", span="834-834", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n296 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="831-831", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n299 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="836-836", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n300 [label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="817-817", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n301 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)"];
n302 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="847-847", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n303 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="849-849", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n305 [label="var map = new OptionMap(list.Count, settings)", span="852-852", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n309 [label="map.RawOptions = target", span="860-860", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n304 [label="list != null", span="850-850", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n306 [label=list, span="854-854", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n311 [label="return null;", span="865-865", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n313 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n308 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="857-857", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n310 [label="return map;", span="862-862", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n307 [label="pair != null && pair.Right != null", span="856-856", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n312 [label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="847-847", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n314 [label="_attribute is OptionListAttribute", span="870-870", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n315 [label="return SetValueList(value, options);", span="871-871", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n317 [label="return SetNullableValue(value, options);", span="874-874", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n318 [label="return SetValueScalar(value, options);", span="876-876", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n316 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="873-873", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n321 [label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1915-1915", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)"];
n319 [label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="868-868", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n323 [label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="904-904", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n320 [label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="972-972", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n322 [label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="940-940", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n324 [label="Type elementType = _property.PropertyType.GetElementType()", span="881-881", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n325 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="882-882", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n329 [label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="891-891", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n330 [label="_property.SetValue(options, array, null)", span="892-892", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n336 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()"];
n326 [label="int i = 0", span="884-884", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n337 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)"];
n327 [label="i < array.Length", span="884-884", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n333 [label="i++", span="884-884", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n328 [label=_setValueLock, span="888-888", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n334 [label="return true;", span="901-901", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n338 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)"];
n339 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)"];
n331 [label=FormatException, span="895-895", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n332 [label="return false;", span="897-897", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n335 [label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n340 [label="_property.PropertyType.IsEnum", span="908-908", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n342 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="912-912", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n344 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="920-920", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n341 [label=_setValueLock, span="910-910", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n343 [label=_setValueLock, span="917-917", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n345 [label=InvalidCastException, span="924-924", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n347 [label=FormatException, span="928-928", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n349 [label=ArgumentException, span="932-932", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n351 [label="return true;", span="937-937", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n353 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)"];
n346 [label="return false;", span="926-926", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n348 [label="return false;", span="930-930", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n350 [label="return false;", span="934-934", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n352 [label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="904-904", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n354 [label="var nc = new NullableConverter(_property.PropertyType)", span="942-942", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n356 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="949-949", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n355 [label=_setValueLock, span="946-946", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n361 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)"];
n357 [label=Exception, span="954-954", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n359 [label="return true;", span="959-959", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n362 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)"];
n358 [label="return false;", span="956-956", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n360 [label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="940-940", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n363 [label=_setValueLock, span="964-964", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n364 [label="_property.SetValue(options, value, null)", span="966-966", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n365 [label="return true;", span="968-968", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n366 [label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="962-962", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n367 [label=_setValueLock, span="974-974", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n368 [label="_property.SetValue(options, new List<string>(), null)", span="976-976", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n369 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="978-978", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n370 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="979-979", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n373 [label="fieldRef.Add(values[i])", span="983-983", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n371 [label="int i = 0", span="981-981", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n377 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n372 [label="i < values.Length", span="981-981", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n374 [label="i++", span="981-981", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n375 [label="return true;", span="986-986", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n376 [label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="972-972", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n378 [label="Entry CommandLine.OptionInfo.SetDefault(object)", span="990-990", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n379 [label=_hasDefaultValue, span="992-992", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n381 [label="_property.SetValue(options, _defaultValue, null)", span="996-996", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n380 [label=_setValueLock, span="994-994", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n382 [label="Exit CommandLine.OptionInfo.SetDefault(object)", span="990-990", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n383 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1066-1066", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)"];
n384 [label="BadOption = option", span="1069-1069", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)"];
n385 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1066-1066", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)"];
n386 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1075-1075", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()"];
n387 [label="++count", span="1075-1075", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()"];
n388 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1075-1075", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()"];
n389 [label="_settings = settings", span="1088-1088", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n394 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="1096-1096", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n395 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1097-1097", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n397 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1102-1102", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n390 [label="IEqualityComparer<string> comparer", span="1090-1090", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n391 [label="_settings.CaseSensitive", span="1091-1091", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n392 [label="comparer = StringComparer.Ordinal", span="1092-1092", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n393 [label="comparer = StringComparer.OrdinalIgnoreCase", span="1094-1094", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n399 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)"];
n396 [label="_settings.MutuallyExclusive", span="1099-1099", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n398 [label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n400 [label="Entry CommandLine.OptionMap.EnforceRules()", span="1137-1137", cluster="CommandLine.OptionMap.EnforceRules()"];
n401 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1139-1139", cluster="CommandLine.OptionMap.EnforceRules()"];
n402 [label="Exit CommandLine.OptionMap.EnforceRules()", span="1137-1137", cluster="CommandLine.OptionMap.EnforceRules()"];
n403 [label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1163-1163", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n404 [label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1150-1150", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n405 [label="Entry CommandLine.OptionMap.SetDefaults()", span="1142-1142", cluster="CommandLine.OptionMap.SetDefaults()"];
n406 [label="_map.Values", span="1144-1144", cluster="CommandLine.OptionMap.SetDefaults()"];
n407 [label="option.SetDefault(this.RawOptions)", span="1146-1146", cluster="CommandLine.OptionMap.SetDefaults()"];
n408 [label="Exit CommandLine.OptionMap.SetDefaults()", span="1142-1142", cluster="CommandLine.OptionMap.SetDefaults()"];
n409 [label="_map.Values", span="1152-1152", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n410 [label="option.Required && !option.IsDefined", span="1154-1154", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n413 [label="return true;", span="1160-1160", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n411 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1156-1156", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n412 [label="return false;", span="1157-1157", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n415 [label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1202-1202", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n414 [label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1150-1150", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n416 [label="!_settings.MutuallyExclusive", span="1165-1165", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n417 [label="return true;", span="1166-1166", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n418 [label="_map.Values", span="1168-1168", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n419 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1170-1170", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n421 [label="_mutuallyExclusiveSetMap.Values", span="1175-1175", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n420 [label="BuildMutuallyExclusiveMap(option)", span="1171-1171", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n427 [label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1188-1188", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n422 [label="info.Occurrence > 1", span="1177-1177", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n425 [label="return true;", span="1185-1185", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n423 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1180-1180", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n424 [label="return false;", span="1181-1181", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n426 [label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1163-1163", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n428 [label="var setName = option.MutuallyExclusiveSet", span="1190-1190", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n430 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1195-1195", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n429 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1192-1192", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n431 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1199-1199", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n433 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n434 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n432 [label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1188-1188", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n435 [label="options is CommandLineOptionsBase", span="1204-1204", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n437 [label="error.BadOption.ShortName = option.ShortName", span="1209-1209", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n438 [label="error.BadOption.LongName = option.LongName", span="1210-1210", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n439 [label="required != null", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n440 [label="error.ViolatesRequired = required.Value", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n441 [label="mutualExclusiveness != null", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n442 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n443 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n436 [label="ParsingError error = new ParsingError()", span="1206-1206", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n444 [label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1202-1202", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n445 [label="Entry CommandLine.ParsingError.ParsingError()", span="1265-1265", cluster="CommandLine.ParsingError.ParsingError()"];
n446 [label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1225-1225", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n447 [label="_left = left", span="1227-1227", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n448 [label="_right = right", span="1228-1228", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n449 [label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1225-1225", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n450 [label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1241-1241", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n451 [label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1243-1243", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n452 [label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1244-1244", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n455 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
n453 [label="return leftHash ^ rightHash;", span="1246-1246", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n454 [label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1241-1241", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n456 [label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1249-1249", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n457 [label="var other = obj as Pair<TLeft, TRight>", span="1251-1251", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n458 [label="other == null", span="1253-1253", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n460 [label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1256-1256", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n459 [label="return false;", span="1254-1254", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n461 [label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1249-1249", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n462 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)"];
n463 [label="this.BadOption = new BadOptionInfo()", span="1267-1267", cluster="CommandLine.ParsingError.ParsingError()"];
n464 [label="Exit CommandLine.ParsingError.ParsingError()", span="1265-1265", cluster="CommandLine.ParsingError.ParsingError()"];
n465 [label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1274-1274", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n466 [label="this.ViolatesFormat = format", span="1276-1276", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n467 [label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1270-1270", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n468 [label="Entry CommandLine.PostParsingState.PostParsingState()", span="1318-1318", cluster="CommandLine.PostParsingState.PostParsingState()"];
n469 [label="Errors = new List<ParsingError>()", span="1320-1320", cluster="CommandLine.PostParsingState.PostParsingState()"];
n470 [label="Exit CommandLine.PostParsingState.PostParsingState()", span="1318-1318", cluster="CommandLine.PostParsingState.PostParsingState()"];
n471 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1338-1338", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n472 [label="Assumes.NotNull(value, ''value'')", span="1340-1340", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n473 [label="_data = value", span="1342-1342", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n475 [label="_endIndex = value.Length", span="1344-1344", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n477 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1806-1806", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n474 [label="_index = -1", span="1343-1343", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n476 [label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1338-1338", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n478 [label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1388-1388", cluster="CommandLine.StringArrayEnumerator.Reset()"];
n479 [label="_index = -1", span="1390-1390", cluster="CommandLine.StringArrayEnumerator.Reset()"];
n480 [label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1388-1388", cluster="CommandLine.StringArrayEnumerator.Reset()"];
n481 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1393-1393", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n482 [label="_index < _endIndex", span="1395-1395", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n483 [label="_index++", span="1397-1397", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n485 [label="return false;", span="1400-1400", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n484 [label="return _index < _endIndex;", span="1398-1398", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n486 [label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1393-1393", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n487 [label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1403-1403", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()"];
n488 [label="throw new NotSupportedException();", span="1405-1405", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()"];
n489 [label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1403-1403", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()"];
n490 [label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1408-1408", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n491 [label="_index <= 0", span="1410-1410", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n492 [label="throw new InvalidOperationException();", span="1412-1412", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n493 [label="_index <= _endIndex", span="1414-1414", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n494 [label="_index--", span="1416-1416", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n496 [label="return false;", span="1419-1419", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n495 [label="return _index <= _endIndex;", span="1417-1417", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n497 [label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1408-1408", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n498 [label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1422-1422", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()"];
n499 [label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1422-1422", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()"];
n500 [label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1433-1433", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n501 [label="_target = target", span="1435-1435", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n502 [label="_vla = ValueListAttribute.GetAttribute(_target)", span="1436-1436", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n503 [label=IsValueListDefined, span="1437-1437", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n504 [label="_valueList = ValueListAttribute.GetReference(_target)", span="1438-1438", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n505 [label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1433-1433", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n506 [label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1443-1443", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n507 [label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1445-1445", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n510 [label="_valueList.Add(item)", span="1450-1450", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n508 [label="return false;", span="1446-1446", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n509 [label=this, span="1448-1448", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n511 [label="return true;", span="1453-1453", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n512 [label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1443-1443", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n513 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)"];
n514 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)"];
n515 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1489-1489", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n516 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1489-1489", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n517 [label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1497-1497", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()"];
n518 [label="LastPostParsingState = new PostParsingState()", span="1499-1499", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()"];
n519 [label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1497-1497", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()"];
n520 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1516-1516", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
n521 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1521-1521", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)"];
n522 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1526-1526", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)"];
n523 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1526-1526", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)"];
n524 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1531-1531", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"];
n525 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1531-1531", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"];
n526 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1547-1547", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()"];
n527 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1547-1547", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()"];
n528 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1557-1557", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)"];
n529 [label="CaseSensitive = caseSensitive", span="1559-1559", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)"];
n530 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1557-1557", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)"];
n531 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1568-1568", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)"];
n532 [label="HelpWriter = helpWriter", span="1571-1571", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)"];
n533 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1568-1568", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)"];
n534 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1581-1581", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n535 [label="CaseSensitive = caseSensitive", span="1583-1583", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n536 [label="HelpWriter = helpWriter", span="1584-1584", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n537 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1581-1581", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n538 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1593-1593", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n539 [label="CaseSensitive = caseSensitive", span="1595-1595", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n540 [label="MutuallyExclusive = mutuallyExclusive", span="1596-1596", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n541 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1593-1593", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n542 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1607-1607", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n543 [label="CaseSensitive = caseSensitive", span="1609-1609", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n544 [label="MutuallyExclusive = mutuallyExclusive", span="1610-1610", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n545 [label="HelpWriter = helpWriter", span="1611-1611", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n546 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1607-1607", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n547 [label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1643-1643", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n548 [label="_settings = new CommandLineParserSettings(\r\n                false, false, Console.Error)", span="1645-1646", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n549 [label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1643-1643", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n550 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n551 [label="_settings = new CommandLineParserSettings()", span="1654-1654", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n552 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n553 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n554 [label="Assumes.NotNull(settings, ''settings'')", span="1665-1665", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n555 [label="_settings = settings", span="1667-1667", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n556 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n557 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1688-1688", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n558 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="1690-1690", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n559 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1688-1688", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n560 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1706-1706", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n561 [label="Assumes.NotNull(args, ''args'')", span="1708-1708", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n562 [label="Assumes.NotNull(options, ''options'')", span="1709-1709", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n563 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1711-1711", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n564 [label="pair != null && helpWriter != null", span="1713-1713", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n565 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1715-1715", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n567 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1718-1718", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n568 [label="helpWriter.Write(helpText)", span="1719-1719", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n571 [label="return DoParseArguments(args, options);", span="1725-1725", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n573 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1854-1854", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n566 [label="string helpText", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n570 [label="return true;", span="1722-1722", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n574 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1772-1772", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n575 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1728-1728", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n569 [label="return false;", span="1720-1720", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n576 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)"];
n572 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1706-1706", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n577 [label="bool hadError = false", span="1730-1730", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n578 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1731-1731", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n580 [label="var target = new TargetWrapper(options)", span="1733-1733", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n581 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1735-1735", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n587 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1744-1744", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n589 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1747-1747", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n596 [label="hadError |= !optionMap.EnforceRules()", span="1767-1767", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n579 [label="optionMap.SetDefaults()", span="1732-1732", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n593 [label="target.IsValueListDefined", span="1755-1755", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n594 [label="!target.AddValueItemIfAllowed(argument)", span="1757-1757", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n582 [label="arguments.MoveNext()", span="1736-1736", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n583 [label="string argument = arguments.Current", span="1738-1738", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n592 [label="arguments.MoveNext()", span="1753-1753", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n584 [label="argument != null && argument.Length > 0", span="1739-1739", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n585 [label="ArgumentParser parser = ArgumentParser.Create(argument)", span="1741-1741", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n586 [label="parser != null", span="1742-1742", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n588 [label="(result & ParserState.Failure) == ParserState.Failure", span="1745-1745", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n591 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1752-1752", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n590 [label="hadError = true", span="1748-1748", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n599 [label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1795-1795", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)"];
n595 [label="hadError = true", span="1759-1759", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n597 [label="return !hadError;", span="1769-1769", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n598 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1728-1728", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n600 [label="bool caseSensitive = _settings.CaseSensitive", span="1774-1774", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n602 [label="i < args.Length", span="1776-1776", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n603 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1778-1778", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n604 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1780-1780", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n606 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="1784-1784", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n607 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1786-1786", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n601 [label="int i = 0", span="1776-1776", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n609 [label="i++", span="1776-1776", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n610 [label="return false;", span="1791-1791", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n605 [label="return true;", span="1781-1781", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n608 [label="return true;", span="1787-1787", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n611 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1772-1772", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n612 [label="options is CommandLineOptionsBase", span="1797-1797", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)"];
n613 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1798-1798", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)"];
n614 [label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1795-1795", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)"];
n615 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
n616 [label="value == null", span="1809-1809", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n617 [label="throw new ArgumentNullException(paramName);", span="1810-1810", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n618 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1806-1806", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n619 [label="string.IsNullOrEmpty(value)", span="1815-1815", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n620 [label="throw new ArgumentException(paramName);", span="1816-1816", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n621 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1813-1813", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n622 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n623 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1819-1819", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n624 [label="array.Length == 0", span="1821-1821", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n625 [label="throw new ArgumentOutOfRangeException(paramName);", span="1822-1822", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n626 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1819-1819", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n627 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n628 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1831-1831", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n629 [label="target != null", span="1832-1832", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n630 [label="var propertiesInfo = target.GetType().GetProperties()", span="1834-1834", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n637 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1845-1845", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n638 [label="return list;", span="1851-1851", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n631 [label=propertiesInfo, span="1836-1836", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n640 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n641 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()"];
n632 [label="property != null && (property.CanRead && property.CanWrite)", span="1838-1838", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n633 [label="var setMethod = property.GetSetMethod()", span="1840-1840", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n635 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1843-1843", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n634 [label="setMethod != null && !setMethod.IsStatic", span="1841-1841", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n642 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()"];
n636 [label="attribute != null", span="1844-1844", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n643 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)"];
n639 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1828-1828", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n644 [label="var info = target.GetType().GetMethods()", span="1857-1857", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n645 [label=info, span="1859-1859", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n652 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()"];
n646 [label="!method.IsStatic", span="1861-1861", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n650 [label="return null;", span="1870-1870", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n647 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1863-1864", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n649 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1866-1866", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n648 [label="attribute != null", span="1865-1865", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n651 [label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1854-1854", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n653 [label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1873-1873", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n654 [label="var info = target.GetType().GetMethods()", span="1876-1876", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n655 [label=info, span="1878-1878", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n656 [label="!method.IsStatic", span="1880-1880", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n660 [label="return null;", span="1889-1889", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n657 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1882-1883", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n658 [label="attribute != null", span="1884-1884", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n659 [label="return (TAttribute)attribute;", span="1885-1885", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n661 [label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1873-1873", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n662 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1892-1892", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n663 [label="IList<TAttribute> list = new List<TAttribute>()", span="1895-1895", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n664 [label="var info = target.GetType().GetProperties()", span="1896-1896", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n671 [label="list.Add((TAttribute)attribute)", span="1907-1907", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n672 [label="return list;", span="1912-1912", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n665 [label=info, span="1898-1898", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n666 [label="property != null && (property.CanRead && property.CanWrite)", span="1900-1900", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n667 [label="var setMethod = property.GetSetMethod()", span="1902-1902", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n669 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1905-1905", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n668 [label="setMethod != null && !setMethod.IsStatic", span="1903-1903", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n670 [label="attribute != null", span="1906-1906", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n673 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1892-1892", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n674 [label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1917-1917", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)"];
n675 [label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1915-1915", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)"];
n676 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n677 [label="Entry System.Type.Equals(System.Type)", span="0-0", cluster="System.Type.Equals(System.Type)"];
n678 [label="Entry CommandLine.StringUtil.Spaces(int)", span="1923-1923", cluster="CommandLine.StringUtil.Spaces(int)"];
n679 [label="return new String(' ', count);", span="1925-1925", cluster="CommandLine.StringUtil.Spaces(int)"];
n680 [label="Exit CommandLine.StringUtil.Spaces(int)", span="1923-1923", cluster="CommandLine.StringUtil.Spaces(int)"];
n681 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
m0_10 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_11 [label="var options = new SimpleOptions()", span="65-65", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_12 [label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_14 [label="Assert.AreEqual(''something'', options.StringValue)", span="69-69", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_15 [label="Console.WriteLine(options)", span="70-70", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_13 [label="base.AssertParserSuccess(result)", span="68-68", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_16 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_162 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="282-282", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_163 [label="var options = new NumberSetOptions()", span="284-284", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_164 [label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="285-285", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_165 [label="base.AssertParserFailure(result)", span="287-287", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_166 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="282-282", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_0 [label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m0_1 [label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m0_123 [label="var options = new MixedCaseOptions()", span="222-222", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_80 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs"];
m0_118 [label="bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_90 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs"];
m0_91 [label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs"];
m0_7 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_8 [label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_9 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_72 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_73 [label="var options = new SimpleOptionsWithEnum()", span="147-147", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_74 [label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_76 [label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_77 [label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_78 [label="Console.WriteLine(options)", span="154-154", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_75 [label="base.AssertParserSuccess(result)", span="151-151", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_79 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_147 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="255-255", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_148 [label="var options = new SimpleOptions()", span="257-257", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_149 [label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="258-258", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_150 [label="base.AssertParserFailure(result)", span="260-260", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_151 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="255-255", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_29 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_30 [label="var options = new BooleanSetOptions()", span="90-90", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_31 [label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_33 [label="Assert.IsTrue(options.BooleanThree)", span="94-94", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_34 [label="Assert.IsTrue(options.BooleanOne)", span="95-95", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_35 [label="Assert.IsFalse(options.BooleanTwo)", span="96-96", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_36 [label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_37 [label="Console.WriteLine(options)", span="98-98", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_32 [label="base.AssertParserSuccess(result)", span="93-93", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_38 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_67 [label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_68 [label="var options = new SimpleOptions()", span="137-137", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_69 [label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_70 [label="Console.WriteLine(options)", span="140-140", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_71 [label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_52 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_53 [label="var options = new SimpleOptionsWithOptionList()", span="118-118", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_54 [label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_56 [label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_57 [label="Console.WriteLine(options.SearchKeywords[0])", span="124-124", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_58 [label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_59 [label="Console.WriteLine(options.SearchKeywords[1])", span="126-126", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_60 [label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_61 [label="Console.WriteLine(options.SearchKeywords[2])", span="128-128", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_62 [label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_63 [label="Console.WriteLine(options.StringValue)", span="130-130", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_55 [label="base.AssertParserSuccess(result)", span="122-122", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_64 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_17 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs"];
m0_177 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="309-309", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_178 [label="var options = new NumberSetOptions()", span="311-311", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_179 [label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="312-312", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_180 [label="base.AssertParserFailure(result)", span="314-314", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_181 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="309-309", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_6 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1474-1474", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs"];
m0_137 [label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="241-241", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_138 [label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="243-243", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_139 [label="var options = new MixedCaseOptions()", span="244-244", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_140 [label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="245-245", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_142 [label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="248-248", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_143 [label="Assert.AreEqual(''beta'', options.BetaValue)", span="249-249", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_141 [label="base.AssertParserSuccess(result)", span="247-247", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_144 [label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="241-241", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_19 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs"];
m0_39 [label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs"];
m0_65 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs"];
m0_121 [label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", color=green, community=0];
m0_122 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_124 [label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="223-223", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_126 [label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="226-226", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_127 [label="Assert.AreEqual(''beta'', options.BetaValue)", span="227-227", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_125 [label="base.AssertParserSuccess(result)", span="225-225", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_128 [label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="219-219", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_81 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_82 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_83 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_88 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_84 [label="var options = new NumberSetOptions()", span="162-162", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_85 [label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_87 [label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_86 [label="base.AssertParserSuccess(result)", span="165-165", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_89 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_116 [label="Assert.AreEqual(new double[] { 1.1, 2.2, 3.3 }, options.DoubleArrayValue)", span="206-206", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", color=green, community=0];
m0_117 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_119 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_120 [label="var options = new SimpleOptionsWithBadDefaults()", span="213-213", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", color=green, community=0];
m0_20 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_21 [label="var options = new SimpleOptions()", span="76-76", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_22 [label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_24 [label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_25 [label="Assert.AreEqual(100, options.IntegerValue)", span="82-82", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_26 [label="Assert.AreEqual(true, options.BooleanValue)", span="83-83", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_27 [label="Console.WriteLine(options)", span="84-84", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_23 [label="base.AssertParserSuccess(result)", span="80-80", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_28 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_188 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="330-330", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_189 [label="var options = new SimpleOptionsWithValueList()", span="332-332", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_190 [label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="333-333", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_192 [label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="336-336", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_193 [label="Assert.AreEqual(true, options.BooleanValue)", span="337-337", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_194 [label="Assert.AreEqual(1, options.Items.Count)", span="338-338", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_195 [label="Assert.AreEqual(''-'', options.Items[0])", span="339-339", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_191 [label="base.AssertParserSuccess(result)", span="335-335", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_196 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="330-330", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_129 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1652-1652", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs"];
m0_18 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CommandLineParserFixture.cs"];
m0_41 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CommandLineParserFixture.cs"];
m0_115 [label="Assert.AreEqual(new int[] { 4, 5, 6 }, options.IntegerArrayValue)", span="205-205", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", color=green, community=0];
m0_131 [label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="231-231", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_132 [label="ICommandLineParser local = new CommandLineParser()", span="233-233", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_133 [label="var options = new MixedCaseOptions()", span="234-234", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_134 [label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="235-235", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_135 [label="base.AssertParserFailure(result)", span="237-237", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_136 [label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="231-231", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_145 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1663-1663", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs"];
m0_2 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_3 [label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_4 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_197 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs"];
m0_109 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_182 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_183 [label="var options = new SimpleOptions()", span="322-322", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_184 [label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="323-323", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_186 [label="Assert.AreEqual(''-'', options.StringValue)", span="326-326", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_185 [label="base.AssertParserSuccess(result)", span="325-325", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_187 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_5 [label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs"];
m0_66 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs"];
m0_42 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_43 [label="var options = new BooleanSetOptions()", span="104-104", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_44 [label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_46 [label="Assert.IsTrue(options.BooleanTwo)", span="108-108", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_47 [label="Assert.IsFalse(options.BooleanOne)", span="109-109", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_48 [label="Assert.IsFalse(options.BooleanThree)", span="110-110", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_49 [label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_50 [label="Console.WriteLine(options)", span="112-112", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_45 [label="base.AssertParserSuccess(result)", span="107-107", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_51 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_152 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="264-264", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_153 [label="var options = new NumberSetOptions()", span="266-266", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_154 [label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="267-267", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_155 [label="base.AssertParserFailure(result)", span="269-269", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_156 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="264-264", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_167 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="291-291", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_168 [label="var options = new NumberSetOptions()", span="293-293", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_169 [label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="294-294", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_170 [label="base.AssertParserFailure(result)", span="296-296", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_171 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="291-291", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_130 [label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs"];
m0_110 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="199-199", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_111 [label="var options = new SimpleOptions()", span="201-201", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_112 [label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="202-202", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_114 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="199-199", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_113 [label="base.AssertParserFailure(result)", span="204-204", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_92 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_93 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_94 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_99 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_95 [label="var options = new NumberSetOptions()", span="176-176", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_96 [label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_98 [label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_97 [label="base.AssertParserSuccess(result)", span="179-179", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_100 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_172 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="300-300", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_173 [label="var options = new NumberSetOptions()", span="302-302", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_174 [label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="303-303", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_175 [label="base.AssertParserFailure(result)", span="305-305", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_176 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="300-300", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_101 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_102 [label="var options = new SimpleOptionsWithDefaults()", span="188-188", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_103 [label="bool result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_105 [label="Assert.AreEqual(''str'', options.StringValue)", span="192-192", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_106 [label="Assert.AreEqual(9, options.IntegerValue)", span="193-193", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_107 [label="Assert.AreEqual(true, options.BooleanValue)", span="194-194", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_104 [label="base.AssertParserSuccess(result)", span="191-191", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_108 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_157 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="273-273", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_158 [label="var options = new NumberSetOptions()", span="275-275", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_159 [label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="276-276", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_160 [label="base.AssertParserFailure(result)", span="278-278", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_161 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="273-273", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_40 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CommandLineParserFixture.cs"];
m0_198 [label="CommandLine.Tests.CommandLineParserFixture", span="", file="CommandLineParserFixture.cs"];
n682 -> n1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n682 -> n4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n682 -> n5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n682 -> n6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n683 -> n25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n683 -> n27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n683 -> n28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n683 -> n30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n683 -> n31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n684 -> n36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
n684 -> n39  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
n685 -> n42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueListAttribute"];
n685 -> n49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueListAttribute"];
n686 -> n87  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ArgumentParser"];
n686 -> n93  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ArgumentParser"];
n687 -> n155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BadOptionInfo"];
n687 -> n156  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.BadOptionInfo"];
n688 -> n178  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.LongOptionParser"];
n688 -> n185  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.LongOptionParser"];
n688 -> n190  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.LongOptionParser"];
n688 -> n196  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.LongOptionParser"];
n688 -> n202  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.LongOptionParser"];
n689 -> n213  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n214  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n218  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n221  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n222  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n223  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n225  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n230  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n232  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n689 -> n234  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OneCharStringEnumerator"];
n690 -> n258  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionGroupParser"];
n690 -> n265  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionGroupParser"];
n690 -> n272  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionGroupParser"];
n690 -> n278  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionGroupParser"];
n691 -> n288  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n289  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n290  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n291  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n292  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n293  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n294  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n295  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n298  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n314  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n315  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n316  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n317  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n318  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n324  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n328  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n342  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n343  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n344  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n356  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n363  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n364  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n367  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n368  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n370  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n379  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n380  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n691 -> n381  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n692 -> n384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n692 -> n387  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n693 -> n389  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n391  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n394  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n395  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n396  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n406  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n407  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n409  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n411  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n416  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n418  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n420  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n421  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n423  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n429  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n430  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n693 -> n431  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n694 -> n447  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<TLeft, TRight>"];
n694 -> n448  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<TLeft, TRight>"];
n694 -> n451  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<TLeft, TRight>"];
n694 -> n452  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<TLeft, TRight>"];
n694 -> n460  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<TLeft, TRight>"];
n695 -> n463  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParsingError"];
n695 -> n465  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParsingError"];
n695 -> n466  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParsingError"];
n696 -> n469  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.PostParsingState"];
n697 -> n473  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n474  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n475  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n479  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n482  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n483  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n484  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n491  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n493  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n494  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n697 -> n495  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.StringArrayEnumerator"];
n698 -> n501  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n502  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n503  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n504  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n507  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n509  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n698 -> n510  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TargetWrapper"];
n699 -> n518  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineOptionsBase"];
n700 -> n529  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n532  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n535  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n536  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n539  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n540  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n543  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n544  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n700 -> n545  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n701 -> n548  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n551  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n555  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n558  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n565  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n571  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n578  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n701 -> n600  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParser"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n3  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>"];
n8 -> n13  [key=1, style=dashed, color=darkseagreen4, label=object];
n8 -> n560  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label=method];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n11 -> n15  [key=2, style=dotted];
n12 -> n14  [key=0, style=solid];
n12 -> n16  [key=2, style=dotted];
n15 -> n18  [key=0, style=solid];
n15 -> n10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
n14 -> n8  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n19 -> n15  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n22 -> n21  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n27  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n30  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n31  [key=1, style=dashed, color=darkseagreen4, label=string];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n33  [key=2, style=dotted];
n25 -> n28  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=0, style=solid];
n26 -> n33  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n29 -> n32  [key=0, style=solid];
n29 -> n34  [key=2, style=dotted];
n32 -> n23  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n40 -> n38  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n43 -> n41  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n44 -> n49  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n47 -> n52  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n46 -> n50  [key=0, style=solid];
n46 -> n51  [key=2, style=dotted];
n48 -> n50  [key=0, style=solid];
n48 -> n53  [key=2, style=dotted];
n50 -> n44  [key=0, style=bold, color=blue];
n53 -> n521  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label=object];
n54 -> n59  [key=1, style=dashed, color=darkseagreen4, label=object];
n54 -> n60  [key=1, style=dashed, color=darkseagreen4, label=object];
n54 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n62  [key=2, style=dotted];
n56 -> n59  [key=1, style=dashed, color=darkseagreen4, label=concreteType];
n56 -> n60  [key=1, style=dashed, color=darkseagreen4, label=property];
n59 -> n60  [key=0, style=solid];
n59 -> n63  [key=2, style=dotted];
n59 -> n64  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n65  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=0, style=solid];
n62 -> n76  [key=0, style=solid];
n62 -> n77  [key=1, style=dashed, color=darkseagreen4, label=object];
n62 -> n54  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n62 -> n55  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type concreteType"];
n62 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
n58 -> n61  [key=0, style=solid];
n61 -> n54  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n66 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
n67 -> n68  [key=0, style=solid];
n67 -> n75  [key=2, style=dotted];
n67 -> n70  [key=1, style=dashed, color=darkseagreen4, label=list];
n67 -> n72  [key=1, style=dashed, color=darkseagreen4, label=list];
n68 -> n69  [key=0, style=solid];
n68 -> n70  [key=0, style=solid];
n75 -> n628  [key=0, style=solid];
n75 -> n629  [key=1, style=dashed, color=darkseagreen4, label=object];
n75 -> n630  [key=1, style=dashed, color=darkseagreen4, label=object];
n75 -> n66  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n75 -> n62  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n75 -> n302  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n69 -> n74  [key=0, style=solid];
n71 -> n74  [key=0, style=solid];
n71 -> n34  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n74 -> n66  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n75  [key=2, style=dotted];
n77 -> n80  [key=1, style=dashed, color=darkseagreen4, label=list];
n77 -> n82  [key=1, style=dashed, color=darkseagreen4, label=list];
n78 -> n79  [key=0, style=solid];
n78 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [key=1, style=dashed, color=darkseagreen4, label=pairZero];
n79 -> n85  [key=0, style=solid];
n81 -> n85  [key=0, style=solid];
n81 -> n34  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
n84 -> n85  [key=0, style=solid];
n85 -> n62  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n89  [key=2, style=dotted];
n88 -> n86  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n90 -> n163  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n90 -> n242  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n90 -> n581  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator"];
n90 -> n578  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionMap map"];
n90 -> n575  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n91 -> n90  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid];
n92 -> n165  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n92 -> n246  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=2, style=dotted];
n93 -> n96  [key=2, style=dotted];
n94 -> n92  [key=0, style=bold, color=blue];
n95 -> n465  [key=0, style=solid];
n95 -> n466  [key=1, style=dashed, color=darkseagreen4, label=bool];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=1, style=dashed, color=darkseagreen4, label=string];
n97 -> n102  [key=1, style=dashed, color=darkseagreen4, label=string];
n97 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ArgumentParser Create"];
n97 -> n583  [key=3, color=darkorchid, style=bold, label="Parameter variable string argument"];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n98 -> n106  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [key=0, style=solid];
n99 -> n105  [key=0, style=solid];
n101 -> n105  [key=0, style=solid];
n101 -> n107  [key=2, style=dotted];
n103 -> n105  [key=0, style=solid];
n103 -> n108  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n105 -> n97  [key=0, style=bold, color=blue];
n107 -> n162  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n111  [key=1, style=dashed, color=darkseagreen4, label=string];
n109 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInputValue"];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n111 -> n113  [key=0, style=solid];
n111 -> n106  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n113 -> n109  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n114 -> n117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n114 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n114 -> n119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n114 -> n163  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
n114 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
n115 -> n116  [key=0, style=solid];
n115 -> n89  [key=2, style=dotted];
n115 -> n118  [key=1, style=dashed, color=darkseagreen4, label=list];
n115 -> n121  [key=1, style=dashed, color=darkseagreen4, label=list];
n116 -> n117  [key=0, style=solid];
n116 -> n119  [key=0, style=solid];
n116 -> n123  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n117 -> n109  [key=2, style=dotted];
n118 -> n116  [key=0, style=solid];
n118 -> n124  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=0, style=solid];
n119 -> n125  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n123 -> n160  [key=0, style=solid];
n123 -> n220  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
n123 -> n481  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
n120 -> n122  [key=0, style=solid];
n120 -> n126  [key=2, style=dotted];
n125 -> n161  [key=0, style=solid];
n125 -> n236  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
n125 -> n490  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
n122 -> n114  [key=0, style=bold, color=blue];
n126 -> n520  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n600  [key=3, color=darkorchid, style=bold, label="Parameter variable bool caseSensitive"];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=2, style=dotted];
n129 -> n127  [key=0, style=bold, color=blue];
n131 -> n132  [key=0, style=solid];
n131 -> n600  [key=3, color=darkorchid, style=bold, label="Parameter variable bool caseSensitive"];
n132 -> n133  [key=0, style=solid];
n132 -> n130  [key=2, style=dotted];
n133 -> n131  [key=0, style=bold, color=blue];
n134 -> n135  [key=0, style=solid];
n134 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n134 -> n166  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n134 -> n243  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=2, style=dotted];
n136 -> n134  [key=0, style=bold, color=blue];
n137 -> n138  [key=0, style=solid];
n137 -> n140  [key=1, style=dashed, color=darkseagreen4, label=bool];
n137 -> n134  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n137 -> n166  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n137 -> n243  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n137 -> n112  [key=3, color=darkorchid, style=bold, label="Parameter variable bool addMoveNextIfTrue"];
n137 -> n139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> n141  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> n142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=0, style=solid];
n139 -> n143  [key=0, style=solid];
n141 -> n143  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n143 -> n137  [key=0, style=bold, color=blue];
n144 -> n145  [key=0, style=solid];
n144 -> n165  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n144 -> n246  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n126  [key=2, style=dotted];
n147 -> n144  [key=0, style=bold, color=blue];
n148 -> n149  [key=0, style=solid];
n148 -> n165  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n148 -> n246  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n149 -> n150  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n150 -> n126  [key=2, style=dotted];
n151 -> n148  [key=0, style=bold, color=blue];
n152 -> n153  [key=0, style=solid];
n153 -> n152  [key=0, style=bold, color=blue];
n154 -> n155  [key=0, style=solid];
n154 -> n156  [key=1, style=dashed, color=darkseagreen4, label=string];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n157 -> n154  [key=0, style=bold, color=blue];
n158 -> n159  [key=0, style=solid];
n158 -> n229  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
n158 -> n487  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
n159 -> n158  [key=0, style=bold, color=blue];
n160 -> n123  [key=0, style=bold, color=blue];
n161 -> n125  [key=0, style=bold, color=blue];
n162 -> n107  [key=0, style=bold, color=blue];
n163 -> n164  [key=0, style=solid];
n163 -> n165  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n163 -> n172  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n163 -> n176  [key=1, style=dashed, color=darkseagreen4, label=object];
n163 -> n181  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n163 -> n183  [key=1, style=dashed, color=darkseagreen4, label=object];
n163 -> n188  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n163 -> n193  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n163 -> n194  [key=1, style=dashed, color=darkseagreen4, label=object];
n163 -> n200  [key=1, style=dashed, color=darkseagreen4, label=object];
n163 -> n90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n163 -> n142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n163 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n163 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n164 -> n165  [key=0, style=solid];
n164 -> n205  [key=2, style=dotted];
n164 -> n206  [key=2, style=dotted];
n164 -> n172  [key=1, style=dashed, color=darkseagreen4, label=parts];
n164 -> n174  [key=1, style=dashed, color=darkseagreen4, label=parts];
n164 -> n176  [key=1, style=dashed, color=darkseagreen4, label=parts];
n164 -> n182  [key=1, style=dashed, color=darkseagreen4, label=parts];
n164 -> n198  [key=1, style=dashed, color=darkseagreen4, label=parts];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n169  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n170  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n171  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n175  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n176  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n178  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n180  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n183  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n185  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n187  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n188  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n190  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n192  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n194  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n196  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n200  [key=1, style=dashed, color=darkseagreen4, label=option];
n165 -> n202  [key=1, style=dashed, color=darkseagreen4, label=option];
n172 -> n173  [key=0, style=solid];
n172 -> n174  [key=0, style=solid];
n172 -> n109  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n207  [key=2, style=dotted];
n176 -> n179  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n181 -> n182  [key=0, style=solid];
n181 -> n114  [key=2, style=dotted];
n181 -> n183  [key=1, style=dashed, color=darkseagreen4, label=items];
n183 -> n184  [key=0, style=solid];
n183 -> n209  [key=2, style=dotted];
n183 -> n186  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n188 -> n189  [key=0, style=solid];
n188 -> n207  [key=2, style=dotted];
n188 -> n191  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n193 -> n194  [key=0, style=solid];
n193 -> n114  [key=2, style=dotted];
n194 -> n195  [key=0, style=solid];
n194 -> n209  [key=2, style=dotted];
n194 -> n197  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n200 -> n201  [key=0, style=solid];
n200 -> n210  [key=2, style=dotted];
n200 -> n203  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n174 -> n175  [key=0, style=solid];
n174 -> n187  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n208  [key=2, style=dotted];
n198 -> n199  [key=0, style=solid];
n198 -> n200  [key=0, style=solid];
n166 -> n167  [key=0, style=solid];
n166 -> n207  [key=3, color=darkorchid, style=bold, label="Local variable bool valueSetting"];
n166 -> n209  [key=3, color=darkorchid, style=bold, label="Local variable bool valueSetting"];
n166 -> n210  [key=3, color=darkorchid, style=bold, label="Local variable bool valueSetting"];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n148  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n171 -> n198  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n175 -> n180  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n178 -> n92  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n144  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n92  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n192  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n190 -> n92  [key=2, style=dotted];
n192 -> n193  [key=0, style=solid];
n192 -> n144  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n92  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n92  [key=2, style=dotted];
n168 -> n204  [key=0, style=solid];
n173 -> n204  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=0, style=solid];
n207 -> n314  [key=0, style=solid];
n207 -> n315  [key=1, style=dashed, color=darkseagreen4, label=string];
n207 -> n317  [key=1, style=dashed, color=darkseagreen4, label=string];
n207 -> n318  [key=1, style=dashed, color=darkseagreen4, label=string];
n207 -> n163  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n207 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n207 -> n158  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n207 -> n320  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n207 -> n322  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n207 -> n323  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n179 -> n204  [key=0, style=solid];
n179 -> n134  [key=2, style=dotted];
n184 -> n185  [key=0, style=solid];
n184 -> n186  [key=0, style=solid];
n209 -> n324  [key=0, style=solid];
n209 -> n325  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
n209 -> n329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
n209 -> n330  [key=1, style=dashed, color=darkseagreen4, label=object];
n209 -> n181  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n209 -> n193  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n209 -> n261  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n209 -> n275  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n209 -> n163  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n209 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n209 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n186 -> n204  [key=0, style=solid];
n186 -> n134  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=0, style=solid];
n191 -> n204  [key=0, style=solid];
n191 -> n137  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n197  [key=0, style=solid];
n197 -> n204  [key=0, style=solid];
n197 -> n137  [key=2, style=dotted];
n199 -> n204  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [key=0, style=solid];
n210 -> n363  [key=0, style=solid];
n210 -> n364  [key=1, style=dashed, color=darkseagreen4, label=bool];
n210 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n210 -> n163  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n210 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n203 -> n204  [key=0, style=solid];
n203 -> n134  [key=2, style=dotted];
n204 -> n163  [key=0, style=bold, color=blue];
n211 -> n212  [key=0, style=solid];
n211 -> n213  [key=1, style=dashed, color=darkseagreen4, label=string];
n212 -> n213  [key=0, style=solid];
n212 -> n216  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n216 -> n619  [key=0, style=solid];
n216 -> n620  [key=1, style=dashed, color=darkseagreen4, label=string];
n216 -> n211  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n216 -> n212  [key=3, color=darkorchid, style=bold, label="Parameter variable string paramName"];
n214 -> n215  [key=0, style=solid];
n215 -> n211  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n219 -> n217  [key=0, style=bold, color=blue];
n220 -> n221  [key=0, style=solid];
n220 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
n221 -> n222  [key=0, style=solid];
n221 -> n225  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n228  [key=2, style=dotted];
n224 -> n227  [key=0, style=solid];
n226 -> n227  [key=0, style=solid];
n227 -> n220  [key=0, style=bold, color=blue];
n229 -> n230  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n232  [key=0, style=solid];
n231 -> n235  [key=0, style=solid];
n231 -> n34  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n234  [key=0, style=solid];
n233 -> n235  [key=0, style=solid];
n233 -> n34  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n205  [key=2, style=dotted];
n235 -> n229  [key=0, style=bold, color=blue];
n236 -> n237  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=2, style=dotted];
n238 -> n236  [key=0, style=bold, color=blue];
n240 -> n241  [key=0, style=solid];
n241 -> n240  [key=0, style=bold, color=blue];
n242 -> n243  [key=0, style=solid];
n242 -> n244  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n246  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n242 -> n252  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n256  [key=1, style=dashed, color=darkseagreen4, label=object];
n242 -> n261  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n263  [key=1, style=dashed, color=darkseagreen4, label=object];
n242 -> n267  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n270  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n275  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.IArgumentEnumerator"];
n242 -> n276  [key=1, style=dashed, color=darkseagreen4, label=object];
n242 -> n280  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionMap"];
n242 -> n282  [key=1, style=dashed, color=darkseagreen4, label=object];
n242 -> n90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n242 -> n142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n242 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n242 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n242 -> n139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n243 -> n244  [key=0, style=solid];
n243 -> n207  [key=3, color=darkorchid, style=bold, label="Local variable bool valueSetting"];
n243 -> n209  [key=3, color=darkorchid, style=bold, label="Local variable bool valueSetting"];
n244 -> n245  [key=0, style=solid];
n244 -> n211  [key=2, style=dotted];
n244 -> n205  [key=2, style=dotted];
n244 -> n246  [key=1, style=dashed, color=darkseagreen4, label=group];
n244 -> n252  [key=1, style=dashed, color=darkseagreen4, label=group];
n244 -> n254  [key=1, style=dashed, color=darkseagreen4, label=group];
n244 -> n256  [key=1, style=dashed, color=darkseagreen4, label=group];
n244 -> n262  [key=1, style=dashed, color=darkseagreen4, label=group];
n244 -> n280  [key=1, style=dashed, color=darkseagreen4, label=group];
n246 -> n247  [key=0, style=solid];
n246 -> n249  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n250  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n251  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n255  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n256  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n258  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n260  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n263  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n265  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n269  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n270  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n272  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n274  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n276  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n278  [key=1, style=dashed, color=darkseagreen4, label=option];
n246 -> n282  [key=1, style=dashed, color=darkseagreen4, label=option];
n252 -> n253  [key=0, style=solid];
n252 -> n254  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n256 -> n158  [key=2, style=dotted];
n256 -> n207  [key=2, style=dotted];
n256 -> n259  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n261 -> n262  [key=0, style=solid];
n261 -> n114  [key=2, style=dotted];
n261 -> n263  [key=1, style=dashed, color=darkseagreen4, label=items];
n263 -> n264  [key=0, style=solid];
n263 -> n209  [key=2, style=dotted];
n263 -> n266  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n267 -> n268  [key=0, style=solid];
n267 -> n269  [key=0, style=solid];
n267 -> n109  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n207  [key=2, style=dotted];
n270 -> n273  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n275 -> n276  [key=0, style=solid];
n275 -> n114  [key=2, style=dotted];
n276 -> n277  [key=0, style=solid];
n276 -> n209  [key=2, style=dotted];
n276 -> n279  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
n280 -> n281  [key=0, style=solid];
n280 -> n282  [key=0, style=solid];
n282 -> n283  [key=0, style=solid];
n282 -> n245  [key=0, style=solid];
n282 -> n210  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n245 -> n284  [key=0, style=solid];
n245 -> n123  [key=2, style=dotted];
n254 -> n255  [key=0, style=solid];
n254 -> n267  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n262 -> n158  [key=2, style=dotted];
n262 -> n208  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n247 -> n248  [key=0, style=solid];
n247 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n250 -> n251  [key=0, style=solid];
n250 -> n148  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n280  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n260  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n92  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n144  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n92  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n274  [key=0, style=solid];
n272 -> n273  [key=0, style=solid];
n272 -> n92  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n144  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n92  [key=2, style=dotted];
n248 -> n285  [key=0, style=solid];
n253 -> n285  [key=0, style=solid];
n257 -> n258  [key=0, style=solid];
n257 -> n259  [key=0, style=solid];
n259 -> n285  [key=0, style=solid];
n259 -> n134  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [key=0, style=solid];
n266 -> n285  [key=0, style=solid];
n266 -> n137  [key=2, style=dotted];
n268 -> n285  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=0, style=solid];
n273 -> n285  [key=0, style=solid];
n273 -> n137  [key=2, style=dotted];
n277 -> n278  [key=0, style=solid];
n277 -> n279  [key=0, style=solid];
n279 -> n285  [key=0, style=solid];
n279 -> n134  [key=2, style=dotted];
n281 -> n285  [key=0, style=solid];
n283 -> n285  [key=0, style=solid];
n285 -> n242  [key=0, style=bold, color=blue];
n286 -> n287  [key=0, style=solid];
n286 -> n288  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n289  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n290  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n291  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n292  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n293  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n294  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n295  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
n286 -> n297  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
n286 -> n298  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
n287 -> n288  [key=0, style=solid];
n287 -> n296  [key=0, style=solid];
n288 -> n289  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n290 -> n291  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n292 -> n293  [key=0, style=solid];
n293 -> n294  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n295 -> n297  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n297 -> n299  [key=0, style=solid];
n298 -> n300  [key=0, style=solid];
n296 -> n300  [key=0, style=solid];
n296 -> n301  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=2, style=dotted];
n300 -> n286  [key=0, style=bold, color=blue];
n302 -> n303  [key=0, style=solid];
n302 -> n305  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n302 -> n309  [key=1, style=dashed, color=darkseagreen4, label=object];
n302 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.OptionMap CreateMap"];
n302 -> n575  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n303 -> n304  [key=0, style=solid];
n303 -> n75  [key=2, style=dotted];
n303 -> n305  [key=1, style=dashed, color=darkseagreen4, label=list];
n303 -> n306  [key=1, style=dashed, color=darkseagreen4, label=list];
n305 -> n306  [key=0, style=solid];
n305 -> n313  [key=2, style=dotted];
n305 -> n308  [key=1, style=dashed, color=darkseagreen4, label=map];
n305 -> n309  [key=1, style=dashed, color=darkseagreen4, label=map];
n305 -> n310  [key=1, style=dashed, color=darkseagreen4, label=map];
n309 -> n310  [key=0, style=solid];
n304 -> n305  [key=0, style=solid];
n304 -> n311  [key=0, style=solid];
n306 -> n307  [key=0, style=solid];
n306 -> n309  [key=0, style=solid];
n306 -> n308  [key=1, style=dashed, color=darkseagreen4, label=pair];
n311 -> n312  [key=0, style=solid];
n313 -> n389  [key=0, style=solid];
n313 -> n394  [key=1, style=dashed, color=darkseagreen4, label=int];
n313 -> n395  [key=1, style=dashed, color=darkseagreen4, label=int];
n313 -> n397  [key=1, style=dashed, color=darkseagreen4, label=int];
n308 -> n306  [key=0, style=solid];
n308 -> n286  [key=2, style=dotted];
n310 -> n312  [key=0, style=solid];
n307 -> n308  [key=0, style=solid];
n307 -> n306  [key=0, style=solid];
n312 -> n302  [key=0, style=bold, color=blue];
n314 -> n315  [key=0, style=solid];
n314 -> n316  [key=0, style=solid];
n315 -> n319  [key=0, style=solid];
n315 -> n320  [key=2, style=dotted];
n317 -> n319  [key=0, style=solid];
n317 -> n322  [key=2, style=dotted];
n318 -> n319  [key=0, style=solid];
n318 -> n323  [key=2, style=dotted];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [key=0, style=solid];
n316 -> n321  [key=2, style=dotted];
n321 -> n674  [key=0, style=solid];
n319 -> n207  [key=0, style=bold, color=blue];
n323 -> n340  [key=0, style=solid];
n323 -> n342  [key=1, style=dashed, color=darkseagreen4, label=string];
n323 -> n344  [key=1, style=dashed, color=darkseagreen4, label=string];
n323 -> n207  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n323 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValueScalar"];
n320 -> n367  [key=0, style=solid];
n320 -> n368  [key=1, style=dashed, color=darkseagreen4, label=object];
n320 -> n369  [key=1, style=dashed, color=darkseagreen4, label=object];
n320 -> n370  [key=1, style=dashed, color=darkseagreen4, label=string];
n320 -> n207  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n320 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValueList"];
n322 -> n354  [key=0, style=solid];
n322 -> n356  [key=1, style=dashed, color=darkseagreen4, label=string];
n322 -> n207  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n322 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetNullableValue"];
n324 -> n325  [key=0, style=solid];
n324 -> n336  [key=2, style=dotted];
n324 -> n329  [key=1, style=dashed, color=darkseagreen4, label=elementType];
n325 -> n326  [key=0, style=solid];
n325 -> n337  [key=2, style=dotted];
n325 -> n327  [key=1, style=dashed, color=darkseagreen4, label=array];
n325 -> n329  [key=1, style=dashed, color=darkseagreen4, label=array];
n325 -> n330  [key=1, style=dashed, color=darkseagreen4, label=array];
n329 -> n330  [key=0, style=solid];
n329 -> n338  [key=2, style=dotted];
n329 -> n339  [key=2, style=dotted];
n330 -> n331  [key=0, style=solid];
n330 -> n333  [key=0, style=solid];
n330 -> n64  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n329  [key=1, style=dashed, color=darkseagreen4, label=i];
n326 -> n333  [key=1, style=dashed, color=darkseagreen4, label=i];
n326 -> n326  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n327 -> n328  [key=0, style=solid];
n327 -> n334  [key=0, style=solid];
n333 -> n327  [key=0, style=solid];
n333 -> n333  [key=1, style=dashed, color=darkseagreen4, label=i];
n328 -> n329  [key=0, style=solid];
n334 -> n335  [key=0, style=solid];
n331 -> n332  [key=0, style=solid];
n332 -> n335  [key=0, style=solid];
n335 -> n209  [key=0, style=bold, color=blue];
n340 -> n341  [key=0, style=solid];
n340 -> n343  [key=0, style=solid];
n342 -> n345  [key=0, style=solid];
n342 -> n347  [key=0, style=solid];
n342 -> n349  [key=0, style=solid];
n342 -> n351  [key=0, style=solid];
n342 -> n353  [key=2, style=dotted];
n342 -> n64  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n347  [key=0, style=solid];
n344 -> n349  [key=0, style=solid];
n344 -> n351  [key=0, style=solid];
n344 -> n338  [key=2, style=dotted];
n344 -> n64  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n343 -> n344  [key=0, style=solid];
n345 -> n346  [key=0, style=solid];
n347 -> n348  [key=0, style=solid];
n349 -> n350  [key=0, style=solid];
n351 -> n352  [key=0, style=solid];
n346 -> n352  [key=0, style=solid];
n348 -> n352  [key=0, style=solid];
n350 -> n352  [key=0, style=solid];
n352 -> n323  [key=0, style=bold, color=blue];
n354 -> n355  [key=0, style=solid];
n354 -> n361  [key=2, style=dotted];
n354 -> n356  [key=1, style=dashed, color=darkseagreen4, label=nc];
n356 -> n357  [key=0, style=solid];
n356 -> n359  [key=0, style=solid];
n356 -> n362  [key=2, style=dotted];
n356 -> n64  [key=2, style=dotted];
n355 -> n356  [key=0, style=solid];
n357 -> n358  [key=0, style=solid];
n359 -> n360  [key=0, style=solid];
n358 -> n360  [key=0, style=solid];
n360 -> n322  [key=0, style=bold, color=blue];
n363 -> n364  [key=0, style=solid];
n364 -> n365  [key=0, style=solid];
n364 -> n64  [key=2, style=dotted];
n365 -> n366  [key=0, style=solid];
n366 -> n210  [key=0, style=bold, color=blue];
n367 -> n368  [key=0, style=solid];
n368 -> n369  [key=0, style=solid];
n368 -> n89  [key=2, style=dotted];
n368 -> n64  [key=2, style=dotted];
n369 -> n370  [key=0, style=solid];
n369 -> n65  [key=2, style=dotted];
n369 -> n373  [key=1, style=dashed, color=darkseagreen4, label=fieldRef];
n370 -> n371  [key=0, style=solid];
n370 -> n377  [key=2, style=dotted];
n370 -> n372  [key=1, style=dashed, color=darkseagreen4, label=values];
n370 -> n373  [key=1, style=dashed, color=darkseagreen4, label=values];
n373 -> n374  [key=0, style=solid];
n373 -> n124  [key=2, style=dotted];
n371 -> n372  [key=0, style=solid];
n371 -> n373  [key=1, style=dashed, color=darkseagreen4, label=i];
n371 -> n374  [key=1, style=dashed, color=darkseagreen4, label=i];
n371 -> n326  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n372 -> n373  [key=0, style=solid];
n372 -> n375  [key=0, style=solid];
n374 -> n372  [key=0, style=solid];
n374 -> n374  [key=1, style=dashed, color=darkseagreen4, label=i];
n375 -> n376  [key=0, style=solid];
n376 -> n320  [key=0, style=bold, color=blue];
n378 -> n379  [key=0, style=solid];
n378 -> n381  [key=1, style=dashed, color=red, label=object];
n379 -> n380  [key=0, style=solid];
n379 -> n382  [key=0, style=solid];
n381 -> n382  [key=0, style=solid, color=red];
n381 -> n64  [key=2, style=dotted, color=red];
n380 -> n381  [key=0, style=solid, color=red];
n382 -> n378  [key=0, style=bold, color=blue];
n383 -> n384  [key=0, style=solid];
n384 -> n385  [key=0, style=solid];
n385 -> n383  [key=0, style=bold, color=blue];
n386 -> n387  [key=0, style=solid];
n387 -> n388  [key=0, style=solid];
n388 -> n386  [key=0, style=bold, color=blue];
n389 -> n390  [key=0, style=solid];
n394 -> n395  [key=0, style=solid];
n394 -> n399  [key=2, style=dotted];
n395 -> n396  [key=0, style=solid];
n395 -> n399  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n399  [key=2, style=dotted];
n390 -> n391  [key=0, style=solid];
n391 -> n392  [key=0, style=solid];
n391 -> n393  [key=0, style=solid];
n392 -> n394  [key=0, style=solid];
n392 -> n395  [key=1, style=dashed, color=darkseagreen4, label=comparer];
n393 -> n394  [key=0, style=solid];
n393 -> n395  [key=1, style=dashed, color=darkseagreen4, label=comparer];
n396 -> n397  [key=0, style=solid];
n396 -> n398  [key=0, style=solid];
n398 -> n313  [key=0, style=bold, color=blue];
n400 -> n401  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n403  [key=2, style=dotted];
n401 -> n404  [key=2, style=dotted];
n402 -> n400  [key=0, style=bold, color=blue];
n403 -> n416  [key=0, style=solid];
n403 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
n404 -> n409  [key=0, style=solid];
n404 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnforceRequiredRule"];
n405 -> n406  [key=0, style=solid];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=0, style=solid];
n407 -> n406  [key=0, style=solid];
n407 -> n378  [key=2, style=dotted];
n408 -> n405  [key=0, style=bold, color=blue];
n409 -> n410  [key=0, style=solid];
n409 -> n413  [key=0, style=solid];
n409 -> n411  [key=1, style=dashed, color=darkseagreen4, label=option];
n410 -> n411  [key=0, style=solid];
n410 -> n409  [key=0, style=solid];
n413 -> n414  [key=0, style=solid];
n411 -> n412  [key=0, style=solid];
n411 -> n415  [key=2, style=dotted];
n412 -> n414  [key=0, style=solid];
n415 -> n435  [key=0, style=solid];
n415 -> n437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n415 -> n438  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n415 -> n439  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
n415 -> n440  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
n415 -> n441  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
n415 -> n442  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
n415 -> n443  [key=1, style=dashed, color=darkseagreen4, label=object];
n415 -> n409  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n415 -> n112  [key=3, color=darkorchid, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n415 -> n58  [key=3, color=darkorchid, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n414 -> n404  [key=0, style=bold, color=blue];
n416 -> n417  [key=0, style=solid];
n416 -> n418  [key=0, style=solid];
n417 -> n426  [key=0, style=solid];
n418 -> n419  [key=0, style=solid];
n418 -> n421  [key=0, style=solid];
n418 -> n420  [key=1, style=dashed, color=darkseagreen4, label=option];
n419 -> n420  [key=0, style=solid];
n419 -> n418  [key=0, style=solid];
n421 -> n422  [key=0, style=solid];
n421 -> n425  [key=0, style=solid];
n421 -> n423  [key=1, style=dashed, color=darkseagreen4, label=info];
n420 -> n418  [key=0, style=solid];
n420 -> n427  [key=2, style=dotted];
n427 -> n428  [key=0, style=solid];
n427 -> n430  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionInfo"];
n427 -> n418  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n422 -> n423  [key=0, style=solid];
n422 -> n421  [key=0, style=solid];
n425 -> n426  [key=0, style=solid];
n423 -> n424  [key=0, style=solid];
n423 -> n415  [key=2, style=dotted];
n424 -> n426  [key=0, style=solid];
n426 -> n403  [key=0, style=bold, color=blue];
n428 -> n429  [key=0, style=solid];
n428 -> n430  [key=1, style=dashed, color=darkseagreen4, label=setName];
n428 -> n431  [key=1, style=dashed, color=darkseagreen4, label=setName];
n430 -> n431  [key=0, style=solid];
n430 -> n383  [key=2, style=dotted];
n430 -> n434  [key=2, style=dotted];
n429 -> n430  [key=0, style=solid];
n429 -> n431  [key=0, style=solid];
n429 -> n433  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n386  [key=2, style=dotted];
n432 -> n427  [key=0, style=bold, color=blue];
n435 -> n436  [key=0, style=solid];
n435 -> n444  [key=0, style=solid];
n437 -> n438  [key=0, style=solid];
n438 -> n439  [key=0, style=solid];
n439 -> n440  [key=0, style=solid];
n439 -> n441  [key=0, style=solid];
n440 -> n441  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n441 -> n443  [key=0, style=solid];
n442 -> n443  [key=0, style=solid];
n443 -> n444  [key=0, style=solid];
n443 -> n96  [key=2, style=dotted];
n436 -> n437  [key=0, style=solid];
n436 -> n445  [key=2, style=dotted];
n436 -> n438  [key=1, style=dashed, color=darkseagreen4, label=error];
n436 -> n440  [key=1, style=dashed, color=darkseagreen4, label=error];
n436 -> n442  [key=1, style=dashed, color=darkseagreen4, label=error];
n436 -> n443  [key=1, style=dashed, color=darkseagreen4, label=error];
n444 -> n415  [key=0, style=bold, color=blue];
n445 -> n463  [key=0, style=solid];
n446 -> n447  [key=0, style=solid];
n446 -> n448  [key=1, style=dashed, color=darkseagreen4, label=TRight];
n447 -> n448  [key=0, style=solid];
n448 -> n449  [key=0, style=solid];
n449 -> n446  [key=0, style=bold, color=blue];
n450 -> n451  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n455  [key=2, style=dotted];
n451 -> n453  [key=1, style=dashed, color=darkseagreen4, label=leftHash];
n452 -> n453  [key=0, style=solid];
n452 -> n455  [key=2, style=dotted];
n453 -> n454  [key=0, style=solid];
n454 -> n450  [key=0, style=bold, color=blue];
n456 -> n457  [key=0, style=solid];
n457 -> n458  [key=0, style=solid];
n457 -> n460  [key=1, style=dashed, color=darkseagreen4, label=other];
n458 -> n459  [key=0, style=solid];
n458 -> n460  [key=0, style=solid];
n460 -> n461  [key=0, style=solid];
n460 -> n462  [key=2, style=dotted];
n459 -> n461  [key=0, style=solid];
n461 -> n456  [key=0, style=bold, color=blue];
n463 -> n464  [key=0, style=solid];
n463 -> n152  [key=2, style=dotted];
n464 -> n445  [key=0, style=bold, color=blue];
n465 -> n466  [key=0, style=solid];
n465 -> n154  [key=2, style=dotted];
n466 -> n467  [key=0, style=solid];
n467 -> n95  [key=0, style=bold, color=blue];
n468 -> n469  [key=0, style=solid];
n469 -> n470  [key=0, style=solid];
n469 -> n89  [key=2, style=dotted];
n470 -> n468  [key=0, style=bold, color=blue];
n471 -> n472  [key=0, style=solid];
n471 -> n473  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n471 -> n475  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n472 -> n473  [key=0, style=solid];
n472 -> n477  [key=2, style=dotted];
n473 -> n474  [key=0, style=solid];
n475 -> n476  [key=0, style=solid];
n477 -> n616  [key=0, style=solid];
n477 -> n617  [key=1, style=dashed, color=darkseagreen4, label=string];
n477 -> n471  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n477 -> n553  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n477 -> n560  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n477 -> n212  [key=3, color=darkorchid, style=bold, label="Parameter variable string paramName"];
n477 -> n554  [key=3, color=darkorchid, style=bold, label="Parameter variable string paramName"];
n477 -> n561  [key=3, color=darkorchid, style=bold, label="Parameter variable string paramName"];
n477 -> n562  [key=3, color=darkorchid, style=bold, label="Parameter variable string paramName"];
n474 -> n475  [key=0, style=solid];
n476 -> n471  [key=0, style=bold, color=blue];
n478 -> n479  [key=0, style=solid];
n479 -> n480  [key=0, style=solid];
n480 -> n478  [key=0, style=bold, color=blue];
n481 -> n482  [key=0, style=solid];
n482 -> n483  [key=0, style=solid];
n482 -> n485  [key=0, style=solid];
n483 -> n484  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n484 -> n486  [key=0, style=solid];
n486 -> n481  [key=0, style=bold, color=blue];
n487 -> n488  [key=0, style=solid];
n488 -> n489  [key=0, style=solid];
n488 -> n239  [key=2, style=dotted];
n489 -> n487  [key=0, style=bold, color=blue];
n490 -> n491  [key=0, style=solid];
n491 -> n492  [key=0, style=solid];
n491 -> n493  [key=0, style=solid];
n492 -> n497  [key=0, style=solid];
n492 -> n34  [key=2, style=dotted];
n493 -> n494  [key=0, style=solid];
n493 -> n496  [key=0, style=solid];
n494 -> n495  [key=0, style=solid];
n496 -> n497  [key=0, style=solid];
n495 -> n497  [key=0, style=solid];
n497 -> n490  [key=0, style=bold, color=blue];
n498 -> n499  [key=0, style=solid];
n499 -> n498  [key=0, style=bold, color=blue];
n500 -> n501  [key=0, style=solid];
n501 -> n502  [key=0, style=solid];
n502 -> n503  [key=0, style=solid];
n502 -> n66  [key=2, style=dotted];
n503 -> n504  [key=0, style=solid];
n503 -> n505  [key=0, style=solid];
n504 -> n505  [key=0, style=solid];
n504 -> n54  [key=2, style=dotted];
n505 -> n500  [key=0, style=bold, color=blue];
n506 -> n507  [key=0, style=solid];
n506 -> n510  [key=1, style=dashed, color=darkseagreen4, label=string];
n506 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AddValueItemIfAllowed"];
n506 -> n583  [key=3, color=darkorchid, style=bold, label="Parameter variable string item"];
n507 -> n508  [key=0, style=solid];
n507 -> n509  [key=0, style=solid];
n510 -> n511  [key=0, style=solid];
n510 -> n124  [key=2, style=dotted];
n508 -> n512  [key=0, style=solid];
n509 -> n510  [key=0, style=solid];
n511 -> n512  [key=0, style=solid];
n512 -> n506  [key=0, style=bold, color=blue];
n513 -> n514  [key=0, style=solid];
n513 -> n557  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n514 -> n513  [key=0, style=bold, color=blue];
n515 -> n516  [key=0, style=solid];
n515 -> n560  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n516 -> n515  [key=0, style=bold, color=blue];
n517 -> n518  [key=0, style=solid];
n518 -> n519  [key=0, style=solid];
n518 -> n468  [key=2, style=dotted];
n519 -> n517  [key=0, style=bold, color=blue];
n520 -> n126  [key=0, style=bold, color=blue];
n521 -> n53  [key=0, style=bold, color=blue];
n522 -> n523  [key=0, style=solid];
n523 -> n522  [key=0, style=bold, color=blue];
n524 -> n525  [key=0, style=solid];
n525 -> n524  [key=0, style=bold, color=blue];
n526 -> n527  [key=0, style=solid];
n527 -> n526  [key=0, style=bold, color=blue];
n528 -> n529  [key=0, style=solid];
n529 -> n530  [key=0, style=solid];
n530 -> n528  [key=0, style=bold, color=blue];
n531 -> n532  [key=0, style=solid];
n532 -> n533  [key=0, style=solid];
n533 -> n531  [key=0, style=bold, color=blue];
n534 -> n535  [key=0, style=solid];
n534 -> n536  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n535 -> n536  [key=0, style=solid];
n536 -> n537  [key=0, style=solid];
n537 -> n534  [key=0, style=bold, color=blue];
n538 -> n539  [key=0, style=solid];
n538 -> n540  [key=1, style=dashed, color=darkseagreen4, label=bool];
n539 -> n540  [key=0, style=solid];
n540 -> n541  [key=0, style=solid];
n541 -> n538  [key=0, style=bold, color=blue];
n542 -> n543  [key=0, style=solid];
n542 -> n544  [key=1, style=dashed, color=darkseagreen4, label=bool];
n542 -> n545  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n543 -> n544  [key=0, style=solid];
n544 -> n545  [key=0, style=solid];
n545 -> n546  [key=0, style=solid];
n546 -> n542  [key=0, style=bold, color=blue];
n547 -> n548  [key=0, style=solid];
n548 -> n549  [key=0, style=solid];
n548 -> n542  [key=2, style=dotted];
n549 -> n547  [key=0, style=bold, color=blue];
n550 -> n551  [key=0, style=solid];
n551 -> n552  [key=0, style=solid];
n551 -> n526  [key=2, style=dotted];
n552 -> n550  [key=0, style=bold, color=blue];
n553 -> n554  [key=0, style=solid];
n553 -> n555  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
n554 -> n555  [key=0, style=solid];
n554 -> n477  [key=2, style=dotted];
n555 -> n556  [key=0, style=solid];
n556 -> n553  [key=0, style=bold, color=blue];
n557 -> n558  [key=0, style=solid];
n557 -> n513  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n557 -> n560  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n558 -> n559  [key=0, style=solid];
n558 -> n560  [key=2, style=dotted];
n559 -> n557  [key=0, style=bold, color=blue];
n560 -> n561  [key=0, style=solid];
n560 -> n562  [key=1, style=dashed, color=darkseagreen4, label=object];
n560 -> n563  [key=1, style=dashed, color=darkseagreen4, label=object];
n560 -> n564  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n560 -> n565  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n560 -> n567  [key=1, style=dashed, color=darkseagreen4, label=object];
n560 -> n568  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n560 -> n571  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n560 -> n515  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter helpWriter"];
n560 -> n557  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n560 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n560 -> n575  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n561 -> n562  [key=0, style=solid];
n561 -> n477  [key=2, style=dotted];
n562 -> n563  [key=0, style=solid];
n562 -> n477  [key=2, style=dotted];
n563 -> n564  [key=0, style=solid];
n563 -> n573  [key=2, style=dotted];
n563 -> n565  [key=1, style=dashed, color=darkseagreen4, label=pair];
n563 -> n567  [key=1, style=dashed, color=darkseagreen4, label=pair];
n564 -> n565  [key=0, style=solid];
n564 -> n571  [key=0, style=solid];
n565 -> n566  [key=0, style=solid];
n565 -> n570  [key=0, style=solid];
n565 -> n574  [key=2, style=dotted];
n565 -> n575  [key=2, style=dotted];
n567 -> n568  [key=0, style=solid];
n567 -> n8  [key=2, style=dotted];
n568 -> n569  [key=0, style=solid];
n568 -> n576  [key=2, style=dotted];
n571 -> n572  [key=0, style=solid];
n571 -> n575  [key=2, style=dotted];
n573 -> n644  [key=0, style=solid];
n573 -> n560  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n573 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod"];
n566 -> n567  [key=0, style=solid];
n570 -> n572  [key=0, style=solid];
n574 -> n600  [key=0, style=solid];
n574 -> n602  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n574 -> n603  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n574 -> n604  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n574 -> n606  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpOptionAttribute"];
n574 -> n607  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n574 -> n560  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] args"];
n574 -> n112  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseHelp"];
n575 -> n577  [key=0, style=solid];
n575 -> n578  [key=1, style=dashed, color=darkseagreen4, label=object];
n575 -> n580  [key=1, style=dashed, color=darkseagreen4, label=object];
n575 -> n581  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n575 -> n587  [key=1, style=dashed, color=darkseagreen4, label=object];
n575 -> n589  [key=1, style=dashed, color=darkseagreen4, label=object];
n575 -> n560  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n569 -> n572  [key=0, style=solid];
n572 -> n560  [key=0, style=bold, color=blue];
n577 -> n578  [key=0, style=solid];
n577 -> n596  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n578 -> n579  [key=0, style=solid];
n578 -> n302  [key=2, style=dotted];
n578 -> n587  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
n578 -> n596  [key=1, style=dashed, color=darkseagreen4, label=optionMap];
n580 -> n581  [key=0, style=solid];
n580 -> n500  [key=2, style=dotted];
n580 -> n593  [key=1, style=dashed, color=darkseagreen4, label=target];
n580 -> n594  [key=1, style=dashed, color=darkseagreen4, label=target];
n581 -> n582  [key=0, style=solid];
n581 -> n471  [key=2, style=dotted];
n581 -> n583  [key=1, style=dashed, color=darkseagreen4, label=arguments];
n581 -> n587  [key=1, style=dashed, color=darkseagreen4, label=arguments];
n581 -> n592  [key=1, style=dashed, color=darkseagreen4, label=arguments];
n587 -> n588  [key=0, style=solid];
n587 -> n90  [key=2, style=dotted];
n587 -> n591  [key=1, style=dashed, color=darkseagreen4, label=result];
n589 -> n590  [key=0, style=solid];
n589 -> n599  [key=2, style=dotted];
n596 -> n597  [key=0, style=solid];
n596 -> n400  [key=2, style=dotted];
n596 -> n596  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n579 -> n580  [key=0, style=solid];
n579 -> n405  [key=2, style=dotted];
n593 -> n594  [key=0, style=solid];
n593 -> n582  [key=0, style=solid];
n594 -> n595  [key=0, style=solid];
n594 -> n582  [key=0, style=solid];
n594 -> n506  [key=2, style=dotted];
n582 -> n583  [key=0, style=solid];
n582 -> n596  [key=0, style=solid];
n582 -> n123  [key=2, style=dotted];
n583 -> n584  [key=0, style=solid];
n583 -> n585  [key=1, style=dashed, color=darkseagreen4, label=argument];
n583 -> n594  [key=1, style=dashed, color=darkseagreen4, label=argument];
n592 -> n582  [key=0, style=solid];
n592 -> n123  [key=2, style=dotted];
n584 -> n585  [key=0, style=solid];
n584 -> n582  [key=0, style=solid];
n585 -> n586  [key=0, style=solid];
n585 -> n97  [key=2, style=dotted];
n585 -> n587  [key=1, style=dashed, color=darkseagreen4, label=parser];
n585 -> n589  [key=1, style=dashed, color=darkseagreen4, label=parser];
n586 -> n587  [key=0, style=solid];
n586 -> n593  [key=0, style=solid];
n588 -> n589  [key=0, style=solid];
n588 -> n591  [key=0, style=solid];
n591 -> n592  [key=0, style=solid];
n591 -> n582  [key=0, style=solid];
n590 -> n582  [key=0, style=solid];
n590 -> n596  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n599 -> n612  [key=0, style=solid];
n599 -> n613  [key=1, style=dashed, color=darkseagreen4, label=object];
n599 -> n575  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n595 -> n582  [key=0, style=solid];
n595 -> n596  [key=1, style=dashed, color=darkseagreen4, label=hadError];
n597 -> n598  [key=0, style=solid];
n598 -> n575  [key=0, style=bold, color=blue];
n600 -> n601  [key=0, style=solid];
n600 -> n604  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
n600 -> n607  [key=1, style=dashed, color=darkseagreen4, label=caseSensitive];
n602 -> n603  [key=0, style=solid];
n602 -> n610  [key=0, style=solid];
n602 -> n326  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n603 -> n604  [key=0, style=solid];
n603 -> n606  [key=0, style=solid];
n603 -> n33  [key=2, style=dotted];
n604 -> n605  [key=0, style=solid];
n604 -> n606  [key=0, style=solid];
n604 -> n127  [key=2, style=dotted];
n606 -> n607  [key=0, style=solid];
n606 -> n609  [key=0, style=solid];
n606 -> n33  [key=2, style=dotted];
n607 -> n608  [key=0, style=solid];
n607 -> n609  [key=0, style=solid];
n607 -> n131  [key=2, style=dotted];
n601 -> n602  [key=0, style=solid];
n601 -> n604  [key=1, style=dashed, color=darkseagreen4, label=i];
n601 -> n607  [key=1, style=dashed, color=darkseagreen4, label=i];
n601 -> n609  [key=1, style=dashed, color=darkseagreen4, label=i];
n609 -> n602  [key=0, style=solid];
n609 -> n609  [key=1, style=dashed, color=darkseagreen4, label=i];
n610 -> n611  [key=0, style=solid];
n605 -> n611  [key=0, style=solid];
n608 -> n611  [key=0, style=solid];
n611 -> n574  [key=0, style=bold, color=blue];
n612 -> n613  [key=0, style=solid];
n612 -> n614  [key=0, style=solid];
n613 -> n614  [key=0, style=solid];
n613 -> n615  [key=2, style=dotted];
n614 -> n599  [key=0, style=bold, color=blue];
n616 -> n617  [key=0, style=solid];
n616 -> n618  [key=0, style=solid];
n617 -> n618  [key=0, style=solid];
n617 -> n51  [key=2, style=dotted];
n618 -> n477  [key=0, style=bold, color=blue];
n619 -> n620  [key=0, style=solid];
n619 -> n621  [key=0, style=solid];
n619 -> n33  [key=2, style=dotted];
n620 -> n621  [key=0, style=solid];
n620 -> n622  [key=2, style=dotted];
n621 -> n216  [key=0, style=bold, color=blue];
n623 -> n624  [key=0, style=solid];
n623 -> n625  [key=1, style=dashed, color=darkseagreen4, label=string];
n624 -> n625  [key=0, style=solid];
n624 -> n626  [key=0, style=solid];
n625 -> n626  [key=0, style=solid];
n625 -> n627  [key=2, style=dotted];
n626 -> n623  [key=0, style=bold, color=blue];
n628 -> n629  [key=0, style=solid];
n628 -> n89  [key=2, style=dotted];
n628 -> n637  [key=1, style=dashed, color=darkseagreen4, label=list];
n628 -> n638  [key=1, style=dashed, color=darkseagreen4, label=list];
n629 -> n630  [key=0, style=solid];
n629 -> n638  [key=0, style=solid];
n630 -> n631  [key=0, style=solid];
n630 -> n640  [key=2, style=dotted];
n630 -> n641  [key=2, style=dotted];
n637 -> n631  [key=0, style=solid];
n637 -> n446  [key=2, style=dotted];
n637 -> n124  [key=2, style=dotted];
n638 -> n639  [key=0, style=solid];
n631 -> n632  [key=0, style=solid];
n631 -> n638  [key=0, style=solid];
n631 -> n633  [key=1, style=dashed, color=darkseagreen4, label=property];
n631 -> n635  [key=1, style=dashed, color=darkseagreen4, label=property];
n631 -> n637  [key=1, style=dashed, color=darkseagreen4, label=property];
n632 -> n633  [key=0, style=solid];
n632 -> n631  [key=0, style=solid];
n633 -> n634  [key=0, style=solid];
n633 -> n642  [key=2, style=dotted];
n635 -> n636  [key=0, style=solid];
n635 -> n643  [key=2, style=dotted];
n635 -> n637  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n634 -> n635  [key=0, style=solid];
n634 -> n631  [key=0, style=solid];
n636 -> n637  [key=0, style=solid];
n636 -> n631  [key=0, style=solid];
n639 -> n75  [key=0, style=bold, color=blue];
n644 -> n645  [key=0, style=solid];
n644 -> n640  [key=2, style=dotted];
n644 -> n652  [key=2, style=dotted];
n645 -> n646  [key=0, style=solid];
n645 -> n650  [key=0, style=solid];
n645 -> n647  [key=1, style=dashed, color=darkseagreen4, label=method];
n645 -> n649  [key=1, style=dashed, color=darkseagreen4, label=method];
n646 -> n647  [key=0, style=solid];
n646 -> n645  [key=0, style=solid];
n650 -> n651  [key=0, style=solid];
n647 -> n648  [key=0, style=solid];
n647 -> n643  [key=2, style=dotted];
n647 -> n649  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n649 -> n651  [key=0, style=solid];
n649 -> n446  [key=2, style=dotted];
n648 -> n649  [key=0, style=solid];
n648 -> n645  [key=0, style=solid];
n651 -> n573  [key=0, style=bold, color=blue];
n653 -> n654  [key=0, style=solid];
n653 -> n657  [key=3, color=darkorchid, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n653 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n654 -> n655  [key=0, style=solid];
n654 -> n640  [key=2, style=dotted];
n654 -> n652  [key=2, style=dotted];
n655 -> n656  [key=0, style=solid];
n655 -> n660  [key=0, style=solid];
n655 -> n657  [key=1, style=dashed, color=darkseagreen4, label=method];
n656 -> n657  [key=0, style=solid];
n656 -> n655  [key=0, style=solid];
n660 -> n661  [key=0, style=solid];
n657 -> n658  [key=0, style=solid];
n657 -> n643  [key=2, style=dotted];
n657 -> n659  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n658 -> n659  [key=0, style=solid];
n658 -> n655  [key=0, style=solid];
n659 -> n661  [key=0, style=solid];
n661 -> n653  [key=0, style=bold, color=blue];
n662 -> n663  [key=0, style=solid];
n662 -> n664  [key=1, style=dashed, color=darkseagreen4, label=object];
n663 -> n664  [key=0, style=solid];
n663 -> n89  [key=2, style=dotted];
n663 -> n671  [key=1, style=dashed, color=darkseagreen4, label=list];
n663 -> n672  [key=1, style=dashed, color=darkseagreen4, label=list];
n664 -> n665  [key=0, style=solid];
n664 -> n640  [key=2, style=dotted];
n664 -> n641  [key=2, style=dotted];
n671 -> n665  [key=0, style=solid];
n671 -> n124  [key=2, style=dotted];
n672 -> n673  [key=0, style=solid];
n665 -> n666  [key=0, style=solid];
n665 -> n672  [key=0, style=solid];
n665 -> n667  [key=1, style=dashed, color=darkseagreen4, label=property];
n665 -> n669  [key=1, style=dashed, color=darkseagreen4, label=property];
n666 -> n667  [key=0, style=solid];
n666 -> n665  [key=0, style=solid];
n667 -> n668  [key=0, style=solid];
n667 -> n642  [key=2, style=dotted];
n669 -> n670  [key=0, style=solid];
n669 -> n643  [key=2, style=dotted];
n669 -> n671  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n668 -> n669  [key=0, style=solid];
n668 -> n665  [key=0, style=solid];
n670 -> n671  [key=0, style=solid];
n670 -> n665  [key=0, style=solid];
n673 -> n662  [key=0, style=bold, color=blue];
n674 -> n675  [key=0, style=solid];
n674 -> n676  [key=2, style=dotted];
n674 -> n677  [key=2, style=dotted];
n675 -> n321  [key=0, style=bold, color=blue];
n678 -> n679  [key=0, style=solid];
n679 -> n680  [key=0, style=solid];
n679 -> n681  [key=2, style=dotted];
n680 -> n678  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_11 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_6  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_16 -> m0_10  [key=0, style=bold, color=blue];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_91  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_6  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_115  [key=2, style=dotted];
m0_166 -> m0_162  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_130  [key=2, style=dotted];
m0_123 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_123 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_6  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_80  [key=2, style=dotted];
m0_73 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_73 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_73 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_6  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_18  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_18  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_19  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_17  [key=2, style=dotted];
m0_79 -> m0_72  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_5  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_6  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_115  [key=2, style=dotted];
m0_151 -> m0_147  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_39  [key=2, style=dotted];
m0_30 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_6  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_18  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_19  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_17  [key=2, style=dotted];
m0_38 -> m0_29  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_5  [key=2, style=dotted];
m0_68 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_6  [key=2, style=dotted];
m0_69 -> m0_41  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_19  [key=2, style=dotted];
m0_71 -> m0_67  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_65  [key=2, style=dotted];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_6  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_18  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_66  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_18  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_66  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_18  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_18  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_17  [key=2, style=dotted];
m0_64 -> m0_52  [key=0, style=bold, color=blue];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_91  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_6  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_115  [key=2, style=dotted];
m0_181 -> m0_177  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_145  [key=2, style=dotted];
m0_138 -> n528  [key=2, style=dotted];
m0_138 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_130  [key=2, style=dotted];
m0_139 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_139 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_6  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_18  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_18  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_17  [key=2, style=dotted];
m0_144 -> m0_137  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid, color=green];
m0_121 -> m0_6  [key=2, style=dotted, color=green];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_129  [key=2, style=dotted];
m0_122 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_122 -> m0_119  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_6  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_18  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_18  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_17  [key=2, style=dotted];
m0_128 -> m0_121  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_91  [key=2, style=dotted];
m0_84 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_6  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_18  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_17  [key=2, style=dotted];
m0_89 -> m0_81  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_116 -> m0_18  [key=2, style=dotted, color=green];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_5  [key=2, style=dotted];
m0_117 -> m0_110  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid, color=green];
m0_119 -> m0_115  [key=2, style=dotted];
m0_120 -> m0_116  [key=0, style=bold, color=blue];
m0_120 -> m0_121  [key=0, style=solid, color=green];
m0_120 -> m0_123  [key=2, style=dotted, color=green];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_5  [key=2, style=dotted];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_6  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_18  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_18  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_18  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_17  [key=2, style=dotted];
m0_28 -> m0_20  [key=0, style=bold, color=blue];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_197  [key=2, style=dotted];
m0_189 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_189 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_189 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_189 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_6  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_18  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_18  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_18  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_18  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_17  [key=2, style=dotted];
m0_196 -> m0_188  [key=0, style=bold, color=blue];
m0_115 -> m0_116  [key=0, style=solid, color=green];
m0_115 -> m0_18  [key=2, style=dotted, color=green];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_129  [key=2, style=dotted];
m0_132 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_130  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_6  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_115  [key=2, style=dotted];
m0_136 -> m0_131  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_2  [key=0, style=bold, color=blue];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_5  [key=2, style=dotted];
m0_183 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_6  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_18  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_17  [key=2, style=dotted];
m0_187 -> m0_182  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_39  [key=2, style=dotted];
m0_43 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_6  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_40  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_41  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_41  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_18  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_19  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_17  [key=2, style=dotted];
m0_51 -> m0_42  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_91  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_6  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_115  [key=2, style=dotted];
m0_156 -> m0_152  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_91  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_6  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_115  [key=2, style=dotted];
m0_171 -> m0_167  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_118  [key=2, style=dotted, color=green];
m0_111 -> m0_114  [key=1, style=dashed, color=green, label=options];
m0_111 -> m0_115  [key=1, style=dashed, color=green, label=options];
m0_111 -> m0_116  [key=1, style=dashed, color=green, label=options];
m0_111 -> m0_5  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid, color=green];
m0_112 -> m0_6  [key=2, style=dotted, color=green];
m0_114 -> m0_115  [key=0, style=solid, color=green];
m0_114 -> m0_18  [key=2, style=dotted, color=green];
m0_114 -> m0_110  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid, color=green];
m0_113 -> m0_17  [key=2, style=dotted, color=green];
m0_113 -> m0_115  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_90  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_91  [key=2, style=dotted];
m0_95 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_6  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_18  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_17  [key=2, style=dotted];
m0_100 -> m0_92  [key=0, style=bold, color=blue];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_91  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_6  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_115  [key=2, style=dotted];
m0_176 -> m0_172  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_109  [key=2, style=dotted];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_102 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_102 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_6  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_18  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_18  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_18  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_17  [key=2, style=dotted];
m0_108 -> m0_101  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_91  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_6  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_115  [key=2, style=dotted];
m0_161 -> m0_157  [key=0, style=bold, color=blue];
m0_198 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_112  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_113  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_125  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_198 -> m0_121  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
}
