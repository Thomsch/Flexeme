digraph  {
m0_50 [label="int next = i + 1", span="172-172", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_53 [label="i++", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_54 [label="return yearsPart.ToString();", span="179-179", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_55 [label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="161-161", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_56 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="HelpTextTests.cs"];
m0_57 [label="CommandLine.Text.CopyrightInfo", span="", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m0_58 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m0_52 [label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="175-175", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_51 [label="next < years.Length", span="173-173", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs"];
m0_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m0_16 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="HelpTextTests.cs"];
m0_126 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="396-396", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs"];
m0_41 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_22 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="HelpTextTests.cs"];
m0_25 [label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs"];
m0_26 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="137-137", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_27 [label="this.attribute != null", span="139-139", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_28 [label="return this.attribute.Copyright;", span="141-141", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_29 [label="var builder = new StringBuilder(this.builderSize)", span="144-144", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_30 [label="builder.Append(CopyrightWord)", span="145-145", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_31 [label="builder.Append(' ')", span="146-146", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_32 [label="builder.Append(this.isSymbolUpper ? SymbolUpper : SymbolLower)", span="147-147", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_24 [label="return info.ToString();", span="130-130", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs"];
m0_23 [label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs"];
m0_33 [label="builder.Append(' ')", span="148-148", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_71 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_72 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_73 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_74 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_75 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_69 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_68 [label="sut.MaximumDisplayWidth = 40", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m0_78 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_83 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_84 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_85 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_86 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_87 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_88 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_82 [label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_79 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_81 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_80 [label="sut.MaximumDisplayWidth = 40", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_89 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m0_39 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_190 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m0_116 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m0_149 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_157 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="280-280", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs"];
m0_152 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_156 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_158 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_151 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_153 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_154 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_155 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_159 [label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_160 [label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_161 [label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_150 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_162 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_192 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_195 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="354-354", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_196 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="355-355", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_197 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="356-356", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_198 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="357-357", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_199 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_200 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_201 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="360-360", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_202 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="361-361", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_203 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="362-362", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_194 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_193 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="346-349", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_204 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m0_42 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_44 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_45 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_46 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_48 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_49 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_47 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m0_43 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="HelpTextTests.cs"];
m0_40 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="HelpTextTests.cs"];
m0_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_95 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_96 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_97 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_98 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_99 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_100 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_94 [label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_91 [label="var sut = new HelpText(''Heading Info.'')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_92 [label="sut.MaximumDisplayWidth = 40", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m0_177 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_184 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_185 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_186 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_187 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_188 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_181 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="329-329", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_183 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_180 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="326-326", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_182 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_179 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="320-323", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_178 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="318-319", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_189 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m0_0 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextTests.cs"];
m0_1 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextTests.cs"];
m0_2 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextTests.cs"];
m0_120 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m0_145 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m0_36 [label="builder.Append(this.author)", span="151-151", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_38 [label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="137-137", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_34 [label="builder.Append(FormatYears(this.copyrightYears))", span="149-149", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_123 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m0_60 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m0_63 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m0_62 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m0_61 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m0_64 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m0_3 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextTests.cs"];
m0_19 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="HelpTextTests.cs"];
m0_125 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m0_121 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m0_37 [label="return builder.ToString();", span="152-152", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_191 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs"];
m0_127 [label="Entry lambda expression", span="218-239", cluster="lambda expression", file="HelpTextTests.cs"];
m0_128 [label="err.Tag", span="220-220", cluster="lambda expression", file="HelpTextTests.cs"];
m0_130 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223", cluster="lambda expression", file="HelpTextTests.cs"];
m0_132 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225", cluster="lambda expression", file="HelpTextTests.cs"];
m0_134 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227", cluster="lambda expression", file="HelpTextTests.cs"];
m0_136 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229", cluster="lambda expression", file="HelpTextTests.cs"];
m0_138 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231", cluster="lambda expression", file="HelpTextTests.cs"];
m0_142 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235", cluster="lambda expression", file="HelpTextTests.cs"];
m0_129 [label="ErrorType.BadFormatTokenError", span="222-222", cluster="lambda expression", file="HelpTextTests.cs"];
m0_131 [label="ErrorType.MissingValueOptionError", span="224-224", cluster="lambda expression", file="HelpTextTests.cs"];
m0_133 [label="ErrorType.UnknownOptionError", span="226-226", cluster="lambda expression", file="HelpTextTests.cs"];
m0_135 [label="ErrorType.MissingRequiredOptionError", span="228-228", cluster="lambda expression", file="HelpTextTests.cs"];
m0_137 [label="ErrorType.SequenceOutOfRangeError", span="230-230", cluster="lambda expression", file="HelpTextTests.cs"];
m0_139 [label="ErrorType.NoVerbSelectedError", span="232-232", cluster="lambda expression", file="HelpTextTests.cs"];
m0_141 [label="ErrorType.BadVerbSelectedError", span="234-234", cluster="lambda expression", file="HelpTextTests.cs"];
m0_143 [label="throw new InvalidOperationException();", span="237-237", cluster="lambda expression", file="HelpTextTests.cs"];
m0_140 [label="return ''ERR no-verb-selected'';", span="233-233", cluster="lambda expression", file="HelpTextTests.cs"];
m0_144 [label="Exit lambda expression", span="218-239", cluster="lambda expression", file="HelpTextTests.cs"];
m0_35 [label="builder.Append(' ')", span="150-150", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs"];
m0_65 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m0_164 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m0_117 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m0_4 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m0_165 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs"];
m0_163 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="244-244", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m0_122 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m0_119 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m0_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="HelpTextTests.cs"];
m0_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs"];
m0_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_20 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="HelpTextTests.cs"];
m0_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m0_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m0_118 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m0_102 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_108 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_109 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_110 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_111 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_112 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_113 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_114 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_107 [label="var lines = errorsText.ToNotEmptyLines()", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_103 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_104 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_105 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_115 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_166 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_172 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_173 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_174 [label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_175 [label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_169 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_171 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_168 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_170 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_167 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_176 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m0_124 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m0_77 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_53 -> m0_5  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_48  [key=0, style=solid];
m0_53 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_54 -> m0_5  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_43  [key=2, style=dotted];
m0_55 -> m0_5  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_42  [key=0, style=bold, color=blue];
m0_56 -> m0_5  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_5  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_57 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_58 -> m0_5  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_52 -> m0_4  [key=2, style=dotted];
m0_52 -> m0_21  [key=2, style=dotted];
m0_52 -> m0_38  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_52 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_52 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_52 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_52 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_52 -> m0_40  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_3  [key=2, style=dotted];
m0_51 -> m0_34  [key=2, style=dotted];
m0_51 -> m0_35  [key=2, style=dotted];
m0_51 -> m0_19  [key=2, style=dotted];
m0_51 -> m0_36  [key=2, style=dotted];
m0_51 -> m0_37  [key=2, style=dotted];
m0_51 -> m0_20  [key=2, style=dotted];
m0_51 -> m0_53  [key=0, style=solid];
m0_59 -> m0_50  [key=0, style=bold, color=blue];
m0_41 -> m0_4  [key=2, style=dotted];
m0_41 -> m0_21  [key=2, style=dotted];
m0_41 -> m0_38  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_41 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_41 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_41 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_41 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_41 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_25 -> m0_5  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_5  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=0, style=solid];
m0_28 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_38  [key=0, style=solid];
m0_29 -> m0_5  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_39  [key=2, style=dotted];
m0_29 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_29 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_30 -> m0_5  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_40  [key=2, style=dotted];
m0_31 -> m0_5  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_41  [key=2, style=dotted];
m0_32 -> m0_5  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_40  [key=2, style=dotted];
m0_24 -> m0_4  [key=2, style=dotted];
m0_24 -> m0_21  [key=2, style=dotted];
m0_24 -> m0_38  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_24 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_3  [key=2, style=dotted];
m0_23 -> m0_34  [key=2, style=dotted];
m0_23 -> m0_35  [key=2, style=dotted];
m0_23 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_36  [key=2, style=dotted];
m0_23 -> m0_37  [key=2, style=dotted];
m0_23 -> m0_20  [key=2, style=dotted];
m0_33 -> m0_22  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_41  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_71 -> m0_5  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_5  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_5  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_5  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_5  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_70 -> m0_4  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_70 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_70 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_70 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_70 -> m0_77  [key=2, style=dotted];
m0_67 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_65  [key=2, style=dotted];
m0_67 -> m0_17  [key=2, style=dotted];
m0_67 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_34  [key=2, style=dotted];
m0_69 -> m0_35  [key=2, style=dotted];
m0_69 -> m0_36  [key=2, style=dotted];
m0_69 -> m0_37  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_76 -> m0_66  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_83 -> m0_5  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_5  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_5  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_5  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_5  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_5  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_82 -> m0_4  [key=2, style=dotted];
m0_82 -> m0_21  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_82 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_82 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_82 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_82 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_79 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_65  [key=2, style=dotted];
m0_79 -> m0_17  [key=2, style=dotted];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_34  [key=2, style=dotted];
m0_81 -> m0_35  [key=2, style=dotted];
m0_81 -> m0_36  [key=2, style=dotted];
m0_81 -> m0_37  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_89 -> m0_78  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid, color=green];
m0_157 -> m0_5  [key=2, style=dotted, color=green];
m0_152 -> m0_157  [key=1, style=dashed, color=green, label=lines];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_4  [key=2, style=dotted];
m0_152 -> m0_21  [key=2, style=dotted];
m0_152 -> m0_38  [key=2, style=dotted];
m0_152 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_152 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_156 -> m0_157  [key=0, style=solid, color=green];
m0_156 -> m0_5  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_5  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_163  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_164  [key=2, style=dotted];
m0_153 -> m0_165  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_164  [key=2, style=dotted];
m0_154 -> m0_165  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_5  [key=2, style=dotted];
m0_159 -> m0_5  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_160 -> m0_5  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_34  [key=2, style=dotted];
m0_150 -> m0_35  [key=2, style=dotted];
m0_150 -> m0_116  [key=2, style=dotted];
m0_150 -> m0_121  [key=2, style=dotted];
m0_150 -> m0_118  [key=2, style=dotted];
m0_162 -> m0_149  [key=0, style=bold, color=blue];
m0_192 -> m0_193  [key=0, style=solid];
m0_195 -> m0_5  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_196 -> m0_5  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_5  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_5  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_199 -> m0_5  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_200 -> m0_5  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_5  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_202 -> m0_5  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_5  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_194 -> m0_4  [key=2, style=dotted];
m0_194 -> m0_21  [key=2, style=dotted];
m0_194 -> m0_38  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_194 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_3  [key=2, style=dotted];
m0_193 -> m0_34  [key=2, style=dotted];
m0_193 -> m0_35  [key=2, style=dotted];
m0_193 -> m0_19  [key=2, style=dotted];
m0_193 -> m0_36  [key=2, style=dotted];
m0_193 -> m0_37  [key=2, style=dotted];
m0_193 -> m0_20  [key=2, style=dotted];
m0_204 -> m0_192  [key=0, style=bold, color=blue];
m0_42 -> m0_44  [key=0, style=solid];
m0_42 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_42 -> m0_5  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_5  [key=2, style=dotted];
m0_45 -> m0_55  [key=0, style=solid];
m0_45 -> m0_56  [key=2, style=dotted];
m0_45 -> m0_5  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_39  [key=2, style=dotted];
m0_46 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_46 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_46 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_46 -> m0_5  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_54  [key=0, style=solid];
m0_48 -> m0_5  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_56  [key=2, style=dotted];
m0_49 -> m0_40  [key=2, style=dotted];
m0_49 -> m0_39  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_47 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_47 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_47 -> m0_5  [key=2, style=dotted];
m0_43 -> m0_5  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_3  [key=2, style=dotted];
m0_40 -> m0_34  [key=2, style=dotted];
m0_40 -> m0_35  [key=2, style=dotted];
m0_40 -> m0_19  [key=2, style=dotted];
m0_40 -> m0_36  [key=2, style=dotted];
m0_40 -> m0_37  [key=2, style=dotted];
m0_40 -> m0_20  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_95 -> m0_5  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_5  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_5  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_5  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_5  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_5  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_94 -> m0_4  [key=2, style=dotted];
m0_94 -> m0_21  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_94 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_94 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_94 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_94 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_91 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_65  [key=2, style=dotted];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_34  [key=2, style=dotted];
m0_93 -> m0_35  [key=2, style=dotted];
m0_93 -> m0_19  [key=2, style=dotted];
m0_93 -> m0_36  [key=2, style=dotted];
m0_93 -> m0_37  [key=2, style=dotted];
m0_93 -> m0_20  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_101 -> m0_90  [key=0, style=bold, color=blue];
m0_177 -> m0_178  [key=0, style=solid];
m0_184 -> m0_5  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_5  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_186 -> m0_5  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_5  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_5  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_181 -> m0_4  [key=2, style=dotted];
m0_181 -> m0_21  [key=2, style=dotted];
m0_181 -> m0_38  [key=2, style=dotted];
m0_181 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_181 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_181 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_181 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_181 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_164  [key=2, style=dotted];
m0_183 -> m0_165  [key=2, style=dotted];
m0_180 -> m0_163  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_182 -> m0_164  [key=2, style=dotted];
m0_182 -> m0_165  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_179 -> m0_34  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_191  [key=2, style=dotted];
m0_179 -> m0_125  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_36  [key=2, style=dotted];
m0_178 -> m0_190  [key=2, style=dotted];
m0_189 -> m0_177  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_26  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_42  [key=2, style=dotted];
m0_34 -> m0_40  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_63 -> m0_5  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_62 -> m0_4  [key=2, style=dotted];
m0_62 -> m0_21  [key=2, style=dotted];
m0_62 -> m0_38  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_34  [key=2, style=dotted];
m0_61 -> m0_35  [key=2, style=dotted];
m0_61 -> m0_65  [key=2, style=dotted];
m0_61 -> m0_36  [key=2, style=dotted];
m0_61 -> m0_37  [key=2, style=dotted];
m0_64 -> m0_60  [key=0, style=bold, color=blue];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_19 -> m0_18  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_43  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_127 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_127 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_127 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_127 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_127 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_131  [key=0, style=solid];
m0_128 -> m0_133  [key=0, style=solid];
m0_128 -> m0_135  [key=0, style=solid];
m0_128 -> m0_137  [key=0, style=solid];
m0_128 -> m0_139  [key=0, style=solid];
m0_128 -> m0_141  [key=0, style=solid];
m0_128 -> m0_143  [key=0, style=solid];
m0_130 -> m0_144  [key=0, style=solid];
m0_132 -> m0_144  [key=0, style=solid];
m0_134 -> m0_144  [key=0, style=solid];
m0_136 -> m0_144  [key=0, style=solid];
m0_138 -> m0_144  [key=0, style=solid];
m0_142 -> m0_144  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_145  [key=2, style=dotted];
m0_140 -> m0_144  [key=0, style=solid];
m0_144 -> m0_127  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_18 -> m0_19  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_7 -> m0_17  [key=2, style=dotted];
m0_7 -> m0_18  [key=2, style=dotted];
m0_7 -> m0_19  [key=2, style=dotted];
m0_7 -> m0_20  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_5  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_5  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_5  [key=2, style=dotted];
m0_6 -> m0_14  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_14  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_21  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_8 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_8 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=ExtraLength];
m0_9 -> m0_5  [key=2, style=dotted];
m0_14 -> m0_4  [key=0, style=bold, color=blue];
m0_14 -> m0_5  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_15 -> m0_6  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid];
m0_108 -> m0_5  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_5  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_5  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_5  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_5  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_5  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_5  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_107 -> m0_21  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_107 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_107 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_107 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_107 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_126  [key=2, style=dotted];
m0_103 -> m0_34  [key=2, style=dotted];
m0_103 -> m0_35  [key=2, style=dotted];
m0_103 -> m0_116  [key=2, style=dotted];
m0_103 -> m0_121  [key=2, style=dotted];
m0_103 -> m0_118  [key=2, style=dotted];
m0_103 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_117  [key=2, style=dotted];
m0_103 -> m0_119  [key=2, style=dotted];
m0_103 -> m0_120  [key=2, style=dotted];
m0_103 -> m0_122  [key=2, style=dotted];
m0_103 -> m0_123  [key=2, style=dotted];
m0_103 -> m0_124  [key=2, style=dotted];
m0_103 -> m0_125  [key=2, style=dotted];
m0_104 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m0_104 -> m0_104  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_104 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer"];
m0_115 -> m0_102  [key=0, style=bold, color=blue];
m0_166 -> m0_167  [key=0, style=solid];
m0_172 -> m0_5  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_5  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_174 -> m0_5  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_5  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_169 -> m0_4  [key=2, style=dotted];
m0_169 -> m0_21  [key=2, style=dotted];
m0_169 -> m0_38  [key=2, style=dotted];
m0_169 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_169 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_169 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_169 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_164  [key=2, style=dotted];
m0_171 -> m0_165  [key=2, style=dotted];
m0_168 -> m0_163  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_170 -> m0_164  [key=2, style=dotted];
m0_170 -> m0_165  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_167 -> m0_34  [key=2, style=dotted];
m0_167 -> m0_35  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_125  [key=2, style=dotted];
m0_176 -> m0_166  [key=0, style=bold, color=blue];
}
