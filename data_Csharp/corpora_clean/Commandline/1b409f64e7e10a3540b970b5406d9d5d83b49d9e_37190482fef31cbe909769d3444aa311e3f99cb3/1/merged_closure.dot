digraph  {
m0_50 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="int next = i + 1", span="172-172"];
m0_53 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="i++", span="169-169"];
m0_54 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="return yearsPart.ToString();", span="179-179"];
m0_55 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="161-161"];
m0_56 [cluster="int.ToString(System.IFormatProvider)", file="HelpTextTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m0_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m0_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110"];
m0_52 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="175-175"];
m0_51 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="HelpTextTests.cs", label="next < years.Length", span="173-173"];
m0_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m0_16 [cluster="System.ArgumentException.ArgumentException(string)", file="HelpTextTests.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="396-396"];
m0_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81"];
m0_22 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83"];
m0_25 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128"];
m0_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="137-137"];
m0_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="this.attribute != null", span="139-139"];
m0_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="return this.attribute.Copyright;", span="141-141"];
m0_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="var builder = new StringBuilder(this.builderSize)", span="144-144"];
m0_30 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(CopyrightWord)", span="145-145"];
m0_31 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(' ')", span="146-146"];
m0_32 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(this.isSymbolUpper ? SymbolUpper : SymbolLower)", span="147-147"];
m0_24 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs", label="return info.ToString();", span="130-130"];
m0_23 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128"];
m0_33 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(' ')", span="148-148"];
m0_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m0_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
m0_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
m0_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
m0_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
m0_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149"];
m0_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
m0_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135"];
m0_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140"];
m0_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="136-136"];
m0_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m0_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m0_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
m0_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
m0_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
m0_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
m0_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m0_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m0_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
m0_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
m0_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
m0_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="159-159"];
m0_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m0_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m0_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m0_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m0_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", prediction=0, span="280-280"];
m0_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275"];
m0_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279"];
m0_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281"];
m0_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272"];
m0_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276"];
m0_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277"];
m0_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278"];
m0_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282"];
m0_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283"];
m0_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284"];
m0_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269"];
m0_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m0_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m0_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="354-354"];
m0_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="355-355"];
m0_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="356-356"];
m0_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="357-357"];
m0_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="358-358"];
m0_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="359-359"];
m0_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="360-360"];
m0_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="361-361"];
m0_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="362-362"];
m0_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353"];
m0_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="346-349"];
m0_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m0_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="82-82"];
m0_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84"];
m0_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="85-85"];
m0_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="86-86"];
m0_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="88-88"];
m0_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m0_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="87-87"];
m0_43 [cluster="System.Text.StringBuilder.ToString()", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_40 [cluster="System.Text.StringBuilder.Append(string)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m0_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m0_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m0_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m0_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m0_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m0_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m0_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
m0_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
m0_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
m0_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="182-182"];
m0_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m0_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m0_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="333-333"];
m0_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="334-334"];
m0_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="335-335"];
m0_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="336-336"];
m0_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="337-337"];
m0_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="329-329"];
m0_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="332-332"];
m0_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="326-326"];
m0_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="331-331"];
m0_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="320-323"];
m0_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="318-319"];
m0_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m0_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m0_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32"];
m0_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32"];
m0_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45"];
m0_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m0_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_36 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(this.author)", span="151-151"];
m0_38 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="137-137"];
m0_34 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(FormatYears(this.copyrightYears))", span="149-149"];
m0_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m0_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m0_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
m0_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
m0_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
m0_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m0_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45"];
m0_19 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="HelpTextTests.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74"];
m0_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m0_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m0_37 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="return builder.ToString();", span="152-152"];
m0_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m0_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="218-239"];
m0_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="220-220"];
m0_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223"];
m0_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225"];
m0_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227"];
m0_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229"];
m0_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231"];
m0_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235"];
m0_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="222-222"];
m0_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="224-224"];
m0_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="226-226"];
m0_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="228-228"];
m0_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="230-230"];
m0_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="232-232"];
m0_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="234-234"];
m0_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="237-237"];
m0_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="233-233"];
m0_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="218-239"];
m0_35 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="HelpTextTests.cs", label="builder.Append(' ')", span="150-150"];
m0_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m0_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m0_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m0_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m0_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m0_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="244-244"];
m0_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m0_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m0_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74"];
m0_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m0_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m0_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
m0_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
m0_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
m0_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
m0_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m0_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m0_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
m0_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41"];
m0_20 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83"];
m0_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m0_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m0_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m0_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m0_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249"];
m0_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250"];
m0_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251"];
m0_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252"];
m0_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253"];
m0_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254"];
m0_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255"];
m0_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="247-247"];
m0_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244"];
m0_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217"];
m0_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239"];
m0_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241"];
m0_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m0_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m0_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307"];
m0_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308"];
m0_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309"];
m0_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310"];
m0_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303"];
m0_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306"];
m0_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300"];
m0_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305"];
m0_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297"];
m0_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m0_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m0_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_53 -> m0_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_57 -> m0_10  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_11  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_12  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_21  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_27  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_28  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_30  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_32  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_34  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_57 -> m0_36  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_52 -> m0_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_52 -> m0_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_52 -> m0_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_41 -> m0_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_34  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_35  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_36  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_29 -> m0_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_70 -> m0_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_70 -> m0_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_70 -> m0_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_70 -> m0_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_67 -> m0_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_79 -> m0_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_152 -> m0_157  [color=green, key=1, label=lines, style=dashed];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_152 -> m0_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_194 -> m0_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_42 -> m0_45  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_42 -> m0_46  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_42 -> m0_48  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_42 -> m0_49  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_42 -> m0_51  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_42 -> m0_52  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_46 -> m0_49  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_46 -> m0_52  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_46 -> m0_54  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_47 -> m0_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_181 -> m0_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_181 -> m0_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_181 -> m0_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_181 -> m0_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_181 -> m0_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_127 -> m0_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_127 -> m0_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_127 -> m0_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_127 -> m0_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_127 -> m0_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m0_4 -> m0_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_4 -> m0_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m0_4 -> m0_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_9 -> m0_13  [color=darkseagreen4, key=1, label=ExtraLength, style=dashed];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_104 -> m0_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_104 -> m0_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_169 -> m0_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_169 -> m0_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_169 -> m0_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_169 -> m0_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_169 -> m0_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
}
