digraph  {
n0 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", label="Entry Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
n1 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, label="0: number == 2", span="10-10"];
n2 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, label="0: return resourceKey + DualPostfix;", span="11-11"];
n3 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, label="0: number >= 3 && number <= 10", span="14-14"];
n4 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, label="0: return resourceKey + PluralPostfix;", span="15-15"];
n5 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, label="0: return resourceKey;", span="17-17"];
n6 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", label="Exit Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
m0_11 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ScalarTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m0_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ScalarTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m0_5 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ScalarTests.cs", label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m0_13 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ScalarTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m0_14 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="34-34"];
m0_15 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", color=green, community=0, file="ScalarTests.cs", label="0: var expected = new [] { Token.Name(''str''), Token.Value(''strvalue'') }", span="36-36"];
m0_16 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", color=green, community=0, file="ScalarTests.cs", label="0: var result = Scalar.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="38-47"];
m0_17 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", color=green, community=0, file="ScalarTests.cs", label="0: expected.ShouldAllBeEquivalentTo(result)", span="49-49"];
m0_18 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="34-34"];
m0_0 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="19-19"];
m0_1 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", color=green, community=0, file="ScalarTests.cs", label="0: var expected = new Token[] { }", span="21-21"];
m0_2 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", color=green, community=0, file="ScalarTests.cs", label="0: var result = Scalar.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="23-28"];
m0_3 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", color=green, community=0, file="ScalarTests.cs", label="0: expected.ShouldAllBeEquivalentTo(result)", span="30-30"];
m0_4 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="19-19"];
m0_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="ScalarTests.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m0_21 [cluster="lambda expression", file="ScalarTests.cs", label="Entry lambda expression", span="44-47"];
m0_7 [cluster="lambda expression", file="ScalarTests.cs", label="Entry lambda expression", span="25-28"];
m0_8 [cluster="lambda expression", color=green, community=0, file="ScalarTests.cs", label="0: new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="26-28"];
m0_9 [cluster="lambda expression", file="ScalarTests.cs", label="Exit lambda expression", span="25-28"];
m0_22 [cluster="lambda expression", color=green, community=0, file="ScalarTests.cs", label="0: new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="45-47"];
m0_23 [cluster="lambda expression", file="ScalarTests.cs", label="Exit lambda expression", span="44-47"];
m0_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="ScalarTests.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36"];
m0_19 [cluster="CommandLine.Core.Token.Name(string)", file="ScalarTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m0_20 [cluster="CommandLine.Core.Token.Value(string)", file="ScalarTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m1_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m1_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="settings = new ParserSettings()", span="40-40"];
m1_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="configuration(settings)", span="41-41"];
m1_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="settings.Consumed = true", span="42-42"];
m1_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="configuration == null", span="38-38"];
m1_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="throw new ArgumentNullException(''configuration'');", span="38-38"];
m1_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Sequence.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m1_20 [cluster="CommandLine.Parser.~Parser()", file="Sequence.cs", label="Entry CommandLine.Parser.~Parser()", span="54-54"];
m1_21 [cluster="CommandLine.Parser.~Parser()", file="Sequence.cs", label="Dispose(false)", span="56-56"];
m1_22 [cluster="CommandLine.Parser.~Parser()", file="Sequence.cs", label="Exit CommandLine.Parser.~Parser()", span="54-54"];
m1_58 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m1_65 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="147-154"];
m1_63 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="types.Length == 0", span="145-145"];
m1_59 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="args == null", span="143-143"];
m1_61 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="types == null", span="144-144"];
m1_64 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="145-145"];
m1_60 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="throw new ArgumentNullException(''args'');", span="143-143"];
m1_62 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="throw new ArgumentNullException(''types'');", span="144-144"];
m1_66 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Sequence.cs", label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m1_16 [cluster="System.Action<T>.Invoke(T)", file="Sequence.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Sequence.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45"];
m1_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Sequence.cs", label="this.settings = settings", span="47-47"];
m1_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Sequence.cs", label="this.settings.Consumed = true", span="48-48"];
m1_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Sequence.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45"];
m1_67 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Sequence.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_42 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112"];
m1_49 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="119-126"];
m1_47 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="args == null", span="117-117"];
m1_43 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="factory == null", span="115-115"];
m1_45 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="!typeof(T).IsMutable()", span="116-116"];
m1_48 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="throw new ArgumentNullException(''args'');", span="117-117"];
m1_44 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="throw new ArgumentNullException(''factory'');", span="115-115"];
m1_46 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="throw new ArgumentException(''factory'');", span="116-116"];
m1_50 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112"];
m1_51 [cluster="System.ArgumentException.ArgumentException(string)", file="Sequence.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_105 [cluster="Unk.Where", file="Sequence.cs", label="Entry Unk.Where", span=""];
m1_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Sequence.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m1_71 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Sequence.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26"];
m1_90 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Sequence.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_5 [cluster="CommandLine.Parser.Parser()", file="Sequence.cs", label="Entry CommandLine.Parser.Parser()", span="25-25"];
m1_6 [cluster="CommandLine.Parser.Parser()", color=green, community=0, file="Sequence.cs", label="0: settings = new ParserSettings { Consumed = true }", span="27-27"];
m1_7 [cluster="CommandLine.Parser.Parser()", file="Sequence.cs", label="Exit CommandLine.Parser.Parser()", span="25-25"];
m1_96 [cluster="System.Func<TResult>.Invoke()", file="Sequence.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_98 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="198-198"];
m1_109 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="parserResult.ParserResultType == ParserResultType.NotParsed", span="200-200"];
m1_110 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="((NotParsed<T>)parserResult).Errors.Any()", span="202-202"];
m1_111 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="204-204"];
m1_112 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="return parserResult;", span="208-208"];
m1_113 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Sequence.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="198-198"];
m1_114 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_106 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="193-193"];
m1_1 [cluster="lambda expression", color=green, community=0, file="Sequence.cs", label="0: new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="20-20"];
m1_0 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="20-20"];
m1_2 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="20-20"];
m1_35 [cluster="lambda expression", file="Sequence.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="93-98"];
m1_39 [cluster="lambda expression", file="Sequence.cs", label="Tokenize(arguments, optionSpecs, settings)", span="95-95"];
m1_53 [cluster="lambda expression", file="Sequence.cs", label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="120-125"];
m1_56 [cluster="lambda expression", file="Sequence.cs", label="Tokenize(arguments, optionSpecs, settings)", span="122-122"];
m1_69 [cluster="lambda expression", file="Sequence.cs", label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="148-153"];
m1_73 [cluster="lambda expression", file="Sequence.cs", label="Tokenize(arguments, optionSpecs, settings)", span="149-149"];
m1_34 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="93-98"];
m1_36 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="93-98"];
m1_38 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="95-95"];
m1_40 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="95-95"];
m1_52 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="120-125"];
m1_54 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="120-125"];
m1_55 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="122-122"];
m1_57 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="122-122"];
m1_68 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="148-153"];
m1_70 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="148-153"];
m1_72 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="149-149"];
m1_74 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="149-149"];
m1_85 [cluster="lambda expression", file="Sequence.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="176-176"];
m1_88 [cluster="lambda expression", file="Sequence.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="176-176"];
m1_92 [cluster="lambda expression", file="Sequence.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="177-177"];
m1_84 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="175-176"];
m1_91 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="177-177"];
m1_86 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="175-176"];
m1_87 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="176-176"];
m1_89 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="176-176"];
m1_93 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="177-177"];
m1_118 [cluster="lambda expression", file="Sequence.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", span="204-204"];
m1_102 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="193-193"];
m1_117 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="204-204"];
m1_119 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="204-204"];
m1_104 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="193-193"];
m1_103 [cluster="lambda expression", file="Sequence.cs", label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="193-193"];
m1_107 [cluster="lambda expression", file="Sequence.cs", label="e.Tag != ErrorType.UnknownOptionError", span="193-193"];
m1_108 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="193-193"];
m1_115 [cluster="T.ToMaybe<T>()", file="Sequence.cs", label="Entry T.ToMaybe<T>()", span="79-79"];
m1_97 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Sequence.cs", label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="189-189"];
m1_99 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Sequence.cs", label="return ignoreUnknownArguments\r\n                       ? parserResult.ParserResultType == ParserResultType.NotParsed\r\n                            ? ((NotParsed<T>)parserResult).MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                            : parserResult\r\n                       : parserResult;", span="191-195"];
m1_100 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Sequence.cs", label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="189-189"];
m1_101 [cluster="Unk.MapErrors", file="Sequence.cs", label="Entry Unk.MapErrors", span=""];
m1_31 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Sequence.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m1_120 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="276-276"];
m1_116 [cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Sequence.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="108-108"];
m1_83 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Sequence.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m1_82 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Sequence.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31"];
m1_79 [cluster="System.GC.SuppressFinalize(object)", file="Sequence.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m1_129 [cluster="CommandLine.ParserSettings.Dispose()", file="Sequence.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m1_30 [cluster="System.Type.IsMutable()", file="Sequence.cs", label="Entry System.Type.IsMutable()", span="115-115"];
m1_33 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Sequence.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="180-180"];
m1_94 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Sequence.cs", label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="182-186"];
m1_95 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Sequence.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="180-180"];
m1_75 [cluster="CommandLine.Parser.Dispose()", file="Sequence.cs", label="Entry CommandLine.Parser.Dispose()", span="160-160"];
m1_76 [cluster="CommandLine.Parser.Dispose()", file="Sequence.cs", label="Dispose(true)", span="162-162"];
m1_77 [cluster="CommandLine.Parser.Dispose()", file="Sequence.cs", label="GC.SuppressFinalize(this)", span="164-164"];
m1_78 [cluster="CommandLine.Parser.Dispose()", file="Sequence.cs", label="Exit CommandLine.Parser.Dispose()", span="160-160"];
m1_32 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Sequence.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m1_24 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m1_28 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="92-99"];
m1_27 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="88-90"];
m1_25 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="args == null", span="86-86"];
m1_26 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="throw new ArgumentNullException(''args'');", span="86-86"];
m1_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Sequence.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m1_41 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Sequence.cs", label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167"];
m1_80 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Sequence.cs", label="return settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer));", span="172-177"];
m1_81 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Sequence.cs", label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167"];
m1_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Sequence.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34"];
m1_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="211-211"];
m1_122 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label=disposed, span="213-213"];
m1_125 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="settings != null", span="220-220"];
m1_126 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="settings.Dispose()", span="222-222"];
m1_127 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="disposed = true", span="225-225"];
m1_123 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="return;", span="215-215"];
m1_124 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label=disposing, span="218-218"];
m1_128 [cluster="CommandLine.Parser.Dispose(bool)", file="Sequence.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="211-211"];
m1_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Sequence.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_121 [cluster="System.IO.TextWriter.Write(string)", file="Sequence.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m1_130 [file="Sequence.cs", label="CommandLine.Parser", span=""];
m1_131 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_132 [file="Sequence.cs", label=factory, span=""];
m1_133 [file="Sequence.cs", label="System.Func<T>", span=""];
m1_134 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_135 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_136 [file="Sequence.cs", label="params System.Type[]", span=""];
m1_137 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_138 [file="Sequence.cs", label="CommandLine.ParserSettings", span=""];
m1_139 [file="Sequence.cs", label="CommandLine.ParserResult<T>", span=""];
m2_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="SequenceTests.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="10-10"];
m2_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=green, community=0, file="SequenceTests.cs", label="0: this.index = index", span="13-13"];
m2_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="SequenceTests.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="10-10"];
m2_3 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="SequenceTests.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="16-16"];
m2_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", color=green, community=0, file="SequenceTests.cs", label="0: return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="18-24"];
m2_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="SequenceTests.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="16-16"];
m2_6 [cluster="T.ToMaybe<T>()", file="SequenceTests.cs", label="Entry T.ToMaybe<T>()", span="79-79"];
m2_7 [file="SequenceTests.cs", label="CommandLine.Core.ValueSpecification", span=""];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n2  [color=red, key=1, label=string, style=dashed];
n0 -> n3  [color=red, key=1, label=int, style=dashed];
n0 -> n4  [color=red, key=1, label=string, style=dashed];
n0 -> n5  [color=red, key=1, label=string, style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n3  [color=red, key=0, style=solid];
n2 -> n6  [color=red, key=0, style=solid];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [color=red, key=0, style=solid];
n4 -> n6  [color=red, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n6 -> n0  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_19  [color=green, key=2, style=dotted];
m0_15 -> m0_20  [color=green, key=2, style=dotted];
m0_15 -> m0_17  [color=green, key=1, label=expected, style=dashed];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_19  [color=green, key=2, style=dotted];
m0_16 -> m0_20  [color=green, key=2, style=dotted];
m0_16 -> m0_5  [color=green, key=2, style=dotted];
m0_16 -> m0_21  [color=green, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_6  [color=green, key=2, style=dotted];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=1, label=expected, style=dashed];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_2 -> m0_7  [color=green, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_6  [color=green, key=2, style=dotted];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_10  [color=green, key=2, style=dotted];
m0_8 -> m0_11  [color=green, key=2, style=dotted];
m0_8 -> m0_12  [color=green, key=2, style=dotted];
m0_8 -> m0_13  [color=green, key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_10  [color=green, key=2, style=dotted];
m0_22 -> m0_11  [color=green, key=2, style=dotted];
m0_22 -> m0_12  [color=green, key=2, style=dotted];
m0_22 -> m0_13  [color=green, key=2, style=dotted];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_11 -> m1_4  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_14  [key=0, style=solid];
m1_10 -> m1_15  [key=2, style=dotted];
m1_14 -> m1_8  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_58 -> m1_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_58 -> m1_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_61  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_58 -> m1_63  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_33  [key=2, style=dotted];
m1_65 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_63 -> m1_65  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=0, style=solid];
m1_61 -> m1_63  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_64 -> m1_67  [key=2, style=dotted];
m1_60 -> m1_66  [key=0, style=solid];
m1_60 -> m1_15  [key=2, style=dotted];
m1_62 -> m1_66  [key=0, style=solid];
m1_62 -> m1_15  [key=2, style=dotted];
m1_66 -> m1_58  [color=blue, key=0, style=bold];
m1_3 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_3  [color=blue, key=0, style=bold];
m1_42 -> m1_49  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_42 -> m1_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_33  [key=2, style=dotted];
m1_49 -> m1_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_47 -> m1_49  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> m1_30  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_48 -> m1_50  [key=0, style=solid];
m1_48 -> m1_15  [key=2, style=dotted];
m1_44 -> m1_50  [key=0, style=solid];
m1_44 -> m1_15  [key=2, style=dotted];
m1_46 -> m1_50  [key=0, style=solid];
m1_46 -> m1_51  [key=2, style=dotted];
m1_50 -> m1_42  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_4  [color=green, key=2, style=dotted];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m1_98 -> m1_109  [key=0, style=solid];
m1_98 -> m1_110  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_98 -> m1_111  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_98 -> m1_118  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_98 -> m1_112  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_112  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_110 -> m1_114  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_115  [key=2, style=dotted];
m1_111 -> m1_116  [key=2, style=dotted];
m1_111 -> m1_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_98  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_1 -> m1_4  [color=green, key=2, style=dotted];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_31  [key=2, style=dotted];
m1_53 -> m1_37  [key=2, style=dotted];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_41  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=2, style=dotted];
m1_69 -> m1_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_41  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_40 -> m1_38  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_54 -> m1_52  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_57 -> m1_55  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_74 -> m1_72  [color=blue, key=0, style=bold];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_83  [key=2, style=dotted];
m1_85 -> m1_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_90  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_86 -> m1_84  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_89 -> m1_87  [color=blue, key=0, style=bold];
m1_93 -> m1_91  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=2, style=dotted];
m1_118 -> m1_121  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_119 -> m1_117  [color=blue, key=0, style=bold];
m1_104 -> m1_102  [color=blue, key=0, style=bold];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=2, style=dotted];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_106  [color=blue, key=0, style=bold];
m1_97 -> m1_99  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=2, style=dotted];
m1_99 -> m1_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_100 -> m1_97  [color=blue, key=0, style=bold];
m1_33 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=2, style=dotted];
m1_94 -> m1_97  [key=2, style=dotted];
m1_94 -> m1_98  [key=2, style=dotted];
m1_95 -> m1_33  [color=blue, key=0, style=bold];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_23  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_78 -> m1_75  [color=blue, key=0, style=bold];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_24 -> m1_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_33  [key=2, style=dotted];
m1_28 -> m1_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_31  [key=2, style=dotted];
m1_27 -> m1_32  [key=2, style=dotted];
m1_25 -> m1_27  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_29  [key=0, style=solid];
m1_26 -> m1_15  [key=2, style=dotted];
m1_29 -> m1_24  [color=blue, key=0, style=bold];
m1_41 -> m1_80  [key=0, style=solid];
m1_41 -> m1_85  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=2, style=dotted];
m1_80 -> m1_83  [key=2, style=dotted];
m1_80 -> m1_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_80 -> m1_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_81 -> m1_41  [color=blue, key=0, style=bold];
m1_23 -> m1_122  [key=0, style=solid];
m1_23 -> m1_124  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_124  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_127  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_129  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_123 -> m1_128  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_128  [key=0, style=solid];
m1_128 -> m1_23  [color=blue, key=0, style=bold];
m1_130 -> m1_6  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_39  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_49  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_56  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_69  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_73  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_76  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_77  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_122  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_125  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_126  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_130 -> m1_127  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_131 -> m1_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_132 -> m1_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m1_133 -> m1_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_134 -> m1_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_135 -> m1_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_136 -> m1_69  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_137 -> m1_85  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_137 -> m1_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_137 -> m1_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_138 -> m1_85  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_138 -> m1_88  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_138 -> m1_92  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_139 -> m1_118  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_4  [color=green, key=3, label="Field variable string longName", style=bold];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_0  [color=green, key=2, style=dotted];
m2_4 -> m2_6  [color=green, key=2, style=dotted];
m2_5 -> m2_3  [color=blue, key=0, style=bold];
m2_7 -> m2_1  [color=green, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
}
