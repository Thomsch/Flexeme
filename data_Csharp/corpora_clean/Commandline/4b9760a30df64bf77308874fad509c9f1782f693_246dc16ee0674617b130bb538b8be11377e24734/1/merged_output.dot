digraph  {
m0_4 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="64-64"];
m0_5 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="64-64"];
m0_8 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="91-91"];
m0_9 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="91-91"];
m0_2 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="52-52"];
m0_3 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="52-52"];
m0_0 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="41-41"];
m0_1 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="41-41"];
m0_6 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="77-77"];
m0_7 [cluster="CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="77-77"];
m1_8 [cluster="Unk.Be", file="BaseFixture.cs", label="Entry Unk.Be", span=""];
m1_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m1_0 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m1_1 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=red, community=0, file="BaseFixture.cs", label="3: expected.Length.Should().Be(actual.Length)", span="40-40"];
m1_3 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=red, community=0, file="BaseFixture.cs", label="3: i < expected.Length", span="41-41"];
m1_4 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=red, community=0, file="BaseFixture.cs", label="3: expected[i].Should().Be(actual[i])", span="43-43"];
m1_2 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=red, community=0, file="BaseFixture.cs", label="3: int i = 0", span="41-41"];
m1_5 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=red, community=0, file="BaseFixture.cs", label="3: i++", span="41-41"];
m1_6 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m1_9 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m1_10 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=red, community=0, file="BaseFixture.cs", label="3: expected.Length.Should().Be(actual.Count)", span="49-49"];
m1_12 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=red, community=0, file="BaseFixture.cs", label="3: i < expected.Length", span="50-50"];
m1_13 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=red, community=0, file="BaseFixture.cs", label="3: expected[i].Should().Be(actual[i])", span="52-52"];
m1_11 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=red, community=0, file="BaseFixture.cs", label="3: int i = 0", span="50-50"];
m1_14 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=red, community=0, file="BaseFixture.cs", label="3: i++", span="50-50"];
m1_15 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m2_3 [cluster="CommandLine.Text.EnglishSentenceBuilder.EnglishSentenceBuilder()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.Text.EnglishSentenceBuilder.EnglishSentenceBuilder()", span="29-29"];
m2_0 [cluster="CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", span="71-71"];
m2_1 [cluster="CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", color=red, community=0, file="BaseSentenceBuilder.cs", label="1: return new EnglishSentenceBuilder();", span="73-73"];
m2_2 [cluster="CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Exit CommandLine.Text.BaseSentenceBuilder.CreateBuiltIn()", span="71-71"];
m3_19 [cluster="CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", span="38-38"];
m3_22 [cluster="Unk.Be", file="EnumeratorsFixture.cs", label="Entry Unk.Be", span=""];
m3_25 [cluster="Unk.BeTrue", file="EnumeratorsFixture.cs", label="Entry Unk.BeTrue", span=""];
m3_26 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", span="70-70"];
m3_27 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="72-72"];
m3_28 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.MoveNext()", span="73-73"];
m3_29 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(''a'')", span="75-75"];
m3_30 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Next.Should().Be(''b'')", span="76-76"];
m3_31 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Be(''bcd'')", span="77-77"];
m3_32 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().BeFalse()", span="78-78"];
m3_33 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.MoveNext()", span="80-80"];
m3_34 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(''b'')", span="82-82"];
m3_35 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Next.Should().Be(''c'')", span="83-83"];
m3_36 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Be(''cd'')", span="84-84"];
m3_37 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().BeFalse()", span="85-85"];
m3_38 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.MoveNext()", span="87-87"];
m3_39 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(''c'')", span="89-89"];
m3_40 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Next.Should().Be(''d'')", span="90-90"];
m3_41 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Be(''d'')", span="91-91"];
m3_42 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().BeFalse()", span="92-92"];
m3_43 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.MoveNext()", span="94-94"];
m3_44 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(''d'')", span="96-96"];
m3_45 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.IsLast.Should().BeTrue()", span="97-97"];
m3_46 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.Char_iteration()", span="70-70"];
m3_48 [cluster="CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", span="38-38"];
m3_47 [cluster="CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="38-38"];
m3_0 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", span="42-42"];
m3_1 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: string valueOne = ''one''", span="44-44"];
m3_2 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: string valueTwo = ''two''", span="45-45"];
m3_4 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: string[] values = { valueOne, valueTwo, valueThree }", span="48-48"];
m3_7 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(valueOne)", span="52-52"];
m3_3 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="2: string valueThree = ''three''", span="46-46"];
m3_8 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Next.Should().Be(valueTwo)", span="53-53"];
m3_11 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="3: e.Current.Should().Be(valueTwo)", span="58-58"];
m3_12 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Be(valueThree)", span="59-59"];
m3_15 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Be(valueThree)", span="64-64"];
m3_5 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="2: IArgumentEnumerator e = new StringArrayEnumerator(values)", span="49-49"];
m3_6 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.MoveNext()", span="50-50"];
m3_9 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().BeFalse()", span="54-54"];
m3_10 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.MoveNext()", span="56-56"];
m3_13 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="2: e.IsLast.Should().BeFalse()", span="60-60"];
m3_14 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="2: e.MoveNext()", span="62-62"];
m3_16 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().BeNull()", span="65-65"];
m3_17 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().BeTrue()", span="66-66"];
m3_18 [cluster="CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.EnumeratorsFixture.String_iteration()", span="42-42"];
m3_23 [cluster="Unk.BeFalse", file="EnumeratorsFixture.cs", label="Entry Unk.BeFalse", span=""];
m3_20 [cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34"];
m3_24 [cluster="Unk.BeNull", file="EnumeratorsFixture.cs", label="Entry Unk.BeNull", span=""];
m3_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m6_0 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m6_1 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: condition", span="11-11"];
m6_2 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: values", span="12-12"];
m6_3 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: builder.Append(value)", span="13-13"];
m6_4 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="0: return builder;", span="15-15"];
m6_5 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m6_17 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m6_45 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m6_46 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: builder.Length > 0", span="87-87"];
m6_47 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: builder[builder.Length - 1] == c", span="88-88"];
m6_48 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: builder.Remove(builder.Length - 1, 1)", span="89-89"];
m6_49 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: return builder;", span="91-91"];
m6_50 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m6_14 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m6_15 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="3: return condition\r\n                ? builder.AppendFormat(format, args)\r\n                : builder;", span="29-31"];
m6_16 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m6_13 [cluster="System.Text.StringBuilder.Append(char)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m6_18 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m6_19 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return condition\r\n                ? builder.Append(ifTrue)\r\n                : builder.Append(ifFalse);", span="36-38"];
m6_20 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m6_7 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m6_8 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: condition", span="20-20"];
m6_9 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="0: values", span="21-21"];
m6_10 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: builder.Append(value)", span="22-22"];
m6_11 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: return builder;", span="24-24"];
m6_12 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m6_34 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m6_35 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return builder == null\r\n                ? string.Empty\r\n                : builder.ToString();", span="68-70"];
m6_36 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m6_44 [cluster="System.Text.StringBuilder.Remove(int, int)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m6_28 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m6_29 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: values", span="59-59"];
m6_31 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: builder.Append(value)", span="61-61"];
m6_32 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return builder;", span="63-63"];
m6_30 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: value.Length > 0", span="60-60"];
m6_33 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m6_38 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m6_39 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return builder == null ? 0 : builder.Length;", span="75-75"];
m6_40 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m6_41 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m6_42 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return builder.Length > 0\r\n                ? builder.Remove(builder.Length - 1, 1)\r\n                : builder;", span="80-82"];
m6_43 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m6_21 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m6_22 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="2: return condition\r\n                ? ifTrue(builder)\r\n                : ifFalse(builder);", span="44-46"];
m6_23 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m6_6 [cluster="System.Text.StringBuilder.Append(string)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_37 [cluster="System.Text.StringBuilder.ToString()", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_25 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m6_26 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="3: return condition\r\n                ? ifTrue(builder)\r\n                : builder;", span="52-54"];
m6_27 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m6_51 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m6_52 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return condition\r\n                ? builder.TrimEndIfMatch(c)\r\n                : builder;", span="96-98"];
m6_53 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m6_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpVerbOptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_55 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m6_56 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: var bound = builder.Length - 1", span="103-103"];
m6_57 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: builder.Length == 0", span="104-104"];
m6_59 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: builder[bound] != ' '", span="105-105"];
m6_65 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: builder[i] != ' '", span="110-110"];
m6_62 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: var i = bound", span="107-107"];
m6_63 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: i <= bound", span="107-107"];
m6_58 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return 0;", span="104-104"];
m6_60 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: return 0;", span="105-105"];
m6_61 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: var c = 0", span="106-106"];
m6_66 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: c++", span="111-111"];
m6_68 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="return c;", span="113-113"];
m6_64 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: i < 0", span="109-109"];
m6_67 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", color=red, community=0, file="HelpVerbOptionAttribute.cs", label="1: i--", span="107-107"];
m6_69 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m6_54 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="HelpVerbOptionAttribute.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m7_39 [cluster="Unk.EqualTo", file="InstanceChooserTests.cs", label="Entry Unk.EqualTo", span=""];
m7_17 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m7_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m7_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="56-56"];
m7_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="59-63"];
m7_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="1: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="67-67"];
m7_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<NullInstance>(result.Value)", span="66-66"];
m7_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m7_6 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m7_37 [cluster="Unk.ShouldHave", file="InstanceChooserTests.cs", label="Entry Unk.ShouldHave", span=""];
m7_7 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m7_38 [cluster="Unk.AllRuntimeProperties", file="InstanceChooserTests.cs", label="Entry Unk.AllRuntimeProperties", span=""];
m7_10 [cluster="Unk.True", file="InstanceChooserTests.cs", label="Entry Unk.True", span=""];
m7_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m7_31 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94"];
m7_32 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101"];
m7_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: expected.ShouldHave().AllRuntimeProperties().EqualTo(result.Value)", span="105-105"];
m7_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<AddOptions>(result.Value)", span="104-104"];
m7_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m7_36 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m7_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m7_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m7_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25"];
m7_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="1: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="29-29"];
m7_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="0: Assert.IsType<NullInstance>(result.Value)", span="28-28"];
m7_5 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m7_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m7_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="3: var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="37-37"];
m7_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="2: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="40-44"];
m7_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="48-48"];
m7_14 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<NullInstance>(result.Value)", span="47-47"];
m7_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m7_8 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m7_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m7_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75"];
m7_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="1: var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82"];
m7_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="3: Assert.True(expectedErrors.SequenceEqual(result.Errors))", span="86-86"];
m7_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="2: Assert.IsType<NullInstance>(result.Value)", span="85-85"];
m7_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m7_9 [cluster="Unk.SequenceEqual", file="InstanceChooserTests.cs", label="Entry Unk.SequenceEqual", span=""];
m8_26 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Entry CommandLine.NameInfo.GetHashCode()", span="98-98"];
m8_27 [cluster="CommandLine.NameInfo.GetHashCode()", color=green, community=0, file="NameInfo.cs", label="3: return this.ShortName.GetHashCode() ^ this.LongName.GetHashCode();", span="100-100"];
m8_28 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Exit CommandLine.NameInfo.GetHashCode()", span="98-98"];
m8_0 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m8_1 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="3: shortName == null", span="22-22"];
m8_2 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="0: throw new ArgumentNullException(''shortName'');", span="22-22"];
m8_3 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="0: longName == null", span="23-23"];
m8_4 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="0: throw new ArgumentNullException(''longName'');", span="23-23"];
m8_5 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="2: this.longName = longName", span="25-25"];
m8_6 [cluster="CommandLine.NameInfo.NameInfo(string, string)", color=green, community=0, file="NameInfo.cs", label="0: this.shortName = shortName", span="26-26"];
m8_7 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m8_24 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="108-108"];
m8_30 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="1: other == null", span="110-110"];
m8_31 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="3: return false;", span="112-112"];
m8_32 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", color=green, community=0, file="NameInfo.cs", label="3: return this.ShortName.Equals(other.ShortName) && this.LongName.Equals(other.LongName);", span="115-115"];
m8_33 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="108-108"];
m8_29 [cluster="string.GetHashCode()", file="NameInfo.cs", label="Entry string.GetHashCode()", span="0-0"];
m8_12 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", span="67-67"];
m8_13 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="3: specification.Tag", span="69-69"];
m8_14 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="3: SpecificationType.Option", span="71-71"];
m8_16 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="3: return NameInfo.EmptyName;", span="74-74"];
m8_15 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", color=green, community=0, file="NameInfo.cs", label="3: return NameInfo.FromOptionSpecification((OptionSpecification)specification);", span="72-72"];
m8_17 [cluster="CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.FromSpecification(CommandLine.Core.Specification)", span="67-67"];
m8_25 [cluster="object.Equals(object)", file="NameInfo.cs", label="Entry object.Equals(object)", span="0-0"];
m8_9 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_10 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", color=green, community=0, file="NameInfo.cs", label="3: return new NameInfo(\r\n                specification.LongName,\r\n                specification.ShortName);", span="62-64"];
m8_11 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_34 [cluster="string.Equals(string)", file="NameInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m8_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_18 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(object)", span="83-83"];
m8_19 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="2: var other = obj as NameInfo", span="85-85"];
m8_20 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="0: other != null", span="86-86"];
m8_21 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="1: return this.Equals(other);", span="88-88"];
m8_22 [cluster="CommandLine.NameInfo.Equals(object)", color=green, community=0, file="NameInfo.cs", label="1: return base.Equals(obj);", span="91-91"];
m8_23 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(object)", span="83-83"];
m8_35 [file="NameInfo.cs", label="CommandLine.NameInfo", span=""];
m9_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m9_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="3: name == null", span="12-12"];
m9_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="2: throw new ArgumentNullException(''name'');", span="12-12"];
m9_3 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="NameLookup.cs", label="2: return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="14-14"];
m9_4 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m9_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="NameLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m9_7 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="14-14"];
m9_8 [cluster="lambda expression", color=green, community=0, file="NameLookup.cs", label="3: name.MatchName(a.ShortName, a.LongName, comparer)", span="14-14"];
m9_9 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="14-14"];
m9_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameLookup.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_6 [cluster="Unk.Any", file="NameLookup.cs", label="Entry Unk.Any", span=""];
m9_11 [file="NameLookup.cs", label=string, span=""];
m9_12 [file="NameLookup.cs", label="System.StringComparer", span=""];
m10_12 [cluster="CommandLine.Tests.Fakes.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m10_17 [cluster="Unk.Be", file="NullableTypesParsingFixture.cs", label="Entry Unk.Be", span=""];
m10_16 [cluster="Unk.BeTrue", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeTrue", span=""];
m10_0 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m10_1 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var options = new NullableTypesOptions()", span="44-44"];
m10_2 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="45-45"];
m10_3 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="46-46"];
m10_5 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.IntegerValue.Should().Be(99)", span="49-49"];
m10_4 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result.Should().BeTrue()", span="48-48"];
m10_6 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: options = new NullableTypesOptions()", span="51-51"];
m10_7 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="52-52"];
m10_8 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result = parser.ParseArguments(new string[] { }, options)", span="53-53"];
m10_10 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.IntegerValue.Should().NotHaveValue()", span="56-56"];
m10_9 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: result.Should().BeTrue()", span="55-55"];
m10_11 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_integer_option()", span="42-42"];
m10_81 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="156-156"];
m10_82 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var options = new NullableTypesOptions()", span="158-158"];
m10_83 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="159-159"];
m10_84 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="160-160"];
m10_86 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.StringValue.Should().Be(''alone'')", span="163-163"];
m10_85 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result.Should().BeTrue()", span="162-162"];
m10_87 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options = new NullableTypesOptions()", span="165-165"];
m10_88 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="166-166"];
m10_89 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: result = parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="167-168"];
m10_91 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.DoubleValue.Should().Be(1.789D)", span="171-171"];
m10_92 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.IntegerValue.Should().Be(10099)", span="172-172"];
m10_93 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: options.StringValue.Should().Be(''together'')", span="173-173"];
m10_94 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.EnumValue.Should().Be(FileAccess.Read)", span="174-174"];
m10_90 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result.Should().BeTrue()", span="170-170"];
m10_95 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="156-156"];
m10_14 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m10_18 [cluster="Unk.NotHaveValue", file="NullableTypesParsingFixture.cs", label="Entry Unk.NotHaveValue", span=""];
m10_25 [cluster="Unk.BeFalse", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m10_13 [cluster="CommandLine.Parser.Parser()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m10_32 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="80-80"];
m10_33 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="82-82"];
m10_34 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="83-83"];
m10_35 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="84-84"];
m10_37 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.EnumValue.Should().Be(FileAccess.ReadWrite)", span="87-87"];
m10_36 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: result.Should().BeTrue()", span="86-86"];
m10_38 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options = new NullableTypesOptions()", span="89-89"];
m10_39 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="90-90"];
m10_40 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] { }, options)", span="91-91"];
m10_42 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.EnumValue.Should().BeNull()", span="94-94"];
m10_41 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: result.Should().BeTrue()", span="93-93"];
m10_43 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="80-80"];
m10_57 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", span="118-118"];
m10_58 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var options = new NullableTypesOptions()", span="120-120"];
m10_59 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="121-121"];
m10_60 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="122-122"];
m10_62 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.DoubleValue.Should().Be(9.999)", span="125-125"];
m10_61 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result.Should().BeTrue()", span="124-124"];
m10_63 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="127-127"];
m10_64 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="128-128"];
m10_65 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result = parser.ParseArguments(new string[] { }, options)", span="129-129"];
m10_67 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: options.DoubleValue.Should().NotHaveValue()", span="132-132"];
m10_66 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: result.Should().BeTrue()", span="131-131"];
m10_68 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Parse_nullable_double_option()", span="118-118"];
m10_51 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="108-108"];
m10_52 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var options = new NullableTypesOptions()", span="110-110"];
m10_53 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var parser = new CommandLine.Parser()", span="111-111"];
m10_54 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''--enum'' }, options)", span="112-112"];
m10_55 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: result.Should().BeFalse()", span="114-114"];
m10_56 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="108-108"];
m10_69 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="136-136"];
m10_70 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var options = new NullableTypesOptions()", span="138-138"];
m10_71 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var parser = new CommandLine.Parser()", span="139-139"];
m10_72 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="140-140"];
m10_73 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: result.Should().BeFalse()", span="142-142"];
m10_74 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_double_option_fails()", span="136-136"];
m10_75 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="146-146"];
m10_76 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: var options = new NullableTypesOptions()", span="148-148"];
m10_77 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var parser = new CommandLine.Parser()", span="149-149"];
m10_78 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''-d'' }, options)", span="150-150"];
m10_79 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: result.Should().BeFalse()", span="152-152"];
m10_80 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="146-146"];
m10_26 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="70-70"];
m10_27 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="72-72"];
m10_28 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="73-73"];
m10_29 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''-int'' }, options)", span="74-74"];
m10_30 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="3: result.Should().BeFalse()", span="76-76"];
m10_31 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="70-70"];
m10_45 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="98-98"];
m10_46 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var options = new NullableTypesOptions()", span="100-100"];
m10_47 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var parser = new CommandLine.Parser()", span="101-101"];
m10_48 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="102-102"];
m10_49 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: result.Should().BeFalse()", span="104-104"];
m10_50 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_enumeration_option_fails()", span="98-98"];
m10_44 [cluster="Unk.BeNull", file="NullableTypesParsingFixture.cs", label="Entry Unk.BeNull", span=""];
m10_15 [cluster="Unk.Should", file="NullableTypesParsingFixture.cs", label="Entry Unk.Should", span=""];
m10_19 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="60-60"];
m10_20 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var options = new NullableTypesOptions()", span="62-62"];
m10_21 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var parser = new CommandLine.Parser()", span="63-63"];
m10_22 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="64-64"];
m10_23 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: result.Should().BeFalse()", span="66-66"];
m10_24 [cluster="CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="60-60"];
m12_51 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", span="111-111"];
m12_52 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="113-113"];
m12_53 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="114-114"];
m12_54 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="115-116"];
m12_56 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Be(191919)", span="119-119"];
m12_57 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="120-120"];
m12_58 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.BooleanValue.Should().BeTrue()", span="121-121"];
m12_59 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Be(''near'')", span="122-122"];
m12_55 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="118-118"];
m12_60 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", span="111-111"];
m12_11 [cluster="Unk.BeTrue", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.BeTrue", span=""];
m12_0 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", span="43-43"];
m12_1 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="45-45"];
m12_2 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="46-46"];
m12_3 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="47-47"];
m12_5 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="50-50"];
m12_4 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="49-49"];
m12_6 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", span="43-43"];
m12_7 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m12_220 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", span="387-387"];
m12_221 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new OptionsWithUIntArray()", span="389-389"];
m12_222 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var parser = new CommandLine.Parser()", span="390-390"];
m12_223 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var result = CommandLine.Parser.Default.ParseArguments(new string[] {\r\n                ''--somestr'', ''just a string'',\r\n                ''--arrayone'', ''10'', ''20'', ''30'', ''40'',\r\n                ''--arraytwo'', ''11'', ''22'', ''33'', ''44'',\r\n                ''--somebool''\r\n            }, options)", span="391-396"];
m12_225 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeStringValue.Should().Be(''just a string'')", span="399-399"];
m12_226 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="400-400"];
m12_227 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="401-401"];
m12_228 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.SomeBooleanValue.Should().BeTrue()", span="402-402"];
m12_224 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="398-398"];
m12_229 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", span="387-387"];
m12_43 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="99-99"];
m12_44 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="101-101"];
m12_45 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var parser = new CommandLine.Parser()", span="102-102"];
m12_46 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var result = parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="103-103"];
m12_48 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Be(''before'')", span="106-106"];
m12_49 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="107-107"];
m12_47 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="105-105"];
m12_50 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="99-99"];
m12_191 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m12_204 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", span="363-363"];
m12_205 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Assert.Throws<ParserException>(\r\n                () => new CommandLine.Parser().ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray()))", span="365-366"];
m12_206 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", span="363-363"];
m12_198 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", span="356-356"];
m12_199 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: Assert.Throws<ParserException>(\r\n                () => new CommandLine.Parser().ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray()))", span="358-359"];
m12_200 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_short_name()", span="356-356"];
m12_187 [cluster="Unk.>", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.>", span=""];
m12_219 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="OptionArrayAttributeParsingFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m12_217 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m12_91 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="170-170"];
m12_92 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="172-172"];
m12_93 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="173-173"];
m12_94 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="174-174"];
m12_95 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeFalse()", span="176-176"];
m12_96 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options = new SimpleOptionsWithArray()", span="178-178"];
m12_97 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: parser = new CommandLine.Parser()", span="179-179"];
m12_98 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: result = parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="180-180"];
m12_99 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeFalse()", span="182-182"];
m12_100 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="184-184"];
m12_101 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="185-185"];
m12_102 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="186-186"];
m12_103 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeFalse()", span="188-188"];
m12_104 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options = new SimpleOptionsWithArray()", span="190-190"];
m12_105 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: parser = new CommandLine.Parser()", span="191-191"];
m12_106 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result = parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="192-192"];
m12_107 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeFalse()", span="194-194"];
m12_108 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="170-170"];
m12_61 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="126-126"];
m12_62 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var options = new SimpleOptionsWithArrayAndValueList()", span="128-128"];
m12_63 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="129-129"];
m12_64 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="130-131"];
m12_66 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.StringValue.Should().Be(''here'')", span="134-134"];
m12_67 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Be(999)", span="135-135"];
m12_68 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="136-136"];
m12_69 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.BooleanValue.Should().BeTrue()", span="137-137"];
m12_70 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="138-138"];
m12_65 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="133-133"];
m12_71 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="126-126"];
m12_12 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="38-38"];
m12_27 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="76-76"];
m12_28 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="78-78"];
m12_29 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="79-79"];
m12_30 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="80-80"];
m12_32 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="83-83"];
m12_31 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="82-82"];
m12_33 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="76-76"];
m12_218 [cluster="CommandLine.ParserSettings.ParserSettings()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m12_230 [cluster="CommandLine.Tests.Unit.OptionsWithUIntArray.OptionsWithUIntArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.OptionsWithUIntArray.OptionsWithUIntArray()", span="33-33"];
m12_125 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", span="229-229"];
m12_126 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="231-231"];
m12_127 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="232-232"];
m12_128 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="233-237"];
m12_130 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="240-240"];
m12_131 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="241-241"];
m12_132 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="242-242"];
m12_129 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="239-239"];
m12_133 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options = new SimpleOptionsWithArray()", span="244-244"];
m12_134 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="245-245"];
m12_135 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="246-250"];
m12_137 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="253-253"];
m12_138 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="254-254"];
m12_139 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="255-255"];
m12_136 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="252-252"];
m12_140 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="257-257"];
m12_141 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="258-258"];
m12_142 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="259-263"];
m12_144 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="266-266"];
m12_145 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="267-267"];
m12_146 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268"];
m12_143 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="265-265"];
m12_147 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_one()", span="229-229"];
m12_9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m12_210 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", span="370-370"];
m12_211 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var options = new SimpleOptionsWithArray()", span="374-374"];
m12_212 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser(new ParserSettings { ParsingCulture = new CultureInfo(''it-IT'') })", span="375-375"];
m12_213 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''-q'', ''1,2'', ''1,23'', ''1,234'' }, options)", span="376-376"];
m12_215 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="379-379"];
m12_214 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: result.Should().BeTrue()", span="378-378"];
m12_216 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_culture_specific_number()", span="370-370"];
m12_83 [cluster="Unk.BeFalse", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m12_8 [cluster="CommandLine.Parser.Parser()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m12_192 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", span="349-349"];
m12_193 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.Throws<ParserException>(\r\n                () => new CommandLine.Parser().ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray()))", span="351-352"];
m12_194 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_long_name()", span="349-349"];
m12_207 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="366-366"];
m12_188 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="345-345"];
m12_189 [cluster="lambda expression", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: new CommandLine.Parser().ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="345-345"];
m12_190 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="345-345"];
m12_195 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="352-352"];
m12_196 [cluster="lambda expression", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: new CommandLine.Parser().ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="352-352"];
m12_197 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="352-352"];
m12_201 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Entry lambda expression", span="359-359"];
m12_202 [cluster="lambda expression", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: new CommandLine.Parser().ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="359-359"];
m12_203 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="359-359"];
m12_208 [cluster="lambda expression", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: new CommandLine.Parser().ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="366-366"];
m12_209 [cluster="lambda expression", file="OptionArrayAttributeParsingFixture.cs", label="Exit lambda expression", span="366-366"];
m12_231 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", span="406-406"];
m12_232 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var options = new OptionsWithUIntArray()", span="408-408"];
m12_233 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var result = CommandLine.Parser.Default.ParseArguments(new string[] {\r\n                ''-s'', ''just a string'',\r\n                ''-o'', ''10'', ''20'', ''30'', ''40'',\r\n                ''-t'', ''11'', ''22'', ''33'', ''44'',\r\n                ''-b''\r\n            }, options)", span="409-414"];
m12_235 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.SomeStringValue.Should().Be(''just a string'')", span="417-417"];
m12_236 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="418-418"];
m12_237 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="419-419"];
m12_238 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options.SomeBooleanValue.Should().BeTrue()", span="420-420"];
m12_234 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="416-416"];
m12_239 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", span="406-406"];
m12_109 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="199-199"];
m12_110 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="201-201"];
m12_111 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var parser = new CommandLine.Parser()", span="202-202"];
m12_112 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''-y'' }, options)", span="203-203"];
m12_115 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result = parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="208-208"];
m12_113 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeFalse()", span="205-205"];
m12_114 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="207-207"];
m12_116 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result.Should().BeFalse()", span="210-210"];
m12_117 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="199-199"];
m12_34 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="87-87"];
m12_35 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="89-89"];
m12_36 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="90-90"];
m12_37 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="91-91"];
m12_39 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="94-94"];
m12_40 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Be(''after'')", span="95-95"];
m12_38 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="93-93"];
m12_41 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="87-87"];
m12_10 [cluster="Unk.Should", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m12_84 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", span="159-159"];
m12_85 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="161-161"];
m12_86 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="162-162"];
m12_87 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var result = parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="163-163"];
m12_89 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3 }, options.IntegerArrayValue)", span="166-166"];
m12_88 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="165-165"];
m12_90 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_integer_array_option_using_short_name()", span="159-159"];
m12_118 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", span="216-216"];
m12_119 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="218-218"];
m12_120 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="219-219"];
m12_121 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="220-220"];
m12_123 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="223-223"];
m12_122 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="222-222"];
m12_124 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", span="216-216"];
m12_42 [cluster="Unk.Be", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Be", span=""];
m12_148 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", span="272-272"];
m12_149 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="274-274"];
m12_150 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var parser = new CommandLine.Parser()", span="275-275"];
m12_151 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="276-281"];
m12_153 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="284-284"];
m12_154 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="285-285"];
m12_155 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="286-286"];
m12_156 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Be(''after'')", span="287-287"];
m12_152 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="283-283"];
m12_157 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="289-289"];
m12_158 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="290-290"];
m12_159 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="291-296"];
m12_161 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Be(''before'')", span="299-299"];
m12_162 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="300-300"];
m12_163 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="301-301"];
m12_164 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="302-302"];
m12_160 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="298-298"];
m12_165 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options = new SimpleOptionsWithArray()", span="304-304"];
m12_166 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="305-305"];
m12_167 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="306-311"];
m12_169 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="314-314"];
m12_170 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="315-315"];
m12_171 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options.StringValue.Should().Be(''near-the-center'')", span="316-316"];
m12_172 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="317-317"];
m12_168 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="313-313"];
m12_173 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options = new SimpleOptionsWithArray()", span="319-319"];
m12_174 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: parser = new CommandLine.Parser()", span="320-320"];
m12_175 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="321-328"];
m12_177 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().BeTrue()", span="331-331"];
m12_178 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="332-332"];
m12_179 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="333-333"];
m12_180 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.IntegerValue.Should().Be(1234)", span="334-334"];
m12_181 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="335-335"];
m12_182 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Be(''I'm really playing with the parser!'')", span="336-336"];
m12_176 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: result.Should().BeTrue()", span="330-330"];
m12_183 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_different_arrays_together__combination_two()", span="272-272"];
m12_184 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="342-342"];
m12_185 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Assert.Throws<ParserException>(\r\n                () => new CommandLine.Parser().ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray()))", span="344-345"];
m12_186 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="342-342"];
m12_13 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="54-54"];
m12_14 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var options = new SimpleOptionsWithArray()", span="56-56"];
m12_15 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var parser = new CommandLine.Parser()", span="57-57"];
m12_16 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="58-58"];
m12_18 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="61-61"];
m12_17 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="60-60"];
m12_19 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="54-54"];
m12_73 [cluster="CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="47-47"];
m12_72 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35"];
m12_74 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="142-142"];
m12_75 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="144-144"];
m12_76 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var parser = new CommandLine.Parser()", span="145-145"];
m12_77 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: var result = parser.ParseArguments(new string[] { ''-z'' }, options)", span="146-146"];
m12_80 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result = parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="151-151"];
m12_78 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeFalse()", span="148-148"];
m12_79 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: options = new SimpleOptionsWithArray()", span="150-150"];
m12_81 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result.Should().BeFalse()", span="153-153"];
m12_82 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="142-142"];
m12_20 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="65-65"];
m12_21 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var options = new SimpleOptionsWithArray()", span="67-67"];
m12_22 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var parser = new CommandLine.Parser()", span="68-68"];
m12_23 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var result = parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="69-69"];
m12_25 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="72-72"];
m12_24 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result.Should().BeTrue()", span="71-71"];
m12_26 [cluster="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="65-65"];
m12_240 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", span=""];
m13_82 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m13_68 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetDefault(object)", span="207-207"];
m13_69 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="0: _hasDefaultValue", span="209-209"];
m13_70 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="2: _property.SetValue(options, _defaultValue, null)", span="213-213"];
m13_71 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="2: Exception", span="215-215"];
m13_72 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="1: throw new ParserException(''Bad default value.'', e);", span="217-217"];
m13_73 [cluster="CommandLine.Parsing.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetDefault(object)", span="207-207"];
m13_47 [cluster="CommandLine.Parsing.PropertyWriter.WriteScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.WriteScalar(string, object)", span="48-48"];
m13_45 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsNullableType(System.Type)", span="242-242"];
m13_64 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m13_65 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs", label="1: _property.SetValue(options, value, null)", span="203-203"];
m13_66 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs", label="0: return ReceivedValue = true;", span="204-204"];
m13_67 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m13_61 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m13_35 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m13_63 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m13_46 [cluster="CommandLine.Parsing.PropertyWriter.WriteNullable(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.WriteNullable(string, object)", span="85-85"];
m13_44 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValueList(string, object)", span="222-222"];
m13_74 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="2: _property.SetValue(options, new List<string>(), null)", span="224-224"];
m13_75 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="225-225"];
m13_76 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="226-226"];
m13_78 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: fieldRef.Add(item)", span="229-229"];
m13_77 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: values", span="227-227"];
m13_79 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return ReceivedValue = true;", span="232-232"];
m13_80 [cluster="CommandLine.Parsing.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValueList(string, object)", span="222-222"];
m13_62 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m13_48 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m13_49 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: var elementType = _property.PropertyType.GetElementType()", span="182-182"];
m13_50 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: var array = Array.CreateInstance(elementType, values.Count)", span="183-183"];
m13_53 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: array.SetValue(Convert.ChangeType(values[i], elementType, _parsingCulture), i)", span="189-189"];
m13_54 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: _property.SetValue(options, array, null)", span="190-190"];
m13_51 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: int i = 0", span="185-185"];
m13_52 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: i < array.Length", span="185-185"];
m13_57 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: i++", span="185-185"];
m13_58 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: return ReceivedValue = true;", span="198-198"];
m13_55 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="2: FormatException", span="192-192"];
m13_56 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="3: return false;", span="194-194"];
m13_59 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m13_37 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m13_38 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: _attribute is OptionListAttribute", span="167-167"];
m13_39 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return SetValueList(value, options);", span="169-169"];
m13_41 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return ReceivedValue = _propertyWriter.WriteNullable(value, options);", span="174-174"];
m13_42 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return ReceivedValue = _propertyWriter.WriteScalar(value, options);", span="177-177"];
m13_40 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: ReflectionHelper.IsNullableType(_property.PropertyType)", span="172-172"];
m13_43 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m13_17 [cluster="CommandLine.Parsing.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="40-40"];
m13_36 [cluster="CommandLine.ParserException.ParserException(string, System.Exception)", file="OptionInfo.cs", label="Entry CommandLine.ParserException.ParserException(string, System.Exception)", span="60-60"];
m13_83 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m13_34 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m13_60 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m13_22 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m13_23 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", color=red, community=0, file="OptionInfo.cs", label="3: return _property.GetValue(target, null);", span="144-144"];
m13_24 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m13_16 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m13_81 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_18 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m13_19 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", color=red, community=0, file="OptionInfo.cs", label="2: _shortName = shortName", span="80-80"];
m13_20 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", color=red, community=0, file="OptionInfo.cs", label="0: _longName = longName", span="81-81"];
m13_21 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m13_26 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m13_27 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="0: object instance = null", span="149-149"];
m13_29 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="2: _property.SetValue(target, instance, null)", span="155-155"];
m13_28 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="2: instance = Activator.CreateInstance(_property.PropertyType)", span="153-153"];
m13_32 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="1: return instance;", span="162-162"];
m13_30 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="2: Exception", span="157-157"];
m13_31 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", color=red, community=0, file="OptionInfo.cs", label="1: throw new ParserException(SR.CommandLineParserException_CannotCreateInstanceForVerbCommand, e);", span="159-159"];
m13_33 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m13_25 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m13_0 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="49-49"];
m13_1 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="0: attribute == null", span="51-51"];
m13_3 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="1: property == null", span="56-56"];
m13_5 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _required = attribute.Required", span="61-61"];
m13_6 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: _shortName = attribute.ShortName", span="62-62"];
m13_7 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: _longName = attribute.LongName", span="63-63"];
m13_8 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="64-64"];
m13_9 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="3: _defaultValue = attribute.DefaultValue", span="65-65"];
m13_10 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: _hasDefaultValue = attribute.HasDefaultValue", span="66-66"];
m13_11 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="1: _attribute = attribute", span="67-67"];
m13_12 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _property = property", span="68-68"];
m13_13 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: _parsingCulture = parsingCulture", span="69-69"];
m13_2 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: throw new ArgumentNullException(''attribute'', SR.ArgumentNullException_AttributeCannotBeNull);", span="53-53"];
m13_4 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: throw new ArgumentNullException(''property'', SR.ArgumentNullException_PropertyCannotBeNull);", span="58-58"];
m13_14 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.cs", label="2: _propertyWriter = new PropertyWriter(_property, _parsingCulture)", span="70-70"];
m13_15 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", file="OptionInfo.cs", label="Exit CommandLine.Parsing.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo, System.Globalization.CultureInfo)", span="49-49"];
m13_84 [file="OptionInfo.cs", label="CommandLine.Parsing.OptionInfo", span=""];
m14_13 [cluster="Unk.Be", file="OptionListAttributeFixture.cs", label="Entry Unk.Be", span=""];
m14_11 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m14_14 [cluster="Unk.HaveCount", file="OptionListAttributeFixture.cs", label="Entry Unk.HaveCount", span=""];
m14_10 [cluster="CommandLine.Parser.Parser()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m14_9 [cluster="CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", span="4-4"];
m14_16 [cluster="lambda expression", file="OptionListAttributeFixture.cs", label="Entry lambda expression", span="30-30"];
m14_17 [cluster="lambda expression", color=red, community=0, file="OptionListAttributeFixture.cs", label="1: c == 3", span="30-30"];
m14_18 [cluster="lambda expression", file="OptionListAttributeFixture.cs", label="Exit lambda expression", span="30-30"];
m14_0 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionListAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="16-16"];
m14_1 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="2: var options = new OptionsWithImplicitLongName()", span="19-19"];
m14_2 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="2: var parser = new CommandLine.Parser()", span="20-20"];
m14_4 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="2: var result = parser.ParseArguments(arguments, options)", span="26-26"];
m14_6 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="1: options.Segments.Should().HaveCount(c => c == 3)", span="30-30"];
m14_7 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="1: options.Segments.Should().ContainInOrder(new[] { ''header.txt'', ''body.txt'', ''footer.txt'' })", span="31-31"];
m14_3 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="2: var arguments = new[] {\r\n                ''--segments'', ''header.txt:body.txt:footer.txt''\r\n            }", span="21-23"];
m14_5 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionListAttributeFixture.cs", label="1: result.Should().Be(true)", span="29-29"];
m14_8 [cluster="CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionListAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Attributes.OptionListAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="16-16"];
m14_12 [cluster="Unk.Should", file="OptionListAttributeFixture.cs", label="Entry Unk.Should", span=""];
m14_15 [cluster="Unk.ContainInOrder", file="OptionListAttributeFixture.cs", label="Entry Unk.ContainInOrder", span=""];
m15_5 [cluster="CommandLine.Parsing.OptionMap.OptionMap(int, CommandLine.ParserSettings)", file="OptionMapFixture.cs", label="Entry CommandLine.Parsing.OptionMap.OptionMap(int, CommandLine.ParserSettings)", span="46-46"];
m15_16 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.CreateOptionInfo()", span="77-77"];
m15_37 [cluster="Unk.BeSameAs", file="OptionMapFixture.cs", label="Entry Unk.BeSameAs", span=""];
m15_18 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="66-66"];
m15_19 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", color=red, community=0, file="OptionMapFixture.cs", label="0: var oa = new OptionAttribute(shortName, longName)", span="68-68"];
m15_20 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", color=red, community=0, file="OptionMapFixture.cs", label="1: var oi = oa.CreateOptionInfo()", span="69-69"];
m15_21 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", color=red, community=0, file="OptionMapFixture.cs", label="1: _optionMap[oa.UniqueName] = oi", span="70-70"];
m15_23 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", color=red, community=0, file="OptionMapFixture.cs", label="1: _names.Add(oa.UniqueName)", span="72-72"];
m15_22 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", color=red, community=0, file="OptionMapFixture.cs", label="0: _options.Add(oi)", span="71-71"];
m15_24 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="66-66"];
m15_0 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="50-50"];
m15_1 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=red, community=0, file="OptionMapFixture.cs", label="1: _optionMap = new OptionMap(capacity, new ParserSettings(true))", span="52-52"];
m15_2 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=red, community=0, file="OptionMapFixture.cs", label="0: _options = new List<OptionInfo>(capacity)", span="53-53"];
m15_3 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", color=red, community=0, file="OptionMapFixture.cs", label="0: _names = new List<string>(capacity)", span="54-54"];
m15_4 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="50-50"];
m15_8 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="57-57"];
m15_9 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", color=red, community=0, file="OptionMapFixture.cs", label="1: var oa = new OptionAttribute(longName)", span="59-59"];
m15_10 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", color=red, community=0, file="OptionMapFixture.cs", label="1: var oi = oa.CreateOptionInfo()", span="60-60"];
m15_11 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", color=red, community=0, file="OptionMapFixture.cs", label="0: _optionMap[oa.UniqueName] = oi", span="61-61"];
m15_13 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", color=red, community=0, file="OptionMapFixture.cs", label="0: _names.Add(oa.UniqueName)", span="63-63"];
m15_12 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", color=red, community=0, file="OptionMapFixture.cs", label="1: _options.Add(oi)", span="62-62"];
m15_14 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="57-57"];
m15_6 [cluster="CommandLine.ParserSettings.ParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="59-59"];
m15_38 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", span="121-121"];
m15_39 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: map == null", span="123-123"];
m15_47 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: map[attribute1.UniqueName] = option1", span="136-136"];
m15_48 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: map[attribute2.UniqueName] = option2", span="137-137"];
m15_49 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: map[attribute3.UniqueName] = option3", span="138-138"];
m15_50 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: optionCache != null", span="140-140"];
m15_51 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: optionCache[attribute1.UniqueName] = option1", span="142-142"];
m15_52 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: optionCache[attribute1.UniqueName] = option2", span="143-143"];
m15_53 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="3: optionCache[attribute2.UniqueName]= option3", span="144-144"];
m15_54 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: return map;", span="147-147"];
m15_40 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: map = new OptionMap (3, new ParserSettings (true))", span="125-125"];
m15_41 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: var attribute1 = new OptionAttribute('p', ''pretend'')", span="128-128"];
m15_42 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: var attribute2 = new OptionAttribute(''newuse'')", span="129-129"];
m15_44 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: var option1 = attribute1.CreateOptionInfo()", span="132-132"];
m15_43 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: var attribute3 = new OptionAttribute('D', null)", span="130-130"];
m15_45 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="0: var option2 = attribute2.CreateOptionInfo()", span="133-133"];
m15_46 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", color=red, community=0, file="OptionMapFixture.cs", label="1: var option3 = attribute3.CreateOptionInfo()", span="134-134"];
m15_55 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.CreateMap(ref CommandLine.Parsing.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>)", span="121-121"];
m15_25 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="68-68"];
m15_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m15_26 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", span="93-93"];
m15_27 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="1: var omBuilder = new OptionMapBuilder(3)", span="95-95"];
m15_28 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="0: omBuilder.AppendOption('p', ''pretend'')", span="96-96"];
m15_29 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="1: omBuilder.AppendOption(''newuse'')", span="97-97"];
m15_30 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="0: omBuilder.AppendOption('D', null)", span="98-98"];
m15_31 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="2: var optionMap = omBuilder.OptionMap", span="100-100"];
m15_32 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="2: omBuilder.Options[0].Should().BeSameAs(optionMap[omBuilder.Names[0]])", span="102-102"];
m15_33 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="2: omBuilder.Options[1].Should().BeSameAs(optionMap[omBuilder.Names[1]])", span="103-103"];
m15_34 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="0: omBuilder.Options[2].Should().BeSameAs(optionMap[omBuilder.Names[2]])", span="104-104"];
m15_35 [cluster="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.Manage_options()", span="93-93"];
m15_17 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_36 [cluster="Unk.Should", file="OptionMapFixture.cs", label="Entry Unk.Should", span=""];
m15_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="58-58"];
m15_56 [file="OptionMapFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", span=""];
m16_4 [cluster="lambda expression", file="Options.cs", label="Entry lambda expression", span="29-29"];
m16_5 [cluster="lambda expression", color=red, community=0, file="Options.cs", label="3: HelpText.DefaultParsingErrorsHandler(this, current)", span="29-29"];
m16_6 [cluster="lambda expression", file="Options.cs", label="Exit lambda expression", span="29-29"];
m16_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="Options.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="278-278"];
m16_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="Options.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="338-338"];
m16_0 [cluster="CSharpTemplate.Options.GetUsage()", file="Options.cs", label="Entry CSharpTemplate.Options.GetUsage()", span="27-27"];
m16_1 [cluster="CSharpTemplate.Options.GetUsage()", color=red, community=0, file="Options.cs", label="3: return HelpText.AutoBuild(this, current => HelpText.DefaultParsingErrorsHandler(this, current));", span="29-29"];
m16_2 [cluster="CSharpTemplate.Options.GetUsage()", file="Options.cs", label="Exit CSharpTemplate.Options.GetUsage()", span="27-27"];
m16_8 [file="Options.cs", label="CSharpTemplate.Options", span=""];
m18_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="101-101"];
m18_34 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="0: factory == null", span="103-103"];
m18_35 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="1: throw new ArgumentNullException(''factory'');", span="103-103"];
m18_36 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="1: args == null", span="104-104"];
m18_37 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="1: throw new ArgumentNullException(''args'');", span="104-104"];
m18_38 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", color=green, community=0, file="Parser.cs", label="0: return MakeParserResult(\r\n                () => InstanceBuilder.Build(factory, args, this.settings.NameComparer, this.settings.ParsingCulture),\r\n                settings);", span="106-108"];
m18_39 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="101-101"];
m18_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="35-35"];
m18_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="1: configuration == null", span="37-37"];
m18_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="0: throw new ArgumentNullException(''configuration'');", span="37-37"];
m18_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="0: this.settings = new ParserSettings()", span="39-39"];
m18_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="1: configuration(this.settings)", span="40-40"];
m18_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=green, community=0, file="Parser.cs", label="0: this.settings.Consumed = true", span="41-41"];
m18_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="35-35"];
m18_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="53-53"];
m18_21 [cluster="CommandLine.Parser.~Parser()", color=green, community=0, file="Parser.cs", label="3: Dispose(false)", span="55-55"];
m18_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="53-53"];
m18_45 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="123-123"];
m18_46 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: args == null", span="125-125"];
m18_47 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: throw new ArgumentNullException(''args'');", span="125-125"];
m18_48 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: types == null", span="126-126"];
m18_49 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: throw new ArgumentNullException(''types'');", span="126-126"];
m18_50 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="1: types.Length == 0", span="127-127"];
m18_51 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: throw new ArgumentOutOfRangeException(''types'');", span="127-127"];
m18_52 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", color=green, community=0, file="Parser.cs", label="2: return MakeParserResult(\r\n                () => InstanceChooser.Choose(types, args, this.settings.NameComparer, this.settings.ParsingCulture),\r\n                settings);", span="129-131"];
m18_53 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="123-123"];
m18_33 [cluster="T.cstr", file="Parser.cs", label="Entry T.cstr", span=""];
m18_16 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m18_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="44-44"];
m18_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="3: this.settings = settings", span="46-46"];
m18_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="0: this.settings.Consumed = true", span="47-47"];
m18_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="44-44"];
m18_54 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m18_75 [cluster="Unk.Where", file="Parser.cs", label="Entry Unk.Where", span=""];
m18_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="24-24"];
m18_5 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="24-24"];
m18_6 [cluster="CommandLine.Parser.Parser()", color=green, community=0, file="Parser.cs", label="1: this.settings = new ParserSettings { Consumed = true }", span="26-26"];
m18_7 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="24-24"];
m18_66 [cluster="System.Func<TResult>.Invoke()", file="Parser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m18_68 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="160-160"];
m18_79 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="2: parserResult.Errors.Any()", span="162-162"];
m18_80 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="2: helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="164-164"];
m18_81 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=green, community=0, file="Parser.cs", label="2: return parserResult;", span="167-167"];
m18_82 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="160-160"];
m18_83 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_86 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="164-164"];
m18_1 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="1: new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="19-19"];
m18_0 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="19-19"];
m18_2 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="19-19"];
m18_30 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="88-88"];
m18_31 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="1: new T()", span="88-88"];
m18_32 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="88-88"];
m18_41 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="107-107"];
m18_42 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: InstanceBuilder.Build(factory, args, this.settings.NameComparer, this.settings.ParsingCulture)", span="107-107"];
m18_43 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="107-107"];
m18_55 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="130-130"];
m18_56 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="3: InstanceChooser.Choose(types, args, this.settings.NameComparer, this.settings.ParsingCulture)", span="130-130"];
m18_57 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="130-130"];
m18_72 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="156-156"];
m18_73 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="156-156"];
m18_74 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="156-156"];
m18_76 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="156-156"];
m18_77 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: e.Tag != ErrorType.UnknownOptionError", span="156-156"];
m18_78 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="156-156"];
m18_87 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="3: writer.Write(HelpText.AutoBuild(parserResult))", span="164-164"];
m18_88 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="164-164"];
m18_84 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m18_67 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="153-153"];
m18_69 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", color=green, community=0, file="Parser.cs", label="1: return ignoreUnknownArguments\r\n                       ? parserResult.MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                       : parserResult;", span="155-157"];
m18_70 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="153-153"];
m18_24 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(string[])", span="83-83"];
m18_25 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="1: args == null", span="86-86"];
m18_26 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="1: throw new ArgumentNullException(''args'');", span="86-86"];
m18_27 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", color=green, community=0, file="Parser.cs", label="1: return ParseArguments(() => new T(), args);", span="88-88"];
m18_28 [cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(string[])", span="83-83"];
m18_71 [cluster="Unk.MapErrors", file="Parser.cs", label="Entry Unk.MapErrors", span=""];
m18_89 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="242-242"];
m18_58 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m18_85 [cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="111-111"];
m18_63 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m18_98 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="106-106"];
m18_40 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="144-144"];
m18_64 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="1: return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="146-150"];
m18_65 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="144-144"];
m18_59 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="137-137"];
m18_60 [cluster="CommandLine.Parser.Dispose()", color=green, community=0, file="Parser.cs", label="3: Dispose(true)", span="139-139"];
m18_61 [cluster="CommandLine.Parser.Dispose()", color=green, community=0, file="Parser.cs", label="3: GC.SuppressFinalize(this)", span="141-141"];
m18_62 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="137-137"];
m18_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="170-170"];
m18_91 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: this.disposed", span="172-172"];
m18_92 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: return;", span="174-174"];
m18_93 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: disposing", span="177-177"];
m18_94 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: settings != null", span="179-179"];
m18_95 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: settings.Dispose()", span="181-181"];
m18_96 [cluster="CommandLine.Parser.Dispose(bool)", color=green, community=0, file="Parser.cs", label="3: this.disposed = true", span="184-184"];
m18_97 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="170-170"];
m18_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_90 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m18_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m18_99 [file="Parser.cs", label="CommandLine.Parser", span=""];
m18_100 [file="Parser.cs", label="System.Func<T>", span=""];
m18_101 [file="Parser.cs", label="string[]", span=""];
m18_102 [file="Parser.cs", label="string[]", span=""];
m18_103 [file="Parser.cs", label="params System.Type[]", span=""];
m18_104 [file="Parser.cs", label="CommandLine.ParserResult<T>", span=""];
m19_12 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m19_9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m19_0 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Entry CSharpTemplate.Program.Main(string[])", span="18-18"];
m19_1 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="3: var options = new Options()", span="20-20"];
m19_2 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="3: !CommandLine.Parser.Default.ParseArguments(args, options)", span="22-22"];
m19_4 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="2: Console.WriteLine(''t|ext: '' + options.TextValue)", span="27-27"];
m19_5 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="2: Console.WriteLine(''n|umeric: '' + options.NumericValue)", span="28-28"];
m19_6 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="1: Console.WriteLine(''b|ool: '' + options.BooleanValue.ToString().ToLowerInvariant())", span="29-29"];
m19_3 [cluster="CSharpTemplate.Program.Main(string[])", color=red, community=0, file="Program.cs", label="3: Environment.Exit(CommandLine.Parser.DefaultExitCodeFail)", span="24-24"];
m19_7 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Exit CSharpTemplate.Program.Main(string[])", span="18-18"];
m19_13 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m19_8 [cluster="CSharpTemplate.Options.Options()", file="Program.cs", label="Entry CSharpTemplate.Options.Options()", span="15-15"];
m19_10 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m19_11 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m20_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionCache.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_3 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Entry CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="42-42"];
m20_0 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Entry CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="37-37"];
m20_1 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", color=red, community=0, file="ReflectionCache.cs", label="0: Singleton = new ReflectionCache()", span="39-39"];
m20_2 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Exit CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="37-37"];
m20_4 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", color=red, community=0, file="ReflectionCache.cs", label="3: _cache = new Dictionary<Pair<Type, object>, WeakReference>()", span="44-44"];
m20_5 [cluster="CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Exit CommandLine.Infrastructure.ReflectionCache.ReflectionCache()", span="42-42"];
m20_7 [file="ReflectionCache.cs", label="CommandLine.Infrastructure.ReflectionCache", span=""];
m21_8 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", span="22-22"];
m21_9 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: type == null", span="24-24"];
m21_10 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: throw new ArgumentNullException(''type'');", span="24-24"];
m21_11 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: return type == typeof(bool)\r\n                       ? DescriptorType.Boolean\r\n                       : type == typeof(string)\r\n                             ? DescriptorType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? DescriptorType.Sequence\r\n                                   : DescriptorType.Scalar;", span="26-32"];
m21_12 [cluster="CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToDescriptor(System.Type)", span="22-22"];
m21_5 [cluster="Unk.>", file="ReflectionExtensions.cs", label="Entry Unk.>", span=""];
m21_43 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m21_6 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m21_23 [cluster="Unk.Where", file="ReflectionExtensions.cs", label="Entry Unk.Where", span=""];
m21_29 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="55-55"];
m21_30 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="57-57"];
m21_31 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: property.SetValue(instance, value, null)", span="61-61"];
m21_33 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: fail(e)", span="65-65"];
m21_35 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: fail(e)", span="69-69"];
m21_37 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: fail(e)", span="73-73"];
m21_39 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: fail(e)", span="77-77"];
m21_32 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: TargetException", span="63-63"];
m21_34 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: TargetParameterCountException", span="67-67"];
m21_36 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: MethodAccessException", span="71-71"];
m21_38 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="2: TargetInvocationException", span="75-75"];
m21_40 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="0: return instance;", span="80-80"];
m21_41 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="55-55"];
m21_47 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="ReflectionExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m21_53 [cluster="System.Array.CreateInstance(System.Type, int)", file="ReflectionExtensions.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m21_7 [cluster="Unk.selector", file="ReflectionExtensions.cs", label="Entry Unk.selector", span=""];
m21_44 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="57-57"];
m21_25 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="51-52"];
m21_26 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="1: specProp.Property.SetValue(current, selector(specProp))", span="52-52"];
m21_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="51-52"];
m21_45 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="1: throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="57-57"];
m21_46 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="57-57"];
m21_42 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m21_14 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m21_3 [cluster="System.Type.GetProperties()", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m21_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m21_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", color=green, community=0, file="ReflectionExtensions.cs", label="3: return from pi in type.GetProperties()\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                        attrs.OfType<OptionAttribute>().Any() ||\r\n                        attrs.OfType<ValueAttribute>().Any()\r\n                   select selector(pi);", span="14-19"];
m21_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m21_4 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m21_24 [cluster="Unk.Aggregate", file="ReflectionExtensions.cs", label="Entry Unk.Aggregate", span=""];
m21_48 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="83-83"];
m21_49 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: type == null", span="85-85"];
m21_50 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: throw new ArgumentNullException(''type'');", span="85-85"];
m21_51 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: return Array.CreateInstance(type, 0);", span="87-87"];
m21_52 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="83-83"];
m21_20 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42"];
m21_21 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", color=green, community=0, file="ReflectionExtensions.cs", label="3: return specProps.Where(predicate)\r\n                .Aggregate(\r\n                    instance,\r\n                    (current, specProp) =>\r\n                        specProp.Property.SetValue(current, selector(specProp)));", span="48-52"];
m21_22 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42"];
m21_28 [cluster="Unk.SetValue", file="ReflectionExtensions.cs", label="Entry Unk.SetValue", span=""];
m21_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_15 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="35-35"];
m21_16 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="0: type == null", span="37-37"];
m21_17 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: throw new ArgumentNullException(''type'');", span="37-37"];
m21_18 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", color=green, community=0, file="ReflectionExtensions.cs", label="1: return type == typeof(string) || !type.IsArray && !typeof(IEnumerable).IsAssignableFrom(type);", span="39-39"];
m21_19 [cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="35-35"];
m21_54 [file="ReflectionExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m22_9 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m22_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m22_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="3: var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="12-12"];
m22_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="3: var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="13-13"];
m22_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="ReflectionHelper.cs", label="2: return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="15-17"];
m22_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="9-9"];
m22_8 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m22_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m22_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m22_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m22_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m22_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m22_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", color=green, community=0, file="ReflectionHelper.cs", label="0: var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="28-28"];
m22_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", color=green, community=0, file="ReflectionHelper.cs", label="2: return assembly.GetName().Version.ToStringInvariant();", span="29-29"];
m22_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="26-26"];
m22_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="14-14"];
m22_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m22_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", color=green, community=0, file="ReflectionHelper.cs", label="2: var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="22-22"];
m22_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", color=green, community=0, file="ReflectionHelper.cs", label="1: return assembly.GetName().Name;", span="23-23"];
m22_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="20-20"];
m23_25 [cluster="Unk.Be", file="ReflectionHelperFixture.cs", label="Entry Unk.Be", span=""];
m23_39 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", span="86-86"];
m23_41 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", span="128-128"];
m23_42 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: var list = ReflectionHelper.RetrievePropertyAttributeList<MockWithValueAttribute>(new AnotherMockObject())", span="130-130"];
m23_43 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: list.Should().NotBeNull()", span="132-132"];
m23_44 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: list.Should().HaveCount(n => n == 3)", span="133-133"];
m23_45 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: list[0].StringValue.Should().Be(''applied to X'')", span="134-134"];
m23_46 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: list[1].StringValue.Should().Be(''applied to Y'')", span="135-135"];
m23_47 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: list[2].StringValue.Should().Be(''applied to Z'')", span="136-136"];
m23_48 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_attribute_list()", span="128-128"];
m23_10 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", span="98-98"];
m23_11 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="1: var target = new MockObject()", span="100-100"];
m23_12 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: var list = ReflectionHelper.RetrievePropertyList<MockAttribute>(target)", span="101-101"];
m23_17 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: var anotherList = ReflectionHelper.RetrievePropertyList<AnotherMockAttribute>(target)", span="109-109"];
m23_13 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: list.Should().HaveCount(n => n == 2)", span="103-103"];
m23_14 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: list[0].Left.Name.Should().Be(''StringField'')", span="104-104"];
m23_15 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: list[1].Left.Name.Should().Be(''BooleanField'')", span="105-105"];
m23_16 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: PrintFieldList<MockAttribute>(list)", span="107-107"];
m23_18 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="1: anotherList.Should().HaveCount(n => n == 1)", span="111-111"];
m23_19 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: anotherList[0].Left.Name.Should().Be(''IntField'')", span="112-112"];
m23_20 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: PrintFieldList<AnotherMockAttribute>(anotherList)", span="114-114"];
m23_21 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_fields_by_attribute()", span="98-98"];
m23_24 [cluster="Unk.HaveCount", file="ReflectionHelperFixture.cs", label="Entry Unk.HaveCount", span=""];
m23_33 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", span="118-118"];
m23_34 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="1: var target = new MockObject()", span="120-120"];
m23_35 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: var pair = ReflectionHelper.RetrieveMethod<MockAttribute>(target)", span="121-121"];
m23_36 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="3: pair.Should().NotBeNull()", span="123-123"];
m23_37 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: pair.Left.Name.Should().Be(''DoNothing'')", span="124-124"];
m23_38 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.Get_method_by_attribute()", span="118-118"];
m23_49 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyAttributeList<TAttribute>(object)", span="150-150"];
m23_57 [cluster="object.GetType()", file="ReflectionHelperFixture.cs", label="Entry object.GetType()", span="0-0"];
m23_0 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", span="57-57"];
m23_1 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: IntField = 0", span="59-59"];
m23_2 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.MockObject()", span="57-57"];
m23_5 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", span="79-79"];
m23_6 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: X = 0", span="81-81"];
m23_7 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: Y = 0", span="82-82"];
m23_8 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: Z = 0", span="83-83"];
m23_9 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject.AnotherMockObject()", span="79-79"];
m23_50 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="133-133"];
m23_27 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="103-103"];
m23_30 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Entry lambda expression", span="111-111"];
m23_28 [cluster="lambda expression", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: n == 2", span="103-103"];
m23_29 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="103-103"];
m23_31 [cluster="lambda expression", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: n == 1", span="111-111"];
m23_32 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="111-111"];
m23_51 [cluster="lambda expression", color=red, community=0, file="ReflectionHelperFixture.cs", label="0: n == 3", span="133-133"];
m23_52 [cluster="lambda expression", file="ReflectionHelperFixture.cs", label="Exit lambda expression", span="133-133"];
m23_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m23_26 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="139-139"];
m23_53 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: Console.WriteLine(''Attribute: {0}'', list[0].Right.GetType())", span="142-142"];
m23_54 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: list", span="143-143"];
m23_55 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", color=red, community=0, file="ReflectionHelperFixture.cs", label="2: Console.WriteLine(''\tField: {0}'', pair.Left.Name)", span="145-145"];
m23_56 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="139-139"];
m23_58 [cluster="System.Console.WriteLine(string, object)", file="ReflectionHelperFixture.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m23_23 [cluster="Unk.Should", file="ReflectionHelperFixture.cs", label="Entry Unk.Should", span=""];
m23_40 [cluster="Unk.NotBeNull", file="ReflectionHelperFixture.cs", label="Entry Unk.NotBeNull", span=""];
m23_3 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", file="ReflectionHelperFixture.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", span="72-72"];
m23_4 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", file="ReflectionHelperFixture.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject.DoNothing()", span="72-72"];
m23_59 [file="ReflectionHelperFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject", span=""];
m23_60 [file="ReflectionHelperFixture.cs", label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject", span=""];
m25_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="264-264"];
m25_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m25_1 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", color=red, community=0, file="SimpleOptionsForAutoBuid.cs", label="3: return HelpText.AutoBuild(this);", span="14-14"];
m25_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m25_4 [file="SimpleOptionsForAutoBuid.cs", label="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid", span=""];
m26_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m26_1 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", color=red, community=0, file="SimpleOptionsWithBadOptionArray.cs", label="1: BadIntegerValue = 0", span="39-39"];
m26_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m26_3 [file="SimpleOptionsWithBadOptionArray.cs", label="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray", span=""];
m27_0 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m27_1 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", color=red, community=0, file="SimpleOptionsWithEnum.cs", label="1: FileAccess = FileAccess.Read", span="40-40"];
m27_2 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Exit CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m27_3 [file="SimpleOptionsWithEnum.cs", label="CommandLine.Tests.Fakes.SimpleOptionsWithEnum", span=""];
m30_13 [cluster="Unk.Be", file="SingletonFixture.cs", label="Entry Unk.Be", span=""];
m30_12 [cluster="Unk.BeTrue", file="SingletonFixture.cs", label="Entry Unk.BeTrue", span=""];
m30_14 [cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m30_10 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="SingletonFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m30_20 [cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="33-33"];
m30_9 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
m30_15 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56"];
m30_16 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=red, community=0, file="SingletonFixture.cs", label="2: var options = new OptionsWithMultipleSet()", span="58-58"];
m30_17 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=red, community=0, file="SingletonFixture.cs", label="2: bool result = CommandLine.Parser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="59-60"];
m30_18 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=red, community=0, file="SingletonFixture.cs", label="0: result.Should().BeTrue()", span="62-62"];
m30_19 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56"];
m30_0 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", span="42-42"];
m30_1 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="3: var options = new SimpleOptions()", span="44-44"];
m30_2 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="2: bool result = CommandLine.Parser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="45-46"];
m30_4 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="2: options.StringValue.Should().Be(''another string'')", span="49-49"];
m30_5 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="1: options.IntegerValue.Should().Be(100)", span="50-50"];
m30_6 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="0: options.BooleanValue.Should().BeTrue()", span="51-51"];
m30_7 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="1: Console.WriteLine(options)", span="52-52"];
m30_3 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", color=red, community=0, file="SingletonFixture.cs", label="2: result.Should().BeTrue()", span="48-48"];
m30_8 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Parse_string_integer_bool_options()", span="42-42"];
m30_21 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66"];
m30_22 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", color=red, community=0, file="SingletonFixture.cs", label="3: CommandLine.Parser.Default.Settings.ParsingCulture.Should().Be(CultureInfo.InvariantCulture)", span="68-68"];
m30_23 [cluster="CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66"];
m30_11 [cluster="Unk.Should", file="SingletonFixture.cs", label="Entry Unk.Should", span=""];
m31_66 [cluster="Unk.SingleOrDefault", file="Specification.cs", label="Entry Unk.SingleOrDefault", span=""];
m31_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="100-100"];
m31_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="102-102"];
m31_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="100-100"];
m31_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m31_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m31_45 [cluster="Unk.>", file="Specification.cs", label="Entry Unk.>", span=""];
m31_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m31_49 [cluster="Unk.MakeNotParsed", file="Specification.cs", label="Entry Unk.MakeNotParsed", span=""];
m31_44 [cluster="Unk.Any", file="Specification.cs", label="Entry Unk.Any", span=""];
m31_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m31_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="Specification.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m31_79 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Specification.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m31_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="Specification.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m31_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Specification.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m31_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m31_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="Specification.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
m31_40 [cluster="System.StringComparer.Equals(string, string)", file="Specification.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m31_56 [cluster="Unk.Single", file="Specification.cs", label="Entry Unk.Single", span=""];
m31_67 [cluster="Unk.ToMaybe", file="Specification.cs", label="Entry Unk.ToMaybe", span=""];
m31_41 [cluster="string.Concat(string, string)", file="Specification.cs", label="Entry string.Concat(string, string)", span="0-0"];
m31_73 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="95-95"];
m31_4 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="22-27"];
m31_5 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m31_6 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-25"];
m31_11 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="24-24"];
m31_12 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m31_13 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="24-24"];
m31_7 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="2: return explodedTokens;", span="26-26"];
m31_15 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="25-25"];
m31_16 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="25-25"];
m31_17 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="25-25"];
m31_8 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="22-27"];
m31_38 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="2: nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="51-52"];
m31_37 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="50-52"];
m31_39 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="50-52"];
m31_50 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="73-73"];
m31_53 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="76-77"];
m31_61 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="83-83"];
m31_51 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="2: nameComparer.Equals(a.Item1.Name, arguments.First())", span="73-73"];
m31_52 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="73-73"];
m31_54 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="77-77"];
m31_55 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="76-77"];
m31_58 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="77-77"];
m31_59 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="2: nameComparer.Equals(v.Item1.Name, arguments.First())", span="77-77"];
m31_60 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="77-77"];
m31_62 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="1: v.Item2", span="83-83"];
m31_63 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="83-83"];
m31_71 [cluster="lambda expression", file="Specification.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="92-92"];
m31_70 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="92-92"];
m31_72 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="92-92"];
m31_74 [cluster="lambda expression", file="Specification.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="95-95"];
m31_75 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="95-95"];
m31_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m31_80 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="Specification.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m31_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m31_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="65-65"];
m31_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="3: return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="73-83"];
m31_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="65-65"];
m31_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86"];
m31_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="91-97"];
m31_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="86-86"];
m31_47 [cluster="Unk.Select", file="Specification.cs", label="Entry Unk.Select", span=""];
m31_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Specification.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m31_69 [cluster="Unk.Return", file="Specification.cs", label="Entry Unk.Return", span=""];
m31_57 [cluster="Unk.AutoDefault", file="Specification.cs", label="Entry Unk.AutoDefault", span=""];
m31_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35"];
m31_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", span="56-62"];
m31_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: arguments.Empty()", span="43-43"];
m31_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: return MakeNotParsed(types, new NoVerbSelectedError());", span="45-45"];
m31_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: var firstArg = arguments.First()", span="48-48"];
m31_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="50-52"];
m31_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: var verbs = Verb.SelectFromTypes(types)", span="54-54"];
m31_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35"];
m31_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m31_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="Specification.cs", label="1: return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture,\r\n                nonFatalErrors);", span="21-32"];
m31_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Specification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m31_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m31_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Specification.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m31_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m31_76 [cluster="HelpVerbRequestedError.cstr", file="Specification.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m31_81 [file="Specification.cs", label="System.StringComparer", span=""];
m31_82 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m31_83 [file="Specification.cs", label="System.StringComparer", span=""];
m31_84 [file="Specification.cs", label=firstArg, span=""];
m31_85 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m31_86 [file="Specification.cs", label="System.StringComparer", span=""];
m31_87 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m31_88 [file="Specification.cs", label=string, span=""];
m31_89 [file="Specification.cs", label="System.StringComparer", span=""];
m32_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_0 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m32_1 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="1: this.property = property", span="16-16"];
m32_2 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="0: this.specification = specification", span="17-17"];
m32_3 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="3: this.value = value", span="18-18"];
m32_4 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="14-14"];
m32_5 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m32_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="0: specification == null", span="23-23"];
m32_7 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="3: throw new ArgumentNullException(''specification'');", span="23-23"];
m32_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="2: property == null", span="24-24"];
m32_9 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="3: throw new ArgumentNullException(''property'');", span="24-24"];
m32_10 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="2: value == null", span="25-25"];
m32_11 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="3: throw new ArgumentNullException(''value'');", span="25-25"];
m32_12 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationProperty.cs", label="3: return new SpecificationProperty(specification, property, value);", span="27-27"];
m32_13 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m32_15 [file="SpecificationProperty.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m33_30 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m33_31 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: specProps == null", span="49-49"];
m33_32 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: throw new ArgumentNullException(''specProps'');", span="49-49"];
m33_33 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: return rules.SelectMany(rule => rule(specProps));", span="51-51"];
m33_34 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44"];
m33_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m33_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: specProp == null", span="13-13"];
m33_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: throw new ArgumentNullException(''specProp'');", span="13-13"];
m33_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: newSpecification == null", span="14-14"];
m33_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: throw new ArgumentNullException(''newSpecification'');", span="14-14"];
m33_5 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="16-16"];
m33_6 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m33_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m33_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: specProp == null", span="29-29"];
m33_18 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="0: throw new ArgumentNullException(''specProp'');", span="29-29"];
m33_19 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: specProp.Specification.ConversionType.ToDescriptor()", span="31-31"];
m33_20 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="0: DescriptorType.Sequence", span="33-33"];
m33_22 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="1: return specProp.Property.PropertyType;", span="40-40"];
m33_21 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="3: return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="34-38"];
m33_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27"];
m33_29 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m33_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m33_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m33_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: specProp == null", span="21-21"];
m33_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: throw new ArgumentNullException(''specProp'');", span="21-21"];
m33_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: newValue == null", span="22-22"];
m33_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: throw new ArgumentNullException(''newValue'');", span="22-22"];
m33_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="24-24"];
m33_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19"];
m33_25 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m33_27 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m33_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m33_36 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="51-51"];
m33_37 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyExtensions.cs", label="2: rule(specProps)", span="51-51"];
m33_38 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="51-51"];
m33_24 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m33_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_28 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m33_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m33_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m33_40 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m34_0 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m34_1 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=green, community=0, file="SpecificationPropertyRules.cs", label="0: return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="20-29"];
m34_2 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m34_19 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152"];
m34_48 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m34_49 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="48-60"];
m34_50 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46"];
m34_46 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m34_38 [cluster="Unk.Any", file="SpecificationPropertyRules.cs", label="Entry Unk.Any", span=""];
m34_10 [cluster="Unk.Where", file="SpecificationPropertyRules.cs", label="Entry Unk.Where", span=""];
m34_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m34_47 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m34_61 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m34_42 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147"];
m34_65 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m34_62 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="56-57"];
m34_4 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="1: var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust())", span="22-22"];
m34_3 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="20-29"];
m34_5 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="0: var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="23-23"];
m34_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="22-22"];
m34_7 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="0: return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));", span="26-26"];
m34_6 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="1: groups.Count() > 1", span="24-24"];
m34_20 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="23-23"];
m34_9 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="20-29"];
m34_23 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="26-26"];
m34_8 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="0: return Enumerable.Empty<Nothing<Error>>();", span="28-28"];
m34_16 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="2: sp.Specification.IsOption() && sp.Value.IsJust()", span="22-22"];
m34_17 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="22-22"];
m34_21 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="1: ((OptionSpecification)g.Specification).SetName", span="23-23"];
m34_22 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="23-23"];
m34_24 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="1: Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="26-26"];
m34_25 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="26-26"];
m34_33 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required)", span="36-36"];
m34_32 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="34-43"];
m34_34 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="0: options.Any()", span="37-37"];
m34_39 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="36-36"];
m34_35 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="39-40"];
m34_36 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return Enumerable.Empty<Nothing<Error>>();", span="42-42"];
m34_37 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="34-43"];
m34_43 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="39-40"];
m34_40 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="1: sp.Value.IsNothing() && sp.Specification.Required", span="36-36"];
m34_41 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="36-36"];
m34_44 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="2: Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="39-40"];
m34_45 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="39-40"];
m34_52 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)", span="50-53"];
m34_51 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="48-60"];
m34_53 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: options.Any()", span="54-54"];
m34_57 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="51-53"];
m34_54 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="56-57"];
m34_55 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return Enumerable.Empty<Nothing<Error>>();", span="59-59"];
m34_56 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="48-60"];
m34_58 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min", span="51-53"];
m34_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="51-53"];
m34_63 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="56-57"];
m34_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="56-57"];
m34_29 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m34_30 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="SpecificationPropertyRules.cs", label="3: return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="34-43"];
m34_31 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32"];
m34_28 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m34_13 [cluster="Unk.Select", file="SpecificationPropertyRules.cs", label="Entry Unk.Select", span=""];
m34_60 [cluster="System.Type.ToDescriptor()", file="SpecificationPropertyRules.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m34_26 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m34_18 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m34_27 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m34_11 [cluster="Unk.GroupBy", file="SpecificationPropertyRules.cs", label="Entry Unk.GroupBy", span=""];
m34_12 [cluster="Unk.Count", file="SpecificationPropertyRules.cs", label="Entry Unk.Count", span=""];
m35_18 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m35_19 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", color=green, community=0, file="StatePair.cs", label="3: return this.Value.GetHashCode() ^ this.Errors.GetHashCode();", span="45-45"];
m35_20 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m35_17 [cluster="object.Equals(object)", file="StatePair.cs", label="Entry object.Equals(object)", span="0-0"];
m35_10 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m35_11 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="2: var other = obj as StatePair<T>", span="34-34"];
m35_12 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="2: other != null", span="35-35"];
m35_13 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="2: return this.Equals(other);", span="37-37"];
m35_14 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=green, community=0, file="StatePair.cs", label="2: return base.Equals(obj);", span="40-40"];
m35_15 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m35_0 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m35_1 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: object.Equals(value, default(T))", span="15-15"];
m35_2 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: throw new ArgumentNullException(''value'');", span="15-15"];
m35_3 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="0: errors == null", span="16-16"];
m35_4 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: throw new ArgumentNullException(''errors'');", span="16-16"];
m35_5 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: this.value = value", span="18-18"];
m35_6 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: this.errors = errors", span="19-19"];
m35_7 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m35_26 [cluster="Unk.SequenceEqual", file="StatePair.cs", label="Entry Unk.SequenceEqual", span=""];
m35_8 [cluster="object.Equals(object, object)", file="StatePair.cs", label="Entry object.Equals(object, object)", span="0-0"];
m35_16 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m35_22 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="2: other == null", span="50-50"];
m35_23 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="2: return false;", span="52-52"];
m35_24 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", color=green, community=0, file="StatePair.cs", label="0: return this.Value.Equals(other.Value) && this.Errors.SequenceEqual(other.Errors);", span="55-55"];
m35_25 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m35_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StatePair.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m35_21 [cluster="object.GetHashCode()", file="StatePair.cs", label="Entry object.GetHashCode()", span="0-0"];
m35_27 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m35_28 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: object.Equals(instance, default(T))", span="63-63"];
m35_29 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: throw new ArgumentNullException(''instance'');", span="63-63"];
m35_30 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: errors == null", span="64-64"];
m35_31 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: throw new ArgumentNullException(''errors'');", span="64-64"];
m35_32 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", color=green, community=0, file="StatePair.cs", label="3: return new StatePair<T>(instance, errors);", span="66-66"];
m35_33 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs", label="Exit CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m35_34 [file="StatePair.cs", label="CommandLine.Core.StatePair<T>", span=""];
m36_21 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TypeLookup.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m36_23 [cluster="Unk.Create", file="TypeLookup.cs", label="Entry Unk.Create", span=""];
m36_10 [cluster="Unk.SingleOrDefault", file="TypeLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m36_16 [cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m36_12 [cluster="Unk.Map", file="TypeLookup.cs", label="Entry Unk.Map", span=""];
m36_11 [cluster="Unk.ToMaybe", file="TypeLookup.cs", label="Entry Unk.ToMaybe", span=""];
m36_0 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m36_1 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="1: name == null", span="16-16"];
m36_2 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="2: throw new ArgumentNullException(''name'');", span="16-16"];
m36_3 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="1: specifications == null", span="17-17"];
m36_4 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="2: throw new ArgumentNullException(''specifications'');", span="17-17"];
m36_5 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="1: comparer == null", span="18-18"];
m36_6 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="2: throw new ArgumentNullException(''comparer'');", span="18-18"];
m36_7 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="TypeLookup.cs", label="3: return specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max)));", span="20-24"];
m36_8 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m36_22 [cluster="Unk.Just", file="TypeLookup.cs", label="Entry Unk.Just", span=""];
m36_20 [cluster="Unk.ToDescriptor", file="TypeLookup.cs", label="Entry Unk.ToDescriptor", span=""];
m36_17 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="23-24"];
m36_13 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="20-20"];
m36_14 [cluster="lambda expression", color=green, community=0, file="TypeLookup.cs", label="1: name.MatchName(a.ShortName, a.LongName, comparer)", span="20-20"];
m36_15 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="20-20"];
m36_18 [cluster="lambda expression", color=green, community=0, file="TypeLookup.cs", label="0: Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max))", span="23-24"];
m36_19 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="23-24"];
m36_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeLookup.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m36_24 [file="TypeLookup.cs", label=string, span=""];
m36_25 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m37_19 [cluster="Unk.Be", file="UnknownArgumentsFixture.cs", label="Entry Unk.Be", span=""];
m37_0 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m37_1 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="43-43"];
m37_2 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: var appOptions = new OptionsForAppWithPlugIns()", span="44-44"];
m37_4 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m37_8 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m37_3 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: var parser = new CommandLine.Parser(new ParserSettings\r\n            {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="45-47"];
m37_6 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: appOptions.PlugInName.Should().Be(''addonX'')", span="51-51"];
m37_5 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: result1.Should().BeTrue()", span="50-50"];
m37_7 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="2: var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m37_10 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="0: plugInXOptions.InputFileName.Should().Be(''input.dat'')", span="57-57"];
m37_11 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: plugInXOptions.ReadOffset.Should().Be(10L)", span="58-58"];
m37_9 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: result2.Should().BeTrue()", span="56-56"];
m37_12 [cluster="CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.Unit.Parser.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m37_18 [cluster="Unk.BeTrue", file="UnknownArgumentsFixture.cs", label="Entry Unk.BeTrue", span=""];
m37_15 [cluster="CommandLine.ParserSettings.ParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m37_20 [cluster="CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m37_16 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m37_14 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m37_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m37_13 [cluster="CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m38_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20"];
m38_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="0: this.index = index", span="22-22"];
m38_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="1: this.min = -1", span="23-23"];
m38_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="ValueAttribute.cs", label="0: this.max = -1", span="24-24"];
m38_4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="20-20"];
m38_5 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_3  [color=red, key=1, label="T[]", style=dashed];
m1_0 -> m1_4  [color=red, key=1, label="T[]", style=dashed];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_7  [color=red, key=2, style=dotted];
m1_1 -> m1_8  [color=red, key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_6  [color=red, key=0, style=solid];
m1_3 -> m1_3  [color=red, key=3, label="Local variable int i", style=bold];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_7  [color=red, key=2, style=dotted];
m1_4 -> m1_8  [color=red, key=2, style=dotted];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_4  [color=red, key=1, label=i, style=dashed];
m1_2 -> m1_5  [color=red, key=1, label=i, style=dashed];
m1_5 -> m1_3  [color=red, key=0, style=solid];
m1_5 -> m1_5  [color=red, key=1, label=i, style=dashed];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_9 -> m1_12  [color=red, key=1, label="string[]", style=dashed];
m1_9 -> m1_13  [color=red, key=1, label="string[]", style=dashed];
m1_10 -> m1_11  [color=red, key=0, style=solid];
m1_10 -> m1_7  [color=red, key=2, style=dotted];
m1_10 -> m1_8  [color=red, key=2, style=dotted];
m1_12 -> m1_13  [color=red, key=0, style=solid];
m1_12 -> m1_15  [color=red, key=0, style=solid];
m1_12 -> m1_3  [color=red, key=3, label="Local variable int i", style=bold];
m1_13 -> m1_14  [color=red, key=0, style=solid];
m1_13 -> m1_7  [color=red, key=2, style=dotted];
m1_13 -> m1_8  [color=red, key=2, style=dotted];
m1_11 -> m1_12  [color=red, key=0, style=solid];
m1_11 -> m1_13  [color=red, key=1, label=i, style=dashed];
m1_11 -> m1_14  [color=red, key=1, label=i, style=dashed];
m1_14 -> m1_12  [color=red, key=0, style=solid];
m1_14 -> m1_14  [color=red, key=1, label=i, style=dashed];
m1_15 -> m1_9  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> m2_3  [color=red, key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [color=red, key=0, style=solid];
m3_27 -> m3_28  [color=red, key=0, style=solid];
m3_27 -> m3_47  [color=red, key=2, style=dotted];
m3_27 -> m3_29  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_30  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_31  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_32  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_33  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_34  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_35  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_36  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_37  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_38  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_39  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_40  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_41  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_42  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_43  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_44  [color=red, key=1, label=e, style=dashed];
m3_27 -> m3_45  [color=red, key=1, label=e, style=dashed];
m3_28 -> m3_29  [color=red, key=0, style=solid];
m3_28 -> m3_20  [color=red, key=2, style=dotted];
m3_29 -> m3_30  [color=red, key=0, style=solid];
m3_29 -> m3_21  [color=red, key=2, style=dotted];
m3_29 -> m3_22  [color=red, key=2, style=dotted];
m3_30 -> m3_31  [color=red, key=0, style=solid];
m3_30 -> m3_21  [color=red, key=2, style=dotted];
m3_30 -> m3_22  [color=red, key=2, style=dotted];
m3_31 -> m3_32  [color=red, key=0, style=solid];
m3_31 -> m3_48  [color=red, key=2, style=dotted];
m3_31 -> m3_21  [color=red, key=2, style=dotted];
m3_31 -> m3_22  [color=red, key=2, style=dotted];
m3_32 -> m3_33  [color=red, key=0, style=solid];
m3_32 -> m3_21  [color=red, key=2, style=dotted];
m3_32 -> m3_23  [color=red, key=2, style=dotted];
m3_33 -> m3_34  [color=red, key=0, style=solid];
m3_33 -> m3_20  [color=red, key=2, style=dotted];
m3_34 -> m3_35  [color=red, key=0, style=solid];
m3_34 -> m3_21  [color=red, key=2, style=dotted];
m3_34 -> m3_22  [color=red, key=2, style=dotted];
m3_35 -> m3_36  [color=red, key=0, style=solid];
m3_35 -> m3_21  [color=red, key=2, style=dotted];
m3_35 -> m3_22  [color=red, key=2, style=dotted];
m3_36 -> m3_37  [color=red, key=0, style=solid];
m3_36 -> m3_48  [color=red, key=2, style=dotted];
m3_36 -> m3_21  [color=red, key=2, style=dotted];
m3_36 -> m3_22  [color=red, key=2, style=dotted];
m3_37 -> m3_38  [color=red, key=0, style=solid];
m3_37 -> m3_21  [color=red, key=2, style=dotted];
m3_37 -> m3_23  [color=red, key=2, style=dotted];
m3_38 -> m3_39  [color=red, key=0, style=solid];
m3_38 -> m3_20  [color=red, key=2, style=dotted];
m3_39 -> m3_40  [color=red, key=0, style=solid];
m3_39 -> m3_21  [color=red, key=2, style=dotted];
m3_39 -> m3_22  [color=red, key=2, style=dotted];
m3_40 -> m3_41  [color=red, key=0, style=solid];
m3_40 -> m3_21  [color=red, key=2, style=dotted];
m3_40 -> m3_22  [color=red, key=2, style=dotted];
m3_41 -> m3_42  [color=red, key=0, style=solid];
m3_41 -> m3_48  [color=red, key=2, style=dotted];
m3_41 -> m3_21  [color=red, key=2, style=dotted];
m3_41 -> m3_22  [color=red, key=2, style=dotted];
m3_42 -> m3_43  [color=red, key=0, style=solid];
m3_42 -> m3_21  [color=red, key=2, style=dotted];
m3_42 -> m3_23  [color=red, key=2, style=dotted];
m3_43 -> m3_44  [color=red, key=0, style=solid];
m3_43 -> m3_20  [color=red, key=2, style=dotted];
m3_44 -> m3_45  [color=red, key=0, style=solid];
m3_44 -> m3_21  [color=red, key=2, style=dotted];
m3_44 -> m3_22  [color=red, key=2, style=dotted];
m3_45 -> m3_46  [color=red, key=0, style=solid];
m3_45 -> m3_21  [color=red, key=2, style=dotted];
m3_45 -> m3_25  [color=red, key=2, style=dotted];
m3_46 -> m3_26  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_4  [color=red, key=1, label=valueOne, style=dashed];
m3_1 -> m3_7  [color=red, key=1, label=valueOne, style=dashed];
m3_1 -> m3_1  [color=red, key=3, label="Local variable string valueOne", style=bold];
m3_2 -> m3_3  [color=red, key=0, style=solid];
m3_2 -> m3_4  [color=red, key=1, label=valueTwo, style=dashed];
m3_2 -> m3_8  [color=red, key=1, label=valueTwo, style=dashed];
m3_2 -> m3_11  [color=red, key=1, label=valueTwo, style=dashed];
m3_2 -> m3_2  [color=red, key=3, label="Local variable string valueTwo", style=bold];
m3_4 -> m3_5  [color=red, key=0, style=solid];
m3_7 -> m3_8  [color=red, key=0, style=solid];
m3_7 -> m3_21  [color=red, key=2, style=dotted];
m3_7 -> m3_22  [color=red, key=2, style=dotted];
m3_3 -> m3_4  [color=red, key=0, style=solid];
m3_3 -> m3_12  [color=red, key=1, label=valueThree, style=dashed];
m3_3 -> m3_15  [color=red, key=1, label=valueThree, style=dashed];
m3_3 -> m3_3  [color=red, key=3, label="Local variable string valueThree", style=bold];
m3_8 -> m3_9  [color=red, key=0, style=solid];
m3_8 -> m3_21  [color=red, key=2, style=dotted];
m3_8 -> m3_22  [color=red, key=2, style=dotted];
m3_11 -> m3_12  [color=red, key=0, style=solid];
m3_11 -> m3_21  [color=red, key=2, style=dotted];
m3_11 -> m3_22  [color=red, key=2, style=dotted];
m3_12 -> m3_13  [color=red, key=0, style=solid];
m3_12 -> m3_21  [color=red, key=2, style=dotted];
m3_12 -> m3_22  [color=red, key=2, style=dotted];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_15 -> m3_21  [color=red, key=2, style=dotted];
m3_15 -> m3_22  [color=red, key=2, style=dotted];
m3_5 -> m3_6  [color=red, key=0, style=solid];
m3_5 -> m3_19  [color=red, key=2, style=dotted];
m3_5 -> m3_7  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_8  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_9  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_10  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_11  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_12  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_13  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_14  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_15  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_16  [color=red, key=1, label=e, style=dashed];
m3_5 -> m3_17  [color=red, key=1, label=e, style=dashed];
m3_6 -> m3_7  [color=red, key=0, style=solid];
m3_6 -> m3_20  [color=red, key=2, style=dotted];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_9 -> m3_21  [color=red, key=2, style=dotted];
m3_9 -> m3_23  [color=red, key=2, style=dotted];
m3_10 -> m3_11  [color=red, key=0, style=solid];
m3_10 -> m3_20  [color=red, key=2, style=dotted];
m3_13 -> m3_14  [color=red, key=0, style=solid];
m3_13 -> m3_21  [color=red, key=2, style=dotted];
m3_13 -> m3_23  [color=red, key=2, style=dotted];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_20  [color=red, key=2, style=dotted];
m3_16 -> m3_17  [color=red, key=0, style=solid];
m3_16 -> m3_21  [color=red, key=2, style=dotted];
m3_16 -> m3_24  [color=red, key=2, style=dotted];
m3_17 -> m3_18  [color=red, key=0, style=solid];
m3_17 -> m3_21  [color=red, key=2, style=dotted];
m3_17 -> m3_25  [color=red, key=2, style=dotted];
m3_18 -> m3_0  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_0 -> m6_2  [color=red, key=1, label="params string[]", style=dashed];
m6_0 -> m6_3  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_0 -> m6_4  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_4  [color=red, key=0, style=solid];
m6_2 -> m6_3  [color=red, key=0, style=solid];
m6_2 -> m6_4  [color=red, key=0, style=solid];
m6_3 -> m6_2  [color=red, key=0, style=solid];
m6_3 -> m6_6  [color=red, key=2, style=dotted];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_5 -> m6_0  [color=blue, key=0, style=bold];
m6_45 -> m6_46  [color=red, key=0, style=solid];
m6_45 -> m6_47  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_45 -> m6_48  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_45 -> m6_49  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_46 -> m6_47  [color=red, key=0, style=solid];
m6_46 -> m6_49  [color=red, key=0, style=solid];
m6_47 -> m6_48  [color=red, key=0, style=solid];
m6_47 -> m6_49  [color=red, key=0, style=solid];
m6_48 -> m6_49  [color=red, key=0, style=solid];
m6_48 -> m6_44  [color=red, key=2, style=dotted];
m6_49 -> m6_50  [color=red, key=0, style=solid];
m6_50 -> m6_45  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_17  [color=red, key=2, style=dotted];
m6_16 -> m6_14  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_19 -> m6_20  [color=red, key=0, style=solid];
m6_19 -> m6_6  [color=red, key=2, style=dotted];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_9  [color=red, key=1, label="params char[]", style=dashed];
m6_7 -> m6_10  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_7 -> m6_11  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_11  [color=red, key=0, style=solid];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_11  [color=red, key=0, style=solid];
m6_10 -> m6_9  [color=red, key=0, style=solid];
m6_10 -> m6_13  [color=red, key=2, style=dotted];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_12 -> m6_7  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [color=red, key=0, style=solid];
m6_35 -> m6_36  [color=red, key=0, style=solid];
m6_35 -> m6_37  [color=red, key=2, style=dotted];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [color=red, key=0, style=solid];
m6_28 -> m6_31  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_28 -> m6_32  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_29 -> m6_30  [color=red, key=0, style=solid];
m6_29 -> m6_32  [color=red, key=0, style=solid];
m6_29 -> m6_31  [color=red, key=1, label=value, style=dashed];
m6_31 -> m6_29  [color=red, key=0, style=solid];
m6_31 -> m6_6  [color=red, key=2, style=dotted];
m6_32 -> m6_33  [color=red, key=0, style=solid];
m6_30 -> m6_31  [color=red, key=0, style=solid];
m6_30 -> m6_29  [color=red, key=0, style=solid];
m6_33 -> m6_28  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [color=red, key=0, style=solid];
m6_39 -> m6_40  [color=red, key=0, style=solid];
m6_40 -> m6_38  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [color=red, key=0, style=solid];
m6_42 -> m6_43  [color=red, key=0, style=solid];
m6_42 -> m6_44  [color=red, key=2, style=dotted];
m6_43 -> m6_41  [color=blue, key=0, style=bold];
m6_21 -> m6_22  [color=red, key=0, style=solid];
m6_22 -> m6_23  [color=red, key=0, style=solid];
m6_22 -> m6_24  [color=red, key=2, style=dotted];
m6_23 -> m6_21  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [color=red, key=0, style=solid];
m6_26 -> m6_27  [color=red, key=0, style=solid];
m6_26 -> m6_24  [color=red, key=2, style=dotted];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_51 -> m6_52  [color=red, key=0, style=solid];
m6_52 -> m6_53  [color=red, key=0, style=solid];
m6_52 -> m6_54  [color=red, key=2, style=dotted];
m6_53 -> m6_51  [color=blue, key=0, style=bold];
m6_55 -> m6_56  [color=red, key=0, style=solid];
m6_55 -> m6_57  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_55 -> m6_59  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_55 -> m6_65  [color=red, key=1, label="System.Text.StringBuilder", style=dashed];
m6_56 -> m6_57  [color=red, key=0, style=solid];
m6_56 -> m6_59  [color=red, key=1, label=bound, style=dashed];
m6_56 -> m6_62  [color=red, key=1, label=bound, style=dashed];
m6_56 -> m6_63  [color=red, key=1, label=bound, style=dashed];
m6_57 -> m6_58  [color=red, key=0, style=solid];
m6_57 -> m6_59  [color=red, key=0, style=solid];
m6_59 -> m6_60  [color=red, key=0, style=solid];
m6_59 -> m6_61  [color=red, key=0, style=solid];
m6_65 -> m6_66  [color=red, key=0, style=solid];
m6_65 -> m6_68  [color=red, key=0, style=solid];
m6_62 -> m6_63  [color=red, key=0, style=solid];
m6_62 -> m6_64  [color=red, key=1, label=i, style=dashed];
m6_62 -> m6_65  [color=red, key=1, label=i, style=dashed];
m6_62 -> m6_67  [color=red, key=1, label=i, style=dashed];
m6_63 -> m6_64  [color=red, key=0, style=solid];
m6_63 -> m6_68  [color=red, key=0, style=solid];
m6_58 -> m6_69  [color=red, key=0, style=solid];
m6_60 -> m6_69  [color=red, key=0, style=solid];
m6_61 -> m6_62  [color=red, key=0, style=solid];
m6_61 -> m6_66  [color=red, key=1, label=c, style=dashed];
m6_61 -> m6_68  [color=red, key=1, label=c, style=dashed];
m6_66 -> m6_67  [color=red, key=0, style=solid];
m6_66 -> m6_66  [color=red, key=1, label=c, style=dashed];
m6_66 -> m6_68  [color=red, key=1, label=c, style=dashed];
m6_68 -> m6_69  [key=0, style=solid];
m6_64 -> m6_65  [color=red, key=0, style=solid];
m6_64 -> m6_68  [color=red, key=0, style=solid];
m6_67 -> m6_63  [color=red, key=0, style=solid];
m6_67 -> m6_67  [color=red, key=1, label=i, style=dashed];
m6_69 -> m6_55  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_17  [color=green, key=2, style=dotted];
m7_19 -> m7_22  [color=green, key=1, label=expectedErrors, style=dashed];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_7  [color=green, key=2, style=dotted];
m7_20 -> m7_22  [color=green, key=1, label=result, style=dashed];
m7_22 -> m7_23  [color=green, key=0, style=solid];
m7_22 -> m7_9  [color=green, key=2, style=dotted];
m7_22 -> m7_10  [color=green, key=2, style=dotted];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_8  [color=green, key=2, style=dotted];
m7_23 -> m7_18  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_36  [color=green, key=2, style=dotted];
m7_31 -> m7_34  [color=green, key=1, label=expected, style=dashed];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_7  [color=green, key=2, style=dotted];
m7_32 -> m7_34  [color=green, key=1, label=result, style=dashed];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_37  [color=green, key=2, style=dotted];
m7_34 -> m7_38  [color=green, key=2, style=dotted];
m7_34 -> m7_39  [color=green, key=2, style=dotted];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_8  [color=green, key=2, style=dotted];
m7_35 -> m7_30  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_6  [color=green, key=2, style=dotted];
m7_1 -> m7_4  [color=green, key=1, label=expectedErrors, style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=2, style=dotted];
m7_2 -> m7_4  [color=green, key=1, label=result, style=dashed];
m7_4 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_9  [color=green, key=2, style=dotted];
m7_4 -> m7_10  [color=green, key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_8  [color=green, key=2, style=dotted];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_17  [color=green, key=2, style=dotted];
m7_12 -> m7_15  [color=green, key=1, label=expectedErrors, style=dashed];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_7  [color=green, key=2, style=dotted];
m7_13 -> m7_15  [color=green, key=1, label=result, style=dashed];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_15 -> m7_9  [color=green, key=2, style=dotted];
m7_15 -> m7_10  [color=green, key=2, style=dotted];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_8  [color=green, key=2, style=dotted];
m7_16 -> m7_11  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_17  [color=green, key=2, style=dotted];
m7_25 -> m7_28  [color=green, key=1, label=expectedErrors, style=dashed];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_7  [color=green, key=2, style=dotted];
m7_26 -> m7_28  [color=green, key=1, label=result, style=dashed];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_9  [color=green, key=2, style=dotted];
m7_28 -> m7_10  [color=green, key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_8  [color=green, key=2, style=dotted];
m7_29 -> m7_24  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_27 -> m8_28  [color=green, key=0, style=solid];
m8_27 -> m8_29  [color=green, key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_3  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_5  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_6  [color=green, key=1, label=string, style=dashed];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=green, key=0, style=solid];
m8_2 -> m8_7  [color=green, key=0, style=solid];
m8_2 -> m8_8  [color=green, key=2, style=dotted];
m8_3 -> m8_4  [color=green, key=0, style=solid];
m8_3 -> m8_5  [color=green, key=0, style=solid];
m8_4 -> m8_7  [color=green, key=0, style=solid];
m8_4 -> m8_8  [color=green, key=2, style=dotted];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_7 -> m8_0  [color=blue, key=0, style=bold];
m8_24 -> m8_19  [color=green, key=3, label="Parameter variable CommandLine.NameInfo other", style=bold];
m8_24 -> m8_30  [color=green, key=0, style=solid];
m8_24 -> m8_32  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_24 -> m8_31  [color=green, key=3, label="method methodReturn bool Equals", style=bold];
m8_30 -> m8_31  [color=green, key=0, style=solid];
m8_30 -> m8_32  [color=green, key=0, style=solid];
m8_31 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_34  [color=green, key=2, style=dotted];
m8_33 -> m8_24  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [color=green, key=0, style=solid];
m8_12 -> m8_15  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m8_12 -> m8_9  [color=darkorchid, key=3, label="method methodReturn CommandLine.NameInfo FromSpecification", style=bold];
m8_13 -> m8_14  [color=green, key=0, style=solid];
m8_13 -> m8_16  [color=green, key=0, style=solid];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_16 -> m8_17  [color=green, key=0, style=solid];
m8_15 -> m8_17  [color=green, key=0, style=solid];
m8_15 -> m8_9  [color=green, key=2, style=dotted];
m8_17 -> m8_12  [color=blue, key=0, style=bold];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_12  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification specification", style=bold];
m8_10 -> m8_11  [color=green, key=0, style=solid];
m8_10 -> m8_0  [color=green, key=2, style=dotted];
m8_11 -> m8_9  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [color=green, key=0, style=solid];
m8_18 -> m8_22  [color=green, key=1, label=object, style=dashed];
m8_18 -> m8_24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m8_19 -> m8_20  [color=green, key=0, style=solid];
m8_19 -> m8_21  [color=green, key=1, label=other, style=dashed];
m8_20 -> m8_22  [color=green, key=0, style=solid];
m8_20 -> m8_21  [color=green, key=0, style=solid];
m8_21 -> m8_23  [color=green, key=0, style=solid];
m8_21 -> m8_24  [color=green, key=2, style=dotted];
m8_22 -> m8_23  [color=green, key=0, style=solid];
m8_22 -> m8_25  [color=green, key=2, style=dotted];
m8_23 -> m8_18  [color=blue, key=0, style=bold];
m8_35 -> m8_5  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_6  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_22  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_21  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_27  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m8_35 -> m8_32  [color=green, key=1, label="CommandLine.NameInfo", style=dashed];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_0 -> m9_3  [color=green, key=1, label=string, style=dashed];
m9_0 -> m9_8  [color=green, key=1, label=string, style=dashed];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_4  [color=green, key=0, style=solid];
m9_2 -> m9_5  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_6  [color=green, key=2, style=dotted];
m9_3 -> m9_7  [color=green, key=1, label="lambda expression", style=dashed];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [color=green, key=0, style=solid];
m9_8 -> m9_9  [color=green, key=0, style=solid];
m9_8 -> m9_10  [color=green, key=2, style=dotted];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_11 -> m9_8  [color=green, key=1, label=string, style=dashed];
m9_12 -> m9_8  [color=green, key=1, label="System.StringComparer", style=dashed];
m10_0 -> m10_1  [color=red, key=0, style=solid];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_12  [color=red, key=2, style=dotted];
m10_1 -> m10_3  [color=red, key=1, label=options, style=dashed];
m10_1 -> m10_5  [color=red, key=1, label=options, style=dashed];
m10_2 -> m10_3  [color=red, key=0, style=solid];
m10_2 -> m10_13  [color=red, key=2, style=dotted];
m10_3 -> m10_4  [color=red, key=0, style=solid];
m10_3 -> m10_14  [color=red, key=2, style=dotted];
m10_5 -> m10_6  [color=red, key=0, style=solid];
m10_5 -> m10_15  [color=red, key=2, style=dotted];
m10_5 -> m10_17  [color=red, key=2, style=dotted];
m10_4 -> m10_5  [color=red, key=0, style=solid];
m10_4 -> m10_15  [color=red, key=2, style=dotted];
m10_4 -> m10_16  [color=red, key=2, style=dotted];
m10_6 -> m10_7  [color=red, key=0, style=solid];
m10_6 -> m10_12  [color=red, key=2, style=dotted];
m10_6 -> m10_8  [color=red, key=1, label=options, style=dashed];
m10_6 -> m10_10  [color=red, key=1, label=options, style=dashed];
m10_7 -> m10_8  [color=red, key=0, style=solid];
m10_7 -> m10_13  [color=red, key=2, style=dotted];
m10_8 -> m10_9  [color=red, key=0, style=solid];
m10_8 -> m10_14  [color=red, key=2, style=dotted];
m10_10 -> m10_11  [color=red, key=0, style=solid];
m10_10 -> m10_15  [color=red, key=2, style=dotted];
m10_10 -> m10_18  [color=red, key=2, style=dotted];
m10_9 -> m10_10  [color=red, key=0, style=solid];
m10_9 -> m10_15  [color=red, key=2, style=dotted];
m10_9 -> m10_16  [color=red, key=2, style=dotted];
m10_11 -> m10_0  [color=blue, key=0, style=bold];
m10_81 -> m10_82  [color=red, key=0, style=solid];
m10_82 -> m10_83  [color=red, key=0, style=solid];
m10_82 -> m10_12  [color=red, key=2, style=dotted];
m10_82 -> m10_84  [color=red, key=1, label=options, style=dashed];
m10_82 -> m10_86  [color=red, key=1, label=options, style=dashed];
m10_83 -> m10_84  [color=red, key=0, style=solid];
m10_83 -> m10_13  [color=red, key=2, style=dotted];
m10_84 -> m10_85  [color=red, key=0, style=solid];
m10_84 -> m10_14  [color=red, key=2, style=dotted];
m10_86 -> m10_87  [color=red, key=0, style=solid];
m10_86 -> m10_15  [color=red, key=2, style=dotted];
m10_86 -> m10_17  [color=red, key=2, style=dotted];
m10_85 -> m10_86  [color=red, key=0, style=solid];
m10_85 -> m10_15  [color=red, key=2, style=dotted];
m10_85 -> m10_16  [color=red, key=2, style=dotted];
m10_87 -> m10_88  [color=red, key=0, style=solid];
m10_87 -> m10_12  [color=red, key=2, style=dotted];
m10_87 -> m10_89  [color=red, key=1, label=options, style=dashed];
m10_87 -> m10_91  [color=red, key=1, label=options, style=dashed];
m10_87 -> m10_92  [color=red, key=1, label=options, style=dashed];
m10_87 -> m10_93  [color=red, key=1, label=options, style=dashed];
m10_87 -> m10_94  [color=red, key=1, label=options, style=dashed];
m10_88 -> m10_89  [color=red, key=0, style=solid];
m10_88 -> m10_13  [color=red, key=2, style=dotted];
m10_89 -> m10_90  [color=red, key=0, style=solid];
m10_89 -> m10_14  [color=red, key=2, style=dotted];
m10_91 -> m10_92  [color=red, key=0, style=solid];
m10_91 -> m10_15  [color=red, key=2, style=dotted];
m10_91 -> m10_17  [color=red, key=2, style=dotted];
m10_92 -> m10_93  [color=red, key=0, style=solid];
m10_92 -> m10_15  [color=red, key=2, style=dotted];
m10_92 -> m10_17  [color=red, key=2, style=dotted];
m10_93 -> m10_94  [color=red, key=0, style=solid];
m10_93 -> m10_15  [color=red, key=2, style=dotted];
m10_93 -> m10_17  [color=red, key=2, style=dotted];
m10_94 -> m10_95  [color=red, key=0, style=solid];
m10_94 -> m10_15  [color=red, key=2, style=dotted];
m10_94 -> m10_17  [color=red, key=2, style=dotted];
m10_90 -> m10_91  [color=red, key=0, style=solid];
m10_90 -> m10_15  [color=red, key=2, style=dotted];
m10_90 -> m10_16  [color=red, key=2, style=dotted];
m10_95 -> m10_81  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [color=red, key=0, style=solid];
m10_33 -> m10_34  [color=red, key=0, style=solid];
m10_33 -> m10_12  [color=red, key=2, style=dotted];
m10_33 -> m10_35  [color=red, key=1, label=options, style=dashed];
m10_33 -> m10_37  [color=red, key=1, label=options, style=dashed];
m10_34 -> m10_35  [color=red, key=0, style=solid];
m10_34 -> m10_13  [color=red, key=2, style=dotted];
m10_35 -> m10_36  [color=red, key=0, style=solid];
m10_35 -> m10_14  [color=red, key=2, style=dotted];
m10_37 -> m10_38  [color=red, key=0, style=solid];
m10_37 -> m10_15  [color=red, key=2, style=dotted];
m10_37 -> m10_17  [color=red, key=2, style=dotted];
m10_36 -> m10_37  [color=red, key=0, style=solid];
m10_36 -> m10_15  [color=red, key=2, style=dotted];
m10_36 -> m10_16  [color=red, key=2, style=dotted];
m10_38 -> m10_39  [color=red, key=0, style=solid];
m10_38 -> m10_12  [color=red, key=2, style=dotted];
m10_38 -> m10_40  [color=red, key=1, label=options, style=dashed];
m10_38 -> m10_42  [color=red, key=1, label=options, style=dashed];
m10_39 -> m10_40  [color=red, key=0, style=solid];
m10_39 -> m10_13  [color=red, key=2, style=dotted];
m10_40 -> m10_41  [color=red, key=0, style=solid];
m10_40 -> m10_14  [color=red, key=2, style=dotted];
m10_42 -> m10_43  [color=red, key=0, style=solid];
m10_42 -> m10_15  [color=red, key=2, style=dotted];
m10_42 -> m10_44  [color=red, key=2, style=dotted];
m10_41 -> m10_42  [color=red, key=0, style=solid];
m10_41 -> m10_15  [color=red, key=2, style=dotted];
m10_41 -> m10_16  [color=red, key=2, style=dotted];
m10_43 -> m10_32  [color=blue, key=0, style=bold];
m10_57 -> m10_58  [color=red, key=0, style=solid];
m10_58 -> m10_59  [color=red, key=0, style=solid];
m10_58 -> m10_12  [color=red, key=2, style=dotted];
m10_58 -> m10_60  [color=red, key=1, label=options, style=dashed];
m10_58 -> m10_62  [color=red, key=1, label=options, style=dashed];
m10_59 -> m10_60  [color=red, key=0, style=solid];
m10_59 -> m10_13  [color=red, key=2, style=dotted];
m10_60 -> m10_61  [color=red, key=0, style=solid];
m10_60 -> m10_14  [color=red, key=2, style=dotted];
m10_62 -> m10_63  [color=red, key=0, style=solid];
m10_62 -> m10_15  [color=red, key=2, style=dotted];
m10_62 -> m10_17  [color=red, key=2, style=dotted];
m10_61 -> m10_62  [color=red, key=0, style=solid];
m10_61 -> m10_15  [color=red, key=2, style=dotted];
m10_61 -> m10_16  [color=red, key=2, style=dotted];
m10_63 -> m10_64  [color=red, key=0, style=solid];
m10_63 -> m10_12  [color=red, key=2, style=dotted];
m10_63 -> m10_65  [color=red, key=1, label=options, style=dashed];
m10_63 -> m10_67  [color=red, key=1, label=options, style=dashed];
m10_64 -> m10_65  [color=red, key=0, style=solid];
m10_64 -> m10_13  [color=red, key=2, style=dotted];
m10_65 -> m10_66  [color=red, key=0, style=solid];
m10_65 -> m10_14  [color=red, key=2, style=dotted];
m10_67 -> m10_68  [color=red, key=0, style=solid];
m10_67 -> m10_15  [color=red, key=2, style=dotted];
m10_67 -> m10_18  [color=red, key=2, style=dotted];
m10_66 -> m10_67  [color=red, key=0, style=solid];
m10_66 -> m10_15  [color=red, key=2, style=dotted];
m10_66 -> m10_16  [color=red, key=2, style=dotted];
m10_68 -> m10_57  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [color=red, key=0, style=solid];
m10_52 -> m10_53  [color=red, key=0, style=solid];
m10_52 -> m10_12  [color=red, key=2, style=dotted];
m10_52 -> m10_54  [color=red, key=1, label=options, style=dashed];
m10_53 -> m10_54  [color=red, key=0, style=solid];
m10_53 -> m10_13  [color=red, key=2, style=dotted];
m10_54 -> m10_55  [color=red, key=0, style=solid];
m10_54 -> m10_14  [color=red, key=2, style=dotted];
m10_55 -> m10_56  [color=red, key=0, style=solid];
m10_55 -> m10_15  [color=red, key=2, style=dotted];
m10_55 -> m10_25  [color=red, key=2, style=dotted];
m10_56 -> m10_51  [color=blue, key=0, style=bold];
m10_69 -> m10_70  [color=red, key=0, style=solid];
m10_70 -> m10_71  [color=red, key=0, style=solid];
m10_70 -> m10_12  [color=red, key=2, style=dotted];
m10_70 -> m10_72  [color=red, key=1, label=options, style=dashed];
m10_71 -> m10_72  [color=red, key=0, style=solid];
m10_71 -> m10_13  [color=red, key=2, style=dotted];
m10_72 -> m10_73  [color=red, key=0, style=solid];
m10_72 -> m10_14  [color=red, key=2, style=dotted];
m10_73 -> m10_74  [color=red, key=0, style=solid];
m10_73 -> m10_15  [color=red, key=2, style=dotted];
m10_73 -> m10_25  [color=red, key=2, style=dotted];
m10_74 -> m10_69  [color=blue, key=0, style=bold];
m10_75 -> m10_76  [color=red, key=0, style=solid];
m10_76 -> m10_77  [color=red, key=0, style=solid];
m10_76 -> m10_12  [color=red, key=2, style=dotted];
m10_76 -> m10_78  [color=red, key=1, label=options, style=dashed];
m10_77 -> m10_78  [color=red, key=0, style=solid];
m10_77 -> m10_13  [color=red, key=2, style=dotted];
m10_78 -> m10_79  [color=red, key=0, style=solid];
m10_78 -> m10_14  [color=red, key=2, style=dotted];
m10_79 -> m10_80  [color=red, key=0, style=solid];
m10_79 -> m10_15  [color=red, key=2, style=dotted];
m10_79 -> m10_25  [color=red, key=2, style=dotted];
m10_80 -> m10_75  [color=blue, key=0, style=bold];
m10_26 -> m10_27  [color=red, key=0, style=solid];
m10_27 -> m10_28  [color=red, key=0, style=solid];
m10_27 -> m10_12  [color=red, key=2, style=dotted];
m10_27 -> m10_29  [color=red, key=1, label=options, style=dashed];
m10_28 -> m10_29  [color=red, key=0, style=solid];
m10_28 -> m10_13  [color=red, key=2, style=dotted];
m10_29 -> m10_30  [color=red, key=0, style=solid];
m10_29 -> m10_14  [color=red, key=2, style=dotted];
m10_30 -> m10_31  [color=red, key=0, style=solid];
m10_30 -> m10_15  [color=red, key=2, style=dotted];
m10_30 -> m10_25  [color=red, key=2, style=dotted];
m10_31 -> m10_26  [color=blue, key=0, style=bold];
m10_45 -> m10_46  [color=red, key=0, style=solid];
m10_46 -> m10_47  [color=red, key=0, style=solid];
m10_46 -> m10_12  [color=red, key=2, style=dotted];
m10_46 -> m10_48  [color=red, key=1, label=options, style=dashed];
m10_47 -> m10_48  [color=red, key=0, style=solid];
m10_47 -> m10_13  [color=red, key=2, style=dotted];
m10_48 -> m10_49  [color=red, key=0, style=solid];
m10_48 -> m10_14  [color=red, key=2, style=dotted];
m10_49 -> m10_50  [color=red, key=0, style=solid];
m10_49 -> m10_15  [color=red, key=2, style=dotted];
m10_49 -> m10_25  [color=red, key=2, style=dotted];
m10_50 -> m10_45  [color=blue, key=0, style=bold];
m10_19 -> m10_20  [color=red, key=0, style=solid];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_20 -> m10_12  [color=red, key=2, style=dotted];
m10_20 -> m10_22  [color=red, key=1, label=options, style=dashed];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_21 -> m10_13  [color=red, key=2, style=dotted];
m10_22 -> m10_23  [color=red, key=0, style=solid];
m10_22 -> m10_14  [color=red, key=2, style=dotted];
m10_23 -> m10_24  [color=red, key=0, style=solid];
m10_23 -> m10_15  [color=red, key=2, style=dotted];
m10_23 -> m10_25  [color=red, key=2, style=dotted];
m10_24 -> m10_19  [color=blue, key=0, style=bold];
m12_51 -> m12_52  [color=red, key=0, style=solid];
m12_52 -> m12_53  [color=red, key=0, style=solid];
m12_52 -> m12_7  [color=red, key=2, style=dotted];
m12_52 -> m12_54  [color=red, key=1, label=options, style=dashed];
m12_52 -> m12_56  [color=red, key=1, label=options, style=dashed];
m12_52 -> m12_57  [color=red, key=1, label=options, style=dashed];
m12_52 -> m12_58  [color=red, key=1, label=options, style=dashed];
m12_52 -> m12_59  [color=red, key=1, label=options, style=dashed];
m12_53 -> m12_54  [color=red, key=0, style=solid];
m12_53 -> m12_8  [color=red, key=2, style=dotted];
m12_54 -> m12_55  [color=red, key=0, style=solid];
m12_54 -> m12_9  [color=red, key=2, style=dotted];
m12_56 -> m12_57  [color=red, key=0, style=solid];
m12_56 -> m12_10  [color=red, key=2, style=dotted];
m12_56 -> m12_42  [color=red, key=2, style=dotted];
m12_57 -> m12_58  [color=red, key=0, style=solid];
m12_57 -> m12_12  [color=red, key=2, style=dotted];
m12_58 -> m12_59  [color=red, key=0, style=solid];
m12_58 -> m12_10  [color=red, key=2, style=dotted];
m12_58 -> m12_11  [color=red, key=2, style=dotted];
m12_59 -> m12_60  [color=red, key=0, style=solid];
m12_59 -> m12_10  [color=red, key=2, style=dotted];
m12_59 -> m12_42  [color=red, key=2, style=dotted];
m12_55 -> m12_56  [color=red, key=0, style=solid];
m12_55 -> m12_10  [color=red, key=2, style=dotted];
m12_55 -> m12_11  [color=red, key=2, style=dotted];
m12_60 -> m12_51  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=red, key=0, style=solid];
m12_1 -> m12_2  [color=red, key=0, style=solid];
m12_1 -> m12_7  [color=red, key=2, style=dotted];
m12_1 -> m12_3  [color=red, key=1, label=options, style=dashed];
m12_1 -> m12_5  [color=red, key=1, label=options, style=dashed];
m12_2 -> m12_3  [color=red, key=0, style=solid];
m12_2 -> m12_8  [color=red, key=2, style=dotted];
m12_3 -> m12_4  [color=red, key=0, style=solid];
m12_3 -> m12_9  [color=red, key=2, style=dotted];
m12_5 -> m12_6  [color=red, key=0, style=solid];
m12_5 -> m12_12  [color=red, key=2, style=dotted];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_10  [color=red, key=2, style=dotted];
m12_4 -> m12_11  [color=red, key=2, style=dotted];
m12_6 -> m12_0  [color=blue, key=0, style=bold];
m12_220 -> m12_221  [color=red, key=0, style=solid];
m12_221 -> m12_222  [color=red, key=0, style=solid];
m12_221 -> m12_230  [color=red, key=2, style=dotted];
m12_221 -> m12_223  [color=red, key=1, label=options, style=dashed];
m12_221 -> m12_225  [color=red, key=1, label=options, style=dashed];
m12_221 -> m12_226  [color=red, key=1, label=options, style=dashed];
m12_221 -> m12_227  [color=red, key=1, label=options, style=dashed];
m12_221 -> m12_228  [color=red, key=1, label=options, style=dashed];
m12_222 -> m12_223  [color=red, key=0, style=solid];
m12_222 -> m12_8  [color=red, key=2, style=dotted];
m12_223 -> m12_224  [color=red, key=0, style=solid];
m12_223 -> m12_9  [color=red, key=2, style=dotted];
m12_225 -> m12_226  [color=red, key=0, style=solid];
m12_225 -> m12_10  [color=red, key=2, style=dotted];
m12_225 -> m12_42  [color=red, key=2, style=dotted];
m12_226 -> m12_227  [color=red, key=0, style=solid];
m12_226 -> m12_12  [color=red, key=2, style=dotted];
m12_227 -> m12_228  [color=red, key=0, style=solid];
m12_227 -> m12_12  [color=red, key=2, style=dotted];
m12_228 -> m12_229  [color=red, key=0, style=solid];
m12_228 -> m12_10  [color=red, key=2, style=dotted];
m12_228 -> m12_11  [color=red, key=2, style=dotted];
m12_224 -> m12_225  [color=red, key=0, style=solid];
m12_224 -> m12_10  [color=red, key=2, style=dotted];
m12_224 -> m12_11  [color=red, key=2, style=dotted];
m12_229 -> m12_220  [color=blue, key=0, style=bold];
m12_43 -> m12_44  [color=red, key=0, style=solid];
m12_44 -> m12_45  [color=red, key=0, style=solid];
m12_44 -> m12_7  [color=red, key=2, style=dotted];
m12_44 -> m12_46  [color=red, key=1, label=options, style=dashed];
m12_44 -> m12_48  [color=red, key=1, label=options, style=dashed];
m12_44 -> m12_49  [color=red, key=1, label=options, style=dashed];
m12_45 -> m12_46  [color=red, key=0, style=solid];
m12_45 -> m12_8  [color=red, key=2, style=dotted];
m12_46 -> m12_47  [color=red, key=0, style=solid];
m12_46 -> m12_9  [color=red, key=2, style=dotted];
m12_48 -> m12_49  [color=red, key=0, style=solid];
m12_48 -> m12_10  [color=red, key=2, style=dotted];
m12_48 -> m12_42  [color=red, key=2, style=dotted];
m12_49 -> m12_50  [color=red, key=0, style=solid];
m12_49 -> m12_12  [color=red, key=2, style=dotted];
m12_47 -> m12_48  [color=red, key=0, style=solid];
m12_47 -> m12_10  [color=red, key=2, style=dotted];
m12_47 -> m12_11  [color=red, key=2, style=dotted];
m12_50 -> m12_43  [color=blue, key=0, style=bold];
m12_204 -> m12_205  [color=red, key=0, style=solid];
m12_205 -> m12_206  [color=red, key=0, style=solid];
m12_205 -> m12_187  [color=red, key=2, style=dotted];
m12_205 -> m12_207  [color=red, key=1, label="lambda expression", style=dashed];
m12_206 -> m12_204  [color=blue, key=0, style=bold];
m12_198 -> m12_199  [color=red, key=0, style=solid];
m12_199 -> m12_200  [color=red, key=0, style=solid];
m12_199 -> m12_187  [color=red, key=2, style=dotted];
m12_199 -> m12_201  [color=red, key=1, label="lambda expression", style=dashed];
m12_200 -> m12_198  [color=blue, key=0, style=bold];
m12_91 -> m12_92  [color=red, key=0, style=solid];
m12_92 -> m12_93  [color=red, key=0, style=solid];
m12_92 -> m12_7  [color=red, key=2, style=dotted];
m12_92 -> m12_94  [color=red, key=1, label=options, style=dashed];
m12_93 -> m12_94  [color=red, key=0, style=solid];
m12_93 -> m12_8  [color=red, key=2, style=dotted];
m12_94 -> m12_95  [color=red, key=0, style=solid];
m12_94 -> m12_9  [color=red, key=2, style=dotted];
m12_95 -> m12_96  [color=red, key=0, style=solid];
m12_95 -> m12_10  [color=red, key=2, style=dotted];
m12_95 -> m12_83  [color=red, key=2, style=dotted];
m12_96 -> m12_97  [color=red, key=0, style=solid];
m12_96 -> m12_7  [color=red, key=2, style=dotted];
m12_96 -> m12_98  [color=red, key=1, label=options, style=dashed];
m12_97 -> m12_98  [color=red, key=0, style=solid];
m12_97 -> m12_8  [color=red, key=2, style=dotted];
m12_98 -> m12_99  [color=red, key=0, style=solid];
m12_98 -> m12_9  [color=red, key=2, style=dotted];
m12_99 -> m12_100  [color=red, key=0, style=solid];
m12_99 -> m12_10  [color=red, key=2, style=dotted];
m12_99 -> m12_83  [color=red, key=2, style=dotted];
m12_100 -> m12_101  [color=red, key=0, style=solid];
m12_100 -> m12_7  [color=red, key=2, style=dotted];
m12_100 -> m12_102  [color=red, key=1, label=options, style=dashed];
m12_101 -> m12_102  [color=red, key=0, style=solid];
m12_101 -> m12_8  [color=red, key=2, style=dotted];
m12_102 -> m12_103  [color=red, key=0, style=solid];
m12_102 -> m12_9  [color=red, key=2, style=dotted];
m12_103 -> m12_104  [color=red, key=0, style=solid];
m12_103 -> m12_10  [color=red, key=2, style=dotted];
m12_103 -> m12_83  [color=red, key=2, style=dotted];
m12_104 -> m12_105  [color=red, key=0, style=solid];
m12_104 -> m12_7  [color=red, key=2, style=dotted];
m12_104 -> m12_106  [color=red, key=1, label=options, style=dashed];
m12_105 -> m12_106  [color=red, key=0, style=solid];
m12_105 -> m12_8  [color=red, key=2, style=dotted];
m12_106 -> m12_107  [color=red, key=0, style=solid];
m12_106 -> m12_9  [color=red, key=2, style=dotted];
m12_107 -> m12_108  [color=red, key=0, style=solid];
m12_107 -> m12_10  [color=red, key=2, style=dotted];
m12_107 -> m12_83  [color=red, key=2, style=dotted];
m12_108 -> m12_91  [color=blue, key=0, style=bold];
m12_61 -> m12_62  [color=red, key=0, style=solid];
m12_62 -> m12_63  [color=red, key=0, style=solid];
m12_62 -> m12_72  [color=red, key=2, style=dotted];
m12_62 -> m12_64  [color=red, key=1, label=options, style=dashed];
m12_62 -> m12_66  [color=red, key=1, label=options, style=dashed];
m12_62 -> m12_67  [color=red, key=1, label=options, style=dashed];
m12_62 -> m12_68  [color=red, key=1, label=options, style=dashed];
m12_62 -> m12_69  [color=red, key=1, label=options, style=dashed];
m12_62 -> m12_70  [color=red, key=1, label=options, style=dashed];
m12_63 -> m12_64  [color=red, key=0, style=solid];
m12_63 -> m12_8  [color=red, key=2, style=dotted];
m12_64 -> m12_65  [color=red, key=0, style=solid];
m12_64 -> m12_9  [color=red, key=2, style=dotted];
m12_66 -> m12_67  [color=red, key=0, style=solid];
m12_66 -> m12_10  [color=red, key=2, style=dotted];
m12_66 -> m12_42  [color=red, key=2, style=dotted];
m12_67 -> m12_68  [color=red, key=0, style=solid];
m12_67 -> m12_10  [color=red, key=2, style=dotted];
m12_67 -> m12_42  [color=red, key=2, style=dotted];
m12_68 -> m12_69  [color=red, key=0, style=solid];
m12_68 -> m12_12  [color=red, key=2, style=dotted];
m12_69 -> m12_70  [color=red, key=0, style=solid];
m12_69 -> m12_10  [color=red, key=2, style=dotted];
m12_69 -> m12_11  [color=red, key=2, style=dotted];
m12_70 -> m12_71  [color=red, key=0, style=solid];
m12_70 -> m12_73  [color=red, key=2, style=dotted];
m12_65 -> m12_66  [color=red, key=0, style=solid];
m12_65 -> m12_10  [color=red, key=2, style=dotted];
m12_65 -> m12_11  [color=red, key=2, style=dotted];
m12_71 -> m12_61  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [color=red, key=0, style=solid];
m12_28 -> m12_29  [color=red, key=0, style=solid];
m12_28 -> m12_7  [color=red, key=2, style=dotted];
m12_28 -> m12_30  [color=red, key=1, label=options, style=dashed];
m12_28 -> m12_32  [color=red, key=1, label=options, style=dashed];
m12_29 -> m12_30  [color=red, key=0, style=solid];
m12_29 -> m12_8  [color=red, key=2, style=dotted];
m12_30 -> m12_31  [color=red, key=0, style=solid];
m12_30 -> m12_9  [color=red, key=2, style=dotted];
m12_32 -> m12_33  [color=red, key=0, style=solid];
m12_32 -> m12_12  [color=red, key=2, style=dotted];
m12_31 -> m12_32  [color=red, key=0, style=solid];
m12_31 -> m12_10  [color=red, key=2, style=dotted];
m12_31 -> m12_11  [color=red, key=2, style=dotted];
m12_33 -> m12_27  [color=blue, key=0, style=bold];
m12_125 -> m12_126  [color=red, key=0, style=solid];
m12_126 -> m12_127  [color=red, key=0, style=solid];
m12_126 -> m12_7  [color=red, key=2, style=dotted];
m12_126 -> m12_128  [color=red, key=1, label=options, style=dashed];
m12_126 -> m12_130  [color=red, key=1, label=options, style=dashed];
m12_126 -> m12_131  [color=red, key=1, label=options, style=dashed];
m12_126 -> m12_132  [color=red, key=1, label=options, style=dashed];
m12_127 -> m12_128  [color=red, key=0, style=solid];
m12_127 -> m12_8  [color=red, key=2, style=dotted];
m12_128 -> m12_129  [color=red, key=0, style=solid];
m12_128 -> m12_9  [color=red, key=2, style=dotted];
m12_130 -> m12_131  [color=red, key=0, style=solid];
m12_130 -> m12_12  [color=red, key=2, style=dotted];
m12_131 -> m12_132  [color=red, key=0, style=solid];
m12_131 -> m12_12  [color=red, key=2, style=dotted];
m12_132 -> m12_133  [color=red, key=0, style=solid];
m12_132 -> m12_12  [color=red, key=2, style=dotted];
m12_129 -> m12_130  [color=red, key=0, style=solid];
m12_129 -> m12_10  [color=red, key=2, style=dotted];
m12_129 -> m12_11  [color=red, key=2, style=dotted];
m12_133 -> m12_134  [color=red, key=0, style=solid];
m12_133 -> m12_7  [color=red, key=2, style=dotted];
m12_133 -> m12_135  [color=red, key=1, label=options, style=dashed];
m12_133 -> m12_137  [color=red, key=1, label=options, style=dashed];
m12_133 -> m12_138  [color=red, key=1, label=options, style=dashed];
m12_133 -> m12_139  [color=red, key=1, label=options, style=dashed];
m12_134 -> m12_135  [color=red, key=0, style=solid];
m12_134 -> m12_8  [color=red, key=2, style=dotted];
m12_135 -> m12_136  [color=red, key=0, style=solid];
m12_135 -> m12_9  [color=red, key=2, style=dotted];
m12_137 -> m12_138  [color=red, key=0, style=solid];
m12_137 -> m12_12  [color=red, key=2, style=dotted];
m12_138 -> m12_139  [color=red, key=0, style=solid];
m12_138 -> m12_12  [color=red, key=2, style=dotted];
m12_139 -> m12_140  [color=red, key=0, style=solid];
m12_139 -> m12_12  [color=red, key=2, style=dotted];
m12_136 -> m12_137  [color=red, key=0, style=solid];
m12_136 -> m12_10  [color=red, key=2, style=dotted];
m12_136 -> m12_11  [color=red, key=2, style=dotted];
m12_140 -> m12_141  [color=red, key=0, style=solid];
m12_140 -> m12_7  [color=red, key=2, style=dotted];
m12_140 -> m12_142  [color=red, key=1, label=options, style=dashed];
m12_140 -> m12_144  [color=red, key=1, label=options, style=dashed];
m12_140 -> m12_145  [color=red, key=1, label=options, style=dashed];
m12_140 -> m12_146  [color=red, key=1, label=options, style=dashed];
m12_141 -> m12_142  [color=red, key=0, style=solid];
m12_141 -> m12_8  [color=red, key=2, style=dotted];
m12_142 -> m12_143  [color=red, key=0, style=solid];
m12_142 -> m12_9  [color=red, key=2, style=dotted];
m12_144 -> m12_145  [color=red, key=0, style=solid];
m12_144 -> m12_12  [color=red, key=2, style=dotted];
m12_145 -> m12_146  [color=red, key=0, style=solid];
m12_145 -> m12_12  [color=red, key=2, style=dotted];
m12_146 -> m12_147  [color=red, key=0, style=solid];
m12_146 -> m12_12  [color=red, key=2, style=dotted];
m12_143 -> m12_144  [color=red, key=0, style=solid];
m12_143 -> m12_10  [color=red, key=2, style=dotted];
m12_143 -> m12_11  [color=red, key=2, style=dotted];
m12_147 -> m12_125  [color=blue, key=0, style=bold];
m12_210 -> m12_211  [color=red, key=0, style=solid];
m12_211 -> m12_212  [color=red, key=0, style=solid];
m12_211 -> m12_7  [color=red, key=2, style=dotted];
m12_211 -> m12_213  [color=red, key=1, label=options, style=dashed];
m12_211 -> m12_215  [color=red, key=1, label=options, style=dashed];
m12_212 -> m12_213  [color=red, key=0, style=solid];
m12_212 -> m12_217  [color=red, key=2, style=dotted];
m12_212 -> m12_218  [color=red, key=2, style=dotted];
m12_212 -> m12_219  [color=red, key=2, style=dotted];
m12_213 -> m12_214  [color=red, key=0, style=solid];
m12_213 -> m12_9  [color=red, key=2, style=dotted];
m12_215 -> m12_216  [color=red, key=0, style=solid];
m12_215 -> m12_12  [color=red, key=2, style=dotted];
m12_214 -> m12_215  [color=red, key=0, style=solid];
m12_214 -> m12_10  [color=red, key=2, style=dotted];
m12_214 -> m12_11  [color=red, key=2, style=dotted];
m12_216 -> m12_210  [color=blue, key=0, style=bold];
m12_192 -> m12_193  [color=red, key=0, style=solid];
m12_193 -> m12_194  [color=red, key=0, style=solid];
m12_193 -> m12_187  [color=red, key=2, style=dotted];
m12_193 -> m12_195  [color=red, key=1, label="lambda expression", style=dashed];
m12_194 -> m12_192  [color=blue, key=0, style=bold];
m12_207 -> m12_208  [color=red, key=0, style=solid];
m12_188 -> m12_189  [color=red, key=0, style=solid];
m12_189 -> m12_190  [color=red, key=0, style=solid];
m12_189 -> m12_8  [color=red, key=2, style=dotted];
m12_189 -> m12_191  [color=red, key=2, style=dotted];
m12_189 -> m12_9  [color=red, key=2, style=dotted];
m12_190 -> m12_188  [color=blue, key=0, style=bold];
m12_195 -> m12_196  [color=red, key=0, style=solid];
m12_196 -> m12_197  [color=red, key=0, style=solid];
m12_196 -> m12_8  [color=red, key=2, style=dotted];
m12_196 -> m12_191  [color=red, key=2, style=dotted];
m12_196 -> m12_9  [color=red, key=2, style=dotted];
m12_197 -> m12_195  [color=blue, key=0, style=bold];
m12_201 -> m12_202  [color=red, key=0, style=solid];
m12_202 -> m12_203  [color=red, key=0, style=solid];
m12_202 -> m12_8  [color=red, key=2, style=dotted];
m12_202 -> m12_191  [color=red, key=2, style=dotted];
m12_202 -> m12_9  [color=red, key=2, style=dotted];
m12_203 -> m12_201  [color=blue, key=0, style=bold];
m12_208 -> m12_209  [color=red, key=0, style=solid];
m12_208 -> m12_8  [color=red, key=2, style=dotted];
m12_208 -> m12_191  [color=red, key=2, style=dotted];
m12_208 -> m12_9  [color=red, key=2, style=dotted];
m12_209 -> m12_207  [color=blue, key=0, style=bold];
m12_231 -> m12_232  [color=red, key=0, style=solid];
m12_232 -> m12_233  [color=red, key=0, style=solid];
m12_232 -> m12_230  [color=red, key=2, style=dotted];
m12_232 -> m12_235  [color=red, key=1, label=options, style=dashed];
m12_232 -> m12_236  [color=red, key=1, label=options, style=dashed];
m12_232 -> m12_237  [color=red, key=1, label=options, style=dashed];
m12_232 -> m12_238  [color=red, key=1, label=options, style=dashed];
m12_233 -> m12_234  [color=red, key=0, style=solid];
m12_233 -> m12_9  [color=red, key=2, style=dotted];
m12_235 -> m12_236  [color=red, key=0, style=solid];
m12_235 -> m12_10  [color=red, key=2, style=dotted];
m12_235 -> m12_42  [color=red, key=2, style=dotted];
m12_236 -> m12_237  [color=red, key=0, style=solid];
m12_236 -> m12_12  [color=red, key=2, style=dotted];
m12_237 -> m12_238  [color=red, key=0, style=solid];
m12_237 -> m12_12  [color=red, key=2, style=dotted];
m12_238 -> m12_239  [color=red, key=0, style=solid];
m12_238 -> m12_10  [color=red, key=2, style=dotted];
m12_238 -> m12_11  [color=red, key=2, style=dotted];
m12_234 -> m12_235  [color=red, key=0, style=solid];
m12_234 -> m12_10  [color=red, key=2, style=dotted];
m12_234 -> m12_11  [color=red, key=2, style=dotted];
m12_239 -> m12_231  [color=blue, key=0, style=bold];
m12_109 -> m12_110  [color=red, key=0, style=solid];
m12_110 -> m12_111  [color=red, key=0, style=solid];
m12_110 -> m12_7  [color=red, key=2, style=dotted];
m12_110 -> m12_112  [color=red, key=1, label=options, style=dashed];
m12_111 -> m12_112  [color=red, key=0, style=solid];
m12_111 -> m12_8  [color=red, key=2, style=dotted];
m12_111 -> m12_115  [color=red, key=1, label=parser, style=dashed];
m12_112 -> m12_113  [color=red, key=0, style=solid];
m12_112 -> m12_9  [color=red, key=2, style=dotted];
m12_115 -> m12_116  [color=red, key=0, style=solid];
m12_115 -> m12_9  [color=red, key=2, style=dotted];
m12_113 -> m12_114  [color=red, key=0, style=solid];
m12_113 -> m12_10  [color=red, key=2, style=dotted];
m12_113 -> m12_83  [color=red, key=2, style=dotted];
m12_114 -> m12_115  [color=red, key=0, style=solid];
m12_114 -> m12_7  [color=red, key=2, style=dotted];
m12_116 -> m12_117  [color=red, key=0, style=solid];
m12_116 -> m12_10  [color=red, key=2, style=dotted];
m12_116 -> m12_83  [color=red, key=2, style=dotted];
m12_117 -> m12_109  [color=blue, key=0, style=bold];
m12_34 -> m12_35  [color=red, key=0, style=solid];
m12_35 -> m12_36  [color=red, key=0, style=solid];
m12_35 -> m12_7  [color=red, key=2, style=dotted];
m12_35 -> m12_37  [color=red, key=1, label=options, style=dashed];
m12_35 -> m12_39  [color=red, key=1, label=options, style=dashed];
m12_35 -> m12_40  [color=red, key=1, label=options, style=dashed];
m12_36 -> m12_37  [color=red, key=0, style=solid];
m12_36 -> m12_8  [color=red, key=2, style=dotted];
m12_37 -> m12_38  [color=red, key=0, style=solid];
m12_37 -> m12_9  [color=red, key=2, style=dotted];
m12_39 -> m12_40  [color=red, key=0, style=solid];
m12_39 -> m12_12  [color=red, key=2, style=dotted];
m12_40 -> m12_41  [color=red, key=0, style=solid];
m12_40 -> m12_10  [color=red, key=2, style=dotted];
m12_40 -> m12_42  [color=red, key=2, style=dotted];
m12_38 -> m12_39  [color=red, key=0, style=solid];
m12_38 -> m12_10  [color=red, key=2, style=dotted];
m12_38 -> m12_11  [color=red, key=2, style=dotted];
m12_41 -> m12_34  [color=blue, key=0, style=bold];
m12_84 -> m12_85  [color=red, key=0, style=solid];
m12_85 -> m12_86  [color=red, key=0, style=solid];
m12_85 -> m12_7  [color=red, key=2, style=dotted];
m12_85 -> m12_87  [color=red, key=1, label=options, style=dashed];
m12_85 -> m12_89  [color=red, key=1, label=options, style=dashed];
m12_86 -> m12_87  [color=red, key=0, style=solid];
m12_86 -> m12_8  [color=red, key=2, style=dotted];
m12_87 -> m12_88  [color=red, key=0, style=solid];
m12_87 -> m12_9  [color=red, key=2, style=dotted];
m12_89 -> m12_90  [color=red, key=0, style=solid];
m12_89 -> m12_12  [color=red, key=2, style=dotted];
m12_88 -> m12_89  [color=red, key=0, style=solid];
m12_88 -> m12_10  [color=red, key=2, style=dotted];
m12_88 -> m12_11  [color=red, key=2, style=dotted];
m12_90 -> m12_84  [color=blue, key=0, style=bold];
m12_118 -> m12_119  [color=red, key=0, style=solid];
m12_119 -> m12_120  [color=red, key=0, style=solid];
m12_119 -> m12_7  [color=red, key=2, style=dotted];
m12_119 -> m12_121  [color=red, key=1, label=options, style=dashed];
m12_119 -> m12_123  [color=red, key=1, label=options, style=dashed];
m12_120 -> m12_121  [color=red, key=0, style=solid];
m12_120 -> m12_8  [color=red, key=2, style=dotted];
m12_121 -> m12_122  [color=red, key=0, style=solid];
m12_121 -> m12_9  [color=red, key=2, style=dotted];
m12_123 -> m12_124  [color=red, key=0, style=solid];
m12_123 -> m12_12  [color=red, key=2, style=dotted];
m12_122 -> m12_123  [color=red, key=0, style=solid];
m12_122 -> m12_10  [color=red, key=2, style=dotted];
m12_122 -> m12_11  [color=red, key=2, style=dotted];
m12_124 -> m12_118  [color=blue, key=0, style=bold];
m12_148 -> m12_149  [color=red, key=0, style=solid];
m12_149 -> m12_150  [color=red, key=0, style=solid];
m12_149 -> m12_7  [color=red, key=2, style=dotted];
m12_149 -> m12_151  [color=red, key=1, label=options, style=dashed];
m12_149 -> m12_153  [color=red, key=1, label=options, style=dashed];
m12_149 -> m12_154  [color=red, key=1, label=options, style=dashed];
m12_149 -> m12_155  [color=red, key=1, label=options, style=dashed];
m12_149 -> m12_156  [color=red, key=1, label=options, style=dashed];
m12_150 -> m12_151  [color=red, key=0, style=solid];
m12_150 -> m12_8  [color=red, key=2, style=dotted];
m12_151 -> m12_152  [color=red, key=0, style=solid];
m12_151 -> m12_9  [color=red, key=2, style=dotted];
m12_153 -> m12_154  [color=red, key=0, style=solid];
m12_153 -> m12_12  [color=red, key=2, style=dotted];
m12_154 -> m12_155  [color=red, key=0, style=solid];
m12_154 -> m12_12  [color=red, key=2, style=dotted];
m12_155 -> m12_156  [color=red, key=0, style=solid];
m12_155 -> m12_12  [color=red, key=2, style=dotted];
m12_156 -> m12_157  [color=red, key=0, style=solid];
m12_156 -> m12_10  [color=red, key=2, style=dotted];
m12_156 -> m12_42  [color=red, key=2, style=dotted];
m12_152 -> m12_153  [color=red, key=0, style=solid];
m12_152 -> m12_10  [color=red, key=2, style=dotted];
m12_152 -> m12_11  [color=red, key=2, style=dotted];
m12_157 -> m12_158  [color=red, key=0, style=solid];
m12_157 -> m12_7  [color=red, key=2, style=dotted];
m12_157 -> m12_159  [color=red, key=1, label=options, style=dashed];
m12_157 -> m12_161  [color=red, key=1, label=options, style=dashed];
m12_157 -> m12_162  [color=red, key=1, label=options, style=dashed];
m12_157 -> m12_163  [color=red, key=1, label=options, style=dashed];
m12_157 -> m12_164  [color=red, key=1, label=options, style=dashed];
m12_158 -> m12_159  [color=red, key=0, style=solid];
m12_158 -> m12_8  [color=red, key=2, style=dotted];
m12_159 -> m12_160  [color=red, key=0, style=solid];
m12_159 -> m12_9  [color=red, key=2, style=dotted];
m12_161 -> m12_162  [color=red, key=0, style=solid];
m12_161 -> m12_10  [color=red, key=2, style=dotted];
m12_161 -> m12_42  [color=red, key=2, style=dotted];
m12_162 -> m12_163  [color=red, key=0, style=solid];
m12_162 -> m12_12  [color=red, key=2, style=dotted];
m12_163 -> m12_164  [color=red, key=0, style=solid];
m12_163 -> m12_12  [color=red, key=2, style=dotted];
m12_164 -> m12_165  [color=red, key=0, style=solid];
m12_164 -> m12_12  [color=red, key=2, style=dotted];
m12_160 -> m12_161  [color=red, key=0, style=solid];
m12_160 -> m12_10  [color=red, key=2, style=dotted];
m12_160 -> m12_11  [color=red, key=2, style=dotted];
m12_165 -> m12_166  [color=red, key=0, style=solid];
m12_165 -> m12_7  [color=red, key=2, style=dotted];
m12_165 -> m12_167  [color=red, key=1, label=options, style=dashed];
m12_165 -> m12_169  [color=red, key=1, label=options, style=dashed];
m12_165 -> m12_170  [color=red, key=1, label=options, style=dashed];
m12_165 -> m12_171  [color=red, key=1, label=options, style=dashed];
m12_165 -> m12_172  [color=red, key=1, label=options, style=dashed];
m12_166 -> m12_167  [color=red, key=0, style=solid];
m12_166 -> m12_8  [color=red, key=2, style=dotted];
m12_167 -> m12_168  [color=red, key=0, style=solid];
m12_167 -> m12_9  [color=red, key=2, style=dotted];
m12_169 -> m12_170  [color=red, key=0, style=solid];
m12_169 -> m12_12  [color=red, key=2, style=dotted];
m12_170 -> m12_171  [color=red, key=0, style=solid];
m12_170 -> m12_12  [color=red, key=2, style=dotted];
m12_171 -> m12_172  [color=red, key=0, style=solid];
m12_171 -> m12_10  [color=red, key=2, style=dotted];
m12_171 -> m12_42  [color=red, key=2, style=dotted];
m12_172 -> m12_173  [color=red, key=0, style=solid];
m12_172 -> m12_12  [color=red, key=2, style=dotted];
m12_168 -> m12_169  [color=red, key=0, style=solid];
m12_168 -> m12_10  [color=red, key=2, style=dotted];
m12_168 -> m12_11  [color=red, key=2, style=dotted];
m12_173 -> m12_174  [color=red, key=0, style=solid];
m12_173 -> m12_7  [color=red, key=2, style=dotted];
m12_173 -> m12_175  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_177  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_178  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_179  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_180  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_181  [color=red, key=1, label=options, style=dashed];
m12_173 -> m12_182  [color=red, key=1, label=options, style=dashed];
m12_174 -> m12_175  [color=red, key=0, style=solid];
m12_174 -> m12_8  [color=red, key=2, style=dotted];
m12_175 -> m12_176  [color=red, key=0, style=solid];
m12_175 -> m12_9  [color=red, key=2, style=dotted];
m12_177 -> m12_178  [color=red, key=0, style=solid];
m12_177 -> m12_10  [color=red, key=2, style=dotted];
m12_177 -> m12_11  [color=red, key=2, style=dotted];
m12_178 -> m12_179  [color=red, key=0, style=solid];
m12_178 -> m12_12  [color=red, key=2, style=dotted];
m12_179 -> m12_180  [color=red, key=0, style=solid];
m12_179 -> m12_12  [color=red, key=2, style=dotted];
m12_180 -> m12_181  [color=red, key=0, style=solid];
m12_180 -> m12_10  [color=red, key=2, style=dotted];
m12_180 -> m12_42  [color=red, key=2, style=dotted];
m12_181 -> m12_182  [color=red, key=0, style=solid];
m12_181 -> m12_12  [color=red, key=2, style=dotted];
m12_182 -> m12_183  [color=red, key=0, style=solid];
m12_182 -> m12_10  [color=red, key=2, style=dotted];
m12_182 -> m12_42  [color=red, key=2, style=dotted];
m12_176 -> m12_177  [color=red, key=0, style=solid];
m12_176 -> m12_10  [color=red, key=2, style=dotted];
m12_176 -> m12_11  [color=red, key=2, style=dotted];
m12_183 -> m12_148  [color=blue, key=0, style=bold];
m12_184 -> m12_185  [color=red, key=0, style=solid];
m12_185 -> m12_186  [color=red, key=0, style=solid];
m12_185 -> m12_187  [color=red, key=2, style=dotted];
m12_185 -> m12_188  [color=red, key=1, label="lambda expression", style=dashed];
m12_186 -> m12_184  [color=blue, key=0, style=bold];
m12_13 -> m12_14  [color=red, key=0, style=solid];
m12_14 -> m12_15  [color=red, key=0, style=solid];
m12_14 -> m12_7  [color=red, key=2, style=dotted];
m12_14 -> m12_16  [color=red, key=1, label=options, style=dashed];
m12_14 -> m12_18  [color=red, key=1, label=options, style=dashed];
m12_15 -> m12_16  [color=red, key=0, style=solid];
m12_15 -> m12_8  [color=red, key=2, style=dotted];
m12_16 -> m12_17  [color=red, key=0, style=solid];
m12_16 -> m12_9  [color=red, key=2, style=dotted];
m12_18 -> m12_19  [color=red, key=0, style=solid];
m12_18 -> m12_12  [color=red, key=2, style=dotted];
m12_17 -> m12_18  [color=red, key=0, style=solid];
m12_17 -> m12_10  [color=red, key=2, style=dotted];
m12_17 -> m12_11  [color=red, key=2, style=dotted];
m12_19 -> m12_13  [color=blue, key=0, style=bold];
m12_74 -> m12_75  [color=red, key=0, style=solid];
m12_75 -> m12_76  [color=red, key=0, style=solid];
m12_75 -> m12_7  [color=red, key=2, style=dotted];
m12_75 -> m12_77  [color=red, key=1, label=options, style=dashed];
m12_76 -> m12_77  [color=red, key=0, style=solid];
m12_76 -> m12_8  [color=red, key=2, style=dotted];
m12_76 -> m12_80  [color=red, key=1, label=parser, style=dashed];
m12_77 -> m12_78  [color=red, key=0, style=solid];
m12_77 -> m12_9  [color=red, key=2, style=dotted];
m12_80 -> m12_81  [color=red, key=0, style=solid];
m12_80 -> m12_9  [color=red, key=2, style=dotted];
m12_78 -> m12_79  [color=red, key=0, style=solid];
m12_78 -> m12_10  [color=red, key=2, style=dotted];
m12_78 -> m12_83  [color=red, key=2, style=dotted];
m12_79 -> m12_80  [color=red, key=0, style=solid];
m12_79 -> m12_7  [color=red, key=2, style=dotted];
m12_81 -> m12_82  [color=red, key=0, style=solid];
m12_81 -> m12_10  [color=red, key=2, style=dotted];
m12_81 -> m12_83  [color=red, key=2, style=dotted];
m12_82 -> m12_74  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [color=red, key=0, style=solid];
m12_21 -> m12_22  [color=red, key=0, style=solid];
m12_21 -> m12_7  [color=red, key=2, style=dotted];
m12_21 -> m12_23  [color=red, key=1, label=options, style=dashed];
m12_21 -> m12_25  [color=red, key=1, label=options, style=dashed];
m12_22 -> m12_23  [color=red, key=0, style=solid];
m12_22 -> m12_8  [color=red, key=2, style=dotted];
m12_23 -> m12_24  [color=red, key=0, style=solid];
m12_23 -> m12_9  [color=red, key=2, style=dotted];
m12_25 -> m12_26  [color=red, key=0, style=solid];
m12_25 -> m12_12  [color=red, key=2, style=dotted];
m12_24 -> m12_25  [color=red, key=0, style=solid];
m12_24 -> m12_10  [color=red, key=2, style=dotted];
m12_24 -> m12_11  [color=red, key=2, style=dotted];
m12_26 -> m12_20  [color=blue, key=0, style=bold];
m12_240 -> m12_5  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_18  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_25  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_32  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_39  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_49  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_57  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_68  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_70  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_89  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_123  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_130  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_131  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_132  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_137  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_138  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_139  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_144  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_145  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_146  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_153  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_154  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_155  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_162  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_163  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_164  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_169  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_170  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_172  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_178  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_179  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_181  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_215  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_226  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_227  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_236  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m12_240 -> m12_237  [color=red, key=1, label="CommandLine.Tests.Unit.Parser.OptionArrayAttributeParsingFixture", style=dashed];
m13_68 -> m13_69  [color=red, key=0, style=solid];
m13_68 -> m13_70  [color=red, key=1, label=object, style=dashed];
m13_69 -> m13_70  [color=red, key=0, style=solid];
m13_69 -> m13_73  [color=red, key=0, style=solid];
m13_70 -> m13_71  [color=red, key=0, style=solid];
m13_70 -> m13_73  [color=red, key=0, style=solid];
m13_70 -> m13_35  [color=red, key=2, style=dotted];
m13_71 -> m13_72  [color=red, key=0, style=solid];
m13_72 -> m13_73  [color=red, key=0, style=solid];
m13_72 -> m13_36  [color=red, key=2, style=dotted];
m13_73 -> m13_68  [color=blue, key=0, style=bold];
m13_64 -> m13_65  [color=red, key=0, style=solid];
m13_65 -> m13_66  [color=red, key=0, style=solid];
m13_65 -> m13_35  [color=red, key=2, style=dotted];
m13_66 -> m13_67  [color=red, key=0, style=solid];
m13_67 -> m13_64  [color=blue, key=0, style=bold];
m13_44 -> m13_74  [color=red, key=0, style=solid];
m13_44 -> m13_75  [color=red, key=1, label=object, style=dashed];
m13_44 -> m13_76  [color=red, key=1, label=string, style=dashed];
m13_44 -> m13_37  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m13_74 -> m13_75  [color=red, key=0, style=solid];
m13_74 -> m13_81  [color=red, key=2, style=dotted];
m13_74 -> m13_35  [color=red, key=2, style=dotted];
m13_75 -> m13_76  [color=red, key=0, style=solid];
m13_75 -> m13_25  [color=red, key=2, style=dotted];
m13_75 -> m13_78  [color=red, key=1, label=fieldRef, style=dashed];
m13_76 -> m13_77  [color=red, key=0, style=solid];
m13_76 -> m13_82  [color=red, key=2, style=dotted];
m13_78 -> m13_77  [color=red, key=0, style=solid];
m13_78 -> m13_83  [color=red, key=2, style=dotted];
m13_77 -> m13_78  [color=red, key=0, style=solid];
m13_77 -> m13_79  [color=red, key=0, style=solid];
m13_79 -> m13_80  [color=red, key=0, style=solid];
m13_80 -> m13_44  [color=blue, key=0, style=bold];
m13_48 -> m13_49  [color=red, key=0, style=solid];
m13_48 -> m13_50  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m13_48 -> m13_53  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m13_48 -> m13_54  [color=red, key=1, label=object, style=dashed];
m13_48 -> m13_56  [color=red, key=3, label="method methodReturn bool SetValue", style=bold];
m13_49 -> m13_50  [color=red, key=0, style=solid];
m13_49 -> m13_60  [color=red, key=2, style=dotted];
m13_49 -> m13_53  [color=red, key=1, label=elementType, style=dashed];
m13_50 -> m13_51  [color=red, key=0, style=solid];
m13_50 -> m13_61  [color=red, key=2, style=dotted];
m13_50 -> m13_52  [color=red, key=1, label=array, style=dashed];
m13_50 -> m13_53  [color=red, key=1, label=array, style=dashed];
m13_50 -> m13_54  [color=red, key=1, label=array, style=dashed];
m13_53 -> m13_54  [color=red, key=0, style=solid];
m13_53 -> m13_62  [color=red, key=2, style=dotted];
m13_53 -> m13_63  [color=red, key=2, style=dotted];
m13_54 -> m13_55  [color=red, key=0, style=solid];
m13_54 -> m13_57  [color=red, key=0, style=solid];
m13_54 -> m13_35  [color=red, key=2, style=dotted];
m13_51 -> m13_52  [color=red, key=0, style=solid];
m13_51 -> m13_53  [color=red, key=1, label=i, style=dashed];
m13_51 -> m13_57  [color=red, key=1, label=i, style=dashed];
m13_51 -> m13_51  [color=red, key=3, label="Local variable int i", style=bold];
m13_52 -> m13_53  [color=red, key=0, style=solid];
m13_52 -> m13_58  [color=red, key=0, style=solid];
m13_57 -> m13_52  [color=red, key=0, style=solid];
m13_57 -> m13_57  [color=red, key=1, label=i, style=dashed];
m13_58 -> m13_59  [color=red, key=0, style=solid];
m13_55 -> m13_56  [color=red, key=0, style=solid];
m13_56 -> m13_59  [color=red, key=0, style=solid];
m13_59 -> m13_48  [color=blue, key=0, style=bold];
m13_37 -> m13_38  [color=red, key=0, style=solid];
m13_37 -> m13_39  [color=red, key=1, label=string, style=dashed];
m13_37 -> m13_41  [color=red, key=1, label=string, style=dashed];
m13_37 -> m13_42  [color=red, key=1, label=string, style=dashed];
m13_37 -> m13_44  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m13_38 -> m13_39  [color=red, key=0, style=solid];
m13_38 -> m13_40  [color=red, key=0, style=solid];
m13_39 -> m13_43  [color=red, key=0, style=solid];
m13_39 -> m13_44  [color=red, key=2, style=dotted];
m13_41 -> m13_43  [color=red, key=0, style=solid];
m13_41 -> m13_46  [color=red, key=2, style=dotted];
m13_42 -> m13_43  [color=red, key=0, style=solid];
m13_42 -> m13_47  [color=red, key=2, style=dotted];
m13_40 -> m13_41  [color=red, key=0, style=solid];
m13_40 -> m13_42  [color=red, key=0, style=solid];
m13_40 -> m13_45  [color=red, key=2, style=dotted];
m13_43 -> m13_37  [color=blue, key=0, style=bold];
m13_17 -> m13_0  [color=darkorchid, key=3, label="Field variable System.Reflection.PropertyInfo _property", style=bold];
m13_22 -> m13_23  [color=red, key=0, style=solid];
m13_23 -> m13_24  [color=red, key=0, style=solid];
m13_23 -> m13_25  [color=red, key=2, style=dotted];
m13_24 -> m13_22  [color=blue, key=0, style=bold];
m13_18 -> m13_19  [color=red, key=0, style=solid];
m13_18 -> m13_20  [color=red, key=1, label=string, style=dashed];
m13_19 -> m13_20  [color=red, key=0, style=solid];
m13_20 -> m13_21  [color=red, key=0, style=solid];
m13_21 -> m13_18  [color=blue, key=0, style=bold];
m13_26 -> m13_27  [color=red, key=0, style=solid];
m13_26 -> m13_29  [color=red, key=1, label=object, style=dashed];
m13_27 -> m13_28  [color=red, key=0, style=solid];
m13_27 -> m13_27  [color=red, key=3, label="Local variable object instance", style=bold];
m13_29 -> m13_30  [color=red, key=0, style=solid];
m13_29 -> m13_32  [color=red, key=0, style=solid];
m13_29 -> m13_35  [color=red, key=2, style=dotted];
m13_28 -> m13_29  [color=red, key=0, style=solid];
m13_28 -> m13_34  [color=red, key=2, style=dotted];
m13_28 -> m13_32  [color=red, key=1, label=instance, style=dashed];
m13_32 -> m13_33  [color=red, key=0, style=solid];
m13_30 -> m13_31  [color=red, key=0, style=solid];
m13_31 -> m13_33  [color=red, key=0, style=solid];
m13_31 -> m13_36  [color=red, key=2, style=dotted];
m13_33 -> m13_26  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=red, key=0, style=solid];
m13_0 -> m13_3  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m13_0 -> m13_5  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_6  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_7  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_8  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_9  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_10  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_11  [color=red, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m13_0 -> m13_12  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m13_0 -> m13_13  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m13_1 -> m13_2  [color=red, key=0, style=solid];
m13_1 -> m13_3  [color=red, key=0, style=solid];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_5  [color=red, key=0, style=solid];
m13_5 -> m13_6  [color=red, key=0, style=solid];
m13_6 -> m13_7  [color=red, key=0, style=solid];
m13_7 -> m13_8  [color=red, key=0, style=solid];
m13_8 -> m13_9  [color=red, key=0, style=solid];
m13_9 -> m13_10  [color=red, key=0, style=solid];
m13_10 -> m13_11  [color=red, key=0, style=solid];
m13_11 -> m13_12  [color=red, key=0, style=solid];
m13_12 -> m13_13  [color=red, key=0, style=solid];
m13_13 -> m13_14  [color=red, key=0, style=solid];
m13_2 -> m13_15  [color=red, key=0, style=solid];
m13_2 -> m13_16  [color=red, key=2, style=dotted];
m13_4 -> m13_15  [color=red, key=0, style=solid];
m13_4 -> m13_16  [color=red, key=2, style=dotted];
m13_14 -> m13_15  [color=red, key=0, style=solid];
m13_14 -> m13_17  [color=red, key=2, style=dotted];
m13_15 -> m13_0  [color=blue, key=0, style=bold];
m13_84 -> m13_5  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_6  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_7  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_8  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_9  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_10  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_11  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_12  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_13  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_14  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_19  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_20  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_23  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_28  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_29  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_38  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_39  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_40  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_41  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_42  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_49  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_53  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_54  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_58  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_65  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_66  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_69  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_70  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_74  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_75  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_76  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m13_84 -> m13_79  [color=red, key=1, label="CommandLine.Parsing.OptionInfo", style=dashed];
m14_16 -> m14_17  [color=red, key=0, style=solid];
m14_17 -> m14_18  [color=red, key=0, style=solid];
m14_18 -> m14_16  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [color=red, key=0, style=solid];
m14_1 -> m14_2  [color=red, key=0, style=solid];
m14_1 -> m14_9  [color=red, key=2, style=dotted];
m14_1 -> m14_4  [color=red, key=1, label=options, style=dashed];
m14_1 -> m14_6  [color=red, key=1, label=options, style=dashed];
m14_1 -> m14_7  [color=red, key=1, label=options, style=dashed];
m14_2 -> m14_3  [color=red, key=0, style=solid];
m14_2 -> m14_10  [color=red, key=2, style=dotted];
m14_2 -> m14_4  [color=red, key=1, label=parser, style=dashed];
m14_4 -> m14_5  [color=red, key=0, style=solid];
m14_4 -> m14_11  [color=red, key=2, style=dotted];
m14_6 -> m14_7  [color=red, key=0, style=solid];
m14_6 -> m14_12  [color=red, key=2, style=dotted];
m14_6 -> m14_14  [color=red, key=2, style=dotted];
m14_6 -> m14_16  [color=red, key=1, label="lambda expression", style=dashed];
m14_7 -> m14_8  [color=red, key=0, style=solid];
m14_7 -> m14_12  [color=red, key=2, style=dotted];
m14_7 -> m14_15  [color=red, key=2, style=dotted];
m14_3 -> m14_4  [color=red, key=0, style=solid];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_5 -> m14_12  [color=red, key=2, style=dotted];
m14_5 -> m14_13  [color=red, key=2, style=dotted];
m14_8 -> m14_0  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [color=red, key=0, style=solid];
m15_18 -> m15_28  [color=red, key=3, label="Parameter variable string longName", style=bold];
m15_18 -> m15_30  [color=red, key=3, label="Parameter variable string longName", style=bold];
m15_19 -> m15_20  [color=red, key=0, style=solid];
m15_19 -> m15_25  [color=red, key=2, style=dotted];
m15_19 -> m15_21  [color=red, key=1, label=oa, style=dashed];
m15_19 -> m15_23  [color=red, key=1, label=oa, style=dashed];
m15_20 -> m15_21  [color=red, key=0, style=solid];
m15_20 -> m15_16  [color=red, key=2, style=dotted];
m15_20 -> m15_22  [color=red, key=1, label=oi, style=dashed];
m15_21 -> m15_22  [color=red, key=0, style=solid];
m15_23 -> m15_24  [color=red, key=0, style=solid];
m15_23 -> m15_17  [color=red, key=2, style=dotted];
m15_22 -> m15_23  [color=red, key=0, style=solid];
m15_22 -> m15_17  [color=red, key=2, style=dotted];
m15_24 -> m15_18  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [color=red, key=0, style=solid];
m15_0 -> m15_2  [color=red, key=1, label=int, style=dashed];
m15_0 -> m15_3  [color=red, key=1, label=int, style=dashed];
m15_1 -> m15_2  [color=red, key=0, style=solid];
m15_1 -> m15_5  [color=red, key=2, style=dotted];
m15_1 -> m15_6  [color=red, key=2, style=dotted];
m15_2 -> m15_3  [color=red, key=0, style=solid];
m15_2 -> m15_7  [color=red, key=2, style=dotted];
m15_3 -> m15_4  [color=red, key=0, style=solid];
m15_3 -> m15_7  [color=red, key=2, style=dotted];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [color=red, key=0, style=solid];
m15_8 -> m15_29  [color=red, key=3, label="Parameter variable string longName", style=bold];
m15_9 -> m15_10  [color=red, key=0, style=solid];
m15_9 -> m15_15  [color=red, key=2, style=dotted];
m15_9 -> m15_11  [color=red, key=1, label=oa, style=dashed];
m15_9 -> m15_13  [color=red, key=1, label=oa, style=dashed];
m15_10 -> m15_11  [color=red, key=0, style=solid];
m15_10 -> m15_16  [color=red, key=2, style=dotted];
m15_10 -> m15_12  [color=red, key=1, label=oi, style=dashed];
m15_11 -> m15_12  [color=red, key=0, style=solid];
m15_13 -> m15_14  [color=red, key=0, style=solid];
m15_13 -> m15_17  [color=red, key=2, style=dotted];
m15_12 -> m15_13  [color=red, key=0, style=solid];
m15_12 -> m15_17  [color=red, key=2, style=dotted];
m15_14 -> m15_8  [color=blue, key=0, style=bold];
m15_38 -> m15_39  [color=red, key=0, style=solid];
m15_38 -> m15_47  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_38 -> m15_48  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_38 -> m15_49  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_38 -> m15_50  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>", style=dashed];
m15_38 -> m15_51  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>", style=dashed];
m15_38 -> m15_52  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>", style=dashed];
m15_38 -> m15_53  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Parsing.OptionInfo>", style=dashed];
m15_38 -> m15_54  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_38 -> m15_55  [color=darkseagreen4, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_38 -> m15_38  [color=darkorchid, key=3, label="method methodReturn CommandLine.Parsing.OptionMap CreateMap", style=bold];
m15_39 -> m15_40  [color=red, key=0, style=solid];
m15_39 -> m15_41  [color=red, key=0, style=solid];
m15_47 -> m15_48  [color=red, key=0, style=solid];
m15_48 -> m15_49  [color=red, key=0, style=solid];
m15_49 -> m15_50  [color=red, key=0, style=solid];
m15_50 -> m15_51  [color=red, key=0, style=solid];
m15_50 -> m15_54  [color=red, key=0, style=solid];
m15_51 -> m15_52  [color=red, key=0, style=solid];
m15_52 -> m15_53  [color=red, key=0, style=solid];
m15_53 -> m15_54  [color=red, key=0, style=solid];
m15_54 -> m15_55  [color=red, key=0, style=solid];
m15_40 -> m15_41  [color=red, key=0, style=solid];
m15_40 -> m15_5  [color=red, key=2, style=dotted];
m15_40 -> m15_6  [color=red, key=2, style=dotted];
m15_40 -> m15_47  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_40 -> m15_48  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_40 -> m15_49  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_40 -> m15_54  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_40 -> m15_55  [color=red, key=1, label="ref CommandLine.Parsing.OptionMap", style=dashed];
m15_41 -> m15_42  [color=red, key=0, style=solid];
m15_41 -> m15_25  [color=red, key=2, style=dotted];
m15_41 -> m15_44  [color=red, key=1, label=attribute1, style=dashed];
m15_41 -> m15_47  [color=red, key=1, label=attribute1, style=dashed];
m15_41 -> m15_51  [color=red, key=1, label=attribute1, style=dashed];
m15_41 -> m15_52  [color=red, key=1, label=attribute1, style=dashed];
m15_42 -> m15_43  [color=red, key=0, style=solid];
m15_42 -> m15_15  [color=red, key=2, style=dotted];
m15_42 -> m15_45  [color=red, key=1, label=attribute2, style=dashed];
m15_42 -> m15_48  [color=red, key=1, label=attribute2, style=dashed];
m15_42 -> m15_53  [color=red, key=1, label=attribute2, style=dashed];
m15_44 -> m15_45  [color=red, key=0, style=solid];
m15_44 -> m15_16  [color=red, key=2, style=dotted];
m15_44 -> m15_47  [color=red, key=1, label=option1, style=dashed];
m15_44 -> m15_51  [color=red, key=1, label=option1, style=dashed];
m15_43 -> m15_44  [color=red, key=0, style=solid];
m15_43 -> m15_25  [color=red, key=2, style=dotted];
m15_43 -> m15_46  [color=red, key=1, label=attribute3, style=dashed];
m15_43 -> m15_49  [color=red, key=1, label=attribute3, style=dashed];
m15_45 -> m15_46  [color=red, key=0, style=solid];
m15_45 -> m15_16  [color=red, key=2, style=dotted];
m15_45 -> m15_48  [color=red, key=1, label=option2, style=dashed];
m15_45 -> m15_52  [color=red, key=1, label=option2, style=dashed];
m15_46 -> m15_47  [color=red, key=0, style=solid];
m15_46 -> m15_16  [color=red, key=2, style=dotted];
m15_46 -> m15_49  [color=red, key=1, label=option3, style=dashed];
m15_46 -> m15_53  [color=red, key=1, label=option3, style=dashed];
m15_55 -> m15_38  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [color=red, key=0, style=solid];
m15_27 -> m15_28  [color=red, key=0, style=solid];
m15_27 -> m15_0  [color=red, key=2, style=dotted];
m15_27 -> m15_29  [color=red, key=1, label=omBuilder, style=dashed];
m15_27 -> m15_30  [color=red, key=1, label=omBuilder, style=dashed];
m15_27 -> m15_31  [color=red, key=1, label=omBuilder, style=dashed];
m15_27 -> m15_32  [color=red, key=1, label=omBuilder, style=dashed];
m15_27 -> m15_33  [color=red, key=1, label=omBuilder, style=dashed];
m15_27 -> m15_34  [color=red, key=1, label=omBuilder, style=dashed];
m15_28 -> m15_29  [color=red, key=0, style=solid];
m15_28 -> m15_18  [color=red, key=2, style=dotted];
m15_29 -> m15_30  [color=red, key=0, style=solid];
m15_29 -> m15_8  [color=red, key=2, style=dotted];
m15_30 -> m15_31  [color=red, key=0, style=solid];
m15_30 -> m15_18  [color=red, key=2, style=dotted];
m15_31 -> m15_32  [color=red, key=0, style=solid];
m15_31 -> m15_33  [color=red, key=1, label=optionMap, style=dashed];
m15_31 -> m15_34  [color=red, key=1, label=optionMap, style=dashed];
m15_32 -> m15_33  [color=red, key=0, style=solid];
m15_32 -> m15_36  [color=red, key=2, style=dotted];
m15_32 -> m15_37  [color=red, key=2, style=dotted];
m15_33 -> m15_34  [color=red, key=0, style=solid];
m15_33 -> m15_36  [color=red, key=2, style=dotted];
m15_33 -> m15_37  [color=red, key=2, style=dotted];
m15_34 -> m15_35  [color=red, key=0, style=solid];
m15_34 -> m15_36  [color=red, key=2, style=dotted];
m15_34 -> m15_37  [color=red, key=2, style=dotted];
m15_35 -> m15_26  [color=blue, key=0, style=bold];
m15_56 -> m15_1  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_2  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_3  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_11  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_12  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_13  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_21  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_22  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m15_56 -> m15_23  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.OptionMapFixture.OptionMapBuilder", style=dashed];
m16_4 -> m16_5  [color=red, key=0, style=solid];
m16_5 -> m16_6  [color=red, key=0, style=solid];
m16_5 -> m16_7  [color=red, key=2, style=dotted];
m16_6 -> m16_4  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [color=red, key=0, style=solid];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_1 -> m16_3  [color=red, key=2, style=dotted];
m16_1 -> m16_4  [color=red, key=1, label="lambda expression", style=dashed];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_8 -> m16_1  [color=red, key=1, label="CSharpTemplate.Options", style=dashed];
m16_8 -> m16_5  [color=red, key=1, label="CSharpTemplate.Options", style=dashed];
m18_29 -> m18_27  [color=green, key=3, label="Parameter variable System.Func<T> factory", style=bold];
m18_29 -> m18_34  [color=green, key=0, style=solid];
m18_29 -> m18_36  [color=green, key=1, label="string[]", style=dashed];
m18_29 -> m18_38  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_29 -> m18_42  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_29 -> m18_24  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
m18_29 -> m18_40  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m18_34 -> m18_35  [color=green, key=0, style=solid];
m18_34 -> m18_36  [color=green, key=0, style=solid];
m18_35 -> m18_39  [color=green, key=0, style=solid];
m18_35 -> m18_15  [color=green, key=2, style=dotted];
m18_36 -> m18_37  [color=green, key=0, style=solid];
m18_36 -> m18_38  [color=green, key=0, style=solid];
m18_37 -> m18_39  [color=green, key=0, style=solid];
m18_37 -> m18_15  [color=green, key=2, style=dotted];
m18_38 -> m18_39  [color=green, key=0, style=solid];
m18_38 -> m18_40  [color=green, key=2, style=dotted];
m18_38 -> m18_41  [color=green, key=1, label="lambda expression", style=dashed];
m18_39 -> m18_29  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_8 -> m18_12  [color=green, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_9 -> m18_11  [color=green, key=0, style=solid];
m18_10 -> m18_14  [color=green, key=0, style=solid];
m18_10 -> m18_15  [color=green, key=2, style=dotted];
m18_11 -> m18_12  [color=green, key=0, style=solid];
m18_11 -> m18_4  [color=green, key=2, style=dotted];
m18_12 -> m18_13  [color=green, key=0, style=solid];
m18_12 -> m18_16  [color=green, key=2, style=dotted];
m18_13 -> m18_14  [color=green, key=0, style=solid];
m18_14 -> m18_8  [color=blue, key=0, style=bold];
m18_20 -> m18_21  [color=green, key=0, style=solid];
m18_21 -> m18_22  [color=green, key=0, style=solid];
m18_21 -> m18_23  [color=green, key=2, style=dotted];
m18_22 -> m18_20  [color=blue, key=0, style=bold];
m18_45 -> m18_46  [color=green, key=0, style=solid];
m18_45 -> m18_48  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_45 -> m18_50  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_45 -> m18_52  [color=green, key=1, label="string[]", style=dashed];
m18_45 -> m18_56  [color=green, key=1, label="string[]", style=dashed];
m18_45 -> m18_40  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> ParseArguments", style=bold];
m18_46 -> m18_47  [color=green, key=0, style=solid];
m18_46 -> m18_48  [color=green, key=0, style=solid];
m18_47 -> m18_53  [color=green, key=0, style=solid];
m18_47 -> m18_15  [color=green, key=2, style=dotted];
m18_48 -> m18_49  [color=green, key=0, style=solid];
m18_48 -> m18_50  [color=green, key=0, style=solid];
m18_49 -> m18_53  [color=green, key=0, style=solid];
m18_49 -> m18_15  [color=green, key=2, style=dotted];
m18_50 -> m18_51  [color=green, key=0, style=solid];
m18_50 -> m18_52  [color=green, key=0, style=solid];
m18_51 -> m18_53  [color=green, key=0, style=solid];
m18_51 -> m18_54  [color=green, key=2, style=dotted];
m18_52 -> m18_53  [color=green, key=0, style=solid];
m18_52 -> m18_40  [color=green, key=2, style=dotted];
m18_52 -> m18_55  [color=green, key=1, label="lambda expression", style=dashed];
m18_53 -> m18_45  [color=blue, key=0, style=bold];
m18_3 -> m18_17  [color=green, key=0, style=solid];
m18_17 -> m18_18  [color=green, key=0, style=solid];
m18_18 -> m18_19  [color=green, key=0, style=solid];
m18_19 -> m18_3  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [color=green, key=0, style=solid];
m18_6 -> m18_7  [color=green, key=0, style=solid];
m18_6 -> m18_4  [color=green, key=2, style=dotted];
m18_7 -> m18_5  [color=blue, key=0, style=bold];
m18_68 -> m18_79  [color=green, key=0, style=solid];
m18_68 -> m18_80  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_68 -> m18_87  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_68 -> m18_81  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m18_68 -> m18_67  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
m18_68 -> m18_68  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp", style=bold];
m18_79 -> m18_80  [color=green, key=0, style=solid];
m18_79 -> m18_81  [color=green, key=0, style=solid];
m18_79 -> m18_83  [color=green, key=2, style=dotted];
m18_80 -> m18_81  [color=green, key=0, style=solid];
m18_80 -> m18_84  [color=green, key=2, style=dotted];
m18_80 -> m18_85  [color=green, key=2, style=dotted];
m18_80 -> m18_86  [color=green, key=1, label="lambda expression", style=dashed];
m18_81 -> m18_82  [color=green, key=0, style=solid];
m18_82 -> m18_68  [color=blue, key=0, style=bold];
m18_86 -> m18_87  [color=green, key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_1 -> m18_3  [color=green, key=2, style=dotted];
m18_1 -> m18_4  [color=green, key=2, style=dotted];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_30 -> m18_31  [color=green, key=0, style=solid];
m18_31 -> m18_32  [color=green, key=0, style=solid];
m18_31 -> m18_33  [color=green, key=2, style=dotted];
m18_32 -> m18_30  [color=blue, key=0, style=bold];
m18_41 -> m18_42  [color=green, key=0, style=solid];
m18_42 -> m18_43  [color=green, key=0, style=solid];
m18_42 -> m18_44  [color=green, key=2, style=dotted];
m18_43 -> m18_41  [color=blue, key=0, style=bold];
m18_55 -> m18_56  [color=green, key=0, style=solid];
m18_56 -> m18_57  [color=green, key=0, style=solid];
m18_56 -> m18_58  [color=green, key=2, style=dotted];
m18_57 -> m18_55  [color=blue, key=0, style=bold];
m18_72 -> m18_73  [color=green, key=0, style=solid];
m18_73 -> m18_74  [color=green, key=0, style=solid];
m18_73 -> m18_75  [color=green, key=2, style=dotted];
m18_73 -> m18_76  [color=green, key=1, label="lambda expression", style=dashed];
m18_74 -> m18_72  [color=blue, key=0, style=bold];
m18_76 -> m18_77  [color=green, key=0, style=solid];
m18_77 -> m18_78  [color=green, key=0, style=solid];
m18_78 -> m18_76  [color=blue, key=0, style=bold];
m18_87 -> m18_88  [color=green, key=0, style=solid];
m18_87 -> m18_89  [color=green, key=2, style=dotted];
m18_87 -> m18_90  [color=green, key=2, style=dotted];
m18_88 -> m18_86  [color=blue, key=0, style=bold];
m18_67 -> m18_69  [color=green, key=0, style=solid];
m18_69 -> m18_70  [color=green, key=0, style=solid];
m18_69 -> m18_71  [color=green, key=2, style=dotted];
m18_69 -> m18_72  [color=green, key=1, label="lambda expression", style=dashed];
m18_70 -> m18_67  [color=blue, key=0, style=bold];
m18_24 -> m18_25  [color=green, key=0, style=solid];
m18_24 -> m18_27  [color=green, key=1, label="string[]", style=dashed];
m18_24 -> m18_29  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m18_25 -> m18_26  [color=green, key=0, style=solid];
m18_25 -> m18_27  [color=green, key=0, style=solid];
m18_26 -> m18_28  [color=green, key=0, style=solid];
m18_26 -> m18_15  [color=green, key=2, style=dotted];
m18_27 -> m18_28  [color=green, key=0, style=solid];
m18_27 -> m18_29  [color=green, key=2, style=dotted];
m18_27 -> m18_30  [color=green, key=1, label="lambda expression", style=dashed];
m18_28 -> m18_24  [color=blue, key=0, style=bold];
m18_40 -> m18_38  [color=green, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m18_40 -> m18_52  [color=green, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m18_40 -> m18_64  [color=green, key=0, style=solid];
m18_40 -> m18_68  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult", style=bold];
m18_64 -> m18_65  [color=green, key=0, style=solid];
m18_64 -> m18_66  [color=green, key=2, style=dotted];
m18_64 -> m18_67  [color=green, key=2, style=dotted];
m18_64 -> m18_68  [color=green, key=2, style=dotted];
m18_65 -> m18_40  [color=blue, key=0, style=bold];
m18_59 -> m18_60  [color=green, key=0, style=solid];
m18_60 -> m18_61  [color=green, key=0, style=solid];
m18_60 -> m18_23  [color=green, key=2, style=dotted];
m18_61 -> m18_62  [color=green, key=0, style=solid];
m18_61 -> m18_63  [color=green, key=2, style=dotted];
m18_62 -> m18_59  [color=blue, key=0, style=bold];
m18_23 -> m18_21  [color=green, key=3, label="Parameter variable bool disposing", style=bold];
m18_23 -> m18_60  [color=green, key=3, label="Parameter variable bool disposing", style=bold];
m18_23 -> m18_91  [color=green, key=0, style=solid];
m18_23 -> m18_93  [color=green, key=1, label=bool, style=dashed];
m18_91 -> m18_92  [color=green, key=0, style=solid];
m18_91 -> m18_93  [color=green, key=0, style=solid];
m18_92 -> m18_97  [color=green, key=0, style=solid];
m18_93 -> m18_94  [color=green, key=0, style=solid];
m18_93 -> m18_97  [color=green, key=0, style=solid];
m18_94 -> m18_95  [color=green, key=0, style=solid];
m18_94 -> m18_96  [color=green, key=0, style=solid];
m18_95 -> m18_96  [color=green, key=0, style=solid];
m18_95 -> m18_98  [color=green, key=2, style=dotted];
m18_96 -> m18_97  [color=green, key=0, style=solid];
m18_97 -> m18_23  [color=blue, key=0, style=bold];
m18_99 -> m18_6  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_12  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_11  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_13  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_17  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_18  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_21  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_27  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_38  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_42  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_52  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_56  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_60  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_61  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_91  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_94  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_95  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_99 -> m18_96  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m18_100 -> m18_42  [color=green, key=1, label="System.Func<T>", style=dashed];
m18_101 -> m18_42  [color=green, key=1, label="string[]", style=dashed];
m18_102 -> m18_56  [color=green, key=1, label="string[]", style=dashed];
m18_103 -> m18_56  [color=green, key=1, label="params System.Type[]", style=dashed];
m18_104 -> m18_87  [color=green, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m19_0 -> m19_1  [color=red, key=0, style=solid];
m19_0 -> m19_2  [color=red, key=1, label="string[]", style=dashed];
m19_1 -> m19_2  [color=red, key=0, style=solid];
m19_1 -> m19_8  [color=red, key=2, style=dotted];
m19_1 -> m19_4  [color=red, key=1, label=options, style=dashed];
m19_1 -> m19_5  [color=red, key=1, label=options, style=dashed];
m19_1 -> m19_6  [color=red, key=1, label=options, style=dashed];
m19_2 -> m19_3  [color=red, key=0, style=solid];
m19_2 -> m19_4  [color=red, key=0, style=solid];
m19_2 -> m19_9  [color=red, key=2, style=dotted];
m19_4 -> m19_5  [color=red, key=0, style=solid];
m19_4 -> m19_11  [color=red, key=2, style=dotted];
m19_5 -> m19_6  [color=red, key=0, style=solid];
m19_5 -> m19_11  [color=red, key=2, style=dotted];
m19_6 -> m19_7  [color=red, key=0, style=solid];
m19_6 -> m19_12  [color=red, key=2, style=dotted];
m19_6 -> m19_13  [color=red, key=2, style=dotted];
m19_6 -> m19_11  [color=red, key=2, style=dotted];
m19_3 -> m19_4  [color=red, key=0, style=solid];
m19_3 -> m19_10  [color=red, key=2, style=dotted];
m19_7 -> m19_0  [color=blue, key=0, style=bold];
m20_3 -> m20_4  [color=red, key=0, style=solid];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_3  [color=red, key=2, style=dotted];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_4 -> m20_5  [color=red, key=0, style=solid];
m20_4 -> m20_6  [color=red, key=2, style=dotted];
m20_5 -> m20_3  [color=blue, key=0, style=bold];
m20_7 -> m20_4  [color=red, key=1, label="CommandLine.Infrastructure.ReflectionCache", style=dashed];
m21_8 -> m21_9  [color=green, key=0, style=solid];
m21_8 -> m21_11  [color=green, key=1, label="System.Type", style=dashed];
m21_9 -> m21_10  [color=green, key=0, style=solid];
m21_9 -> m21_11  [color=green, key=0, style=solid];
m21_10 -> m21_12  [color=green, key=0, style=solid];
m21_10 -> m21_13  [color=green, key=2, style=dotted];
m21_11 -> m21_12  [color=green, key=0, style=solid];
m21_11 -> m21_14  [color=green, key=2, style=dotted];
m21_12 -> m21_8  [color=blue, key=0, style=bold];
m21_29 -> m21_30  [color=green, key=0, style=solid];
m21_29 -> m21_31  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m21_29 -> m21_40  [color=green, key=1, label=T, style=dashed];
m21_29 -> m21_29  [color=darkorchid, key=3, label="method methodReturn T SetValue", style=bold];
m21_30 -> m21_30  [color=green, key=3, label="Local variable System.Action<System.Exception> fail", style=bold];
m21_30 -> m21_31  [color=green, key=0, style=solid];
m21_30 -> m21_45  [color=green, key=1, label="System.Exception", style=dashed];
m21_30 -> m21_33  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_35  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_37  [color=green, key=1, label=fail, style=dashed];
m21_30 -> m21_39  [color=green, key=1, label=fail, style=dashed];
m21_31 -> m21_32  [color=green, key=0, style=solid];
m21_31 -> m21_34  [color=green, key=0, style=solid];
m21_31 -> m21_36  [color=green, key=0, style=solid];
m21_31 -> m21_38  [color=green, key=0, style=solid];
m21_31 -> m21_40  [color=green, key=0, style=solid];
m21_31 -> m21_42  [color=green, key=2, style=dotted];
m21_33 -> m21_40  [color=green, key=0, style=solid];
m21_33 -> m21_43  [color=green, key=2, style=dotted];
m21_35 -> m21_40  [color=green, key=0, style=solid];
m21_35 -> m21_43  [color=green, key=2, style=dotted];
m21_37 -> m21_40  [color=green, key=0, style=solid];
m21_37 -> m21_43  [color=green, key=2, style=dotted];
m21_39 -> m21_40  [color=green, key=0, style=solid];
m21_39 -> m21_43  [color=green, key=2, style=dotted];
m21_32 -> m21_33  [color=green, key=0, style=solid];
m21_34 -> m21_35  [color=green, key=0, style=solid];
m21_36 -> m21_37  [color=green, key=0, style=solid];
m21_38 -> m21_39  [color=green, key=0, style=solid];
m21_40 -> m21_41  [color=green, key=0, style=solid];
m21_41 -> m21_29  [color=blue, key=0, style=bold];
m21_44 -> m21_45  [color=green, key=0, style=solid];
m21_25 -> m21_26  [color=green, key=0, style=solid];
m21_26 -> m21_27  [color=green, key=0, style=solid];
m21_26 -> m21_7  [color=green, key=2, style=dotted];
m21_26 -> m21_28  [color=green, key=2, style=dotted];
m21_27 -> m21_25  [color=blue, key=0, style=bold];
m21_45 -> m21_46  [color=green, key=0, style=solid];
m21_45 -> m21_47  [color=green, key=2, style=dotted];
m21_46 -> m21_44  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=green, key=0, style=solid];
m21_1 -> m21_1  [color=green, key=1, label=pi, style=dashed];
m21_1 -> m21_2  [color=green, key=0, style=solid];
m21_1 -> m21_3  [color=green, key=2, style=dotted];
m21_1 -> m21_4  [color=green, key=2, style=dotted];
m21_1 -> m21_5  [color=green, key=2, style=dotted];
m21_1 -> m21_6  [color=green, key=2, style=dotted];
m21_1 -> m21_7  [color=green, key=2, style=dotted];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_48 -> m21_49  [color=green, key=0, style=solid];
m21_48 -> m21_51  [color=green, key=1, label="System.Type", style=dashed];
m21_49 -> m21_50  [color=green, key=0, style=solid];
m21_49 -> m21_51  [color=green, key=0, style=solid];
m21_50 -> m21_52  [color=green, key=0, style=solid];
m21_50 -> m21_13  [color=green, key=2, style=dotted];
m21_51 -> m21_52  [color=green, key=0, style=solid];
m21_51 -> m21_53  [color=green, key=2, style=dotted];
m21_52 -> m21_48  [color=blue, key=0, style=bold];
m21_20 -> m21_21  [color=green, key=0, style=solid];
m21_20 -> m21_26  [color=green, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m21_21 -> m21_22  [color=green, key=0, style=solid];
m21_21 -> m21_23  [color=green, key=2, style=dotted];
m21_21 -> m21_24  [color=green, key=2, style=dotted];
m21_21 -> m21_25  [color=green, key=1, label="lambda expression", style=dashed];
m21_22 -> m21_20  [color=blue, key=0, style=bold];
m21_15 -> m21_16  [color=green, key=0, style=solid];
m21_15 -> m21_18  [color=green, key=1, label="System.Type", style=dashed];
m21_16 -> m21_17  [color=green, key=0, style=solid];
m21_16 -> m21_18  [color=green, key=0, style=solid];
m21_17 -> m21_19  [color=green, key=0, style=solid];
m21_17 -> m21_13  [color=green, key=2, style=dotted];
m21_18 -> m21_19  [color=green, key=0, style=solid];
m21_18 -> m21_14  [color=green, key=2, style=dotted];
m21_19 -> m21_15  [color=blue, key=0, style=bold];
m21_54 -> m21_26  [color=green, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m22_0 -> m22_1  [color=green, key=0, style=solid];
m22_1 -> m22_2  [color=green, key=0, style=solid];
m22_1 -> m22_5  [color=green, key=2, style=dotted];
m22_1 -> m22_6  [color=green, key=2, style=dotted];
m22_2 -> m22_3  [color=green, key=0, style=solid];
m22_2 -> m22_7  [color=green, key=2, style=dotted];
m22_3 -> m22_4  [color=green, key=0, style=solid];
m22_3 -> m22_8  [color=green, key=2, style=dotted];
m22_3 -> m22_9  [color=green, key=2, style=dotted];
m22_4 -> m22_0  [color=blue, key=0, style=bold];
m22_15 -> m22_16  [color=green, key=0, style=solid];
m22_16 -> m22_17  [color=green, key=0, style=solid];
m22_16 -> m22_5  [color=green, key=2, style=dotted];
m22_16 -> m22_6  [color=green, key=2, style=dotted];
m22_17 -> m22_18  [color=green, key=0, style=solid];
m22_17 -> m22_14  [color=green, key=2, style=dotted];
m22_17 -> m22_19  [color=green, key=2, style=dotted];
m22_18 -> m22_15  [color=blue, key=0, style=bold];
m22_10 -> m22_11  [color=green, key=0, style=solid];
m22_11 -> m22_12  [color=green, key=0, style=solid];
m22_11 -> m22_5  [color=green, key=2, style=dotted];
m22_11 -> m22_6  [color=green, key=2, style=dotted];
m22_12 -> m22_13  [color=green, key=0, style=solid];
m22_12 -> m22_14  [color=green, key=2, style=dotted];
m22_13 -> m22_10  [color=blue, key=0, style=bold];
m23_41 -> m23_42  [color=red, key=0, style=solid];
m23_42 -> m23_43  [color=red, key=0, style=solid];
m23_42 -> m23_5  [color=red, key=2, style=dotted];
m23_42 -> m23_49  [color=red, key=2, style=dotted];
m23_42 -> m23_44  [color=red, key=1, label=list, style=dashed];
m23_42 -> m23_45  [color=red, key=1, label=list, style=dashed];
m23_42 -> m23_46  [color=red, key=1, label=list, style=dashed];
m23_42 -> m23_47  [color=red, key=1, label=list, style=dashed];
m23_43 -> m23_44  [color=red, key=0, style=solid];
m23_43 -> m23_23  [color=red, key=2, style=dotted];
m23_43 -> m23_40  [color=red, key=2, style=dotted];
m23_44 -> m23_45  [color=red, key=0, style=solid];
m23_44 -> m23_23  [color=red, key=2, style=dotted];
m23_44 -> m23_24  [color=red, key=2, style=dotted];
m23_44 -> m23_50  [color=red, key=1, label="lambda expression", style=dashed];
m23_45 -> m23_46  [color=red, key=0, style=solid];
m23_45 -> m23_23  [color=red, key=2, style=dotted];
m23_45 -> m23_25  [color=red, key=2, style=dotted];
m23_46 -> m23_47  [color=red, key=0, style=solid];
m23_46 -> m23_23  [color=red, key=2, style=dotted];
m23_46 -> m23_25  [color=red, key=2, style=dotted];
m23_47 -> m23_48  [color=red, key=0, style=solid];
m23_47 -> m23_23  [color=red, key=2, style=dotted];
m23_47 -> m23_25  [color=red, key=2, style=dotted];
m23_48 -> m23_41  [color=blue, key=0, style=bold];
m23_10 -> m23_11  [color=red, key=0, style=solid];
m23_11 -> m23_12  [color=red, key=0, style=solid];
m23_11 -> m23_0  [color=red, key=2, style=dotted];
m23_11 -> m23_17  [color=red, key=1, label=target, style=dashed];
m23_12 -> m23_13  [color=red, key=0, style=solid];
m23_12 -> m23_22  [color=red, key=2, style=dotted];
m23_12 -> m23_14  [color=red, key=1, label=list, style=dashed];
m23_12 -> m23_15  [color=red, key=1, label=list, style=dashed];
m23_12 -> m23_16  [color=red, key=1, label=list, style=dashed];
m23_17 -> m23_18  [color=red, key=0, style=solid];
m23_17 -> m23_22  [color=red, key=2, style=dotted];
m23_17 -> m23_19  [color=red, key=1, label=anotherList, style=dashed];
m23_17 -> m23_20  [color=red, key=1, label=anotherList, style=dashed];
m23_13 -> m23_14  [color=red, key=0, style=solid];
m23_13 -> m23_23  [color=red, key=2, style=dotted];
m23_13 -> m23_24  [color=red, key=2, style=dotted];
m23_13 -> m23_27  [color=red, key=1, label="lambda expression", style=dashed];
m23_14 -> m23_15  [color=red, key=0, style=solid];
m23_14 -> m23_23  [color=red, key=2, style=dotted];
m23_14 -> m23_25  [color=red, key=2, style=dotted];
m23_15 -> m23_16  [color=red, key=0, style=solid];
m23_15 -> m23_23  [color=red, key=2, style=dotted];
m23_15 -> m23_25  [color=red, key=2, style=dotted];
m23_16 -> m23_17  [color=red, key=0, style=solid];
m23_16 -> m23_26  [color=red, key=2, style=dotted];
m23_18 -> m23_19  [color=red, key=0, style=solid];
m23_18 -> m23_23  [color=red, key=2, style=dotted];
m23_18 -> m23_24  [color=red, key=2, style=dotted];
m23_18 -> m23_30  [color=red, key=1, label="lambda expression", style=dashed];
m23_19 -> m23_20  [color=red, key=0, style=solid];
m23_19 -> m23_23  [color=red, key=2, style=dotted];
m23_19 -> m23_25  [color=red, key=2, style=dotted];
m23_20 -> m23_21  [color=red, key=0, style=solid];
m23_20 -> m23_26  [color=red, key=2, style=dotted];
m23_21 -> m23_10  [color=blue, key=0, style=bold];
m23_33 -> m23_34  [color=red, key=0, style=solid];
m23_34 -> m23_35  [color=red, key=0, style=solid];
m23_34 -> m23_0  [color=red, key=2, style=dotted];
m23_35 -> m23_36  [color=red, key=0, style=solid];
m23_35 -> m23_39  [color=red, key=2, style=dotted];
m23_35 -> m23_37  [color=red, key=1, label=pair, style=dashed];
m23_36 -> m23_37  [color=red, key=0, style=solid];
m23_36 -> m23_23  [color=red, key=2, style=dotted];
m23_36 -> m23_40  [color=red, key=2, style=dotted];
m23_37 -> m23_38  [color=red, key=0, style=solid];
m23_37 -> m23_23  [color=red, key=2, style=dotted];
m23_37 -> m23_25  [color=red, key=2, style=dotted];
m23_38 -> m23_33  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_6 -> m23_7  [color=red, key=0, style=solid];
m23_7 -> m23_8  [color=red, key=0, style=solid];
m23_8 -> m23_9  [color=red, key=0, style=solid];
m23_9 -> m23_5  [color=blue, key=0, style=bold];
m23_50 -> m23_51  [color=red, key=0, style=solid];
m23_27 -> m23_28  [color=red, key=0, style=solid];
m23_30 -> m23_31  [color=red, key=0, style=solid];
m23_28 -> m23_29  [color=red, key=0, style=solid];
m23_29 -> m23_27  [color=blue, key=0, style=bold];
m23_31 -> m23_32  [color=red, key=0, style=solid];
m23_32 -> m23_30  [color=blue, key=0, style=bold];
m23_51 -> m23_52  [color=red, key=0, style=solid];
m23_52 -> m23_50  [color=blue, key=0, style=bold];
m23_26 -> m23_53  [color=red, key=0, style=solid];
m23_26 -> m23_54  [color=red, key=1, label="System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>>", style=dashed];
m23_26 -> m23_12  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>> list", style=bold];
m23_26 -> m23_17  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, TAttribute>> list", style=bold];
m23_53 -> m23_54  [color=red, key=0, style=solid];
m23_53 -> m23_57  [color=red, key=2, style=dotted];
m23_53 -> m23_58  [color=red, key=2, style=dotted];
m23_54 -> m23_55  [color=red, key=0, style=solid];
m23_54 -> m23_56  [color=red, key=0, style=solid];
m23_55 -> m23_54  [color=red, key=0, style=solid];
m23_55 -> m23_58  [color=red, key=2, style=dotted];
m23_56 -> m23_26  [color=blue, key=0, style=bold];
m23_3 -> m23_4  [key=0, style=solid];
m23_4 -> m23_3  [color=blue, key=0, style=bold];
m23_59 -> m23_1  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.MockObject", style=dashed];
m23_60 -> m23_6  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject", style=dashed];
m23_60 -> m23_7  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject", style=dashed];
m23_60 -> m23_8  [color=red, key=1, label="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperFixture.AnotherMockObject", style=dashed];
m25_0 -> m25_1  [color=red, key=0, style=solid];
m25_1 -> m25_2  [color=red, key=0, style=solid];
m25_1 -> m25_3  [color=red, key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_4 -> m25_1  [color=red, key=1, label="CommandLine.Tests.Fakes.SimpleOptionsForAutoBuid", style=dashed];
m26_0 -> m26_1  [color=red, key=0, style=solid];
m26_1 -> m26_2  [color=red, key=0, style=solid];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_3 -> m26_1  [color=red, key=1, label="CommandLine.Tests.Fakes.SimpleOptionsWithBadOptionArray", style=dashed];
m27_0 -> m27_1  [color=red, key=0, style=solid];
m27_1 -> m27_2  [color=red, key=0, style=solid];
m27_2 -> m27_0  [color=blue, key=0, style=bold];
m27_3 -> m27_1  [color=red, key=1, label="CommandLine.Tests.Fakes.SimpleOptionsWithEnum", style=dashed];
m30_15 -> m30_16  [color=red, key=0, style=solid];
m30_16 -> m30_17  [color=red, key=0, style=solid];
m30_16 -> m30_20  [color=red, key=2, style=dotted];
m30_17 -> m30_18  [color=red, key=0, style=solid];
m30_17 -> m30_10  [color=red, key=2, style=dotted];
m30_18 -> m30_19  [color=red, key=0, style=solid];
m30_18 -> m30_11  [color=red, key=2, style=dotted];
m30_18 -> m30_12  [color=red, key=2, style=dotted];
m30_19 -> m30_15  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [color=red, key=0, style=solid];
m30_1 -> m30_2  [color=red, key=0, style=solid];
m30_1 -> m30_9  [color=red, key=2, style=dotted];
m30_1 -> m30_4  [color=red, key=1, label=options, style=dashed];
m30_1 -> m30_5  [color=red, key=1, label=options, style=dashed];
m30_1 -> m30_6  [color=red, key=1, label=options, style=dashed];
m30_1 -> m30_7  [color=red, key=1, label=options, style=dashed];
m30_2 -> m30_3  [color=red, key=0, style=solid];
m30_2 -> m30_10  [color=red, key=2, style=dotted];
m30_4 -> m30_5  [color=red, key=0, style=solid];
m30_4 -> m30_11  [color=red, key=2, style=dotted];
m30_4 -> m30_13  [color=red, key=2, style=dotted];
m30_5 -> m30_6  [color=red, key=0, style=solid];
m30_5 -> m30_11  [color=red, key=2, style=dotted];
m30_5 -> m30_13  [color=red, key=2, style=dotted];
m30_6 -> m30_7  [color=red, key=0, style=solid];
m30_6 -> m30_11  [color=red, key=2, style=dotted];
m30_6 -> m30_12  [color=red, key=2, style=dotted];
m30_7 -> m30_8  [color=red, key=0, style=solid];
m30_7 -> m30_14  [color=red, key=2, style=dotted];
m30_3 -> m30_4  [color=red, key=0, style=solid];
m30_3 -> m30_11  [color=red, key=2, style=dotted];
m30_3 -> m30_12  [color=red, key=2, style=dotted];
m30_8 -> m30_0  [color=blue, key=0, style=bold];
m30_21 -> m30_22  [color=red, key=0, style=solid];
m30_22 -> m30_23  [color=red, key=0, style=solid];
m30_22 -> m30_11  [color=red, key=2, style=dotted];
m30_22 -> m30_13  [color=red, key=2, style=dotted];
m30_23 -> m30_21  [color=blue, key=0, style=bold];
m31_28 -> m31_77  [key=0, style=solid];
m31_28 -> m31_46  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
m31_28 -> m31_34  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error[] errors", style=bold];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_79  [key=2, style=dotted];
m31_77 -> m31_80  [key=2, style=dotted];
m31_78 -> m31_28  [color=blue, key=0, style=bold];
m31_10 -> m31_1  [color=green, key=3, label="Property variable CommandLine.Infrastructure.Maybe<object> DefaultValue", style=bold];
m31_14 -> m31_1  [color=green, key=3, label="Field variable bool required", style=bold];
m31_73 -> m31_74  [key=0, style=solid];
m31_4 -> m31_5  [color=green, key=0, style=solid];
m31_4 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_4 -> m31_6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_4 -> m31_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_5 -> m31_6  [color=green, key=0, style=solid];
m31_5 -> m31_9  [color=green, key=2, style=dotted];
m31_5 -> m31_11  [color=green, key=1, label="lambda expression", style=dashed];
m31_6 -> m31_7  [color=green, key=0, style=solid];
m31_6 -> m31_10  [color=green, key=2, style=dotted];
m31_6 -> m31_15  [color=green, key=1, label="lambda expression", style=dashed];
m31_11 -> m31_12  [color=green, key=0, style=solid];
m31_12 -> m31_13  [color=green, key=0, style=solid];
m31_12 -> m31_14  [color=green, key=2, style=dotted];
m31_13 -> m31_11  [color=blue, key=0, style=bold];
m31_7 -> m31_8  [color=green, key=0, style=solid];
m31_15 -> m31_16  [color=green, key=0, style=solid];
m31_16 -> m31_17  [color=green, key=0, style=solid];
m31_16 -> m31_18  [color=green, key=2, style=dotted];
m31_17 -> m31_15  [color=blue, key=0, style=bold];
m31_8 -> m31_4  [color=blue, key=0, style=bold];
m31_38 -> m31_39  [color=green, key=0, style=solid];
m31_38 -> m31_40  [color=green, key=2, style=dotted];
m31_38 -> m31_41  [color=green, key=2, style=dotted];
m31_37 -> m31_38  [color=green, key=0, style=solid];
m31_39 -> m31_37  [color=blue, key=0, style=bold];
m31_50 -> m31_51  [color=green, key=0, style=solid];
m31_53 -> m31_54  [color=green, key=0, style=solid];
m31_61 -> m31_62  [color=green, key=0, style=solid];
m31_51 -> m31_52  [color=green, key=0, style=solid];
m31_51 -> m31_29  [color=green, key=2, style=dotted];
m31_51 -> m31_40  [color=green, key=2, style=dotted];
m31_52 -> m31_50  [color=blue, key=0, style=bold];
m31_54 -> m31_55  [color=green, key=0, style=solid];
m31_54 -> m31_56  [color=green, key=2, style=dotted];
m31_54 -> m31_57  [color=green, key=2, style=dotted];
m31_54 -> m31_58  [color=green, key=1, label="lambda expression", style=dashed];
m31_55 -> m31_53  [color=blue, key=0, style=bold];
m31_58 -> m31_59  [color=green, key=0, style=solid];
m31_59 -> m31_60  [color=green, key=0, style=solid];
m31_59 -> m31_29  [color=green, key=2, style=dotted];
m31_59 -> m31_40  [color=green, key=2, style=dotted];
m31_60 -> m31_58  [color=blue, key=0, style=bold];
m31_62 -> m31_63  [color=green, key=0, style=solid];
m31_63 -> m31_61  [color=blue, key=0, style=bold];
m31_71 -> m31_40  [key=2, style=dotted];
m31_71 -> m31_72  [key=0, style=solid];
m31_70 -> m31_71  [key=0, style=solid];
m31_72 -> m31_70  [color=blue, key=0, style=bold];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_76  [key=2, style=dotted];
m31_75 -> m31_73  [color=blue, key=0, style=bold];
m31_36 -> m31_42  [color=green, key=0, style=solid];
m31_36 -> m31_51  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_36 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m31_36 -> m31_59  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_42 -> m31_43  [color=green, key=0, style=solid];
m31_42 -> m31_44  [color=green, key=2, style=dotted];
m31_42 -> m31_45  [color=green, key=2, style=dotted];
m31_42 -> m31_32  [color=green, key=2, style=dotted];
m31_42 -> m31_46  [color=green, key=2, style=dotted];
m31_42 -> m31_47  [color=green, key=2, style=dotted];
m31_42 -> m31_48  [color=green, key=2, style=dotted];
m31_42 -> m31_29  [color=green, key=2, style=dotted];
m31_42 -> m31_49  [color=green, key=2, style=dotted];
m31_42 -> m31_50  [color=green, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_53  [color=green, key=1, label="lambda expression", style=dashed];
m31_42 -> m31_61  [color=green, key=1, label="lambda expression", style=dashed];
m31_43 -> m31_36  [color=blue, key=0, style=bold];
m31_34 -> m31_64  [key=0, style=solid];
m31_34 -> m31_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_64 -> m31_65  [key=0, style=solid];
m31_64 -> m31_66  [key=2, style=dotted];
m31_64 -> m31_67  [key=2, style=dotted];
m31_64 -> m31_68  [key=2, style=dotted];
m31_64 -> m31_69  [key=2, style=dotted];
m31_64 -> m31_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_64 -> m31_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_65 -> m31_34  [color=blue, key=0, style=bold];
m31_3 -> m31_19  [color=green, key=0, style=solid];
m31_3 -> m31_20  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m31_3 -> m31_21  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_3 -> m31_22  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_3 -> m31_38  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_3 -> m31_23  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m31_3 -> m31_24  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m31_3 -> m31_28  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m31_24 -> m31_1  [color=green, key=3, label="Property variable System.Type ConversionType", style=bold];
m31_24 -> m31_25  [color=green, key=0, style=solid];
m31_24 -> m31_31  [color=green, key=2, style=dotted];
m31_24 -> m31_32  [color=green, key=2, style=dotted];
m31_24 -> m31_33  [color=green, key=2, style=dotted];
m31_24 -> m31_34  [color=green, key=2, style=dotted];
m31_24 -> m31_28  [color=green, key=2, style=dotted];
m31_24 -> m31_35  [color=green, key=2, style=dotted];
m31_24 -> m31_36  [color=green, key=2, style=dotted];
m31_19 -> m31_20  [color=green, key=0, style=solid];
m31_19 -> m31_21  [color=green, key=0, style=solid];
m31_19 -> m31_26  [color=green, key=2, style=dotted];
m31_20 -> m31_25  [color=green, key=0, style=solid];
m31_20 -> m31_27  [color=green, key=2, style=dotted];
m31_20 -> m31_28  [color=green, key=2, style=dotted];
m31_21 -> m31_22  [color=green, key=0, style=solid];
m31_21 -> m31_29  [color=green, key=2, style=dotted];
m31_21 -> m31_38  [color=green, key=1, label=firstArg, style=dashed];
m31_22 -> m31_22  [color=green, key=3, label="Local variable System.Func<string, bool> preprocCompare", style=bold];
m31_22 -> m31_23  [color=green, key=0, style=solid];
m31_22 -> m31_38  [color=green, key=1, label=string, style=dashed];
m31_22 -> m31_24  [color=green, key=1, label=preprocCompare, style=dashed];
m31_23 -> m31_24  [color=green, key=0, style=solid];
m31_23 -> m31_30  [color=green, key=2, style=dotted];
m31_25 -> m31_3  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_0 -> m31_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_0 -> m31_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_0 -> m31_6  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_0 -> m31_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_0 -> m31_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m31_1 -> m31_1  [color=green, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> ", style=bold];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_3  [color=green, key=2, style=dotted];
m31_1 -> m31_4  [color=green, key=1, label="lambda expression", style=dashed];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m31_30 -> m31_14  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo parsingCulture", style=bold];
m31_81 -> m31_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_81 -> m31_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_81 -> m31_6  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_81 -> m31_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_82 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_82 -> m31_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m31_83 -> m31_38  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_84 -> m31_38  [color=green, key=1, label=firstArg, style=dashed];
m31_85 -> m31_51  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_85 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_85 -> m31_59  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m31_86 -> m31_51  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_86 -> m31_54  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_86 -> m31_59  [color=green, key=1, label="System.StringComparer", style=dashed];
m31_87 -> m31_54  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m31_88 -> m31_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_89 -> m31_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m32_0 -> m32_1  [color=green, key=0, style=solid];
m32_0 -> m32_2  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m32_0 -> m32_3  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_2 -> m32_3  [color=green, key=0, style=solid];
m32_3 -> m32_4  [color=green, key=0, style=solid];
m32_4 -> m32_0  [color=blue, key=0, style=bold];
m32_5 -> m32_6  [color=green, key=0, style=solid];
m32_5 -> m32_8  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m32_5 -> m32_10  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m32_5 -> m32_12  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_8  [color=green, key=0, style=solid];
m32_7 -> m32_13  [color=green, key=0, style=solid];
m32_7 -> m32_14  [color=green, key=2, style=dotted];
m32_8 -> m32_9  [color=green, key=0, style=solid];
m32_8 -> m32_10  [color=green, key=0, style=solid];
m32_9 -> m32_13  [color=green, key=0, style=solid];
m32_9 -> m32_14  [color=green, key=2, style=dotted];
m32_10 -> m32_11  [color=green, key=0, style=solid];
m32_10 -> m32_12  [color=green, key=0, style=solid];
m32_11 -> m32_13  [color=green, key=0, style=solid];
m32_11 -> m32_14  [color=green, key=2, style=dotted];
m32_12 -> m32_13  [color=green, key=0, style=solid];
m32_12 -> m32_0  [color=green, key=2, style=dotted];
m32_13 -> m32_5  [color=blue, key=0, style=bold];
m32_15 -> m32_1  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m32_15 -> m32_2  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m32_15 -> m32_3  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_30 -> m33_31  [color=green, key=0, style=solid];
m33_30 -> m33_33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_30 -> m33_37  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_31 -> m33_32  [color=green, key=0, style=solid];
m33_31 -> m33_33  [color=green, key=0, style=solid];
m33_32 -> m33_34  [color=green, key=0, style=solid];
m33_32 -> m33_7  [color=green, key=2, style=dotted];
m33_33 -> m33_34  [color=green, key=0, style=solid];
m33_33 -> m33_35  [color=green, key=2, style=dotted];
m33_33 -> m33_36  [color=green, key=1, label="lambda expression", style=dashed];
m33_34 -> m33_30  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [color=green, key=0, style=solid];
m33_0 -> m33_3  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_0 -> m33_5  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_1 -> m33_2  [color=green, key=0, style=solid];
m33_1 -> m33_3  [color=green, key=0, style=solid];
m33_2 -> m33_6  [color=green, key=0, style=solid];
m33_2 -> m33_7  [color=green, key=2, style=dotted];
m33_3 -> m33_4  [color=green, key=0, style=solid];
m33_3 -> m33_5  [color=green, key=0, style=solid];
m33_4 -> m33_6  [color=green, key=0, style=solid];
m33_4 -> m33_7  [color=green, key=2, style=dotted];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_5 -> m33_8  [color=green, key=2, style=dotted];
m33_6 -> m33_0  [color=blue, key=0, style=bold];
m33_16 -> m33_17  [color=green, key=0, style=solid];
m33_16 -> m33_19  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_16 -> m33_21  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_16 -> m33_22  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_17 -> m33_18  [color=green, key=0, style=solid];
m33_17 -> m33_19  [color=green, key=0, style=solid];
m33_18 -> m33_23  [color=green, key=0, style=solid];
m33_18 -> m33_7  [color=green, key=2, style=dotted];
m33_19 -> m33_20  [color=green, key=0, style=solid];
m33_19 -> m33_22  [color=green, key=0, style=solid];
m33_19 -> m33_24  [color=green, key=2, style=dotted];
m33_20 -> m33_21  [color=green, key=0, style=solid];
m33_22 -> m33_23  [color=green, key=0, style=solid];
m33_21 -> m33_23  [color=green, key=0, style=solid];
m33_21 -> m33_25  [color=green, key=2, style=dotted];
m33_21 -> m33_26  [color=green, key=2, style=dotted];
m33_21 -> m33_27  [color=green, key=2, style=dotted];
m33_21 -> m33_28  [color=green, key=2, style=dotted];
m33_21 -> m33_29  [color=green, key=2, style=dotted];
m33_23 -> m33_16  [color=blue, key=0, style=bold];
m33_9 -> m33_10  [color=green, key=0, style=solid];
m33_9 -> m33_12  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m33_9 -> m33_14  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m33_10 -> m33_11  [color=green, key=0, style=solid];
m33_10 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> m33_15  [color=green, key=0, style=solid];
m33_11 -> m33_7  [color=green, key=2, style=dotted];
m33_12 -> m33_13  [color=green, key=0, style=solid];
m33_12 -> m33_14  [color=green, key=0, style=solid];
m33_13 -> m33_15  [color=green, key=0, style=solid];
m33_13 -> m33_7  [color=green, key=2, style=dotted];
m33_14 -> m33_15  [color=green, key=0, style=solid];
m33_14 -> m33_8  [color=green, key=2, style=dotted];
m33_15 -> m33_9  [color=blue, key=0, style=bold];
m33_36 -> m33_37  [color=green, key=0, style=solid];
m33_37 -> m33_38  [color=green, key=0, style=solid];
m33_37 -> m33_39  [color=green, key=2, style=dotted];
m33_38 -> m33_36  [color=blue, key=0, style=bold];
m33_40 -> m33_37  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_1 -> m34_4  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_48 -> m34_49  [color=green, key=0, style=solid];
m34_49 -> m34_50  [color=green, key=0, style=solid];
m34_49 -> m34_52  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m34_50 -> m34_48  [color=blue, key=0, style=bold];
m34_62 -> m34_63  [color=green, key=0, style=solid];
m34_4 -> m34_5  [color=green, key=0, style=solid];
m34_4 -> m34_10  [color=green, key=2, style=dotted];
m34_4 -> m34_15  [color=green, key=1, label="lambda expression", style=dashed];
m34_4 -> m34_7  [color=green, key=1, label=options, style=dashed];
m34_3 -> m34_4  [color=green, key=0, style=solid];
m34_5 -> m34_6  [color=green, key=0, style=solid];
m34_5 -> m34_11  [color=green, key=2, style=dotted];
m34_5 -> m34_20  [color=green, key=1, label="lambda expression", style=dashed];
m34_15 -> m34_16  [color=green, key=0, style=solid];
m34_7 -> m34_9  [color=green, key=0, style=solid];
m34_7 -> m34_13  [color=green, key=2, style=dotted];
m34_7 -> m34_23  [color=green, key=1, label="lambda expression", style=dashed];
m34_6 -> m34_7  [color=green, key=0, style=solid];
m34_6 -> m34_8  [color=green, key=0, style=solid];
m34_6 -> m34_12  [color=green, key=2, style=dotted];
m34_20 -> m34_21  [color=green, key=0, style=solid];
m34_9 -> m34_3  [color=blue, key=0, style=bold];
m34_23 -> m34_24  [color=green, key=0, style=solid];
m34_8 -> m34_9  [color=green, key=0, style=solid];
m34_8 -> m34_14  [color=green, key=2, style=dotted];
m34_16 -> m34_17  [color=green, key=0, style=solid];
m34_16 -> m34_18  [color=green, key=2, style=dotted];
m34_16 -> m34_19  [color=green, key=2, style=dotted];
m34_17 -> m34_15  [color=blue, key=0, style=bold];
m34_21 -> m34_22  [color=green, key=0, style=solid];
m34_22 -> m34_20  [color=blue, key=0, style=bold];
m34_24 -> m34_25  [color=green, key=0, style=solid];
m34_24 -> m34_26  [color=green, key=2, style=dotted];
m34_24 -> m34_27  [color=green, key=2, style=dotted];
m34_24 -> m34_28  [color=green, key=2, style=dotted];
m34_25 -> m34_23  [color=blue, key=0, style=bold];
m34_33 -> m34_34  [color=green, key=0, style=solid];
m34_33 -> m34_10  [color=green, key=2, style=dotted];
m34_33 -> m34_39  [color=green, key=1, label="lambda expression", style=dashed];
m34_33 -> m34_35  [color=green, key=1, label=options, style=dashed];
m34_32 -> m34_33  [color=green, key=0, style=solid];
m34_34 -> m34_35  [color=green, key=0, style=solid];
m34_34 -> m34_36  [color=green, key=0, style=solid];
m34_34 -> m34_38  [color=green, key=2, style=dotted];
m34_39 -> m34_40  [color=green, key=0, style=solid];
m34_35 -> m34_37  [color=green, key=0, style=solid];
m34_35 -> m34_13  [color=green, key=2, style=dotted];
m34_35 -> m34_43  [color=green, key=1, label="lambda expression", style=dashed];
m34_36 -> m34_37  [color=green, key=0, style=solid];
m34_36 -> m34_14  [color=green, key=2, style=dotted];
m34_37 -> m34_32  [color=blue, key=0, style=bold];
m34_43 -> m34_44  [color=green, key=0, style=solid];
m34_40 -> m34_41  [color=green, key=0, style=solid];
m34_40 -> m34_42  [color=green, key=2, style=dotted];
m34_41 -> m34_39  [color=blue, key=0, style=bold];
m34_44 -> m34_45  [color=green, key=0, style=solid];
m34_44 -> m34_46  [color=green, key=2, style=dotted];
m34_44 -> m34_47  [color=green, key=2, style=dotted];
m34_44 -> m34_28  [color=green, key=2, style=dotted];
m34_45 -> m34_43  [color=blue, key=0, style=bold];
m34_52 -> m34_53  [color=green, key=0, style=solid];
m34_52 -> m34_10  [color=green, key=2, style=dotted];
m34_52 -> m34_57  [color=green, key=1, label="lambda expression", style=dashed];
m34_52 -> m34_54  [color=green, key=1, label=options, style=dashed];
m34_51 -> m34_52  [color=green, key=0, style=solid];
m34_53 -> m34_54  [color=green, key=0, style=solid];
m34_53 -> m34_55  [color=green, key=0, style=solid];
m34_53 -> m34_38  [color=green, key=2, style=dotted];
m34_57 -> m34_58  [color=green, key=0, style=solid];
m34_54 -> m34_56  [color=green, key=0, style=solid];
m34_54 -> m34_13  [color=green, key=2, style=dotted];
m34_54 -> m34_62  [color=green, key=1, label="lambda expression", style=dashed];
m34_55 -> m34_56  [color=green, key=0, style=solid];
m34_55 -> m34_14  [color=green, key=2, style=dotted];
m34_56 -> m34_51  [color=blue, key=0, style=bold];
m34_58 -> m34_59  [color=green, key=0, style=solid];
m34_58 -> m34_60  [color=green, key=2, style=dotted];
m34_58 -> m34_19  [color=green, key=2, style=dotted];
m34_58 -> m34_61  [color=green, key=2, style=dotted];
m34_59 -> m34_57  [color=blue, key=0, style=bold];
m34_63 -> m34_64  [color=green, key=0, style=solid];
m34_63 -> m34_65  [color=green, key=2, style=dotted];
m34_63 -> m34_47  [color=green, key=2, style=dotted];
m34_63 -> m34_28  [color=green, key=2, style=dotted];
m34_64 -> m34_62  [color=blue, key=0, style=bold];
m34_29 -> m34_30  [color=green, key=0, style=solid];
m34_30 -> m34_31  [color=green, key=0, style=solid];
m34_30 -> m34_33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m34_31 -> m34_29  [color=blue, key=0, style=bold];
m35_18 -> m35_19  [color=green, key=0, style=solid];
m35_19 -> m35_20  [color=green, key=0, style=solid];
m35_19 -> m35_21  [color=green, key=2, style=dotted];
m35_20 -> m35_18  [color=blue, key=0, style=bold];
m35_10 -> m35_11  [color=green, key=0, style=solid];
m35_10 -> m35_14  [color=green, key=1, label=object, style=dashed];
m35_10 -> m35_16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m35_11 -> m35_12  [color=green, key=0, style=solid];
m35_11 -> m35_13  [color=green, key=1, label=other, style=dashed];
m35_12 -> m35_14  [color=green, key=0, style=solid];
m35_12 -> m35_13  [color=green, key=0, style=solid];
m35_13 -> m35_15  [color=green, key=0, style=solid];
m35_13 -> m35_16  [color=green, key=2, style=dotted];
m35_14 -> m35_15  [color=green, key=0, style=solid];
m35_14 -> m35_17  [color=green, key=2, style=dotted];
m35_15 -> m35_10  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=green, key=0, style=solid];
m35_0 -> m35_3  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m35_0 -> m35_5  [color=green, key=1, label=T, style=dashed];
m35_0 -> m35_6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m35_1 -> m35_2  [color=green, key=0, style=solid];
m35_1 -> m35_3  [color=green, key=0, style=solid];
m35_1 -> m35_8  [color=green, key=2, style=dotted];
m35_2 -> m35_7  [color=green, key=0, style=solid];
m35_2 -> m35_9  [color=green, key=2, style=dotted];
m35_3 -> m35_4  [color=green, key=0, style=solid];
m35_3 -> m35_5  [color=green, key=0, style=solid];
m35_4 -> m35_7  [color=green, key=0, style=solid];
m35_4 -> m35_9  [color=green, key=2, style=dotted];
m35_5 -> m35_6  [color=green, key=0, style=solid];
m35_6 -> m35_7  [color=green, key=0, style=solid];
m35_7 -> m35_0  [color=blue, key=0, style=bold];
m35_16 -> m35_11  [color=green, key=3, label="Parameter variable CommandLine.Core.StatePair<T> other", style=bold];
m35_16 -> m35_22  [color=green, key=0, style=solid];
m35_16 -> m35_24  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_16 -> m35_23  [color=green, key=3, label="method methodReturn bool Equals", style=bold];
m35_22 -> m35_23  [color=green, key=0, style=solid];
m35_22 -> m35_24  [color=green, key=0, style=solid];
m35_23 -> m35_25  [color=green, key=0, style=solid];
m35_24 -> m35_25  [color=green, key=0, style=solid];
m35_24 -> m35_17  [color=green, key=2, style=dotted];
m35_24 -> m35_26  [color=green, key=2, style=dotted];
m35_25 -> m35_16  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [color=green, key=0, style=solid];
m35_27 -> m35_30  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m35_27 -> m35_32  [color=green, key=1, label=T, style=dashed];
m35_28 -> m35_29  [color=green, key=0, style=solid];
m35_28 -> m35_30  [color=green, key=0, style=solid];
m35_28 -> m35_8  [color=green, key=2, style=dotted];
m35_29 -> m35_33  [color=green, key=0, style=solid];
m35_29 -> m35_9  [color=green, key=2, style=dotted];
m35_30 -> m35_31  [color=green, key=0, style=solid];
m35_30 -> m35_32  [color=green, key=0, style=solid];
m35_31 -> m35_33  [color=green, key=0, style=solid];
m35_31 -> m35_9  [color=green, key=2, style=dotted];
m35_32 -> m35_33  [color=green, key=0, style=solid];
m35_32 -> m35_0  [color=green, key=2, style=dotted];
m35_33 -> m35_27  [color=blue, key=0, style=bold];
m35_34 -> m35_5  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_6  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_14  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_13  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_19  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m35_34 -> m35_24  [color=green, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m36_0 -> m36_1  [color=green, key=0, style=solid];
m36_0 -> m36_3  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m36_0 -> m36_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m36_0 -> m36_7  [color=green, key=1, label=string, style=dashed];
m36_0 -> m36_14  [color=green, key=1, label=string, style=dashed];
m36_1 -> m36_2  [color=green, key=0, style=solid];
m36_1 -> m36_3  [color=green, key=0, style=solid];
m36_2 -> m36_8  [color=green, key=0, style=solid];
m36_2 -> m36_9  [color=green, key=2, style=dotted];
m36_3 -> m36_4  [color=green, key=0, style=solid];
m36_3 -> m36_5  [color=green, key=0, style=solid];
m36_4 -> m36_8  [color=green, key=0, style=solid];
m36_4 -> m36_9  [color=green, key=2, style=dotted];
m36_5 -> m36_6  [color=green, key=0, style=solid];
m36_5 -> m36_7  [color=green, key=0, style=solid];
m36_6 -> m36_8  [color=green, key=0, style=solid];
m36_6 -> m36_9  [color=green, key=2, style=dotted];
m36_7 -> m36_8  [color=green, key=0, style=solid];
m36_7 -> m36_10  [color=green, key=2, style=dotted];
m36_7 -> m36_11  [color=green, key=2, style=dotted];
m36_7 -> m36_12  [color=green, key=2, style=dotted];
m36_7 -> m36_13  [color=green, key=1, label="lambda expression", style=dashed];
m36_7 -> m36_17  [color=green, key=1, label="lambda expression", style=dashed];
m36_8 -> m36_0  [color=blue, key=0, style=bold];
m36_17 -> m36_18  [color=green, key=0, style=solid];
m36_13 -> m36_14  [color=green, key=0, style=solid];
m36_14 -> m36_15  [color=green, key=0, style=solid];
m36_14 -> m36_16  [color=green, key=2, style=dotted];
m36_15 -> m36_13  [color=blue, key=0, style=bold];
m36_18 -> m36_19  [color=green, key=0, style=solid];
m36_18 -> m36_20  [color=green, key=2, style=dotted];
m36_18 -> m36_21  [color=green, key=2, style=dotted];
m36_18 -> m36_22  [color=green, key=2, style=dotted];
m36_18 -> m36_23  [color=green, key=2, style=dotted];
m36_19 -> m36_17  [color=blue, key=0, style=bold];
m36_24 -> m36_14  [color=green, key=1, label=string, style=dashed];
m36_25 -> m36_14  [color=green, key=1, label="System.StringComparer", style=dashed];
m37_0 -> m37_1  [color=red, key=0, style=solid];
m37_1 -> m37_2  [color=red, key=0, style=solid];
m37_1 -> m37_4  [color=red, key=1, label=args, style=dashed];
m37_1 -> m37_8  [color=red, key=1, label=args, style=dashed];
m37_2 -> m37_3  [color=red, key=0, style=solid];
m37_2 -> m37_13  [color=red, key=2, style=dotted];
m37_2 -> m37_4  [color=red, key=1, label=appOptions, style=dashed];
m37_2 -> m37_6  [color=red, key=1, label=appOptions, style=dashed];
m37_4 -> m37_5  [color=red, key=0, style=solid];
m37_4 -> m37_16  [color=red, key=2, style=dotted];
m37_8 -> m37_9  [color=red, key=0, style=solid];
m37_8 -> m37_16  [color=red, key=2, style=dotted];
m37_3 -> m37_4  [color=red, key=0, style=solid];
m37_3 -> m37_14  [color=red, key=2, style=dotted];
m37_3 -> m37_15  [color=red, key=2, style=dotted];
m37_3 -> m37_8  [color=red, key=1, label=parser, style=dashed];
m37_6 -> m37_7  [color=red, key=0, style=solid];
m37_6 -> m37_17  [color=red, key=2, style=dotted];
m37_6 -> m37_19  [color=red, key=2, style=dotted];
m37_5 -> m37_6  [color=red, key=0, style=solid];
m37_5 -> m37_17  [color=red, key=2, style=dotted];
m37_5 -> m37_18  [color=red, key=2, style=dotted];
m37_7 -> m37_8  [color=red, key=0, style=solid];
m37_7 -> m37_20  [color=red, key=2, style=dotted];
m37_7 -> m37_10  [color=red, key=1, label=plugInXOptions, style=dashed];
m37_7 -> m37_11  [color=red, key=1, label=plugInXOptions, style=dashed];
m37_10 -> m37_11  [color=red, key=0, style=solid];
m37_10 -> m37_17  [color=red, key=2, style=dotted];
m37_10 -> m37_19  [color=red, key=2, style=dotted];
m37_11 -> m37_12  [color=red, key=0, style=solid];
m37_11 -> m37_17  [color=red, key=2, style=dotted];
m37_11 -> m37_19  [color=red, key=2, style=dotted];
m37_9 -> m37_10  [color=red, key=0, style=solid];
m37_9 -> m37_17  [color=red, key=2, style=dotted];
m37_9 -> m37_18  [color=red, key=2, style=dotted];
m37_12 -> m37_0  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [color=green, key=0, style=solid];
m38_1 -> m38_2  [color=green, key=0, style=solid];
m38_2 -> m38_3  [color=green, key=0, style=solid];
m38_3 -> m38_4  [color=green, key=0, style=solid];
m38_4 -> m38_0  [color=blue, key=0, style=bold];
m38_5 -> m38_1  [color=green, key=1, label="CommandLine.ValueAttribute", style=dashed];
m38_5 -> m38_2  [color=green, key=1, label="CommandLine.ValueAttribute", style=dashed];
m38_5 -> m38_3  [color=green, key=1, label="CommandLine.ValueAttribute", style=dashed];
}
