digraph  {
n341 [label=options, span=""];
n0 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n1 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(null, new SimpleOptions()))", span="45-46"];
n2 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n3 [cluster="Unk.>", label="Entry Unk.>", span=""];
n4 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
n5 [cluster="lambda expression", label="new Parser().ParseArguments(null, new SimpleOptions())", span="46-46"];
n6 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
n7 [cluster="CommandLine.Parser.Parser()", label="Entry CommandLine.Parser.Parser()", span="55-55"];
n8 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
n9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
n10 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n11 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(new string[] {}, null))", span="52-53"];
n12 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n13 [cluster="lambda expression", label="Entry lambda expression", span="53-53"];
n14 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, null)", span="53-53"];
n15 [cluster="lambda expression", label="Exit lambda expression", span="53-53"];
n16 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n17 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var options = new SimpleOptions()", span="59-59"];
n18 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var parser = new Parser()", span="60-60"];
n19 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var result = parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="61-61"];
n21 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="options.StringValue.Should().Be(''something'')", span="64-64"];
n22 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Console.WriteLine(options)", span="65-65"];
n20 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="result.Should().BeTrue()", span="63-63"];
n24 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n25 [cluster="Unk.BeTrue", label="Entry Unk.BeTrue", span=""];
n26 [cluster="Unk.Be", label="Entry Unk.Be", span=""];
n23 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n27 [cluster="System.Console.WriteLine(object)", label="Entry System.Console.WriteLine(object)", span="0-0"];
n28 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n29 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="var options = new SimpleOptions()", span="71-71"];
n30 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="var parser = new Parser()", span="72-72"];
n31 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="var result = parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="73-74"];
n33 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.StringValue.Should().Be(''another string'')", span="77-77"];
n34 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.IntegerValue.Should().Be(100)", span="78-78"];
n35 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.BooleanValue.Should().BeTrue()", span="79-79"];
n36 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Console.WriteLine(options)", span="80-80"];
n32 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="result.Should().BeTrue()", span="76-76"];
n37 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n38 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n39 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var options = new BooleanSetOptions()", span="86-86"];
n40 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var parser = new Parser()", span="87-87"];
n49 [cluster="CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", label="Entry CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
n41 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var result = parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="88-88"];
n43 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanThree.Should().BeTrue()", span="91-91"];
n44 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanOne.Should().BeTrue()", span="92-92"];
n45 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanTwo.Should().BeFalse()", span="93-93"];
n46 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.NonBooleanValue.Should().Be(65D)", span="94-94"];
n47 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Console.WriteLine(options)", span="95-95"];
n42 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="result.Should().BeTrue()", span="90-90"];
n50 [cluster="Unk.BeFalse", label="Entry Unk.BeFalse", span=""];
n48 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n51 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n52 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var options = new BooleanSetOptions()", span="101-101"];
n53 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var parser = new Parser()", span="102-102"];
n54 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var result = parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="103-103"];
n56 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanTwo.Should().BeTrue()", span="106-106"];
n57 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanOne.Should().BeFalse()", span="107-107"];
n58 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanThree.Should().BeFalse()", span="108-108"];
n59 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.NonBooleanValue.Should().Be(9D)", span="109-109"];
n60 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Console.WriteLine(options)", span="110-110"];
n55 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="result.Should().BeTrue()", span="105-105"];
n61 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n62 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n63 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var options = new SimpleOptionsWithOptionList()", span="116-116"];
n64 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var parser = new Parser()", span="117-117"];
n76 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
n65 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var result = parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
n67 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[0].Should().Be(''string1'')", span="122-122"];
n68 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
n69 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[1].Should().Be(''stringTwo'')", span="124-124"];
n70 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
n71 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[2].Should().Be(''stringIII'')", span="126-126"];
n72 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
n73 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.StringValue.Should().Be(''test-file.txt'')", span="128-128"];
n74 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.StringValue)", span="129-129"];
n66 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="result.Should().BeTrue()", span="121-121"];
n77 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n75 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n78 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Entry CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n79 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var options = new SimpleOptions()", span="136-136"];
n80 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var parser = new Parser()", span="137-137"];
n81 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var result = parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
n83 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Console.WriteLine(options)", span="140-140"];
n82 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="result.Should().BeFalse()", span="139-139"];
n84 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Exit CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n85 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n86 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
n87 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var parser = new Parser()", span="148-148"];
n94 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
n88 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var result = parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
n90 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.StringValue.Should().Be(''data.bin'')", span="152-152"];
n91 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.FileAccess.Should().Be(FileAccess.ReadWrite)", span="153-153"];
n92 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Console.WriteLine(options)", span="154-154"];
n89 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="result.Should().BeTrue()", span="151-151"];
n93 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n95 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n96 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var options = new NumberSetOptions()", span="162-162"];
n97 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var parser = new Parser(new ParserSettings { ParsingCulture = new CultureInfo(''it-IT'') })", span="163-163"];
n102 [cluster="CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", label="Entry CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", span="34-34"];
n98 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="164-164"];
n100 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="options.DoubleValue.Should().Be(10.986D)", span="167-167"];
n103 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
n104 [cluster="CommandLine.ParserSettings.ParserSettings()", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
n105 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n99 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="result.Should().BeTrue()", span="166-166"];
n101 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n106 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n107 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="175-175"];
n108 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="176-176"];
n114 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="184-184"];
n109 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var options = new NumberSetOptions()", span="177-177"];
n110 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var parser = new Parser()", span="178-178"];
n111 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var result = parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="179-179"];
n113 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="options.NullableDoubleValue.Should().Be(12.32982D)", span="182-182"];
n112 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="result.Should().BeTrue()", span="181-181"];
n115 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n116 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n117 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var options = new SimpleOptionsWithDefaults()", span="190-190"];
n118 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var parser = new Parser()", span="191-191"];
n125 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="32-32"];
n119 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var result = parser.ParseArguments(new string[] {}, options)", span="192-192"];
n121 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.StringValue.Should().Be(''str'')", span="195-195"];
n122 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.IntegerValue.Should().Be(9)", span="196-196"];
n123 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.BooleanValue.Should().BeTrue()", span="197-197"];
n120 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="result.Should().BeTrue()", span="194-194"];
n124 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n126 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n127 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var options = new SimpleOptionsWithDefaultArray()", span="203-203"];
n128 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var parser = new Parser()", span="204-204"];
n135 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
n129 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var result = parser.ParseArguments(new [] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="205-205"];
n131 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.StringArrayValue.Should().Equal(new [] { ''a'', ''b'', ''c'' })", span="208-208"];
n132 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.IntegerArrayValue.Should().Equal(new [] { 4, 5, 6 })", span="209-209"];
n133 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.DoubleArrayValue.Should().Equal(new [] { 1.1, 2.2, 3.3 })", span="210-210"];
n130 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="result.Should().BeTrue()", span="207-207"];
n136 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n134 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n137 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n138 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="var options = new SimpleOptionsWithBadDefaults()", span="216-216"];
n139 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Assert.Throws<ParserException>(\r\n                () => new Parser().ParseArguments(new string[] {}, options))", span="217-218"];
n141 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="32-32"];
n143 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, options)", span="218-218"];
n140 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n142 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
n144 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
n145 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n146 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="225-225"];
n147 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="226-226"];
n148 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''-x'' }, options)", span="227-227"];
n149 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="229-229"];
n150 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n151 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n152 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="235-235"];
n153 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="236-236"];
n154 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''--extend'' }, options)", span="237-237"];
n155 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="239-239"];
n156 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n157 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n158 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var parser = new Parser()", span="247-247"];
n159 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var options = new MixedCaseOptions()", span="248-248"];
n160 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="249-249"];
n165 [cluster="CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", label="Entry CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", span="31-31"];
n162 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="252-252"];
n163 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="253-253"];
n161 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="result.Should().BeTrue()", span="251-251"];
n164 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n166 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n167 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var parser = new Parser()", span="259-259"];
n168 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var options = new MixedCaseOptions()", span="260-260"];
n169 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="261-261"];
n170 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="result.Should().BeFalse()", span="263-263"];
n171 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n172 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n173 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var parser = new Parser(new ParserSettings(false))", span="269-269"];
n174 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var options = new MixedCaseOptions()", span="270-270"];
n180 [cluster="CommandLine.ParserSettings.ParserSettings(bool)", label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="54-54"];
n175 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="271-271"];
n177 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="274-274"];
n178 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="275-275"];
n176 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="result.Should().BeTrue()", span="273-273"];
n179 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n181 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n182 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var options = new SimpleOptions()", span="283-283"];
n183 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var parser = new Parser()", span="284-284"];
n184 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--string'' }, options)", span="285-285"];
n185 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="result.Should().BeFalse()", span="287-287"];
n186 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n187 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n188 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var options = new NumberSetOptions()", span="293-293"];
n189 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var parser = new Parser()", span="294-294"];
n190 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--byte'' }, options)", span="295-295"];
n191 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="result.Should().BeFalse()", span="297-297"];
n192 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n193 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n194 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var options = new NumberSetOptions()", span="303-303"];
n195 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var parser = new Parser()", span="304-304"];
n196 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--short'' }, options)", span="305-305"];
n197 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="result.Should().BeFalse()", span="307-307"];
n198 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n199 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n200 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var options = new NumberSetOptions()", span="313-313"];
n201 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var parser = new Parser()", span="314-314"];
n202 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--int'' }, options)", span="315-315"];
n203 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="result.Should().BeFalse()", span="317-317"];
n204 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n205 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n206 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var options = new NumberSetOptions()", span="323-323"];
n207 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var parser = new Parser()", span="324-324"];
n208 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--long'' }, options)", span="325-325"];
n209 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="result.Should().BeFalse()", span="327-327"];
n210 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n211 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n212 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var options = new NumberSetOptions()", span="333-333"];
n213 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var parser = new Parser()", span="334-334"];
n214 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--float'' }, options)", span="335-335"];
n215 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="result.Should().BeFalse()", span="337-337"];
n216 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n217 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n218 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var options = new NumberSetOptions()", span="343-343"];
n219 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var parser = new Parser()", span="344-344"];
n220 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--double'' }, options)", span="345-345"];
n221 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="result.Should().BeFalse()", span="347-347"];
n222 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n223 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n224 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var options = new SimpleOptions()", span="355-355"];
n225 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var parser = new Parser()", span="356-356"];
n226 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var result = parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="357-357"];
n228 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="options.StringValue.Should().Be(''-'')", span="360-360"];
n227 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="result.Should().BeTrue()", span="359-359"];
n229 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n230 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n231 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var options = new SimpleOptionsWithValueList()", span="366-366"];
n232 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var parser = new Parser()", span="367-367"];
n240 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
n233 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var result = parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="368-368"];
n235 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.StringValue.Should().Be(''parser.xml'')", span="371-371"];
n236 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.BooleanValue.Should().BeTrue()", span="372-372"];
n237 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items.Count.Should().Be(1)", span="373-373"];
n238 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items[0].Should().Be(''-'')", span="374-374"];
n234 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="result.Should().BeTrue()", span="370-370"];
n239 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n241 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n242 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var options = new SimpleOptions()", span="382-382"];
n243 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var parser = new Parser()", span="383-383"];
n244 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var result = parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="384-384"];
n246 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="options.IntegerValue.Should().Be(-4096)", span="387-387"];
n245 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="result.Should().BeTrue()", span="386-386"];
n247 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n248 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n249 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var options = new NumberSetOptions()", span="392-392"];
n250 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var parser = new Parser()", span="393-393"];
n251 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var result = parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="394-394"];
n253 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="options.IntegerValue.Should().Be(-4096)", span="397-397"];
n252 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="result.Should().BeTrue()", span="396-396"];
n254 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n255 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n256 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var options = new NumberSetOptions()", span="402-402"];
n257 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var parser = new Parser()", span="403-403"];
n258 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var result = parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="404-404"];
n260 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="options.IntegerValue.Should().Be(-4096)", span="407-407"];
n259 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="result.Should().BeTrue()", span="406-406"];
n261 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n262 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n263 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var options = new NumberSetOptions()", span="412-412"];
n264 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var parser = new Parser()", span="413-413"];
n265 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var result = parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="414-414"];
n267 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="options.IntegerValue.Should().Be(-4096)", span="417-417"];
n266 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="result.Should().BeTrue()", span="416-416"];
n268 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n269 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n270 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var options = new NumberSetOptions()", span="424-424"];
n271 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var parser = new Parser()", span="425-425"];
n272 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="426-426"];
n274 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="429-429"];
n273 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="result.Should().BeTrue()", span="428-428"];
n275 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n276 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n277 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var options = new NumberSetOptions()", span="435-435"];
n278 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var parser = new Parser()", span="436-436"];
n279 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var result = parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="437-437"];
n281 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="440-440"];
n280 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="result.Should().BeTrue()", span="439-439"];
n282 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n283 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n284 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var options = new NumberSetOptions()", span="446-446"];
n285 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var parser = new Parser()", span="447-447"];
n286 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var result = parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="448-448"];
n288 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="451-451"];
n287 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="result.Should().BeTrue()", span="450-450"];
n289 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n290 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n291 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var options = new NumberSetOptions()", span="457-457"];
n292 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var parser = new Parser()", span="458-458"];
n293 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var result = parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="459-459"];
n295 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="462-462"];
n294 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="result.Should().BeTrue()", span="461-461"];
n296 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n297 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n298 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="470-470"];
n299 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var parser = new Parser()", span="471-471"];
n300 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="472-472"];
n301 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="474-474"];
n303 [cluster="short.ToString(System.IFormatProvider)", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
n302 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n304 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n305 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="480-480"];
n306 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var parser = new Parser()", span="481-481"];
n307 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="482-482"];
n308 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="484-484"];
n310 [cluster="int.ToString(System.IFormatProvider)", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
n309 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n311 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n312 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="490-490"];
n313 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var parser = new Parser()", span="491-491"];
n314 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="492-492"];
n315 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="494-494"];
n317 [cluster="long.ToString(System.IFormatProvider)", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
n316 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n318 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n319 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="500-500"];
n320 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var parser = new Parser()", span="501-501"];
n321 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="502-502"];
n322 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="504-504"];
n324 [cluster="float.ToString(System.IFormatProvider)", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
n323 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n325 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n326 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="510-510"];
n327 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var parser = new Parser()", span="511-511"];
n328 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="512-512"];
n329 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="514-514"];
n331 [cluster="double.ToString(System.IFormatProvider)", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
n330 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n332 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n333 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var options = new ComplexOptions()", span="525-525"];
n334 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var parser = new Parser()", span="526-526"];
n339 [cluster="CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", label="Entry CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", span="37-37"];
n335 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var result = parser.ParseArguments(new[] { ''-i'', ''-o'' }, options)", span="527-527"];
n337 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="options.LastParserState.Errors.Count.Should().BeGreaterThan(0)", span="531-531"];
n336 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="result.Should().BeFalse()", span="529-529"];
n338 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n340 [cluster="Unk.BeGreaterThan", label="Entry Unk.BeGreaterThan", span=""];
m0_220 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="551-551"];
m0_221 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Func<OkPair<TValue, TMessage>, Result<TSuccess, TMessage>> successFunc =\r\n                pair => MergeMessages(pair.Messages, func(pair.Success))", span="555-556"];
m0_223 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return Either(successFunc, failureFunc, result);", span="561-561"];
m0_222 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Func<IEnumerable<TMessage>, Result<TSuccess, TMessage>> failureFunc =\r\n                messages => new Bad<TSuccess, TMessage>(messages)", span="558-559"];
m0_224 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="551-551"];
m0_125 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="255-255"];
m0_126 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return okPair.Messages;", span="257-257"];
m0_127 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="255-255"];
m0_293 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="745-745"];
m0_294 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="return Trial.Collect(values);", span="748-748"];
m0_295 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="745-745"];
m0_179 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", span="446-446"];
m0_180 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="448-448"];
m0_181 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", span="446-446"];
m0_115 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="242-242"];
m0_116 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="success == null", span="244-244"];
m0_118 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="messages == null", span="245-245"];
m0_120 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="return new OkPair<TSuccess, TMessage>(success, messages);", span="247-247"];
m0_117 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="throw new ArgumentNullException(''success'');", span="244-244"];
m0_119 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="throw new ArgumentNullException(''messages'');", span="245-245"];
m0_121 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="242-242"];
m0_216 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_144 [cluster="object.ToString()", file="ErrorHandling.cs", label="Entry object.ToString()", span="0-0"];
m0_170 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="408-408"];
m0_171 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ErrorHandling.cs", label="return new Ok<TSuccess, Exception>(\r\n                    new OkPair<TSuccess, Exception>(\r\n                        func(), Enumerable.Empty<Exception>()));", span="412-414"];
m0_172 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ErrorHandling.cs", label=Exception, span="416-416"];
m0_173 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ErrorHandling.cs", label="return new Bad<TSuccess, Exception>(\r\n                    new[] { ex });", span="418-419"];
m0_174 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="408-408"];
m0_329 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="831-831"];
m0_330 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="result.Tag == ResultType.Ok", span="833-833"];
m0_331 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="835-835"];
m0_333 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="841-841"];
m0_332 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="throw new Exception(\r\n                    string.Format(''Result was a success: {0} - {1}'',\r\n                    ok.Value.Success,\r\n                    string.Join(Environment.NewLine, ok.Value.Messages.Select(m => m.ToString()))));", span="836-839"];
m0_334 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return bad.Messages;", span="842-842"];
m0_335 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="831-831"];
m0_282 [cluster="System.Action<T>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_85 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.ToString()", span="148-148"];
m0_86 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="ErrorHandling.cs", label="return ''()'';", span="150-150"];
m0_87 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.ToString()", span="148-148"];
m0_41 [cluster="System.Func<T, TResult>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_67 [cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)", span="116-116"];
m0_163 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ErrorHandling.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_326 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="819-819"];
m0_327 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="return Trial.Lift(func, result);", span="822-822"];
m0_328 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="819-819"];
m0_151 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", span="348-348"];
m0_152 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="this.messages = messages", span="351-351"];
m0_153 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", span="348-348"];
m0_9 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ErrorHandling.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_182 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", span="457-457"];
m0_183 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, new[] { message }));", span="459-459"];
m0_184 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", span="457-457"];
m0_191 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="490-490"];
m0_192 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var ok = trialResult as Ok<TSuccess, TMessage>", span="495-495"];
m0_194 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return successFunc(ok.Value);", span="498-498"];
m0_195 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)trialResult", span="500-500"];
m0_196 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return failureFunc(bad.Messages);", span="501-501"];
m0_193 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="ok != null", span="496-496"];
m0_197 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="490-490"];
m0_296 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", span="758-758"];
m0_297 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="result.Tag == ResultType.Ok", span="760-760"];
m0_298 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var ok = (Ok<IEnumerable<Result<TSuccess, TMessage>>, TMessage>)result", span="762-762"];
m0_306 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var bad = (Bad<IEnumerable<Result<TSuccess, TMessage>>, TMessage>)result", span="773-773"];
m0_299 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var values = ok.Value.Success", span="763-763"];
m0_300 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var result1 = Collect(values)", span="764-764"];
m0_301 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="result1.Tag == ResultType.Ok", span="765-765"];
m0_302 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var ok1 = (Ok<IEnumerable<TSuccess>, TMessage>)result1", span="767-767"];
m0_304 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="var bad1 = (Bad<IEnumerable<TSuccess>, TMessage>)result1", span="770-770"];
m0_303 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="return new Ok<IEnumerable<TSuccess>, TMessage>(new OkPair<IEnumerable<TSuccess>, TMessage>(ok1.Value.Success, ok1.Value.Messages));", span="768-768"];
m0_305 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages);", span="771-771"];
m0_307 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad.Messages);", span="774-774"];
m0_308 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", span="758-758"];
m0_312 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", span="798-798"];
m0_313 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="Func<TSuccess, Func<TValue, TResult>> curriedMapper = suc => val => mapperFunc(suc, val)", span="803-803"];
m0_315 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="var v = Trial.Bind(func, result)", span="809-809"];
m0_316 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="return liftedMapper(result, v);", span="810-810"];
m0_314 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="Func<\r\n                Result<TSuccess, TMessage>,\r\n                Result<TValue, TMessage>,\r\n                Result<TResult, TMessage>\r\n            > liftedMapper = (a, b) => Trial.Lift2(curriedMapper, a, b)", span="804-808"];
m0_317 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", span="798-798"];
m0_88 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="153-153"];
m0_89 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="return true;", span="155-155"];
m0_90 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="153-153"];
m0_259 [cluster="System.Collections.Generic.IEnumerable<T>.Fold<T, TResult>(System.Func<T, T, TResult>)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Fold<T, TResult>(System.Func<T, T, TResult>)", span="96-96"];
m0_281 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ErrorHandling.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m0_94 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="180-180"];
m0_95 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="this.success = success", span="182-182"];
m0_96 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="this.messages = messages", span="183-183"];
m0_97 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="180-180"];
m0_175 [cluster="System.Func<TResult>.Invoke()", file="ErrorHandling.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_346 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="861-861"];
m0_73 [cluster="lambda expression", file="ErrorHandling.cs", label="new KeyValuePair<int, TSource>(startIndex + index, item)", span="118-118"];
m0_72 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="118-118"];
m0_74 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="118-118"];
m0_145 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="307-307"];
m0_141 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="302-302"];
m0_142 [cluster="lambda expression", file="ErrorHandling.cs", label="v.ToString()", span="302-302"];
m0_143 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="302-302"];
m0_146 [cluster="lambda expression", file="ErrorHandling.cs", label="v.ToString()", span="307-307"];
m0_147 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="307-307"];
m0_203 [cluster="lambda expression", file="ErrorHandling.cs", label="throw new Exception(\r\n                    string.Join(\r\n                    Environment.NewLine, msgs.Select(m => m.ToString())));", span="515-517"];
m0_202 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="513-518"];
m0_204 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="513-518"];
m0_205 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="517-517"];
m0_206 [cluster="lambda expression", file="ErrorHandling.cs", label="m.ToString()", span="517-517"];
m0_207 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="517-517"];
m0_214 [cluster="lambda expression", file="ErrorHandling.cs", label="new Ok<TSuccess, TMessage>(\r\n                        new OkPair<TSuccess, TMessage>(pair.Success, messages.Concat(pair.Messages)))", span="535-536"];
m0_218 [cluster="lambda expression", file="ErrorHandling.cs", label="new Bad<TSuccess, TMessage>(errors.Concat(messages))", span="539-539"];
m0_213 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="534-536"];
m0_215 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="534-536"];
m0_217 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="539-539"];
m0_219 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="539-539"];
m0_226 [cluster="lambda expression", file="ErrorHandling.cs", label="MergeMessages(pair.Messages, func(pair.Success))", span="556-556"];
m0_229 [cluster="lambda expression", file="ErrorHandling.cs", label="new Bad<TSuccess, TMessage>(messages)", span="559-559"];
m0_225 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="556-556"];
m0_227 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="556-556"];
m0_228 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="559-559"];
m0_230 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="559-559"];
m0_234 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="573-573"];
m0_235 [cluster="lambda expression", file="ErrorHandling.cs", label=x, span="573-573"];
m0_236 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="573-573"];
m0_260 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="649-675"];
m0_261 [cluster="lambda expression", file="ErrorHandling.cs", label="result.Tag == ResultType.Ok && next.Tag == ResultType.Ok", span="651-651"];
m0_262 [cluster="lambda expression", file="ErrorHandling.cs", label="var ok1 = (Ok<TSuccess, TMessage>)result", span="653-653"];
m0_263 [cluster="lambda expression", file="ErrorHandling.cs", label="var ok2 = (Ok<TSuccess, TMessage>)next", span="654-654"];
m0_265 [cluster="lambda expression", file="ErrorHandling.cs", label="(result.Tag == ResultType.Ok && next.Tag == ResultType.Bad)\r\n                        || (result.Tag == ResultType.Bad && next.Tag == ResultType.Ok)", span="661-662"];
m0_266 [cluster="lambda expression", file="ErrorHandling.cs", label="var m1 = result.Tag == ResultType.Ok\r\n                            ? ((Ok<TSuccess, TMessage>)result).Value.Messages\r\n                            : ((Bad<TSuccess, TMessage>)next).Messages", span="664-666"];
m0_267 [cluster="lambda expression", file="ErrorHandling.cs", label="var m2 = result.Tag == ResultType.Bad\r\n                            ? ((Bad<TSuccess, TMessage>)result).Messages\r\n                            : ((Ok<TSuccess, TMessage>)next).Value.Messages", span="667-669"];
m0_269 [cluster="lambda expression", file="ErrorHandling.cs", label="var bad1 = (Bad<TSuccess, TMessage>)result", span="672-672"];
m0_270 [cluster="lambda expression", file="ErrorHandling.cs", label="var bad2 = (Bad<TSuccess, TMessage>)next", span="673-673"];
m0_264 [cluster="lambda expression", file="ErrorHandling.cs", label="return\r\n                            new Ok<IEnumerable<TSuccess>, TMessage>(\r\n                                new OkPair<IEnumerable<TSuccess>, TMessage>(\r\n                                    new[] { ok2.Value.Success, ok1.Value.Success },\r\n                                    ok1.Value.Messages.Concat(ok2.Value.Messages)));", span="655-659"];
m0_268 [cluster="lambda expression", file="ErrorHandling.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(m1.Concat(m2));", span="670-670"];
m0_271 [cluster="lambda expression", file="ErrorHandling.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages.Concat(bad2.Messages));", span="674-674"];
m0_272 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="649-675"];
m0_321 [cluster="lambda expression", file="ErrorHandling.cs", label="mapperFunc(suc, val)", span="803-803"];
m0_324 [cluster="lambda expression", file="ErrorHandling.cs", label="Trial.Lift2(curriedMapper, a, b)", span="808-808"];
m0_318 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="803-803"];
m0_319 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="803-803"];
m0_320 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="803-803"];
m0_322 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="803-803"];
m0_323 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="808-808"];
m0_325 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="808-808"];
m0_336 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="839-839"];
m0_337 [cluster="lambda expression", file="ErrorHandling.cs", label="m.ToString()", span="839-839"];
m0_338 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="839-839"];
m0_347 [cluster="lambda expression", file="ErrorHandling.cs", label="m.ToString()", span="861-861"];
m0_348 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="861-861"];
m0_82 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.GetHashCode()", span="143-143"];
m0_83 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="ErrorHandling.cs", label="return 0;", span="145-145"];
m0_84 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.GetHashCode()", span="143-143"];
m0_148 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="324-324"];
m0_149 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="this.value = value", span="327-327"];
m0_150 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="324-324"];
m0_122 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="250-250"];
m0_123 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return okPair.Success;", span="252-252"];
m0_124 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="250-250"];
m0_104 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="226-226"];
m0_110 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="other == null", span="228-228"];
m0_112 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return Success.Equals(other.Success) && Messages.SequenceEqual(other.Messages);", span="233-233"];
m0_111 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return false;", span="230-230"];
m0_113 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="226-226"];
m0_51 [cluster="string.Format(string, object, object)", file="ErrorHandling.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_114 [cluster="Unk.SequenceEqual", file="ErrorHandling.cs", label="Entry Unk.SequenceEqual", span=""];
m0_42 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ErrorHandling.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m0_131 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", span="293-293"];
m0_132 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label=Tag, span="295-295"];
m0_133 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="ResultType.Ok", span="297-297"];
m0_136 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)this", span="304-304"];
m0_134 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="var ok = (Ok<TSuccess, TMessage>)this", span="298-298"];
m0_135 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="return string.Format(\r\n                        ''OK: {0} - {1}'',\r\n                        ok.Value.Success,\r\n                        string.Join(Environment.NewLine, ok.Value.Messages.Select(v => v.ToString())));", span="299-302"];
m0_137 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="return string.Format(\r\n                        ''Error: {0}'',\r\n                        string.Join(Environment.NewLine, bad.Messages.Select(v => v.ToString())));", span="305-307"];
m0_138 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", span="293-293"];
m0_273 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="693-693"];
m0_274 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="var ok = result as Ok<TSuccess, TMessage>", span="697-697"];
m0_276 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="ifSuccess(ok.Value.Success, ok.Value.Messages)", span="700-700"];
m0_278 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="703-703"];
m0_279 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="ifFailure(bad.Messages)", span="704-704"];
m0_275 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="ok != null", span="698-698"];
m0_277 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="return;", span="701-701"];
m0_280 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="693-693"];
m0_109 [cluster="object.GetHashCode()", file="ErrorHandling.cs", label="Entry object.GetHashCode()", span="0-0"];
m0_309 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", span="784-784"];
m0_310 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="ErrorHandling.cs", label="return Trial.Bind(func, result);", span="787-787"];
m0_311 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", span="784-784"];
m0_50 [cluster="int.ToString(string)", file="ErrorHandling.cs", label="Entry int.ToString(string)", span="0-0"];
m0_188 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="479-479"];
m0_189 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return result.Tag == ResultType.Bad;", span="481-481"];
m0_190 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="479-479"];
m0_71 [cluster="Unk.Select", file="ErrorHandling.cs", label="Entry Unk.Select", span=""];
m0_290 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="732-732"];
m0_291 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="return Trial.Lift(func, result);", span="735-735"];
m0_292 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="732-732"];
m0_61 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="106-106"];
m0_62 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="return FoldImpl(source, 4, null, null, null, folder);", span="108-108"];
m0_63 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="106-106"];
m0_185 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", span="468-468"];
m0_186 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(new[] { message });", span="470-470"];
m0_187 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", span="468-468"];
m0_0 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="19-19"];
m0_1 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="var collection = source as ICollection<TSource>", span="22-22"];
m0_3 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="collection.Count != count", span="25-25"];
m0_4 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="throw errorSelector(collection.Count.CompareTo(count), count);", span="26-26"];
m0_5 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="return source;", span="27-27"];
m0_6 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="return ExpectingCountYieldingImpl(source, count, errorSelector);", span="30-30"];
m0_2 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="collection != null", span="23-23"];
m0_7 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="19-19"];
m0_68 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="116-116"];
m0_69 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", file="ErrorHandling.cs", label="return source.Select((item, index) => new KeyValuePair<int, TSource>(startIndex + index, item));", span="118-118"];
m0_70 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="116-116"];
m0_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()", span="111-111"];
m0_164 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", span="392-392"];
m0_165 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, new[] { message }));", span="394-394"];
m0_166 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", span="392-392"];
m0_91 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="158-158"];
m0_92 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="return false;", span="160-160"];
m0_93 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="158-158"];
m0_256 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="645-645"];
m0_257 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="return Lift(Enumerable.Reverse, xs.Fold<Result<TSuccess, TMessage>, Result<IEnumerable<TSuccess>, TMessage>>(\r\n                (result, next) =>\r\n                {\r\n                    if (result.Tag == ResultType.Ok && next.Tag == ResultType.Ok)\r\n                    {\r\n                        var ok1 = (Ok<TSuccess, TMessage>)result;\r\n                        var ok2 = (Ok<TSuccess, TMessage>)next;\r\n                        return\r\n                            new Ok<IEnumerable<TSuccess>, TMessage>(\r\n                                new OkPair<IEnumerable<TSuccess>, TMessage>(\r\n                                    new[] { ok2.Value.Success, ok1.Value.Success },\r\n                                    ok1.Value.Messages.Concat(ok2.Value.Messages)));\r\n                    }\r\n                    if ((result.Tag == ResultType.Ok && next.Tag == ResultType.Bad)\r\n                        || (result.Tag == ResultType.Bad && next.Tag == ResultType.Ok))\r\n                    {\r\n                        var m1 = result.Tag == ResultType.Ok\r\n                            ? ((Ok<TSuccess, TMessage>)result).Value.Messages\r\n                            : ((Bad<TSuccess, TMessage>)next).Messages;\r\n                        var m2 = result.Tag == ResultType.Bad\r\n                            ? ((Bad<TSuccess, TMessage>)result).Messages\r\n                            : ((Ok<TSuccess, TMessage>)next).Value.Messages;\r\n                        return new Bad<IEnumerable<TSuccess>, TMessage>(m1.Concat(m2));\r\n                    }\r\n                    var bad1 = (Bad<TSuccess, TMessage>)result;\r\n                    var bad2 = (Bad<TSuccess, TMessage>)next;\r\n                    return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages.Concat(bad2.Messages));\r\n                }));", span="648-675"];
m0_258 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="645-645"];
m0_160 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", span="384-384"];
m0_161 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="386-386"];
m0_162 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", span="384-384"];
m0_176 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", span="435-435"];
m0_177 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="437-437"];
m0_178 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", span="435-435"];
m0_157 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", span="376-376"];
m0_158 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(new[] { message });", span="378-378"];
m0_159 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", span="376-376"];
m0_43 [cluster="System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", file="ErrorHandling.cs", label="Entry System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", span="0-0"];
m0_140 [cluster="string.Format(string, object)", file="ErrorHandling.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_79 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.Equals(object)", span="138-138"];
m0_80 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="ErrorHandling.cs", label="return obj is Unit;", span="140-140"];
m0_81 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.Equals(object)", span="138-138"];
m0_58 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="101-101"];
m0_59 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", file="ErrorHandling.cs", label="return FoldImpl(source, 3, null, null, folder, null);", span="103-103"];
m0_60 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="101-101"];
m0_98 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", span="201-201"];
m0_99 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="var other = obj as OkPair<TSuccess, TMessage>", span="203-203"];
m0_102 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="return base.Equals(obj);", span="209-209"];
m0_100 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="other != null", span="204-204"];
m0_101 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="return Equals(other);", span="206-206"];
m0_103 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", span="201-201"];
m0_128 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", span="283-283"];
m0_129 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="ErrorHandling.cs", label="this.tag = tag", span="285-285"];
m0_130 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", span="283-283"];
m0_167 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="400-400"];
m0_168 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, messages));", span="402-402"];
m0_169 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="400-400"];
m0_231 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", span="570-570"];
m0_232 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="ErrorHandling.cs", label="return Bind(x => x, result);", span="573-573"];
m0_233 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", span="570-570"];
m0_237 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="583-583"];
m0_238 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="wrappedFunction.Tag == ResultType.Ok && result.Tag == ResultType.Ok", span="587-587"];
m0_239 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="var ok1 = (Ok<Func<TValue, TSuccess>, TMessage>)wrappedFunction", span="589-589"];
m0_240 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="var ok2 = (Ok<TValue, TMessage>)result", span="590-590"];
m0_242 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="wrappedFunction.Tag == ResultType.Bad && result.Tag == ResultType.Ok", span="595-595"];
m0_243 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(((Bad<TValue, TMessage>)result).Messages);", span="597-597"];
m0_244 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="wrappedFunction.Tag == ResultType.Ok && result.Tag == ResultType.Bad", span="599-599"];
m0_245 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(\r\n                    ((Bad<TValue, TMessage>)result).Messages);", span="601-602"];
m0_246 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="var bad1 = (Bad<Func<TValue, TSuccess>, TMessage>)wrappedFunction", span="605-605"];
m0_247 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="var bad2 = (Bad<TValue, TMessage>)result", span="606-606"];
m0_241 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(\r\n                    ok1.Value.Success(ok2.Value.Success), ok1.Value.Messages.Concat(ok2.Value.Messages)));", span="592-593"];
m0_248 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(bad1.Messages.Concat(bad2.Messages));", span="608-608"];
m0_249 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="583-583"];
m0_250 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="617-617"];
m0_251 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="return Apply(Ok<Func<TValue, TSuccess>, TMessage>(func), result);", span="621-621"];
m0_252 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="617-617"];
m0_253 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", span="630-630"];
m0_254 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="ErrorHandling.cs", label="return Apply(Lift(func, a), b);", span="635-635"];
m0_255 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", span="630-630"];
m0_339 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="851-851"];
m0_340 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="result.Tag == ResultType.Ok", span="853-853"];
m0_341 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="855-855"];
m0_343 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="858-858"];
m0_342 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return ok.Value.Success;", span="856-856"];
m0_344 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="throw new Exception(\r\n                string.Format(''Result was an error: {0}'',\r\n                string.Join(Environment.NewLine, bad.Messages.Select(m => m.ToString()))));", span="859-861"];
m0_345 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="851-851"];
m0_75 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m0_139 [cluster="Unk.Join", file="ErrorHandling.cs", label="Entry Unk.Join", span=""];
m0_106 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", span="216-216"];
m0_107 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="ErrorHandling.cs", label="return new { Success, Messages }.GetHashCode();", span="218-218"];
m0_108 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", span="216-216"];
m0_198 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="511-511"];
m0_199 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Func<IEnumerable<TMessage>, TSuccess> raiseExn = msgs =>\r\n            {\r\n                throw new Exception(\r\n                    string.Join(\r\n                    Environment.NewLine, msgs.Select(m => m.ToString())));\r\n            }", span="513-518"];
m0_200 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return Either(OkPair.First, raiseExn, result);", span="520-520"];
m0_201 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="511-511"];
m0_8 [cluster="int.CompareTo(int)", file="ErrorHandling.cs", label="Entry int.CompareTo(int)", span="0-0"];
m0_208 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="529-529"];
m0_209 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Func<OkPair<TSuccess, TMessage>, Result<TSuccess, TMessage>> successFunc =\r\n                pair =>\r\n                    new Ok<TSuccess, TMessage>(\r\n                        new OkPair<TSuccess, TMessage>(pair.Success, messages.Concat(pair.Messages)))", span="533-536"];
m0_210 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Func<IEnumerable<TMessage>, Result<TSuccess, TMessage>> failureFunc =\r\n                errors => new Bad<TSuccess, TMessage>(errors.Concat(messages))", span="538-539"];
m0_211 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="return Either(successFunc, failureFunc, result);", span="541-541"];
m0_212 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="529-529"];
m0_52 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="91-91"];
m0_53 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="ErrorHandling.cs", label="return FoldImpl(source, 1, folder, null, null, null);", span="93-93"];
m0_54 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="91-91"];
m0_49 [cluster="System.Exception.Exception(string)", file="ErrorHandling.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_45 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="83-83"];
m0_46 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", file="ErrorHandling.cs", label="var message = cmp < 0\r\n                        ? ''Sequence contains too few elements when exactly {0} {1} expected.''\r\n                        : ''Sequence contains too many elements when exactly {0} {1} expected.''", span="85-87"];
m0_47 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", file="ErrorHandling.cs", label="return new Exception(string.Format(message, count.ToString(''N0''), count == 1 ? ''was'' : ''were''));", span="88-88"];
m0_48 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="83-83"];
m0_44 [cluster="System.NotSupportedException.NotSupportedException()", file="ErrorHandling.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m0_105 [cluster="object.Equals(object)", file="ErrorHandling.cs", label="Entry object.Equals(object)", span="0-0"];
m0_283 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", span="713-713"];
m0_284 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="var ok = result as Ok<TSuccess, TMessage>", span="717-717"];
m0_286 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="return ifSuccess(ok.Value.Success, ok.Value.Messages);", span="720-720"];
m0_287 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="722-722"];
m0_288 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="return ifFailure(bad.Messages);", span="723-723"];
m0_285 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="ok != null", span="718-718"];
m0_289 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", span="713-713"];
m0_76 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", span="133-133"];
m0_77 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="return true;", span="135-135"];
m0_78 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", span="133-133"];
m0_39 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ErrorHandling.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_55 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="96-96"];
m0_56 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", file="ErrorHandling.cs", label="return FoldImpl(source, 2, null, folder, null, null);", span="98-98"];
m0_57 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="96-96"];
m0_64 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="111-111"];
m0_65 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="return source.Index(0);", span="113-113"];
m0_66 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="111-111"];
m0_20 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="52-52"];
m0_21 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="source == null", span="58-58"];
m0_23 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="count == 1 && folder1 == null\r\n                || count == 2 && folder2 == null\r\n                || count == 3 && folder3 == null\r\n                || count == 4 && folder4 == null", span="59-62"];
m0_25 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="var elements = new T[count]", span="67-67"];
m0_26 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="AssertCountImpl(source.Index(), count, OnFolderSourceSizeErrorSelector)", span="68-68"];
m0_28 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label=count, span="71-71"];
m0_30 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="return folder1(elements[0]);", span="73-73"];
m0_32 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="return folder2(elements[0], elements[1]);", span="74-74"];
m0_34 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="return folder3(elements[0], elements[1], elements[2]);", span="75-75"];
m0_36 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="return folder4(elements[0], elements[1], elements[2], elements[3]);", span="76-76"];
m0_22 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="throw new ArgumentNullException(''source'');", span="58-58"];
m0_24 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="throw new ArgumentNullException(''folder'');", span="64-64"];
m0_27 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="elements[e.Key] = e.Value", span="69-69"];
m0_29 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label=1, span="73-73"];
m0_31 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label=2, span="74-74"];
m0_33 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label=3, span="75-75"];
m0_35 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label=4, span="76-76"];
m0_37 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="throw new NotSupportedException();", span="77-77"];
m0_38 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="52-52"];
m0_10 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="33-33"];
m0_11 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="var iterations = 0", span="36-36"];
m0_16 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="yield return element;", span="44-44"];
m0_12 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label=source, span="37-37"];
m0_14 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="iterations > count", span="40-40"];
m0_15 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="throw errorSelector(1, count);", span="42-42"];
m0_17 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="iterations != count", span="46-46"];
m0_18 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="throw errorSelector(-1, count);", span="48-48"];
m0_13 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="iterations++", span="39-39"];
m0_19 [cluster="RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="33-33"];
m0_154 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Entry RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", span="368-368"];
m0_155 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="return new Bad<TSuccess, TMessage>(messages);", span="370-370"];
m0_156 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="ErrorHandling.cs", label="Exit RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", span="368-368"];
m0_349 [file="ErrorHandling.cs", label=int, span=""];
m0_350 [file="ErrorHandling.cs", label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", span=""];
m0_351 [file="ErrorHandling.cs", label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", span=""];
m0_352 [file="ErrorHandling.cs", label="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>", span=""];
m0_353 [file="ErrorHandling.cs", label="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>", span=""];
m0_354 [file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<TMessage>", span=""];
m0_355 [file="ErrorHandling.cs", label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", span=""];
m0_356 [file="ErrorHandling.cs", label="System.Func<TSuccess, TValue, TResult>", span=""];
m0_357 [file="ErrorHandling.cs", label=TSuccess, span=""];
m0_358 [file="ErrorHandling.cs", label=curriedMapper, span=""];
m1_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="Tokenizer.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m1_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="Tokenizer.cs", label="-1: return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="30-34"];
m1_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="Tokenizer.cs", label="TypeDescriptorKind.Sequence", span="29-29"];
m1_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=green, community=0, file="Tokenizer.cs", label="-1: return specProp.Property.PropertyType;", span="36-36"];
m1_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="Tokenizer.cs", label="specProp.Specification.ConversionType.ToDescriptorKind()", span="27-27"];
m1_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="Tokenizer.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m1_23 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="Tokenizer.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m1_18 [cluster="System.Type.ToDescriptorKind()", file="Tokenizer.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m1_19 [cluster="System.Type.GetGenericArguments()", file="Tokenizer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_21 [cluster="T.ToMaybe<T>()", file="Tokenizer.cs", label="Entry T.ToMaybe<T>()", span="79-79"];
m1_22 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Tokenizer.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m2_38 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="82-82"];
m2_49 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="101-101"];
m2_66 [cluster="lambda expression", file="ValueMapper.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63"];
m2_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="202-205"];
m2_185 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m2_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label=optionSpecs, span=""];
m2_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="293-293"];
m2_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label="System.Globalization.CultureInfo", span=""];
m2_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="283-290"];
m2_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label=token, span=""];
m2_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="270-270"];
m2_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="244-244"];
m2_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="457-457"];
m2_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="463-467"];
m2_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="470-470"];
m2_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="460-460"];
m2_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="457-457"];
m2_72 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m2_150 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2"];
m2_194 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="ValueMapper.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m2_129 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ValueMapper.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m2_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_6 [cluster="lambda expression", file="ValueMapper.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25"];
m2_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="438-438"];
m2_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="444-448"];
m2_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="451-451"];
m2_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="441-441"];
m2_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="438-438"];
m2_7 [cluster="lambda expression", file="ValueMapper.cs", label="return explodedTokens;", span="26-26"];
m2_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                new[] { ''--int-seq'', ''1'', ''20'', ''300'', ''4000'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104"];
m2_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="ValueMapper.cs", label="var expectedResult = new[] { 10, 20, 30, 40 }", span="116-116"];
m2_48 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithSequence()", span="101-101"];
m2_73 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="74-74"];
m2_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="126-126"];
m2_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_44 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ValueMapper.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m2_42 [cluster="System.StringComparer.Equals(string, string)", file="ValueMapper.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m2_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ValueMapper.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_118 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="24-28"];
m2_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m2_22 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptions()", span="44-44"];
m2_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m2_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="62-66"];
m2_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="ValueMapper.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="69-69"];
m2_28 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m2_29 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="63-63"];
m2_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="42-43"];
m2_23 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="44-44"];
m2_31 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="63-63"];
m2_21 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="44-44"];
m2_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="ValueMapper.cs", label="var expectedResult = .123D", span="59-59"];
m2_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75"];
m2_30 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithDouble()", span="63-63"];
m2_32 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7"];
m2_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="ValueMapper.cs", label="var expectedResult = -.123D", span="78-78"];
m2_79 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="186-190"];
m2_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="221-221"];
m2_58 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="120-120"];
m2_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="113-113"];
m2_130 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="287-287"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m2_12 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="25-25"];
m2_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="ValueMapper.cs", label="var expectedResult = -123", span="40-40"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="ValueMapper.cs", label="Assert.True(expectedResult.Equals(result))", span="31-31"];
m2_11 [cluster="Unk.True", file="ValueMapper.cs", label="Entry Unk.True", span=""];
m2_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m2_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ValueMapper.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103"];
m2_13 [cluster="lambda expression", file="ValueMapper.cs", label=fakeOptions, span="25-25"];
m2_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47"];
m2_70 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="168-168"];
m2_74 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="162-162"];
m2_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="174-174"];
m2_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="133-133"];
m2_65 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="140-140"];
m2_69 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165"];
m2_76 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="162-162"];
m2_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="193-193"];
m2_84 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithValues()", span="187-187"];
m2_88 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="208-212"];
m2_92 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="209-209"];
m2_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="221-221"];
m2_100 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7"];
m2_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''-s'', ''eml1@xyz.com,test@unit.org,xyz@srv.it'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="254-258"];
m2_60 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                args, //new[] { ''-s'', ''just-one'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143"];
m2_61 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.StringSequence))", span="146-146"];
m2_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="152-152"];
m2_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="152-152"];
m2_75 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithEnum()", span="162-162"];
m2_78 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="177-183"];
m2_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="174-174"];
m2_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m2_85 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="187-187"];
m2_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="199-199"];
m2_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="215-215"];
m2_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="199-199"];
m2_93 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="209-209"];
m2_94 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="209-209"];
m2_96 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    LongSequence = new[] { 1L, 1234L, 59678L },\r\n                    StringSequence = new string[] { }\r\n                }", span="224-228"];
m2_97 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''--long-seq'', ''1;1234;59678'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="231-235"];
m2_101 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="232-232"];
m2_102 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="232-232"];
m2_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="261-261"];
m2_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="244-244"];
m2_57 [cluster="Unk.Concat", file="ValueMapper.cs", label="Entry Unk.Concat", span=""];
m2_187 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptions()", span="407-407"];
m2_196 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptions()", span="426-426"];
m2_204 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptions()", span="445-445"];
m2_212 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptions()", span="464-464"];
m2_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueMapper.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m2_56 [cluster="Unk.Select", file="ValueMapper.cs", label="Entry Unk.Select", span=""];
m2_186 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="407-407"];
m2_188 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="407-407"];
m2_195 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="426-426"];
m2_197 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="426-426"];
m2_203 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="445-445"];
m2_205 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="445-445"];
m2_211 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="464-464"];
m2_213 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="464-464"];
m2_47 [cluster="CommandLine.Core.Specification.IsOption()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m2_63 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m2_83 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m2_109 [cluster="lambda expression", file="ValueMapper.cs", label="System.StringComparer", span=""];
m2_141 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="310-310"];
m2_151 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="330-330"];
m2_159 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="350-350"];
m2_168 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="370-370"];
m2_176 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="388-388"];
m2_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_39 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ValueMapper.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_64 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="ValueMapper.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m2_103 [cluster="System.Type.GetGenericArguments()", file="ValueMapper.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_111 [cluster="lambda expression", file="ValueMapper.cs", label="System.StringComparer", span=""];
m2_110 [cluster="lambda expression", file="ValueMapper.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m2_143 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="310-310"];
m2_142 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithSets()", span="310-310"];
m2_153 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="330-330"];
m2_152 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionWithRequiredAndSet()", span="330-330"];
m2_161 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="350-350"];
m2_160 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionWithRequiredAndSet()", span="350-350"];
m2_170 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="370-370"];
m2_169 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionWithRequiredAndSet()", span="370-370"];
m2_178 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="388-388"];
m2_177 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionWithRequired()", span="388-388"];
m2_120 [cluster="lambda expression", file="ValueMapper.cs", label="new FakeOptionsWithValues()", span="284-284"];
m2_119 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="284-284"];
m2_121 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="284-284"];
m2_122 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="285-287"];
m2_124 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="285-287"];
m2_123 [cluster="lambda expression", file="ValueMapper.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="286-287"];
m2_127 [cluster="lambda expression", file="ValueMapper.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="287-287"];
m2_131 [cluster="lambda expression", file="ValueMapper.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="287-287"];
m2_126 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="287-287"];
m2_128 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="287-287"];
m2_132 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="287-287"];
m2_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m2_125 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m2_139 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m2_179 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m2_62 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m2_18 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueMapper.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m2_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_55 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40"];
m2_180 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="400-400"];
m2_182 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="406-410"];
m2_183 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="413-413"];
m2_181 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ValueMapper.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="403-403"];
m2_184 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="400-400"];
m2_133 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueMapper.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m2_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="ValueMapper.cs", label="-1: return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30"];
m2_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueMapper.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_91 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7"];
m2_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="381-381"];
m2_173 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="387-391"];
m2_174 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="394-394"];
m2_172 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ValueMapper.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="384-384"];
m2_175 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="381-381"];
m2_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="361-361"];
m2_164 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="369-373"];
m2_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="376-376"];
m2_163 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ValueMapper.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="363-367"];
m2_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="361-361"];
m2_46 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m2_50 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="7-7"];
m2_98 [cluster="System.Type.ToDescriptorKind()", file="ValueMapper.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m2_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n            {\r\n                LongSequence = new long[] {},\r\n                StringSequence = new[] { ''eml1@xyz.com'', ''test@unit.org'', ''xyz@srv.it'' }\r\n            }", span="247-251"];
m2_144 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m2_140 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="ValueMapper.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m2_68 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueMapper.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m2_35 [cluster="System.Func<TResult>.Invoke()", file="ValueMapper.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_36 [cluster="object.GetType()", file="ValueMapper.cs", label="Entry object.GetType()", span="0-0"];
m2_37 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ValueMapper.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m2_167 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m2_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="419-419"];
m2_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="425-429"];
m2_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="432-432"];
m2_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="422-422"];
m2_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="419-419"];
m2_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="342-342"];
m2_156 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="349-353"];
m2_155 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="344-347"];
m2_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="356-356"];
m2_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="342-342"];
m2_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="322-322"];
m2_147 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="329-333"];
m2_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ValueMapper.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="324-327"];
m2_148 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ValueMapper.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="336-336"];
m2_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="322-322"];
m2_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ValueMapper.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="299-299"];
m2_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ValueMapper.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="309-313"];
m2_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ValueMapper.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="316-316"];
m2_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ValueMapper.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="302-306"];
m2_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="ValueMapper.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="299-299"];
m2_214 [file="ValueMapper.cs", label=fakeOptions, span=""];
m2_215 [file="ValueMapper.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n341 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n1 -> n165  [color=darkorchid, key=3, label="Parameter variable System.Func<int, int, System.Exception> errorSelector", style=bold];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n5 -> n8  [key=2, style=dotted];
n5 -> n9  [key=2, style=dotted];
n6 -> n4  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n3  [key=2, style=dotted];
n11 -> n13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n12 -> n10  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n7  [key=2, style=dotted];
n14 -> n9  [key=2, style=dotted];
n15 -> n13  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n8  [key=2, style=dotted];
n17 -> n19  [color=darkseagreen4, key=1, label=options, style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=options, style=dashed];
n17 -> n22  [color=darkseagreen4, key=1, label=options, style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n7  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n9  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n24  [key=2, style=dotted];
n21 -> n26  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n27  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=2, style=dotted];
n20 -> n25  [key=2, style=dotted];
n23 -> n16  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n8  [key=2, style=dotted];
n29 -> n31  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n33  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n34  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n35  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n36  [color=darkseagreen4, key=1, label=options, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n7  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n9  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n24  [key=2, style=dotted];
n33 -> n26  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n24  [key=2, style=dotted];
n34 -> n26  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n24  [key=2, style=dotted];
n35 -> n25  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n27  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n24  [key=2, style=dotted];
n32 -> n25  [key=2, style=dotted];
n37 -> n28  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n49  [key=2, style=dotted];
n39 -> n41  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n43  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n44  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n45  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n46  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n47  [color=darkseagreen4, key=1, label=options, style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n7  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n9  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n24  [key=2, style=dotted];
n43 -> n25  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n24  [key=2, style=dotted];
n44 -> n25  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n24  [key=2, style=dotted];
n45 -> n50  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n24  [key=2, style=dotted];
n46 -> n26  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n27  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n24  [key=2, style=dotted];
n42 -> n25  [key=2, style=dotted];
n48 -> n38  [color=blue, key=0, style=bold];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n49  [key=2, style=dotted];
n52 -> n54  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n56  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n57  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n58  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n59  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n60  [color=darkseagreen4, key=1, label=options, style=dashed];
n53 -> n54  [key=0, style=solid];
n53 -> n7  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n9  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n24  [key=2, style=dotted];
n56 -> n25  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n24  [key=2, style=dotted];
n57 -> n50  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n24  [key=2, style=dotted];
n58 -> n50  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n24  [key=2, style=dotted];
n59 -> n26  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n27  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n24  [key=2, style=dotted];
n55 -> n25  [key=2, style=dotted];
n61 -> n51  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n76  [key=2, style=dotted];
n63 -> n65  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n67  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n69  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n70  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n71  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n72  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n73  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n74  [color=darkseagreen4, key=1, label=options, style=dashed];
n64 -> n65  [key=0, style=solid];
n64 -> n7  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n9  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n24  [key=2, style=dotted];
n67 -> n26  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n77  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n24  [key=2, style=dotted];
n69 -> n26  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n77  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n24  [key=2, style=dotted];
n71 -> n26  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n77  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n24  [key=2, style=dotted];
n73 -> n26  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n24  [key=2, style=dotted];
n66 -> n25  [key=2, style=dotted];
n75 -> n62  [color=blue, key=0, style=bold];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n8  [key=2, style=dotted];
n79 -> n81  [color=darkseagreen4, key=1, label=options, style=dashed];
n79 -> n83  [color=darkseagreen4, key=1, label=options, style=dashed];
n80 -> n81  [key=0, style=solid];
n80 -> n7  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n27  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n24  [key=2, style=dotted];
n82 -> n50  [key=2, style=dotted];
n84 -> n78  [color=blue, key=0, style=bold];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n94  [key=2, style=dotted];
n86 -> n88  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n90  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n92  [color=darkseagreen4, key=1, label=options, style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n7  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n9  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n24  [key=2, style=dotted];
n90 -> n26  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n24  [key=2, style=dotted];
n91 -> n26  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n27  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n24  [key=2, style=dotted];
n89 -> n25  [key=2, style=dotted];
n93 -> n85  [color=blue, key=0, style=bold];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n102  [key=2, style=dotted];
n96 -> n98  [color=darkseagreen4, key=1, label=options, style=dashed];
n96 -> n100  [color=darkseagreen4, key=1, label=options, style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n103  [key=2, style=dotted];
n97 -> n104  [key=2, style=dotted];
n97 -> n105  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n9  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n24  [key=2, style=dotted];
n100 -> n26  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n24  [key=2, style=dotted];
n99 -> n25  [key=2, style=dotted];
n101 -> n95  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n114  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
n108 -> n109  [key=0, style=solid];
n108 -> n105  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n102  [key=2, style=dotted];
n109 -> n111  [color=darkseagreen4, key=1, label=options, style=dashed];
n109 -> n113  [color=darkseagreen4, key=1, label=options, style=dashed];
n110 -> n111  [key=0, style=solid];
n110 -> n7  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n9  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n24  [key=2, style=dotted];
n113 -> n26  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n24  [key=2, style=dotted];
n112 -> n25  [key=2, style=dotted];
n115 -> n106  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n125  [key=2, style=dotted];
n117 -> n119  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n121  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n122  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n123  [color=darkseagreen4, key=1, label=options, style=dashed];
n118 -> n119  [key=0, style=solid];
n118 -> n7  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n119 -> n9  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n24  [key=2, style=dotted];
n121 -> n26  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n24  [key=2, style=dotted];
n122 -> n26  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n24  [key=2, style=dotted];
n123 -> n25  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n24  [key=2, style=dotted];
n120 -> n25  [key=2, style=dotted];
n124 -> n116  [color=blue, key=0, style=bold];
n126 -> n127  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n135  [key=2, style=dotted];
n127 -> n129  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n131  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n132  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n133  [color=darkseagreen4, key=1, label=options, style=dashed];
n128 -> n129  [key=0, style=solid];
n128 -> n7  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n9  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n24  [key=2, style=dotted];
n131 -> n136  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n24  [key=2, style=dotted];
n132 -> n136  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n24  [key=2, style=dotted];
n133 -> n136  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n24  [key=2, style=dotted];
n130 -> n25  [key=2, style=dotted];
n134 -> n126  [color=blue, key=0, style=bold];
n137 -> n138  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [key=2, style=dotted];
n138 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n3  [key=2, style=dotted];
n139 -> n142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n143 -> n144  [key=0, style=solid];
n143 -> n7  [key=2, style=dotted];
n143 -> n9  [key=2, style=dotted];
n140 -> n137  [color=blue, key=0, style=bold];
n142 -> n143  [key=0, style=solid];
n144 -> n142  [color=blue, key=0, style=bold];
n145 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n8  [key=2, style=dotted];
n146 -> n148  [color=darkseagreen4, key=1, label=options, style=dashed];
n147 -> n148  [key=0, style=solid];
n147 -> n7  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n9  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n24  [key=2, style=dotted];
n149 -> n50  [key=2, style=dotted];
n150 -> n145  [color=blue, key=0, style=bold];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n8  [key=2, style=dotted];
n152 -> n154  [color=darkseagreen4, key=1, label=options, style=dashed];
n153 -> n154  [key=0, style=solid];
n153 -> n7  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n9  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n24  [key=2, style=dotted];
n155 -> n50  [key=2, style=dotted];
n156 -> n151  [color=blue, key=0, style=bold];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n7  [key=2, style=dotted];
n158 -> n160  [color=darkseagreen4, key=1, label=parser, style=dashed];
n159 -> n160  [key=0, style=solid];
n159 -> n165  [key=2, style=dotted];
n159 -> n162  [color=darkseagreen4, key=1, label=options, style=dashed];
n159 -> n163  [color=darkseagreen4, key=1, label=options, style=dashed];
n160 -> n161  [key=0, style=solid];
n160 -> n9  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n24  [key=2, style=dotted];
n162 -> n26  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n24  [key=2, style=dotted];
n163 -> n26  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n24  [key=2, style=dotted];
n161 -> n25  [key=2, style=dotted];
n164 -> n157  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n7  [key=2, style=dotted];
n167 -> n169  [color=darkseagreen4, key=1, label=parser, style=dashed];
n168 -> n169  [key=0, style=solid];
n168 -> n165  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n9  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n24  [key=2, style=dotted];
n170 -> n50  [key=2, style=dotted];
n171 -> n166  [color=blue, key=0, style=bold];
n172 -> n173  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n173 -> n103  [key=2, style=dotted];
n173 -> n180  [key=2, style=dotted];
n173 -> n175  [color=darkseagreen4, key=1, label=parser, style=dashed];
n174 -> n175  [key=0, style=solid];
n174 -> n165  [key=2, style=dotted];
n174 -> n177  [color=darkseagreen4, key=1, label=options, style=dashed];
n174 -> n178  [color=darkseagreen4, key=1, label=options, style=dashed];
n175 -> n176  [key=0, style=solid];
n175 -> n9  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n177 -> n24  [key=2, style=dotted];
n177 -> n26  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n24  [key=2, style=dotted];
n178 -> n26  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n24  [key=2, style=dotted];
n176 -> n25  [key=2, style=dotted];
n179 -> n172  [color=blue, key=0, style=bold];
n181 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n8  [key=2, style=dotted];
n182 -> n184  [color=darkseagreen4, key=1, label=options, style=dashed];
n183 -> n184  [key=0, style=solid];
n183 -> n7  [key=2, style=dotted];
n184 -> n185  [key=0, style=solid];
n184 -> n9  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n24  [key=2, style=dotted];
n185 -> n50  [key=2, style=dotted];
n186 -> n181  [color=blue, key=0, style=bold];
n187 -> n188  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n102  [key=2, style=dotted];
n188 -> n190  [color=darkseagreen4, key=1, label=options, style=dashed];
n189 -> n190  [key=0, style=solid];
n189 -> n7  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n9  [key=2, style=dotted];
n191 -> n192  [key=0, style=solid];
n191 -> n24  [key=2, style=dotted];
n191 -> n50  [key=2, style=dotted];
n192 -> n187  [color=blue, key=0, style=bold];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n102  [key=2, style=dotted];
n194 -> n196  [color=darkseagreen4, key=1, label=options, style=dashed];
n195 -> n196  [key=0, style=solid];
n195 -> n7  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n9  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n24  [key=2, style=dotted];
n197 -> n50  [key=2, style=dotted];
n198 -> n193  [color=blue, key=0, style=bold];
n199 -> n200  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n102  [key=2, style=dotted];
n200 -> n202  [color=darkseagreen4, key=1, label=options, style=dashed];
n201 -> n202  [key=0, style=solid];
n201 -> n7  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n9  [key=2, style=dotted];
n203 -> n204  [key=0, style=solid];
n203 -> n24  [key=2, style=dotted];
n203 -> n50  [key=2, style=dotted];
n204 -> n199  [color=blue, key=0, style=bold];
n205 -> n206  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n102  [key=2, style=dotted];
n206 -> n208  [color=darkseagreen4, key=1, label=options, style=dashed];
n207 -> n208  [key=0, style=solid];
n207 -> n7  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n9  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n24  [key=2, style=dotted];
n209 -> n50  [key=2, style=dotted];
n210 -> n205  [color=blue, key=0, style=bold];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n102  [key=2, style=dotted];
n212 -> n214  [color=darkseagreen4, key=1, label=options, style=dashed];
n213 -> n214  [key=0, style=solid];
n213 -> n7  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n9  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n24  [key=2, style=dotted];
n215 -> n50  [key=2, style=dotted];
n216 -> n211  [color=blue, key=0, style=bold];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n218 -> n102  [key=2, style=dotted];
n218 -> n220  [color=darkseagreen4, key=1, label=options, style=dashed];
n219 -> n220  [key=0, style=solid];
n219 -> n7  [key=2, style=dotted];
n220 -> n221  [key=0, style=solid];
n220 -> n9  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n24  [key=2, style=dotted];
n221 -> n50  [key=2, style=dotted];
n222 -> n217  [color=blue, key=0, style=bold];
n223 -> n224  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n8  [key=2, style=dotted];
n224 -> n226  [color=darkseagreen4, key=1, label=options, style=dashed];
n224 -> n228  [color=darkseagreen4, key=1, label=options, style=dashed];
n225 -> n226  [key=0, style=solid];
n225 -> n7  [key=2, style=dotted];
n226 -> n227  [key=0, style=solid];
n226 -> n9  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n228 -> n24  [key=2, style=dotted];
n228 -> n26  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n24  [key=2, style=dotted];
n227 -> n25  [key=2, style=dotted];
n229 -> n223  [color=blue, key=0, style=bold];
n230 -> n231  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n231 -> n240  [key=2, style=dotted];
n231 -> n233  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n235  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n236  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n237  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n238  [color=darkseagreen4, key=1, label=options, style=dashed];
n232 -> n233  [key=0, style=solid];
n232 -> n7  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n9  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n24  [key=2, style=dotted];
n235 -> n26  [key=2, style=dotted];
n236 -> n237  [key=0, style=solid];
n236 -> n24  [key=2, style=dotted];
n236 -> n25  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n24  [key=2, style=dotted];
n237 -> n26  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n24  [key=2, style=dotted];
n238 -> n26  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n24  [key=2, style=dotted];
n234 -> n25  [key=2, style=dotted];
n239 -> n230  [color=blue, key=0, style=bold];
n241 -> n242  [key=0, style=solid];
n242 -> n243  [key=0, style=solid];
n242 -> n8  [key=2, style=dotted];
n242 -> n244  [color=darkseagreen4, key=1, label=options, style=dashed];
n242 -> n246  [color=darkseagreen4, key=1, label=options, style=dashed];
n243 -> n244  [key=0, style=solid];
n243 -> n7  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n9  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n24  [key=2, style=dotted];
n246 -> n26  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n245 -> n24  [key=2, style=dotted];
n245 -> n25  [key=2, style=dotted];
n247 -> n241  [color=blue, key=0, style=bold];
n248 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n249 -> n102  [key=2, style=dotted];
n249 -> n251  [color=darkseagreen4, key=1, label=options, style=dashed];
n249 -> n253  [color=darkseagreen4, key=1, label=options, style=dashed];
n250 -> n251  [key=0, style=solid];
n250 -> n7  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n9  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n24  [key=2, style=dotted];
n253 -> n26  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n24  [key=2, style=dotted];
n252 -> n25  [key=2, style=dotted];
n254 -> n248  [color=blue, key=0, style=bold];
n255 -> n256  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n256 -> n102  [key=2, style=dotted];
n256 -> n258  [color=darkseagreen4, key=1, label=options, style=dashed];
n256 -> n260  [color=darkseagreen4, key=1, label=options, style=dashed];
n257 -> n258  [key=0, style=solid];
n257 -> n7  [key=2, style=dotted];
n258 -> n259  [key=0, style=solid];
n258 -> n9  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n24  [key=2, style=dotted];
n260 -> n26  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n24  [key=2, style=dotted];
n259 -> n25  [key=2, style=dotted];
n261 -> n255  [color=blue, key=0, style=bold];
n262 -> n263  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n263 -> n102  [key=2, style=dotted];
n263 -> n265  [color=darkseagreen4, key=1, label=options, style=dashed];
n263 -> n267  [color=darkseagreen4, key=1, label=options, style=dashed];
n264 -> n265  [key=0, style=solid];
n264 -> n7  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n9  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n267 -> n24  [key=2, style=dotted];
n267 -> n26  [key=2, style=dotted];
n266 -> n267  [key=0, style=solid];
n266 -> n24  [key=2, style=dotted];
n266 -> n25  [key=2, style=dotted];
n268 -> n262  [color=blue, key=0, style=bold];
n269 -> n270  [key=0, style=solid];
n270 -> n271  [key=0, style=solid];
n270 -> n102  [key=2, style=dotted];
n270 -> n272  [color=darkseagreen4, key=1, label=options, style=dashed];
n270 -> n274  [color=darkseagreen4, key=1, label=options, style=dashed];
n271 -> n272  [key=0, style=solid];
n271 -> n7  [key=2, style=dotted];
n272 -> n273  [key=0, style=solid];
n272 -> n9  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n24  [key=2, style=dotted];
n274 -> n26  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n24  [key=2, style=dotted];
n273 -> n25  [key=2, style=dotted];
n275 -> n269  [color=blue, key=0, style=bold];
n276 -> n277  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n277 -> n102  [key=2, style=dotted];
n277 -> n279  [color=darkseagreen4, key=1, label=options, style=dashed];
n277 -> n281  [color=darkseagreen4, key=1, label=options, style=dashed];
n278 -> n279  [key=0, style=solid];
n278 -> n7  [key=2, style=dotted];
n279 -> n280  [key=0, style=solid];
n279 -> n9  [key=2, style=dotted];
n281 -> n282  [key=0, style=solid];
n281 -> n24  [key=2, style=dotted];
n281 -> n26  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n24  [key=2, style=dotted];
n280 -> n25  [key=2, style=dotted];
n282 -> n276  [color=blue, key=0, style=bold];
n283 -> n284  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n284 -> n102  [key=2, style=dotted];
n284 -> n286  [color=darkseagreen4, key=1, label=options, style=dashed];
n284 -> n288  [color=darkseagreen4, key=1, label=options, style=dashed];
n285 -> n286  [key=0, style=solid];
n285 -> n7  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n286 -> n9  [key=2, style=dotted];
n288 -> n289  [key=0, style=solid];
n288 -> n24  [key=2, style=dotted];
n288 -> n26  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n24  [key=2, style=dotted];
n287 -> n25  [key=2, style=dotted];
n289 -> n283  [color=blue, key=0, style=bold];
n290 -> n291  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n291 -> n102  [key=2, style=dotted];
n291 -> n293  [color=darkseagreen4, key=1, label=options, style=dashed];
n291 -> n295  [color=darkseagreen4, key=1, label=options, style=dashed];
n292 -> n293  [key=0, style=solid];
n292 -> n7  [key=2, style=dotted];
n293 -> n294  [key=0, style=solid];
n293 -> n9  [key=2, style=dotted];
n295 -> n296  [key=0, style=solid];
n295 -> n24  [key=2, style=dotted];
n295 -> n26  [key=2, style=dotted];
n294 -> n295  [key=0, style=solid];
n294 -> n24  [key=2, style=dotted];
n294 -> n25  [key=2, style=dotted];
n296 -> n290  [color=blue, key=0, style=bold];
n297 -> n298  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n102  [key=2, style=dotted];
n298 -> n300  [color=darkseagreen4, key=1, label=options, style=dashed];
n299 -> n300  [key=0, style=solid];
n299 -> n7  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n300 -> n303  [key=2, style=dotted];
n300 -> n9  [key=2, style=dotted];
n301 -> n302  [key=0, style=solid];
n301 -> n24  [key=2, style=dotted];
n301 -> n50  [key=2, style=dotted];
n302 -> n297  [color=blue, key=0, style=bold];
n304 -> n305  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n102  [key=2, style=dotted];
n305 -> n307  [color=darkseagreen4, key=1, label=options, style=dashed];
n306 -> n307  [key=0, style=solid];
n306 -> n7  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n310  [key=2, style=dotted];
n307 -> n9  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n24  [key=2, style=dotted];
n308 -> n50  [key=2, style=dotted];
n309 -> n304  [color=blue, key=0, style=bold];
n311 -> n312  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n312 -> n102  [key=2, style=dotted];
n312 -> n314  [color=darkseagreen4, key=1, label=options, style=dashed];
n313 -> n314  [key=0, style=solid];
n313 -> n7  [key=2, style=dotted];
n314 -> n315  [key=0, style=solid];
n314 -> n317  [key=2, style=dotted];
n314 -> n9  [key=2, style=dotted];
n315 -> n316  [key=0, style=solid];
n315 -> n24  [key=2, style=dotted];
n315 -> n50  [key=2, style=dotted];
n316 -> n311  [color=blue, key=0, style=bold];
n318 -> n319  [key=0, style=solid];
n319 -> n320  [key=0, style=solid];
n319 -> n102  [key=2, style=dotted];
n319 -> n321  [color=darkseagreen4, key=1, label=options, style=dashed];
n320 -> n321  [key=0, style=solid];
n320 -> n7  [key=2, style=dotted];
n321 -> n322  [key=0, style=solid];
n321 -> n324  [key=2, style=dotted];
n321 -> n9  [key=2, style=dotted];
n322 -> n323  [key=0, style=solid];
n322 -> n24  [key=2, style=dotted];
n322 -> n50  [key=2, style=dotted];
n323 -> n318  [color=blue, key=0, style=bold];
n325 -> n326  [key=0, style=solid];
n326 -> n327  [key=0, style=solid];
n326 -> n102  [key=2, style=dotted];
n326 -> n328  [color=darkseagreen4, key=1, label=options, style=dashed];
n327 -> n328  [key=0, style=solid];
n327 -> n7  [key=2, style=dotted];
n328 -> n329  [key=0, style=solid];
n328 -> n331  [key=2, style=dotted];
n328 -> n9  [key=2, style=dotted];
n329 -> n330  [key=0, style=solid];
n329 -> n24  [key=2, style=dotted];
n329 -> n50  [key=2, style=dotted];
n330 -> n325  [color=blue, key=0, style=bold];
n332 -> n333  [key=0, style=solid];
n333 -> n334  [key=0, style=solid];
n333 -> n339  [key=2, style=dotted];
n333 -> n335  [color=darkseagreen4, key=1, label=options, style=dashed];
n333 -> n337  [color=darkseagreen4, key=1, label=options, style=dashed];
n334 -> n335  [key=0, style=solid];
n334 -> n7  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n9  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n337 -> n24  [key=2, style=dotted];
n337 -> n340  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n24  [key=2, style=dotted];
n336 -> n50  [key=2, style=dotted];
n338 -> n332  [color=blue, key=0, style=bold];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_226  [color=darkseagreen4, key=1, label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", style=dashed];
m0_220 -> m0_223  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m0_220 -> m0_191  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TSuccess, TMessage> Bind", style=bold];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_226  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TValue, TMessage>", style=dashed];
m0_221 -> m0_223  [color=darkseagreen4, key=1, label=successFunc, style=dashed];
m0_221 -> m0_221  [color=darkorchid, key=3, label="Local variable System.Func<RailwaySharp.ErrorHandling.OkPair<TValue, TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>> successFunc", style=bold];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_191  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_229  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_222 -> m0_222  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>> failureFunc", style=bold];
m0_224 -> m0_220  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_127 -> m0_125  [color=blue, key=0, style=bold];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_256  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<TSuccess>, TMessage> Collect", style=bold];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_256  [key=2, style=dotted];
m0_295 -> m0_293  [color=blue, key=0, style=bold];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_148  [key=2, style=dotted];
m0_180 -> m0_94  [key=2, style=dotted];
m0_180 -> m0_163  [key=2, style=dotted];
m0_181 -> m0_179  [color=blue, key=0, style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_118  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_115 -> m0_120  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_94  [key=2, style=dotted];
m0_117 -> m0_121  [key=0, style=solid];
m0_117 -> m0_39  [key=2, style=dotted];
m0_119 -> m0_121  [key=0, style=solid];
m0_119 -> m0_39  [key=2, style=dotted];
m0_121 -> m0_115  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_174  [key=0, style=solid];
m0_171 -> m0_148  [key=2, style=dotted];
m0_171 -> m0_94  [key=2, style=dotted];
m0_171 -> m0_175  [key=2, style=dotted];
m0_171 -> m0_163  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_151  [key=2, style=dotted];
m0_174 -> m0_170  [color=blue, key=0, style=bold];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_331  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_329 -> m0_333  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_333  [key=0, style=solid];
m0_331 -> m0_332  [key=0, style=solid];
m0_333 -> m0_334  [key=0, style=solid];
m0_332 -> m0_335  [key=0, style=solid];
m0_332 -> m0_49  [key=2, style=dotted];
m0_332 -> m0_71  [key=2, style=dotted];
m0_332 -> m0_139  [key=2, style=dotted];
m0_332 -> m0_51  [key=2, style=dotted];
m0_332 -> m0_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_334 -> m0_335  [key=0, style=solid];
m0_335 -> m0_329  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_85  [color=blue, key=0, style=bold];
m0_67 -> m0_11  [color=darkorchid, key=3, label="Parameter variable int startIndex", style=bold];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_250  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TResult, TMessage> Select", style=bold];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_250  [key=2, style=dotted];
m0_328 -> m0_326  [color=blue, key=0, style=bold];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_151  [color=blue, key=0, style=bold];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_148  [key=2, style=dotted];
m0_183 -> m0_94  [key=2, style=dotted];
m0_184 -> m0_182  [color=blue, key=0, style=bold];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_194  [color=darkseagreen4, key=1, label="System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>", style=dashed];
m0_191 -> m0_195  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_191 -> m0_196  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_194  [color=darkseagreen4, key=1, label=ok, style=dashed];
m0_194 -> m0_197  [key=0, style=solid];
m0_194 -> m0_41  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_41  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_195  [key=0, style=solid];
m0_197 -> m0_191  [color=blue, key=0, style=bold];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_298  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>", style=dashed];
m0_296 -> m0_306  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>", style=dashed];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_306  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_306 -> m0_307  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_293  [key=2, style=dotted];
m0_300 -> m0_302  [color=darkseagreen4, key=1, label=result1, style=dashed];
m0_300 -> m0_304  [color=darkseagreen4, key=1, label=result1, style=dashed];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_304  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_304 -> m0_305  [key=0, style=solid];
m0_303 -> m0_308  [key=0, style=solid];
m0_303 -> m0_148  [key=2, style=dotted];
m0_303 -> m0_94  [key=2, style=dotted];
m0_305 -> m0_308  [key=0, style=solid];
m0_305 -> m0_151  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_151  [key=2, style=dotted];
m0_308 -> m0_296  [color=blue, key=0, style=bold];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_321  [color=darkseagreen4, key=1, label="System.Func<TSuccess, TValue, TResult>", style=dashed];
m0_312 -> m0_315  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_312 -> m0_316  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_313  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m0_313 -> m0_321  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m0_313 -> m0_324  [color=darkseagreen4, key=1, label=curriedMapper, style=dashed];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_220  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_9  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_324  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_314 -> m0_316  [color=darkseagreen4, key=1, label=liftedMapper, style=dashed];
m0_314 -> m0_314  [color=darkorchid, key=3, label="Local variable System.Func<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>, RailwaySharp.ErrorHandling.Result<TResult, TMessage>> liftedMapper", style=bold];
m0_317 -> m0_312  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_77  [color=darkorchid, key=3, label="method methodReturn bool op_Equality", style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_88  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_94  [color=blue, key=0, style=bold];
m0_346 -> m0_347  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_74 -> m0_72  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_144  [key=2, style=dotted];
m0_143 -> m0_141  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_144  [key=2, style=dotted];
m0_147 -> m0_145  [color=blue, key=0, style=bold];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_49  [key=2, style=dotted];
m0_203 -> m0_71  [key=2, style=dotted];
m0_203 -> m0_139  [key=2, style=dotted];
m0_203 -> m0_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_202 -> m0_203  [key=0, style=solid];
m0_204 -> m0_202  [color=blue, key=0, style=bold];
m0_205 -> m0_206  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_144  [key=2, style=dotted];
m0_207 -> m0_205  [color=blue, key=0, style=bold];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_148  [key=2, style=dotted];
m0_214 -> m0_94  [key=2, style=dotted];
m0_214 -> m0_216  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_151  [key=2, style=dotted];
m0_218 -> m0_216  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_215 -> m0_213  [color=blue, key=0, style=bold];
m0_217 -> m0_218  [key=0, style=solid];
m0_219 -> m0_217  [color=blue, key=0, style=bold];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_41  [key=2, style=dotted];
m0_226 -> m0_208  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_151  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_225  [color=blue, key=0, style=bold];
m0_228 -> m0_229  [key=0, style=solid];
m0_230 -> m0_228  [color=blue, key=0, style=bold];
m0_234 -> m0_235  [key=0, style=solid];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_234  [color=blue, key=0, style=bold];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_263  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_265  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_266  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_267  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_269  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_260 -> m0_270  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_265  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_264  [color=darkseagreen4, key=1, label=ok1, style=dashed];
m0_263 -> m0_264  [key=0, style=solid];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_269  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_268  [color=darkseagreen4, key=1, label=m1, style=dashed];
m0_267 -> m0_268  [key=0, style=solid];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_271  [color=darkseagreen4, key=1, label=bad1, style=dashed];
m0_270 -> m0_271  [key=0, style=solid];
m0_264 -> m0_272  [key=0, style=solid];
m0_264 -> m0_148  [key=2, style=dotted];
m0_264 -> m0_94  [key=2, style=dotted];
m0_264 -> m0_216  [key=2, style=dotted];
m0_268 -> m0_272  [key=0, style=solid];
m0_268 -> m0_151  [key=2, style=dotted];
m0_268 -> m0_216  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_151  [key=2, style=dotted];
m0_271 -> m0_216  [key=2, style=dotted];
m0_272 -> m0_260  [color=blue, key=0, style=bold];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_9  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_253  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_319 -> m0_318  [color=blue, key=0, style=bold];
m0_320 -> m0_321  [key=0, style=solid];
m0_322 -> m0_320  [color=blue, key=0, style=bold];
m0_323 -> m0_324  [key=0, style=solid];
m0_325 -> m0_323  [color=blue, key=0, style=bold];
m0_336 -> m0_337  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_144  [key=2, style=dotted];
m0_338 -> m0_336  [color=blue, key=0, style=bold];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_144  [key=2, style=dotted];
m0_348 -> m0_346  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_11  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_82  [color=blue, key=0, style=bold];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_148  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_122  [color=blue, key=0, style=bold];
m0_104 -> m0_110  [key=0, style=solid];
m0_104 -> m0_112  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_104 -> m0_99  [color=darkorchid, key=3, label="Parameter variable RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage> other", style=bold];
m0_104 -> m0_92  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_105  [key=2, style=dotted];
m0_112 -> m0_114  [key=2, style=dotted];
m0_111 -> m0_113  [key=0, style=solid];
m0_113 -> m0_104  [color=blue, key=0, style=bold];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_136  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_138  [key=0, style=solid];
m0_135 -> m0_71  [key=2, style=dotted];
m0_135 -> m0_139  [key=2, style=dotted];
m0_135 -> m0_51  [key=2, style=dotted];
m0_135 -> m0_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_71  [key=2, style=dotted];
m0_137 -> m0_139  [key=2, style=dotted];
m0_137 -> m0_140  [key=2, style=dotted];
m0_137 -> m0_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_138 -> m0_131  [color=blue, key=0, style=bold];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_276  [color=darkseagreen4, key=1, label="System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>", style=dashed];
m0_273 -> m0_278  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_273 -> m0_279  [color=darkseagreen4, key=1, label="System.Action<System.Collections.Generic.IEnumerable<TMessage>>", style=dashed];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_276  [color=darkseagreen4, key=1, label=ok, style=dashed];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_281  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_282  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_278  [key=0, style=solid];
m0_277 -> m0_280  [key=0, style=solid];
m0_280 -> m0_273  [color=blue, key=0, style=bold];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_220  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TResult, TMessage> SelectMany", style=bold];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_220  [key=2, style=dotted];
m0_311 -> m0_309  [color=blue, key=0, style=bold];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_188  [color=blue, key=0, style=bold];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_250  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TResult, TMessage> Map", style=bold];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_250  [key=2, style=dotted];
m0_292 -> m0_290  [color=blue, key=0, style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_20  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_20  [key=2, style=dotted];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_185 -> m0_186  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_151  [key=2, style=dotted];
m0_187 -> m0_185  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m0_0 -> m0_0  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl", style=bold];
m0_0 -> m0_10  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl", style=bold];
m0_0 -> m0_40  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_7  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=0, style=solid];
m0_7 -> m0_0  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_73  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_69 -> m0_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_40 -> m0_67  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<int, TSource>> Index", style=bold];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_148  [key=2, style=dotted];
m0_165 -> m0_94  [key=2, style=dotted];
m0_166 -> m0_164  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_250  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<TSuccess>, TMessage> Collect", style=bold];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_259  [key=2, style=dotted];
m0_257 -> m0_250  [key=2, style=dotted];
m0_257 -> m0_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_258 -> m0_256  [color=blue, key=0, style=bold];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_148  [key=2, style=dotted];
m0_161 -> m0_94  [key=2, style=dotted];
m0_161 -> m0_163  [key=2, style=dotted];
m0_162 -> m0_160  [color=blue, key=0, style=bold];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_148  [key=2, style=dotted];
m0_177 -> m0_94  [key=2, style=dotted];
m0_177 -> m0_163  [key=2, style=dotted];
m0_178 -> m0_176  [color=blue, key=0, style=bold];
m0_157 -> m0_158  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_151  [key=2, style=dotted];
m0_159 -> m0_157  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_79  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_20  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_20  [key=2, style=dotted];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_102  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_98 -> m0_104  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=other, style=dashed];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_105  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_103 -> m0_98  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_128  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_148  [key=2, style=dotted];
m0_168 -> m0_94  [key=2, style=dotted];
m0_169 -> m0_167  [color=blue, key=0, style=bold];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_220  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TSuccess, TMessage> Flatten", style=bold];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_220  [key=2, style=dotted];
m0_232 -> m0_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_233 -> m0_231  [color=blue, key=0, style=bold];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m0_237 -> m0_240  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m0_237 -> m0_242  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m0_237 -> m0_243  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m0_237 -> m0_244  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m0_237 -> m0_245  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m0_237 -> m0_246  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m0_237 -> m0_247  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_242  [key=0, style=solid];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [color=darkseagreen4, key=1, label=ok1, style=dashed];
m0_240 -> m0_241  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=0, style=solid];
m0_243 -> m0_249  [key=0, style=solid];
m0_243 -> m0_151  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_246  [key=0, style=solid];
m0_245 -> m0_249  [key=0, style=solid];
m0_245 -> m0_151  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_248  [color=darkseagreen4, key=1, label=bad1, style=dashed];
m0_247 -> m0_248  [key=0, style=solid];
m0_241 -> m0_249  [key=0, style=solid];
m0_241 -> m0_148  [key=2, style=dotted];
m0_241 -> m0_94  [key=2, style=dotted];
m0_241 -> m0_41  [key=2, style=dotted];
m0_241 -> m0_216  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_151  [key=2, style=dotted];
m0_248 -> m0_216  [key=2, style=dotted];
m0_249 -> m0_237  [color=blue, key=0, style=bold];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_237  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TSuccess, TMessage> Lift", style=bold];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_176  [key=2, style=dotted];
m0_251 -> m0_237  [key=2, style=dotted];
m0_252 -> m0_250  [color=blue, key=0, style=bold];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_237  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TSuccess1, TMessage1> Lift2", style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_250  [key=2, style=dotted];
m0_254 -> m0_237  [key=2, style=dotted];
m0_255 -> m0_253  [color=blue, key=0, style=bold];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_341  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_339 -> m0_343  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_343  [key=0, style=solid];
m0_341 -> m0_342  [key=0, style=solid];
m0_343 -> m0_344  [key=0, style=solid];
m0_342 -> m0_345  [key=0, style=solid];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_49  [key=2, style=dotted];
m0_344 -> m0_71  [key=2, style=dotted];
m0_344 -> m0_139  [key=2, style=dotted];
m0_344 -> m0_140  [key=2, style=dotted];
m0_344 -> m0_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_345 -> m0_339  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [key=2, style=dotted];
m0_108 -> m0_106  [color=blue, key=0, style=bold];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_198 -> m0_191  [color=darkorchid, key=3, label="method methodReturn TSuccess ReturnOrFail", style=bold];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_203  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_199 -> m0_199  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<TMessage>, TSuccess> raiseExn", style=bold];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_191  [key=2, style=dotted];
m0_201 -> m0_198  [color=blue, key=0, style=bold];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_214  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_208 -> m0_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_208 -> m0_211  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_208 -> m0_191  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<TSuccess, TMessage> MergeMessages", style=bold];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_214  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_209 -> m0_211  [color=darkseagreen4, key=1, label=successFunc, style=dashed];
m0_209 -> m0_209  [color=darkorchid, key=3, label="Local variable System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>> successFunc", style=bold];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_210 -> m0_210  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>> failureFunc", style=bold];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_191  [key=2, style=dotted];
m0_212 -> m0_208  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_20  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_20  [key=2, style=dotted];
m0_54 -> m0_52  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=2, style=dotted];
m0_47 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_51  [key=2, style=dotted];
m0_48 -> m0_45  [color=blue, key=0, style=bold];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_286  [color=darkseagreen4, key=1, label="System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m0_283 -> m0_287  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_283 -> m0_288  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_286  [color=darkseagreen4, key=1, label=ok, style=dashed];
m0_286 -> m0_289  [key=0, style=solid];
m0_286 -> m0_9  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_41  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_287  [key=0, style=solid];
m0_289 -> m0_283  [color=blue, key=0, style=bold];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_76  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_20  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
m0_55 -> m0_257  [color=darkorchid, key=3, label="Parameter variable System.Func<T, T, TResult> folder", style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_20  [key=2, style=dotted];
m0_57 -> m0_55  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=2, style=dotted];
m0_66 -> m0_64  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_20 -> m0_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_20 -> m0_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m0_20 -> m0_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_20 -> m0_30  [color=darkseagreen4, key=1, label="System.Func<T, TResult>", style=dashed];
m0_20 -> m0_32  [color=darkseagreen4, key=1, label="System.Func<T, T, TResult>", style=dashed];
m0_20 -> m0_34  [color=darkseagreen4, key=1, label="System.Func<T, T, T, TResult>", style=dashed];
m0_20 -> m0_36  [color=darkseagreen4, key=1, label="System.Func<T, T, T, T, TResult>", style=dashed];
m0_20 -> m0_52  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
m0_20 -> m0_55  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
m0_20 -> m0_58  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
m0_20 -> m0_61  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
m0_20 -> m0_53  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_20 -> m0_56  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_20 -> m0_59  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_20 -> m0_62  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=elements, style=dashed];
m0_25 -> m0_30  [color=darkseagreen4, key=1, label=elements, style=dashed];
m0_25 -> m0_32  [color=darkseagreen4, key=1, label=elements, style=dashed];
m0_25 -> m0_34  [color=darkseagreen4, key=1, label=elements, style=dashed];
m0_25 -> m0_36  [color=darkseagreen4, key=1, label=elements, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=0, style=solid];
m0_26 -> m0_40  [key=2, style=dotted];
m0_26 -> m0_0  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=0, style=solid];
m0_28 -> m0_33  [key=0, style=solid];
m0_28 -> m0_35  [key=0, style=solid];
m0_28 -> m0_37  [key=0, style=solid];
m0_30 -> m0_38  [key=0, style=solid];
m0_30 -> m0_41  [key=2, style=dotted];
m0_32 -> m0_38  [key=0, style=solid];
m0_32 -> m0_9  [key=2, style=dotted];
m0_34 -> m0_38  [key=0, style=solid];
m0_34 -> m0_42  [key=2, style=dotted];
m0_36 -> m0_38  [key=0, style=solid];
m0_36 -> m0_43  [key=2, style=dotted];
m0_22 -> m0_38  [key=0, style=solid];
m0_22 -> m0_39  [key=2, style=dotted];
m0_24 -> m0_38  [key=0, style=solid];
m0_24 -> m0_39  [key=2, style=dotted];
m0_27 -> m0_26  [key=0, style=solid];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=e, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_44  [key=2, style=dotted];
m0_38 -> m0_20  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [color=crimson, key=0, style=bold];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_10 -> m0_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_10 -> m0_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_10 -> m0_0  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source", style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m0_11 -> m0_17  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m0_11 -> m0_11  [color=darkorchid, key=3, label="Local variable int iterations", style=bold];
m0_16 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_17  [key=0, style=solid];
m0_12 -> m0_16  [color=darkseagreen4, key=1, label=element, style=dashed];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_15 -> m0_9  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_9  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_13  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m0_13 -> m0_17  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m0_19 -> m0_10  [color=blue, key=0, style=bold];
m0_154 -> m0_155  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_151  [key=2, style=dotted];
m0_156 -> m0_154  [color=blue, key=0, style=bold];
m0_349 -> m0_73  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_350 -> m0_95  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_350 -> m0_96  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_350 -> m0_101  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_350 -> m0_102  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_350 -> m0_107  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_350 -> m0_112  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m0_351 -> m0_129  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_351 -> m0_132  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_351 -> m0_134  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_351 -> m0_136  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m0_352 -> m0_149  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>", style=dashed];
m0_353 -> m0_152  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>", style=dashed];
m0_354 -> m0_214  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_354 -> m0_218  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m0_355 -> m0_226  [color=darkseagreen4, key=1, label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", style=dashed];
m0_356 -> m0_321  [color=darkseagreen4, key=1, label="System.Func<TSuccess, TValue, TResult>", style=dashed];
m0_357 -> m0_321  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m0_358 -> m0_324  [color=darkseagreen4, key=1, label=curriedMapper, style=dashed];
m1_12 -> m1_15  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m1_12 -> m1_16  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_15 -> m1_15  [color=green, key=3, label="method methodReturn System.Func<CommandLine.Core.Specification, bool> GuardAgainstOneCharLongName", style=bold];
m1_15 -> m1_17  [color=green, key=0, style=solid];
m1_15 -> m1_19  [color=green, key=2, style=dotted];
m1_15 -> m1_20  [color=green, key=2, style=dotted];
m1_15 -> m1_21  [color=green, key=2, style=dotted];
m1_15 -> m1_22  [color=green, key=2, style=dotted];
m1_15 -> m1_23  [color=green, key=2, style=dotted];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_16 -> m1_17  [color=green, key=0, style=solid];
m1_13 -> m1_16  [color=green, key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [key=2, style=dotted];
m1_17 -> m1_12  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_91  [key=2, style=dotted];
m2_87 -> m2_89  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_116 -> m2_73  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_113 -> m2_82  [key=2, style=dotted];
m2_113 -> m2_116  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_113 -> m2_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_118  [key=2, style=dotted];
m2_115 -> m2_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_115 -> m2_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_77  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_117 -> m2_112  [color=blue, key=0, style=bold];
m2_104 -> m2_105  [key=0, style=solid];
m2_206 -> m2_207  [key=0, style=solid];
m2_208 -> m2_9  [key=2, style=dotted];
m2_208 -> m2_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_208 -> m2_209  [key=0, style=solid];
m2_209 -> m2_11  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_46  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_209  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_207 -> m2_194  [key=2, style=dotted];
m2_210 -> m2_206  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_198 -> m2_199  [key=0, style=solid];
m2_200 -> m2_9  [key=2, style=dotted];
m2_200 -> m2_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_11  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_46  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_199 -> m2_194  [key=2, style=dotted];
m2_202 -> m2_198  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_43 -> m2_9  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_54 -> m2_11  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_46  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_44 -> m2_11  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_46  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_45 -> m2_41  [color=blue, key=0, style=bold];
m2_3 -> m2_19  [key=0, style=solid];
m2_3 -> m2_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_3 -> m2_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m2_3 -> m2_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_29  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_35  [key=2, style=dotted];
m2_19 -> m2_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_19 -> m2_31  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_19 -> m2_15  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_22 -> m2_40  [key=2, style=dotted];
m2_22 -> m2_41  [key=2, style=dotted];
m2_22 -> m2_42  [key=2, style=dotted];
m2_22 -> m2_6  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_45  [key=2, style=dotted];
m2_24 -> m2_33  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_46  [key=2, style=dotted];
m2_26 -> m2_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m2_26 -> m2_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_9  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_47  [key=2, style=dotted];
m2_27 -> m2_48  [key=2, style=dotted];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_27 -> m2_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m2_27 -> m2_33  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m2_27 -> n136  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_49  [key=2, style=dotted];
m2_28 -> m2_48  [key=2, style=dotted];
m2_28 -> m2_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_28 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m2_28 -> m2_33  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m2_28 -> m2_24  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_50  [key=2, style=dotted];
m2_29 -> m2_51  [key=2, style=dotted];
m2_29 -> m2_52  [key=2, style=dotted];
m2_29 -> m2_29  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_29 -> m2_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_77  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_29 -> m2_33  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_36  [key=2, style=dotted];
m2_20 -> m2_37  [key=2, style=dotted];
m2_20 -> m2_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_27  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m2_20 -> m2_28  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m2_23 -> m2_34  [key=0, style=solid];
m2_23 -> m2_43  [key=2, style=dotted];
m2_23 -> m2_44  [key=2, style=dotted];
m2_23 -> m2_21  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_54  [key=2, style=dotted];
m2_31 -> m2_31  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_31 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_33  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_31 -> m2_29  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_38  [key=2, style=dotted];
m2_21 -> m2_39  [key=2, style=dotted];
m2_21 -> m2_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_21 -> m2_26  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_21 -> m2_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_21 -> m2_29  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_57  [key=2, style=dotted];
m2_33 -> m2_58  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_53  [key=2, style=dotted];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_55  [key=2, style=dotted];
m2_32 -> m2_39  [key=2, style=dotted];
m2_32 -> m2_56  [key=2, style=dotted];
m2_32 -> m2_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_34 -> m2_3  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_79 -> m2_9  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_99 -> m2_95  [color=blue, key=0, style=bold];
m2_58 -> m2_56  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_4 -> m2_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_11  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_8 -> m2_4  [color=blue, key=0, style=bold];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_17 -> m2_9  [key=2, style=dotted];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_73  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_72  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_63  [color=blue, key=0, style=bold];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_9  [key=2, style=dotted];
m2_69 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_74  [color=blue, key=0, style=bold];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_73  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_82  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_9  [key=2, style=dotted];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_9  [key=2, style=dotted];
m2_106 -> m2_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=2, style=dotted];
m2_60 -> m2_63  [key=2, style=dotted];
m2_60 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_9  [key=2, style=dotted];
m2_61 -> m2_59  [color=blue, key=0, style=bold];
m2_61 -> m2_11  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_46  [key=2, style=dotted];
m2_67 -> m2_65  [color=blue, key=0, style=bold];
m2_67 -> m2_68  [key=0, style=solid];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_71 -> m2_67  [color=blue, key=0, style=bold];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_75 -> m2_72  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_78 -> m2_76  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_82  [key=2, style=dotted];
m2_78 -> m2_80  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=2, style=dotted];
m2_81 -> m2_77  [color=blue, key=0, style=bold];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=2, style=dotted];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_86 -> m2_84  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_91  [key=2, style=dotted];
m2_89 -> m2_83  [key=2, style=dotted];
m2_89 -> m2_73  [key=2, style=dotted];
m2_90 -> m2_88  [color=blue, key=0, style=bold];
m2_90 -> m2_86  [color=blue, key=0, style=bold];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_87  [key=2, style=dotted];
m2_93 -> m2_91  [key=2, style=dotted];
m2_94 -> m2_92  [color=blue, key=0, style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_91  [key=2, style=dotted];
m2_96 -> m2_98  [key=2, style=dotted];
m2_96 -> m2_99  [key=2, style=dotted];
m2_96 -> m2_100  [key=2, style=dotted];
m2_97 -> m2_95  [color=blue, key=0, style=bold];
m2_97 -> m2_9  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_103  [key=2, style=dotted];
m2_101 -> m2_104  [key=2, style=dotted];
m2_101 -> m2_105  [key=2, style=dotted];
m2_102 -> m2_100  [color=blue, key=0, style=bold];
m2_102 -> m2_103  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_73  [key=2, style=dotted];
m2_108 -> m2_106  [color=blue, key=0, style=bold];
m2_108 -> m2_104  [color=blue, key=0, style=bold];
m2_57 -> m2_6  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_187 -> m2_6  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_196 -> m2_6  [key=2, style=dotted];
m2_196 -> m2_197  [key=0, style=solid];
m2_204 -> m2_6  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_212 -> m2_6  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_188 -> m2_186  [color=blue, key=0, style=bold];
m2_195 -> m2_196  [key=0, style=solid];
m2_197 -> m2_195  [color=blue, key=0, style=bold];
m2_203 -> m2_204  [key=0, style=solid];
m2_205 -> m2_203  [color=blue, key=0, style=bold];
m2_211 -> m2_212  [key=0, style=solid];
m2_213 -> m2_211  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_109 -> m2_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_109 -> m2_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_109 -> m2_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_141 -> m2_142  [key=0, style=solid];
m2_151 -> m2_152  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_40 -> m2_38  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_32  [key=2, style=dotted];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=2, style=dotted];
m2_103 -> m2_101  [color=blue, key=0, style=bold];
m2_111 -> m2_109  [color=blue, key=0, style=bold];
m2_111 -> m2_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_111 -> m2_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_110 -> m2_100  [key=2, style=dotted];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_110 -> m2_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_143 -> m2_141  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=2, style=dotted];
m2_153 -> m2_151  [color=blue, key=0, style=bold];
m2_152 -> m2_150  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_161 -> m2_159  [color=blue, key=0, style=bold];
m2_160 -> m2_150  [key=2, style=dotted];
m2_160 -> m2_161  [key=0, style=solid];
m2_170 -> m2_168  [color=blue, key=0, style=bold];
m2_169 -> m2_150  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_178 -> m2_176  [color=blue, key=0, style=bold];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_179  [key=2, style=dotted];
m2_120 -> m2_82  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_121 -> m2_119  [color=blue, key=0, style=bold];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_122 -> m2_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_124 -> m2_122  [color=blue, key=0, style=bold];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=2, style=dotted];
m2_127 -> m2_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_128 -> m2_126  [color=blue, key=0, style=bold];
m2_132 -> m2_130  [color=blue, key=0, style=bold];
m2_62 -> m2_59  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> n136  [key=2, style=dotted];
m2_53 -> m2_9  [key=2, style=dotted];
m2_53 -> m2_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_55 -> m2_51  [color=blue, key=0, style=bold];
m2_180 -> m2_181  [key=0, style=solid];
m2_182 -> m2_9  [key=2, style=dotted];
m2_182 -> m2_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_11  [key=2, style=dotted];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_46  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_183  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_181 -> m2_185  [key=2, style=dotted];
m2_181 -> m2_140  [key=2, style=dotted];
m2_184 -> m2_180  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> m2_6  [color=green, key=2, style=dotted];
m2_1 -> m2_3  [color=green, key=1, label=fakeOptions, style=dashed];
m2_1 -> m2_13  [color=green, key=1, label=fakeOptions, style=dashed];
m2_1 -> m2_4  [color=red, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_171 -> m2_172  [key=0, style=solid];
m2_173 -> m2_9  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_174 -> m2_11  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_46  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_174  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_172 -> m2_167  [key=2, style=dotted];
m2_172 -> m2_140  [key=2, style=dotted];
m2_175 -> m2_171  [color=blue, key=0, style=bold];
m2_162 -> m2_163  [key=0, style=solid];
m2_164 -> m2_9  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_165 -> m2_11  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_46  [key=2, style=dotted];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_165  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_163 -> m2_167  [key=2, style=dotted];
m2_163 -> m2_140  [key=2, style=dotted];
m2_166 -> m2_162  [color=blue, key=0, style=bold];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_73  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_100  [key=2, style=dotted];
m2_105 -> m2_107  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_72  [key=2, style=dotted];
m2_68 -> m2_70  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_35 -> m2_9  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> n136  [key=2, style=dotted];
m2_37 -> m2_33  [color=blue, key=0, style=bold];
m2_189 -> m2_190  [key=0, style=solid];
m2_191 -> m2_9  [key=2, style=dotted];
m2_191 -> m2_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_191 -> m2_192  [key=0, style=solid];
m2_192 -> m2_11  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_46  [key=2, style=dotted];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_192  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_190 -> m2_194  [key=2, style=dotted];
m2_193 -> m2_189  [color=blue, key=0, style=bold];
m2_154 -> m2_155  [key=0, style=solid];
m2_156 -> m2_9  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_150  [key=2, style=dotted];
m2_155 -> m2_157  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_73  [key=2, style=dotted];
m2_158 -> m2_154  [color=blue, key=0, style=bold];
m2_145 -> m2_146  [key=0, style=solid];
m2_147 -> m2_9  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_150  [key=2, style=dotted];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_73  [key=2, style=dotted];
m2_149 -> m2_145  [color=blue, key=0, style=bold];
m2_134 -> m2_135  [key=0, style=solid];
m2_136 -> m2_9  [key=2, style=dotted];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_11  [key=2, style=dotted];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_46  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_137  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m2_135 -> m2_139  [key=2, style=dotted];
m2_135 -> m2_140  [key=2, style=dotted];
m2_138 -> m2_134  [color=blue, key=0, style=bold];
m2_214 -> m2_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m2_215 -> m2_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_215 -> m2_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
}
