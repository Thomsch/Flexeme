digraph  {
m0_0 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="13-13"];
m0_1 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var writer = new StringWriter()", span="16-16"];
m0_2 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="17-17"];
m0_4 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var text = writer.ToString()", span="23-23"];
m0_3 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="20-20"];
m0_5 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="24-24"];
m0_6 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="13-13"];
m0_100 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="182-182"];
m0_101 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var expectedError = new HelpRequestedError()", span="185-185"];
m0_102 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="186-186"];
m0_105 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="193-193"];
m0_103 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="189-189"];
m0_104 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="192-192"];
m0_106 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="182-182"];
m0_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m0_79 [cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33"];
m0_11 [cluster="Unk.True", file="ParserTests.cs", label="Entry Unk.True", span=""];
m0_118 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="198-198"];
m0_119 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="201-201"];
m0_120 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="202-202"];
m0_122 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="206-206"];
m0_121 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="205-205"];
m0_123 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="209-209"];
m0_124 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="198-198"];
m0_46 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="79-79"];
m0_47 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="82-88"];
m0_48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="89-89"];
m0_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="96-96"];
m0_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="92-93"];
m0_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="79-79"];
m0_110 [cluster="Unk.ContainSingle", file="ParserTests.cs", label="Entry Unk.ContainSingle", span=""];
m0_64 [cluster="Unk.>", file="ParserTests.cs", label="Entry Unk.>", span=""];
m0_22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m0_33 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m0_83 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="145-145"];
m0_84 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="148-152"];
m0_85 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser()", span="153-153"];
m0_88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="161-161"];
m0_86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="156-157"];
m0_87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="160-160"];
m0_89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="145-145"];
m0_56 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="101-101"];
m0_57 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="104-108"];
m0_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="109-109"];
m0_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="118-118"];
m0_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="112-114"];
m0_60 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Assert.IsType<AddOptions>(result.Value)", span="117-117"];
m0_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="101-101"];
m0_7 [cluster="System.IO.StringWriter.StringWriter()", file="ParserTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m0_71 [cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m0_125 [cluster="Unk.BeGreaterThan", file="ParserTests.cs", label="Entry Unk.BeGreaterThan", span=""];
m0_129 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="214-214"];
m0_130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var expectedError = new VersionRequestedError()", span="217-217"];
m0_131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="218-218"];
m0_134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="225-225"];
m0_132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="221-221"];
m0_133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="224-224"];
m0_135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="214-214"];
m0_136 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParserTests.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421"];
m0_44 [cluster="CommandLine.Parser.Parser()", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser()", span="25-25"];
m0_140 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="225-225"];
m0_13 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="17-17"];
m0_12 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="17-17"];
m0_14 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="17-17"];
m0_24 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="33-33"];
m0_23 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="33-33"];
m0_25 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="33-33"];
m0_35 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="49-49"];
m0_34 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="49-49"];
m0_36 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="49-49"];
m0_54 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="89-89"];
m0_53 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="89-89"];
m0_55 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="89-89"];
m0_66 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="109-109"];
m0_68 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="118-118"];
m0_65 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="109-109"];
m0_67 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="109-109"];
m0_69 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="118-118"];
m0_70 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="118-118"];
m0_80 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="140-140"];
m0_81 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="140-140"];
m0_82 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="140-140"];
m0_90 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="161-161"];
m0_91 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="161-161"];
m0_92 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="161-161"];
m0_115 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="193-193"];
m0_111 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="192-192"];
m0_114 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="193-193"];
m0_112 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="192-192"];
m0_113 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="192-192"];
m0_116 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="193-193"];
m0_127 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="202-202"];
m0_126 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="202-202"];
m0_128 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="202-202"];
m0_141 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="225-225"];
m0_137 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="224-224"];
m0_138 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="224-224"];
m0_139 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="224-224"];
m0_142 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="225-225"];
m0_26 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45"];
m0_27 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var writer = new StringWriter()", span="48-48"];
m0_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="49-49"];
m0_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var text = writer.ToString()", span="55-55"];
m0_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="52-52"];
m0_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="56-56"];
m0_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45"];
m0_108 [cluster="Unk.Should", file="ParserTests.cs", label="Entry Unk.Should", span=""];
m0_117 [cluster="Unk.Equals", file="ParserTests.cs", label="Entry Unk.Equals", span=""];
m0_10 [cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m0_109 [cluster="Unk.HaveCount", file="ParserTests.cs", label="Entry Unk.HaveCount", span=""];
m0_99 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m0_63 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m0_37 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61"];
m0_38 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="64-67"];
m0_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var sut = new Parser()", span="68-68"];
m0_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="74-74"];
m0_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="71-71"];
m0_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61"];
m0_93 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="166-166"];
m0_94 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="169-170"];
m0_95 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var sut = new Parser()", span="171-171"];
m0_97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="177-177"];
m0_96 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="174-174"];
m0_98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="166-166"];
m0_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="29-29"];
m0_16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var writer = new StringWriter()", span="32-32"];
m0_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="33-33"];
m0_19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var text = writer.ToString()", span="39-39"];
m0_18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="36-36"];
m0_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="40-40"];
m0_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="29-29"];
m0_9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m0_72 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="123-123"];
m0_73 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="126-130"];
m0_74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var sut = new Parser()", span="131-131"];
m0_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="140-140"];
m0_75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="134-136"];
m0_76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="139-139"];
m0_78 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="123-123"];
m0_43 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m0_52 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m0_107 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m0_45 [cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m0_143 [file="ParserTests.cs", label=writer, span=""];
m0_144 [file="ParserTests.cs", label=writer, span=""];
m0_145 [file="ParserTests.cs", label=writer, span=""];
m0_146 [file="ParserTests.cs", label=expectedError, span=""];
m0_147 [file="ParserTests.cs", label=help, span=""];
m0_148 [file="ParserTests.cs", label=expectedError, span=""];
m1_10 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="PreprocessorGuards.cs", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m1_4 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="PreprocessorGuards.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13"];
m1_5 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", color=green, community=0, file="PreprocessorGuards.cs", label="var optionType = typeof(FSharpOption<>)", prediction=0, span="15-15"];
m1_6 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", color=green, community=0, file="PreprocessorGuards.cs", label="var typedType = optionType.MakeGenericType(type)", prediction=1, span="16-16"];
m1_7 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="PreprocessorGuards.cs", label="return typedType.InvokeMember(\r\n                ''Some'',\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { value });", span="18-23"];
m1_8 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="PreprocessorGuards.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13"];
m1_11 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="PreprocessorGuards.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26"];
m1_12 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", color=green, community=0, file="PreprocessorGuards.cs", label="var optionType = typeof(FSharpOption<>)", prediction=2, span="28-28"];
m1_13 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", color=green, community=0, file="PreprocessorGuards.cs", label="var typedType = optionType.MakeGenericType(type)", prediction=3, span="29-29"];
m1_14 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", color=green, community=0, file="PreprocessorGuards.cs", label="return typedType.InvokeMember(\r\n                ''None'',\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", prediction=4, span="31-36"];
m1_15 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="PreprocessorGuards.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26"];
m1_9 [cluster="System.Type.MakeGenericType(params System.Type[])", file="PreprocessorGuards.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m1_0 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="PreprocessorGuards.cs", label="Entry CommandLine.Text.UsageAttribute.UsageAttribute()", span="10-10"];
m1_1 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="PreprocessorGuards.cs", label="Exit CommandLine.Text.UsageAttribute.UsageAttribute()", span="10-10"];
m0_101 -> m0_105  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m0_101 -> m0_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m0_105 -> m0_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_103 -> m0_105  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_104 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_47 -> m0_50  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_84 -> m0_88  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_57 -> m0_61  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_61 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_61  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_130 -> m0_134  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m0_130 -> m0_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m0_134 -> m0_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_133 -> m0_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_73 -> m0_77  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m0_77 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_75 -> m0_77  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_146 -> m0_115  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m0_148 -> m0_141  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=object, style=dashed];
}
