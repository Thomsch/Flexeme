digraph  {
m0_107 [cluster="string.Split(params char[])", file="Program.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=green, community=0, file="Program.cs", label="22: specifications.Any(spec => guard.Item1(spec))", span="46-46"];
m0_80 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="91-91"];
m0_92 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var curr = ictx.Current", span="93-93"];
m0_93 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var prev = ictx.Previous", span="94-94"];
m0_94 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var next = ictx.Next", span="95-95"];
m0_96 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="curr != null && curr.IsName() && optionSequenceWithSeparatorLookup(curr.Text).MatchJust(out separator)", span="98-98"];
m0_101 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="prev != null && prev.IsName() && optionSequenceWithSeparatorLookup(prev.Text).IsJust()", span="109-109"];
m0_99 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return Enumerable.Empty<Token>()\r\n                            .Concat(new[] { curr })\r\n                            .Concat(parts.Select(str => Token.Value(str)));", span="103-105"];
m0_100 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return Enumerable.Empty<Token>().Concat(new[] { curr });", span="107-107"];
m0_103 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return Enumerable.Empty<Token>().Concat(new[] { curr });", span="113-113"];
m0_95 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="string separator", span="97-97"];
m0_97 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="next != null", span="100-100"];
m0_98 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var parts = next.Text.Split(Convert.ToChar(separator))", span="102-102"];
m0_102 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return Enumerable.Empty<Token>();", span="111-111"];
m0_104 [cluster="CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Exit CommandLine.Core.Tokenizer.Mapper(CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="91-91"];
m0_156 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Program.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m0_27 [cluster="lambda expression", file="Program.cs", label="!unkTokens.Contains(x)", span="30-30"];
m0_28 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="3: Exit lambda expression", span="30-30"];
m0_29 [cluster="Unk.Contains", color=green, community=0, file="Program.cs", label="17: Entry Unk.Contains", span=""];
m0_30 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="17: Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m0_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="3: arguments == null", span="37-37"];
m0_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="18: arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39"];
m0_34 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="10: var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41"];
m0_35 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="14: var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42"];
m0_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="3: return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43"];
m0_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="17: return tokenizer(arguments);", span="45-45"];
m0_32 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="17: throw new ArgumentNullException(''arguments'');", span="37-37"];
m0_38 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=green, community=0, file="Program.cs", label="17: Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m0_39 [cluster="Unk.Any", file="Program.cs", label="Entry Unk.Any", span=""];
m0_91 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="Program.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152"];
m0_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="Program.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m0_136 [cluster="CommandLine.Core.Token.Name(string)", file="Program.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m0_157 [cluster="System.Action<T>.Invoke(T)", file="Program.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_22 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="18-18"];
m0_90 [cluster="CommandLine.Core.Token.IsName()", file="Program.cs", label="Entry CommandLine.Core.Token.IsName()", span="72-72"];
m0_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="Program.cs", label="5: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39"];
m0_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=green, community=0, file="Program.cs", label="12: guardsLookup", span="44-44"];
m0_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Program.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m0_74 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>.AnyOptionSequenceWithSeparator(System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.Token>.AnyOptionSequenceWithSeparator(System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="86-86"];
m0_13 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="166-166"];
m0_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=green, community=0, file="Program.cs", label="22: throw new ApplicationException(guard.Item2);", span="48-48"];
m0_21 [cluster="Unk.Create", file="Program.cs", label="Entry Unk.Create", span=""];
m0_108 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Program.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_137 [cluster="string.Substring(int, int)", file="Program.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_15 [cluster="Unk.ToList", file="Program.cs", label="Entry Unk.ToList", span=""];
m0_19 [cluster="UnknownOptionError.cstr", color=green, community=0, file="Program.cs", label="6: Entry UnknownOptionError.cstr", span=""];
m0_20 [cluster="Unk.Concat", file="Program.cs", label="Entry Unk.Concat", span=""];
m0_138 [cluster="string.String(char, int)", file="Program.cs", label="Entry string.String(char, int)", span="0-0"];
m0_72 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_110 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="105-105"];
m0_23 [cluster="lambda expression", color=red, community=0, file="Program.cs", label="22: errors.Add(e)", span="18-18"];
m0_26 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="30-30"];
m0_24 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="22: guard.Item1(spec)", span="46-46"];
m0_46 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="39-39"];
m0_50 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="41-41"];
m0_53 [cluster="lambda expression", file="Program.cs", label=guard, span=""];
m0_56 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="42-42"];
m0_60 [cluster="lambda expression", file="Program.cs", label="tokens.Concat(values)", span="43-43"];
m0_59 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="43-43"];
m0_47 [cluster="lambda expression", file="Program.cs", label="arg.EqualsOrdinal(''--'')", span="39-39"];
m0_48 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="39-39"];
m0_51 [cluster="lambda expression", file="Program.cs", label="!arg.EqualsOrdinal(''--'')", span="41-41"];
m0_52 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="41-41"];
m0_54 [cluster="lambda expression", file="Program.cs", label="!arg.EqualsOrdinal(''--'')", span="42-42"];
m0_55 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="42-42"];
m0_57 [cluster="lambda expression", file="Program.cs", label="Token.Value(t)", span="42-42"];
m0_58 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="42-42"];
m0_61 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="43-43"];
m0_78 [cluster="lambda expression", file="Program.cs", label="Mapper(ictx, optionSequenceWithSeparatorLookup)", span="75-75"];
m0_77 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="74-75"];
m0_81 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="77-77"];
m0_79 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="74-75"];
m0_82 [cluster="lambda expression", file="Program.cs", label=x, span="77-77"];
m0_83 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="77-77"];
m0_88 [cluster="lambda expression", file="Program.cs", label="t.IsName() && predicate(t.Text).IsJust()", span="88-88"];
m0_87 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="88-88"];
m0_89 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="88-88"];
m0_111 [cluster="lambda expression", file="Program.cs", label="Token.Value(str)", span="105-105"];
m0_112 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="105-105"];
m0_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Program.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", span="28-28"];
m0_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Program.cs", label="12: return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30"];
m0_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Program.cs", label="12: Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m0_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", color=green, community=0, file="Program.cs", label="3: Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_10 [cluster="System.Collections.Generic.List<T>.List()", file="Program.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_43 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="Program.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m0_140 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="value == null", span="170-170"];
m0_146 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="yield return Token.Name(text);", span="181-181"];
m0_147 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="yield break;", span="182-182"];
m0_150 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="yield break;", span="187-187"];
m0_152 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="yield return Token.Name(parts[0]);", span="190-190"];
m0_153 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="yield return Token.Value(parts[1]);", span="191-191"];
m0_142 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="175-175"];
m0_143 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="var text = value.Substring(2)", span="177-177"];
m0_149 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="onError(new BadFormatTokenError(value))", span="186-186"];
m0_141 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="throw new ArgumentNullException(''value'');", span="172-172"];
m0_144 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="var equalIndex = text.IndexOf('=')", span="178-178"];
m0_151 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="var parts = text.Split('=')", span="189-189"];
m0_145 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="equalIndex <= 0", span="179-179"];
m0_148 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="equalIndex == 1", span="184-184"];
m0_154 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Program.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="166-166"];
m0_75 [cluster="System.Collections.Generic.IEnumerable<T>.WithContext<T>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<T>.WithContext<T>()", span="92-92"];
m0_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Program.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m0_49 [cluster="string.EqualsOrdinal(string)", file="Program.cs", label="Entry string.EqualsOrdinal(string)", span="34-34"];
m0_40 [cluster="System.Type.ToDescriptor()", file="Program.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m0_155 [cluster="string.IndexOf(char)", file="Program.cs", label="Entry string.IndexOf(char)", span="0-0"];
m0_44 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", color=green, community=0, file="Program.cs", label="1: return specification.Min == -1;", span="78-78"];
m0_45 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="Program.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m0_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="Program.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m0_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=green, community=0, file="Program.cs", label="12: specification == null", span="13-13"];
m0_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=red, community=0, file="Program.cs", label="5: var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", span="20-26"];
m0_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=green, community=0, file="Program.cs", label="12: throw new ArgumentNullException(''specification'');", span="13-13"];
m0_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=green, community=0, file="Program.cs", label="22: return specification.Tag == SpecificationType.Option;", span="15-15"];
m0_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=red, community=0, file="Program.cs", label="12: Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m0_105 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="Program.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m0_25 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Program.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_84 [cluster="CommandLine.Core.Tokenizer.AnyOptionSequenceWithSeparator(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.AnyOptionSequenceWithSeparator(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="86-86"];
m0_85 [cluster="CommandLine.Core.Tokenizer.AnyOptionSequenceWithSeparator(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return tokens.Any(t => t.IsName() && predicate(t.Text).IsJust());", span="88-88"];
m0_86 [cluster="CommandLine.Core.Tokenizer.AnyOptionSequenceWithSeparator(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Exit CommandLine.Core.Tokenizer.AnyOptionSequenceWithSeparator(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="86-86"];
m0_14 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="116-116"];
m0_135 [cluster="char.IsDigit(char)", file="Program.cs", label="Entry char.IsDigit(char)", span="0-0"];
m0_62 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="48-48"];
m0_63 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="tokens == null", span="52-52"];
m0_65 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="tokens.Errors.Any() ||\r\n                tokens.Value.Count() == 1 ||\r\n                !tokens.Value.AnyOptionSequenceWithSeparator(optionSequenceWithSeparatorLookup)", span="54-56"];
m0_66 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return tokens;", span="58-58"];
m0_67 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var withContext = tokens.Value.WithContext()", span="73-73"];
m0_68 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var expandedTokens = withContext.Select(ictx =>\r\n                Mapper(ictx, optionSequenceWithSeparatorLookup))", span="74-75"];
m0_70 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="return StatePair.Create(flattened, tokens.Errors);", span="81-81"];
m0_64 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="throw new ArgumentNullException(''tokens'');", span="52-52"];
m0_69 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="var flattened = expandedTokens.SelectMany(x => x)", span="77-77"];
m0_71 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", file="Program.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<string>>)", span="48-48"];
m0_73 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m0_76 [cluster="Unk.SelectMany", file="Program.cs", label="Entry Unk.SelectMany", span=""];
m0_106 [cluster="System.Convert.ToChar(string)", file="Program.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m0_113 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="value == null", span="120-120"];
m0_118 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield return Token.Value(value);", span="131-131"];
m0_119 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield break;", span="132-132"];
m0_121 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield return Token.Name(text);", span="137-137"];
m0_122 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield break;", span="138-138"];
m0_124 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield return Token.Name(first);", span="142-142"];
m0_130 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield return Token.Name(n);", span="152-152"];
m0_132 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="161-161"];
m0_115 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="125-125"];
m0_116 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="var text = value.Substring(1)", span="127-127"];
m0_120 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="value.Length == 2", span="135-135"];
m0_128 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="!seen.Contains(c) && nameLookup(n)", span="149-149"];
m0_114 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="throw new ArgumentNullException(''value'');", span="122-122"];
m0_117 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="char.IsDigit(text[0])", span="129-129"];
m0_123 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="var first = text.Substring(0, 1)", span="141-141"];
m0_126 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="text.Substring(1)", span="146-146"];
m0_131 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="seen.Count() < text.Length", span="159-159"];
m0_125 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="var seen = new List<char> { first[0] }", span="144-144"];
m0_129 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="seen.Add(c)", span="151-151"];
m0_127 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="var n = new string(c, 1)", span="148-148"];
m0_133 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Program.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="116-116"];
m0_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_139 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Program.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m0_134 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m0_158 [file="Program.cs", label=errors, span=""];
m0_159 [file="Program.cs", label=unkTokens, span=""];
m0_160 [file="Program.cs", label=values, span=""];
m0_161 [file="Program.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", span=""];
m0_162 [file="Program.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", span=""];
m0_17 -> m0_16  [color=green, key=0, style=solid];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_39  [color=green, key=2, style=dotted];
m0_17 -> m0_22  [color=green, key=1, label="lambda expression", style=dashed];
m0_80 -> m0_92  [key=0, style=solid];
m0_80 -> m0_93  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>", style=dashed];
m0_80 -> m0_94  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token>", style=dashed];
m0_80 -> m0_96  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_80 -> m0_101  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_80 -> m0_68  [color=darkorchid, key=3, label="Parameter variable CommandLine.Infrastructure.ItemWithContext<CommandLine.Core.Token> ictx", style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_96  [color=darkseagreen4, key=1, label=curr, style=dashed];
m0_92 -> m0_99  [color=darkseagreen4, key=1, label=curr, style=dashed];
m0_92 -> m0_100  [color=darkseagreen4, key=1, label=curr, style=dashed];
m0_92 -> m0_103  [color=darkseagreen4, key=1, label=curr, style=dashed];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_101  [color=darkseagreen4, key=1, label=prev, style=dashed];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_94 -> m0_98  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_101  [key=0, style=solid];
m0_96 -> m0_90  [key=2, style=dotted];
m0_96 -> m0_41  [key=2, style=dotted];
m0_96 -> m0_105  [key=2, style=dotted];
m0_96 -> m0_98  [color=darkseagreen4, key=1, label=separator, style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=0, style=solid];
m0_101 -> m0_90  [key=2, style=dotted];
m0_101 -> m0_41  [key=2, style=dotted];
m0_101 -> m0_91  [key=2, style=dotted];
m0_99 -> m0_104  [key=0, style=solid];
m0_99 -> m0_108  [key=2, style=dotted];
m0_99 -> m0_109  [key=2, style=dotted];
m0_99 -> m0_44  [key=2, style=dotted];
m0_99 -> m0_20  [key=2, style=dotted];
m0_99 -> m0_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_100 -> m0_104  [key=0, style=solid];
m0_100 -> m0_108  [key=2, style=dotted];
m0_100 -> m0_109  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_108  [key=2, style=dotted];
m0_103 -> m0_109  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_100  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_106  [key=2, style=dotted];
m0_98 -> m0_107  [key=2, style=dotted];
m0_102 -> m0_104  [key=0, style=solid];
m0_102 -> m0_108  [key=2, style=dotted];
m0_104 -> m0_80  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_30  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_27 -> m0_34  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_27 -> m0_35  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_30  [color=green, key=0, style=solid];
m0_28 -> m0_26  [color=blue, key=0, style=bold];
m0_29 -> m0_39  [color=green, key=0, style=solid];
m0_29 -> m0_9  [color=green, key=2, style=dotted];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_33  [color=green, key=0, style=solid];
m0_30 -> m0_40  [color=green, key=2, style=dotted];
m0_30 -> m0_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_30 -> m0_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_30 -> m0_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_37  [key=0, style=solid];
m0_33 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m0_34 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_41  [key=2, style=dotted];
m0_34 -> m0_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_37  [color=green, key=1, label=max, style=dashed];
m0_35 -> m0_42  [key=2, style=dotted];
m0_35 -> m0_43  [key=2, style=dotted];
m0_35 -> m0_44  [key=2, style=dotted];
m0_35 -> m0_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_36 -> m0_37  [color=green, key=0, style=solid];
m0_36 -> m0_38  [color=green, key=0, style=solid];
m0_36 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_39  [color=green, key=0, style=solid];
m0_37 -> m0_41  [color=green, key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_32 -> m0_39  [color=green, key=0, style=solid];
m0_32 -> m0_41  [color=green, key=2, style=dotted];
m0_32 -> m0_38  [key=0, style=solid];
m0_32 -> m0_9  [key=2, style=dotted];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_42  [color=green, key=2, style=dotted];
m0_38 -> m0_30  [color=blue, key=0, style=bold];
m0_39 -> m0_27  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_22 -> m0_23  [color=red, key=0, style=solid];
m0_22 -> m0_24  [color=green, key=0, style=solid];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_14  [color=green, key=2, style=dotted];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_19  [color=green, key=0, style=solid];
m0_16 -> m0_24  [color=green, key=1, label=guard, style=dashed];
m0_16 -> m0_18  [color=green, key=1, label=guard, style=dashed];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_13 -> m0_140  [key=0, style=solid];
m0_13 -> m0_146  [color=crimson, key=0, style=bold];
m0_13 -> m0_147  [color=crimson, key=0, style=bold];
m0_13 -> m0_150  [color=crimson, key=0, style=bold];
m0_13 -> m0_152  [color=crimson, key=0, style=bold];
m0_13 -> m0_153  [color=crimson, key=0, style=bold];
m0_13 -> m0_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_13 -> m0_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_13 -> m0_149  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_18 -> m0_20  [color=green, key=0, style=solid];
m0_18 -> m0_22  [color=green, key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_17  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_15 -> m0_19  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_20 -> m0_15  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_23 -> m0_24  [color=red, key=0, style=solid];
m0_23 -> m0_25  [color=red, key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_24 -> m0_24  [color=green, key=0, style=solid];
m0_24 -> m0_41  [color=green, key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_24  [color=green, key=1, label=guard, style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_20  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=2, style=dotted];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_49  [key=2, style=dotted];
m0_52 -> m0_50  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_49  [key=2, style=dotted];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_12  [key=2, style=dotted];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_41  [key=2, style=dotted];
m0_88 -> m0_91  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_89 -> m0_87  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_12  [key=2, style=dotted];
m0_112 -> m0_110  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_9  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_6 -> m0_16  [key=2, style=dotted];
m0_6 -> m0_17  [key=2, style=dotted];
m0_6 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_6 -> m0_27  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=0, style=solid];
m0_7 -> m0_18  [key=2, style=dotted];
m0_7 -> m0_19  [key=2, style=dotted];
m0_7 -> m0_20  [key=2, style=dotted];
m0_7 -> m0_21  [key=2, style=dotted];
m0_7 -> m0_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_8 -> m0_10  [color=green, key=0, style=solid];
m0_8 -> m0_9  [color=green, key=2, style=dotted];
m0_8 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_10 -> m0_6  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_136  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_136  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_12  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_154  [key=0, style=solid];
m0_142 -> m0_11  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_134  [key=2, style=dotted];
m0_143 -> m0_146  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_143 -> m0_151  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_156  [key=2, style=dotted];
m0_149 -> m0_157  [key=2, style=dotted];
m0_141 -> m0_154  [key=0, style=solid];
m0_141 -> m0_9  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_155  [key=2, style=dotted];
m0_144 -> m0_148  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_107  [key=2, style=dotted];
m0_151 -> m0_153  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_151  [key=0, style=solid];
m0_154 -> m0_13  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [color=green, key=0, style=solid];
m0_45 -> m0_43  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_5  [color=red, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m0_0 -> m0_3  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=red, key=0, style=solid];
m0_5 -> m0_11  [color=red, key=2, style=dotted];
m0_5 -> m0_12  [color=red, key=2, style=dotted];
m0_5 -> m0_13  [color=red, key=2, style=dotted];
m0_5 -> m0_14  [color=red, key=2, style=dotted];
m0_5 -> m0_15  [color=red, key=2, style=dotted];
m0_5 -> m0_5  [color=red, key=1, label=arg, style=dashed];
m0_5 -> m0_7  [color=red, key=1, label=tokens, style=dashed];
m0_2 -> m0_8  [color=red, key=0, style=solid];
m0_2 -> m0_9  [color=green, key=2, style=dotted];
m0_2 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_10  [color=red, key=2, style=dotted];
m0_3 -> m0_23  [color=red, key=1, label=errors, style=dashed];
m0_3 -> m0_7  [color=red, key=1, label=errors, style=dashed];
m0_4 -> m0_5  [color=red, key=0, style=solid];
m0_4 -> m0_23  [color=red, key=1, label="CommandLine.Error", style=dashed];
m0_4 -> m0_4  [color=red, key=3, label="Local variable System.Action<CommandLine.Error> onError", style=bold];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_88  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_39  [key=2, style=dotted];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_14 -> m0_113  [key=0, style=solid];
m0_14 -> m0_118  [color=crimson, key=0, style=bold];
m0_14 -> m0_119  [color=crimson, key=0, style=bold];
m0_14 -> m0_121  [color=crimson, key=0, style=bold];
m0_14 -> m0_122  [color=crimson, key=0, style=bold];
m0_14 -> m0_124  [color=crimson, key=0, style=bold];
m0_14 -> m0_130  [color=crimson, key=0, style=bold];
m0_14 -> m0_132  [color=crimson, key=0, style=bold];
m0_14 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_14 -> m0_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_14 -> m0_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_14 -> m0_128  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_65  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_62 -> m0_66  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_62 -> m0_67  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_62 -> m0_68  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_62 -> m0_78  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_62 -> m0_70  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=0, style=solid];
m0_65 -> m0_72  [key=2, style=dotted];
m0_65 -> m0_73  [key=2, style=dotted];
m0_65 -> m0_74  [key=2, style=dotted];
m0_66 -> m0_71  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_75  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_44  [key=2, style=dotted];
m0_68 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_21  [key=2, style=dotted];
m0_64 -> m0_71  [key=0, style=solid];
m0_64 -> m0_9  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_76  [key=2, style=dotted];
m0_69 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_71 -> m0_62  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_115  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_12  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_136  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_136  [key=2, style=dotted];
m0_130 -> m0_126  [key=0, style=solid];
m0_130 -> m0_136  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_73  [key=2, style=dotted];
m0_132 -> m0_134  [key=2, style=dotted];
m0_132 -> m0_12  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_133  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_134  [key=2, style=dotted];
m0_116 -> m0_121  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_116 -> m0_123  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_116 -> m0_126  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_116 -> m0_131  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_116 -> m0_132  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_131  [key=0, style=solid];
m0_128 -> m0_139  [key=2, style=dotted];
m0_128 -> m0_41  [key=2, style=dotted];
m0_114 -> m0_133  [key=0, style=solid];
m0_114 -> m0_9  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=0, style=solid];
m0_117 -> m0_135  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_137  [key=2, style=dotted];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=first, style=dashed];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_131  [key=0, style=solid];
m0_126 -> m0_134  [key=2, style=dotted];
m0_126 -> m0_128  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_126 -> m0_129  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [key=0, style=solid];
m0_131 -> m0_73  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_10  [key=2, style=dotted];
m0_125 -> m0_128  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_125 -> m0_129  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_125 -> m0_131  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_125 -> m0_132  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_25  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_138  [key=2, style=dotted];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label=n, style=dashed];
m0_133 -> m0_14  [color=blue, key=0, style=bold];
m0_158 -> m0_23  [color=red, key=1, label=errors, style=dashed];
m0_159 -> m0_27  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m0_160 -> m0_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_161 -> m0_78  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
m0_162 -> m0_88  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<string>>", style=dashed];
}
