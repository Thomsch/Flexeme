digraph  {
m0_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="InstanceChooser.cs"];
m0_133 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="InstanceChooser.cs"];
m0_14 [label="Entry Unk.nameLookup", span="", cluster="Unk.nameLookup", file="InstanceChooser.cs"];
m0_23 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_24 [label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="37-37", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_25 [label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="39-39", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_26 [label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="40-40", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_28 [label="return tokenizer(arguments);", span="43-43", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", color=red, community=0, file="InstanceChooser.cs"];
m0_27 [label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="41-41", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_29 [label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceChooser.cs"];
m0_79 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceChooser.cs"];
m0_131 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="InstanceChooser.cs"];
m0_50 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs"];
m0_51 [label="var tokens = tokenizerResult.SucceededWith()", span="50-50", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=0, file="InstanceChooser.cs"];
m0_52 [label="var replaces = tokens.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="52-55", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=0, file="InstanceChooser.cs"];
m0_55 [label="return Result.Succeed(flattened, tokenizerResult.Messages());", span="64-64", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs"];
m0_53 [label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="57-60", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=0, file="InstanceChooser.cs"];
m0_54 [label="var flattened = exploded.SelectMany(x => x)", span="62-62", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=0, file="InstanceChooser.cs"];
m0_56 [label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs"];
m0_8 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="InstanceChooser.cs"];
m0_58 [label="Entry Unk.SkipWhile", span="", cluster="Unk.SkipWhile", file="InstanceChooser.cs"];
m0_111 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="InstanceChooser.cs"];
m0_132 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="InstanceChooser.cs"];
m0_30 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="InstanceChooser.cs"];
m0_9 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="InstanceChooser.cs"];
m0_13 [label="Entry Unk.IsName", span="", cluster="Unk.IsName", file="InstanceChooser.cs"];
m0_32 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceChooser.cs"];
m0_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="InstanceChooser.cs"];
m0_60 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Messages<TSuccess, TMessage>()", span="10-10", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Messages<TSuccess, TMessage>()", file="InstanceChooser.cs"];
m0_69 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="InstanceChooser.cs"];
m0_78 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceChooser.cs"];
m0_112 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="InstanceChooser.cs"];
m0_113 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="InstanceChooser.cs"];
m0_77 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="InstanceChooser.cs"];
m0_64 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="InstanceChooser.cs"];
m0_83 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_20 [label="!unkTokens.Contains(x)", span="30-30", cluster="lambda expression", file="InstanceChooser.cs"];
m0_19 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="InstanceChooser.cs"];
m0_21 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="InstanceChooser.cs"];
m0_37 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="InstanceChooser.cs"];
m0_41 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="InstanceChooser.cs"];
m0_44 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="InstanceChooser.cs"];
m0_48 [label="tokens.Concat(values)", span="41-41", cluster="lambda expression", file="InstanceChooser.cs"];
m0_47 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="InstanceChooser.cs"];
m0_38 [label="arg.EqualsOrdinal(''--'')", span="37-37", cluster="lambda expression", file="InstanceChooser.cs"];
m0_39 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="InstanceChooser.cs"];
m0_42 [label="!arg.EqualsOrdinal(''--'')", span="39-39", cluster="lambda expression", file="InstanceChooser.cs"];
m0_43 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="InstanceChooser.cs"];
m0_45 [label="!arg.EqualsOrdinal(''--'')", span="40-40", cluster="lambda expression", file="InstanceChooser.cs"];
m0_46 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="InstanceChooser.cs"];
m0_49 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="InstanceChooser.cs"];
m0_62 [label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="53-55", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_61 [label="Entry lambda expression", span="52-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_70 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_74 [label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="58-60", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_73 [label="Entry lambda expression", span="57-60", cluster="lambda expression", file="InstanceChooser.cs"];
m0_87 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="InstanceChooser.cs"];
m0_67 [label="Tuple.Create(i + 1, sep)", span="54-54", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_63 [label="Exit lambda expression", span="52-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_66 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="InstanceChooser.cs"];
m0_68 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="InstanceChooser.cs"];
m0_71 [label="x.Item1 < 0", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_72 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_81 [label="x.Item1 == i", span="58-58", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_84 [label="t.Text.Split(r.Item2).Select(Token.Value)", span="59-59", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_75 [label="Exit lambda expression", span="57-60", cluster="lambda expression", file="InstanceChooser.cs"];
m0_80 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="InstanceChooser.cs"];
m0_82 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="InstanceChooser.cs"];
m0_85 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_88 [label=x, span="62-62", cluster="lambda expression", color=red, community=0, file="InstanceChooser.cs"];
m0_89 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="InstanceChooser.cs"];
m0_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs"];
m0_10 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_117 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_121 [label="yield return Token.Name(text);", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_122 [label="yield break;", span="123-123", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_125 [label="yield break;", span="128-128", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_127 [label="yield return Token.Name(parts[0]);", span="131-131", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_128 [label="yield return Token.Value(parts[1]);", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_118 [label="var text = value.Substring(2)", span="118-118", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_124 [label="onError(new BadFormatTokenError(value))", span="127-127", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_119 [label="var equalIndex = text.IndexOf('=')", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_126 [label="var parts = text.Split('=')", span="130-130", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_120 [label="equalIndex <= 0", span="120-120", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_123 [label="equalIndex == 1", span="125-125", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_129 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="InstanceChooser.cs"];
m0_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="InstanceChooser.cs"];
m0_17 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="InstanceChooser.cs"];
m0_36 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="InstanceChooser.cs"];
m0_40 [label="Entry string.EqualsOrdinal(string)", span="35-35", cluster="string.EqualsOrdinal(string)", file="InstanceChooser.cs"];
m0_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="InstanceChooser.cs"];
m0_130 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="InstanceChooser.cs"];
m0_35 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InstanceChooser.cs"];
m0_12 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="InstanceChooser.cs"];
m0_0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_1 [label="var errors = new List<Error>()", span="17-17", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_3 [label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).Memorize()", span="20-26", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_4 [label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="28-28", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_2 [label="Action<Error> onError = errors.Add", span="18-18", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_5 [label="return Result.Succeed(tokens.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_6 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_65 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="InstanceChooser.cs"];
m0_115 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="InstanceChooser.cs"];
m0_57 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="InstanceChooser.cs"];
m0_110 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="InstanceChooser.cs"];
m0_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="InstanceChooser.cs"];
m0_16 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="InstanceChooser.cs"];
m0_116 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="InstanceChooser.cs"];
m0_59 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="InstanceChooser.cs"];
m0_76 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="InstanceChooser.cs"];
m0_86 [label="Entry Unk.Split", span="", cluster="Unk.Split", file="InstanceChooser.cs"];
m0_11 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_90 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_93 [label="yield return Token.Value(value);", span="77-77", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_94 [label="yield break;", span="78-78", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_96 [label="yield return Token.Name(text);", span="83-83", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_97 [label="yield break;", span="84-84", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_99 [label="yield return Token.Name(first);", span="88-88", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_105 [label="yield return Token.Name(n);", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_107 [label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_91 [label="var text = value.Substring(1)", span="73-73", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_95 [label="value.Length == 2", span="81-81", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_103 [label="!seen.Contains(c) && nameLookup(n)", span="95-95", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_92 [label="char.IsDigit(text[0])", span="75-75", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_98 [label="var first = text.Substring(0, 1)", span="87-87", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_101 [label="text.Substring(1)", span="92-92", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_106 [label="seen.Count() < text.Length", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_100 [label="var seen = new List<char> { first[0] }", span="90-90", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_104 [label="seen.Add(c)", span="97-97", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_102 [label="var n = new string(c, 1)", span="94-94", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_108 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="InstanceChooser.cs"];
m0_18 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="InstanceChooser.cs"];
m0_114 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="InstanceChooser.cs"];
m0_109 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="InstanceChooser.cs"];
m0_134 [label=unkTokens, span="", file="InstanceChooser.cs"];
m0_135 [label=values, span="", file="InstanceChooser.cs"];
m0_136 [label="System.Func<string, CSharpx.Maybe<char>>", span="", file="InstanceChooser.cs"];
m0_137 [label=int, span="", file="InstanceChooser.cs"];
m0_138 [label=replaces, span="", file="InstanceChooser.cs"];
m0_139 [label=int, span="", file="InstanceChooser.cs"];
m0_140 [label="CommandLine.Core.Token", span="", file="InstanceChooser.cs"];
m1_88 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Parser.cs"];
m1_132 [label="Entry CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)", span="312-312", cluster="CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)", file="Parser.cs"];
m1_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_9 [label="configuration == null", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_12 [label="configuration(settings)", span="42-42", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_10 [label="throw new ArgumentNullException(''configuration'');", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_11 [label="settings = new ParserSettings()", span="41-41", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_13 [label="settings.Consumed = true", span="43-43", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_14 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m1_37 [label="Entry CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m1_118 [label="return ignoreUnknownArguments\r\n                ? Enumerable.Empty<ErrorType>().Concat(ErrorType.UnknownOptionError)\r\n                : Enumerable.Empty<ErrorType>();", span="200-202", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m1_119 [label="Exit CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m1_87 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Parser.cs"];
m1_93 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Parser.cs"];
m1_20 [label="Entry CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m1_21 [label="Dispose(false)", span="57-57", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m1_22 [label="Exit CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m1_86 [label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span="", cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", file="Parser.cs"];
m1_38 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Parser.cs"];
m1_89 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Parser.cs"];
m1_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Parser.cs"];
m1_59 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_60 [label="args == null", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_62 [label="types == null", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_64 [label="types.Length == 0", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_66 [label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="150-158", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_61 [label="throw new ArgumentNullException(''args'');", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_63 [label="throw new ArgumentNullException(''types'');", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_65 [label="throw new ArgumentOutOfRangeException(''types'');", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_67 [label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m1_3 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m1_17 [label="this.settings = settings", span="48-48", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m1_18 [label="this.settings.Consumed = true", span="49-49", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m1_19 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m1_68 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs"];
m1_43 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_44 [label="factory == null", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_48 [label="args == null", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_50 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="121-129", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_45 [label="throw new ArgumentNullException(''factory'');", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_46 [label="!typeof(T).IsMutable()", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_47 [label="throw new ArgumentException(''factory'');", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_49 [label="throw new ArgumentNullException(''args'');", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_51 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_113 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m1_52 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs"];
m1_120 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Parser.cs"];
m1_4 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs"];
m1_97 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m1_5 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m1_6 [label="settings = new ParserSettings { Consumed = true }", span="28-28", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m1_7 [label="Exit CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m1_31 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="Parser.cs"];
m1_116 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Parser.cs"];
m1_117 [label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m1_122 [label="parserResult.WithNotParsed(\r\n                errors =>\r\n                    Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((_, writer) => writer.Write(HelpText.AutoBuild(parserResult)))\r\n                )", span="207-211", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m1_123 [label="return parserResult;", span="213-213", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m1_124 [label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m1_133 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="Parser.cs"];
m1_0 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="Parser.cs"];
m1_1 [label="new Parser(new ParserSettings { HelpWriter = Console.Error })", span="21-21", cluster="lambda expression", file="Parser.cs"];
m1_2 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Parser.cs"];
m1_35 [label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="94-100", cluster="lambda expression", file="Parser.cs"];
m1_34 [label="Entry lambda expression", span="94-100", cluster="lambda expression", file="Parser.cs"];
m1_36 [label="Exit lambda expression", span="94-100", cluster="lambda expression", file="Parser.cs"];
m1_39 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Parser.cs"];
m1_40 [label="Tokenize(arguments, optionSpecs, settings)", span="96-96", cluster="lambda expression", file="Parser.cs"];
m1_41 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Parser.cs"];
m1_54 [label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="122-128", cluster="lambda expression", file="Parser.cs"];
m1_53 [label="Entry lambda expression", span="122-128", cluster="lambda expression", file="Parser.cs"];
m1_55 [label="Exit lambda expression", span="122-128", cluster="lambda expression", file="Parser.cs"];
m1_56 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="Parser.cs"];
m1_57 [label="Tokenize(arguments, optionSpecs, settings)", span="124-124", cluster="lambda expression", file="Parser.cs"];
m1_58 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="Parser.cs"];
m1_70 [label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="151-157", cluster="lambda expression", file="Parser.cs"];
m1_69 [label="Entry lambda expression", span="151-157", cluster="lambda expression", file="Parser.cs"];
m1_71 [label="Exit lambda expression", span="151-157", cluster="lambda expression", file="Parser.cs"];
m1_73 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="Parser.cs"];
m1_74 [label="Tokenize(arguments, optionSpecs, settings)", span="152-152", cluster="lambda expression", file="Parser.cs"];
m1_75 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="Parser.cs"];
m1_91 [label="Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound)", span="177-178", cluster="lambda expression", color=red, community=1, file="Parser.cs"];
m1_95 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound", span="178-178", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_102 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="185-185", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_105 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="185-185", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_108 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="186-186", cluster="lambda expression", color=red, community=1, file="Parser.cs"];
m1_111 [label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="187-187", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_99 [label=toks, span="179-179", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_101 [label="Entry lambda expression", span="184-185", cluster="lambda expression", file="Parser.cs"];
m1_107 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="Parser.cs"];
m1_110 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="Parser.cs"];
m1_90 [label="Entry lambda expression", span="177-178", cluster="lambda expression", file="Parser.cs"];
m1_92 [label="Exit lambda expression", span="177-178", cluster="lambda expression", file="Parser.cs"];
m1_94 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="Parser.cs"];
m1_96 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="Parser.cs"];
m1_98 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="Parser.cs"];
m1_100 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="Parser.cs"];
m1_103 [label="Exit lambda expression", span="184-185", cluster="lambda expression", file="Parser.cs"];
m1_104 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="Parser.cs"];
m1_106 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="Parser.cs"];
m1_109 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="Parser.cs"];
m1_112 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="Parser.cs"];
m1_127 [label="Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((_, writer) => writer.Write(HelpText.AutoBuild(parserResult)))", span="209-210", cluster="lambda expression", file="Parser.cs"];
m1_134 [label="writer.Write(HelpText.AutoBuild(parserResult))", span="210-210", cluster="lambda expression", file="Parser.cs"];
m1_126 [label="Entry lambda expression", span="208-210", cluster="lambda expression", file="Parser.cs"];
m1_128 [label="Exit lambda expression", span="208-210", cluster="lambda expression", file="Parser.cs"];
m1_135 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="Parser.cs"];
m1_130 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="Parser.cs"];
m1_121 [label="Entry System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", span="94-94", cluster="System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", file="Parser.cs"];
m1_129 [label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331", cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="Parser.cs"];
m1_136 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs"];
m1_80 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="Parser.cs"];
m1_32 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="Parser.cs"];
m1_125 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="Parser.cs"];
m1_72 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Parser.cs"];
m1_145 [label="Entry CommandLine.ParserSettings.Dispose()", span="119-119", cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs"];
m1_30 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()", file="Parser.cs"];
m1_33 [label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m1_114 [label="return DisplayHelp(\r\n                parseFunc(),\r\n                settings.HelpWriter);", span="193-195", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m1_115 [label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m1_76 [label="Entry CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m1_77 [label="Dispose(true)", span="166-166", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m1_78 [label="GC.SuppressFinalize(this)", span="168-168", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m1_79 [label="Exit CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m1_24 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_25 [label="args == null", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_28 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="93-101", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_26 [label="throw new ArgumentNullException(''args'');", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_27 [label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_29 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m1_42 [label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m1_81 [label="var normalize = settings.IgnoreUnknownArguments\r\n                ? toks => Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound)\r\n                : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks)", span="176-179", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=red, community=1, file="Parser.cs"];
m1_82 [label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="181-186", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=red, community=1, file="Parser.cs"];
m1_83 [label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="187-187", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=red, community=0, file="Parser.cs"];
m1_84 [label="return explodedTokens;", span="188-188", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=red, community=0, file="Parser.cs"];
m1_85 [label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m1_23 [label="Entry CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_138 [label=disposed, span="218-218", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_140 [label=disposing, span="220-220", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_139 [label="return;", span="218-218", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_141 [label="settings != null", span="222-222", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_142 [label="settings.Dispose()", span="223-223", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_143 [label="disposed = true", span="225-225", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_144 [label="Exit CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m1_131 [label="Entry CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", span="163-163", cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="Parser.cs"];
m1_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m1_137 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="Parser.cs"];
m1_146 [label="CommandLine.Parser", span="", file="Parser.cs"];
m1_147 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m1_148 [label=factory, span="", file="Parser.cs"];
m1_149 [label="System.Func<T>", span="", file="Parser.cs"];
m1_150 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m1_151 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m1_152 [label="params System.Type[]", span="", file="Parser.cs"];
m1_153 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="Parser.cs"];
m1_154 [label="CommandLine.ParserSettings", span="", file="Parser.cs"];
m1_155 [label=normalize, span="", file="Parser.cs"];
m1_156 [label="CommandLine.ParserResult<T>", span="", file="Parser.cs"];
m1_157 [label="System.IO.TextWriter", span="", file="Parser.cs"];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_23 -> m0_28  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=0, style=solid, color=red];
m0_24 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_25 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_25 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_26 -> m0_34  [key=2, style=dotted];
m0_26 -> m0_35  [key=2, style=dotted];
m0_26 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=values];
m0_28 -> m0_29  [key=0, style=solid, color=red];
m0_28 -> m0_32  [key=2, style=dotted, color=red];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_36  [key=2, style=dotted];
m0_27 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_23  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid, color=red];
m0_50 -> m0_52  [key=1, style=dashed, color=red, label="System.Func<string, CSharpx.Maybe<char>>"];
m0_50 -> m0_62  [key=1, style=dashed, color=red, label="System.Func<string, CSharpx.Maybe<char>>"];
m0_50 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>"];
m0_51 -> m0_52  [key=0, style=solid, color=red];
m0_51 -> m0_57  [key=2, style=dotted, color=red];
m0_51 -> m0_53  [key=1, style=dashed, color=red, label=tokens];
m0_52 -> m0_53  [key=0, style=solid, color=red];
m0_52 -> m0_35  [key=2, style=dotted, color=red];
m0_52 -> m0_58  [key=2, style=dotted, color=red];
m0_52 -> m0_61  [key=1, style=dashed, color=red, label="lambda expression"];
m0_52 -> m0_70  [key=1, style=dashed, color=red, label="lambda expression"];
m0_52 -> m0_74  [key=1, style=dashed, color=red, label=replaces];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_60  [key=2, style=dotted];
m0_55 -> m0_18  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid, color=red];
m0_53 -> m0_35  [key=2, style=dotted, color=red];
m0_53 -> m0_73  [key=1, style=dashed, color=red, label="lambda expression"];
m0_54 -> m0_55  [key=0, style=solid, color=red];
m0_54 -> m0_59  [key=2, style=dotted, color=red];
m0_54 -> m0_87  [key=1, style=dashed, color=red, label="lambda expression"];
m0_56 -> m0_50  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid, color=red];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> m0_19  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_17  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_40  [key=2, style=dotted];
m0_43 -> m0_41  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_40  [key=2, style=dotted];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_49 -> m0_47  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid, color=red];
m0_62 -> m0_32  [key=2, style=dotted, color=red];
m0_62 -> m0_64  [key=2, style=dotted, color=red];
m0_62 -> m0_65  [key=2, style=dotted, color=red];
m0_62 -> m0_66  [key=1, style=dashed, color=red, label="lambda expression"];
m0_61 -> m0_62  [key=0, style=solid, color=red];
m0_61 -> m0_67  [key=1, style=dashed, color=red, label=int];
m0_70 -> m0_71  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid, color=red];
m0_74 -> m0_76  [key=2, style=dotted, color=red];
m0_74 -> m0_77  [key=2, style=dotted, color=red];
m0_74 -> m0_78  [key=2, style=dotted, color=red];
m0_74 -> m0_79  [key=2, style=dotted, color=red];
m0_74 -> m0_65  [key=2, style=dotted, color=red];
m0_74 -> m0_80  [key=1, style=dashed, color=red, label="lambda expression"];
m0_74 -> m0_83  [key=1, style=dashed, color=red, label="lambda expression"];
m0_73 -> m0_74  [key=0, style=solid, color=red];
m0_73 -> m0_81  [key=1, style=dashed, color=red, label=int];
m0_73 -> m0_84  [key=1, style=dashed, color=red, label="CommandLine.Core.Token"];
m0_87 -> m0_88  [key=0, style=solid, color=red];
m0_67 -> m0_68  [key=0, style=solid, color=red];
m0_67 -> m0_69  [key=2, style=dotted, color=red];
m0_63 -> m0_61  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid, color=red];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_70  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid, color=red];
m0_84 -> m0_85  [key=0, style=solid, color=red];
m0_84 -> m0_86  [key=2, style=dotted, color=red];
m0_84 -> m0_35  [key=2, style=dotted, color=red];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid, color=red];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid, color=red];
m0_89 -> m0_87  [key=0, style=bold, color=blue];
m0_10 -> m0_117  [key=0, style=solid];
m0_10 -> m0_121  [key=0, style=bold, color=crimson];
m0_10 -> m0_122  [key=0, style=bold, color=crimson];
m0_10 -> m0_125  [key=0, style=bold, color=crimson];
m0_10 -> m0_127  [key=0, style=bold, color=crimson];
m0_10 -> m0_128  [key=0, style=bold, color=crimson];
m0_10 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_10 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_129  [key=0, style=solid];
m0_117 -> m0_8  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_111  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_111  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_9  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_109  [key=2, style=dotted];
m0_118 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_118 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_131  [key=2, style=dotted];
m0_124 -> m0_132  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_130  [key=2, style=dotted];
m0_119 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_133  [key=2, style=dotted];
m0_126 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=parts];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_126  [key=0, style=solid];
m0_129 -> m0_10  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=errors];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=arg];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_4 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m0_2 -> m0_3  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_16  [key=2, style=dotted];
m0_5 -> m0_17  [key=2, style=dotted];
m0_5 -> m0_18  [key=2, style=dotted];
m0_5 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_11 -> m0_90  [key=0, style=solid];
m0_11 -> m0_93  [key=0, style=bold, color=crimson];
m0_11 -> m0_94  [key=0, style=bold, color=crimson];
m0_11 -> m0_96  [key=0, style=bold, color=crimson];
m0_11 -> m0_97  [key=0, style=bold, color=crimson];
m0_11 -> m0_99  [key=0, style=bold, color=crimson];
m0_11 -> m0_105  [key=0, style=bold, color=crimson];
m0_11 -> m0_107  [key=0, style=bold, color=crimson];
m0_11 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_11 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_11 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_108  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_9  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_111  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_111  [key=2, style=dotted];
m0_105 -> m0_101  [key=0, style=solid];
m0_105 -> m0_111  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_116  [key=2, style=dotted];
m0_107 -> m0_109  [key=2, style=dotted];
m0_107 -> m0_9  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_109  [key=2, style=dotted];
m0_91 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_91 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_91 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_91 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_91 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=text];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_98  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_106  [key=0, style=solid];
m0_103 -> m0_114  [key=2, style=dotted];
m0_103 -> m0_32  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=0, style=solid];
m0_92 -> m0_110  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_112  [key=2, style=dotted];
m0_98 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=first];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_106  [key=0, style=solid];
m0_101 -> m0_109  [key=2, style=dotted];
m0_101 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_101 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_108  [key=0, style=solid];
m0_106 -> m0_116  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_7  [key=2, style=dotted];
m0_100 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=seen];
m0_100 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=seen];
m0_100 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=seen];
m0_100 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=seen];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_115  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_113  [key=2, style=dotted];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=n];
m0_108 -> m0_11  [key=0, style=bold, color=blue];
m0_134 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m0_135 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=values];
m0_136 -> m0_62  [key=1, style=dashed, color=red, label="System.Func<string, CSharpx.Maybe<char>>"];
m0_137 -> m0_67  [key=1, style=dashed, color=red, label=int];
m0_138 -> m0_74  [key=1, style=dashed, color=red, label=replaces];
m0_139 -> m0_81  [key=1, style=dashed, color=red, label=int];
m0_140 -> m0_84  [key=1, style=dashed, color=red, label="CommandLine.Core.Token"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_10 -> m1_14  [key=0, style=solid];
m1_10 -> m1_15  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_4  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_8  [key=0, style=bold, color=blue];
m1_37 -> m1_118  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=2, style=dotted];
m1_118 -> m1_121  [key=2, style=dotted];
m1_119 -> m1_37  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_59 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_59 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_59 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_59 -> m1_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<object> ParseArguments"];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_33  [key=2, style=dotted];
m1_66 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_61 -> m1_67  [key=0, style=solid];
m1_61 -> m1_15  [key=2, style=dotted];
m1_63 -> m1_67  [key=0, style=solid];
m1_63 -> m1_15  [key=2, style=dotted];
m1_65 -> m1_67  [key=0, style=solid];
m1_65 -> m1_68  [key=2, style=dotted];
m1_67 -> m1_59  [key=0, style=bold, color=blue];
m1_3 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_3  [key=0, style=bold, color=blue];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_43 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m1_43 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m1_43 -> m1_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_33  [key=2, style=dotted];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_51  [key=0, style=solid];
m1_45 -> m1_15  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_30  [key=2, style=dotted];
m1_47 -> m1_51  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_49 -> m1_51  [key=0, style=solid];
m1_49 -> m1_15  [key=2, style=dotted];
m1_51 -> m1_43  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
m1_117 -> m1_122  [key=0, style=solid];
m1_117 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_117 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_117 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_117 -> m1_117  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp"];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_125  [key=2, style=dotted];
m1_122 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_124  [key=0, style=solid];
m1_124 -> m1_117  [key=0, style=bold, color=blue];
m1_133 -> m1_134  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_38  [key=2, style=dotted];
m1_35 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_34 -> m1_35  [key=0, style=solid];
m1_36 -> m1_34  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=2, style=dotted];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_31  [key=2, style=dotted];
m1_54 -> m1_37  [key=2, style=dotted];
m1_54 -> m1_38  [key=2, style=dotted];
m1_54 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_53 -> m1_54  [key=0, style=solid];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_42  [key=2, style=dotted];
m1_58 -> m1_56  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_37  [key=2, style=dotted];
m1_70 -> m1_72  [key=2, style=dotted];
m1_70 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_69 -> m1_70  [key=0, style=solid];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_42  [key=2, style=dotted];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_91 -> m1_92  [key=0, style=solid, color=red];
m1_91 -> m1_93  [key=2, style=dotted, color=red];
m1_91 -> m1_94  [key=1, style=dashed, color=red, label="lambda expression"];
m1_95 -> m1_96  [key=0, style=solid, color=red];
m1_95 -> m1_97  [key=2, style=dotted, color=red];
m1_102 -> m1_103  [key=0, style=solid, color=red];
m1_102 -> m1_88  [key=2, style=dotted, color=red];
m1_102 -> m1_104  [key=1, style=dashed, color=red, label="lambda expression"];
m1_105 -> m1_106  [key=0, style=solid, color=red];
m1_105 -> m1_97  [key=2, style=dotted, color=red];
m1_108 -> m1_109  [key=0, style=solid, color=red];
m1_108 -> m1_97  [key=2, style=dotted, color=red];
m1_111 -> m1_112  [key=0, style=solid, color=red];
m1_111 -> m1_113  [key=2, style=dotted, color=red];
m1_99 -> m1_100  [key=0, style=solid, color=red];
m1_101 -> m1_102  [key=0, style=solid, color=red];
m1_107 -> m1_108  [key=0, style=solid, color=red];
m1_110 -> m1_111  [key=0, style=solid, color=red];
m1_90 -> m1_91  [key=0, style=solid, color=red];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_94 -> m1_95  [key=0, style=solid, color=red];
m1_96 -> m1_94  [key=0, style=bold, color=blue];
m1_98 -> m1_99  [key=0, style=solid, color=red];
m1_100 -> m1_98  [key=0, style=bold, color=blue];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_104 -> m1_105  [key=0, style=solid, color=red];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_112 -> m1_110  [key=0, style=bold, color=blue];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [key=2, style=dotted];
m1_127 -> m1_130  [key=2, style=dotted];
m1_127 -> m1_131  [key=2, style=dotted];
m1_127 -> m1_132  [key=2, style=dotted];
m1_127 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=2, style=dotted];
m1_134 -> m1_137  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_128 -> m1_126  [key=0, style=bold, color=blue];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_33 -> m1_114  [key=0, style=solid];
m1_33 -> m1_28  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m1_33 -> m1_50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m1_33 -> m1_66  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m1_33 -> m1_117  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult"];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [key=2, style=dotted];
m1_114 -> m1_117  [key=2, style=dotted];
m1_115 -> m1_33  [key=0, style=bold, color=blue];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_23  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=2, style=dotted];
m1_79 -> m1_76  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_24 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_24 -> m1_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_33  [key=2, style=dotted];
m1_28 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_29  [key=0, style=solid];
m1_26 -> m1_15  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_31  [key=2, style=dotted];
m1_27 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m1_29 -> m1_24  [key=0, style=bold, color=blue];
m1_42 -> m1_81  [key=0, style=solid, color=red];
m1_42 -> m1_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_95  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_82  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m1_42 -> m1_102  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_105  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_108  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_83  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_42 -> m1_111  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_81 -> m1_82  [key=0, style=solid, color=red];
m1_81 -> m1_86  [key=2, style=dotted, color=red];
m1_81 -> m1_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m1_81 -> m1_99  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m1_81 -> m1_102  [key=1, style=dashed, color=red, label=normalize];
m1_82 -> m1_83  [key=0, style=solid, color=red];
m1_82 -> m1_87  [key=2, style=dotted, color=red];
m1_82 -> m1_88  [key=2, style=dotted, color=red];
m1_82 -> m1_101  [key=1, style=dashed, color=red, label="lambda expression"];
m1_82 -> m1_107  [key=1, style=dashed, color=red, label="lambda expression"];
m1_83 -> m1_84  [key=0, style=solid, color=red];
m1_83 -> m1_89  [key=2, style=dotted, color=red];
m1_83 -> m1_110  [key=1, style=dashed, color=red, label="lambda expression"];
m1_84 -> m1_85  [key=0, style=solid, color=red];
m1_85 -> m1_42  [key=0, style=bold, color=blue];
m1_23 -> m1_138  [key=0, style=solid];
m1_23 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_23 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m1_23 -> m1_77  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_144  [key=0, style=solid];
m1_139 -> m1_144  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_145  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_23  [key=0, style=bold, color=blue];
m1_146 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_146 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m1_147 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_148 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m1_149 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m1_150 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_151 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_152 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_153 -> m1_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_153 -> m1_95  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_153 -> m1_102  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_153 -> m1_105  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_153 -> m1_108  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_153 -> m1_111  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_154 -> m1_91  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_154 -> m1_95  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_154 -> m1_102  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_154 -> m1_105  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_154 -> m1_108  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_154 -> m1_111  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m1_155 -> m1_102  [key=1, style=dashed, color=red, label=normalize];
m1_156 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_156 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_157 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
}
