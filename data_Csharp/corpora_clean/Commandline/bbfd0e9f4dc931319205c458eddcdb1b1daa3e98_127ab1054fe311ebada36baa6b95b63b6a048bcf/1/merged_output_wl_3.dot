digraph  {
m1_103 [cluster="Unk.FromJustOrFail", file="LongOptionParser.cs", label="Entry Unk.FromJustOrFail", span=""];
m1_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20"];
m1_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", color=red, community=0, file="LongOptionParser.cs", label="1: var errors = new List<Error>()", span="25-25"];
m1_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token)\r\n                            .Memorize()", span="28-35"];
m1_10 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="var normalized = normalize(tokens)", span="37-37"];
m1_11 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="var unkTokens = (from t in normalized where t.IsName() && nameLookup(t.Text) == NameLookupResult.NoOptionFound select t).Memorize()", span="39-39"];
m1_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="Action<Error> onError = errors.Add", span="26-26"];
m1_12 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="return Result.Succeed(normalized.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="41-41"];
m1_13 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20"];
m1_201 [cluster="string.Split(params char[])", file="LongOptionParser.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m1_32 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="48-48"];
m1_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="50-50"];
m1_34 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="51-51"];
m1_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="return tokenizer(arguments);", span="54-54"];
m1_35 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="52-52"];
m1_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m1_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_97 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m1_98 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="var indexes =\r\n                from i in\r\n                    tokens.Select(\r\n                        (t, i) =>\r\n                        {\r\n                            var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe();\r\n                            return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.MapMaybeOrDefault(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();\r\n                        }).Where(i => i.IsJust())\r\n                select i.FromJustOrFail()", span="81-92"];
m1_99 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="var toExclude =\r\n                from t in\r\n                    tokens.Select((t, i) => indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>())\r\n                        .Where(t => t.IsJust())\r\n                select t.FromJustOrFail()", span="94-98"];
m1_100 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="var normalized = tokens.Except(toExclude)", span="100-100"];
m1_101 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="return normalized;", span="102-102"];
m1_102 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m1_118 [cluster="Unk.nameLookup", file="LongOptionParser.cs", label="Entry Unk.nameLookup", span=""];
m1_18 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="132-132"];
m1_162 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="136-136"];
m1_165 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield return Token.Value(value);", span="142-142"];
m1_166 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield break;", span="143-143"];
m1_168 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield return Token.Name(text);", span="148-148"];
m1_169 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield break;", span="149-149"];
m1_176 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield return Token.Name(n);", span="160-160"];
m1_179 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="yield return Token.Value(text.Substring(i));", span="167-167"];
m1_163 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="var text = value.Substring(1)", span="138-138"];
m1_167 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="value.Length == 2", span="146-146"];
m1_173 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="var r = nameLookup(n)", span="156-156"];
m1_164 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="char.IsDigit(text[0])", span="140-140"];
m1_171 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label=text, span="153-153"];
m1_178 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="i < text.Length", span="165-165"];
m1_170 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="var i = 0", span="152-152"];
m1_174 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="i > 0 && r == NameLookupResult.NoOptionFound", span="158-158"];
m1_175 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="i++", span="159-159"];
m1_172 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="var n = new string(c, 1)", span="155-155"];
m1_177 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="r == NameLookupResult.OtherOptionFound", span="162-162"];
m1_180 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, CommandLine.Core.NameLookupResult>)", span="132-132"];
m1_138 [cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", file="LongOptionParser.cs", label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span=""];
m1_199 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="LongOptionParser.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="221-221"];
m1_57 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m1_58 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="var tokens = tokenizerResult.SucceededWith()", span="61-61"];
m1_59 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="var replaces = tokens.Select((t, i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .MapMaybeOrDefault(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="63-66"];
m1_62 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="75-75"];
m1_60 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .MapMaybeOrDefault(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t })))", span="68-71"];
m1_61 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="var flattened = exploded.SelectMany(x => x)", span="73-73"];
m1_63 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m1_15 [cluster="string.StartsWith(string, System.StringComparison)", file="LongOptionParser.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m1_65 [cluster="Unk.SkipWhile", file="LongOptionParser.cs", label="Entry Unk.SkipWhile", span=""];
m1_183 [cluster="CommandLine.Core.Token.Name(string)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m1_200 [cluster="System.Action<T>.Invoke(T)", file="LongOptionParser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_21 [cluster="CommandLine.Core.Token.IsName()", file="LongOptionParser.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m1_38 [cluster="Unk.Any", file="LongOptionParser.cs", label="Entry Unk.Any", span=""];
m1_16 [cluster="CommandLine.Core.Token.Value(string)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m1_72 [cluster="Unk.MapMaybeOrDefault", file="LongOptionParser.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m1_22 [cluster="System.Func<T, TResult>.Invoke(T)", file="LongOptionParser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_117 [cluster="Unk.IsName", file="LongOptionParser.cs", label="Entry Unk.IsName", span=""];
m1_161 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="LongOptionParser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m1_23 [cluster="Unk.Where", file="LongOptionParser.cs", label="Entry Unk.Where", span=""];
m1_76 [cluster="Unk.Create", file="LongOptionParser.cs", label="Entry Unk.Create", span=""];
m1_85 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="LongOptionParser.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_184 [cluster="string.String(char, int)", file="LongOptionParser.cs", label="Entry string.String(char, int)", span="0-0"];
m1_109 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAtOrDefault<TSource>(int)", span="0-0"];
m1_129 [cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="109-109"];
m1_130 [cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", file="LongOptionParser.cs", label="return (arguments, optionSpecs) =>\r\n                {\r\n                    var normalize = ignoreUnknownArguments\r\n                        ? toks => Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)\r\n                        : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks);\r\n\r\n                    var tokens = enableDashDash\r\n                        ? Tokenizer.PreprocessDashDash(\r\n                                arguments,\r\n                                args =>\r\n                                    Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize))\r\n                        : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize);\r\n                    var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                    return explodedTokens;\r\n                };", span="114-129"];
m1_131 [cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="109-109"];
m1_145 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="LongOptionParser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m1_30 [cluster="Unk.Contains", file="LongOptionParser.cs", label="Entry Unk.Contains", span=""];
m1_84 [cluster="Unk.ToMaybe", file="LongOptionParser.cs", label="Entry Unk.ToMaybe", span=""];
m1_110 [cluster="T.ToMaybe<T>()", file="LongOptionParser.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m1_71 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="LongOptionParser.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_112 [cluster="CSharpx.Maybe.Just<T>(T)", file="LongOptionParser.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m1_152 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="125-125"];
m1_4 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="17-17"];
m1_5 [cluster="lambda expression", file="LongOptionParser.cs", label=tokens, span="17-17"];
m1_6 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="17-17"];
m1_28 [cluster="lambda expression", file="LongOptionParser.cs", label="!unkTokens.Contains(x)", span="41-41"];
m1_27 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="41-41"];
m1_29 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="41-41"];
m1_44 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="48-48"];
m1_48 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="50-50"];
m1_51 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="51-51"];
m1_55 [cluster="lambda expression", file="LongOptionParser.cs", label="tokens.Concat(values)", span="52-52"];
m1_54 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="52-52"];
m1_45 [cluster="lambda expression", file="LongOptionParser.cs", label="arg.EqualsOrdinal(''--'')", span="48-48"];
m1_46 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="48-48"];
m1_49 [cluster="lambda expression", file="LongOptionParser.cs", label="!arg.EqualsOrdinal(''--'')", span="50-50"];
m1_50 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="50-50"];
m1_52 [cluster="lambda expression", file="LongOptionParser.cs", label="!arg.EqualsOrdinal(''--'')", span="51-51"];
m1_53 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="51-51"];
m1_56 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="52-52"];
m1_69 [cluster="lambda expression", file="LongOptionParser.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .MapMaybeOrDefault(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="64-66"];
m1_68 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="63-66"];
m1_77 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="66-66"];
m1_81 [cluster="lambda expression", file="LongOptionParser.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .MapMaybeOrDefault(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[] { t }))", span="69-71"];
m1_80 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="68-71"];
m1_94 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="73-73"];
m1_74 [cluster="lambda expression", file="LongOptionParser.cs", label="Tuple.Create(i + 1, sep)", span="65-65"];
m1_70 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="63-66"];
m1_73 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="65-65"];
m1_75 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="65-65"];
m1_78 [cluster="lambda expression", file="LongOptionParser.cs", label="x.Item1 < 0", span="66-66"];
m1_79 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="66-66"];
m1_88 [cluster="lambda expression", file="LongOptionParser.cs", label="x.Item1 == i", span="69-69"];
m1_91 [cluster="lambda expression", file="LongOptionParser.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="70-70"];
m1_82 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="68-71"];
m1_87 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="69-69"];
m1_90 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="70-70"];
m1_89 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="69-69"];
m1_92 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="70-70"];
m1_95 [cluster="lambda expression", file="LongOptionParser.cs", label=x, span="73-73"];
m1_96 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="73-73"];
m1_106 [cluster="lambda expression", file="LongOptionParser.cs", label="var prev = tokens.ElementAtOrDefault(i - 1).ToMaybe()", span="86-86"];
m1_107 [cluster="lambda expression", file="LongOptionParser.cs", label="return t.IsValue() && ((Value)t).ExplicitlyAssigned\r\n                                   && prev.MapMaybeOrDefault(p => p.IsName() && !nameLookup(p.Text), false)\r\n                                ? Maybe.Just(i)\r\n                                : Maybe.Nothing<int>();", span="87-90"];
m1_115 [cluster="lambda expression", file="LongOptionParser.cs", label="p.IsName() && !nameLookup(p.Text)", span="88-88"];
m1_105 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="84-91"];
m1_119 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="91-91"];
m1_124 [cluster="lambda expression", file="LongOptionParser.cs", label="indexes.Contains(i) ? Maybe.Just(t) : Maybe.Nothing<Token>()", span="96-96"];
m1_123 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="96-96"];
m1_126 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="97-97"];
m1_108 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="84-91"];
m1_114 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="88-88"];
m1_116 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="88-88"];
m1_120 [cluster="lambda expression", file="LongOptionParser.cs", label="i.IsJust()", span="91-91"];
m1_121 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="91-91"];
m1_125 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="96-96"];
m1_127 [cluster="lambda expression", file="LongOptionParser.cs", label="t.IsJust()", span="97-97"];
m1_128 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="97-97"];
m1_133 [cluster="lambda expression", file="LongOptionParser.cs", label="var normalize = ignoreUnknownArguments\r\n                        ? toks => Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)\r\n                        : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks)", span="116-119"];
m1_140 [cluster="lambda expression", file="LongOptionParser.cs", label="Tokenizer.Normalize(toks,\r\n                            name => NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound)", span="117-118"];
m1_143 [cluster="lambda expression", file="LongOptionParser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer) != NameLookupResult.NoOptionFound", span="118-118"];
m1_134 [cluster="lambda expression", file="LongOptionParser.cs", label="var tokens = enableDashDash\r\n                        ? Tokenizer.PreprocessDashDash(\r\n                                arguments,\r\n                                args =>\r\n                                    Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize))\r\n                        : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize)", span="121-126"];
m1_150 [cluster="lambda expression", file="LongOptionParser.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer), normalize)", span="125-125"];
m1_153 [cluster="lambda expression", file="LongOptionParser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="125-125"];
m1_156 [cluster="lambda expression", file="LongOptionParser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="126-126"];
m1_135 [cluster="lambda expression", file="LongOptionParser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="127-127"];
m1_159 [cluster="lambda expression", file="LongOptionParser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="127-127"];
m1_132 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="114-129"];
m1_147 [cluster="lambda expression", file="LongOptionParser.cs", label=toks, span="119-119"];
m1_149 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="124-125"];
m1_155 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="126-126"];
m1_136 [cluster="lambda expression", file="LongOptionParser.cs", label="return explodedTokens;", span="128-128"];
m1_158 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="127-127"];
m1_137 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="114-129"];
m1_139 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="117-118"];
m1_141 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="117-118"];
m1_142 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="118-118"];
m1_144 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="118-118"];
m1_146 [cluster="lambda expression", file="LongOptionParser.cs", label="Entry lambda expression", span="119-119"];
m1_148 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="119-119"];
m1_151 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="124-125"];
m1_154 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="125-125"];
m1_157 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="126-126"];
m1_160 [cluster="lambda expression", file="LongOptionParser.cs", label="Exit lambda expression", span="127-127"];
m1_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m1_17 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="172-172"];
m1_185 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="176-176"];
m1_189 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="yield return Token.Name(text);", span="182-182"];
m1_190 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="yield break;", span="183-183"];
m1_193 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="yield break;", span="188-188"];
m1_195 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="yield return Token.Name(parts[0]);", span="191-191"];
m1_196 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="yield return Token.Value(parts[1], true);", span="192-192"];
m1_186 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="var text = value.Substring(2)", span="178-178"];
m1_192 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="onError(new BadFormatTokenError(value))", span="187-187"];
m1_187 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="var equalIndex = text.IndexOf('=')", span="179-179"];
m1_194 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="var parts = text.Split('=')", span="190-190"];
m1_188 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="equalIndex <= 0", span="180-180"];
m1_191 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="equalIndex == 1", span="185-185"];
m1_197 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="172-172"];
m1_67 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="LongOptionParser.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="15-15"];
m1_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m1_25 [cluster="Unk.Concat", file="LongOptionParser.cs", label="Entry Unk.Concat", span=""];
m1_43 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="LongOptionParser.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m1_47 [cluster="string.EqualsOrdinal(string)", file="LongOptionParser.cs", label="Entry string.EqualsOrdinal(string)", span="40-40"];
m1_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m1_198 [cluster="string.IndexOf(char)", file="LongOptionParser.cs", label="Entry string.IndexOf(char)", span="0-0"];
m1_42 [cluster="Unk.Select", file="LongOptionParser.cs", label="Entry Unk.Select", span=""];
m1_122 [cluster="Unk.IsJust", file="LongOptionParser.cs", label="Entry Unk.IsJust", span=""];
m1_19 [cluster="Unk.Memorize", file="LongOptionParser.cs", label="Entry Unk.Memorize", span=""];
m1_104 [cluster="Unk.Except", file="LongOptionParser.cs", label="Entry Unk.Except", span=""];
m1_113 [cluster="CSharpx.Maybe.Nothing<T>()", file="LongOptionParser.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_64 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="LongOptionParser.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m1_111 [cluster="CommandLine.Core.Token.IsValue()", file="LongOptionParser.cs", label="Entry CommandLine.Core.Token.IsValue()", span="133-133"];
m1_182 [cluster="char.IsDigit(char)", file="LongOptionParser.cs", label="Entry char.IsDigit(char)", span="0-0"];
m1_14 [cluster="System.Collections.Generic.List<T>.List()", file="LongOptionParser.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m1_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="return Tokenizer.Tokenize(arguments, nameLookup, tokens => tokens);", span="17-17"];
m1_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="LongOptionParser.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m1_202 [cluster="CommandLine.Core.Token.Value(string, bool)", file="LongOptionParser.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m1_24 [cluster="UnknownOptionError.cstr", file="LongOptionParser.cs", label="Entry UnknownOptionError.cstr", span=""];
m1_20 [cluster="Unk.normalize", file="LongOptionParser.cs", label="Entry Unk.normalize", span=""];
m1_66 [cluster="Unk.SelectMany", file="LongOptionParser.cs", label="Entry Unk.SelectMany", span=""];
m1_83 [cluster="Unk.FirstOrDefault", file="LongOptionParser.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_93 [cluster="Unk.Split", file="LongOptionParser.cs", label="Entry Unk.Split", span=""];
m1_26 [cluster="Unk.Succeed", file="LongOptionParser.cs", label="Entry Unk.Succeed", span=""];
m1_181 [cluster="string.Substring(int)", file="LongOptionParser.cs", label="Entry string.Substring(int)", span="0-0"];
m1_203 [file="LongOptionParser.cs", label=unkTokens, span=""];
m1_204 [file="LongOptionParser.cs", label=values, span=""];
m1_205 [file="LongOptionParser.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m1_206 [file="LongOptionParser.cs", label=int, span=""];
m1_207 [file="LongOptionParser.cs", label=replaces, span=""];
m1_208 [file="LongOptionParser.cs", label=int, span=""];
m1_209 [file="LongOptionParser.cs", label="CommandLine.Core.Token", span=""];
m1_210 [file="LongOptionParser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m1_211 [file="LongOptionParser.cs", label="System.Func<string, bool>", span=""];
m1_212 [file="LongOptionParser.cs", label=indexes, span=""];
m1_213 [file="LongOptionParser.cs", label="System.StringComparer", span=""];
m1_214 [file="LongOptionParser.cs", label=bool, span=""];
m1_215 [file="LongOptionParser.cs", label=bool, span=""];
m1_216 [file="LongOptionParser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_217 [file="LongOptionParser.cs", label=normalize, span=""];
m2_149 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="551-551"];
m2_150 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Func<OkPair<TValue, TMessage>, Result<TSuccess, TMessage>> successFunc =\r\n                pair => MergeMessages(pair.Messages, func(pair.Success))", span="555-556"];
m2_152 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return Either(successFunc, failureFunc, result);", span="561-561"];
m2_151 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Func<IEnumerable<TMessage>, Result<TSuccess, TMessage>> failureFunc =\r\n                messages => new Bad<TSuccess, TMessage>(messages)", span="558-559"];
m2_153 [cluster="RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Bind<TValue, TSuccess, TMessage>(System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="551-551"];
m2_50 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="255-255"];
m2_51 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return okPair.Messages;", span="257-257"];
m2_52 [cluster="RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.Second<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="255-255"];
m2_223 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="745-745"];
m2_224 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="return Trial.Collect(values);", span="748-748"];
m2_225 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="745-745"];
m2_106 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", span="446-446"];
m2_107 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="448-448"];
m2_108 [cluster="RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Pass<TSuccess, TMessage>(TSuccess)", span="446-446"];
m2_39 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="242-242"];
m2_40 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="success == null", span="244-244"];
m2_42 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="messages == null", span="245-245"];
m2_44 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="return new OkPair<TSuccess, TMessage>(success, messages);", span="247-247"];
m2_41 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''success'');", span="244-244"];
m2_43 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''messages'');", span="245-245"];
m2_45 [cluster="RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.Create<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="242-242"];
m2_71 [cluster="object.ToString()", file="OptionAttribute.cs", label="Entry object.ToString()", span="0-0"];
m2_97 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="408-408"];
m2_98 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="OptionAttribute.cs", label="return new Ok<TSuccess, Exception>(\r\n                    new OkPair<TSuccess, Exception>(\r\n                        func(), Enumerable.Empty<Exception>()));", span="412-414"];
m2_99 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="OptionAttribute.cs", label=Exception, span="416-416"];
m2_100 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="OptionAttribute.cs", label="return new Bad<TSuccess, Exception>(\r\n                    new[] { ex });", span="418-419"];
m2_101 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="408-408"];
m2_259 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="831-831"];
m2_260 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="result.Tag == ResultType.Ok", span="833-833"];
m2_261 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="835-835"];
m2_263 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="841-841"];
m2_262 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="throw new Exception(\r\n                    string.Format(''Result was a success: {0} - {1}'',\r\n                    ok.Value.Success,\r\n                    string.Join(Environment.NewLine, ok.Value.Messages.Select(m => m.ToString()))));", span="836-839"];
m2_264 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return bad.Messages;", span="842-842"];
m2_265 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.FailedWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="831-831"];
m2_211 [cluster="System.Action<T>.Invoke(T)", file="OptionAttribute.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_9 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.ToString()", span="148-148"];
m2_10 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="OptionAttribute.cs", label="return ''()'';", span="150-150"];
m2_11 [cluster="RailwaySharp.ErrorHandling.Unit.ToString()", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.ToString()", span="148-148"];
m2_125 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_90 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="OptionAttribute.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_256 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="819-819"];
m2_257 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="return Trial.Lift(func, result);", span="822-822"];
m2_258 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Select<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="819-819"];
m2_78 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", span="348-348"];
m2_79 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="this.messages = messages", span="351-351"];
m2_80 [cluster="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>.Bad(System.Collections.Generic.IEnumerable<TMessage>)", span="348-348"];
m2_219 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="OptionAttribute.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_118 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="490-490"];
m2_119 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var ok = trialResult as Ok<TSuccess, TMessage>", span="495-495"];
m2_121 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return successFunc(ok.Value);", span="498-498"];
m2_122 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)trialResult", span="500-500"];
m2_123 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return failureFunc(bad.Messages);", span="501-501"];
m2_120 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="ok != null", span="496-496"];
m2_124 [cluster="RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Either<TSuccess, TMessage, TResult>(System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="490-490"];
m2_226 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", span="758-758"];
m2_227 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="result.Tag == ResultType.Ok", span="760-760"];
m2_228 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var ok = (Ok<IEnumerable<Result<TSuccess, TMessage>>, TMessage>)result", span="762-762"];
m2_236 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var bad = (Bad<IEnumerable<Result<TSuccess, TMessage>>, TMessage>)result", span="773-773"];
m2_229 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var values = ok.Value.Success", span="763-763"];
m2_230 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var result1 = Collect(values)", span="764-764"];
m2_231 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="result1.Tag == ResultType.Ok", span="765-765"];
m2_232 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var ok1 = (Ok<IEnumerable<TSuccess>, TMessage>)result1", span="767-767"];
m2_234 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="var bad1 = (Bad<IEnumerable<TSuccess>, TMessage>)result1", span="770-770"];
m2_233 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="return new Ok<IEnumerable<TSuccess>, TMessage>(new OkPair<IEnumerable<TSuccess>, TMessage>(ok1.Value.Success, ok1.Value.Messages));", span="768-768"];
m2_235 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages);", span="771-771"];
m2_237 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad.Messages);", span="774-774"];
m2_238 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>)", span="758-758"];
m2_242 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", span="798-798"];
m2_243 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="Func<TSuccess, Func<TValue, TResult>> curriedMapper = suc => val => mapperFunc(suc, val)", span="803-803"];
m2_245 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="var v = Trial.Bind(func, result)", span="809-809"];
m2_246 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="return liftedMapper(result, v);", span="810-810"];
m2_244 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="Func<\r\n                Result<TSuccess, TMessage>,\r\n                Result<TValue, TMessage>,\r\n                Result<TResult, TMessage>\r\n            > liftedMapper = (a, b) => Trial.Lift2(curriedMapper, a, b)", span="804-808"];
m2_247 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TValue, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TValue, TMessage>>, System.Func<TSuccess, TValue, TResult>)", span="798-798"];
m2_12 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="153-153"];
m2_13 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="return true;", span="155-155"];
m2_14 [cluster="RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.operator ==(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="153-153"];
m2_188 [cluster="System.Collections.Generic.IEnumerable<T>.Fold<T, TResult>(System.Func<T, T, TResult>)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Fold<T, TResult>(System.Func<T, T, TResult>)", span="185-185"];
m2_210 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="OptionAttribute.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m2_18 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="180-180"];
m2_19 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="this.success = success", span="182-182"];
m2_20 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="this.messages = messages", span="183-183"];
m2_21 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.OkPair(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="180-180"];
m2_102 [cluster="System.Func<TResult>.Invoke()", file="OptionAttribute.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_276 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="861-861"];
m2_72 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="307-307"];
m2_68 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="302-302"];
m2_69 [cluster="lambda expression", file="OptionAttribute.cs", label="v.ToString()", span="302-302"];
m2_70 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="302-302"];
m2_73 [cluster="lambda expression", file="OptionAttribute.cs", label="v.ToString()", span="307-307"];
m2_74 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="307-307"];
m2_131 [cluster="lambda expression", file="OptionAttribute.cs", label="throw new Exception(\r\n                    string.Join(\r\n                    Environment.NewLine, msgs.Select(m => m.ToString())));", span="515-517"];
m2_130 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="513-518"];
m2_132 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="513-518"];
m2_134 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="517-517"];
m2_135 [cluster="lambda expression", file="OptionAttribute.cs", label="m.ToString()", span="517-517"];
m2_136 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="517-517"];
m2_143 [cluster="lambda expression", file="OptionAttribute.cs", label="new Ok<TSuccess, TMessage>(\r\n                        new OkPair<TSuccess, TMessage>(pair.Success, messages.Concat(pair.Messages)))", span="535-536"];
m2_147 [cluster="lambda expression", file="OptionAttribute.cs", label="new Bad<TSuccess, TMessage>(errors.Concat(messages))", span="539-539"];
m2_142 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="534-536"];
m2_144 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="534-536"];
m2_146 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="539-539"];
m2_148 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="539-539"];
m2_155 [cluster="lambda expression", file="OptionAttribute.cs", label="MergeMessages(pair.Messages, func(pair.Success))", span="556-556"];
m2_158 [cluster="lambda expression", file="OptionAttribute.cs", label="new Bad<TSuccess, TMessage>(messages)", span="559-559"];
m2_154 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="556-556"];
m2_156 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="556-556"];
m2_157 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="559-559"];
m2_159 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="559-559"];
m2_163 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="573-573"];
m2_164 [cluster="lambda expression", file="OptionAttribute.cs", label=x, span="573-573"];
m2_165 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="573-573"];
m2_189 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="649-675"];
m2_190 [cluster="lambda expression", file="OptionAttribute.cs", label="result.Tag == ResultType.Ok && next.Tag == ResultType.Ok", span="651-651"];
m2_191 [cluster="lambda expression", file="OptionAttribute.cs", label="var ok1 = (Ok<TSuccess, TMessage>)result", span="653-653"];
m2_192 [cluster="lambda expression", file="OptionAttribute.cs", label="var ok2 = (Ok<TSuccess, TMessage>)next", span="654-654"];
m2_194 [cluster="lambda expression", file="OptionAttribute.cs", label="(result.Tag == ResultType.Ok && next.Tag == ResultType.Bad)\r\n                        || (result.Tag == ResultType.Bad && next.Tag == ResultType.Ok)", span="661-662"];
m2_195 [cluster="lambda expression", file="OptionAttribute.cs", label="var m1 = result.Tag == ResultType.Ok\r\n                            ? ((Ok<TSuccess, TMessage>)result).Value.Messages\r\n                            : ((Bad<TSuccess, TMessage>)next).Messages", span="664-666"];
m2_196 [cluster="lambda expression", file="OptionAttribute.cs", label="var m2 = result.Tag == ResultType.Bad\r\n                            ? ((Bad<TSuccess, TMessage>)result).Messages\r\n                            : ((Ok<TSuccess, TMessage>)next).Value.Messages", span="667-669"];
m2_198 [cluster="lambda expression", file="OptionAttribute.cs", label="var bad1 = (Bad<TSuccess, TMessage>)result", span="672-672"];
m2_199 [cluster="lambda expression", file="OptionAttribute.cs", label="var bad2 = (Bad<TSuccess, TMessage>)next", span="673-673"];
m2_193 [cluster="lambda expression", file="OptionAttribute.cs", label="return\r\n                            new Ok<IEnumerable<TSuccess>, TMessage>(\r\n                                new OkPair<IEnumerable<TSuccess>, TMessage>(\r\n                                    new[] { ok2.Value.Success, ok1.Value.Success },\r\n                                    ok1.Value.Messages.Concat(ok2.Value.Messages)));", span="655-659"];
m2_197 [cluster="lambda expression", file="OptionAttribute.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(m1.Concat(m2));", span="670-670"];
m2_200 [cluster="lambda expression", file="OptionAttribute.cs", label="return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages.Concat(bad2.Messages));", span="674-674"];
m2_201 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="649-675"];
m2_251 [cluster="lambda expression", file="OptionAttribute.cs", label="mapperFunc(suc, val)", span="803-803"];
m2_254 [cluster="lambda expression", file="OptionAttribute.cs", label="Trial.Lift2(curriedMapper, a, b)", span="808-808"];
m2_248 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="803-803"];
m2_249 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="803-803"];
m2_250 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="803-803"];
m2_252 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="803-803"];
m2_253 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="808-808"];
m2_255 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="808-808"];
m2_266 [cluster="lambda expression", file="OptionAttribute.cs", label="Entry lambda expression", span="839-839"];
m2_267 [cluster="lambda expression", file="OptionAttribute.cs", label="m.ToString()", span="839-839"];
m2_268 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="839-839"];
m2_277 [cluster="lambda expression", file="OptionAttribute.cs", label="m.ToString()", span="861-861"];
m2_278 [cluster="lambda expression", file="OptionAttribute.cs", label="Exit lambda expression", span="861-861"];
m2_6 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.GetHashCode()", span="143-143"];
m2_7 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="OptionAttribute.cs", label="return 0;", span="145-145"];
m2_8 [cluster="RailwaySharp.ErrorHandling.Unit.GetHashCode()", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.GetHashCode()", span="143-143"];
m2_75 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="324-324"];
m2_76 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="this.value = value", span="327-327"];
m2_77 [cluster="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>.Ok(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="324-324"];
m2_47 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="250-250"];
m2_48 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return okPair.Success;", span="252-252"];
m2_49 [cluster="RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair.First<TSuccess, TMessage>(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="250-250"];
m2_38 [cluster="Unk.SequenceEqual", file="OptionAttribute.cs", label="Entry Unk.SequenceEqual", span=""];
m2_28 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="226-226"];
m2_34 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="other == null", span="228-228"];
m2_36 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return Success.Equals(other.Success) && Messages.SequenceEqual(other.Messages);", span="233-233"];
m2_35 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return false;", span="230-230"];
m2_37 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>)", span="226-226"];
m2_56 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", span="293-293"];
m2_57 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label=Tag, span="295-295"];
m2_58 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="ResultType.Ok", span="297-297"];
m2_61 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)this", span="304-304"];
m2_59 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="var ok = (Ok<TSuccess, TMessage>)this", span="298-298"];
m2_60 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="return string.Format(\r\n                        ''OK: {0} - {1}'',\r\n                        ok.Value.Success,\r\n                        string.Join(Environment.NewLine, ok.Value.Messages.Select(v => v.ToString())));", span="299-302"];
m2_62 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="return string.Format(\r\n                        ''Error: {0}'',\r\n                        string.Join(Environment.NewLine, bad.Messages.Select(v => v.ToString())));", span="305-307"];
m2_63 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToString()", span="293-293"];
m2_66 [cluster="string.Format(string, object, object)", file="OptionAttribute.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_202 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="693-693"];
m2_203 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="var ok = result as Ok<TSuccess, TMessage>", span="697-697"];
m2_205 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="ifSuccess(ok.Value.Success, ok.Value.Messages)", span="700-700"];
m2_207 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="703-703"];
m2_208 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="ifFailure(bad.Messages)", span="704-704"];
m2_204 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="ok != null", span="698-698"];
m2_206 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="return;", span="701-701"];
m2_209 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Match<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="693-693"];
m2_239 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", span="784-784"];
m2_240 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="OptionAttribute.cs", label="return Trial.Bind(func, result);", span="787-787"];
m2_241 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SelectMany<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, RailwaySharp.ErrorHandling.Result<TResult, TMessage>>)", span="784-784"];
m2_33 [cluster="object.GetHashCode()", file="OptionAttribute.cs", label="Entry object.GetHashCode()", span="0-0"];
m2_115 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="479-479"];
m2_116 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return result.Tag == ResultType.Bad;", span="481-481"];
m2_117 [cluster="RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Failed<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="479-479"];
m2_64 [cluster="Unk.Select", file="OptionAttribute.cs", label="Entry Unk.Select", span=""];
m2_220 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="732-732"];
m2_221 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="return Trial.Lift(func, result);", span="735-735"];
m2_222 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Map<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, TResult>)", span="732-732"];
m2_185 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="645-645"];
m2_186 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="return Lift(Enumerable.Reverse, xs.Fold<Result<TSuccess, TMessage>, Result<IEnumerable<TSuccess>, TMessage>>(\r\n                (result, next) =>\r\n                {\r\n                    if (result.Tag == ResultType.Ok && next.Tag == ResultType.Ok)\r\n                    {\r\n                        var ok1 = (Ok<TSuccess, TMessage>)result;\r\n                        var ok2 = (Ok<TSuccess, TMessage>)next;\r\n                        return\r\n                            new Ok<IEnumerable<TSuccess>, TMessage>(\r\n                                new OkPair<IEnumerable<TSuccess>, TMessage>(\r\n                                    new[] { ok2.Value.Success, ok1.Value.Success },\r\n                                    ok1.Value.Messages.Concat(ok2.Value.Messages)));\r\n                    }\r\n                    if ((result.Tag == ResultType.Ok && next.Tag == ResultType.Bad)\r\n                        || (result.Tag == ResultType.Bad && next.Tag == ResultType.Ok))\r\n                    {\r\n                        var m1 = result.Tag == ResultType.Ok\r\n                            ? ((Ok<TSuccess, TMessage>)result).Value.Messages\r\n                            : ((Bad<TSuccess, TMessage>)next).Messages;\r\n                        var m2 = result.Tag == ResultType.Bad\r\n                            ? ((Bad<TSuccess, TMessage>)result).Messages\r\n                            : ((Ok<TSuccess, TMessage>)next).Value.Messages;\r\n                        return new Bad<IEnumerable<TSuccess>, TMessage>(m1.Concat(m2));\r\n                    }\r\n                    var bad1 = (Bad<TSuccess, TMessage>)result;\r\n                    var bad2 = (Bad<TSuccess, TMessage>)next;\r\n                    return new Bad<IEnumerable<TSuccess>, TMessage>(bad1.Messages.Concat(bad2.Messages));\r\n                }));", span="648-675"];
m2_187 [cluster="RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Collect<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>)", span="645-645"];
m2_112 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", span="468-468"];
m2_113 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(new[] { message });", span="470-470"];
m2_114 [cluster="RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Fail<TSuccess, TMessage>(TMessage)", span="468-468"];
m2_91 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", span="392-392"];
m2_92 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, new[] { message }));", span="394-394"];
m2_93 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, TMessage)", span="392-392"];
m2_15 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="158-158"];
m2_16 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="return false;", span="160-160"];
m2_17 [cluster="RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.operator !=(RailwaySharp.ErrorHandling.Unit, RailwaySharp.ErrorHandling.Unit)", span="158-158"];
m2_87 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", span="384-384"];
m2_88 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="386-386"];
m2_89 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess)", span="384-384"];
m2_84 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", span="376-376"];
m2_85 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(new[] { message });", span="378-378"];
m2_86 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(TMessage)", span="376-376"];
m2_67 [cluster="string.Format(string, object)", file="OptionAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_3 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.Equals(object)", span="138-138"];
m2_4 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="OptionAttribute.cs", label="return obj is Unit;", span="140-140"];
m2_5 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(object)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.Equals(object)", span="138-138"];
m2_279 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="870-870"];
m2_280 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="result.Tag == ResultType.Ok", span="872-872"];
m2_281 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="874-874"];
m2_283 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="877-877"];
m2_282 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return ok.Value.Messages;", span="875-875"];
m2_284 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return bad.Messages;", span="878-878"];
m2_285 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Messages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="870-870"];
m2_53 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", span="283-283"];
m2_54 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="OptionAttribute.cs", label="this.tag = tag", span="285-285"];
m2_55 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Result(RailwaySharp.ErrorHandling.ResultType)", span="283-283"];
m2_22 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", span="201-201"];
m2_23 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="var other = obj as OkPair<TSuccess, TMessage>", span="203-203"];
m2_26 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="return base.Equals(obj);", span="209-209"];
m2_24 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="other != null", span="204-204"];
m2_25 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="return Equals(other);", span="206-206"];
m2_27 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.Equals(object)", span="201-201"];
m2_94 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="400-400"];
m2_95 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, messages));", span="402-402"];
m2_96 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="400-400"];
m2_160 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", span="570-570"];
m2_161 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="OptionAttribute.cs", label="return Bind(x => x, result);", span="573-573"];
m2_162 [cluster="RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Flatten<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, TMessage>)", span="570-570"];
m2_166 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="583-583"];
m2_167 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="wrappedFunction.Tag == ResultType.Ok && result.Tag == ResultType.Ok", span="587-587"];
m2_168 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="var ok1 = (Ok<Func<TValue, TSuccess>, TMessage>)wrappedFunction", span="589-589"];
m2_169 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="var ok2 = (Ok<TValue, TMessage>)result", span="590-590"];
m2_171 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="wrappedFunction.Tag == ResultType.Bad && result.Tag == ResultType.Ok", span="595-595"];
m2_172 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(((Bad<TValue, TMessage>)result).Messages);", span="597-597"];
m2_173 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="wrappedFunction.Tag == ResultType.Ok && result.Tag == ResultType.Bad", span="599-599"];
m2_174 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(\r\n                    ((Bad<TValue, TMessage>)result).Messages);", span="601-602"];
m2_175 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="var bad1 = (Bad<Func<TValue, TSuccess>, TMessage>)wrappedFunction", span="605-605"];
m2_176 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="var bad2 = (Bad<TValue, TMessage>)result", span="606-606"];
m2_170 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(\r\n                    ok1.Value.Success(ok2.Value.Success), ok1.Value.Messages.Concat(ok2.Value.Messages)));", span="592-593"];
m2_177 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(bad1.Messages.Concat(bad2.Messages));", span="608-608"];
m2_178 [cluster="RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Apply<TValue, TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="583-583"];
m2_179 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="617-617"];
m2_180 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="return Apply(Ok<Func<TValue, TSuccess>, TMessage>(func), result);", span="621-621"];
m2_181 [cluster="RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Lift<TValue, TSuccess, TMessage>(System.Func<TValue, TSuccess>, RailwaySharp.ErrorHandling.Result<TValue, TMessage>)", span="617-617"];
m2_182 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", span="630-630"];
m2_183 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="OptionAttribute.cs", label="return Apply(Lift(func, a), b);", span="635-635"];
m2_184 [cluster="RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Lift2<TSuccess, TMessage, TSuccess1, TMessage1>(System.Func<TSuccess, System.Func<TMessage, TSuccess1>>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage1>, RailwaySharp.ErrorHandling.Result<TMessage, TMessage1>)", span="630-630"];
m2_269 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="851-851"];
m2_270 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="result.Tag == ResultType.Ok", span="853-853"];
m2_271 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="855-855"];
m2_273 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="858-858"];
m2_272 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return ok.Value.Success;", span="856-856"];
m2_274 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="throw new Exception(\r\n                string.Format(''Result was an error: {0}'',\r\n                string.Join(Environment.NewLine, bad.Messages.Select(m => m.ToString()))));", span="859-861"];
m2_275 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.SucceededWith<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="851-851"];
m2_65 [cluster="Unk.Join", file="OptionAttribute.cs", label="Entry Unk.Join", span=""];
m2_30 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", span="216-216"];
m2_31 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="OptionAttribute.cs", label="return new { Success, Messages }.GetHashCode();", span="218-218"];
m2_32 [cluster="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>.GetHashCode()", span="216-216"];
m2_126 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="511-511"];
m2_127 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Func<IEnumerable<TMessage>, TSuccess> raiseExn = msgs =>\r\n            {\r\n                throw new Exception(\r\n                    string.Join(\r\n                    Environment.NewLine, msgs.Select(m => m.ToString())));\r\n            }", span="513-518"];
m2_128 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return Either(OkPair.First, raiseExn, result);", span="520-520"];
m2_129 [cluster="RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.ReturnOrFail<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="511-511"];
m2_137 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="529-529"];
m2_138 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Func<OkPair<TSuccess, TMessage>, Result<TSuccess, TMessage>> successFunc =\r\n                pair =>\r\n                    new Ok<TSuccess, TMessage>(\r\n                        new OkPair<TSuccess, TMessage>(pair.Success, messages.Concat(pair.Messages)))", span="533-536"];
m2_139 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Func<IEnumerable<TMessage>, Result<TSuccess, TMessage>> failureFunc =\r\n                errors => new Bad<TSuccess, TMessage>(errors.Concat(messages))", span="538-539"];
m2_140 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="return Either(successFunc, failureFunc, result);", span="541-541"];
m2_141 [cluster="RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.MergeMessages<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="529-529"];
m2_133 [cluster="System.Exception.Exception(string)", file="OptionAttribute.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_29 [cluster="object.Equals(object)", file="OptionAttribute.cs", label="Entry object.Equals(object)", span="0-0"];
m2_212 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", span="713-713"];
m2_213 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="var ok = result as Ok<TSuccess, TMessage>", span="717-717"];
m2_215 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="return ifSuccess(ok.Value.Success, ok.Value.Messages);", span="720-720"];
m2_216 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="var bad = (Bad<TSuccess, TMessage>)result", span="722-722"];
m2_217 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="return ifFailure(bad.Messages);", span="723-723"];
m2_214 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="ok != null", span="718-718"];
m2_218 [cluster="RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.ResultExtensions.Either<TSuccess, TMessage, TResult>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>, System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>, System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>)", span="713-713"];
m2_0 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", span="133-133"];
m2_1 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="return true;", span="135-135"];
m2_2 [cluster="RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Unit.Equals(RailwaySharp.ErrorHandling.Unit)", span="133-133"];
m2_46 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_145 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="OptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_109 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", span="457-457"];
m2_110 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, new[] { message }));", span="459-459"];
m2_111 [cluster="RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Warn<TSuccess, TMessage>(TMessage, TSuccess)", span="457-457"];
m2_103 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", span="435-435"];
m2_104 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="return new Ok<TSuccess, TMessage>(new OkPair<TSuccess, TMessage>(value, Enumerable.Empty<TMessage>()));", span="437-437"];
m2_105 [cluster="RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Trial.Ok<TSuccess, TMessage>(TSuccess)", span="435-435"];
m2_81 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Entry RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", span="368-368"];
m2_82 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="return new Bad<TSuccess, TMessage>(messages);", span="370-370"];
m2_83 [cluster="RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", file="OptionAttribute.cs", label="Exit RailwaySharp.ErrorHandling.Result.FailWith<TSuccess, TMessage>(System.Collections.Generic.IEnumerable<TMessage>)", span="368-368"];
m2_286 [file="OptionAttribute.cs", label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", span=""];
m2_287 [file="OptionAttribute.cs", label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", span=""];
m2_288 [file="OptionAttribute.cs", label="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>", span=""];
m2_289 [file="OptionAttribute.cs", label="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>", span=""];
m2_290 [file="OptionAttribute.cs", label="System.Collections.Generic.IEnumerable<TMessage>", span=""];
m2_291 [file="OptionAttribute.cs", label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", span=""];
m2_292 [file="OptionAttribute.cs", label="System.Func<TSuccess, TValue, TResult>", span=""];
m2_293 [file="OptionAttribute.cs", label=TSuccess, span=""];
m2_294 [file="OptionAttribute.cs", label=curriedMapper, span=""];
m3_62 [cluster="Unk.Just", file="OptionGroupParser.cs", label="Entry Unk.Just", span=""];
m3_38 [cluster="Unk.Empty", file="OptionGroupParser.cs", label="Entry Unk.Empty", span=""];
m3_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m3_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15"];
m3_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="20-20"];
m3_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=red, community=0, file="OptionGroupParser.cs", label="0: return Result.Succeed(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="22-26"];
m3_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15"];
m3_50 [cluster="Unk.converter", file="OptionGroupParser.cs", label="Entry Unk.converter", span=""];
m3_6 [cluster="Unk.>", file="OptionGroupParser.cs", label="Entry Unk.>", span=""];
m3_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29"];
m3_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="specProps.Empty()", span="34-34"];
m3_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield break;", span="36-36"];
m3_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="42-43"];
m3_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield break;", span="44-44"];
m3_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="52-54"];
m3_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield break;", span="55-55"];
m3_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .MapMaybeOrDefault(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="58-63"];
m3_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="yield return value;", span="67-67"];
m3_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="var pt = specProps.First()", span="38-38"];
m3_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().MapMaybeOrDefault(n => n, values.Count()))", span="39-39"];
m3_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="47-47"];
m3_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="48-50"];
m3_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="65-65"];
m3_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="taken.Empty()", span="40-40"];
m3_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="OptionGroupParser.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29"];
m3_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="OptionGroupParser.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="71-71"];
m3_36 [cluster="Unk.MapMaybeOrDefault", file="OptionGroupParser.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m3_58 [cluster="CommandLine.Core.Specification.IsValue()", file="OptionGroupParser.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m3_45 [cluster="Unk.IsNothing", file="OptionGroupParser.cs", label="Entry Unk.IsNothing", span=""];
m3_37 [cluster="Unk.Take", file="OptionGroupParser.cs", label="Entry Unk.Take", span=""];
m3_43 [cluster="Unk.ToMaybe", file="OptionGroupParser.cs", label="Entry Unk.ToMaybe", span=""];
m3_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_40 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionGroupParser.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m3_48 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m3_59 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="61-61"];
m3_8 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="23-23"];
m3_11 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="24-24"];
m3_14 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="25-25"];
m3_9 [cluster="lambda expression", color=red, community=0, file="OptionGroupParser.cs", label="0: pe.Item1", span="23-23"];
m3_10 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="23-23"];
m3_12 [cluster="lambda expression", color=red, community=0, file="OptionGroupParser.cs", label="0: pe.Item2", span="24-24"];
m3_13 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="24-24"];
m3_15 [cluster="lambda expression", color=red, community=0, file="OptionGroupParser.cs", label="0: e.Value", span="25-25"];
m3_16 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="25-25"];
m3_60 [cluster="lambda expression", file="OptionGroupParser.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="61-61"];
m3_52 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="39-39"];
m3_55 [cluster="lambda expression", file="OptionGroupParser.cs", label="Entry lambda expression", span="47-47"];
m3_53 [cluster="lambda expression", file="OptionGroupParser.cs", label=n, span="39-39"];
m3_54 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="39-39"];
m3_56 [cluster="lambda expression", file="OptionGroupParser.cs", label="s.Specification.IsValue()", span="47-47"];
m3_57 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="47-47"];
m3_61 [cluster="lambda expression", file="OptionGroupParser.cs", label="Exit lambda expression", span="61-61"];
m3_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_49 [cluster="CSharpx.Maybe.Just<T>(T)", file="OptionGroupParser.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m3_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_75 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87"];
m3_76 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="89-91"];
m3_77 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87"];
m3_5 [cluster="Unk.Select", file="OptionGroupParser.cs", label="Entry Unk.Select", span=""];
m3_51 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m3_39 [cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="OptionGroupParser.cs", label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="87-87"];
m3_64 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionGroupParser.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m3_63 [cluster="Unk.WithValue", file="OptionGroupParser.cs", label="Entry Unk.WithValue", span=""];
m3_74 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="OptionGroupParser.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m3_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m3_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m3_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="specification.TargetType", span="73-73"];
m3_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="specification.Max.IsJust()", span="78-78"];
m3_71 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="return Maybe.Just(specification.Max.FromJustOrFail());", span="80-80"];
m3_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="TargetType.Scalar", span="75-75"];
m3_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="TargetType.Sequence", span="77-77"];
m3_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="return Maybe.Just(1);", span="76-76"];
m3_72 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="return Maybe.Nothing<int>();", span="84-84"];
m3_73 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="OptionGroupParser.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m3_42 [cluster="Unk.FirstOrDefault", file="OptionGroupParser.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_44 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="OptionGroupParser.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m3_46 [cluster="Unk.Count", file="OptionGroupParser.cs", label="Entry Unk.Count", span=""];
m3_7 [cluster="Unk.Succeed", file="OptionGroupParser.cs", label="Entry Unk.Succeed", span=""];
m3_78 [file="OptionGroupParser.cs", label=pt, span=""];
m4_0 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="Entry CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", span="14-14"];
m4_1 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="this.group = group", span="16-16"];
m4_2 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="this.helpText = helpText", span="17-17"];
m4_3 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="this.settings = settings", span="18-18"];
m4_4 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="this.sample = sample", span="19-19"];
m4_5 [cluster="CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", file="OptionMap.cs", label="Exit CommandLine.Text.Example<T>.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, T)", span="14-14"];
m4_6 [file="OptionMap.cs", label="CommandLine.Text.Example<T>", span=""];
m5_38 [cluster="System.Type.GetVerbSpecification()", file="Parser.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m5_46 [cluster="System.Text.StringBuilder.Append(char)", file="Parser.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m5_124 [cluster="Unk.doubQt", file="Parser.cs", label="Entry Unk.doubQt", span=""];
m5_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m5_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m5_5 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs", label="return new UnParserSettings { UseEqualToken = true };", span="63-63"];
m5_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m5_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m5_127 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="Parser.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="196-197"];
m5_128 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m5_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m5_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="var builder = new StringBuilder()", span="164-164"];
m5_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="spec.TargetType", span="165-165"];
m5_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="168-168"];
m5_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="var sep = spec.SeperatorOrSpace()", span="171-171"];
m5_96 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="174-174"];
m5_98 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="builder.Append(format(e.Current)).Append(sep)", span="176-176"];
m5_99 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="builder.TrimEndIfMatch(' ')", span="177-177"];
m5_100 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="return builder.ToString();", span="180-180"];
m5_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="TargetType.Scalar", span="167-167"];
m5_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="TargetType.Sequence", span="170-170"];
m5_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="172-173"];
m5_97 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="e.MoveNext()", span="175-175"];
m5_101 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m5_35 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_105 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="Parser.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m5_45 [cluster="Unk.Any", file="Parser.cs", label="Entry Unk.Any", span=""];
m5_41 [cluster="object.IsEmpty()", file="Parser.cs", label="Entry object.IsEmpty()", span="233-233"];
m5_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="Parser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m5_138 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="210-212"];
m5_139 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken && optionSpec.ConversionType != typeof(bool), ''='', '' '')\r\n                    .ToString();", span="214-219"];
m5_140 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m5_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m5_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="value == null", span="235-235"];
m5_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="236-236"];
m5_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="237-237"];
m5_158 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="value is string && ((string)value).Length == 0", span="238-238"];
m5_160 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="239-239"];
m5_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return true;", span="235-235"];
m5_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return true;", span="236-236"];
m5_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return true;", span="237-237"];
m5_159 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return true;", span="238-238"];
m5_161 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return true;", span="239-239"];
m5_162 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="return false;", span="240-240"];
m5_163 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m5_43 [cluster="Unk.Where", file="Parser.cs", label="Entry Unk.Where", span=""];
m5_142 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="Parser.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m5_52 [cluster="Unk.TrimEndIfMatchWhen", file="Parser.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m5_120 [cluster="string.Replace(string, string)", file="Parser.cs", label="Entry string.Replace(string, string)", span="0-0"];
m5_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Parser.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m5_72 [cluster="Unk.Contains", file="Parser.cs", label="Entry Unk.Contains", span=""];
m5_115 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m5_119 [cluster="string.Contains(string)", file="Parser.cs", label="Entry string.Contains(string)", span="0-0"];
m5_36 [cluster="object.GetType()", file="Parser.cs", label="Entry object.GetType()", span="0-0"];
m5_129 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="197-197"];
m5_11 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="83-83"];
m5_12 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="83-83"];
m5_61 [cluster="lambda expression", file="Parser.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="112-113"];
m5_80 [cluster="lambda expression", file="Parser.cs", label="builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')", span="148-151"];
m5_57 [cluster="lambda expression", file="Parser.cs", label="builder.Append(verb.Name).Append(' ')", span="107-107"];
m5_56 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="107-107"];
m5_60 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="112-113"];
m5_66 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="118-118"];
m5_70 [cluster="lambda expression", file="Parser.cs", label="!shortSwitches.Contains(info)", span="132-132"];
m5_69 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="132-132"];
m5_73 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="135-135"];
m5_76 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="142-142"];
m5_85 [cluster="lambda expression", file="Parser.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="156-156"];
m5_79 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="147-151"];
m5_84 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="156-156"];
m5_58 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="107-107"];
m5_62 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="112-113"];
m5_67 [cluster="lambda expression", file="Parser.cs", label="i.Specification.Tag == SpecificationType.Option", span="118-118"];
m5_68 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="118-118"];
m5_71 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="132-132"];
m5_74 [cluster="lambda expression", file="Parser.cs", label="i.Specification.Tag == SpecificationType.Value", span="135-135"];
m5_75 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="135-135"];
m5_77 [cluster="lambda expression", file="Parser.cs", label="((OptionSpecification)info.Specification).ShortName", span="142-142"];
m5_78 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="142-142"];
m5_81 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="147-151"];
m5_86 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="156-156"];
m5_110 [cluster="lambda expression", file="Parser.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="173-173"];
m5_109 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="172-173"];
m5_111 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="172-173"];
m5_117 [cluster="lambda expression", file="Parser.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="186-186"];
m5_122 [cluster="lambda expression", file="Parser.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="190-191"];
m5_121 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="190-191"];
m5_116 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="185-186"];
m5_118 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="185-186"];
m5_123 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="190-191"];
m5_130 [cluster="lambda expression", file="Parser.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="197-197"];
m5_131 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="197-197"];
m5_136 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Parser.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m5_55 [cluster="string.TrimEnd(params char[])", file="Parser.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m5_108 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="Parser.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m5_148 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m5_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="Parser.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m5_59 [cluster="Unk.Append", file="Parser.cs", label="Entry Unk.Append", span=""];
m5_47 [cluster="Unk.Select", file="Parser.cs", label="Entry Unk.Select", span=""];
m5_164 [cluster="System.Type.GetDefaultValue()", file="Parser.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m5_87 [cluster="Unk.FormatValue", file="Parser.cs", label="Entry Unk.FormatValue", span=""];
m5_42 [cluster="Unk.Memorize", file="Parser.cs", label="Entry Unk.Memorize", span=""];
m5_83 [cluster="Unk.FormatOption", file="Parser.cs", label="Entry Unk.FormatOption", span=""];
m5_44 [cluster="Unk.UniqueName", file="Parser.cs", label="Entry Unk.UniqueName", span=""];
m5_150 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m5_125 [cluster="string.JoinTo(params string[])", file="Parser.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m5_65 [cluster="object.NormalizeValue()", file="Parser.cs", label="Entry object.NormalizeValue()", span="222-222"];
m5_39 [cluster="Unk.Return", file="Parser.cs", label="Entry Unk.Return", span=""];
m5_54 [cluster="System.Text.StringBuilder.ToString()", file="Parser.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m5_104 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="Parser.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="194-194"];
m5_50 [cluster="System.Text.StringBuilder.Append(string)", file="Parser.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m5_135 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="Parser.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="208-208"];
m5_102 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m5_112 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="185-186"];
m5_113 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="188-191"];
m5_114 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m5_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m5_1 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs", label="return new UnParserSettings { GroupSwitches = true };", span="54-54"];
m5_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m5_53 [cluster="Unk.ForEach", file="Parser.cs", label="Entry Unk.ForEach", span=""];
m5_103 [cluster="System.Text.StringBuilder.Append(object)", file="Parser.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m5_49 [cluster="Unk.Join", file="Parser.cs", label="Entry Unk.Join", span=""];
m5_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m5_141 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="Parser.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m5_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="Parser.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m5_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="Parser.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m5_165 [cluster="object.Equals(object)", file="Parser.cs", label="Entry object.Equals(object)", span="0-0"];
m5_106 [cluster="System.Collections.IEnumerator.MoveNext()", file="Parser.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m5_82 [cluster="System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", file="Parser.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", span="94-94"];
m5_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m5_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="options == null", span="97-97"];
m5_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="configuration(settings)", span="100-100"];
m5_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var type = options.GetType()", span="103-103"];
m5_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="109-116"];
m5_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="throw new ArgumentNullException(''options'');", span="97-97"];
m5_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var settings = new UnParserSettings()", span="99-99"];
m5_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="settings.Consumed = true", span="101-101"];
m5_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="131-133"];
m5_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="140-143"];
m5_29 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="optSpecs.ForEach(\r\n                opt =>\r\n                    builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')\r\n                )", span="146-152"];
m5_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var builder = new StringBuilder()", span="104-104"];
m5_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="106-107"];
m5_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="118-122"];
m5_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="135-138"];
m5_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="124-129"];
m5_28 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="144-145"];
m5_30 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="153-154"];
m5_31 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="155-156"];
m5_32 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="158-159"];
m5_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m5_48 [cluster="Unk.ToArray", file="Parser.cs", label="Entry Unk.ToArray", span=""];
m5_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m5_133 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="202-205"];
m5_134 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m5_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Parser.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m5_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m5_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs", label="return parser.FormatCommandLine(options, config => {});", span="83-83"];
m5_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m5_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Parser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m5_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m5_144 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="224-226"];
m5_145 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs", label="return FSharpOptionHelper.ValueOf(value);", span="228-228"];
m5_146 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs", label="return value;", span="230-230"];
m5_147 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m5_166 [file="Parser.cs", label=builder, span=""];
m5_167 [file="Parser.cs", label=T, span=""];
m5_168 [file="Parser.cs", label=shortSwitches, span=""];
m5_169 [file="Parser.cs", label=settings, span=""];
m5_170 [file="Parser.cs", label=sep, span=""];
m5_171 [file="Parser.cs", label=doubQt, span=""];
m1_3 -> m1_7  [color=red, key=0, style=solid];
m1_3 -> m1_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_10  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m1_3 -> m1_11  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Core.NameLookupResult>", style=dashed];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_7 -> m1_14  [color=red, key=2, style=dotted];
m1_7 -> m1_12  [color=red, key=1, label=errors, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_15  [key=2, style=dotted];
m1_9 -> m1_16  [key=2, style=dotted];
m1_9 -> m1_17  [key=2, style=dotted];
m1_9 -> m1_18  [key=2, style=dotted];
m1_9 -> m1_19  [key=2, style=dotted];
m1_9 -> m1_9  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_20  [key=2, style=dotted];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label=normalized, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_21  [key=2, style=dotted];
m1_11 -> m1_22  [key=2, style=dotted];
m1_11 -> m1_19  [key=2, style=dotted];
m1_11 -> m1_11  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_11 -> m1_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_23  [key=2, style=dotted];
m1_12 -> m1_24  [key=2, style=dotted];
m1_12 -> m1_25  [key=2, style=dotted];
m1_12 -> m1_26  [key=2, style=dotted];
m1_12 -> m1_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_12 -> m1_12  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_13 -> m1_3  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_36  [key=0, style=solid];
m1_32 -> m1_38  [key=2, style=dotted];
m1_32 -> m1_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_39  [key=2, style=dotted];
m1_33 -> m1_22  [key=2, style=dotted];
m1_33 -> m1_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_40  [key=2, style=dotted];
m1_34 -> m1_41  [key=2, style=dotted];
m1_34 -> m1_42  [key=2, style=dotted];
m1_34 -> m1_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_22  [key=2, style=dotted];
m1_35 -> m1_37  [key=0, style=solid];
m1_35 -> m1_43  [key=2, style=dotted];
m1_35 -> m1_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_37 -> m1_31  [color=blue, key=0, style=bold];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_97 -> m1_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m1_97 -> m1_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_97 -> m1_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_42  [key=2, style=dotted];
m1_98 -> m1_23  [key=2, style=dotted];
m1_98 -> m1_103  [key=2, style=dotted];
m1_98 -> m1_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_98 -> m1_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_98 -> m1_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_98 -> m1_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_42  [key=2, style=dotted];
m1_99 -> m1_23  [key=2, style=dotted];
m1_99 -> m1_103  [key=2, style=dotted];
m1_99 -> m1_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_99 -> m1_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_99 -> m1_99  [color=darkseagreen4, key=1, label=t, style=dashed];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_104  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_102 -> m1_97  [color=blue, key=0, style=bold];
m1_18 -> m1_162  [key=0, style=solid];
m1_18 -> m1_165  [color=crimson, key=0, style=bold];
m1_18 -> m1_166  [color=crimson, key=0, style=bold];
m1_18 -> m1_168  [color=crimson, key=0, style=bold];
m1_18 -> m1_169  [color=crimson, key=0, style=bold];
m1_18 -> m1_176  [color=crimson, key=0, style=bold];
m1_18 -> m1_179  [color=crimson, key=0, style=bold];
m1_18 -> m1_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_18 -> m1_167  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_18 -> m1_173  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Core.NameLookupResult>", style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_180  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_16  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_183  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_183  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=2, style=dotted];
m1_179 -> m1_16  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_181  [key=2, style=dotted];
m1_163 -> m1_168  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_163 -> m1_171  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_163 -> m1_178  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_163 -> m1_179  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_170  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_22  [key=2, style=dotted];
m1_173 -> m1_177  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_167  [key=0, style=solid];
m1_164 -> m1_182  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_178  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_180  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_174  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_170 -> m1_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_170 -> m1_178  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_170 -> m1_179  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_178  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_175  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_175 -> m1_178  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_175 -> m1_179  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_184  [key=2, style=dotted];
m1_172 -> m1_176  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_177 -> m1_171  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_180 -> m1_18  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m1_57 -> m1_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_64  [key=2, style=dotted];
m1_58 -> m1_60  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_42  [key=2, style=dotted];
m1_59 -> m1_65  [key=2, style=dotted];
m1_59 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_81  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_67  [key=2, style=dotted];
m1_62 -> m1_26  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_42  [key=2, style=dotted];
m1_60 -> m1_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_66  [key=2, style=dotted];
m1_61 -> m1_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_63 -> m1_57  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_133  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_140  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_143  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_134  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_150  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_153  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_156  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_135  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_129 -> m1_159  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_133  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_130 -> m1_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_135  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_130 -> m1_159  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_131 -> m1_129  [color=blue, key=0, style=bold];
m1_152 -> m1_153  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_25  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=2, style=dotted];
m1_46 -> m1_44  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_47  [key=2, style=dotted];
m1_50 -> m1_48  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_47  [key=2, style=dotted];
m1_53 -> m1_51  [color=blue, key=0, style=bold];
m1_56 -> m1_54  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_22  [key=2, style=dotted];
m1_69 -> m1_71  [key=2, style=dotted];
m1_69 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_77 -> m1_78  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=2, style=dotted];
m1_81 -> m1_84  [key=2, style=dotted];
m1_81 -> m1_85  [key=2, style=dotted];
m1_81 -> m1_86  [key=2, style=dotted];
m1_81 -> m1_72  [key=2, style=dotted];
m1_81 -> m1_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_81 -> m1_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_80 -> m1_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_77  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_93  [key=2, style=dotted];
m1_91 -> m1_42  [key=2, style=dotted];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_89 -> m1_87  [color=blue, key=0, style=bold];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_94  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_109  [key=2, style=dotted];
m1_106 -> m1_110  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_111  [key=2, style=dotted];
m1_107 -> m1_72  [key=2, style=dotted];
m1_107 -> m1_112  [key=2, style=dotted];
m1_107 -> m1_113  [key=2, style=dotted];
m1_107 -> m1_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=2, style=dotted];
m1_115 -> m1_118  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_107  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m1_119 -> m1_120  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_30  [key=2, style=dotted];
m1_124 -> m1_112  [key=2, style=dotted];
m1_124 -> m1_113  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_108 -> m1_105  [color=blue, key=0, style=bold];
m1_114 -> m1_115  [key=0, style=solid];
m1_116 -> m1_114  [color=blue, key=0, style=bold];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=2, style=dotted];
m1_121 -> m1_119  [color=blue, key=0, style=bold];
m1_125 -> m1_123  [color=blue, key=0, style=bold];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_122  [key=2, style=dotted];
m1_128 -> m1_126  [color=blue, key=0, style=bold];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_138  [key=2, style=dotted];
m1_133 -> m1_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_133 -> m1_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_133 -> m1_150  [color=darkseagreen4, key=1, label=normalize, style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_97  [key=2, style=dotted];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_31  [key=2, style=dotted];
m1_134 -> m1_3  [key=2, style=dotted];
m1_134 -> m1_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_134 -> m1_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_3  [key=2, style=dotted];
m1_150 -> m1_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_145  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_145  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_57  [key=2, style=dotted];
m1_135 -> m1_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_132 -> m1_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_135  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_132 -> m1_159  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_137 -> m1_132  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_141 -> m1_139  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_144 -> m1_142  [color=blue, key=0, style=bold];
m1_146 -> m1_147  [key=0, style=solid];
m1_148 -> m1_146  [color=blue, key=0, style=bold];
m1_151 -> m1_149  [color=blue, key=0, style=bold];
m1_154 -> m1_152  [color=blue, key=0, style=bold];
m1_157 -> m1_155  [color=blue, key=0, style=bold];
m1_160 -> m1_158  [color=blue, key=0, style=bold];
m1_17 -> m1_185  [key=0, style=solid];
m1_17 -> m1_189  [color=crimson, key=0, style=bold];
m1_17 -> m1_190  [color=crimson, key=0, style=bold];
m1_17 -> m1_193  [color=crimson, key=0, style=bold];
m1_17 -> m1_195  [color=crimson, key=0, style=bold];
m1_17 -> m1_196  [color=crimson, key=0, style=bold];
m1_17 -> m1_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_17 -> m1_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_197  [key=0, style=solid];
m1_185 -> m1_15  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_183  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_183  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_202  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_181  [key=2, style=dotted];
m1_186 -> m1_189  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_186 -> m1_194  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_199  [key=2, style=dotted];
m1_192 -> m1_200  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_198  [key=2, style=dotted];
m1_187 -> m1_191  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_201  [key=2, style=dotted];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_191  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_194  [key=0, style=solid];
m1_197 -> m1_17  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_203 -> m1_28  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m1_204 -> m1_55  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_205 -> m1_69  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m1_206 -> m1_74  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_207 -> m1_81  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m1_208 -> m1_88  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_209 -> m1_91  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m1_210 -> m1_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m1_211 -> m1_107  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m1_211 -> m1_115  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m1_212 -> m1_124  [color=darkseagreen4, key=1, label=indexes, style=dashed];
m1_213 -> m1_133  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_140  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_143  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_134  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_150  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_153  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_156  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_135  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_213 -> m1_159  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_214 -> m1_133  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_215 -> m1_134  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_216 -> m1_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_216 -> m1_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_216 -> m1_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_216 -> m1_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_216 -> m1_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_216 -> m1_159  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_217 -> m1_150  [color=darkseagreen4, key=1, label=normalize, style=dashed];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_155  [color=darkseagreen4, key=1, label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", style=dashed];
m2_149 -> m2_152  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_155  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TValue, TMessage>", style=dashed];
m2_150 -> m2_152  [color=darkseagreen4, key=1, label=successFunc, style=dashed];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_118  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_158  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_153 -> m2_149  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_50  [color=blue, key=0, style=bold];
m2_223 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_185  [key=2, style=dotted];
m2_225 -> m2_223  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_75  [key=2, style=dotted];
m2_107 -> m2_18  [key=2, style=dotted];
m2_107 -> m2_90  [key=2, style=dotted];
m2_108 -> m2_106  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_39 -> m2_44  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_18  [key=2, style=dotted];
m2_41 -> m2_45  [key=0, style=solid];
m2_41 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_45  [key=0, style=solid];
m2_43 -> m2_46  [key=2, style=dotted];
m2_45 -> m2_39  [color=blue, key=0, style=bold];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_101  [key=0, style=solid];
m2_98 -> m2_75  [key=2, style=dotted];
m2_98 -> m2_18  [key=2, style=dotted];
m2_98 -> m2_102  [key=2, style=dotted];
m2_98 -> m2_90  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_78  [key=2, style=dotted];
m2_101 -> m2_97  [color=blue, key=0, style=bold];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_261  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_259 -> m2_263  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_260 -> m2_261  [key=0, style=solid];
m2_260 -> m2_263  [key=0, style=solid];
m2_261 -> m2_262  [key=0, style=solid];
m2_263 -> m2_264  [key=0, style=solid];
m2_262 -> m2_265  [key=0, style=solid];
m2_262 -> m2_133  [key=2, style=dotted];
m2_262 -> m2_64  [key=2, style=dotted];
m2_262 -> m2_65  [key=2, style=dotted];
m2_262 -> m2_66  [key=2, style=dotted];
m2_262 -> m2_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_264 -> m2_265  [key=0, style=solid];
m2_265 -> m2_259  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_9  [color=blue, key=0, style=bold];
m2_256 -> m2_257  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_257 -> m2_179  [key=2, style=dotted];
m2_258 -> m2_256  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_121  [color=darkseagreen4, key=1, label="System.Func<RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>, TResult>", style=dashed];
m2_118 -> m2_122  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_118 -> m2_123  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label=ok, style=dashed];
m2_121 -> m2_124  [key=0, style=solid];
m2_121 -> m2_125  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_124 -> m2_118  [color=blue, key=0, style=bold];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_228  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>", style=dashed];
m2_226 -> m2_236  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>, TMessage>", style=dashed];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_236  [key=0, style=solid];
m2_228 -> m2_229  [key=0, style=solid];
m2_236 -> m2_237  [key=0, style=solid];
m2_229 -> m2_230  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_223  [key=2, style=dotted];
m2_230 -> m2_232  [color=darkseagreen4, key=1, label=result1, style=dashed];
m2_230 -> m2_234  [color=darkseagreen4, key=1, label=result1, style=dashed];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_234  [key=0, style=solid];
m2_232 -> m2_233  [key=0, style=solid];
m2_234 -> m2_235  [key=0, style=solid];
m2_233 -> m2_238  [key=0, style=solid];
m2_233 -> m2_75  [key=2, style=dotted];
m2_233 -> m2_18  [key=2, style=dotted];
m2_235 -> m2_238  [key=0, style=solid];
m2_235 -> m2_78  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_237 -> m2_78  [key=2, style=dotted];
m2_238 -> m2_226  [color=blue, key=0, style=bold];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_251  [color=darkseagreen4, key=1, label="System.Func<TSuccess, TValue, TResult>", style=dashed];
m2_242 -> m2_245  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_242 -> m2_246  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_243  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m2_243 -> m2_251  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m2_243 -> m2_254  [color=darkseagreen4, key=1, label=curriedMapper, style=dashed];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_149  [key=2, style=dotted];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_219  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_254  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_244 -> m2_246  [color=darkseagreen4, key=1, label=liftedMapper, style=dashed];
m2_247 -> m2_242  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_18  [color=blue, key=0, style=bold];
m2_276 -> m2_277  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [key=2, style=dotted];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_71  [key=2, style=dotted];
m2_74 -> m2_72  [color=blue, key=0, style=bold];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [key=2, style=dotted];
m2_131 -> m2_64  [key=2, style=dotted];
m2_131 -> m2_65  [key=2, style=dotted];
m2_131 -> m2_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_130 -> m2_131  [key=0, style=solid];
m2_132 -> m2_130  [color=blue, key=0, style=bold];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_71  [key=2, style=dotted];
m2_136 -> m2_134  [color=blue, key=0, style=bold];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_75  [key=2, style=dotted];
m2_143 -> m2_18  [key=2, style=dotted];
m2_143 -> m2_145  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_78  [key=2, style=dotted];
m2_147 -> m2_145  [key=2, style=dotted];
m2_142 -> m2_143  [key=0, style=solid];
m2_144 -> m2_142  [color=blue, key=0, style=bold];
m2_146 -> m2_147  [key=0, style=solid];
m2_148 -> m2_146  [color=blue, key=0, style=bold];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_125  [key=2, style=dotted];
m2_155 -> m2_137  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_78  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_156 -> m2_154  [color=blue, key=0, style=bold];
m2_157 -> m2_158  [key=0, style=solid];
m2_159 -> m2_157  [color=blue, key=0, style=bold];
m2_163 -> m2_164  [key=0, style=solid];
m2_164 -> m2_165  [key=0, style=solid];
m2_165 -> m2_163  [color=blue, key=0, style=bold];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_191  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_192  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_194  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_195  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_196  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_198  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_189 -> m2_199  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_190 -> m2_191  [key=0, style=solid];
m2_190 -> m2_194  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_193  [color=darkseagreen4, key=1, label=ok1, style=dashed];
m2_192 -> m2_193  [key=0, style=solid];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_198  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_197  [color=darkseagreen4, key=1, label=m1, style=dashed];
m2_196 -> m2_197  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_200  [color=darkseagreen4, key=1, label=bad1, style=dashed];
m2_199 -> m2_200  [key=0, style=solid];
m2_193 -> m2_201  [key=0, style=solid];
m2_193 -> m2_75  [key=2, style=dotted];
m2_193 -> m2_18  [key=2, style=dotted];
m2_193 -> m2_145  [key=2, style=dotted];
m2_197 -> m2_201  [key=0, style=solid];
m2_197 -> m2_78  [key=2, style=dotted];
m2_197 -> m2_145  [key=2, style=dotted];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_78  [key=2, style=dotted];
m2_200 -> m2_145  [key=2, style=dotted];
m2_201 -> m2_189  [color=blue, key=0, style=bold];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_219  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_182  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_249 -> m2_248  [color=blue, key=0, style=bold];
m2_250 -> m2_251  [key=0, style=solid];
m2_252 -> m2_250  [color=blue, key=0, style=bold];
m2_253 -> m2_254  [key=0, style=solid];
m2_255 -> m2_253  [color=blue, key=0, style=bold];
m2_266 -> m2_267  [key=0, style=solid];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_71  [key=2, style=dotted];
m2_268 -> m2_266  [color=blue, key=0, style=bold];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_71  [key=2, style=dotted];
m2_278 -> m2_276  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_75  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_28 -> m2_34  [key=0, style=solid];
m2_28 -> m2_36  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_29  [key=2, style=dotted];
m2_36 -> m2_38  [key=2, style=dotted];
m2_35 -> m2_37  [key=0, style=solid];
m2_37 -> m2_28  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_61  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_60 -> m2_63  [key=0, style=solid];
m2_60 -> m2_64  [key=2, style=dotted];
m2_60 -> m2_65  [key=2, style=dotted];
m2_60 -> m2_66  [key=2, style=dotted];
m2_60 -> m2_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=2, style=dotted];
m2_62 -> m2_65  [key=2, style=dotted];
m2_62 -> m2_67  [key=2, style=dotted];
m2_62 -> m2_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_56  [color=blue, key=0, style=bold];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_205  [color=darkseagreen4, key=1, label="System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>", style=dashed];
m2_202 -> m2_207  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_202 -> m2_208  [color=darkseagreen4, key=1, label="System.Action<System.Collections.Generic.IEnumerable<TMessage>>", style=dashed];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_205  [color=darkseagreen4, key=1, label=ok, style=dashed];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_210  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_211  [key=2, style=dotted];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_207  [key=0, style=solid];
m2_206 -> m2_209  [key=0, style=solid];
m2_209 -> m2_202  [color=blue, key=0, style=bold];
m2_239 -> m2_240  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_149  [key=2, style=dotted];
m2_241 -> m2_239  [color=blue, key=0, style=bold];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_115  [color=blue, key=0, style=bold];
m2_220 -> m2_221  [key=0, style=solid];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_179  [key=2, style=dotted];
m2_222 -> m2_220  [color=blue, key=0, style=bold];
m2_185 -> m2_186  [key=0, style=solid];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_188  [key=2, style=dotted];
m2_186 -> m2_179  [key=2, style=dotted];
m2_186 -> m2_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_187 -> m2_185  [color=blue, key=0, style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_78  [key=2, style=dotted];
m2_114 -> m2_112  [color=blue, key=0, style=bold];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_75  [key=2, style=dotted];
m2_92 -> m2_18  [key=2, style=dotted];
m2_93 -> m2_91  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_75  [key=2, style=dotted];
m2_88 -> m2_18  [key=2, style=dotted];
m2_88 -> m2_90  [key=2, style=dotted];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_84 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_78  [key=2, style=dotted];
m2_86 -> m2_84  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_3  [color=blue, key=0, style=bold];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_281  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_279 -> m2_283  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_283  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_283 -> m2_284  [key=0, style=solid];
m2_282 -> m2_285  [key=0, style=solid];
m2_284 -> m2_285  [key=0, style=solid];
m2_285 -> m2_279  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=other, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_28  [key=2, style=dotted];
m2_27 -> m2_22  [color=blue, key=0, style=bold];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_75  [key=2, style=dotted];
m2_95 -> m2_18  [key=2, style=dotted];
m2_96 -> m2_94  [color=blue, key=0, style=bold];
m2_160 -> m2_161  [key=0, style=solid];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_149  [key=2, style=dotted];
m2_161 -> m2_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_162 -> m2_160  [color=blue, key=0, style=bold];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_168  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m2_166 -> m2_169  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m2_166 -> m2_171  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m2_166 -> m2_172  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m2_166 -> m2_173  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m2_166 -> m2_174  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m2_166 -> m2_175  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Func<TValue, TSuccess>, TMessage>", style=dashed];
m2_166 -> m2_176  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TValue, TMessage>", style=dashed];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_171  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_170  [color=darkseagreen4, key=1, label=ok1, style=dashed];
m2_169 -> m2_170  [key=0, style=solid];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_173  [key=0, style=solid];
m2_172 -> m2_178  [key=0, style=solid];
m2_172 -> m2_78  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [key=0, style=solid];
m2_174 -> m2_178  [key=0, style=solid];
m2_174 -> m2_78  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_177  [color=darkseagreen4, key=1, label=bad1, style=dashed];
m2_176 -> m2_177  [key=0, style=solid];
m2_170 -> m2_178  [key=0, style=solid];
m2_170 -> m2_75  [key=2, style=dotted];
m2_170 -> m2_18  [key=2, style=dotted];
m2_170 -> m2_125  [key=2, style=dotted];
m2_170 -> m2_145  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_78  [key=2, style=dotted];
m2_177 -> m2_145  [key=2, style=dotted];
m2_178 -> m2_166  [color=blue, key=0, style=bold];
m2_179 -> m2_180  [key=0, style=solid];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_103  [key=2, style=dotted];
m2_180 -> m2_166  [key=2, style=dotted];
m2_181 -> m2_179  [color=blue, key=0, style=bold];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_179  [key=2, style=dotted];
m2_183 -> m2_166  [key=2, style=dotted];
m2_184 -> m2_182  [color=blue, key=0, style=bold];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_271  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_269 -> m2_273  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_273  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_273 -> m2_274  [key=0, style=solid];
m2_272 -> m2_275  [key=0, style=solid];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_133  [key=2, style=dotted];
m2_274 -> m2_64  [key=2, style=dotted];
m2_274 -> m2_65  [key=2, style=dotted];
m2_274 -> m2_67  [key=2, style=dotted];
m2_274 -> m2_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_275 -> m2_269  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=2, style=dotted];
m2_32 -> m2_30  [color=blue, key=0, style=bold];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_128  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_118  [key=2, style=dotted];
m2_129 -> m2_126  [color=blue, key=0, style=bold];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_137 -> m2_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_137 -> m2_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_137 -> m2_140  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_143  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_138 -> m2_140  [color=darkseagreen4, key=1, label=successFunc, style=dashed];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_118  [key=2, style=dotted];
m2_141 -> m2_137  [color=blue, key=0, style=bold];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_215  [color=darkseagreen4, key=1, label="System.Func<TSuccess, System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m2_212 -> m2_216  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_212 -> m2_217  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<TMessage>, TResult>", style=dashed];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_215  [color=darkseagreen4, key=1, label=ok, style=dashed];
m2_215 -> m2_218  [key=0, style=solid];
m2_215 -> m2_219  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_125  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_216  [key=0, style=solid];
m2_218 -> m2_212  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_75  [key=2, style=dotted];
m2_110 -> m2_18  [key=2, style=dotted];
m2_111 -> m2_109  [color=blue, key=0, style=bold];
m2_103 -> m2_104  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_75  [key=2, style=dotted];
m2_104 -> m2_18  [key=2, style=dotted];
m2_104 -> m2_90  [key=2, style=dotted];
m2_105 -> m2_103  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_78  [key=2, style=dotted];
m2_83 -> m2_81  [color=blue, key=0, style=bold];
m2_286 -> m2_19  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_286 -> m2_20  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_286 -> m2_25  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_286 -> m2_26  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_286 -> m2_31  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_286 -> m2_36  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.OkPair<TSuccess, TMessage>", style=dashed];
m2_287 -> m2_54  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_287 -> m2_57  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_287 -> m2_59  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_287 -> m2_61  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m2_288 -> m2_76  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Ok<TSuccess, TMessage>", style=dashed];
m2_289 -> m2_79  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Bad<TSuccess, TMessage>", style=dashed];
m2_290 -> m2_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_290 -> m2_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TMessage>", style=dashed];
m2_291 -> m2_155  [color=darkseagreen4, key=1, label="System.Func<TValue, RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>>", style=dashed];
m2_292 -> m2_251  [color=darkseagreen4, key=1, label="System.Func<TSuccess, TValue, TResult>", style=dashed];
m2_293 -> m2_251  [color=darkseagreen4, key=1, label=TSuccess, style=dashed];
m2_294 -> m2_254  [color=darkseagreen4, key=1, label=curriedMapper, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_3  [color=red, key=0, style=solid];
m3_2 -> m3_5  [color=red, key=2, style=dotted];
m3_2 -> m3_6  [color=red, key=2, style=dotted];
m3_2 -> m3_7  [color=red, key=2, style=dotted];
m3_2 -> m3_8  [color=red, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_11  [color=red, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_14  [color=red, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_17  [key=0, style=solid];
m3_4 -> m3_18  [color=crimson, key=0, style=bold];
m3_4 -> m3_22  [color=crimson, key=0, style=bold];
m3_4 -> m3_23  [color=crimson, key=0, style=bold];
m3_4 -> m3_26  [color=crimson, key=0, style=bold];
m3_4 -> m3_27  [color=crimson, key=0, style=bold];
m3_4 -> m3_28  [color=crimson, key=0, style=bold];
m3_4 -> m3_30  [color=crimson, key=0, style=bold];
m3_4 -> m3_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m3_4 -> m3_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_4 -> m3_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m3_4 -> m3_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_4 -> m3_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=0, style=solid];
m3_17 -> m3_32  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_39  [key=2, style=dotted];
m3_22 -> m3_40  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_48  [key=2, style=dotted];
m3_26 -> m3_49  [key=2, style=dotted];
m3_26 -> m3_40  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_50  [key=2, style=dotted];
m3_28 -> m3_51  [key=2, style=dotted];
m3_28 -> m3_49  [key=2, style=dotted];
m3_28 -> m3_40  [key=2, style=dotted];
m3_28 -> m3_36  [key=2, style=dotted];
m3_28 -> m3_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_29  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_33  [key=2, style=dotted];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_19 -> m3_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_19 -> m3_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_19 -> m3_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_19 -> m3_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_34  [key=2, style=dotted];
m3_20 -> m3_35  [key=2, style=dotted];
m3_20 -> m3_36  [key=2, style=dotted];
m3_20 -> m3_37  [key=2, style=dotted];
m3_20 -> m3_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_20 -> m3_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m3_20 -> m3_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m3_20 -> m3_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_41  [key=2, style=dotted];
m3_24 -> m3_42  [key=2, style=dotted];
m3_24 -> m3_43  [key=2, style=dotted];
m3_24 -> m3_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_28  [key=0, style=solid];
m3_25 -> m3_44  [key=2, style=dotted];
m3_25 -> m3_45  [key=2, style=dotted];
m3_25 -> m3_46  [key=2, style=dotted];
m3_25 -> m3_41  [key=2, style=dotted];
m3_25 -> m3_47  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_41  [key=2, style=dotted];
m3_29 -> m3_46  [key=2, style=dotted];
m3_29 -> m3_4  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [key=0, style=solid];
m3_21 -> m3_38  [key=2, style=dotted];
m3_31 -> m3_4  [color=blue, key=0, style=bold];
m3_59 -> m3_60  [key=0, style=solid];
m3_8 -> m3_9  [color=red, key=0, style=solid];
m3_11 -> m3_12  [color=red, key=0, style=solid];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_10 -> m3_8  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [color=red, key=0, style=solid];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_62  [key=2, style=dotted];
m3_60 -> m3_63  [key=2, style=dotted];
m3_60 -> m3_64  [key=2, style=dotted];
m3_60 -> m3_40  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_52  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_58  [key=2, style=dotted];
m3_57 -> m3_55  [color=blue, key=0, style=bold];
m3_61 -> m3_59  [color=blue, key=0, style=bold];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_44  [key=2, style=dotted];
m3_76 -> m3_48  [key=2, style=dotted];
m3_76 -> m3_49  [key=2, style=dotted];
m3_76 -> m3_64  [key=2, style=dotted];
m3_77 -> m3_75  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_70  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_65 -> m3_71  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_69  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_72  [key=0, style=solid];
m3_70 -> m3_44  [key=2, style=dotted];
m3_71 -> m3_73  [key=0, style=solid];
m3_71 -> m3_74  [key=2, style=dotted];
m3_71 -> m3_49  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_68 -> m3_73  [key=0, style=solid];
m3_68 -> m3_49  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_64  [key=2, style=dotted];
m3_73 -> m3_65  [color=blue, key=0, style=bold];
m3_78 -> m3_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_1  [color=darkseagreen4, key=1, label="CommandLine.Text.Example<T>", style=dashed];
m4_6 -> m4_2  [color=darkseagreen4, key=1, label="CommandLine.Text.Example<T>", style=dashed];
m4_6 -> m4_3  [color=darkseagreen4, key=1, label="CommandLine.Text.Example<T>", style=dashed];
m4_6 -> m4_4  [color=darkseagreen4, key=1, label="CommandLine.Text.Example<T>", style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_3  [key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_115  [key=2, style=dotted];
m5_127 -> m5_39  [key=2, style=dotted];
m5_127 -> m5_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_128 -> m5_126  [color=blue, key=0, style=bold];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_88 -> m5_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_88 -> m5_94  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_88 -> m5_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_88 -> m5_132  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_37  [key=2, style=dotted];
m5_89 -> m5_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_89 -> m5_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_89 -> m5_99  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_89 -> m5_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_93  [key=0, style=solid];
m5_92 -> m5_100  [key=0, style=solid];
m5_92 -> m5_102  [key=2, style=dotted];
m5_92 -> m5_103  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_104  [key=2, style=dotted];
m5_94 -> m5_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m5_94 -> m5_98  [color=darkseagreen4, key=1, label=sep, style=dashed];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_105  [key=2, style=dotted];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label=e, style=dashed];
m5_98 -> m5_97  [key=0, style=solid];
m5_98 -> m5_107  [key=2, style=dotted];
m5_98 -> m5_103  [key=2, style=dotted];
m5_98 -> m5_46  [key=2, style=dotted];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_108  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_54  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_95 -> m5_98  [color=darkseagreen4, key=1, label=format, style=dashed];
m5_95 -> m5_95  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_99  [key=0, style=solid];
m5_97 -> m5_106  [key=2, style=dotted];
m5_101 -> m5_88  [color=blue, key=0, style=bold];
m5_41 -> m5_152  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m5_41 -> m5_162  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_139  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m5_138 -> m5_139  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=2, style=dotted];
m5_139 -> m5_125  [key=2, style=dotted];
m5_139 -> m5_142  [key=2, style=dotted];
m5_139 -> m5_54  [key=2, style=dotted];
m5_140 -> m5_137  [color=blue, key=0, style=bold];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_151 -> m5_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_151 -> m5_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_151 -> m5_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=0, style=solid];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_156  [key=0, style=solid];
m5_154 -> m5_36  [key=2, style=dotted];
m5_154 -> m5_148  [key=2, style=dotted];
m5_154 -> m5_149  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_158  [key=0, style=solid];
m5_156 -> m5_36  [key=2, style=dotted];
m5_156 -> m5_164  [key=2, style=dotted];
m5_156 -> m5_165  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_160  [key=0, style=solid];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_162  [key=0, style=solid];
m5_160 -> m5_105  [key=2, style=dotted];
m5_160 -> m5_106  [key=2, style=dotted];
m5_153 -> m5_163  [key=0, style=solid];
m5_155 -> m5_163  [key=0, style=solid];
m5_157 -> m5_163  [key=0, style=solid];
m5_159 -> m5_163  [key=0, style=solid];
m5_161 -> m5_163  [key=0, style=solid];
m5_162 -> m5_163  [key=0, style=solid];
m5_163 -> m5_151  [color=blue, key=0, style=bold];
m5_129 -> m5_130  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_11  [color=blue, key=0, style=bold];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=2, style=dotted];
m5_61 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_65  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_51  [key=2, style=dotted];
m5_80 -> m5_82  [key=2, style=dotted];
m5_80 -> m5_83  [key=2, style=dotted];
m5_80 -> m5_50  [key=2, style=dotted];
m5_80 -> m5_46  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [key=2, style=dotted];
m5_57 -> m5_46  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_72  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=2, style=dotted];
m5_85 -> m5_50  [key=2, style=dotted];
m5_85 -> m5_46  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_58 -> m5_56  [color=blue, key=0, style=bold];
m5_62 -> m5_60  [color=blue, key=0, style=bold];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_71 -> m5_69  [color=blue, key=0, style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_77 -> m5_78  [key=0, style=solid];
m5_78 -> m5_76  [color=blue, key=0, style=bold];
m5_81 -> m5_79  [color=blue, key=0, style=bold];
m5_86 -> m5_84  [color=blue, key=0, style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_102  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_111 -> m5_109  [color=blue, key=0, style=bold];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_119  [key=2, style=dotted];
m5_117 -> m5_120  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_72  [key=2, style=dotted];
m5_122 -> m5_124  [key=2, style=dotted];
m5_122 -> m5_125  [key=2, style=dotted];
m5_121 -> m5_122  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_118 -> m5_116  [color=blue, key=0, style=bold];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_130 -> m5_131  [key=0, style=solid];
m5_131 -> m5_129  [color=blue, key=0, style=bold];
m5_65 -> m5_65  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m5_135 -> m5_132  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m5_102 -> m5_112  [key=0, style=solid];
m5_102 -> m5_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_102 -> m5_88  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_102 -> m5_95  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_112 -> m5_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m5_112 -> m5_112  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_115  [key=2, style=dotted];
m5_113 -> m5_39  [key=2, style=dotted];
m5_113 -> m5_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_114 -> m5_102  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_10 -> m5_7  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
m5_10 -> m5_8  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration", style=bold];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_17  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m5_13 -> m5_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_13 -> m5_22  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_13 -> m5_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_35  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_36  [key=2, style=dotted];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_19 -> m5_22  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_40  [key=2, style=dotted];
m5_22 -> m5_41  [key=2, style=dotted];
m5_22 -> m5_42  [key=2, style=dotted];
m5_22 -> m5_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_22 -> m5_22  [color=darkseagreen4, key=1, label=info, style=dashed];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label=specs, style=dashed];
m5_15 -> m5_33  [key=0, style=solid];
m5_15 -> m5_34  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_3  [key=2, style=dotted];
m5_16 -> m5_18  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_16 -> m5_25  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_16 -> m5_27  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_16 -> m5_29  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_16 -> m5_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_18 -> m5_19  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_43  [key=2, style=dotted];
m5_25 -> m5_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_28  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m5_25 -> m5_29  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_45  [key=2, style=dotted];
m5_27 -> m5_46  [key=2, style=dotted];
m5_27 -> m5_47  [key=2, style=dotted];
m5_27 -> m5_48  [key=2, style=dotted];
m5_27 -> m5_49  [key=2, style=dotted];
m5_27 -> m5_50  [key=2, style=dotted];
m5_27 -> m5_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_27 -> m5_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_27 -> m5_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_53  [key=2, style=dotted];
m5_29 -> m5_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_37  [key=2, style=dotted];
m5_20 -> m5_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_20 -> m5_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_38  [key=2, style=dotted];
m5_21 -> m5_39  [key=2, style=dotted];
m5_21 -> m5_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_43  [key=2, style=dotted];
m5_23 -> m5_44  [key=2, style=dotted];
m5_23 -> m5_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_23 -> m5_23  [color=darkseagreen4, key=1, label=info, style=dashed];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_43  [key=2, style=dotted];
m5_26 -> m5_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_26 -> m5_26  [color=darkseagreen4, key=1, label=info, style=dashed];
m5_26 -> m5_30  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m5_26 -> m5_31  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_44  [key=2, style=dotted];
m5_24 -> m5_24  [color=darkseagreen4, key=1, label=info, style=dashed];
m5_24 -> m5_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m5_24 -> m5_27  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_45  [key=2, style=dotted];
m5_28 -> m5_51  [key=2, style=dotted];
m5_28 -> m5_52  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_45  [key=2, style=dotted];
m5_30 -> m5_51  [key=2, style=dotted];
m5_30 -> m5_52  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_53  [key=2, style=dotted];
m5_31 -> m5_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_54  [key=2, style=dotted];
m5_32 -> m5_55  [key=2, style=dotted];
m5_33 -> m5_13  [color=blue, key=0, style=bold];
m5_132 -> m5_133  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_37  [key=2, style=dotted];
m5_133 -> m5_135  [key=2, style=dotted];
m5_133 -> m5_50  [key=2, style=dotted];
m5_133 -> m5_88  [key=2, style=dotted];
m5_133 -> m5_136  [key=2, style=dotted];
m5_133 -> m5_54  [key=2, style=dotted];
m5_134 -> m5_132  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_10  [color=darkorchid, key=3, label="method methodReturn string FormatCommandLine", style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_9 -> m5_7  [color=blue, key=0, style=bold];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_143 -> m5_146  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_146  [key=0, style=solid];
m5_144 -> m5_36  [key=2, style=dotted];
m5_144 -> m5_148  [key=2, style=dotted];
m5_144 -> m5_149  [key=2, style=dotted];
m5_145 -> m5_147  [key=0, style=solid];
m5_145 -> m5_150  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_147 -> m5_143  [color=blue, key=0, style=bold];
m5_166 -> m5_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_166 -> m5_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_166 -> m5_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m5_167 -> m5_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_168 -> m5_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m5_169 -> m5_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_170 -> m5_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m5_171 -> m5_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
