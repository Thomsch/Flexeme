digraph  {
n670 [label="CommandLine.HelpOptionAttribute", span=""];
n671 [label="CommandLine.OptionAttribute", span=""];
n672 [label="CommandLine.OptionListAttribute", span=""];
n673 [label="CommandLine.ValueListAttribute", span=""];
n674 [label="CommandLine.ArgumentParser", span=""];
n675 [label="CommandLine.BadOptionInfo", span=""];
n676 [label="CommandLine.LongOptionParser", span=""];
n677 [label="CommandLine.OneCharStringEnumerator", span=""];
n678 [label="CommandLine.OptionGroupParser", span=""];
n679 [label="CommandLine.OptionInfo", span=""];
n680 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n681 [label="CommandLine.OptionMap", span=""];
n682 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n683 [label="CommandLine.ParsingError", span=""];
n684 [label="CommandLine.PostParsingState", span=""];
n685 [label="CommandLine.StringArrayEnumerator", span=""];
n686 [label="CommandLine.TargetWrapper", span=""];
n687 [label="CommandLine.CommandLineOptionsBase", span=""];
n688 [label="CommandLine.CommandLineParserSettings", span=""];
n689 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="106-106"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="HelpText = _defaultHelpText", span="109-109"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="106-106"];
n3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="118-118"];
n4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="ShortName = shortName", span="120-120"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="LongName = longName", span="121-121"];
n6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="HelpText = _defaultHelpText", span="122-122"];
n7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="118-118"];
n8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="136-136"];
n9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = null", span="139-139"];
n10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="var method = pair.Left", span="141-141"];
n13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="text = (string)method.Invoke(target, null)", span="145-145"];
n11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="!CheckMethodSignature(method)", span="142-142"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="throw new MemberAccessException();", span="143-143"];
n15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="148-148"];
n14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="136-136"];
n16 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="150-150"];
n19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="148-148"];
n20 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n21 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="164-164"];
n22 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="164-164"];
n23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="186-186"];
n24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="!string.IsNullOrEmpty(shortName)", span="188-188"];
n25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName = shortName", span="189-189"];
n26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="!string.IsNullOrEmpty(longName)", span="190-190"];
n27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName = longName", span="191-191"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="base.ShortName = shortName", span="196-196"];
n31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="base.LongName = longName", span="197-197"];
n33 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="_uniqueName == null", span="193-193"];
n29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="throw new InvalidOperationException();", span="194-194"];
n32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="186-186"];
n34 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="240-240"];
n36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Separator = ':'", span="243-243"];
n37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="240-240"];
n38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="252-252"];
n39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Separator = separator", span="255-255"];
n40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="252-252"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="276-276"];
n42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="MaximumElements = -1", span="278-278"];
n43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="276-276"];
n44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="286-286"];
n45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="concreteType == null", span="289-289"];
n47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="292-292"];
n49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="_concreteType = concreteType", span="295-295"];
n46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="throw new ArgumentNullException(''concreteType'');", span="290-290"];
n48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="throw new CommandLineParserException(''The types are incompatible.'');", span="293-293"];
n52 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="286-286"];
n53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1478-1478"];
n51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="310-310"];
n55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Type concreteType", span="312-312"];
n56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="var property = GetProperty(target, out concreteType)", span="313-313"];
n59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="318-318"];
n60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="return (IList<string>)property.GetValue(target, null);", span="320-320"];
n57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="property == null || concreteType == null", span="315-315"];
n62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="337-337"];
n58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="return null;", span="316-316"];
n63 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="310-310"];
n65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="323-323"];
n67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="325-325"];
n68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="list == null || list.Count == 0", span="326-326"];
n75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1784-1784"];
n70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="list.Count > 1", span="329-329"];
n72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="var pairZero = list[0]", span="332-332"];
n69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="return null;", span="327-327"];
n71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="throw new InvalidOperationException();", span="330-330"];
n73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="return pairZero.Right;", span="334-334"];
n74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="323-323"];
n76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="concreteType = null", span="339-339"];
n77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="341-341"];
n78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="list == null || list.Count == 0", span="342-342"];
n80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="list.Count > 1", span="345-345"];
n82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="var pairZero = list[0]", span="348-348"];
n79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="return null;", span="343-343"];
n81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="throw new InvalidOperationException();", span="346-346"];
n83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="concreteType = pairZero.Right.ConcreteType", span="349-349"];
n84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="return pairZero.Left;", span="351-351"];
n85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="337-337"];
n86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="367-367"];
n87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="this.PostParsingState = new List<ParsingError>()", span="369-369"];
n88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="367-367"];
n89 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="372-372"];
n91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="372-372"];
n92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="376-376"];
n93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="380-380"];
n94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="376-376"];
n95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1227-1227"];
n96 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n97 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="383-383"];
n98 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="385-385"];
n100 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument[0] == '-' && argument[1] == '-'", span="388-388"];
n102 [cluster="CommandLine.ArgumentParser.Create(string)", label="argument[0] == '-'", span="391-391"];
n99 [cluster="CommandLine.ArgumentParser.Create(string)", label="return null;", span="386-386"];
n106 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n101 [cluster="CommandLine.ArgumentParser.Create(string)", label="return new LongOptionParser();", span="389-389"];
n103 [cluster="CommandLine.ArgumentParser.Create(string)", label="return new OptionGroupParser();", span="392-392"];
n104 [cluster="CommandLine.ArgumentParser.Create(string)", label="return null;", span="394-394"];
n105 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="383-383"];
n107 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="522-522"];
n108 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="696-696"];
n109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="397-397"];
n110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="argument.Length > 0", span="399-399"];
n111 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="400-400"];
n112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="return true;", span="402-402"];
n113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="397-397"];
n114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="412-412"];
n115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="IList<string> list = new List<string>()", span="414-414"];
n116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="ae.MoveNext()", span="416-416"];
n117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="IsInputValue(ae.Current)", span="418-418"];
n118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="list.Add(ae.Current)", span="419-419"];
n119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="!ae.MovePrevious()", span="423-423"];
n121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="return list;", span="426-426"];
n123 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="513-513"];
n124 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="throw new CommandLineParserException();", span="424-424"];
n125 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="515-515"];
n122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="412-412"];
n126 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1473-1473"];
n127 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="429-429"];
n128 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="431-431"];
n129 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="429-429"];
n130 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n131 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="434-434"];
n132 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="436-436"];
n133 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="434-434"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="439-439"];
n135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="return BooleanToParserState(value, false);", span="441-441"];
n136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="439-439"];
n137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="444-444"];
n138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="value && !addMoveNextIfTrue", span="446-446"];
n140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="value && addMoveNextIfTrue", span="448-448"];
n139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Success;", span="447-447"];
n141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Success | ParserState.MoveOnNextElement;", span="449-449"];
n142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="return ParserState.Failure;", span="451-451"];
n143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="444-444"];
n144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="454-454"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="!option.IsAttributeArrayCompatible", span="456-456"];
n146 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="throw new CommandLineParserException();", span="457-457"];
n147 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="454-454"];
n148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="460-460"];
n149 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="!option.IsArray && option.IsAttributeArrayCompatible", span="462-462"];
n150 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="throw new CommandLineParserException();", span="463-463"];
n151 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="460-460"];
n152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="472-472"];
n153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="472-472"];
n154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="476-476"];
n155 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="ShortName = shortName", span="478-478"];
n156 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="LongName = longName", span="479-479"];
n157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="476-476"];
n158 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="508-508"];
n159 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="508-508"];
n160 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="513-513"];
n161 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="515-515"];
n162 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="522-522"];
n163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="527-527"];
n164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="529-529"];
n165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var option = map[parts[0]]", span="530-530"];
n172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="542-542"];
n176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(parts[1], options)", span="549-549"];
n181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="559-559"];
n183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="562-562"];
n188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="573-573"];
n193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="583-583"];
n194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="585-585"];
n200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(true, options)", span="598-598"];
n205 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n206 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 2", span="545-545"];
n182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="items.Insert(0, parts[1])", span="560-560"];
n198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="parts.Length == 2", span="595-595"];
n166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var valueSetting = false", span="531-531"];
n167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option == null", span="533-533"];
n169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option.IsDefined = true", span="536-536"];
n170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="538-538"];
n171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsBoolean", span="540-540"];
n175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="547-547"];
n178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="551-551"];
n180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="557-557"];
n185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="564-564"];
n187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="571-571"];
n190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="575-575"];
n192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="581-581"];
n196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="587-587"];
n202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="600-600"];
n168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="534-534"];
n173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="543-543"];
n177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="550-550"];
n207 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="844-844"];
n179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="553-553"];
n208 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="563-563"];
n209 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="855-855"];
n186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="566-566"];
n189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="574-574"];
n191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="577-577"];
n195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="586-586"];
n197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="589-589"];
n199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="596-596"];
n201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="599-599"];
n210 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="938-938"];
n203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="602-602"];
n204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="527-527"];
n211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="613-613"];
n212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Assumes.NotNullOrEmpty(value, ''value'')", span="615-615"];
n213 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="_data = value", span="617-617"];
n216 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1769-1769"];
n214 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="_index = -1", span="618-618"];
n215 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="613-613"];
n217 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="657-657"];
n218 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="_index = -1", span="659-659"];
n219 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="657-657"];
n220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="662-662"];
n221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index < (_data.Length - 1)", span="664-664"];
n222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index++", span="666-666"];
n225 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_index = _data.Length", span="670-670"];
n223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="_currentElement = _data.Substring(_index, 1)", span="667-667"];
n224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="return true;", span="668-668"];
n228 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="return false;", span="672-672"];
n227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="662-662"];
n229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="675-675"];
n230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="_index == -1", span="677-677"];
n231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="throw new InvalidOperationException();", span="678-678"];
n232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="_index > _data.Length", span="680-680"];
n233 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="throw new InvalidOperationException();", span="681-681"];
n234 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="return _data.Substring(_index + 1);", span="683-683"];
n235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="675-675"];
n236 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="686-686"];
n237 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="throw new NotSupportedException();", span="688-688"];
n238 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="686-686"];
n239 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n240 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="691-691"];
n241 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="691-691"];
n242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="698-698"];
n243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var valueSetting = false", span="700-700"];
n244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="702-702"];
n246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var option = map[group.Current]", span="705-705"];
n252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="argumentEnumerator.IsLast && group.IsLast", span="715-715"];
n256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="722-722"];
n261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="732-732"];
n263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="735-735"];
n267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="743-743"];
n270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="749-749"];
n275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="759-759"];
n276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="valueSetting = option.SetValue(items, options)", span="761-761"];
n280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!group.IsLast && map[group.Next] == null", span="771-771"];
n282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.SetValue(true, options)", span="774-774"];
n245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="group.MoveNext()", span="703-703"];
n254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!group.IsLast", span="718-718"];
n262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="items.Insert(0, group.GetRemainingFromNext())", span="733-733"];
n284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Success;", span="779-779"];
n247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option == null", span="706-706"];
n249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="option.IsDefined = true", span="709-709"];
n250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="711-711"];
n251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsBoolean", span="713-713"];
n255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="720-720"];
n258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="724-724"];
n260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="730-730"];
n265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="737-737"];
n269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!option.IsArray", span="747-747"];
n272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="751-751"];
n274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="757-757"];
n278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="this.DefineOptionThatViolatesFormat(option)", span="763-763"];
n248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="707-707"];
n253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="716-716"];
n257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="723-723"];
n259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="726-726"];
n264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="736-736"];
n266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="739-739"];
n268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="744-744"];
n271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="750-750"];
n273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="753-753"];
n277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="!valueSetting", span="762-762"];
n279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="765-765"];
n281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="772-772"];
n283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="return ParserState.Failure;", span="775-775"];
n285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="698-698"];
n286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="795-795"];
n287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="attribute != null", span="797-797"];
n288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_required = attribute.Required", span="799-799"];
n289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_helpText = attribute.HelpText", span="800-800"];
n290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_shortName = attribute.ShortName", span="801-801"];
n291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_longName = attribute.LongName", span="802-802"];
n292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="803-803"];
n293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_attribute = attribute", span="804-804"];
n295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="property != null", span="809-809"];
n296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_property = property", span="810-810"];
n294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="807-807"];
n297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="812-812"];
n298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="795-795"];
n299 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="823-823"];
n301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="825-825"];
n303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var map = new OptionMap(list.Count, settings)", span="828-828"];
n307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map.RawOptions = target", span="836-836"];
n302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="list != null", span="826-826"];
n304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label=list, span="830-830"];
n309 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return null;", span="841-841"];
n311 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1051-1051"];
n306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="833-833"];
n308 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return map;", span="838-838"];
n305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="pair != null && pair.Right != null", span="832-832"];
n310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="823-823"];
n312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="_attribute is OptionListAttribute", span="846-846"];
n313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetValueList(value, options);", span="847-847"];
n315 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetNullableValue(value, options);", span="850-850"];
n316 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="return SetValueScalar(value, options);", span="852-852"];
n314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="849-849"];
n319 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1871-1871"];
n317 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="844-844"];
n321 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="880-880"];
n318 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="948-948"];
n320 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="916-916"];
n322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Type elementType = _property.PropertyType.GetElementType()", span="857-857"];
n323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Array array = Array.CreateInstance(elementType, values.Count)", span="858-858"];
n327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="867-867"];
n328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="_property.SetValue(options, array, null)", span="868-868"];
n334 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="int i = 0", span="860-860"];
n335 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i < array.Length", span="860-860"];
n331 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i++", span="860-860"];
n326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label=_setValueLock, span="864-864"];
n332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return true;", span="877-877"];
n336 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n337 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label=FormatException, span="871-871"];
n330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return false;", span="873-873"];
n333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="855-855"];
n338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.PropertyType.IsEnum", span="884-884"];
n340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="888-888"];
n342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="896-896"];
n339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=_setValueLock, span="886-886"];
n341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=_setValueLock, span="893-893"];
n343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=InvalidCastException, span="900-900"];
n345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=FormatException, span="904-904"];
n347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label=ArgumentException, span="908-908"];
n349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return true;", span="913-913"];
n351 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="902-902"];
n346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="906-906"];
n348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="return false;", span="910-910"];
n350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="880-880"];
n352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="var nc = new NullableConverter(_property.PropertyType)", span="918-918"];
n354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="925-925"];
n353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label=_setValueLock, span="922-922"];
n359 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label=Exception, span="930-930"];
n357 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="return true;", span="935-935"];
n360 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n356 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="return false;", span="932-932"];
n358 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="916-916"];
n361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label=_setValueLock, span="940-940"];
n362 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="_property.SetValue(options, value, null)", span="942-942"];
n363 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="return true;", span="944-944"];
n364 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="938-938"];
n365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label=_setValueLock, span="950-950"];
n366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="_property.SetValue(options, new List<string>(), null)", span="952-952"];
n367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="954-954"];
n368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="955-955"];
n371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="fieldRef.Add(values[i])", span="959-959"];
n369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="int i = 0", span="957-957"];
n375 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="i < values.Length", span="957-957"];
n372 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="i++", span="957-957"];
n373 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="return true;", span="962-962"];
n374 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="948-948"];
n376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1031-1031"];
n377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="BadOption = option", span="1034-1034"];
n378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1031-1031"];
n379 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1040-1040"];
n380 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="++count", span="1040-1040"];
n381 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1040-1040"];
n382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings = settings", span="1053-1053"];
n387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_names = new Dictionary<string, string>(capacity, comparer)", span="1061-1061"];
n388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1062-1062"];
n390 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1067-1067"];
n383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="IEqualityComparer<string> comparer", span="1055-1055"];
n384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings.CaseSensitive", span="1056-1056"];
n385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="comparer = StringComparer.Ordinal", span="1057-1057"];
n386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="comparer = StringComparer.OrdinalIgnoreCase", span="1059-1059"];
n392 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n389 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="_settings.MutuallyExclusive", span="1064-1064"];
n391 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1051-1051"];
n393 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1102-1102"];
n394 [cluster="CommandLine.OptionMap.EnforceRules()", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1104-1104"];
n395 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1102-1102"];
n396 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1120-1120"];
n397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1107-1107"];
n398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="_map.Values", span="1109-1109"];
n399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="option.Required && !option.IsDefined", span="1111-1111"];
n402 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="return true;", span="1117-1117"];
n400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1113-1113"];
n401 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="return false;", span="1114-1114"];
n404 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1159-1159"];
n403 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1107-1107"];
n405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="!_settings.MutuallyExclusive", span="1122-1122"];
n406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return true;", span="1123-1123"];
n407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="_map.Values", span="1125-1125"];
n408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1127-1127"];
n410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="_mutuallyExclusiveSetMap.Values", span="1132-1132"];
n409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="BuildMutuallyExclusiveMap(option)", span="1128-1128"];
n416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1145-1145"];
n411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="info.Occurrence > 1", span="1134-1134"];
n414 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return true;", span="1142-1142"];
n412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1137-1137"];
n413 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="return false;", span="1138-1138"];
n415 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1120-1120"];
n417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="var setName = option.MutuallyExclusiveSet", span="1147-1147"];
n419 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1152-1152"];
n418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1149-1149"];
n420 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1156-1156"];
n422 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n423 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n421 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1145-1145"];
n424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="options is CommandLineOptionsBase", span="1161-1161"];
n426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.BadOption.ShortName = option.ShortName", span="1166-1166"];
n427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.BadOption.LongName = option.LongName", span="1167-1167"];
n428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="required != null", span="1169-1169"];
n429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.ViolatesRequired = required.Value", span="1169-1169"];
n430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="mutualExclusiveness != null", span="1170-1170"];
n431 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1170-1170"];
n432 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1172-1172"];
n425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="ParsingError error = new ParsingError()", span="1163-1163"];
n433 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1159-1159"];
n434 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1222-1222"];
n435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1182-1182"];
n436 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="_left = left", span="1184-1184"];
n437 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="_right = right", span="1185-1185"];
n438 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1182-1182"];
n439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1198-1198"];
n440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1200-1200"];
n441 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1201-1201"];
n444 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n442 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="return leftHash ^ rightHash;", span="1203-1203"];
n443 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1198-1198"];
n445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1206-1206"];
n446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="var other = obj as Pair<TLeft, TRight>", span="1208-1208"];
n447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="other == null", span="1210-1210"];
n449 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1213-1213"];
n448 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="return false;", span="1211-1211"];
n450 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1206-1206"];
n451 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n452 [cluster="CommandLine.ParsingError.ParsingError()", label="this.BadOption = new BadOptionInfo()", span="1224-1224"];
n453 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1222-1222"];
n454 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1231-1231"];
n455 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="this.ViolatesFormat = format", span="1233-1233"];
n456 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1227-1227"];
n457 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1275-1275"];
n458 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Errors = new List<ParsingError>()", span="1277-1277"];
n459 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1275-1275"];
n460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1295-1295"];
n461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Assumes.NotNull(value, ''value'')", span="1297-1297"];
n462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_data = value", span="1299-1299"];
n464 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_endIndex = value.Length", span="1301-1301"];
n466 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1762-1762"];
n463 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="_index = -1", span="1300-1300"];
n465 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1295-1295"];
n467 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1345-1345"];
n468 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="_index = -1", span="1347-1347"];
n469 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1345-1345"];
n470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1350-1350"];
n471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="_index < _endIndex", span="1352-1352"];
n472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="_index++", span="1354-1354"];
n474 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="return false;", span="1357-1357"];
n473 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="return _index < _endIndex;", span="1355-1355"];
n475 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1350-1350"];
n476 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1360-1360"];
n477 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="throw new NotSupportedException();", span="1362-1362"];
n478 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1360-1360"];
n479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1365-1365"];
n480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index <= 0", span="1367-1367"];
n481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="throw new InvalidOperationException();", span="1369-1369"];
n482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index <= _endIndex", span="1371-1371"];
n483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="_index--", span="1373-1373"];
n485 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="return false;", span="1376-1376"];
n484 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="return _index <= _endIndex;", span="1374-1374"];
n486 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1365-1365"];
n487 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1379-1379"];
n488 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1379-1379"];
n489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1390-1390"];
n490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_target = target", span="1392-1392"];
n491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_vla = ValueListAttribute.GetAttribute(_target)", span="1393-1393"];
n492 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label=IsValueListDefined, span="1394-1394"];
n493 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="_valueList = ValueListAttribute.GetReference(_target)", span="1395-1395"];
n494 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1390-1390"];
n495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1400-1400"];
n496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1402-1402"];
n499 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="_valueList.Add(item)", span="1407-1407"];
n497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="return false;", span="1403-1403"];
n498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label=this, span="1405-1405"];
n500 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="return true;", span="1410-1410"];
n501 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1400-1400"];
n502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1431-1431"];
n503 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1431-1431"];
n504 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1446-1446"];
n505 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1446-1446"];
n506 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1454-1454"];
n507 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="LastPostParsingState = new PostParsingState()", span="1456-1456"];
n508 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1454-1454"];
n509 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1473-1473"];
n510 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1478-1478"];
n511 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1483-1483"];
n512 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1483-1483"];
n513 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1488-1488"];
n514 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1488-1488"];
n515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1504-1504"];
n516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1504-1504"];
n517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1514-1514"];
n518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="CaseSensitive = caseSensitive", span="1516-1516"];
n519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1514-1514"];
n520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1525-1525"];
n521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1528-1528"];
n522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1525-1525"];
n523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1538-1538"];
n524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="CaseSensitive = caseSensitive", span="1540-1540"];
n525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1541-1541"];
n526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1538-1538"];
n527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1550-1550"];
n528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="CaseSensitive = caseSensitive", span="1552-1552"];
n529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="MutuallyExclusive = mutuallyExclusive", span="1553-1553"];
n530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1550-1550"];
n531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1564-1564"];
n532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="CaseSensitive = caseSensitive", span="1566-1566"];
n533 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="MutuallyExclusive = mutuallyExclusive", span="1567-1567"];
n534 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="HelpWriter = helpWriter", span="1568-1568"];
n535 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1564-1564"];
n536 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1600-1600"];
n537 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="_settings = new CommandLineParserSettings(\r\n                false, false, Console.Error)", span="1602-1603"];
n538 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1600-1600"];
n539 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1609-1609"];
n540 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="_settings = new CommandLineParserSettings()", span="1611-1611"];
n541 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1609-1609"];
n542 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1620-1620"];
n543 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Assumes.NotNull(settings, ''settings'')", span="1622-1622"];
n544 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="_settings = settings", span="1624-1624"];
n545 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1620-1620"];
n546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1645-1645"];
n547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="return ParseArguments(args, options, _settings.HelpWriter);", span="1647-1647"];
n548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1645-1645"];
n549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1663-1663"];
n550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(args, ''args'')", span="1665-1665"];
n551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Assumes.NotNull(options, ''options'')", span="1666-1666"];
n552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1668-1668"];
n553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="pair != null && helpWriter != null", span="1670-1670"];
n554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1672-1672"];
n556 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1675-1675"];
n557 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="helpWriter.Write(helpText)", span="1676-1676"];
n560 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return DoParseArguments(args, options);", span="1682-1682"];
n562 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1810-1810"];
n555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="string helpText", span="1674-1674"];
n559 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return true;", span="1679-1679"];
n563 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1728-1728"];
n564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1685-1685"];
n558 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="return false;", span="1677-1677"];
n565 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n561 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1663-1663"];
n566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="bool hadError = false", span="1687-1687"];
n567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1688-1688"];
n568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var target = new TargetWrapper(options)", span="1689-1689"];
n569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1691-1691"];
n575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1700-1700"];
n577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1703-1703"];
n584 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError |= !optionMap.EnforceRules()", span="1723-1723"];
n581 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="target.IsValueListDefined", span="1711-1711"];
n582 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="!target.AddValueItemIfAllowed(argument)", span="1713-1713"];
n570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="arguments.MoveNext()", span="1692-1692"];
n571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="string argument = arguments.Current", span="1694-1694"];
n580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="arguments.MoveNext()", span="1709-1709"];
n572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="argument != null && argument.Length > 0", span="1695-1695"];
n573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="ArgumentParser parser = ArgumentParser.Create(argument)", span="1697-1697"];
n574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="parser != null", span="1698-1698"];
n576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="(result & ParserState.Failure) == ParserState.Failure", span="1701-1701"];
n579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1708-1708"];
n578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError = true", span="1704-1704"];
n587 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1751-1751"];
n583 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="hadError = true", span="1715-1715"];
n585 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="return !hadError;", span="1725-1725"];
n586 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1685-1685"];
n588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="bool caseSensitive = _settings.CaseSensitive", span="1730-1730"];
n590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="i < args.Length", span="1732-1732"];
n591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1734-1734"];
n592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1736-1736"];
n594 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="!string.IsNullOrEmpty(helpOption.LongName)", span="1740-1740"];
n595 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1742-1742"];
n589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="int i = 0", span="1732-1732"];
n597 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="i++", span="1732-1732"];
n598 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return false;", span="1747-1747"];
n593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="1737-1737"];
n596 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="return true;", span="1743-1743"];
n599 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1728-1728"];
n600 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="options is CommandLineOptionsBase", span="1753-1753"];
n601 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1754-1754"];
n602 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1751-1751"];
n603 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n604 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="value == null", span="1765-1765"];
n605 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="throw new ArgumentNullException(paramName);", span="1766-1766"];
n606 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1762-1762"];
n607 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="string.IsNullOrEmpty(value)", span="1771-1771"];
n608 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="throw new ArgumentException(paramName);", span="1772-1772"];
n609 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1769-1769"];
n610 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n611 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1775-1775"];
n612 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="array.Length == 0", span="1777-1777"];
n613 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="throw new ArgumentOutOfRangeException(paramName);", span="1778-1778"];
n614 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1775-1775"];
n615 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1787-1787"];
n617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="target != null", span="1788-1788"];
n618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var propertiesInfo = target.GetType().GetProperties()", span="1790-1790"];
n625 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1801-1801"];
n626 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="return list;", span="1807-1807"];
n619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label=propertiesInfo, span="1792-1792"];
n628 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n629 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="property != null && (property.CanRead && property.CanWrite)", span="1794-1794"];
n621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var setMethod = property.GetSetMethod()", span="1796-1796"];
n623 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1799-1799"];
n622 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="setMethod != null && !setMethod.IsStatic", span="1797-1797"];
n630 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n624 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="attribute != null", span="1800-1800"];
n631 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n627 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1784-1784"];
n632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="var info = target.GetType().GetMethods()", span="1813-1813"];
n633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label=info, span="1815-1815"];
n640 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n634 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="!method.IsStatic", span="1817-1817"];
n638 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="return null;", span="1826-1826"];
n635 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1819-1820"];
n637 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1822-1822"];
n636 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="attribute != null", span="1821-1821"];
n639 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1810-1810"];
n641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1829-1829"];
n642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="var info = target.GetType().GetMethods()", span="1832-1832"];
n643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label=info, span="1834-1834"];
n644 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="!method.IsStatic", span="1836-1836"];
n648 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="return null;", span="1845-1845"];
n645 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1838-1839"];
n646 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="attribute != null", span="1840-1840"];
n647 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="return (TAttribute)attribute;", span="1841-1841"];
n649 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1829-1829"];
n650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1848-1848"];
n651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="IList<TAttribute> list = new List<TAttribute>()", span="1851-1851"];
n652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var info = target.GetType().GetProperties()", span="1852-1852"];
n659 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="list.Add((TAttribute)attribute)", span="1863-1863"];
n660 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="return list;", span="1868-1868"];
n653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label=info, span="1854-1854"];
n654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="property != null && (property.CanRead && property.CanWrite)", span="1856-1856"];
n655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var setMethod = property.GetSetMethod()", span="1858-1858"];
n657 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1861-1861"];
n656 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="setMethod != null && !setMethod.IsStatic", span="1859-1859"];
n658 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="attribute != null", span="1862-1862"];
n661 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1848-1848"];
n662 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1873-1873"];
n663 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1871-1871"];
n664 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n665 [cluster="System.Type.Equals(System.Type)", label="Entry System.Type.Equals(System.Type)", span="0-0"];
n666 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1901-1901"];
n667 [cluster="CommandLine.StringUtil.Spaces(int)", label="return new String(' ', count);", span="1903-1903"];
n668 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1901-1901"];
n669 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_defaultValue = attribute.DefaultValue", prediction=0, span="826-826"];
d292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="825-825"];
d294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_hasDefaultValue = attribute.HasDefaultValue", prediction=1, span="827-827"];
d295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_attribute = attribute", span="828-828"];
d379 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label=_hasDefaultValue, prediction=2, span="992-992"];
d378 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Entry CommandLine.OptionInfo.SetDefault(object)", span="990-990"];
d380 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label=_setValueLock, prediction=2, span="994-994"];
d382 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Exit CommandLine.OptionInfo.SetDefault(object)", span="990-990"];
d381 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="_property.SetValue(options, _defaultValue, null)", prediction=2, span="996-996"];
d406 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, label="_map.Values", prediction=5, span="1144-1144"];
d405 [cluster="CommandLine.OptionMap.SetDefaults()", label="Entry CommandLine.OptionMap.SetDefaults()", span="1142-1142"];
d407 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, label="option.SetDefault(this.RawOptions)", prediction=5, span="1146-1146"];
d408 [cluster="CommandLine.OptionMap.SetDefaults()", label="Exit CommandLine.OptionMap.SetDefaults()", span="1142-1142"];
d579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="optionMap.SetDefaults()", prediction=7, span="1732-1732"];
d578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1731-1731"];
d580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="var target = new TargetWrapper(options)", span="1733-1733"];
m0_0 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="43-43"];
m0_1 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="49-49"];
m0_2 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="43-43"];
m0_15 [cluster="Unk.IsFalse", file="CommandLineParserBaseFixture.cs", label="Entry Unk.IsFalse", span=""];
m0_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="64-64"];
m0_13 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserBaseFixture.cs", label="Assert.IsFalse(result)", span="66-66"];
m0_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="64-64"];
m0_11 [cluster="Unk.IsTrue", file="CommandLineParserBaseFixture.cs", label="Entry Unk.IsTrue", span=""];
m0_4 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", span="54-54"];
m0_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", file="CommandLineParserBaseFixture.cs", label="return new CommandLineParser();", span="56-56"];
m0_6 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", span="54-54"];
m0_3 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="59-59"];
m0_9 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserBaseFixture.cs", label="Assert.IsTrue(result)", span="61-61"];
m0_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="59-59"];
m1_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m1_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="65-65"];
m1_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66"];
m1_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''something'', options.StringValue)", span="69-69"];
m1_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="70-70"];
m1_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="68-68"];
m1_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m1_153 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="270-270"];
m1_154 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="272-272"];
m1_155 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="273-273"];
m1_156 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="275-275"];
m1_157 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="270-270"];
m1_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m1_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m1_80 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m1_90 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_91 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m1_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m1_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59"];
m1_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m1_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m1_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m1_74 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m1_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152"];
m1_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153"];
m1_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m1_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="151-151"];
m1_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m1_138 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="243-243"];
m1_139 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="245-245"];
m1_140 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="246-246"];
m1_141 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="248-248"];
m1_142 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="243-243"];
m1_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m1_30 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="90-90"];
m1_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91"];
m1_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanThree)", span="94-94"];
m1_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanOne)", span="95-95"];
m1_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanTwo)", span="96-96"];
m1_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97"];
m1_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="98-98"];
m1_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="93-93"];
m1_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m1_67 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m1_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="137-137"];
m1_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139"];
m1_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m1_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m1_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m1_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="118-118"];
m1_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120"];
m1_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123"];
m1_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="124-124"];
m1_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125"];
m1_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="126-126"];
m1_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127"];
m1_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="128-128"];
m1_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129"];
m1_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="130-130"];
m1_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="122-122"];
m1_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m1_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="59-59"];
m1_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="297-297"];
m1_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="299-299"];
m1_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="300-300"];
m1_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="302-302"];
m1_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="297-297"];
m1_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1431-1431"];
m1_128 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="229-229"];
m1_129 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="231-231"];
m1_130 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="232-232"];
m1_131 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="233-233"];
m1_133 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="236-236"];
m1_134 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="237-237"];
m1_132 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="235-235"];
m1_135 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="229-229"];
m1_19 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m1_39 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m1_65 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m1_112 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="207-207"];
m1_113 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="209-209"];
m1_114 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="210-210"];
m1_115 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="211-211"];
m1_117 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="214-214"];
m1_118 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="215-215"];
m1_116 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="213-213"];
m1_119 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="207-207"];
m1_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m1_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m1_83 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m1_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m1_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m1_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m1_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166"];
m1_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="165-165"];
m1_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m1_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", prediction=8, span="194-194"];
m1_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m1_109 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m1_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="201-201"];
m1_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="196-196"];
m1_20 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m1_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="76-76"];
m1_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78"];
m1_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81"];
m1_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(100, options.IntegerValue)", span="82-82"];
m1_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="83-83"];
m1_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="84-84"];
m1_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="80-80"];
m1_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m1_179 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="318-318"];
m1_180 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="320-320"];
m1_181 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="321-321"];
m1_183 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="324-324"];
m1_184 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="325-325"];
m1_185 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(1, options.Items.Count)", span="326-326"];
m1_186 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.Items[0])", span="327-327"];
m1_182 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="323-323"];
m1_187 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="318-318"];
m1_120 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1609-1609"];
m1_18 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m1_41 [cluster="Unk.IsFalse", file="CommandLineParserFixture.cs", label="Entry Unk.IsFalse", span=""];
m1_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.IntegerValue)", prediction=8, span="193-193"];
m1_122 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="219-219"];
m1_123 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="221-221"];
m1_124 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="222-222"];
m1_125 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="223-223"];
m1_126 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="225-225"];
m1_127 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="219-219"];
m1_136 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1620-1620"];
m1_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m1_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52"];
m1_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m1_188 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m1_173 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="308-308"];
m1_174 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="310-310"];
m1_175 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="311-311"];
m1_177 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.StringValue)", span="314-314"];
m1_176 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="313-313"];
m1_178 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="308-308"];
m1_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="35-35"];
m1_66 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_42 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m1_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="104-104"];
m1_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105"];
m1_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanTwo)", span="108-108"];
m1_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanOne)", span="109-109"];
m1_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanThree)", span="110-110"];
m1_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111"];
m1_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="112-112"];
m1_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="107-107"];
m1_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m1_143 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="252-252"];
m1_144 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="254-254"];
m1_145 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="255-255"];
m1_146 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="257-257"];
m1_147 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="252-252"];
m1_158 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="279-279"];
m1_159 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="281-281"];
m1_160 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="282-282"];
m1_161 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="284-284"];
m1_162 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="279-279"];
m1_121 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m1_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m1_93 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m1_94 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m1_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m1_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m1_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m1_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180"];
m1_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="179-179"];
m1_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m1_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="288-288"];
m1_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="290-290"];
m1_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="291-291"];
m1_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="293-293"];
m1_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="288-288"];
m1_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="187-187"];
m1_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", prediction=8, span="189-189"];
m1_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", prediction=11, span="190-190"];
m1_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", prediction=8, span="187-187"];
m1_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", prediction=13, span="192-192"];
m1_148 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="261-261"];
m1_149 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="263-263"];
m1_150 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="264-264"];
m1_151 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="266-266"];
m1_152 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="261-261"];
m1_40 [cluster="Unk.IsTrue", file="CommandLineParserFixture.cs", label="Entry Unk.IsTrue", span=""];
m1_189 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m2_126 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m2_25 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="336-336"];
m2_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m2_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="314-314"];
m2_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="316-317"];
m2_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="319-319"];
m2_163 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m2_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m2_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="337-337"];
m2_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName", span="339-339"];
m2_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="350-350"];
m2_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="353-353"];
m2_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''v''", span="341-341"];
m2_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''i''", span="345-345"];
m2_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="342-342"];
m2_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="346-346"];
m2_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="351-351"];
m2_180 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m2_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m2_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="325-325"];
m2_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="327-328"];
m2_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="330-330"];
m2_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m2_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m2_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="174-174"];
m2_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="175-175"];
m2_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="176-176"];
m2_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="178-178"];
m2_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose    Before '', lines[2])", span="179-179"];
m2_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[3])", span="180-180"];
m2_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                After'', lines[4])", span="181-181"];
m2_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  input-file    Before '', lines[5])", span="182-182"];
m2_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[6])", span="183-183"];
m2_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                456789 After'', lines[7])", span="184-184"];
m2_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m2_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="648-648"];
m2_122 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m2_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m2_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="272-272"];
m2_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Assert.AreEqual('''', local.ToString())", span="274-274"];
m2_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m2_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="623-623"];
m2_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="88-88"];
m2_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m2_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="210-210"];
m2_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="211-211"];
m2_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="212-212"];
m2_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="213-213"];
m2_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="214-214"];
m2_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="216-216"];
m2_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="218-218"];
m2_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="220-220"];
m2_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Customizing Test.'', lines[0])", span="221-221"];
m2_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[1])", span="222-222"];
m2_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose       Kommentar umfassend Operationen.'', lines[3])", span="223-223"];
m2_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'', lines[4])", span="224-224"];
m2_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="225-225"];
m2_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m2_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="301-301"];
m2_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="303-303"];
m2_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-i0'' }, options)", span="305-306"];
m2_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="308-308"];
m2_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="301-301"];
m2_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="486-486"];
m2_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="185-185"];
m2_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="64-64"];
m2_103 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="55-55"];
m2_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="279-279"];
m2_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="281-281"];
m2_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="283-284"];
m2_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="286-286"];
m2_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="279-279"];
m2_43 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="832-832"];
m2_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m2_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="132-132"];
m2_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m2_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="304-304"];
m2_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m2_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="158-158"];
m2_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="159-159"];
m2_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="160-160"];
m2_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="162-162"];
m2_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[2], ''  v, verbose    This is the description'', ''The first line should have the arguments and the start of the Help Text.'')", span="163-163"];
m2_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[3], ''                of the verbosity to '', formattingMessage)", span="165-165"];
m2_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[4], ''                test out the wrapping '', formattingMessage)", span="166-166"];
m2_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[5], ''                capabilities of the '', formattingMessage)", span="167-167"];
m2_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[6], ''                Help Text.'', formattingMessage)", span="168-168"];
m2_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string formattingMessage = ''Beyond the second line should be formatted as though it's in a column.''", span="164-164"];
m2_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m2_124 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="172-172"];
m2_45 [cluster="Unk.AreEqual", file="HelpTextFixture.cs", label="Entry Unk.AreEqual", span=""];
m2_42 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="638-638"];
m2_123 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="292-292"];
m2_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_148 [cluster="Unk.IsFalse", file="HelpTextFixture.cs", label="Entry Unk.IsFalse", span=""];
m2_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m2_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\n				AddDashesToOption = true,\n		    	Heading = new HeadingInfo(''AddOptionsWithDashes''),\n	        	Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\n			}", span="254-258"];
m2_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="259-259"];
m2_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="261-261"];
m2_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="263-263"];
m2_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="265-265"];
m2_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  -s, --something    Input something here.'', lines[3])", span="266-266"];
m2_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m2_146 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1525-1525"];
m2_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m2_102 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m2_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="290-290"];
m2_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="292-292"];
m2_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-j0'' }, options)", span="294-295"];
m2_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="297-297"];
m2_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="290-290"];
m2_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m2_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="190-190"];
m2_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="191-191"];
m2_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="192-192"];
m2_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="193-193"];
m2_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="194-194"];
m2_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="196-196"];
m2_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="198-198"];
m2_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[1])", span="199-199"];
m2_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[2])", span="200-200"];
m2_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''012 After'', lines[3])", span="201-201"];
m2_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[lines.Length - 3])", span="202-202"];
m2_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[lines.Length - 2])", span="203-203"];
m2_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual('' After'', lines[lines.Length - 1])", span="204-204"];
m2_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m2_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m2_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="99-99"];
m2_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="100-100"];
m2_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="101-101"];
m2_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="104-104"];
m2_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="107-107"];
m2_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="108-108"];
m2_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="111-111"];
m2_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="112-112"];
m2_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="113-113"];
m2_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="114-114"];
m2_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="116-116"];
m2_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="105-105"];
m2_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m2_104 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_41 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="46-46"];
m2_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="73-73"];
m2_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m2_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="141-141"];
m2_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="142-142"];
m2_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="143-143"];
m2_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="144-144"];
m2_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="145-145"];
m2_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="146-146"];
m2_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="148-148"];
m2_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="150-150"];
m2_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 2], ''This is a first post-options line.'')", span="151-151"];
m2_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 1], ''This is a second post-options line.'')", span="152-152"];
m2_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m2_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m2_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", color=green, community=0, file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", prediction=14, span="126-126"];
m2_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m2_125 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="82-82"];
m2_164 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1564-1564"];
m2_44 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_147 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1645-1645"];
m2_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m2_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="231-231"];
m2_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="232-232"];
m2_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="234-234"];
m2_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year), lines[1])", span="245-245"];
m2_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="233-233"];
m2_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="235-235"];
m2_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="236-236"];
m2_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="237-237"];
m2_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="239-239"];
m2_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="241-241"];
m2_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="243-243"];
m2_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Parameterless Constructor Test.'', lines[0])", span="244-244"];
m2_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[2])", span="246-246"];
m2_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  s, something    Input something here.'', lines[4])", span="247-247"];
m2_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="248-248"];
m2_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m2_181 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m2_182 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m3_67 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m3_69 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m3_68 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m3_40 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m3_77 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="367-367"];
m3_19 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="648-648"];
m3_14 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m3_17 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="623-623"];
m3_28 [cluster="string.Concat(string, string)", file="Program.cs", label="Entry string.Concat(string, string)", span="0-0"];
m3_15 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="Program.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="185-185"];
m3_72 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_75 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m3_27 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_71 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m3_18 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_38 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1525-1525"];
m3_26 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m3_3 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="101-101"];
m3_4 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="var help = new HelpText { Heading = Program._headingInfo,\n					Copyright = new CopyrightInfo(''Giacomo Stelluti Scala'', 2005, 2012),\n                	AdditionalNewLineAfterOption = true,\n					AddDashesToOption = true\n				}", span="103-107"];
m3_5 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="this.HandleParsingErrorsInHelp(help)", span="108-108"];
m3_6 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="109-109"];
m3_7 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="110-110"];
m3_8 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''Usage: SampleApp -rMyData.in -wMyData.out --calculate'')", span="111-111"];
m3_9 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(string.Format(''       SampleApp -rMyData.in -i -j{0} file0.def file1.def'', 9.7))", span="112-112"];
m3_10 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''       SampleApp -rMath.xml -wReport.bin -o *;/;+;-'')", span="113-113"];
m3_11 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddOptions(this)", span="114-114"];
m3_12 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return help;", span="116-116"];
m3_13 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="101-101"];
m3_74 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_76 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_66 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_70 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m3_0 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="57-57"];
m3_2 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Exit SampleApp.Program.Options.Options()", span="57-57"];
m3_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m3_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="155-155"];
m3_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="158-158"];
m3_46 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="160-160"];
m3_47 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="161-161"];
m3_49 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="165-165"];
m3_50 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="166-166"];
m3_51 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="167-167"];
m3_52 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="168-168"];
m3_53 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="169-169"];
m3_56 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="173-173"];
m3_61 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="181-181"];
m3_62 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="182-182"];
m3_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="156-156"];
m3_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="159-159"];
m3_48 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="163-163"];
m3_54 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="171-171"];
m3_60 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="180-180"];
m3_55 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="172-172"];
m3_57 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="175-175"];
m3_58 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="176-176"];
m3_59 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="178-178"];
m3_63 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="185-185"];
m3_64 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="186-186"];
m3_65 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m3_73 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_16 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Entry SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m3_20 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="this.LastPostParsingState.Errors.Count > 0", span="121-121"];
m3_21 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="var errors = help.RenderParsingErrorsText(this, 2)", span="123-123"];
m3_23 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="126-126"];
m3_24 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(errors)", span="127-127"];
m3_22 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="!string.IsNullOrEmpty(errors)", span="124-124"];
m3_25 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Exit SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m3_39 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1645-1645"];
m3_29 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="138-138"];
m3_30 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="143-143"];
m3_32 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="145-145"];
m3_31 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="144-144"];
m3_34 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="148-148"];
m3_33 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="146-146"];
m3_35 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="150-150"];
m3_36 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="138-138"];
m3_78 [file="Program.cs", label="SampleApp.Program.Options", span=""];
m5_13 [cluster="System.Console.WriteLine(object)", file="Singleton.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m5_19 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m5_0 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="40-40"];
m5_1 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="var options = new SimpleOptions()", span="42-42"];
m5_2 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="43-44"];
m5_4 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Assert.AreEqual(''another string'', options.StringValue)", span="47-47"];
m5_5 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Assert.AreEqual(100, options.IntegerValue)", span="48-48"];
m5_6 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="49-49"];
m5_7 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Console.WriteLine(options)", span="50-50"];
m5_3 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Assert.IsTrue(result)", span="46-46"];
m5_8 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="40-40"];
m5_12 [cluster="Unk.AreEqual", file="Singleton.cs", label="Entry Unk.AreEqual", span=""];
m5_14 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="54-54"];
m5_15 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", color=green, community=0, file="Singleton.cs", label="var options = new OptionsWithMultipleSet()", prediction=15, span="56-56"];
m5_16 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", color=green, community=1, file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", prediction=16, span="57-58"];
m5_17 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", color=green, community=0, file="Singleton.cs", label="Assert.IsTrue(result)", prediction=17, span="60-60"];
m5_18 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="54-54"];
m5_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="35-35"];
m5_11 [cluster="Unk.IsTrue", file="Singleton.cs", label="Entry Unk.IsTrue", span=""];
n671 -> n28  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
n674 -> n93  [color=darkseagreen4, key=1, label="CommandLine.ArgumentParser", style=dashed];
n676 -> n178  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n676 -> n185  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n676 -> n190  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n676 -> n196  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n676 -> n202  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
n677 -> n221  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n677 -> n222  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n677 -> n230  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n677 -> n232  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n677 -> n234  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n678 -> n258  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n678 -> n265  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n678 -> n272  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n678 -> n278  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n679 -> n312  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n313  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n314  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n315  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n316  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n326  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n328  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n338  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n339  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n340  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n341  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n342  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n353  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n354  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n361  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n362  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n365  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> n366  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> d379  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> d381  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n679 -> d380  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n680 -> n380  [color=darkseagreen4, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n681 -> n384  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n389  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n394  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n398  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n400  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n405  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n407  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n409  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n410  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n412  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n418  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n419  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> n420  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> d406  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n681 -> d407  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n682 -> n449  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n685 -> n471  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n472  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n473  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n480  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n482  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n483  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n685 -> n484  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n686 -> n492  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n686 -> n496  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n686 -> n498  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n686 -> n499  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
n689 -> n547  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n689 -> n554  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n689 -> n560  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=object, style=dashed];
n54 -> n60  [color=darkseagreen4, key=1, label=object, style=dashed];
n56 -> n59  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
n56 -> n60  [color=darkseagreen4, key=1, label=property, style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label=list, style=dashed];
n75 -> n617  [color=darkseagreen4, key=1, label=object, style=dashed];
n77 -> n80  [color=darkseagreen4, key=1, label=list, style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
n83 -> n85  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
n97 -> n100  [color=darkseagreen4, key=1, label=string, style=dashed];
n97 -> n102  [color=darkseagreen4, key=1, label=string, style=dashed];
n109 -> n111  [color=darkseagreen4, key=1, label=string, style=dashed];
n114 -> n116  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n117  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n118  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n119  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n115 -> n118  [color=darkseagreen4, key=1, label=list, style=dashed];
n115 -> n121  [color=darkseagreen4, key=1, label=list, style=dashed];
n137 -> n140  [color=darkseagreen4, key=1, label=bool, style=dashed];
n163 -> n172  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n172  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n174  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n182  [color=darkseagreen4, key=1, label=parts, style=dashed];
n164 -> n198  [color=darkseagreen4, key=1, label=parts, style=dashed];
n165 -> n167  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n170  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n171  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n175  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n178  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n180  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n185  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n187  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n190  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n192  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n196  [color=darkseagreen4, key=1, label=option, style=dashed];
n165 -> n202  [color=darkseagreen4, key=1, label=option, style=dashed];
n176 -> n179  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n183 -> n186  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n188 -> n191  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n194 -> n197  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n200 -> n203  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n207 -> n313  [color=darkseagreen4, key=1, label=string, style=dashed];
n207 -> n315  [color=darkseagreen4, key=1, label=string, style=dashed];
n207 -> n316  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n209 -> n328  [color=darkseagreen4, key=1, label=object, style=dashed];
n210 -> n362  [color=darkseagreen4, key=1, label=bool, style=dashed];
n216 -> n608  [color=darkseagreen4, key=1, label=string, style=dashed];
n242 -> n252  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n242 -> n267  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n242 -> n280  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
n242 -> n282  [color=darkseagreen4, key=1, label=object, style=dashed];
n244 -> n252  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n254  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n262  [color=darkseagreen4, key=1, label=group, style=dashed];
n244 -> n280  [color=darkseagreen4, key=1, label=group, style=dashed];
n246 -> n250  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n251  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n255  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n258  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n260  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n265  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n269  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n272  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n274  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n278  [color=darkseagreen4, key=1, label=option, style=dashed];
n246 -> n282  [color=darkseagreen4, key=1, label=option, style=dashed];
n256 -> n259  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n263 -> n266  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n270 -> n273  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n276 -> n279  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
n286 -> n295  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n301 -> n304  [color=darkseagreen4, key=1, label=list, style=dashed];
n303 -> n308  [color=darkseagreen4, key=1, label=map, style=dashed];
n321 -> n340  [color=darkseagreen4, key=1, label=string, style=dashed];
n321 -> n342  [color=darkseagreen4, key=1, label=string, style=dashed];
n318 -> n366  [color=darkseagreen4, key=1, label=object, style=dashed];
n320 -> n354  [color=darkseagreen4, key=1, label=string, style=dashed];
n322 -> n327  [color=darkseagreen4, key=1, label=elementType, style=dashed];
n323 -> n325  [color=darkseagreen4, key=1, label=array, style=dashed];
n323 -> n327  [color=darkseagreen4, key=1, label=array, style=dashed];
n323 -> n328  [color=darkseagreen4, key=1, label=array, style=dashed];
n324 -> n327  [color=darkseagreen4, key=1, label=i, style=dashed];
n324 -> n331  [color=darkseagreen4, key=1, label=i, style=dashed];
n331 -> n331  [color=darkseagreen4, key=1, label=i, style=dashed];
n352 -> n354  [color=darkseagreen4, key=1, label=nc, style=dashed];
n367 -> n371  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
n368 -> n370  [color=darkseagreen4, key=1, label=values, style=dashed];
n368 -> n371  [color=darkseagreen4, key=1, label=values, style=dashed];
n369 -> n371  [color=darkseagreen4, key=1, label=i, style=dashed];
n369 -> n372  [color=darkseagreen4, key=1, label=i, style=dashed];
n372 -> n372  [color=darkseagreen4, key=1, label=i, style=dashed];
n398 -> n400  [color=darkseagreen4, key=1, label=option, style=dashed];
n404 -> n428  [color=darkseagreen4, key=1, label="bool?", style=dashed];
n404 -> n430  [color=darkseagreen4, key=1, label="bool?", style=dashed];
n404 -> n432  [color=darkseagreen4, key=1, label=object, style=dashed];
n407 -> n409  [color=darkseagreen4, key=1, label=option, style=dashed];
n410 -> n412  [color=darkseagreen4, key=1, label=info, style=dashed];
n416 -> n419  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
n417 -> n419  [color=darkseagreen4, key=1, label=setName, style=dashed];
n417 -> n420  [color=darkseagreen4, key=1, label=setName, style=dashed];
n425 -> n432  [color=darkseagreen4, key=1, label=error, style=dashed];
n440 -> n442  [color=darkseagreen4, key=1, label=leftHash, style=dashed];
n446 -> n449  [color=darkseagreen4, key=1, label=other, style=dashed];
n466 -> n605  [color=darkseagreen4, key=1, label=string, style=dashed];
n495 -> n499  [color=darkseagreen4, key=1, label=string, style=dashed];
n549 -> n551  [color=darkseagreen4, key=1, label=object, style=dashed];
n549 -> n553  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n549 -> n554  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n549 -> n556  [color=darkseagreen4, key=1, label=object, style=dashed];
n549 -> n557  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
n549 -> n560  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n552 -> n554  [color=darkseagreen4, key=1, label=pair, style=dashed];
n552 -> n556  [color=darkseagreen4, key=1, label=pair, style=dashed];
n563 -> n590  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n563 -> n591  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n563 -> n592  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n563 -> n594  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n563 -> n595  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n564 -> n577  [color=darkseagreen4, key=1, label=object, style=dashed];
n568 -> n581  [color=darkseagreen4, key=1, label=target, style=dashed];
n568 -> n582  [color=darkseagreen4, key=1, label=target, style=dashed];
n569 -> n580  [color=darkseagreen4, key=1, label=arguments, style=dashed];
n575 -> n579  [color=darkseagreen4, key=1, label=result, style=dashed];
n571 -> n582  [color=darkseagreen4, key=1, label=argument, style=dashed];
n573 -> n577  [color=darkseagreen4, key=1, label=parser, style=dashed];
n587 -> n601  [color=darkseagreen4, key=1, label=object, style=dashed];
n588 -> n592  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n588 -> n595  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
n589 -> n592  [color=darkseagreen4, key=1, label=i, style=dashed];
n589 -> n595  [color=darkseagreen4, key=1, label=i, style=dashed];
n589 -> n597  [color=darkseagreen4, key=1, label=i, style=dashed];
n597 -> n597  [color=darkseagreen4, key=1, label=i, style=dashed];
n611 -> n613  [color=darkseagreen4, key=1, label=string, style=dashed];
n616 -> n625  [color=darkseagreen4, key=1, label=list, style=dashed];
n616 -> n626  [color=darkseagreen4, key=1, label=list, style=dashed];
n619 -> n625  [color=darkseagreen4, key=1, label=property, style=dashed];
n623 -> n625  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n633 -> n635  [color=darkseagreen4, key=1, label=method, style=dashed];
n633 -> n637  [color=darkseagreen4, key=1, label=method, style=dashed];
n635 -> n637  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n643 -> n645  [color=darkseagreen4, key=1, label=method, style=dashed];
n645 -> n647  [color=darkseagreen4, key=1, label=attribute, style=dashed];
n651 -> n659  [color=darkseagreen4, key=1, label=list, style=dashed];
n651 -> n660  [color=darkseagreen4, key=1, label=list, style=dashed];
n657 -> n659  [color=darkseagreen4, key=1, label=attribute, style=dashed];
d378 -> d381  [color=green, key=1, label=object, style=dashed];
d580 -> n581  [color=darkseagreen4, key=1, label=target, style=dashed];
d580 -> n582  [color=darkseagreen4, key=1, label=target, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_11 -> m1_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_73 -> m1_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_73 -> m1_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_68 -> m1_70  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_53 -> m1_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_130 -> m1_133  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_130 -> m1_134  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_114 -> m1_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_114 -> m1_118  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_84 -> m1_87  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_21 -> m1_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_21 -> m1_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_21 -> m1_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_21 -> m1_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_180 -> m1_183  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_180 -> m1_184  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_180 -> m1_185  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_180 -> m1_186  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_174 -> m1_177  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_43 -> m1_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_43 -> m1_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_43 -> m1_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_43 -> m1_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_102 -> m1_105  [color=green, key=1, label=options, style=dashed];
m1_102 -> m1_106  [color=green, key=1, label=options, style=dashed];
m1_102 -> m1_107  [color=green, key=1, label=options, style=dashed];
m1_189 -> m1_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_97  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_104  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_109  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_110  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_126  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_146  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_151  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_156  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_161  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_166  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_176  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m1_189 -> m1_182  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_170 -> m2_172  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m2_170 -> m2_177  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m2_63 -> m2_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_63 -> m2_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_63 -> m2_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_63 -> m2_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_63 -> m2_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_88 -> m2_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_88 -> m2_92  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_95 -> m2_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_95 -> m2_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_95 -> m2_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_50 -> m2_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_52 -> m2_56  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m2_73 -> m2_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_73 -> m2_77  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_79 -> m2_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_79 -> m2_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_79 -> m2_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_79 -> m2_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_1 -> m2_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_1 -> m2_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_30 -> m2_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_30 -> m2_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_30 -> m2_35  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_106 -> m2_117  [color=darkseagreen4, key=1, label=year, style=dashed];
m2_107 -> m2_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_107 -> m2_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_107 -> m2_112  [color=darkseagreen4, key=1, label=local, style=dashed];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_115 -> m2_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_115 -> m2_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_115 -> m2_120  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_181 -> m2_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m2_182 -> m2_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m2_182 -> m2_48  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m2_182 -> m2_61  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_41 -> m3_44  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_46  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_47  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_49  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_50  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_51  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_52  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_53  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_56  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_61  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_41 -> m3_62  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_54 -> m3_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_54 -> m3_58  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_54 -> m3_59  [color=darkseagreen4, key=1, label=builder, style=dashed];
m3_16 -> m3_23  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m3_16 -> m3_24  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m3_21 -> m3_24  [color=darkseagreen4, key=1, label=errors, style=dashed];
m3_29 -> m3_32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_78 -> m3_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_78 -> m3_11  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m3_78 -> m3_20  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_1 -> m5_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_1 -> m5_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m5_1 -> m5_7  [color=darkseagreen4, key=1, label=options, style=dashed];
}
