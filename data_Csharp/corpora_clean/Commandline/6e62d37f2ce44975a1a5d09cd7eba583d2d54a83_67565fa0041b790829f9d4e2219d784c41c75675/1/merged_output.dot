digraph  {
n4 [label="CommandLine.BaseAttribute", span=""];
n0 [cluster="CommandLine.BaseAttribute.BaseAttribute()", label="Entry CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
n1 [cluster="CommandLine.BaseAttribute.BaseAttribute()", label="min = -1", span="20-20"];
n2 [cluster="CommandLine.BaseAttribute.BaseAttribute()", label="max = -1", span="21-21"];
n3 [cluster="CommandLine.BaseAttribute.BaseAttribute()", label="Exit CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
m1_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m1_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="specification == null", span="57-57"];
m1_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="specification.ConversionType.ToDescriptor()", span="59-59"];
m1_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="var min = specification.Min", span="64-64"];
m1_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="var max = specification.Max", span="65-65"];
m1_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="throw new ArgumentNullException(''specification'');", span="57-57"];
m1_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="DescriptorType.Scalar", span="61-61"];
m1_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="DescriptorType.Sequence", span="63-63"];
m1_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return  Maybe.Just(1);", span="62-62"];
m1_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="min >= 0 && max >= 0", span="66-66"];
m1_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return Maybe.Just(max);", span="68-68"];
m1_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return Maybe.Nothing<int>();", span="73-73"];
m1_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m1_22 [cluster="System.ApplicationException.ApplicationException(string)", file="NameLookupTests.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m1_21 [cluster="Unk.Any", file="NameLookupTests.cs", label="Entry Unk.Any", span=""];
m1_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m1_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="NameLookupTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_11 [cluster="Unk.ShouldBeEquivalentTo", file="NameLookupTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="NameLookupTests.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39"];
m1_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m1_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m1_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label=guardsLookup, span="44-44"];
m1_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label="specifications.Any(spec => guard.Item1(spec))", span="46-46"];
m1_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label="return specifications;", span="52-52"];
m1_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label="throw new ApplicationException(guard.Item2);", span="48-48"];
m1_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m1_6 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="NameLookupTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m1_7 [cluster="OptionSpecification.cstr", file="NameLookupTests.cs", label="Entry OptionSpecification.cstr", span=""];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", file="NameLookupTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m1_23 [cluster="lambda expression", file="NameLookupTests.cs", label="Entry lambda expression", span="46-46"];
m1_24 [cluster="lambda expression", file="NameLookupTests.cs", label="guard.Item1(spec)", span="46-46"];
m1_25 [cluster="lambda expression", file="NameLookupTests.cs", label="Exit lambda expression", span="46-46"];
m1_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="NameLookupTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m1_40 [cluster="System.Type.ToDescriptor()", file="NameLookupTests.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m1_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=green, community=0, file="NameLookupTests.cs", label="12: throw new ArgumentNullException(''specification'');", span="13-13"];
m1_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="specification == null", span="13-13"];
m1_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m1_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameLookupTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="NameLookupTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m1_43 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m1_44 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return specification.Min == -1;", span="78-78"];
m1_45 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="76-76"];
m1_46 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81"];
m1_47 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="return specification.Max == -1;", span="83-83"];
m1_48 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="NameLookupTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="81-81"];
m1_49 [file="NameLookupTests.cs", label=guard, span=""];
m3_6 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m3_27 [cluster="Unk.WithValue", file="OptionMapperTests.cs", label="Entry Unk.WithValue", span=""];
m3_0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", span="13-13"];
m3_1 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", color=red, community=0, file="OptionMapperTests.cs", label="9: var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="19-35"];
m3_2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", file="OptionMapperTests.cs", label="return StatePair.Create(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="36-38"];
m3_3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", file="OptionMapperTests.cs", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>, System.StringComparer)", span="13-13"];
m3_4 [cluster="Unk.Select", file="OptionMapperTests.cs", label="Entry Unk.Select", span=""];
m3_16 [cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapperTests.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m3_22 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m3_21 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="313-313"];
m3_11 [cluster="Unk.ToMaybe", file="OptionMapperTests.cs", label="Entry Unk.ToMaybe", span=""];
m3_10 [cluster="Unk.FirstOrDefault", file="OptionMapperTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_26 [cluster="Unk.Just", file="OptionMapperTests.cs", label="Entry Unk.Just", span=""];
m3_23 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-30"];
m3_8 [cluster="lambda expression", color=red, community=0, file="OptionMapperTests.cs", label="0: options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="21-34"];
m3_14 [cluster="lambda expression", file="OptionMapperTests.cs", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="23-23"];
m3_18 [cluster="lambda expression", color=red, community=0, file="OptionMapperTests.cs", label="3: converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="26-33"];
m3_7 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="20-34"];
m3_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="37-37"];
m3_31 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="38-38"];
m3_34 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="38-38"];
m3_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="28-30"];
m3_9 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="20-34"];
m3_13 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="22-23"];
m3_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="25-33"];
m3_15 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="22-23"];
m3_19 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="25-33"];
m3_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-30"];
m3_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="se.Item1", span="37-37"];
m3_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="37-37"];
m3_32 [cluster="lambda expression", file="OptionMapperTests.cs", label="se.Item2", span="38-38"];
m3_33 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="38-38"];
m3_35 [cluster="lambda expression", file="OptionMapperTests.cs", label="se.Value", span="38-38"];
m3_36 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="38-38"];
m3_12 [cluster="Unk.Return", file="OptionMapperTests.cs", label="Entry Unk.Return", span=""];
m3_20 [cluster="Unk.converter", file="OptionMapperTests.cs", label="Entry Unk.converter", span=""];
m3_5 [cluster="Unk.>", file="OptionMapperTests.cs", label="Entry Unk.>", span=""];
m3_37 [file="OptionMapperTests.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
m3_38 [file="OptionMapperTests.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>", span=""];
m3_39 [file="OptionMapperTests.cs", label="System.StringComparer", span=""];
m3_40 [file="OptionMapperTests.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m5_27 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Specification.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_28 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="32-32"];
m5_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", span="35-35"];
m5_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.tag = tag", span="38-38"];
m5_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.required = required", span="39-39"];
m5_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", color=green, community=0, file="Specification.cs", label="4: this.min = min", span="40-40"];
m5_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", color=green, community=0, file="Specification.cs", label="26: this.max = max", span="41-41"];
m5_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.defaultValue = defaultValue", span="42-42"];
m5_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.conversionType = conversionType", span="43-43"];
m5_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.targetType = targetType", span="44-44"];
m5_8 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType)", span="35-35"];
m5_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_23 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m5_29 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m5_26 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m5_31 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="18-18"];
m5_9 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m5_10 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="22: var attrs = property.GetCustomAttributes(true)", span="84-84"];
m5_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="16: var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>())", span="88-91"];
m5_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="9: return spec.WithLongName(property.Name.ToLowerInvariant());", span="94-94"];
m5_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=red, community=0, file="Specification.cs", label="16: return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="102-102"];
m5_11 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="9: var oa = attrs.OfType<OptionAttribute>()", span="85-85"];
m5_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="99-99"];
m5_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="22: oa.Count() == 1", span="86-86"];
m5_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="29: spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="92-92"];
m5_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="96-96"];
m5_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="100-100"];
m5_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="105-105"];
m5_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m5_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m5_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m5_30 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="20-20"];
m5_32 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m5_33 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m6_66 [cluster="Unk.SingleOrDefault", file="SpecificationExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m6_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="96-96"];
m6_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="SpecificationExtensions.cs", label="return new NotParsed<object>(new NullInstance(), types, errors);", span="98-98"];
m6_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="96-96"];
m6_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="36-36"];
m6_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m6_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="47-47"];
m6_45 [cluster="Unk.>", file="SpecificationExtensions.cs", label="Entry Unk.>", span=""];
m6_49 [cluster="Unk.MakeNotParsed", file="SpecificationExtensions.cs", label="Entry Unk.MakeNotParsed", span=""];
m6_44 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m6_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m6_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_79 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m6_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m6_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="69-79"];
m6_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m6_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m6_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="SpecificationExtensions.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m6_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m6_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="SpecificationExtensions.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m6_40 [cluster="System.StringComparer.Equals(string, string)", file="SpecificationExtensions.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m6_56 [cluster="Unk.Single", file="SpecificationExtensions.cs", label="Entry Unk.Single", span=""];
m6_67 [cluster="Unk.ToMaybe", file="SpecificationExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m6_41 [cluster="string.Concat(string, string)", file="SpecificationExtensions.cs", label="Entry string.Concat(string, string)", span="0-0"];
m6_73 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="91-91"];
m6_5 [cluster="lambda expression", file="SpecificationExtensions.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="23-23"];
m6_12 [cluster="lambda expression", file="SpecificationExtensions.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="23-23"];
m6_6 [cluster="lambda expression", file="SpecificationExtensions.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="24-24"];
m6_16 [cluster="lambda expression", file="SpecificationExtensions.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="24-24"];
m6_4 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="21-26"];
m6_11 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="23-23"];
m6_7 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return explodedTokens;", span="25-25"];
m6_15 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="24-24"];
m6_8 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="21-26"];
m6_13 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="23-23"];
m6_17 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="24-24"];
m6_38 [cluster="lambda expression", file="SpecificationExtensions.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="48-49"];
m6_37 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="47-49"];
m6_39 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="47-49"];
m6_51 [cluster="lambda expression", file="SpecificationExtensions.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="69-69"];
m6_54 [cluster="lambda expression", file="SpecificationExtensions.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="73-74"];
m6_59 [cluster="lambda expression", file="SpecificationExtensions.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="73-73"];
m6_50 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="69-69"];
m6_53 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="72-74"];
m6_61 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="79-79"];
m6_52 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="69-69"];
m6_55 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="72-74"];
m6_58 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="73-73"];
m6_60 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="73-73"];
m6_62 [cluster="lambda expression", file="SpecificationExtensions.cs", label="v.Item2", span="79-79"];
m6_63 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="79-79"];
m6_71 [cluster="lambda expression", file="SpecificationExtensions.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="88-88"];
m6_70 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="88-88"];
m6_72 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="88-88"];
m6_74 [cluster="lambda expression", file="SpecificationExtensions.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="91-91"];
m6_75 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="91-91"];
m6_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m6_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="82-82"];
m6_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="SpecificationExtensions.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="87-93"];
m6_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="82-82"];
m6_47 [cluster="Unk.Select", file="SpecificationExtensions.cs", label="Entry Unk.Select", span=""];
m6_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="SpecificationExtensions.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m6_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m6_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-30"];
m6_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m6_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="14-14"];
m6_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m6_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="arguments.Empty()", span="40-40"];
m6_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="42-42"];
m6_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="var firstArg = arguments.First()", span="45-45"];
m6_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-49"];
m6_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="var verbs = Verb.SelectFromTypes(types)", span="51-51"];
m6_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="53-59"];
m6_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m6_69 [cluster="Unk.Return", file="SpecificationExtensions.cs", label="Entry Unk.Return", span=""];
m6_57 [cluster="Unk.AutoDefault", file="SpecificationExtensions.cs", label="Entry Unk.AutoDefault", span=""];
m6_80 [cluster="CommandLine.NullInstance.NullInstance()", file="SpecificationExtensions.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m6_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m6_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m6_76 [cluster="HelpVerbRequestedError.cstr", file="SpecificationExtensions.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m6_81 [file="SpecificationExtensions.cs", label="System.StringComparer", span=""];
m6_82 [file="SpecificationExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m6_83 [file="SpecificationExtensions.cs", label="System.StringComparer", span=""];
m6_84 [file="SpecificationExtensions.cs", label=firstArg, span=""];
m6_85 [file="SpecificationExtensions.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m6_86 [file="SpecificationExtensions.cs", label="System.StringComparer", span=""];
m6_87 [file="SpecificationExtensions.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m6_88 [file="SpecificationExtensions.cs", label=string, span=""];
m6_89 [file="SpecificationExtensions.cs", label="System.StringComparer", span=""];
m8_9 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78"];
m8_10 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="TokenPartitionerTests.cs", label="return new OptionInfo(ShortName, LongName);", span="80-80"];
m8_11 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78"];
m8_12 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m8_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50"];
m8_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50"];
m8_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69"];
m8_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69"];
m8_0 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="41-41"];
m8_1 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="TokenPartitionerTests.cs", label="AutoLongName = true", span="43-43"];
m8_2 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="41-41"];
m8_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59"];
m8_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59"];
m8_13 [file="TokenPartitionerTests.cs", label="CommandLine.OptionAttribute", span=""];
m9_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17"];
m9_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.index = index", span="19-19"];
m9_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17"];
m9_3 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m10_35 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="11: v.IsValue()", span="23-23"];
m10_36 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="23-23"];
m10_37 [cluster="Unk.IsValue", file="ValueSpecification.cs", label="Entry Unk.IsValue", span=""];
m10_38 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="24-24"];
m10_39 [cluster="lambda expression", file="ValueSpecification.cs", label="!values.Contains(x)", span="24-24"];
m10_40 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="24-24"];
m10_42 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="11: CreateValue(t.Text,''true'')", span="27-27"];
m10_41 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="27-27"];
m10_43 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="27-27"];
m10_56 [cluster="lambda expression", file="ValueSpecification.cs", label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="39-39"];
m10_59 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="ValueSpecification.cs", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="106-106"];
m10_60 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="ValueSpecification.cs", label="35: Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="111-111"];
m10_61 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueSpecification.cs", label="value && !addMoveNextIfTrue", span="113-113"];
m10_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="24-24"];
m10_19 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="ValueSpecification.cs", label="return new OptionGroupParser(ignoreUnknownArguments);", span="62-62"];
m10_17 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="ValueSpecification.cs", label="return new LongOptionParser(ignoreUnknownArguments);", span="58-58"];
m10_84 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ValueSpecification.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59"];
m10_24 [cluster="lambda expression", file="ValueSpecification.cs", label="!switches.Contains(x)", span="18-18"];
m10_67 [cluster="lambda expression", file="ValueSpecification.cs", label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="51-51"];
m10_68 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="50-51"];
m10_69 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="57-57"];
m10_70 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="61-70"];
m10_58 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="ValueSpecification.cs", label="return BooleanToParserState(value, false);", span="108-108"];
m10_13 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="ValueSpecification.cs", label="return null;", span="54-54"];
m10_51 [cluster="char?.ToOption()", file="ValueSpecification.cs", label="Entry char?.ToOption()", span="9-9"];
m10_52 [cluster="string.Compare(string, string, System.StringComparison)", file="ValueSpecification.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m10_53 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
m10_14 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="ValueSpecification.cs", label="argument.IsDash()", span="55-55"];
m10_28 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="11: !scalars.Contains(x)", span="20-20"];
m10_29 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="20-20"];
m10_31 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="22-22"];
m10_32 [cluster="lambda expression", file="ValueSpecification.cs", label="!sequences.Contains(x)", span="22-22"];
m10_30 [cluster="Unk.Contains", file="ValueSpecification.cs", label="Entry Unk.Contains", span=""];
m10_33 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="22-22"];
m10_34 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="23-23"];
m10_22 [cluster="string.IsNumeric()", file="ValueSpecification.cs", label="Entry string.IsNumeric()", span="44-44"];
m10_27 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="20-20"];
m10_23 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="18-18"];
m10_44 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="ValueSpecification.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m10_106 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="ValueSpecification.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="87-87"];
m10_107 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="ValueSpecification.cs", label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="85-85"];
m10_16 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="ValueSpecification.cs", label="argument.IsLongOption()", span="56-56"];
m10_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="12-12"];
m10_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="var tokenList = tokens.ToList()", span="16-16"];
m10_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="ValueSpecification.cs", label="14: var switches = PartitionSwitches(tokenList, typeLookup).ToList()", span="17-17"];
m10_91 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m10_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="ValueSpecification.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="12-12"];
m10_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m10_18 [cluster="Unk.Select", file="ValueSpecification.cs", label="Entry Unk.Select", span=""];
m10_15 [cluster="Unk.ToList", file="ValueSpecification.cs", label="Entry Unk.ToList", span=""];
m10_20 [cluster="Unk.Concat", file="ValueSpecification.cs", label="Entry Unk.Concat", span=""];
m10_21 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="73-73"];
m10_85 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="66-66"];
m10_45 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m10_48 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
m10_62 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueSpecification.cs", label="return PresentParserState.Success;", span="113-113"];
m10_25 [cluster="CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", span="33-33"];
m10_93 [cluster="lambda expression", file="ValueSpecification.cs", label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="78-80"];
m10_47 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="ValueSpecification.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="45-45"];
m10_46 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="ValueSpecification.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="40-40"];
m10_50 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="ValueSpecification.cs", label="Exit CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
m10_49 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="ValueSpecification.cs", label="return string.Compare(argument, option.ToOption(),\r\n                caseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase) == 0;", span="96-97"];
m10_63 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueSpecification.cs", label=value, span="114-114"];
m10_64 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueSpecification.cs", label="return PresentParserState.Success | PresentParserState.MoveOnNextElement;", span="116-116"];
m10_55 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="ValueSpecification.cs", label="Exit CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
m10_92 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="77-80"];
m10_94 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="77-80"];
m10_97 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="79-79"];
m10_100 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="79-79"];
m10_103 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="79-79"];
m10_72 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="!option.IsArray && option.IsAttributeArrayCompatible", span="131-131"];
m10_66 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueSpecification.cs", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="111-111"];
m10_73 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="throw new CommandLineParserException();", span="133-133"];
m10_57 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="106-106"];
m10_98 [cluster="lambda expression", file="ValueSpecification.cs", label="t.Equals(f)", span="79-79"];
m10_76 [cluster="lambda expression", file="ValueSpecification.cs", label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()))\r\n                                        : new Token[] { }", span="65-67"];
m10_99 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="79-79"];
m10_102 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="79-79"];
m10_101 [cluster="lambda expression", file="ValueSpecification.cs", label="v.IsValue()", span="79-79"];
m10_105 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="79-79"];
m10_104 [cluster="lambda expression", file="ValueSpecification.cs", label="x.Text", span="79-79"];
m10_74 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="Exit CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="129-129"];
m10_82 [cluster="lambda expression", file="ValueSpecification.cs", label="t.Equals(f)", span="66-66"];
m10_86 [cluster="lambda expression", file="ValueSpecification.cs", label="v.IsValue()", span="66-66"];
m10_75 [cluster="lambda expression", file="ValueSpecification.cs", label="CommandLine.Internal.ArgumentParser", span=""];
m10_77 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="64-67"];
m10_81 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="66-66"];
m10_83 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="66-66"];
m10_87 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="66-66"];
m10_3 [cluster="System.Collections.Generic.List<T>.List()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_10 [cluster="System.Collections.Generic.List<T>.Add(T)", color=green, community=0, file="ValueSpecification.cs", label="11: Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_4 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
m10_6 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="47-47"];
m10_8 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", color=green, community=0, file="ValueSpecification.cs", label="18: Exit CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="47-47"];
m10_5 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="ValueSpecification.cs", label="18: Exit CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
m10_7 [cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="49-49"];
m10_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m10_71 [cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="129-129"];
m10_90 [cluster="Unk.Pairwise", file="ValueSpecification.cs", label="Entry Unk.Pairwise", span=""];
m10_79 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m10_88 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ValueSpecification.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="76-82"];
m10_89 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ValueSpecification.cs", label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="73-73"];
m10_96 [cluster="Unk.CreateValue", file="ValueSpecification.cs", label="Entry Unk.CreateValue", span=""];
m10_65 [cluster="CommandLine.Core.Token.IsValue()", file="ValueSpecification.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m10_54 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ValueSpecification.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m10_108 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m10_95 [cluster="Unk.ToArray", file="ValueSpecification.cs", label="Entry Unk.ToArray", span=""];
m10_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m10_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m10_110 [file="ValueSpecification.cs", label=scalars, span=""];
m10_109 [file="ValueSpecification.cs", label=switches, span=""];
m10_112 [file="ValueSpecification.cs", label=values, span=""];
m10_111 [file="ValueSpecification.cs", label=sequences, span=""];
m10_120 [file="ValueSpecification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m10_114 [file="ValueSpecification.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m10_115 [file="ValueSpecification.cs", label="CommandLine.Core.Token", span=""];
m10_116 [file="ValueSpecification.cs", label="CommandLine.Core.Token", span=""];
m10_113 [file="ValueSpecification.cs", label=t, span=""];
m10_117 [file="ValueSpecification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m10_118 [file="ValueSpecification.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m10_121 [file="ValueSpecification.cs", label="CommandLine.Core.Token", span=""];
m10_119 [file="ValueSpecification.cs", label="CommandLine.Core.Token", span=""];
n4 -> n1  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
n4 -> n2  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_27 -> m1_34  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_27 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=0, style=solid];
m1_30 -> m1_40  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m1_29 -> m1_39  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_32 -> m1_39  [key=0, style=solid];
m1_32 -> m1_41  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_37 -> m1_41  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_42  [key=2, style=dotted];
m1_39 -> m1_27  [color=blue, key=0, style=bold];
m1_10 -> m1_6  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_15 -> m1_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=0, style=solid];
m1_16 -> m1_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_16  [key=0, style=solid];
m1_17 -> m1_21  [key=2, style=dotted];
m1_17 -> m1_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_15  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_8 -> m1_5  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_7  [color=green, key=2, style=dotted];
m1_2 -> m1_42  [color=green, key=2, style=dotted];
m1_2 -> m1_9  [color=green, key=2, style=dotted];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_43  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_46  [color=blue, key=0, style=bold];
m1_49 -> m1_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_0 -> m3_8  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m3_0 -> m3_14  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_18  [color=red, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>", style=dashed];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_4  [color=red, key=2, style=dotted];
m3_1 -> m3_7  [color=red, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_8 -> m3_9  [color=red, key=0, style=solid];
m3_8 -> m3_10  [color=red, key=2, style=dotted];
m3_8 -> m3_11  [color=red, key=2, style=dotted];
m3_8 -> m3_5  [color=red, key=2, style=dotted];
m3_8 -> m3_6  [color=red, key=2, style=dotted];
m3_8 -> m3_12  [color=red, key=2, style=dotted];
m3_8 -> m3_13  [color=red, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_17  [color=red, key=1, label="lambda expression", style=dashed];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=2, style=dotted];
m3_14 -> m3_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m3_18 -> m3_19  [color=red, key=0, style=solid];
m3_18 -> m3_20  [color=red, key=2, style=dotted];
m3_18 -> m3_21  [color=red, key=2, style=dotted];
m3_18 -> m3_22  [color=red, key=2, style=dotted];
m3_18 -> m3_5  [color=red, key=2, style=dotted];
m3_18 -> m3_12  [color=red, key=2, style=dotted];
m3_18 -> m3_23  [color=red, key=1, label="lambda expression", style=dashed];
m3_7 -> m3_8  [color=red, key=0, style=solid];
m3_7 -> m3_14  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m3_7 -> m3_18  [color=red, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m3_7 -> m3_24  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_27  [key=2, style=dotted];
m3_24 -> m3_5  [key=2, style=dotted];
m3_24 -> m3_6  [key=2, style=dotted];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_17 -> m3_18  [color=red, key=0, style=solid];
m3_15 -> m3_13  [color=blue, key=0, style=bold];
m3_19 -> m3_17  [color=blue, key=0, style=bold];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_28  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_31  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_34  [color=blue, key=0, style=bold];
m3_37 -> m3_8  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m3_38 -> m3_8  [color=red, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>", style=dashed];
m3_38 -> m3_18  [color=red, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, Maybe<object>>", style=dashed];
m3_39 -> m3_8  [color=red, key=1, label="System.StringComparer", style=dashed];
m3_39 -> m3_14  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_40 -> m3_14  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m3_40 -> m3_18  [color=red, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m3_40 -> m3_24  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_0 -> m5_3  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<int>", style=dashed];
m5_0 -> m5_4  [color=green, key=1, label="CommandLine.Infrastructure.Maybe<int>", style=dashed];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_0 -> m5_7  [color=darkseagreen4, key=1, label="CommandLine.Core.TargetType", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_0  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_13  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_15  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_19  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_22  [color=green, key=2, style=dotted];
m5_10 -> m5_17  [color=green, key=1, label=attrs, style=dashed];
m5_13 -> m5_14  [color=green, key=0, style=solid];
m5_13 -> m5_25  [color=green, key=2, style=dotted];
m5_13 -> m5_26  [color=green, key=2, style=dotted];
m5_13 -> m5_27  [color=green, key=2, style=dotted];
m5_13 -> m5_28  [color=green, key=2, style=dotted];
m5_13 -> m5_15  [color=green, key=1, label=spec, style=dashed];
m5_13 -> m5_16  [color=green, key=1, label=spec, style=dashed];
m5_15 -> m5_21  [color=green, key=0, style=solid];
m5_15 -> m5_29  [color=green, key=2, style=dotted];
m5_15 -> m5_30  [color=green, key=2, style=dotted];
m5_19 -> m5_21  [color=red, key=0, style=solid];
m5_19 -> m5_25  [color=red, key=2, style=dotted];
m5_19 -> m5_31  [color=red, key=2, style=dotted];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_23  [color=green, key=2, style=dotted];
m5_11 -> m5_13  [color=green, key=1, label=oa, style=dashed];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_19  [color=darkseagreen4, key=1, label=va, style=dashed];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_12 -> m5_17  [color=green, key=0, style=solid];
m5_12 -> m5_24  [color=green, key=2, style=dotted];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_14 -> m5_16  [color=green, key=0, style=solid];
m5_16 -> m5_21  [key=0, style=solid];
m5_18 -> m5_19  [color=red, key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_18 -> m5_24  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_32  [key=2, style=dotted];
m5_21 -> m5_9  [color=blue, key=0, style=bold];
m5_33 -> m5_1  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_3  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_4  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_33 -> m5_7  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_28 -> m6_77  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_79  [key=2, style=dotted];
m6_77 -> m6_80  [key=2, style=dotted];
m6_78 -> m6_28  [color=blue, key=0, style=bold];
m6_36 -> m6_42  [key=0, style=solid];
m6_36 -> m6_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_36 -> m6_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m6_36 -> m6_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_44  [key=2, style=dotted];
m6_42 -> m6_45  [key=2, style=dotted];
m6_42 -> m6_32  [key=2, style=dotted];
m6_42 -> m6_46  [key=2, style=dotted];
m6_42 -> m6_47  [key=2, style=dotted];
m6_42 -> m6_48  [key=2, style=dotted];
m6_42 -> m6_29  [key=2, style=dotted];
m6_42 -> m6_49  [key=2, style=dotted];
m6_42 -> m6_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_42 -> m6_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_42 -> m6_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_43 -> m6_36  [color=blue, key=0, style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_9  [key=2, style=dotted];
m6_5 -> m6_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m6_4 -> m6_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m6_4 -> m6_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_8 -> m6_4  [color=blue, key=0, style=bold];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=2, style=dotted];
m6_38 -> m6_41  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_39 -> m6_37  [color=blue, key=0, style=bold];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_29  [key=2, style=dotted];
m6_51 -> m6_40  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_56  [key=2, style=dotted];
m6_54 -> m6_57  [key=2, style=dotted];
m6_54 -> m6_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_29  [key=2, style=dotted];
m6_59 -> m6_40  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_52 -> m6_50  [color=blue, key=0, style=bold];
m6_55 -> m6_53  [color=blue, key=0, style=bold];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_58  [color=blue, key=0, style=bold];
m6_62 -> m6_63  [key=0, style=solid];
m6_63 -> m6_61  [color=blue, key=0, style=bold];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_40  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_72 -> m6_70  [color=blue, key=0, style=bold];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_76  [key=2, style=dotted];
m6_75 -> m6_73  [color=blue, key=0, style=bold];
m6_34 -> m6_64  [key=0, style=solid];
m6_34 -> m6_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=2, style=dotted];
m6_64 -> m6_67  [key=2, style=dotted];
m6_64 -> m6_68  [key=2, style=dotted];
m6_64 -> m6_69  [key=2, style=dotted];
m6_64 -> m6_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_64 -> m6_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_65 -> m6_34  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_0 -> m6_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_0 -> m6_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_0 -> m6_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_3 -> m6_19  [key=0, style=solid];
m6_3 -> m6_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m6_3 -> m6_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_3 -> m6_22  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_3 -> m6_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_3 -> m6_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m6_3 -> m6_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=0, style=solid];
m6_19 -> m6_26  [key=2, style=dotted];
m6_20 -> m6_25  [key=0, style=solid];
m6_20 -> m6_27  [key=2, style=dotted];
m6_20 -> m6_28  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_29  [key=2, style=dotted];
m6_21 -> m6_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_22 -> m6_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_30  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_31  [key=2, style=dotted];
m6_24 -> m6_32  [key=2, style=dotted];
m6_24 -> m6_33  [key=2, style=dotted];
m6_24 -> m6_34  [key=2, style=dotted];
m6_24 -> m6_28  [key=2, style=dotted];
m6_24 -> m6_35  [key=2, style=dotted];
m6_24 -> m6_36  [key=2, style=dotted];
m6_25 -> m6_3  [color=blue, key=0, style=bold];
m6_81 -> m6_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_81 -> m6_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_81 -> m6_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_81 -> m6_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_82 -> m6_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m6_82 -> m6_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m6_83 -> m6_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_84 -> m6_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m6_85 -> m6_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_85 -> m6_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_85 -> m6_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_86 -> m6_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_86 -> m6_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_86 -> m6_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m6_87 -> m6_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m6_88 -> m6_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_89 -> m6_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=2, style=dotted];
m8_11 -> m8_9  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_3  [color=blue, key=0, style=bold];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_7  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_5  [color=blue, key=0, style=bold];
m8_13 -> m8_1  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m8_13 -> m8_10  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_3 -> m9_1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m10_35 -> m10_36  [color=green, key=0, style=solid];
m10_35 -> m10_37  [color=darkseagreen4, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m10_35 -> m10_38  [color=darkseagreen4, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m10_35 -> m10_39  [color=darkseagreen4, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m10_35 -> m10_40  [color=darkseagreen4, key=1, label="CommandLine.Internal.IArgumentEnumerator", style=dashed];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_3  [key=2, style=dotted];
m10_36 -> m10_39  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_36 -> m10_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_36 -> m10_34  [color=blue, key=0, style=bold];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_40  [key=0, style=solid];
m10_37 -> m10_44  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=0, style=solid];
m10_38 -> m10_28  [key=2, style=dotted];
m10_39 -> m10_37  [key=0, style=solid];
m10_39 -> m10_45  [key=2, style=dotted];
m10_39 -> m10_30  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_42  [key=0, style=solid];
m10_40 -> m10_46  [key=2, style=dotted];
m10_40 -> m10_38  [color=blue, key=0, style=bold];
m10_42 -> m10_43  [color=green, key=0, style=solid];
m10_42 -> m10_44  [color=green, key=2, style=dotted];
m10_41 -> m10_43  [key=0, style=solid];
m10_41 -> m10_47  [key=2, style=dotted];
m10_41 -> m10_42  [color=green, key=0, style=solid];
m10_43 -> m10_35  [color=blue, key=0, style=bold];
m10_43 -> m10_41  [color=blue, key=0, style=bold];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_58  [key=2, style=dotted];
m10_59 -> m10_60  [color=green, key=0, style=solid];
m10_59 -> m10_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_59 -> m10_57  [color=blue, key=0, style=bold];
m10_60 -> m10_60  [color=green, key=1, label=tseq, style=dashed];
m10_60 -> m10_61  [color=green, key=0, style=solid];
m10_60 -> m10_19  [color=green, key=2, style=dotted];
m10_60 -> m10_62  [color=green, key=1, label="lambda expression", style=dashed];
m10_60 -> m10_63  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_61 -> m10_59  [color=blue, key=0, style=bold];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_14  [key=2, style=dotted];
m10_9 -> m10_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_19 -> m10_21  [key=0, style=solid];
m10_19 -> m10_27  [key=2, style=dotted];
m10_17 -> m10_21  [key=0, style=solid];
m10_17 -> m10_25  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_70  [key=0, style=solid];
m10_68 -> m10_66  [color=blue, key=0, style=bold];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_47  [key=2, style=dotted];
m10_69 -> m10_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_69 -> m10_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_70 -> m10_67  [color=blue, key=0, style=bold];
m10_70 -> m10_19  [key=2, style=dotted];
m10_70 -> m10_70  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=2, style=dotted];
m10_13 -> m10_51  [key=0, style=solid];
m10_13 -> m10_21  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_51  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_51 -> m10_53  [key=2, style=dotted];
m10_51 -> m10_54  [key=2, style=dotted];
m10_51 -> m10_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_51 -> m10_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_52 -> m10_13  [color=blue, key=0, style=bold];
m10_53 -> m10_54  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_16  [key=0, style=solid];
m10_14 -> m10_23  [key=2, style=dotted];
m10_28 -> m10_29  [color=green, key=0, style=solid];
m10_28 -> m10_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_28 -> m10_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_28 -> m10_30  [color=green, key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_31  [key=0, style=solid];
m10_29 -> m10_22  [key=2, style=dotted];
m10_29 -> m10_27  [color=blue, key=0, style=bold];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [key=0, style=solid];
m10_32 -> m10_23  [key=2, style=dotted];
m10_32 -> m10_26  [key=2, style=dotted];
m10_32 -> m10_30  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_30 -> m10_34  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_31  [color=blue, key=0, style=bold];
m10_34 -> m10_28  [color=blue, key=0, style=bold];
m10_34 -> m10_35  [color=green, key=0, style=solid];
m10_27 -> m10_28  [color=green, key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_44 -> m10_106  [key=0, style=solid];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_108  [key=2, style=dotted];
m10_107 -> m10_44  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=0, style=solid];
m10_16 -> m10_24  [key=2, style=dotted];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [color=green, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_12  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_13  [color=green, key=2, style=dotted];
m10_2 -> m10_12  [color=green, key=2, style=dotted];
m10_2 -> m10_24  [color=green, key=1, label=switches, style=dashed];
m10_2 -> m10_10  [color=green, key=1, label=switches, style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_11 -> m10_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_11 -> m10_17  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_11 -> m10_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_11 -> m10_19  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_11 -> m10_0  [color=blue, key=0, style=bold];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_12 -> m10_22  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=0, style=solid];
m10_18 -> m10_26  [key=2, style=dotted];
m10_15 -> m10_21  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_21 -> m10_11  [color=blue, key=0, style=bold];
m10_21 -> m10_88  [key=0, style=solid];
m10_21 -> m10_93  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_85 -> m10_86  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_62 -> m10_66  [key=0, style=solid];
m10_25 -> m10_23  [color=blue, key=0, style=bold];
m10_93 -> m10_18  [key=2, style=dotted];
m10_93 -> m10_44  [key=2, style=dotted];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_58  [key=2, style=dotted];
m10_93 -> m10_78  [key=2, style=dotted];
m10_93 -> m10_79  [key=2, style=dotted];
m10_93 -> m10_95  [key=2, style=dotted];
m10_93 -> m10_96  [key=2, style=dotted];
m10_93 -> m10_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_93 -> m10_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_93 -> m10_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_47 -> m10_45  [color=blue, key=0, style=bold];
m10_46 -> m10_44  [key=2, style=dotted];
m10_46 -> m10_47  [key=0, style=solid];
m10_50 -> m10_48  [color=blue, key=0, style=bold];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_51  [key=2, style=dotted];
m10_49 -> m10_52  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_58  [key=2, style=dotted];
m10_63 -> m10_65  [key=2, style=dotted];
m10_63 -> m10_53  [key=2, style=dotted];
m10_63 -> m10_54  [key=2, style=dotted];
m10_63 -> m10_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_64 -> m10_62  [color=blue, key=0, style=bold];
m10_64 -> m10_66  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_53  [color=blue, key=0, style=bold];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_98  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_94 -> m10_92  [color=blue, key=0, style=bold];
m10_97 -> m10_98  [key=0, style=solid];
m10_100 -> m10_101  [key=0, style=solid];
m10_103 -> m10_104  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_72 -> m10_82  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_72 -> m10_74  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_60  [color=blue, key=0, style=bold];
m10_73 -> m10_53  [key=2, style=dotted];
m10_73 -> m10_54  [key=2, style=dotted];
m10_73 -> m10_58  [key=2, style=dotted];
m10_73 -> m10_65  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_73 -> m10_47  [key=2, style=dotted];
m10_57 -> m10_55  [color=blue, key=0, style=bold];
m10_57 -> m10_58  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_84  [key=2, style=dotted];
m10_76 -> m10_78  [key=2, style=dotted];
m10_76 -> m10_79  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_80  [key=2, style=dotted];
m10_76 -> m10_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_76 -> m10_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_99 -> m10_97  [color=blue, key=0, style=bold];
m10_102 -> m10_100  [color=blue, key=0, style=bold];
m10_101 -> m10_65  [key=2, style=dotted];
m10_101 -> m10_102  [key=0, style=solid];
m10_105 -> m10_103  [color=blue, key=0, style=bold];
m10_104 -> m10_105  [key=0, style=solid];
m10_74 -> m10_72  [color=blue, key=0, style=bold];
m10_74 -> m10_71  [color=blue, key=0, style=bold];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_84  [key=2, style=dotted];
m10_86 -> m10_65  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_1  [color=darkseagreen4, key=1, label="CommandLine.Internal.ArgumentParser", style=dashed];
m10_75 -> m10_7  [color=darkseagreen4, key=1, label="CommandLine.Internal.ArgumentParser", style=dashed];
m10_77 -> m10_75  [color=blue, key=0, style=bold];
m10_81 -> m10_82  [key=0, style=solid];
m10_83 -> m10_81  [color=blue, key=0, style=bold];
m10_87 -> m10_85  [color=blue, key=0, style=bold];
m10_3 -> m10_5  [color=green, key=1, label=tokensExceptSwitches, style=dashed];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_14  [key=2, style=dotted];
m10_3 -> m10_15  [key=2, style=dotted];
m10_3 -> m10_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_11  [color=green, key=0, style=solid];
m10_10 -> m10_18  [color=green, key=2, style=dotted];
m10_10 -> m10_19  [color=green, key=2, style=dotted];
m10_10 -> m10_20  [color=green, key=2, style=dotted];
m10_10 -> m10_21  [color=green, key=2, style=dotted];
m10_10 -> m10_22  [color=green, key=2, style=dotted];
m10_10 -> m10_41  [color=green, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_45  [color=green, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_48  [color=green, key=1, label="lambda expression", style=dashed];
m10_4 -> m10_10  [color=green, key=1, label=scalars, style=dashed];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_28  [color=green, key=1, label=scalars, style=dashed];
m10_4 -> m10_12  [key=2, style=dotted];
m10_4 -> m10_16  [key=2, style=dotted];
m10_6 -> m10_10  [color=green, key=1, label=sequences, style=dashed];
m10_6 -> m10_12  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_17  [key=2, style=dotted];
m10_6 -> m10_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m10_8 -> m10_10  [color=green, key=1, label=values, style=dashed];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_14  [color=green, key=2, style=dotted];
m10_8 -> m10_15  [color=green, key=2, style=dotted];
m10_8 -> m10_34  [color=green, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_39  [color=green, key=1, label=values, style=dashed];
m10_8 -> m10_6  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_5 -> m10_14  [color=green, key=2, style=dotted];
m10_5 -> m10_15  [color=green, key=2, style=dotted];
m10_5 -> m10_27  [color=green, key=1, label="lambda expression", style=dashed];
m10_5 -> m10_7  [color=green, key=1, label=tokensExceptSwitchesAndScalars, style=dashed];
m10_5 -> m10_4  [color=blue, key=0, style=bold];
m10_7 -> m10_8  [color=green, key=0, style=solid];
m10_7 -> m10_9  [color=darkseagreen4, key=1, label=tokensExceptSwitchesAndScalarsAndSeq, style=dashed];
m10_7 -> m10_14  [key=2, style=dotted];
m10_7 -> m10_15  [key=2, style=dotted];
m10_7 -> m10_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_7 -> m10_10  [key=2, style=dotted];
m10_71 -> m10_69  [color=blue, key=0, style=bold];
m10_71 -> m10_72  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_88  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_88 -> m10_90  [key=2, style=dotted];
m10_88 -> m10_91  [key=2, style=dotted];
m10_88 -> m10_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_89 -> m10_21  [color=blue, key=0, style=bold];
m10_65 -> m10_66  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_56  [key=2, style=dotted];
m10_54 -> m10_52  [key=2, style=dotted];
m10_110 -> m10_28  [color=green, key=1, label=scalars, style=dashed];
m10_109 -> m10_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m10_112 -> m10_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_111 -> m10_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m10_120 -> m10_93  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_114 -> m10_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_115 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_116 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_113 -> m10_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_117 -> m10_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_117 -> m10_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_118 -> m10_73  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_121 -> m10_98  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_119 -> m10_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_119 -> m10_82  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
}
