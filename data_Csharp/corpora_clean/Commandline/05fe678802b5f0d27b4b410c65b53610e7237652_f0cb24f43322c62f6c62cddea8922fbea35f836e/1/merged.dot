digraph  {
m0_30 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs"];
m0_31 [label="Exit CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs"];
m0_52 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ParserResult.cs"];
m0_46 [label="Entry CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs"];
m0_47 [label="var notParsed = parserResult as NotParsed<T>", span="203-203", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", color=green, community=0, file="ParserResult.cs"];
m0_48 [label="notParsed != null", span="204-204", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", color=green, community=0, file="ParserResult.cs"];
m0_49 [label="return new NotParsed<T>(notParsed.Value, func(notParsed.Errors));", span="205-205", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", color=green, community=0, file="ParserResult.cs"];
m0_50 [label="return parserResult;", span="206-206", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", color=green, community=0, file="ParserResult.cs"];
m0_51 [label="Exit CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199", cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs"];
m2_0 [label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_1 [label="result.Tag == ResultType.Ok", span="14-14", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_2 [label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_4 [label="return Enumerable.Empty<TMessage>();", span="19-19", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_3 [label="return ok.Value.Messages;", span="17-17", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_5 [label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs"];
m2_6 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ResultExtensions.cs"];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_30  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_49  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>"];
m0_46 -> m0_50  [key=1, style=dashed, color=green, label="CommandLine.ParserResult<T>"];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_49  [key=1, style=dashed, color=green, label=notParsed];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_51  [key=0, style=solid, color=green];
m0_49 -> m0_30  [key=2, style=dotted, color=green];
m0_49 -> m0_52  [key=2, style=dotted, color=green];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_51 -> m0_46  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
}
