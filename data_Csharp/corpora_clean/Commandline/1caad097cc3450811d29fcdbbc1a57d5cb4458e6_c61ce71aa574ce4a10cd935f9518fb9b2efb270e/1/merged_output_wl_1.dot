digraph  {
m0_13 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PreprocessorGuards.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_0 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="PreprocessorGuards.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="13-13"];
m0_1 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", color=green, community=0, file="PreprocessorGuards.cs", label="0: return new List<Func<IEnumerable<string>, IEnumerable<Error>>>\r\n                {\r\n                    HelpCommand(nameComparer)\r\n                };", span="15-18"];
m0_2 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="PreprocessorGuards.cs", label="Exit CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="13-13"];
m0_11 [cluster="System.StringComparer.Equals(string, string)", file="PreprocessorGuards.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_7 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Entry lambda expression", span="24-27"];
m0_8 [cluster="lambda expression", color=green, community=0, file="PreprocessorGuards.cs", label="0: nameComparer.Equals(''--help'', arguments.First())\r\n                        ? new Error[] { new HelpRequestedError() }\r\n                        : Enumerable.Empty<Error>()", span="25-27"];
m0_9 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Exit lambda expression", span="24-27"];
m0_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PreprocessorGuards.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_12 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="PreprocessorGuards.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353"];
m0_4 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Entry CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", span="21-21"];
m0_5 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", color=green, community=0, file="PreprocessorGuards.cs", label="0: return\r\n                arguments =>\r\n                    nameComparer.Equals(''--help'', arguments.First())\r\n                        ? new Error[] { new HelpRequestedError() }\r\n                        : Enumerable.Empty<Error>();", span="23-27"];
m0_6 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Exit CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", span="21-21"];
m0_3 [cluster="System.Collections.Generic.List<T>.List()", file="PreprocessorGuards.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_14 [file="PreprocessorGuards.cs", label="System.StringComparer", span=""];
m1_14 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m1_15 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="ReflectionExtensions.cs", label=condition, span="35-35"];
m1_16 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="ReflectionExtensions.cs", label="builder.AppendFormat(format, args)", span="37-37"];
m1_17 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="ReflectionExtensions.cs", label="return builder;", span="39-39"];
m1_18 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m1_19 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="ReflectionExtensions.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m1_13 [cluster="System.Text.StringBuilder.Append(char)", file="ReflectionExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_24 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="47-47"];
m1_25 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="return builder == null ? 0 : builder.Length;", span="49-49"];
m1_26 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="47-47"];
m1_7 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="21-21"];
m1_8 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label=condition, span="23-23"];
m1_9 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label=values, span="25-25"];
m1_10 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label="builder.Append(value)", span="27-27"];
m1_11 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label="return builder;", span="30-30"];
m1_12 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="21-21"];
m1_0 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m1_1 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label=condition, span="11-11"];
m1_2 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label=values, span="13-13"];
m1_3 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label="builder.Append(value)", span="15-15"];
m1_4 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label="return builder;", span="18-18"];
m1_5 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m1_23 [cluster="System.Text.StringBuilder.ToString()", file="ReflectionExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_6 [cluster="System.Text.StringBuilder.Append(string)", file="ReflectionExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_20 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="42-42"];
m1_21 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="return builder == null ? string.Empty : builder.ToString();", span="44-44"];
m1_22 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="ReflectionExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="42-42"];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_10  [color=green, key=2, style=dotted];
m0_8 -> m0_11  [color=green, key=2, style=dotted];
m0_8 -> m0_12  [color=green, key=2, style=dotted];
m0_8 -> m0_13  [color=green, key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_8  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_4 -> m0_0  [color=darkorchid, key=3, label="Parameter variable System.StringComparer nameComparer", style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_14 -> m0_8  [color=green, key=1, label="System.StringComparer", style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_14  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_24  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label="params char[]", style=dashed];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_10 -> m1_9  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_7  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=solid];
m1_3 -> m1_6  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
}
