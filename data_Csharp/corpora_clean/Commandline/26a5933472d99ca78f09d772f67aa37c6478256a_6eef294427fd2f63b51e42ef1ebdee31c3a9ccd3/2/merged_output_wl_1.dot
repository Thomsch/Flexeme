digraph  {
n26 [label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", span=""];
n27 [label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", span=""];
n0 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
n1 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="kernel = new StandardKernel()", span="13-13"];
n2 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext.ExternalInjectionContext()", span="11-11"];
n3 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="36-36"];
n4 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
n5 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="kernel.Bind<IWeapon>().To<Sword>()", span="22-22"];
n6 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="var warrior = new ExternalWarrior()", span="24-24"];
n11 [cluster="Ninject.Syntax.BindingRoot.Bind<T>()", label="Entry Ninject.Syntax.BindingRoot.Bind<T>()", span="27-27"];
n12 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="40-40"];
n7 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="kernel.Inject(warrior)", span="25-25"];
n13 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.ExternalWarrior.ExternalWarrior()", span="43-43"];
n8 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="warrior.Weapon.ShouldNotBeNull()", span="27-27"];
n9 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="warrior.Weapon.ShouldBeInstanceOf<Sword>()", span="28-28"];
n14 [cluster="Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", label="Entry Ninject.KernelBase.Inject(object, params Ninject.Parameters.IParameter[])", span="264-264"];
n15 [cluster="Unk.ShouldNotBeNull", label="Entry Unk.ShouldNotBeNull", span=""];
n10 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceOfKernelIsInjected()", span="20-20"];
n16 [cluster="Unk.>", label="Entry Unk.>", span=""];
n17 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="Entry Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
n18 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="var instance = new NotifiesWhenDisposed()", span="34-34"];
n19 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="kernel.Inject(instance)", span="36-36"];
n23 [cluster="Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", label="Entry Ninject.Tests.Fakes.NotifiesWhenDisposed.NotifiesWhenDisposed()", span="5-5"];
n21 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="instance.IsDisposed.ShouldBeFalse()", span="39-39"];
n20 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="kernel.Dispose()", span="37-37"];
n24 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose()", span="29-29"];
n22 [cluster="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", label="Exit Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled.InstanceIsNotTrackedForDeactivation()", span="32-32"];
n25 [cluster="Unk.ShouldBeFalse", label="Entry Unk.ShouldBeFalse", span=""];
d5 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", color=green, community=0, label="1: ae.Current.Should().Equal(''two'')", span="50-50"];
d1 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="43-43"];
d4 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="49-49"];
d6 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="Exit CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", span="41-41"];
d11 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d12 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d0 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="Entry CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", span="41-41"];
d2 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="ae.MoveNext()", span="45-45"];
d7 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
d3 [cluster="CommandLine.Tests.ArgumentParserFixture.Get_next_input_values()", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="47-47"];
d13 [label="CommandLine.Tests.ArgumentParserFixture", span=""];
d10 [cluster="Unk.ElementsShouldBeEqual", label="Entry Unk.ElementsShouldBeEqual", span=""];
d8 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.Internal.StringArrayEnumerator.MoveNext()", span="81-81"];
d9 [cluster="Unk.PublicWrapperOfGetNextInputValues", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
m1_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m1_9 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_10 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="1: expected.Length.Should().Equal(actual.Count)", span="50-50"];
m1_12 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i < expected.Length", span="51-51"];
m1_13 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="1: expected[i].Should().Equal(actual[i])", span="53-53"];
m1_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="int i = 0", span="51-51"];
m1_14 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i++", span="51-51"];
m1_15 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_0 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m1_1 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="1: expected.Length.Should().Equal(actual.Length)", span="41-41"];
m1_3 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i < expected.Length", span="42-42"];
m1_4 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="1: expected[i].Should().Equal(actual[i])", span="44-44"];
m1_2 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="int i = 0", span="42-42"];
m1_5 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i++", span="42-42"];
m1_6 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m2_70 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m2_229 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="163-163"];
m2_139 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m2_4 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
m2_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="61-61"];
m2_6 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="58-58"];
m2_134 [cluster="CommandLine.ParserContext.HasNoArguments()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasNoArguments()", span="60-60"];
m2_71 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m2_197 [cluster="object.HasVerbHelp()", file="CommandLineParser.cs", label="Entry object.HasVerbHelp()", span="43-43"];
m2_230 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m2_231 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Dispose(false)", span="533-533"];
m2_232 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m2_136 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m2_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m2_41 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
m2_161 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m2_78 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m2_203 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="!options.CanReceiveParserState()", span="484-484"];
m2_205 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="488-488"];
m2_206 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.GetValue(options, null) == null", span="490-490"];
m2_207 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.SetValue(options, new ParserState(), null)", span="493-493"];
m2_208 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var parserState = (IParserState) property.GetValue(options, null)", span="495-495"];
m2_209 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label=errors, span="496-496"];
m2_204 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="return;", span="486-486"];
m2_210 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="parserState.Errors.Add(error)", span="498-498"];
m2_211 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m2_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m2_20 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="117-117"];
m2_21 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="118-118"];
m2_22 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="120-120"];
m2_23 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="return DoParseArguments(args, options);", span="121-121"];
m2_24 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m2_173 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m2_174 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="416-416"];
m2_175 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="417-417"];
m2_176 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="419-419"];
m2_177 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="421-421"];
m2_178 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m2_191 [cluster="System.Environment.Exit(int)", file="CommandLineParser.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m2_79 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m2_138 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m2_47 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m2_48 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, file="CommandLineParser.cs", label="3: bool hadError = false", span="156-156"];
m2_49 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, _settings)", span="157-157"];
m2_51 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, file="CommandLineParser.cs", label="0: var target = new Target(context.Target)", span="159-159"];
m2_52 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, file="CommandLineParser.cs", label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(context.Arguments)", span="161-161"];
m2_58 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var result = parser.Parse(arguments, optionMap, context.Target)", span="172-172"];
m2_60 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="SetParserStateIfNeeded(context.Target, parser.PostParsingState)", span="175-175"];
m2_67 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError |= !optionMap.EnforceRules()", span="194-194"];
m2_50 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="optionMap.SetDefaults()", span="158-158"];
m2_64 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, file="CommandLineParser.cs", label="0: target.IsValueListDefined", span="185-185"];
m2_65 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=red, community=0, file="CommandLineParser.cs", label="0: !target.AddValueItemIfAllowed(argument)", span="187-187"];
m2_53 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="162-162"];
m2_54 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var argument = arguments.Current", span="164-164"];
m2_63 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="182-182"];
m2_55 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(argument)", span="165-165"];
m2_56 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="169-169"];
m2_57 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="parser != null", span="170-170"];
m2_59 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="173-173"];
m2_62 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="180-180"];
m2_61 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError = true", span="176-176"];
m2_66 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError = true", span="189-189"];
m2_68 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return !hadError;", span="196-196"];
m2_69 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m2_202 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="248-248"];
m2_39 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m2_81 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="var caseSensitive = _settings.CaseSensitive", span="201-201"];
m2_82 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label=args, span="202-202"];
m2_83 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="helpOption.ShortName != null", span="204-204"];
m2_84 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="206-206"];
m2_86 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="211-211"];
m2_87 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="215-215"];
m2_89 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return false;", span="220-220"];
m2_85 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="208-208"];
m2_88 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="217-217"];
m2_90 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m2_133 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m2_168 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m2_169 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="394-394"];
m2_170 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="395-395"];
m2_171 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", span="397-397"];
m2_172 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m2_167 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m2_185 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="!DoParseArguments(args, options)", span="451-451"];
m2_186 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="InvokeAutoBuildIfNeeded(options)", span="453-453"];
m2_187 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Environment.Exit(exitCode)", span="456-456"];
m2_188 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="return true;", span="464-464"];
m2_189 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m2_12 [cluster="CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", span="45-45"];
m2_76 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="52-52"];
m2_135 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m2_154 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="string helpText", span="338-338"];
m2_155 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="verb == null", span="339-339"];
m2_156 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="341-341"];
m2_157 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="345-345"];
m2_158 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="_settings.HelpWriter != null", span="347-347"];
m2_159 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="_settings.HelpWriter.Write(helpText)", span="349-349"];
m2_160 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m2_140 [cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", span="48-48"];
m2_93 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m2_94 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="found = false", span="234-234"];
m2_95 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb)", span="235-235"];
m2_96 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="return target;", span="237-237"];
m2_97 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="239-239"];
m2_99 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="241-241"];
m2_98 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="found = pair != null", span="240-240"];
m2_100 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m2_162 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m2_163 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="374-374"];
m2_164 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="375-375"];
m2_165 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", span="377-377"];
m2_166 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m2_199 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="478-478"];
m2_200 [cluster="lambda expression", file="CommandLineParser.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="478-478"];
m2_201 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="478-478"];
m2_214 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m2_38 [cluster="CommandLine.ParserContext.ParserContext(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="42-42"];
m2_103 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m2_104 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb) || (verb.Length > 0 && verb[0] == '-')", span="254-254"];
m2_108 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return string.Compare(_context.FirstArgument, verb, _settings.StringComparison) == 0;", span="262-262"];
m2_105 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return false;", span="256-256"];
m2_106 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="!_context.HasAtLeastOneArgument()", span="258-258"];
m2_107 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="return false;", span="260-260"];
m2_109 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m2_46 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m2_112 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(context.Target)", span="267-267"];
m2_113 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(context.Target)", span="268-268"];
m2_114 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="context.HasNoArguments()", span="269-269"];
m2_116 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="273-273"];
m2_118 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, verbs, _settings)", span="277-277"];
m2_119 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="TryParseHelpVerb(context.Arguments, context.Target, helpInfo, optionMap)", span="279-279"];
m2_121 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbOption = optionMap[context.FirstArgument]", span="284-284"];
m2_124 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", span="290-290"];
m2_126 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption.GetValue(context.Target) == null", span="294-294"];
m2_127 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption.CreateInstance(context.Target)", span="297-297"];
m2_128 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="var verbResult = DoParseArgumentsCore(context.ToCoreInstance(verbOption))", span="299-299"];
m2_130 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, context.FirstArgument)", span="303-303"];
m2_115 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="helpInfo != null || _settings.HelpWriter != null", span="271-271"];
m2_123 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="helpInfo != null", span="288-288"];
m2_117 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="275-275"];
m2_120 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="282-282"];
m2_122 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="verbOption == null", span="286-286"];
m2_125 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return false;", span="292-292"];
m2_129 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="!verbResult", span="300-300"];
m2_131 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return verbResult;", span="305-305"];
m2_132 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m2_110 [cluster="CommandLine.ParserContext.HasAtLeastOneArgument()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasAtLeastOneArgument()", span="65-65"];
m2_91 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
m2_196 [cluster="object.HasHelp()", file="CommandLineParser.cs", label="Entry object.HasHelp()", span="38-38"];
m2_45 [cluster="object.HasVerbs()", file="CommandLineParser.cs", label="Entry object.HasVerbs()", span="33-33"];
m2_74 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m2_80 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m2_0 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m2_1 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings()", span="53-53"];
m2_2 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m2_8 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m2_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="72-72"];
m2_10 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="_settings = settings", span="73-73"];
m2_11 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m2_190 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m2_192 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="469-471"];
m2_194 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="_settings.HelpWriter.Write(HelpText.AutoBuild(options,\r\n                current => HelpText.DefaultParsingErrorsHandler(options, current), options.HasVerbs()))", span="477-478"];
m2_193 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="return;", span="473-473"];
m2_195 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m2_215 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_221 [cluster="System.GC.SuppressFinalize(object)", file="CommandLineParser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m2_75 [cluster="string.IsNullOrEmpty(string)", file="CommandLineParser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_40 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m2_43 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return context.Target.HasVerbs() ?\r\n                DoParseArgumentsVerbs(context) :\r\n                DoParseArgumentsCore(context);", span="149-151"];
m2_44 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m2_212 [cluster="object.CanReceiveParserState()", file="CommandLineParser.cs", label="Entry object.CanReceiveParserState()", span="48-48"];
m2_220 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m2_222 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=_disposed, span="514-514"];
m2_224 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=disposing, span="518-518"];
m2_223 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="return;", span="516-516"];
m2_225 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings != null", span="520-520"];
m2_226 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings.Dispose()", span="522-522"];
m2_227 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_disposed = true", span="524-524"];
m2_228 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m2_216 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose()", span="505-505"];
m2_217 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Dispose(true)", span="507-507"];
m2_218 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="GC.SuppressFinalize(this)", span="509-509"];
m2_219 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose()", span="505-505"];
m2_77 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
m2_92 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
m2_198 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", span="209-209"];
m2_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m2_137 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m2_141 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="310-310"];
m2_142 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="helpInfo != null && helpWriter != null", span="311-311"];
m2_143 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", span="313-313"];
m2_144 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var verb = args.Length > 1 ? args[1] : null", span="316-316"];
m2_146 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="var verbOption = optionMap[verb]", span="319-319"];
m2_148 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption.GetValue(options) == null", span="322-322"];
m2_149 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption.CreateInstance(options)", span="325-325"];
m2_150 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="329-329"];
m2_152 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="return false;", span="333-333"];
m2_145 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verb != null", span="317-317"];
m2_147 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="verbOption != null", span="320-320"];
m2_151 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="return true;", span="330-330"];
m2_153 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m2_72 [cluster="CommandLine.Internal.Target.Target(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m2_213 [cluster="CommandLine.ParserState.ParserState()", file="CommandLineParser.cs", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
m2_7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m2_111 [cluster="string.Compare(string, string, System.StringComparison)", file="CommandLineParser.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m2_179 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m2_180 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="441-441"];
m2_181 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="442-442"];
m2_182 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", span="444-444"];
m2_183 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", span="446-446"];
m2_184 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m2_101 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m2_18 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m2_25 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="126-126"];
m2_27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="_context = new ParserContext(args, options)", span="129-129"];
m2_29 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsDispatcher(_context)", span="134-134"];
m2_31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="137-137"];
m2_26 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="127-127"];
m2_28 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="pair != null && helpWriter != null", span="131-131"];
m2_32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="helpWriter.Write(helpText)", span="138-138"];
m2_35 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return DoParseArgumentsDispatcher(_context);", span="144-144"];
m2_30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="string helpText", span="136-136"];
m2_34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return true;", span="141-141"];
m2_33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return false;", span="139-139"];
m2_36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m2_102 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_42 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m2_13 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m2_14 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="96-96"];
m2_15 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="97-97"];
m2_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="return DoParseArguments(args, options);", span="99-99"];
m2_17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m2_233 [file="CommandLineParser.cs", label="CommandLine.CommandLineParser", span=""];
m2_234 [file="CommandLineParser.cs", label=object, span=""];
m3_117 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", span="193-193"];
m3_118 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="disposing && !IsDisposed", span="195-195"];
m3_121 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="base.Dispose(disposing)", span="200-200"];
m3_119 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="this.kernel.Dispose()", span="197-197"];
m3_120 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="this.kernel = null", span="198-198"];
m3_122 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.Dispose(bool)", span="193-193"];
m3_19 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="CommandLine.Tests.CommandLineParserBaseFixture", span=""];
m3_20 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="46-46"];
m3_21 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="47-47"];
m3_22 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: this.kernel.Bind<IWarrior>().To<Ninja>()\r\n                .WithPropertyValue(''SecondaryWeapon'', context => new Sword())\r\n                .WithPropertyValue(''VerySecretWeapon'', context => new Sword())", span="48-50"];
m3_23 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="51-51"];
m3_24 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: ValidateNinjaWarriorWithOverides(warrior)", span="52-52"];
m3_25 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValuesOverrideDefaultBinding()", span="44-44"];
m3_7 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m3_13 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="34-34"];
m3_39 [cluster="Ninject.Parameters.PropertyValue.PropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Parameters.PropertyValue.PropertyValue(string, System.Func<Ninject.Activation.IContext, object>)", span="35-35"];
m3_124 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m3_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="1: Parser = new CommandLineParser()", span="55-55"];
m3_18 [cluster="Unk.False", file="CommandLineParserBaseFixture.cs", label="Entry Unk.False", span=""];
m3_74 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", span="110-110"];
m3_75 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="112-112"];
m3_76 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="113-113"];
m3_77 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<OwnStyleNinja>()", span="114-114"];
m3_78 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldNotBeNull()", span="116-116"];
m3_79 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.OffHandWeapon.ShouldNotBeNull()", span="117-117"];
m3_80 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecondaryWeapon.ShouldNotBeNull()", span="118-118"];
m3_81 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecretWeaponAccessor.ShouldNotBeNull()", span="119-119"];
m3_82 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.VerySecretWeaponAccessor.ShouldNotBeNull()", span="120-120"];
m3_83 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OverriddenPropertiesAreInjected()", span="110-110"];
m3_8 [cluster="Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IResolutionRoot.Get<T>(params Ninject.Parameters.IParameter[])", span="34-34"];
m3_9 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="0: Entry Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", span="177-177"];
m3_10 [cluster="lambda expression", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="0: Entry lambda expression", span="28-28"];
m3_11 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="context.Kernel.Get<IWeapon>()", span="28-28"];
m3_14 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithPropertyValue(''Weapon'', this.kernel.Get<IWeapon>())", span="36-37"];
m3_15 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="1: var warrior = this.kernel.Get<IWarrior>()", span="38-38"];
m3_16 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="1: ValidateWarrior(warrior)", span="39-39"];
m3_17 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="34-34"];
m3_30 [cluster="Ninject.Tests.Fakes.Sword.Sword()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Fakes.Sword.Sword()", span="4-4"];
m3_85 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", span="124-124"];
m3_86 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="126-126"];
m3_87 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="127-127"];
m3_88 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<FatherStyleNinja>()", span="128-128"];
m3_89 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldNotBeNull()", span="130-130"];
m3_90 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.OffHandWeapon.ShouldNotBeNull()", span="131-131"];
m3_91 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecondaryWeapon.ShouldNotBeNull()", span="132-132"];
m3_92 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.SecretWeaponAccessor.ShouldNotBeNull()", span="133-133"];
m3_93 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="warrior.VerySecretWeaponAccessor.ShouldNotBeNull()", span="134-134"];
m3_94 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.ParentPropertiesAreInjected()", span="124-124"];
m3_102 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", span="171-171"];
m3_103 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="this.kernel = new StandardKernel()", span="173-173"];
m3_104 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWeapon>().To<Shuriken>()", span="174-174"];
m3_105 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.SetUp()", span="171-171"];
m3_106 [cluster="Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.StandardKernel.StandardKernel(params Ninject.Modules.INinjectModule[])", span="30-30"];
m3_4 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="25-25"];
m3_6 [cluster="Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IBindingToSyntax<T>.To<TImplementation>()", span="42-42"];
m3_60 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="86-86"];
m3_12 [cluster="Unk.Should", file="CommandLineParserBaseFixture.cs", label="Entry Unk.Should", span=""];
m3_27 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="49-49"];
m3_31 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="50-50"];
m3_28 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="49-49"];
m3_29 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="49-49"];
m3_32 [cluster="lambda expression", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: new Sword()", span="50-50"];
m3_33 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="50-50"];
m3_42 [cluster="lambda expression", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: context.Kernel.Get<IWeapon>()", span="64-64"];
m3_41 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="64-64"];
m3_43 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="64-64"];
m3_57 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Entry lambda expression", span="85-85"];
m3_58 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="85-85"];
m3_59 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="85-85"];
m3_61 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="new Sword()", span="86-86"];
m3_62 [cluster="lambda expression", file="CommandLineParserBaseFixture.cs", label="Exit lambda expression", span="86-86"];
m3_50 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", span="80-80"];
m3_51 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="82-82"];
m3_52 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectParentPrivateProperties = true", span="83-83"];
m3_53 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<Ninja>()\r\n                .WithParameter(new PropertyValue(''SecondaryWeapon'', context => new Sword()))\r\n                .WithParameter(new PropertyValue(''VerySecretWeapon'', context => new Sword()))", span="84-86"];
m3_54 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="87-87"];
m3_55 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="ValidateNinjaWarriorWithOverides(warrior)", span="88-88"];
m3_56 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValuesOverrideDefaultBinding()", span="80-80"];
m3_97 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="153-153"];
m3_98 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.FatherStyleNinja.FatherStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="153-153"];
m3_107 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldBeInstanceOf<FootSoldier>()", span="179-179"];
m3_108 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldNotBeNull()", span="180-180"];
m3_109 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="181-181"];
m3_110 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.ValidateWarrior(Ninject.Tests.Fakes.IWarrior)", span="177-177"];
m3_63 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", span="97-97"];
m3_64 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Settings.InjectNonPublic = true", span="99-99"];
m3_65 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<Ninja>()", span="100-100"];
m3_66 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="101-101"];
m3_67 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Ninja>(warrior)", span="102-102"];
m3_68 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(warrior.Weapon)", span="103-103"];
m3_69 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Ninja ninja = warrior as Ninja", span="104-104"];
m3_70 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(ninja.SecondaryWeapon)", span="105-105"];
m3_71 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Assert.IsType<Shuriken>(ninja.VerySecretWeaponAccessor)", span="106-106"];
m3_72 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.DefaultBindingsAreUsed()", span="97-97"];
m3_0 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="25-25"];
m3_1 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithPropertyValue(''Weapon'', context => context.Kernel.Get<IWeapon>())", span="27-28"];
m3_2 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="29-29"];
m3_3 [cluster="Ninject.Tests.Integration.WithPropertyValueTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="ValidateWarrior(warrior)", span="30-30"];
m3_95 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="139-139"];
m3_96 [cluster="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied.OwnStyleNinja.OwnStyleNinja(Ninject.Tests.Fakes.IWeapon)", span="139-139"];
m3_49 [cluster="Ninject.Parameters.PropertyValue.PropertyValue(string, object)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Parameters.PropertyValue.PropertyValue(string, object)", span="28-28"];
m3_26 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", span="184-184"];
m3_111 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.ShouldBeInstanceOf<Ninja>()", span="186-186"];
m3_112 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="warrior.Weapon.ShouldBeInstanceOf<Shuriken>()", span="187-187"];
m3_113 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Ninja ninja = warrior as Ninja", span="188-188"];
m3_114 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="ninja.SecondaryWeapon.ShouldBeInstanceOf<Sword>()", span="189-189"];
m3_115 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="ninja.VerySecretWeaponAccessor.ShouldBeInstanceOf<Sword>()", span="190-190"];
m3_116 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.ValidateNinjaWarriorWithOverides(Ninject.Tests.Fakes.IWarrior)", span="184-184"];
m3_44 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="70-70"];
m3_45 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithParameter(new PropertyValue(''Weapon'', this.kernel.Get<IWeapon>()))", span="72-73"];
m3_46 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="var warrior = this.kernel.Get<IWarrior>()", span="74-74"];
m3_47 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="ValidateWarrior(warrior)", span="75-75"];
m3_48 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeUsingSuppliedValue()", span="70-70"];
m3_40 [cluster="Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Syntax.IBindingWithSyntax<T>.WithParameter(Ninject.Parameters.IParameter)", span="262-262"];
m3_84 [cluster="Unk.ShouldNotBeNull", file="CommandLineParserBaseFixture.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m3_34 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="61-61"];
m3_35 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="0: this.kernel.Bind<IWarrior>().To<FootSoldier>()\r\n                .WithParameter(new PropertyValue(''Weapon'', context => context.Kernel.Get<IWeapon>()))", span="63-64"];
m3_36 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: var warrior = this.kernel.Get<IWarrior>()", span="65-65"];
m3_37 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", color=red, community=0, file="CommandLineParserBaseFixture.cs", label="1: ValidateWarrior(warrior)", span="66-66"];
m3_38 [cluster="Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.WithParameterTests.PropertyValueIsAssignedWhenNoInjectAttributeIsSuppliedUsingCallback()", span="61-61"];
m3_123 [cluster="System.IDisposable.Dispose()", file="CommandLineParserBaseFixture.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_99 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="Entry Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", span="165-165"];
m3_100 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="this.SetUp()", span="167-167"];
m3_101 [cluster="Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", file="CommandLineParserBaseFixture.cs", label="Exit Ninject.Tests.Integration.PropertyInjectionTests.PropertyInjectionTests()", span="165-165"];
m3_125 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WithPropertyValueTests", span=""];
m3_126 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WithParameterTests", span=""];
m3_127 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", span=""];
m3_128 [file="CommandLineParserBaseFixture.cs", label="Ninject.Tests.Integration.PropertyInjectionTests", span=""];
m4_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m4_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="69-69"];
m4_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="70-70"];
m4_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="72-72"];
m4_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m4_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m4_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m4_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="112-112"];
m4_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="113-113"];
m4_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9.999, options.DoubleValue)", span="116-116"];
m4_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="115-115"];
m4_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: options = new NullableTypesOptions()", span="118-118"];
m4_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="result = base.Parser.ParseArguments(new string[] { }, options)", span="119-119"];
m4_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsNull(options.DoubleValue)", span="122-122"];
m4_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="121-121"];
m4_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m4_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m4_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="78-78"];
m4_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="79-79"];
m4_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(FileAccess.ReadWrite, options.EnumValue)", span="82-82"];
m4_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="81-81"];
m4_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: options = new NullableTypesOptions()", span="84-84"];
m4_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m4_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsNull(options.EnumValue)", span="88-88"];
m4_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="87-87"];
m4_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m4_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m4_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="94-94"];
m4_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="95-95"];
m4_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="97-97"];
m4_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m4_14 [cluster="Unk.IsNull", file="CommandLineParserFixture.cs", label="Entry Unk.IsNull", span=""];
m4_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m4_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="44-44"];
m4_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="45-45"];
m4_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(99, options.IntegerValue)", span="48-48"];
m4_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="47-47"];
m4_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: options = new NullableTypesOptions()", span="50-50"];
m4_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { }, options)", span="51-51"];
m4_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsNull(options.IntegerValue)", span="54-54"];
m4_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="53-53"];
m4_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m4_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m4_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="137-137"];
m4_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="138-138"];
m4_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="140-140"];
m4_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m4_10 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m4_13 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m4_15 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m4_16 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="60-60"];
m4_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="61-61"];
m4_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="63-63"];
m4_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m4_20 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m4_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m4_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="103-103"];
m4_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="104-104"];
m4_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="106-106"];
m4_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m4_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m4_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NullableTypesOptions()", span="128-128"];
m4_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="129-129"];
m4_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="131-131"];
m4_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m4_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m4_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="var options = new NullableTypesOptions()", span="146-146"];
m4_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="147-147"];
m4_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''alone'', options.StringValue)", span="150-150"];
m4_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="149-149"];
m4_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options = new NullableTypesOptions()", span="152-152"];
m4_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="153-154"];
m4_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(1.789, options.DoubleValue)", span="157-157"];
m4_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(10099, options.IntegerValue)", span="158-158"];
m4_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''together'', options.StringValue)", span="159-159"];
m4_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.Read, options.EnumValue)", span="160-160"];
m4_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="156-156"];
m4_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m4_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m4_79 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m5_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m5_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m5_25 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=red, community=0, file="CommandLineParserSettingsFixture.cs", label="1: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="65-65"];
m5_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="56-56"];
m5_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=red, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="64-64"];
m5_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62"];
m5_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", span="57-57"];
m5_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="58-58"];
m5_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59"];
m5_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="60-60"];
m5_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m5_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m5_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="42-42"];
m5_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="43-43"];
m5_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="1: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="49-49"];
m5_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="44-44"];
m5_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="46-46"];
m5_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="48-48"];
m5_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m5_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m5_14 [cluster="Unk.False", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.False", span=""];
m5_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_15 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_34 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=red, community=0, file="CommandLineParserSettingsFixture.cs", label="1: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="78-78"];
m5_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="71-71"];
m5_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=red, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="77-77"];
m5_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75"];
m5_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72"];
m5_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="73-73"];
m5_35 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_36 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m5_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m5_27 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m5_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m5_13 [cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m7_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m7_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56"];
m7_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label=years, span="58-58"];
m7_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", span="62-62"];
m7_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", span="64-64"];
m7_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", span="65-65"];
m7_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67"];
m7_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", span="69-69"];
m7_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60"];
m7_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="y.Length == 2", span="61-61"];
m7_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_45 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: new CopyrightInfo(''Authors, Inc.'')", span="117-117"];
m7_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=green, community=0, file="CopyrightInfoFixture.cs", label="1: var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", span="123-123"];
m7_49 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: info.ToString().Should().Equal(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'')", span="125-125"];
m7_50 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m7_41 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: new CopyrightInfo(null, 2000)", span="110-110"];
m7_42 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m7_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_21 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: copyright.ToString().Should().Equal(''Copyright (c) 2007 Authors, Inc.'')", span="79-79"];
m7_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77"];
m7_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", span="83-83"];
m7_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85"];
m7_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", color=green, community=0, file="CopyrightInfoFixture.cs", label="1: copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", span="87-87"];
m7_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Upper_symbol_two_consecutive_years()", span="83-83"];
m7_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_38 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: copyright.ToString().Should().Equal(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'')", span="103-103"];
m7_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101"];
m7_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_35 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m7_51 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", span="128-128"];
m7_52 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", color=green, community=0, file="CopyrightInfoFixture.cs", label="1: var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", span="130-130"];
m7_53 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="int i=0", span="132-132"];
m7_55 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", color=red, community=0, file="CopyrightInfoFixture.cs", label="1: info.ToString().Length.Should().Equal(37)", span="134-134"];
m7_54 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="i<10", span="132-132"];
m7_56 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="i++", span="132-132"];
m7_57 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Should_not_grow_when_converted_to_string()", span="128-128"];
m7_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", span="91-91"];
m7_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93"];
m7_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", color=green, community=0, file="CopyrightInfoFixture.cs", label="1: copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", span="95-95"];
m7_34 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.Default_symbol_two_non_consecutive_years()", span="91-91"];
m7_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m7_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="97-97"];
m7_43 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m7_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="113-113"];
m7_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_26 [cluster="Unk.Equal", file="CopyrightInfoFixture.cs", label="Entry Unk.Equal", span=""];
m8_47 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="37-37"];
m8_23 [cluster="Unk.False", file="EnumeratorsFixture.cs", label="Entry Unk.False", span=""];
m8_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m8_29 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Equal(''a'')", span="73-73"];
m8_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="70-70"];
m8_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="71-71"];
m8_30 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Next.Should().Equal(''b'')", span="74-74"];
m8_31 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''bcd'')", span="75-75"];
m8_32 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.False()", span="76-76"];
m8_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="78-78"];
m8_34 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Equal(''b'')", span="80-80"];
m8_35 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Next.Should().Equal(''c'')", span="81-81"];
m8_36 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''cd'')", span="82-82"];
m8_37 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.False()", span="83-83"];
m8_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="85-85"];
m8_39 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Equal(''c'')", span="87-87"];
m8_40 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Next.Should().Equal(''d'')", span="88-88"];
m8_41 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''d'')", span="89-89"];
m8_42 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.False()", span="90-90"];
m8_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="92-92"];
m8_44 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(''d'')", span="94-94"];
m8_45 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.True()", span="95-95"];
m8_46 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m8_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_7 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Equal(valueOne)", span="50-50"];
m8_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueOne = ''one''", span="42-42"];
m8_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="47-47"];
m8_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="48-48"];
m8_8 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(valueTwo)", span="51-51"];
m8_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", span="43-43"];
m8_9 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.False()", span="52-52"];
m8_11 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.Current.Should().Equal(valueTwo)", span="56-56"];
m8_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="54-54"];
m8_12 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(valueThree)", span="57-57"];
m8_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueThree = ''three''", span="44-44"];
m8_13 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.False()", span="58-58"];
m8_15 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(valueThree)", span="62-62"];
m8_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="60-60"];
m8_16 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Be.Null()", span="63-63"];
m8_17 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=red, community=0, file="EnumeratorsFixture.cs", label="1: e.IsLast.Should().Be.True()", span="64-64"];
m8_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", span="46-46"];
m8_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_20 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m8_25 [cluster="Unk.True", file="EnumeratorsFixture.cs", label="Entry Unk.True", span=""];
m8_48 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="33-33"];
m8_24 [cluster="Unk.Null", file="EnumeratorsFixture.cs", label="Entry Unk.Null", span=""];
m8_22 [cluster="Unk.Equal", file="EnumeratorsFixture.cs", label="Entry Unk.Equal", span=""];
m8_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m9_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", span="41-41"];
m9_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", span="43-43"];
m9_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="string s = hi", span="44-44"];
m9_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", span="49-49"];
m9_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", color=green, community=0, file="HeadingInfoFixture.cs", label="1: s.Should().Equal(''myprog'')", span="46-46"];
m9_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="48-48"];
m9_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", color=green, community=0, file="HeadingInfoFixture.cs", label="1: sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", span="51-51"];
m9_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.Only_program_name()", span="41-41"];
m9_11 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m9_13 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m9_22 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m9_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m9_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m9_17 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=red, community=0, file="HeadingInfoFixture.cs", label="1: s.Should().Equal(''myecho 2.5'')", span="60-60"];
m9_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="string s = hi", span="58-58"];
m9_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="62-62"];
m9_20 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=red, community=0, file="HeadingInfoFixture.cs", label="1: sw.ToString().Should().Equal(''myecho: hello unit-test'' + Environment.NewLine)", span="65-65"];
m9_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63"];
m9_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57"];
m9_21 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m9_12 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="106-106"];
m9_9 [cluster="Unk.Should", file="HeadingInfoFixture.cs", label="Entry Unk.Should", span=""];
m10_25 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m10_40 [cluster="Unk.True", file="HelpOptionAttributeFixture.cs", label="Entry Unk.True", span=""];
m10_26 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m10_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m10_15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m10_41 [cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs", label="Entry System.Console.Write(string)", span="0-0"];
m10_24 [cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m10_14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m10_16 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m10_19 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", color=red, community=1, file="HelpOptionAttributeFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options, writer)", span="79-80"];
m10_17 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="76-76"];
m10_18 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="77-77"];
m10_20 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="1: ResultShouldBeTrue()", span="82-82"];
m10_21 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="1: writer.ToString().Length.Should().Equal(0)", span="83-83"];
m10_22 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m10_11 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m10_23 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43"];
m10_27 [cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m10_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m10_42 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", span="102-102"];
m10_43 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="104-104"];
m10_44 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="105-105"];
m10_45 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options, writer)", span="107-108"];
m10_47 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="112-112"];
m10_46 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="1: ResultShouldBeFalse()", span="110-110"];
m10_48 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="1: (helpText.Length > 0).Should().Be.True()", span="113-113"];
m10_49 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.Explicit_help_activation()", span="102-102"];
m10_30 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m10_33 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", color=red, community=1, file="HelpOptionAttributeFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options, writer)", span="92-93"];
m10_31 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="89-89"];
m10_32 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="90-90"];
m10_34 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="1: ResultShouldBeFalse()", span="95-95"];
m10_35 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="97-97"];
m10_36 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="1: (helpText.Length > 0).Should().Be.True()", span="98-98"];
m10_37 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Console.Write(helpText)", span="100-100"];
m10_38 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m10_0 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m10_1 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
m10_2 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
m10_3 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
m10_4 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
m10_5 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
m10_6 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
m10_7 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
m10_8 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddOptions(this)", span="67-67"];
m10_9 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="return help;", span="68-68"];
m10_10 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m10_29 [cluster="Unk.Equal", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m10_50 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", span=""];
m10_51 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture", span=""];
m11_133 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m11_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m11_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: _helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="196-196"];
m11_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="0: _helpText.MaximumDisplayWidth = 40", span="195-195"];
m11_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: string help = _helpText.ToString()", span="197-197"];
m11_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=green, community=0, file="HelpTextFixture.cs", label="0: string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199"];
m11_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[2].Should().Equal(''  v, verbose    Before '')", span="200-200"];
m11_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[3].Should().Equal(''                012345678901234567890123'')", span="201-201"];
m11_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[4].Should().Equal(''                After'')", span="202-202"];
m11_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[5].Should().Equal(''  input-file    Before '')", span="203-203"];
m11_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[6].Should().Equal(''                012345678901234567890123'')", span="204-204"];
m11_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[7].Should().Equal(''                456789 After'')", span="205-205"];
m11_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m11_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m11_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="1: var options = new ComplexOptionsWithHelp()", span="409-409"];
m11_180 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="411-412"];
m11_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="414-414"];
m11_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m11_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="410-410"];
m11_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="1: var options = new ComplexOptionsWithHelp()", span="412-412"];
m11_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="414-415"];
m11_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="417-417"];
m11_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="410-410"];
m11_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m11_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m11_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="456-456"];
m11_205 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName.Value", span="458-458"];
m11_210 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="469-469"];
m11_212 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="474-474"];
m11_206 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="'v'", span="460-460"];
m11_208 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="'i'", span="464-464"];
m11_207 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="461-461"];
m11_209 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="465-465"];
m11_211 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="471-471"];
m11_213 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m11_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m11_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="0: var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", span="275-279"];
m11_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="280-280"];
m11_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="282-282"];
m11_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="286-286"];
m11_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="284-284"];
m11_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[3].Should().Equal(''  -s, --something    Input something here.'')", span="287-287"];
m11_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m11_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m11_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="1: var options = new ComplexOptionsWithHelp()", span="387-387"];
m11_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="389-390"];
m11_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="392-392"];
m11_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m11_160 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m11_201 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m11_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", span="291-291"];
m11_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="0: var sw = new StringWriter()", span="293-293"];
m11_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="294-294"];
m11_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="295-296"];
m11_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="0: var outsw = sw.ToString()", span="301-301"];
m11_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="297-297"];
m11_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="299-299"];
m11_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="303-303"];
m11_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="305-305"];
m11_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[0].Should().Equal(''--option-b option violates format.'')", span="307-307"];
m11_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="308-308"];
m11_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="1: lines[2].Should().Equal(''-a required option is missing.'')", span="309-309"];
m11_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Invoke_render_parsing_errors_text()", span="291-291"];
m11_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="421-421"];
m11_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="1: var options = new ComplexOptionsWithHelp()", span="423-423"];
m11_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="425-426"];
m11_192 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="428-428"];
m11_193 [cluster="CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="421-421"];
m11_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m11_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m11_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=green, community=0, file="HelpTextFixture.cs", label="0: var local = new HelpText(''Heading Info.'')", span="211-211"];
m11_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="212-212"];
m11_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="213-213"];
m11_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="214-214"];
m11_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="215-215"];
m11_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="217-217"];
m11_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[3].Should().Equal(''012 After'')", span="222-222"];
m11_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="219-219"];
m11_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="221-221"];
m11_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 3].Should().Equal(''Before '')", span="223-223"];
m11_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="224-224"];
m11_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 1].Should().Equal('' After'')", span="225-225"];
m11_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[1].Should().Equal(''Before '')", span="220-220"];
m11_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m11_129 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="53-53"];
m11_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", span="283-283"];
m11_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", color=green, community=0, file="HelpTextFixture.cs", label="1: var local = new HelpText()", span="285-285"];
m11_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", color=red, community=0, file="HelpTextFixture.cs", label="1: local.ToString().Should().Equal('''')", span="287-287"];
m11_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Create_basic_instance()", span="283-283"];
m11_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m11_159 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m11_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=green, community=0, file="HelpTextFixture.cs", label="0: _helpText.MaximumDisplayWidth = 40", span="171-171"];
m11_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="98-98"];
m11_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", color=red, community=0, file="HelpTextFixture.cs", label="1: _helpText.AddPreOptionsLine(string.Empty)", span="142-142"];
m11_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=green, community=0, file="HelpTextFixture.cs", label="1: string help = local.ToString()", span="158-158"];
m11_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="156-156"];
m11_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=green, community=0, file="HelpTextFixture.cs", label="1: string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="160-160"];
m11_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="155-155"];
m11_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m11_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="154-154"];
m11_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m11_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="151-151"];
m11_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="152-152"];
m11_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="153-153"];
m11_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="161-161"];
m11_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m11_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=green, community=0, file="HelpTextFixture.cs", label="0: var year = DateTime.Now.Year", span="252-252"];
m11_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="253-253"];
m11_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="255-255"];
m11_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="266-266"];
m11_125 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[2].Should().Equal(''Pre-Options.'')", span="267-267"];
m11_122 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="264-264"];
m11_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[4].Should().Equal(''  s, something    Input something here.'')", span="268-268"];
m11_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[6].Should().Equal(''Post-Options.'')", span="269-269"];
m11_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="254-254"];
m11_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="256-256"];
m11_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="257-257"];
m11_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="258-258"];
m11_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="260-260"];
m11_123 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="265-265"];
m11_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="262-262"];
m11_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m11_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m11_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", span="221-221"];
m11_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="0: var local = new HelpText(''Customizing Test.'')", span="223-223"];
m11_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="224-224"];
m11_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="225-225"];
m11_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="226-226"];
m11_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="227-227"];
m11_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="229-229"];
m11_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="231-231"];
m11_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="233-233"];
m11_103 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[0].Should().Equal(''Customizing Test.'')", span="234-234"];
m11_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[1].Should().Equal(''Pre-Options.'')", span="235-235"];
m11_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="1: lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="236-236"];
m11_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="1: lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="237-237"];
m11_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", color=green, community=0, file="HelpTextFixture.cs", label="1: lines[6].Should().Equal(''Post-Options.'')", span="238-238"];
m11_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Customize_options_format()", span="221-221"];
m11_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m11_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", color=red, community=0, file="HelpTextFixture.cs", label="1: _helpText = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="136-136"];
m11_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m11_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m11_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m11_65 [cluster="Unk.ToString", file="HelpTextFixture.cs", label="Entry Unk.ToString", span=""];
m11_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="65-65"];
m11_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", span="429-429"];
m11_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="588-588"];
m11_164 [cluster="Unk.False", file="HelpTextFixture.cs", label="Entry Unk.False", span=""];
m11_165 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m11_44 [cluster="CommandLine.Text.Tests.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Meta_value()", span="158-158"];
m11_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", color=green, community=0, file="HelpTextFixture.cs", label="1: string help = local.ToString()", span="171-171"];
m11_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithMetaValue())", span="169-169"];
m11_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="var local = new HelpText(''Meta Value.'')", span="168-168"];
m11_45 [cluster="Unk.Equal", file="HelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m11_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m11_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="172-172"];
m11_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m11_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=green, community=0, file="HelpTextFixture.cs", label="0: Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="177-177"];
m11_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="0: _helpText.MaximumDisplayWidth = 40", span="179-179"];
m11_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="0: _helpText.AddOptions(new MockOptionsWithLongDescription())", span="180-180"];
m11_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[2].Should().Equal(''  v, verbose    This is the description'')", span="184-184"];
m11_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="183-183"];
m11_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[3].Should().Equal(''                of the verbosity to '')", span="186-186"];
m11_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[4].Should().Equal(''                test out the wrapping '')", span="187-187"];
m11_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: string help = _helpText.ToString()", span="181-181"];
m11_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[5].Should().Equal(''                capabilities of the '')", span="188-188"];
m11_25 [cluster="Unk.AddPreOptionsLine", file="HelpTextFixture.cs", label="Entry Unk.AddPreOptionsLine", span=""];
m11_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m11_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[6].Should().Equal(''                Help Text.'')", span="189-189"];
m11_64 [cluster="Unk.AddOptions", file="HelpTextFixture.cs", label="Entry Unk.AddOptions", span=""];
m11_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m11_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", color=green, community=0, file="HelpTextFixture.cs", label="1: var options = new ComplexOptionsWithHelp()", span="398-398"];
m11_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="400-401"];
m11_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", color=red, community=0, file="HelpTextFixture.cs", label="1: result.Should().Be.False()", span="403-403"];
m11_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m11_131 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m11_130 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m11_41 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m11_202 [cluster="Unk.Exactly", file="HelpTextFixture.cs", label="Entry Unk.Exactly", span=""];
m11_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_172 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m11_109 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m11_200 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m11_194 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="433-433"];
m11_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", color=green, community=0, file="HelpTextFixture.cs", label="0: var options = new ComplexOptions()", span="435-435"];
m11_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="436-436"];
m11_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="438-438"];
m11_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", color=red, community=0, file="HelpTextFixture.cs", label="1: options.LastParserState.Errors.Should().Count.Exactly(2)", span="440-440"];
m11_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="433-433"];
m11_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m11_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="109-109"];
m11_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="110-110"];
m11_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="111-111"];
m11_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="114-114"];
m11_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="117-117"];
m11_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="118-118"];
m11_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="121-121"];
m11_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="122-122"];
m11_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="123-123"];
m11_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="124-124"];
m11_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="126-126"];
m11_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="115-115"];
m11_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m11_111 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m11_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="83-83"];
m11_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="162-162"];
m11_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m11_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="92-92"];
m11_188 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m11_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", color=red, community=0, file="HelpTextFixture.cs", label="1: lines[lines.Length - 2].Should().Equal(''  i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="173-173"];
m11_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_163 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m11_214 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m11_215 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m12_15 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m12_0 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_1 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="0: IEnumerable<AssemblyLicenseAttribute> licenseAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyLicenseAttribute), false) as AssemblyLicenseAttribute[]", span="45-45"];
m12_2 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="1: licenseAttributes.Count().Should().Equal(1)", span="47-47"];
m12_3 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="1: string license = licenseAttributes.Single().Value", span="49-49"];
m12_4 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="0: string[] lines = license.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="50-50"];
m12_5 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="1: lines[0].Should().Equal(@''This is free software. You may redistribute copies of it under the terms of'')", span="51-51"];
m12_6 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="1: lines[1].Should().Equal(@''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="52-52"];
m12_7 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_9 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m12_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_8 [cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m12_14 [cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m12_11 [cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs", label="Entry Unk.Should", span=""];
m12_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m12_16 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=red, community=0, file="MultiLineTextAttributeFixture.cs", label="1: Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", span="56-56"];
m12_17 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", span="58-58"];
m12_18 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="1: usageAttributes.Count().Should().Be(1)", span="60-60"];
m12_19 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="1: usageAttributes.Single().Value.Should().Be(@''[no usage, this is a dll]'' + Environment.NewLine)", span="61-61"];
m12_20 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.Assembly_usage_should_offer_read_only_property_named_value()", file="MultiLineTextAttributeFixture.cs", label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span=""];
m13_18 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var proof = new Random().Next(int.MaxValue)", span="60-60"];
m13_19 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithVerbs()", span="61-61"];
m13_20 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.CommitVerb.Should().Not.Be.Null()", span="62-62"];
m13_21 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.CommitVerb.CreationProof = proof", span="63-63"];
m13_22 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Result = Parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options)", span="65-65"];
m13_38 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="72-72"];
m13_6 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.AddVerb.CreationProof.Should().Be.Null()", span="52-52"];
m13_13 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m13_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m13_17 [cluster="Unk.Equal", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Equal", span=""];
m13_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m13_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m13_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="67-67"];
m13_26 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="68-68"];
m13_49 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.VerbsFixture", span=""];
m13_29 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.Verbose.Should().Equal(true)", span="72-72"];
m13_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m13_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var options = new OptionsWithMultipleSet()", span="78-78"];
m13_33 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="79-79"];
m13_34 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: ResultShouldBeTrue()", span="81-81"];
m13_35 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.Green.Should().Equal((byte) 167)", span="82-82"];
m13_36 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.Hue.Should().Equal((short) 205)", span="83-83"];
m13_7 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.Patch.Should().Be.True()", span="53-53"];
m13_8 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.AddVerb.FileName[0].Should().Equal(''untracked.bin'')", span="54-54"];
m13_9 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Exit CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", span="42-42"];
m13_11 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.FileName.Should().Equal(''mystuff.xml'')", span="52-52"];
m13_10 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Entry CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m13_12 [cluster="Unk.Null", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Null", span=""];
m13_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_28 [cluster="System.Random.Next(int)", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Entry System.Random.Next(int)", span="0-0"];
m13_27 [cluster="System.Random.Random()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Entry System.Random.Random()", span="0-0"];
m13_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m13_40 [cluster="System.IO.StringWriter.ToString()", file="MutuallyExclusiveParsingFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m13_41 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Entry CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="87-87"];
m13_42 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var options = new OptionsWithVerbs()", span="89-89"];
m13_43 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var testWriter = new StringWriter()", span="90-90"];
m13_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m13_2 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.AddVerb.Should().Be.Null()", span="45-45"];
m13_3 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: Result = Parser.ParseArguments(new string[] {''add'', ''-p'', ''untracked.bin''} , options)", span="47-47"];
m13_4 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="48-48"];
m13_5 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="options.AddVerb.Should().Not.Be.Null()", span="51-51"];
m13_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_46 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="99-99"];
m13_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithMultipleSetAndOneOption()", span="98-98"];
m13_47 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: ResultShouldBeFalse()", span="101-101"];
m13_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107"];
m13_52 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m13_54 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.Green.Should().Equal((byte) 100)", span="111-111"];
m13_55 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.Hue.Should().Equal((short) 200)", span="112-112"];
m13_56 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: options.DefaultColorSet.Should().Equal(ColorSet.RgbColorSet)", span="113-113"];
m13_53 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: ResultShouldBeTrue()", span="110-110"];
m13_57 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_58 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m14_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.EnumValue.Should().Be.Null()", span="92-92"];
m14_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="80-80"];
m14_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m14_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="98-98"];
m14_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="99-99"];
m14_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="79-79"];
m14_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m14_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.EnumValue.Should().Equal(FileAccess.ReadWrite)", span="82-82"];
m14_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m14_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="84-84"];
m14_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="87-87"];
m14_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.EnumValue.Should().Be.Null()", span="88-88"];
m14_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="76-76"];
m14_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="61-61"];
m14_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeFalse()", span="63-63"];
m14_20 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", span="58-58"];
m14_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeFalse()", span="67-67"];
m14_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="67-67"];
m14_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.DoubleValue.Should().Be.Null()", span="126-126"];
m14_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m14_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="130-130"];
m14_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="132-132"];
m14_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="133-133"];
m14_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m14_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="70-70"];
m14_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="72-72"];
m14_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", span="67-67"];
m14_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", span="76-76"];
m14_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_nullable_enumeration_option()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="78-78"];
m14_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="69-69"];
m14_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="101-101"];
m14_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="103-103"];
m14_10 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.IntegerValue.Should().Be.Null()", span="58-58"];
m14_12 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m14_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeFalse()", span="110-110"];
m14_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m14_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m14_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="117-117"];
m14_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="119-119"];
m14_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.DoubleValue.Should().Equal(9.999)", span="120-120"];
m14_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { }, options)", span="123-123"];
m14_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="122-122"];
m14_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="116-116"];
m14_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="125-125"];
m14_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="104-104"];
m14_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="106-106"];
m14_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_enumeration_option_fails()", span="101-101"];
m14_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_bad_value_to_a_nullable_integer_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="60-60"];
m14_16 [cluster="Unk.Equal", file="NullableTypesParsingFixture.cs", label="Entry Unk.Equal", span=""];
m14_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="135-135"];
m14_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="137-137"];
m14_13 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m14_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="138-138"];
m14_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeFalse()", span="140-140"];
m14_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Exit CommandLine.Tests.NullableTypesParsingFixture.Passing_no_value_to_a_nullable_double_option_fails()", span="135-135"];
m14_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", span="144-144"];
m14_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.Parse_string_option_and_nullable_value_types()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="146-146"];
m14_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m14_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="48-48"];
m14_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="49-49"];
m14_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="51-51"];
m14_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="54-54"];
m14_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.IntegerValue.Should().Equal(99)", span="52-52"];
m14_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { }, options)", span="55-55"];
m14_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="57-57"];
m14_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="151-151"];
m14_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="150-150"];
m14_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="153-153"];
m14_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.StringValue.Should().Equal(''alone'')", span="154-154"];
m14_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=1, file="NullableTypesParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="157-158"];
m14_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: ResultShouldBeTrue()", span="160-160"];
m14_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.DoubleValue.Should().Equal(1.789D)", span="161-161"];
m14_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(10099)", span="162-162"];
m14_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="156-156"];
m14_79 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.StringValue.Should().Equal(''together'')", span="163-163"];
m14_11 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m14_80 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=red, community=0, file="NullableTypesParsingFixture.cs", label="1: options.EnumValue.Should().Equal(FileAccess.Read)", span="164-164"];
m14_81 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_82 [file="NullableTypesParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m15_75 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m15_77 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154"];
m15_76 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m15_78 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="156-156"];
m15_79 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="157-157"];
m15_80 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="159-159"];
m15_165 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m15_166 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m15_167 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_12 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="56-56"];
m15_13 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="58-58"];
m15_14 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="59-59"];
m15_16 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="63-63"];
m15_15 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="53-53"];
m15_17 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="65-65"];
m15_56 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="122-123"];
m15_57 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="125-125"];
m15_58 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.StringValue.Should().Equal(''here'')", span="126-126"];
m15_60 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="128-128"];
m15_61 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.BooleanValue.Should().Be.True()", span="129-129"];
m15_62 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="130-130"];
m15_63 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="119-119"];
m15_64 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="134-134"];
m15_59 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.IntegerValue.Should().Equal(999)", span="127-127"];
m15_65 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m15_66 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_a_string_array_option_fails()", span="134-134"];
m15_83 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="163-163"];
m15_84 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeFalse()", span="165-165"];
m15_85 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="167-167"];
m15_86 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="168-168"];
m15_87 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeFalse()", span="170-170"];
m15_88 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="172-172"];
m15_89 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="173-173"];
m15_90 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="175-175"];
m15_91 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="177-177"];
m15_92 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="178-178"];
m15_93 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="180-180"];
m15_94 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="160-160"];
m15_95 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="185-185"];
m15_96 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="187-187"];
m15_18 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="66-66"];
m15_19 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="68-68"];
m15_20 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="69-69"];
m15_22 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="73-73"];
m15_21 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_value_adjacent()", span="63-63"];
m15_23 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="75-75"];
m15_55 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArrayAndValueList()", span="121-121"];
m15_97 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", span="188-188"];
m15_98 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="190-190"];
m15_99 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="192-192"];
m15_100 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="193-193"];
m15_101 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="195-195"];
m15_102 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_no_value_to_an_integer_array_option_fails()", span="185-185"];
m15_103 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", span="201-201"];
m15_104 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_double_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="203-203"];
m15_68 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m15_67 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m15_69 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="140-140"];
m15_70 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { ''-z'' }, options)", span="141-141"];
m15_71 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="143-143"];
m15_72 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="145-145"];
m15_73 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="146-146"];
m15_109 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="211-211"];
m15_110 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m15_111 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m15_113 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="220-224"];
m15_114 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="226-226"];
m15_115 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="227-227"];
m15_112 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="219-219"];
m15_117 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="229-229"];
m15_116 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="228-228"];
m15_118 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="231-231"];
m15_122 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="240-240"];
m15_121 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="239-239"];
m15_123 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="241-241"];
m15_125 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="244-248"];
m15_126 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="250-250"];
m15_127 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="251-251"];
m15_124 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="243-243"];
m15_119 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="232-236"];
m15_120 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="238-238"];
m15_128 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="252-252"];
m15_174 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="347-347"];
m15_175 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m15_176 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_181 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="358-358"];
m15_178 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="354-354"];
m15_177 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="353-353"];
m15_179 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="355-355"];
m15_180 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: Result = base.Parser.ParseArguments(new string[] { ''-q'', ''1,2'', ''1,23'', ''1,234'' }, options)", span="356-356"];
m15_182 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="359-359"];
m15_168 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.Parser.ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="333-333"];
m15_169 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_170 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m15_171 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", span="337-337"];
m15_172 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_integer_with_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="339-339"];
m15_185 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="361-361"];
m15_46 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="108-109"];
m15_47 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="111-111"];
m15_48 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="1: options.IntegerValue.Should().Equal(191919)", span="112-112"];
m15_50 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="114-114"];
m15_51 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''near'')", span="115-115"];
m15_52 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", span="105-105"];
m15_53 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.StringValue.Should().Equal(''near'')", span="119-119"];
m15_49 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_with_options_before_and_after()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="113-113"];
m15_54 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_value_list()", span="119-119"];
m15_10 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", span="53-53"];
m15_163 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="319-319"];
m15_164 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="326-326"];
m15_195 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_two_uint_consecutive_array_using_short_names()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="379-379"];
m15_129 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="253-253"];
m15_131 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257"];
m15_130 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m15_132 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="259-259"];
m15_134 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="267-267"];
m15_133 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="260-265"];
m15_135 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268"];
m15_138 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="3: options.StringValue.Should().Equal(''after'')", span="271-271"];
m15_137 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="270-270"];
m15_139 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="273-273"];
m15_144 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="284-284"];
m15_143 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="283-283"];
m15_145 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="285-285"];
m15_147 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="288-293"];
m15_148 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="295-295"];
m15_149 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="296-296"];
m15_150 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="297-297"];
m15_146 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="287-287"];
m15_152 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="299-299"];
m15_151 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.StringValue.Should().Equal(''near-the-center'')", span="298-298"];
m15_153 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="301-301"];
m15_159 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(1234)", span="315-315"];
m15_158 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="314-314"];
m15_141 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="281-281"];
m15_142 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''before'')", span="282-282"];
m15_155 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="311-311"];
m15_156 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="312-312"];
m15_136 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="269-269"];
m15_140 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="274-279"];
m15_154 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="302-309"];
m15_157 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="313-313"];
m15_160 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="316-316"];
m15_24 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="76-76"];
m15_25 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="78-78"];
m15_26 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="79-79"];
m15_28 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", span="83-83"];
m15_27 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name_with_equal_sign()", span="73-73"];
m15_29 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_after()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="85-85"];
m15_161 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", span="319-319"];
m15_162 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Will_throw_exception_if_option_array_attribute_bound_to_string_with_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="321-321"];
m15_2 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="46-46"];
m15_3 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="48-48"];
m15_4 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="49-49"];
m15_6 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m15_5 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name()", span="43-43"];
m15_7 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m15_44 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="105-105"];
m15_45 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m15_30 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m15_31 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="89-89"];
m15_33 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="92-92"];
m15_32 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="90-90"];
m15_34 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="93-93"];
m15_184 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_186 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m15_187 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new OptionsWithUIntArray()", span="369-369"];
m15_188 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''--somestr'', ''just a string'',\r\n                ''--arrayone'', ''10'', ''20'', ''30'', ''40'',\r\n                ''--arraytwo'', ''11'', ''22'', ''33'', ''44'',\r\n                ''--somebool''\r\n            }, options)", span="370-375"];
m15_189 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="377-377"];
m15_190 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeStringValue.Should().Equal(''just a string'')", span="378-378"];
m15_191 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="379-379"];
m15_192 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="380-380"];
m15_194 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m15_200 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeStringValue.Should().Equal(''just a string'')", span="396-396"];
m15_199 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="395-395"];
m15_201 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="397-397"];
m15_197 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new OptionsWithUIntArray()", span="387-387"];
m15_196 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_198 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=red, community=1, file="OptionArrayAttributeParsingFixture.cs", label="0: Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''-s'', ''just a string'',\r\n                ''-o'', ''10'', ''20'', ''30'', ''40'',\r\n                ''-t'', ''11'', ''22'', ''33'', ''44'',\r\n                ''-b''\r\n            }, options)", span="388-393"];
m15_202 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="398-398"];
m15_203 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m15_204 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_39 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="97-97"];
m15_40 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="99-99"];
m15_41 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''before'')", span="100-100"];
m15_43 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="94-94"];
m15_42 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="101-101"];
m15_9 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m15_11 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_long_name()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="55-55"];
m15_105 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m15_107 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="208-208"];
m15_106 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="207-207"];
m15_108 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="210-210"];
m15_193 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.SomeBooleanValue.Should().Be.True()", span="381-381"];
m15_173 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m15_81 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", span="160-160"];
m15_82 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Passing_bad_value_to_an_integer_array_option_fails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="162-162"];
m15_8 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m15_183 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="361-361"];
m15_74 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="148-148"];
m15_0 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_1 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_37 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.Parse_string_array_option_using_short_name_and_string_option_before()", span="94-94"];
m15_38 [cluster="Unk.Equal", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m15_35 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=red, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options.StringValue.Should().Equal(''after'')", span="94-94"];
m15_36 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m15_205 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m16_86 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="OptionInfo.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="65-65"];
m16_90 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m16_91 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="_property.SetValue(target, Activator.CreateInstance(_property.PropertyType), null)", span="249-249"];
m16_92 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label=Exception, span="251-251"];
m16_93 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_CannotCreateInstanceForVerbCommand, e);", span="253-253"];
m16_94 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m16_78 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m16_26 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="87-87"];
m16_23 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m16_87 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m16_88 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="return _property.GetValue(target, null);", span="242-242"];
m16_89 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m16_27 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var elementType = _property.PropertyType.GetElementType()", span="89-89"];
m16_25 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="107-107"];
m16_43 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: _property.PropertyType.IsEnum", span="111-111"];
m16_44 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="113-113"];
m16_45 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="117-117"];
m16_46 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: InvalidCastException", span="120-120"];
m16_48 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: FormatException", span="121-121"];
m16_50 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: ArgumentException", span="122-122"];
m16_52 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: OverflowException", span="123-123"];
m16_54 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="124-124"];
m16_47 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="120-120"];
m16_49 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="121-121"];
m16_51 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="122-122"];
m16_53 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return false;", span="123-123"];
m16_55 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="107-107"];
m16_39 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m16_42 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m16_41 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m16_40 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m16_17 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetValueList(value, options);", span="78-78"];
m16_15 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="74-74"];
m16_16 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m16_19 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="3: return SetNullableValue(value, options);", span="82-82"];
m16_20 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: return SetValueScalar(value, options);", span="84-84"];
m16_18 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="80-80"];
m16_21 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="OptionInfo.cs", label="0: Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="74-74"];
m16_22 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="OptionInfo.cs", label="1: Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="152-152"];
m16_24 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="128-128"];
m16_57 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: var nc = new NullableConverter(_property.PropertyType)", span="130-130"];
m16_58 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="134-134"];
m16_59 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: Exception", span="139-139"];
m16_61 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="143-143"];
m16_60 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: return false;", span="141-141"];
m16_62 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="128-128"];
m16_65 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="146-146"];
m16_66 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="_property.SetValue(options, value, null)", span="148-148"];
m16_67 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="return true;", span="149-149"];
m16_68 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="146-146"];
m16_0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m16_1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="attribute == null", span="47-47"];
m16_3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="property == null", span="51-51"];
m16_5 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_required = attribute.Required", span="55-55"];
m16_6 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_shortName = attribute.ShortName", span="57-57"];
m16_7 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_longName = attribute.LongName", span="58-58"];
m16_8 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59"];
m16_9 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_defaultValue = attribute.DefaultValue", span="60-60"];
m16_10 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_hasDefaultValue = attribute.HasDefaultValue", span="61-61"];
m16_11 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_attribute = attribute", span="62-62"];
m16_12 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_property = property", span="62-62"];
m16_2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''attribute'', SR.ArgumentNullException_AttributeCannotBeNull);", span="49-49"];
m16_4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''property'', SR.ArgumentNullException_PropertyCannotBeNull);", span="53-53"];
m16_13 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="OptionInfo.cs", label="1: Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m16_79 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m16_95 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m16_56 [cluster="System.Enum.Parse(System.Type, string, bool)", file="OptionInfo.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m16_38 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m16_63 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="OptionInfo.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m16_76 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_14 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m16_64 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="OptionInfo.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m16_80 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="164-164"];
m16_81 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=_hasDefaultValue, span="166-166"];
m16_82 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="_property.SetValue(options, _defaultValue, null)", span="170-170"];
m16_83 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=Exception, span="172-172"];
m16_84 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", span="174-174"];
m16_85 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="164-164"];
m16_69 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, new List<string>(), null)", span="154-154"];
m16_70 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="155-155"];
m16_71 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="156-156"];
m16_73 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="fieldRef.Add(item)", span="159-159"];
m16_72 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label=values, span="157-157"];
m16_74 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="return true;", span="161-161"];
m16_75 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="152-152"];
m16_28 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var array = Array.CreateInstance(elementType, values.Count)", span="90-90"];
m16_31 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="96-96"];
m16_32 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="_property.SetValue(options, array, null)", span="97-97"];
m16_29 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="int i = 0", span="92-92"];
m16_30 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i < array.Length", span="92-92"];
m16_35 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i++", span="92-92"];
m16_36 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return true;", span="104-104"];
m16_33 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label=FormatException, span="99-99"];
m16_34 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return false;", span="101-101"];
m16_37 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="87-87"];
m16_77 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m16_96 [file="OptionInfo.cs", label="CommandLine.Internal.OptionInfo", span=""];
m17_19 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_20 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", span="66-66"];
m17_21 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="67-67"];
m17_22 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="68-68"];
m17_24 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="70-70"];
m17_23 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="69-69"];
m17_25 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_27 [cluster="CommandLine.Tests.OptionMapFixture.Manage_options()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.Manage_options()", span="93-93"];
m17_28 [cluster="CommandLine.Tests.OptionMapFixture.Manage_options()", color=green, community=0, file="OptionMapFixture.cs", label="1: _optionMap = null", span="95-95"];
m17_29 [cluster="CommandLine.Tests.OptionMapFixture.Manage_options()", color=red, community=0, file="OptionMapFixture.cs", label="1: Exit CommandLine.Tests.OptionMapFixture.Manage_options()", span="93-93"];
m17_30 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", color=red, community=0, file="OptionMapFixture.cs", label="1: _omBuilder.AppendOption(''newuse'')", span="97-97"];
m17_31 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", span="101-101"];
m17_32 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", span="102-102"];
m17_33 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="_omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="103-103"];
m17_44 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=0, file="OptionMapFixture.cs", label="1: longOi.Should().Be.Null()", span="117-117"];
m17_45 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", color=red, community=0, file="OptionMapFixture.cs", label="1: var shortOi = _optionMap[''y'']", span="120-120"];
m17_46 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", color=red, community=0, file="OptionMapFixture.cs", label="1: shortOi.Should().Be.Null()", span="121-121"];
m17_38 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=red, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", span="112-112"];
m17_39 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=red, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", span="113-113"];
m17_47 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="118-118"];
m17_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="55-55"];
m17_5 [cluster="OptionMap.cstr", file="OptionMapFixture.cs", label="Entry OptionMap.cstr", span=""];
m17_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(longName)", span="57-57"];
m17_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="58-58"];
m17_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="59-59"];
m17_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="61-61"];
m17_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="60-60"];
m17_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_34 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_35 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", color=red, community=0, file="OptionMapFixture.cs", label="0: _optionMap = null", span="106-106"];
m17_36 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_48 [cluster="Unk.Null", file="OptionMapFixture.cs", label="Entry Unk.Null", span=""];
m17_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50"];
m17_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", span="51-51"];
m17_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", span="52-52"];
m17_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map == null", span="133-133"];
m17_62 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", span="146-146"];
m17_63 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", span="147-147"];
m17_64 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", span="148-148"];
m17_65 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache != null", span="150-150"];
m17_66 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", span="152-152"];
m17_67 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="153-153"];
m17_68 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="154-154"];
m17_69 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="157-157"];
m17_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="135-135"];
m17_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute1 = new OptionAttribute('p', ''pretend'')", span="138-138"];
m17_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute2 = new OptionAttribute(''newuse'')", span="139-139"];
m17_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", span="142-142"];
m17_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute3 = new OptionAttribute('D', null)", span="140-140"];
m17_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", span="143-143"];
m17_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", span="144-144"];
m17_70 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="54-54"];
m17_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m17_43 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=1, file="OptionMapFixture.cs", label="1: var longOi = _optionMap[''nomorebugshere'']", span="116-116"];
m17_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m17_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="64-64"];
m17_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m17_49 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_50 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=red, community=0, file="OptionMapFixture.cs", label="1: var longOi = _optionMap[''nomorebugshere'']", span="127-127"];
m17_51 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=red, community=0, file="OptionMapFixture.cs", label="0: longOi.Should().Be.Null()", span="128-128"];
m17_52 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m17_37 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_40 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=red, community=0, file="OptionMapFixture.cs", label="1: _omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="114-114"];
m17_41 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_71 [file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m18_2 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m18_3 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", color=green, community=0, file="PropertyWriter.cs", label="1: Property = property", span="47-47"];
m18_4 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m18_30 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="PropertyWriter.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m18_5 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m18_6 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="1: Property.PropertyType.IsEnum", span="56-56"];
m18_7 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: Property.SetValue(target, Enum.Parse(Property.PropertyType, value, true), null)", span="58-58"];
m18_8 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: Property.SetValue(target, Convert.ChangeType(value, Property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="62-62"];
m18_9 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: InvalidCastException", span="65-65"];
m18_11 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: FormatException", span="66-66"];
m18_13 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: ArgumentException", span="67-67"];
m18_15 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: OverflowException", span="68-68"];
m18_17 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: return true;", span="69-69"];
m18_10 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: return false;", span="65-65"];
m18_12 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: return false;", span="66-66"];
m18_14 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="1: return false;", span="67-67"];
m18_16 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", color=green, community=0, file="PropertyWriter.cs", label="1: return false;", span="68-68"];
m18_18 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m18_22 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="PropertyWriter.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m18_23 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: var nc = new NullableConverter(Property.PropertyType)", span="75-75"];
m18_24 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: Property.SetValue(target, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="79-79"];
m18_25 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: Exception", span="84-84"];
m18_27 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="1: return true;", span="88-88"];
m18_26 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", color=green, community=0, file="PropertyWriter.cs", label="0: return false;", span="86-86"];
m18_28 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="PropertyWriter.cs", label="Exit CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m18_20 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="PropertyWriter.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m18_19 [cluster="System.Enum.Parse(System.Type, string, bool)", file="PropertyWriter.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m18_21 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="PropertyWriter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m18_29 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="PropertyWriter.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m18_31 [file="PropertyWriter.cs", label="CommandLine.Internal.PropertyWriter", span=""];
m19_25 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_26 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<MethodInfo, TAttribute>), target)", span="75-75"];
m19_29 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="79-79"];
m19_27 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="76-76"];
m19_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="89-89"];
m19_28 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="77-77"];
m19_38 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return (Pair<MethodInfo, TAttribute>) cached;", span="96-96"];
m19_30 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="80-80"];
m19_31 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="82-82"];
m19_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="94-94"];
m19_32 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="84-85"];
m19_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute)", span="88-88"];
m19_33 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="86-86"];
m19_36 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="90-90"];
m19_39 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_104 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtil.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m19_0 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_1 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="1: var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, TAttribute>), target)", span="41-41"];
m19_5 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="target != null", span="46-46"];
m19_6 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="48-48"];
m19_2 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="1: var cached = ReflectionCache.Instance[key]", span="42-42"];
m19_14 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="66-66"];
m19_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="1: cached == null", span="43-43"];
m19_16 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<Pair<PropertyInfo, TAttribute>>)cached;", span="69-69"];
m19_4 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="45-45"];
m19_13 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="60-60"];
m19_15 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="67-67"];
m19_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label=propertiesInfo, span="50-50"];
m19_8 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="52-52"];
m19_9 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="54-54"];
m19_11 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="57-57"];
m19_10 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="55-55"];
m19_12 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="58-58"];
m19_17 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_41 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_42 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(TAttribute), target)", span="102-102"];
m19_45 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="106-106"];
m19_43 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="103-103"];
m19_51 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="116-116"];
m19_44 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="104-104"];
m19_54 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return (TAttribute) cached;", span="123-123"];
m19_46 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="107-107"];
m19_47 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="109-109"];
m19_53 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="121-121"];
m19_48 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="111-112"];
m19_49 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="113-113"];
m19_50 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = (TAttribute) attribute", span="115-115"];
m19_52 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="117-117"];
m19_55 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_23 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m19_79 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m19_101 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_102 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="209-209"];
m19_103 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_100 [cluster="string.CompareOrdinal(string, string)", file="ReflectionUtil.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m19_22 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtil.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m19_24 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m19_73 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_74 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="object[] a = AssemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="160-160"];
m19_75 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="a.Length <= 0", span="161-161"];
m19_77 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return (TAttribute)a[0];", span="163-163"];
m19_76 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return null;", span="161-161"];
m19_78 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_20 [cluster="object.GetType()", file="ReflectionUtil.cs", label="Entry object.GetType()", span="0-0"];
m19_40 [cluster="System.Type.GetMethods()", file="ReflectionUtil.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m19_80 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_81 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, BaseOptionAttribute>), target)", span="174-174"];
m19_85 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="1: target == null", span="179-179"];
m19_87 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="183-183"];
m19_94 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="194-194"];
m19_82 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="175-175"];
m19_96 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = found", span="197-197"];
m19_83 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="cached == null", span="176-176"];
m19_98 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return (Pair<PropertyInfo, TAttribute>) cached;", span="204-204"];
m19_84 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="0: Pair<PropertyInfo, TAttribute> found = null", span="178-178"];
m19_86 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return null;", span="181-181"];
m19_88 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label=propertiesInfo, span="185-185"];
m19_89 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="187-187"];
m19_90 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="189-189"];
m19_92 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="192-192"];
m19_95 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", span="196-196"];
m19_91 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="190-190"];
m19_93 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var optionAttr = (TAttribute) attribute", span="193-193"];
m19_97 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return found;", span="198-198"];
m19_99 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_56 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_57 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(IList<TAttribute>), target)", span="129-129"];
m19_61 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetProperties()", span="134-134"];
m19_58 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="130-130"];
m19_69 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="151-151"];
m19_59 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="131-131"];
m19_71 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<TAttribute>) cached;", span="154-154"];
m19_60 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<TAttribute> list = new List<TAttribute>()", span="133-133"];
m19_68 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add((TAttribute) attribute)", span="146-146"];
m19_70 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="152-152"];
m19_62 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="136-136"];
m19_63 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="138-138"];
m19_64 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="140-140"];
m19_66 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="143-143"];
m19_65 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="141-141"];
m19_67 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="144-144"];
m19_72 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_18 [cluster="CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="37-37"];
m19_21 [cluster="System.Type.GetProperties()", file="ReflectionUtil.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m19_19 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m20_7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="text = null", span="79-79"];
m20_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="var method = pair.Left", span="81-81"];
m20_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="text = (string)method.Invoke(target, null)", span="85-85"];
m20_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="!CheckMethodSignature(method)", span="82-82"];
m20_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="throw new MemberAccessException();", span="83-83"];
m20_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m20_13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m20_16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="90-90"];
m20_17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m20_15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="ReflectionUtilFixture.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m20_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m20_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m20_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m20_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="base.ShortName = shortName", span="61-61"];
m20_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="base.LongName = longName", span="62-62"];
m20_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m20_14 [cluster="System.MemberAccessException.MemberAccessException()", file="ReflectionUtilFixture.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m20_18 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionUtilFixture.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m20_19 [file="ReflectionUtilFixture.cs", label="CommandLine.HelpOptionAttribute", span=""];
m23_10 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="SingletonFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m23_14 [cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m23_0 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m23_4 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: options.StringValue.Should().Equal(''another string'')", span="48-48"];
m23_1 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="var options = new SimpleOptions()", span="43-43"];
m23_3 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="1: result.Should().Be.True()", span="47-47"];
m23_5 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="1: options.IntegerValue.Should().Equal(100)", span="49-49"];
m23_6 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="50-50"];
m23_7 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Console.WriteLine(options)", span="51-51"];
m23_2 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45"];
m23_8 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m23_20 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m23_12 [cluster="Unk.True", file="SingletonFixture.cs", label="Entry Unk.True", span=""];
m23_15 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="55-55"];
m23_16 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="var options = new OptionsWithMultipleSet()", span="57-57"];
m23_17 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59"];
m23_18 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=green, community=0, file="SingletonFixture.cs", label="1: result.Should().Be.True()", span="61-61"];
m23_19 [cluster="CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="55-55"];
m23_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m23_11 [cluster="Unk.Should", file="SingletonFixture.cs", label="Entry Unk.Should", span=""];
m24_15 [cluster="CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="StrictFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="107-107"];
m24_36 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="86-86"];
m24_37 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="1: var options = new OptionsWithVerbsNoHelp()", span="88-88"];
m24_38 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="89-89"];
m24_39 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="0: Result = Parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options, testWriter)", span="91-91"];
m24_41 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="95-95"];
m24_40 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=red, community=0, file="StrictFixture.cs", label="0: ResultShouldBeFalse()", span="93-93"];
m24_42 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="96-96"];
m24_43 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="97-97"];
m24_44 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="1: lines.Should().Count.Exactly(8)", span="99-99"];
m24_45 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="1: lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", span="101-101"];
m24_46 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=red, community=0, file="StrictFixture.cs", label="1: lines[6].Trim().Should().Equal(''commit    Record changes to the repository.'')", span="102-102"];
m24_47 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=red, community=0, file="StrictFixture.cs", label="1: lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", span="103-103"];
m24_48 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="86-86"];
m24_49 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", span="108-108"];
m24_35 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", span="31-31"];
m24_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="StrictFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m24_14 [cluster="System.IO.StringWriter.StringWriter()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m24_24 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_26 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: var testWriter = new StringWriter()", span="70-70"];
m24_25 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="var options = new SimpleOptionsForStrict()", span="69-69"];
m24_27 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="1: Result = Parser.ParseArgumentsStrict(new string[] { ''--bad'', ''--input'' }, options, testWriter)", span="72-72"];
m24_29 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="1: var helpText = testWriter.ToString()", span="76-76"];
m24_28 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="0: ResultShouldBeFalse()", span="74-74"];
m24_30 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: Console.WriteLine(helpText)", span="77-77"];
m24_31 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="78-78"];
m24_32 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="0: lines.Should().Count.Exactly(1)", span="80-80"];
m24_33 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="1: lines[0].Trim().Should().Equal(''SimpleOptionsForStrict (user defined)'')", span="82-82"];
m24_34 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_17 [cluster="System.IO.StringWriter.ToString()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m24_0 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", span="46-46"];
m24_1 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="0: var options = new SimpleOptions()", span="48-48"];
m24_2 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="49-49"];
m24_3 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=red, community=0, file="StrictFixture.cs", label="1: Result = Parser.ParseArgumentsStrict(new string[] {''--bad'', ''--input''}, options, testWriter)", span="51-51"];
m24_5 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="0: var helpText = testWriter.ToString()", span="55-55"];
m24_4 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="0: ResultShouldBeFalse()", span="53-53"];
m24_6 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="56-56"];
m24_7 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="57-57"];
m24_8 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=red, community=0, file="StrictFixture.cs", label="1: lines.Should().Count.Exactly(8)", span="59-59"];
m24_9 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=red, community=0, file="StrictFixture.cs", label="1: lines[5].Trim().Should().Equal(''-s, --string'')", span="61-61"];
m24_10 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=red, community=0, file="StrictFixture.cs", label="0: lines[6].Trim().Should().Equal(''-i'')", span="62-62"];
m24_11 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="1: lines[7].Trim().Should().Equal(''--switch'')", span="63-63"];
m24_12 [cluster="CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.Parse_strict_bad_input_fails_and_exits()", span="46-46"];
m24_61 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m24_21 [cluster="Unk.Exactly", file="StrictFixture.cs", label="Entry Unk.Exactly", span=""];
m24_50 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_51 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="1: var options = new OptionsWithVerbs()", span="109-109"];
m24_52 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="1: var testWriter = new StringWriter()", span="110-110"];
m24_53 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="0: Result = Parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options, testWriter)", span="112-112"];
m24_55 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="116-116"];
m24_54 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="1: ResultShouldBeFalse()", span="114-114"];
m24_58 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="0: lines.Should().Count.Exactly(1)", span="120-120"];
m24_57 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="118-118"];
m24_59 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=red, community=0, file="StrictFixture.cs", label="1: lines[0].Trim().Should().Equal(''verbs help index'')", span="122-122"];
m24_56 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="117-117"];
m24_60 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_13 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m24_18 [cluster="System.Console.WriteLine(string)", file="StrictFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m24_22 [cluster="string.Trim()", file="StrictFixture.cs", label="Entry string.Trim()", span="0-0"];
m24_23 [cluster="Unk.Equal", file="StrictFixture.cs", label="Entry Unk.Equal", span=""];
m24_19 [cluster="string.Split(string[], System.StringSplitOptions)", file="StrictFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m24_62 [file="StrictFixture.cs", label="CommandLine.Tests.StrictFixture", span=""];
m25_0 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Entry CommandLine.Internal.Target.Target()", span="36-36"];
m25_1 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Exit CommandLine.Internal.Target.Target()", span="36-36"];
m25_2 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_3 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="0: _target = target", span="40-40"];
m25_4 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="1: _valueListAttribute = ValueListAttribute.GetAttribute(_target)", span="41-41"];
m25_5 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="1: IsValueListDefined", span="42-42"];
m25_6 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="1: _valueList = ValueListAttribute.GetReference(_target)", span="44-44"];
m25_7 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Exit CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_8 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m25_16 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Target.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m25_9 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m25_10 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_11 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: _valueListAttribute.MaximumElements == 0 || _valueList.Count == _valueListAttribute.MaximumElements", span="52-52"];
m25_13 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: _valueList.Add(item)", span="56-56"];
m25_12 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="1: return false;", span="54-54"];
m25_14 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="1: return true;", span="57-57"];
m25_15 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Exit CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_17 [file="Target.cs", label="CommandLine.Internal.Target", span=""];
m26_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m26_11 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_12 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(target).Count > 0;", span="50-50"];
m26_13 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_8 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_9 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(target) != null;", span="45-45"];
m26_10 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m26_17 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m26_0 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_1 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(target).Count > 0;", span="35-35"];
m26_2 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_4 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_5 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(target) != null;", span="40-40"];
m26_6 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_14 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m26_15 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", color=green, community=0, file="TargetExtensions.cs", label="0: return new ValueMapper(target);", span="58-58"];
m26_16 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m27_20 [cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m27_18 [cluster="Unk.True", file="UnknownArgumentsFixture.cs", label="Entry Unk.True", span=""];
m27_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m27_14 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m27_0 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_6 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: appOptions.PlugInName.Should().Equal(''addonX'')", span="51-51"];
m27_2 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45"];
m27_5 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="0: result1.Should().Be.True()", span="50-50"];
m27_7 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m27_4 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m27_10 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: plugInXOptions.InputFileName.Should().Equal(''input.dat'')", span="57-57"];
m27_9 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: result2.Should().Be.True()", span="56-56"];
m27_11 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=red, community=0, file="UnknownArgumentsFixture.cs", label="1: plugInXOptions.ReadOffset.Should().Equal(10L)", span="58-58"];
m27_8 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m27_1 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44"];
m27_3 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47"];
m27_12 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m27_13 [cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m27_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m28_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_4 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="concreteType == null", span="62-62"];
m28_6 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="63-63"];
m28_8 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="_concreteType = concreteType", span="67-67"];
m28_5 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new ArgumentNullException(''concreteType'');", span="62-62"];
m28_7 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_IncompatibleTypes);", span="65-65"];
m28_9 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueListAttribute.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m28_25 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_26 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="93-93"];
m28_27 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="94-94"];
m28_29 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list.Count > 1", span="95-95"];
m28_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="96-96"];
m28_28 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return null;", span="94-94"];
m28_30 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="95-95"];
m28_32 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return pairZero.Right;", span="97-97"];
m28_33 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_13 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_14 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Type concreteType", span="84-84"];
m28_15 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="var property = GetProperty(target, out concreteType)", span="85-85"];
m28_18 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="87-87"];
m28_19 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return (IList<string>)property.GetValue(target, null);", span="88-88"];
m28_16 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property == null || concreteType == null", span="86-86"];
m28_17 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return null;", span="86-86"];
m28_20 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_21 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_36 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = null", span="102-102"];
m28_37 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="103-103"];
m28_38 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="104-104"];
m28_40 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list.Count > 1", span="105-105"];
m28_42 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="106-106"];
m28_39 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return null;", span="104-104"];
m28_41 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="105-105"];
m28_43 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = pairZero.Right.ConcreteType", span="107-107"];
m28_44 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return pairZero.Left;", span="108-108"];
m28_45 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_0 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_1 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="MaximumElements = -1", span="51-51"];
m28_2 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_22 [cluster="System.Activator.CreateInstance(System.Type)", file="ValueListAttribute.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m28_23 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m28_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueListAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m28_11 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueListAttribute.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_12 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="ValueListAttribute.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54"];
m28_24 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m28_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueListAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m28_46 [file="ValueListAttribute.cs", label="CommandLine.ValueListAttribute", span=""];
m29_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m29_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="1: var options = new MockOptions()", span="91-91"];
m29_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", span="93-93"];
m29_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98"];
m29_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", span="94-94"];
m29_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", span="95-95"];
m29_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", span="96-96"];
m29_34 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", span="59-59"];
m29_5 [cluster="CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", color=red, community=0, file="ValueListAttributeFixture.cs", label="1: new ValueListAttribute(new List<object>().GetType())", span="61-61"];
m29_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.Will_throw_exception_if_concrete_type_is_incompatible()", span="59-59"];
m29_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m29_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=red, community=0, file="ValueListAttributeFixture.cs", label="1: new ValueListAttribute(null)", span="56-56"];
m29_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m29_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m29_25 [cluster="Unk.Null", file="ValueListAttributeFixture.cs", label="Entry Unk.Null", span=""];
m29_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", color=green, community=0, file="ValueListAttributeFixture.cs", label="0: new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75"];
m29_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", span="77-77"];
m29_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="1: var options = new MockOptions()", span="79-79"];
m29_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", span="81-81"];
m29_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", color=red, community=0, file="ValueListAttributeFixture.cs", label="1: values.Should().Not.Be.Null()", span="82-82"];
m29_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", color=red, community=0, file="ValueListAttributeFixture.cs", label="0: values.GetType().Should().Equal(typeof(List<string>))", span="83-83"];
m29_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.Get_generic_list_of_string_interface_reference()", span="77-77"];
m29_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m29_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="ValueListAttributeFixture.cs", label="1: new ValueListAttribute(new List<string>().GetType())", span="69-69"];
m29_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m29_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m29_26 [cluster="Unk.Equal", file="ValueListAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m29_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m29_37 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m30_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m30_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m30_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m30_42 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89"];
m30_43 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="91-91"];
m30_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="88-88"];
m30_44 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Junk.Should().Count.Zero()", span="92-92"];
m30_18 [cluster="Unk.True", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m30_22 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="64-64"];
m30_19 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m30_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: var options = new OptionsWithValueListMaximumThree()", span="63-63"];
m30_23 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="66-66"];
m30_24 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[0].Should().Equal(''file.a'')", span="67-67"];
m30_25 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[1].Should().Equal(''file.b'')", span="68-68"];
m30_26 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[2].Should().Equal(''file.c'')", span="69-69"];
m30_27 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.OutputFile.Should().Be.Null()", span="70-70"];
m30_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_28 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.Overwrite.Should().Be.False()", span="71-71"];
m30_47 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m30_49 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m30_48 [cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Zero", span=""];
m30_50 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="99-99"];
m30_51 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="101-101"];
m30_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41"];
m30_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="43-43"];
m30_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m30_29 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m30_30 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m30_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="47-47"];
m30_4 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=1, file="ValueListAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="48-49"];
m30_5 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="51-51"];
m30_6 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.Items[0].Should().Equal(''file1.ext'')", span="52-52"];
m30_7 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Items[1].Should().Equal(''file2.ext'')", span="53-53"];
m30_8 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.Items[2].Should().Equal(''file3.ext'')", span="54-54"];
m30_9 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.StringValue.Should().Equal(''out.ext'')", span="55-55"];
m30_10 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: options.BooleanValue.Should().Be.True()", span="56-56"];
m30_32 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", span="74-74"];
m30_52 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="102-102"];
m30_53 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m30_11 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="57-57"];
m30_12 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m30_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m30_33 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: var options = new OptionsWithValueListMaximumThree()", span="76-76"];
m30_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="77-78"];
m30_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: ResultShouldBeFalse()", span="80-80"];
m30_36 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", color=red, community=1, file="ValueListAttributeParsingFixture.cs", label="1: Exit CommandLine.Tests.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", span="74-74"];
m30_37 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="82-82"];
m30_13 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m30_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="93-93"];
m30_31 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m30_17 [cluster="Unk.Equal", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m30_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m30_54 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
m31_23 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m31_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueMapper.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m31_26 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m31_8 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.InitializeValueOption()", span="89-89"];
m31_33 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", color=green, community=0, file="ValueMapper.cs", label="0: _valueOptionAttributeList = ReflectionUtil.RetrievePropertyList<ValueOptionAttribute>(_target)", span="91-91"];
m31_34 [cluster="CommandLine.Internal.ValueMapper.InitializeValueOption()", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.InitializeValueOption()", span="89-89"];
m31_16 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.MapValueItem(string)", span="66-66"];
m31_17 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: IsValueOptionDefined &&\r\n                _valueOptionIndex < _valueOptionAttributeList.Count", span="68-69"];
m31_18 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: var valueOption = _valueOptionAttributeList[_valueOptionIndex++]", span="71-71"];
m31_21 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: return IsValueListDefined && AddValueItem(item);", span="77-77"];
m31_20 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="0: return ReflectionUtil.IsNullableType(propertyWriter.Property.PropertyType) ?\r\n                    propertyWriter.WriteNullable(item, _target) :\r\n                    propertyWriter.WriteScalar(item, _target);", span="73-75"];
m31_19 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: var propertyWriter = new PropertyWriter(valueOption.Left)", span="72-72"];
m31_22 [cluster="CommandLine.Internal.ValueMapper.MapValueItem(string)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.MapValueItem(string)", span="66-66"];
m31_2 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m31_3 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="1: _target = target", span="45-45"];
m31_4 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="1: InitializeValueList()", span="46-46"];
m31_5 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", color=green, community=0, file="ValueMapper.cs", label="0: InitializeValueOption()", span="47-47"];
m31_6 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m31_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="92-92"];
m31_15 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueMapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m31_32 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueMapper.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="83-83"];
m31_7 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.InitializeValueList()", span="80-80"];
m31_27 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label="1: _valueListAttribute = ValueListAttribute.GetAttribute(_target)", span="82-82"];
m31_28 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label="1: IsValueListDefined", span="83-83"];
m31_29 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", color=green, community=0, file="ValueMapper.cs", label="0: _valueList = ValueListAttribute.GetReference(_target)", span="85-85"];
m31_30 [cluster="CommandLine.Internal.ValueMapper.InitializeValueList()", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.InitializeValueList()", span="80-80"];
m31_9 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", file="ValueMapper.cs", label="Entry CommandLine.Internal.ValueMapper.AddValueItem(string)", span="56-56"];
m31_10 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: _valueListAttribute.MaximumElements == 0 || _valueList.Count == _valueListAttribute.MaximumElements", span="58-58"];
m31_11 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="0: return false;", span="60-60"];
m31_12 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: _valueList.Add(item)", span="62-62"];
m31_13 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", color=green, community=0, file="ValueMapper.cs", label="1: return true;", span="63-63"];
m31_14 [cluster="CommandLine.Internal.ValueMapper.AddValueItem(string)", file="ValueMapper.cs", label="Exit CommandLine.Internal.ValueMapper.AddValueItem(string)", span="56-56"];
m31_25 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="ValueMapper.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m31_24 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ValueMapper.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m31_36 [file="ValueMapper.cs", label="CommandLine.Internal.ValueMapper", span=""];
m32_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m32_38 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", span="65-65"];
m32_39 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithValueOptionAndValueList()", span="67-67"];
m32_40 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''4321'', ''ofvalueoption'', ''-1234'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", span="68-69"];
m32_41 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: ResultShouldBeFalse()", span="71-71"];
m32_42 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", span="65-65"];
m32_43 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m32_0 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", span="17-17"];
m32_1 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOption()", span="19-19"];
m32_2 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file.ext'', ''1000'', ''0.1234'', ''-s'', ''out.ext'' }, options)", span="20-21"];
m32_4 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.BooleanValue.Should().Be.True()", span="25-25"];
m32_5 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.StringItem.Should().Equal(''file.ext'')", span="26-26"];
m32_6 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.IntegerItem.Should().Equal(1000)", span="27-27"];
m32_7 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.NullableDoubleItem.Should().Equal(0.1234D)", span="28-28"];
m32_8 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''out.ext'')", span="29-29"];
m32_3 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="23-23"];
m32_9 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", span="17-17"];
m32_10 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", span="35-35"];
m32_14 [cluster="Unk.True", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m32_16 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", span="33-33"];
m32_17 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOption()", span="35-35"];
m32_18 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'' }, options)", span="36-37"];
m32_20 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="41-41"];
m32_21 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.StringItem.Should().Be.Null()", span="42-42"];
m32_22 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.IntegerItem.Should().Equal(0)", span="43-43"];
m32_23 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.NullableDoubleItem.Should().Be.Null()", span="44-44"];
m32_19 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="39-39"];
m32_24 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", span="33-33"];
m32_37 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", span="35-35"];
m32_25 [cluster="Unk.Null", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m32_13 [cluster="Unk.Should", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m32_26 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", span="48-48"];
m32_27 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithValueOptionAndValueList()", span="50-50"];
m32_28 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: Result = base.Parser.ParseArguments(\r\n                new string[] { ''ofvalueoption'', ''-1234'', ''4321'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", span="51-52"];
m32_30 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.StringItem.Should().Equal(''ofvalueoption'')", span="56-56"];
m32_31 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.NullableInteger.Should().Equal(-1234)", span="57-57"];
m32_32 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.UnsignedIntegerItem.Should().Equal(4321U)", span="58-58"];
m32_33 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.Items[0].Should().Equal(''forvaluelist1'')", span="59-59"];
m32_34 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: options.Items[1].Should().Equal(''forvaluelist2'')", span="60-60"];
m32_35 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.Items[2].Should().Equal(''forvaluelist3'')", span="61-61"];
m32_29 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="1: ResultShouldBeTrue()", span="54-54"];
m32_36 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", span="48-48"];
m32_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m32_44 [file="ValueOptionAttributeParsingFixture.cs", label="CommandLine.Tests.ValueOptionAttributeParsingFixture", span=""];
m33_24 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="66-66"];
m33_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m33_37 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m33_38 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="0: var options = new OptionsWithVerbs()", span="86-86"];
m33_39 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var testWriter = new StringWriter()", span="87-87"];
m33_40 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {}, options, testWriter)", span="88-88"];
m33_45 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="1: var helpText = testWriter.ToString()", span="96-96"];
m33_44 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", span="94-94"];
m33_46 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="0: helpText.Should().Equal(''verbs help index'')", span="97-97"];
m33_42 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="92-92"];
m33_41 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="ResultShouldBeFalse()", span="90-90"];
m33_43 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="93-93"];
m33_47 [cluster="CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Failed_parsing_prints_help_index()", span="84-84"];
m33_4 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="49-49"];
m33_5 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", color=red, community=0, file="VerbsFixture.cs", label="3: Parser.WasVerbOptionInvoked(''add'').Should().Be.True()", span="51-51"];
m33_6 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="52-52"];
m33_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=red, community=0, file="VerbsFixture.cs", label="1: values.Should().Not.Be.Null()", span="84-84"];
m33_49 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m33_52 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="101-101"];
m33_54 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="0: var testWriter = new StringWriter()", span="104-104"];
m33_53 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="103-103"];
m33_55 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="0: Result = Parser.ParseArguments(new string[] {''clone'', ''--no_hardlinks''}, options, testWriter)", span="105-105"];
m33_60 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", span="114-114"];
m33_56 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="ResultShouldBeFalse()", span="107-107"];
m33_58 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="110-110"];
m33_57 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="109-109"];
m33_59 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''clone'').Should().Be.True()", span="112-112"];
m33_61 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="1: helpText.Should().Equal(''help for: clone'')", span="115-115"];
m33_62 [cluster="CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="101-101"];
m33_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=red, community=0, file="VerbsFixture.cs", label="0: IList<string> values = ValueListAttribute.GetReference(options)", span="83-83"];
m33_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="var options = new MockOptions()", span="81-81"];
m33_3 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", color=green, community=0, file="VerbsFixture.cs", label="0: Result = Parser.ParseArguments(new string[] {''add'', ''-p'', ''untracked.bin''} , options)", span="47-47"];
m33_50 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m33_22 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", span="63-63"];
m33_48 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m33_27 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options)", span="70-70"];
m33_28 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="0: ResultShouldBeTrue()", span="72-72"];
m33_29 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="74-74"];
m33_33 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Amend.Should().Be.True()", span="80-80"];
m33_30 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=red, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''commit'').Should().Be.True()", span="75-75"];
m33_31 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", span="76-76"];
m33_32 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.CreationProof.Should().Equal(proof)", span="79-79"];
m33_34 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", span="63-63"];
m33_8 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.Should().Not.Be.Null()", span="56-56"];
m33_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="VerbsFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m33_25 [cluster="CommandLine.Tests.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Should().Not.Be.Null()", span="67-67"];
m33_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="VerbsFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m33_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m33_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=green, community=0, file="VerbsFixture.cs", label="2: Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m33_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", color=red, community=0, file="VerbsFixture.cs", label="0: new ValueListAttribute(null)", span="56-56"];
m33_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="0: Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m33_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="0: new ValueListAttribute(new List<string>().GetType())", span="69-69"];
m33_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", color=green, community=0, file="VerbsFixture.cs", label="1: Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m33_7 [cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="VerbsFixture.cs", label="0: Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m33_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m33_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m33_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="VerbsFixture.cs", label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85"];
m33_51 [cluster="System.IO.StringWriter.ToString()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m33_21 [cluster="Unk.Equal", file="VerbsFixture.cs", label="Entry Unk.Equal", span=""];
m33_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", color=red, community=0, file="VerbsFixture.cs", label="1: new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75"];
m33_26 [cluster="Unk.Equal", color=green, community=0, file="VerbsFixture.cs", label="1: Entry Unk.Equal", span=""];
m33_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="VerbsFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="1459-1459"];
m33_71 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", span="132-132"];
m33_72 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="0: var options = new OptionsWithVerbs()", span="134-134"];
m33_73 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="0: Result = Parser.ParseArguments(new string[] {''commit'', ''--amend''}, options)", span="135-135"];
m33_74 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="137-137"];
m33_75 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(null).Should().Be.False()", span="139-139"];
m33_76 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked('''').Should().Be.False()", span="140-140"];
m33_77 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_null_or_empty_verb()", span="132-132"];
m33_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m33_78 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", span="144-144"];
m33_80 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="0: Result = Parser.ParseArguments(new string[] {''commit'', ''--amend''}, options)", span="147-147"];
m33_79 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="146-146"];
m33_81 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="0: ResultShouldBeTrue()", span="149-149"];
m33_82 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''--commit'').Should().Be.False()", span="151-151"];
m33_84 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''-c'').Should().Be.False()", span="153-153"];
m33_83 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''-commit'').Should().Be.False()", span="152-152"];
m33_85 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(''---commit'').Should().Be.False()", span="154-154"];
m33_86 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''--amend'').Should().Be.False()", span="155-155"];
m33_87 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''-a'').Should().Be.False()", span="156-156"];
m33_88 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_ordinary_options()", span="144-144"];
m33_63 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", span="119-119"];
m33_64 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", color=green, community=0, file="VerbsFixture.cs", label="1: var options = new OptionsWithVerbs()", span="121-121"];
m33_65 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {}, options)", span="122-122"];
m33_66 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", color=green, community=0, file="VerbsFixture.cs", label="1: ResultShouldBeFalse()", span="124-124"];
m33_67 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="126-126"];
m33_68 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="127-127"];
m33_69 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Parser.WasVerbOptionInvoked(''clone'').Should().Be.False()", span="128-128"];
m33_70 [cluster="CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.Was_verb_option_invoked_returns_false_with_empty_arguments()", span="119-119"];
m33_89 [file="VerbsFixture.cs", label="CommandLine.Tests.VerbsFixture", span=""];
m34_0 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="43-43"];
m34_1 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: DoCoreTestForIndex(new string[] {})", span="45-45"];
m34_2 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="43-43"];
m34_3 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_41 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="96-96"];
m34_43 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: Result = Parser.ParseArguments(args, options, testWriter)", span="98-98"];
m34_42 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="97-97"];
m34_45 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="102-102"];
m34_44 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: ResultShouldBeFalse()", span="100-100"];
m34_46 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="103-103"];
m34_47 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="104-104"];
m34_48 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", span="106-106"];
m34_49 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[6].Trim().Should().Equal(''commit    Record changes to the repository.'')", span="107-107"];
m34_50 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", span="108-108"];
m34_51 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_22 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80"];
m34_24 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m34_25 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m34_23 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m34_32 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="80-80"];
m34_33 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="82-82"];
m34_34 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var testWriter = new StringWriter()", span="83-83"];
m34_35 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: Result = Parser.ParseArguments(new string[] {''help'', ''add''}, options, testWriter)", span="84-84"];
m34_37 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: var helpText = testWriter.ToString()", span="88-88"];
m34_36 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: ResultShouldBeFalse()", span="86-86"];
m34_38 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: Console.WriteLine(helpText)", span="89-89"];
m34_39 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
m34_40 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="80-80"];
m34_4 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_5 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: DoCoreTestForIndex(new string[] {''help''})", span="51-51"];
m34_6 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_7 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="55-55"];
m34_8 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", span="57-57"];
m34_9 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="55-55"];
m34_10 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="61-61"];
m34_11 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var options = new OptionsWithVerbsHelp()", span="63-63"];
m34_12 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="64-64"];
m34_13 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: Result = Parser.ParseArguments(new string[] { ''clone'', ''--no_hardlinks'' }, options, testWriter)", span="65-65"];
m34_15 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var helpText = testWriter.ToString()", span="69-69"];
m34_14 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: ResultShouldBeFalse()", span="67-67"];
m34_16 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="70-70"];
m34_17 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="71-71"];
m34_18 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[5].Trim().Should().Equal(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="73-73"];
m34_19 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[6].Trim().Should().Equal(''filesystem by copying files.'')", span="74-74"];
m34_20 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="1: lines[7].Trim().Should().Equal(''-q, --quiet       Suppress summary message.'')", span="75-75"];
m34_21 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="61-61"];
m34_26 [cluster="System.IO.StringWriter.ToString()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m34_27 [cluster="System.Console.WriteLine(string)", file="VerbsHelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_29 [cluster="string.Trim()", file="VerbsHelpTextFixture.cs", label="Entry string.Trim()", span="0-0"];
m34_31 [cluster="Unk.Equal", file="VerbsHelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m34_28 [cluster="string.Split(string[], System.StringSplitOptions)", file="VerbsHelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m34_52 [file="VerbsHelpTextFixture.cs", label="CommandLine.Text.Tests.VerbsHelpTextFixture", span=""];
n26 -> n1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.ExternalInjectionContext", style=dashed];
n27 -> n5  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n7  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n19  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n27 -> n20  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.ExternalInjectionTests.WhenInjectIsCalled", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n11  [key=2, style=dotted];
n5 -> n12  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n13  [key=2, style=dotted];
n6 -> n8  [color=darkseagreen4, key=1, label=warrior, style=dashed];
n6 -> n9  [color=darkseagreen4, key=1, label=warrior, style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n14  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n15  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n16  [key=2, style=dotted];
n10 -> n4  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n23  [key=2, style=dotted];
n18 -> n21  [color=darkseagreen4, key=1, label=instance, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n14  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n25  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=2, style=dotted];
n22 -> n17  [color=blue, key=0, style=bold];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d11  [color=green, key=2, style=dotted];
d5 -> d12  [color=green, key=2, style=dotted];
d1 -> d5  [color=green, key=1, label=ae, style=dashed];
d1 -> d2  [key=0, style=solid];
d1 -> d7  [key=2, style=dotted];
d1 -> d3  [color=darkseagreen4, key=1, label=ae, style=dashed];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d10  [key=2, style=dotted];
d6 -> d0  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d2 -> d8  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d9  [key=2, style=dotted];
d13 -> d4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_9 -> m1_13  [color=green, key=1, label="string[]", style=dashed];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_7  [color=green, key=2, style=dotted];
m1_10 -> d12  [color=green, key=2, style=dotted];
m1_12 -> m1_13  [color=green, key=0, style=solid];
m1_12 -> m1_15  [key=0, style=solid];
m1_12 -> m1_3  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_13 -> m1_14  [color=green, key=0, style=solid];
m1_13 -> m1_7  [color=green, key=2, style=dotted];
m1_13 -> d12  [color=green, key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [color=green, key=1, label=i, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_12  [key=0, style=solid];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_15 -> m1_9  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m1_0 -> m1_4  [color=green, key=1, label="T[]", style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_7  [color=green, key=2, style=dotted];
m1_1 -> d12  [color=green, key=2, style=dotted];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_6  [key=0, style=solid];
m1_3 -> m1_3  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_7  [color=green, key=2, style=dotted];
m1_4 -> d12  [color=green, key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [color=green, key=1, label=i, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_5 -> m1_3  [key=0, style=solid];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_230 -> m2_231  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_220  [key=2, style=dotted];
m2_232 -> m2_230  [color=blue, key=0, style=bold];
m2_78 -> m2_203  [key=0, style=solid];
m2_78 -> m2_205  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_206  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_207  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_208  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_78 -> m2_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_205  [key=0, style=solid];
m2_203 -> m2_212  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_133  [key=2, style=dotted];
m2_205 -> m2_207  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_205 -> m2_208  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_208  [key=0, style=solid];
m2_206 -> m2_102  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_213  [key=2, style=dotted];
m2_207 -> m2_214  [key=2, style=dotted];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_102  [key=2, style=dotted];
m2_208 -> m2_210  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_211  [key=0, style=solid];
m2_204 -> m2_211  [key=0, style=solid];
m2_210 -> m2_209  [key=0, style=solid];
m2_210 -> m2_215  [key=2, style=dotted];
m2_211 -> m2_78  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m2_19 -> m2_23  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_19 -> m2_18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_12  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_12  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_18  [key=2, style=dotted];
m2_24 -> m2_19  [color=blue, key=0, style=bold];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_173 -> m2_176  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m2_173 -> m2_177  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_173 -> m2_167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_12  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_12  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_167  [key=2, style=dotted];
m2_178 -> m2_173  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [color=red, key=0, style=solid];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_47 -> m2_51  [color=red, key=1, label="CommandLine.ParserContext", style=dashed];
m2_47 -> m2_52  [color=red, key=1, label="CommandLine.ParserContext", style=dashed];
m2_47 -> m2_58  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_47 -> m2_60  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_47 -> m2_40  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserContext context", style=bold];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_48 -> m2_67  [color=red, key=1, label=hadError, style=dashed];
m2_48 -> m2_33  [color=red, key=3, label="Local variable bool hadError", style=bold];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_70  [key=2, style=dotted];
m2_49 -> m2_58  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m2_49 -> m2_67  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m2_51 -> m2_52  [color=red, key=0, style=solid];
m2_51 -> m2_72  [color=red, key=2, style=dotted];
m2_51 -> m2_64  [color=red, key=1, label=target, style=dashed];
m2_51 -> m2_65  [color=red, key=1, label=target, style=dashed];
m2_52 -> m2_53  [color=red, key=0, style=solid];
m2_52 -> d7  [color=red, key=2, style=dotted];
m2_52 -> m2_54  [color=red, key=1, label=arguments, style=dashed];
m2_52 -> m2_58  [color=red, key=1, label=arguments, style=dashed];
m2_52 -> m2_63  [color=red, key=1, label=arguments, style=dashed];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_77  [key=2, style=dotted];
m2_58 -> m2_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_78  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_80  [key=2, style=dotted];
m2_67 -> m2_67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m2_50 -> m2_51  [color=red, key=0, style=solid];
m2_50 -> m2_71  [key=2, style=dotted];
m2_64 -> m2_65  [color=red, key=0, style=solid];
m2_64 -> m2_53  [color=red, key=0, style=solid];
m2_65 -> m2_66  [color=red, key=0, style=solid];
m2_65 -> m2_53  [color=red, key=0, style=solid];
m2_65 -> m2_79  [color=red, key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_67  [key=0, style=solid];
m2_53 -> m2_74  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [color=darkseagreen4, key=1, label=argument, style=dashed];
m2_54 -> m2_65  [color=red, key=1, label=argument, style=dashed];
m2_63 -> m2_53  [key=0, style=solid];
m2_63 -> m2_74  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_53  [key=0, style=solid];
m2_55 -> m2_75  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_76  [key=2, style=dotted];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=parser, style=dashed];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label=parser, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_64  [color=red, key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_53  [key=0, style=solid];
m2_61 -> m2_53  [key=0, style=solid];
m2_61 -> m2_67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m2_66 -> m2_53  [key=0, style=solid];
m2_66 -> m2_67  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_47  [color=blue, key=0, style=bold];
m2_39 -> m2_81  [key=0, style=solid];
m2_39 -> m2_82  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_39 -> m2_83  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_84  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_86  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_87  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m2_39 -> m2_18  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
m2_39 -> m2_34  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m2_39 -> m2_33  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_84  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m2_81 -> m2_87  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_89  [key=0, style=solid];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_82 -> m2_87  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=0, style=solid];
m2_84 -> m2_91  [key=2, style=dotted];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_82  [key=0, style=solid];
m2_86 -> m2_75  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_82  [key=0, style=solid];
m2_87 -> m2_92  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_85 -> m2_90  [key=0, style=solid];
m2_88 -> m2_90  [key=0, style=solid];
m2_90 -> m2_39  [color=blue, key=0, style=bold];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_168 -> m2_171  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_168 -> m2_167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_12  [key=2, style=dotted];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_12  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_167  [key=2, style=dotted];
m2_172 -> m2_168  [color=blue, key=0, style=bold];
m2_167 -> m2_185  [key=0, style=solid];
m2_167 -> m2_186  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_167 -> m2_187  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_167 -> m2_162  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_167 -> m2_168  [color=darkorchid, key=3, label="Parameter variable int exitCode", style=bold];
m2_167 -> m2_173  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_167 -> m2_179  [color=darkorchid, key=3, label="Parameter variable int exitCode", style=bold];
m2_167 -> m2_34  [color=darkorchid, key=3, label="method methodReturn bool DoParseArgumentsStrict", style=bold];
m2_185 -> m2_186  [key=0, style=solid];
m2_185 -> m2_188  [key=0, style=solid];
m2_185 -> m2_18  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_190  [key=2, style=dotted];
m2_187 -> m2_188  [key=0, style=solid];
m2_187 -> m2_191  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_189 -> m2_167  [color=blue, key=0, style=bold];
m2_135 -> m2_154  [key=0, style=solid];
m2_135 -> m2_155  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_135 -> m2_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_135 -> m2_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_135 -> m2_137  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m2_135 -> m2_113  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m2_135 -> m2_116  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
m2_135 -> m2_144  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
m2_154 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_156 -> m2_158  [key=0, style=solid];
m2_156 -> m2_161  [key=2, style=dotted];
m2_156 -> m2_159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_161  [key=2, style=dotted];
m2_157 -> m2_159  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_160  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_42  [key=2, style=dotted];
m2_160 -> m2_135  [color=blue, key=0, style=bold];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_93 -> m2_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_93 -> m2_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_93 -> m2_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_93 -> m2_93  [color=darkorchid, key=3, label="method methodReturn object GetVerbOptionsInstanceByName", style=bold];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [key=0, style=solid];
m2_95 -> m2_75  [key=2, style=dotted];
m2_96 -> m2_100  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_101  [key=2, style=dotted];
m2_97 -> m2_99  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_102  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m2_100 -> m2_93  [color=blue, key=0, style=bold];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_162 -> m2_167  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_12  [key=2, style=dotted];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_12  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_167  [key=2, style=dotted];
m2_166 -> m2_162  [color=blue, key=0, style=bold];
m2_199 -> m2_200  [key=0, style=solid];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_202  [key=2, style=dotted];
m2_201 -> m2_199  [color=blue, key=0, style=bold];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_103 -> m2_33  [color=darkorchid, key=3, label="method methodReturn bool WasVerbOptionInvoked", style=bold];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_106  [key=0, style=solid];
m2_104 -> m2_75  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_111  [key=2, style=dotted];
m2_105 -> m2_109  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=0, style=solid];
m2_106 -> m2_110  [key=2, style=dotted];
m2_107 -> m2_109  [key=0, style=solid];
m2_109 -> m2_103  [color=blue, key=0, style=bold];
m2_46 -> m2_112  [key=0, style=solid];
m2_46 -> m2_113  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_114  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_116  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_118  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_119  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_121  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_124  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_126  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_127  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_128  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_130  [color=darkseagreen4, key=1, label="CommandLine.ParserContext", style=dashed];
m2_46 -> m2_40  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserContext context", style=bold];
m2_46 -> m2_33  [color=darkorchid, key=3, label="method methodReturn bool DoParseArgumentsVerbs", style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_133  [key=2, style=dotted];
m2_112 -> m2_118  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_37  [key=2, style=dotted];
m2_113 -> m2_115  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_116  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_119  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_123  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_124  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_113 -> m2_130  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_118  [key=0, style=solid];
m2_114 -> m2_134  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_135  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_136  [key=2, style=dotted];
m2_118 -> m2_121  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_121  [key=0, style=solid];
m2_119 -> m2_137  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_126  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_121 -> m2_127  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_121 -> m2_128  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_135  [key=2, style=dotted];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_128  [key=0, style=solid];
m2_126 -> m2_138  [key=2, style=dotted];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_139  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_140  [key=2, style=dotted];
m2_128 -> m2_47  [key=2, style=dotted];
m2_128 -> m2_131  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_135  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=0, style=solid];
m2_117 -> m2_132  [key=0, style=solid];
m2_120 -> m2_132  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_126  [key=0, style=solid];
m2_125 -> m2_132  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_46  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_8  [color=blue, key=0, style=bold];
m2_190 -> m2_192  [key=0, style=solid];
m2_190 -> m2_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_190 -> m2_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_190 -> m2_167  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_194  [key=0, style=solid];
m2_192 -> m2_196  [key=2, style=dotted];
m2_192 -> m2_197  [key=2, style=dotted];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_45  [key=2, style=dotted];
m2_194 -> m2_198  [key=2, style=dotted];
m2_194 -> m2_42  [key=2, style=dotted];
m2_194 -> m2_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_193 -> m2_195  [key=0, style=solid];
m2_195 -> m2_190  [color=blue, key=0, style=bold];
m2_40 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_43 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_47  [key=2, style=dotted];
m2_44 -> m2_40  [color=blue, key=0, style=bold];
m2_220 -> m2_222  [key=0, style=solid];
m2_220 -> m2_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_220 -> m2_34  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m2_220 -> m2_33  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_224  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_228  [key=0, style=solid];
m2_223 -> m2_228  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_227  [key=0, style=solid];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_229  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_228 -> m2_220  [color=blue, key=0, style=bold];
m2_216 -> m2_217  [key=0, style=solid];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_220  [key=2, style=dotted];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_221  [key=2, style=dotted];
m2_219 -> m2_216  [color=blue, key=0, style=bold];
m2_137 -> m2_141  [key=0, style=solid];
m2_137 -> m2_142  [color=darkseagreen4, key=1, label="CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m2_137 -> m2_143  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_137 -> m2_144  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_137 -> m2_146  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionMap", style=dashed];
m2_137 -> m2_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_150  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_113  [color=darkorchid, key=3, label="Parameter variable CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m2_137 -> m2_118  [color=darkorchid, key=3, label="Parameter variable CommandLine.Internal.OptionMap optionMap", style=bold];
m2_137 -> m2_34  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
m2_137 -> m2_33  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
m2_141 -> m2_142  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_152  [key=0, style=solid];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_152  [key=0, style=solid];
m2_143 -> m2_111  [key=2, style=dotted];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_146  [color=darkseagreen4, key=1, label=verb, style=dashed];
m2_144 -> m2_150  [color=darkseagreen4, key=1, label=verb, style=dashed];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_146 -> m2_149  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=0, style=solid];
m2_148 -> m2_138  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_139  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_135  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_150  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_150  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_153 -> m2_137  [color=blue, key=0, style=bold];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_179 -> m2_182  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m2_179 -> m2_183  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_179 -> m2_167  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_12  [key=2, style=dotted];
m2_181 -> m2_182  [key=0, style=solid];
m2_181 -> m2_12  [key=2, style=dotted];
m2_182 -> m2_183  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_167  [key=2, style=dotted];
m2_184 -> m2_179  [color=blue, key=0, style=bold];
m2_18 -> m2_25  [key=0, style=solid];
m2_18 -> m2_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_18 -> m2_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_18 -> m2_13  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_18 -> m2_19  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_18 -> m2_167  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m2_18 -> m2_33  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m2_18 -> m2_34  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m2_18 -> m2_40  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_37  [key=2, style=dotted];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_25 -> m2_29  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_25 -> m2_31  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_38  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_34  [key=0, style=solid];
m2_29 -> m2_39  [key=2, style=dotted];
m2_29 -> m2_40  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_41  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m2_26 -> m2_32  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_35  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_42  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_34 -> m2_36  [key=0, style=solid];
m2_33 -> m2_36  [key=0, style=solid];
m2_36 -> m2_18  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_13 -> m2_18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_12  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_12  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_17 -> m2_13  [color=blue, key=0, style=bold];
m2_233 -> m2_1  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_5  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_16  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_22  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_23  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_26  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_27  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_29  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_35  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_43  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_49  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_56  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_81  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_106  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_108  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_115  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_116  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_118  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_119  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_124  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_128  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_130  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_141  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_150  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_158  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_159  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_165  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_171  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_176  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_177  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_182  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_183  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_185  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_186  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_192  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_194  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_217  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_218  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_222  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_225  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_226  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_227  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_233 -> m2_231  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m2_234 -> m2_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_121  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_121  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_124  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_123  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_122 -> m3_117  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_5  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_9  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_10  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_15  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_16  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [color=red, key=0, style=solid];
m3_22 -> m3_23  [color=red, key=0, style=solid];
m3_22 -> m3_5  [color=red, key=2, style=dotted];
m3_22 -> m3_6  [color=red, key=2, style=dotted];
m3_22 -> m3_7  [color=red, key=2, style=dotted];
m3_22 -> m3_27  [color=red, key=1, label="lambda expression", style=dashed];
m3_22 -> m3_31  [color=red, key=1, label="lambda expression", style=dashed];
m3_23 -> m3_24  [color=red, key=0, style=solid];
m3_23 -> m3_8  [key=2, style=dotted];
m3_24 -> m3_25  [color=red, key=0, style=solid];
m3_24 -> m3_26  [color=red, key=2, style=dotted];
m3_25 -> m3_19  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_7  [color=green, key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_8  [key=2, style=dotted];
m3_77 -> m3_79  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_80  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_81  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_77 -> m3_82  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_84  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_84  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_84  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_84  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_84  [key=2, style=dotted];
m3_83 -> m3_74  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_12  [color=green, key=2, style=dotted];
m3_9 -> m3_13  [color=green, key=2, style=dotted];
m3_9 -> m3_107  [key=0, style=solid];
m3_9 -> m3_108  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_9 -> m3_109  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_11 -> m3_8  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [key=0, style=solid];
m3_14 -> m3_15  [color=green, key=0, style=solid];
m3_14 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_6  [key=2, style=dotted];
m3_14 -> m3_8  [key=2, style=dotted];
m3_14 -> m3_18  [key=2, style=dotted];
m3_15 -> m3_16  [color=green, key=0, style=solid];
m3_15 -> m3_12  [color=green, key=2, style=dotted];
m3_15 -> m3_18  [color=green, key=2, style=dotted];
m3_15 -> m3_8  [key=2, style=dotted];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_16 -> m3_9  [key=2, style=dotted];
m3_17 -> m3_14  [color=blue, key=0, style=bold];
m3_17 -> m3_13  [color=blue, key=0, style=bold];
m3_85 -> m3_86  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_8  [key=2, style=dotted];
m3_88 -> m3_90  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_91  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_92  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_88 -> m3_93  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_84  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_84  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_84  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_84  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_84  [key=2, style=dotted];
m3_94 -> m3_85  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_106  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_5  [key=2, style=dotted];
m3_104 -> m3_6  [key=2, style=dotted];
m3_105 -> m3_102  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_31 -> m3_32  [color=red, key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [color=red, key=0, style=solid];
m3_32 -> m3_30  [color=red, key=2, style=dotted];
m3_33 -> m3_31  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [color=red, key=0, style=solid];
m3_42 -> m3_8  [color=red, key=2, style=dotted];
m3_41 -> m3_42  [color=red, key=0, style=solid];
m3_43 -> m3_41  [color=blue, key=0, style=bold];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_30  [key=2, style=dotted];
m3_59 -> m3_57  [color=blue, key=0, style=bold];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_30  [key=2, style=dotted];
m3_62 -> m3_60  [color=blue, key=0, style=bold];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_5  [key=2, style=dotted];
m3_53 -> m3_6  [key=2, style=dotted];
m3_53 -> m3_39  [key=2, style=dotted];
m3_53 -> m3_40  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_8  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_26  [key=2, style=dotted];
m3_56 -> m3_50  [color=blue, key=0, style=bold];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_97  [color=blue, key=0, style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> n16  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_84  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> n16  [key=2, style=dotted];
m3_110 -> m3_9  [color=blue, key=0, style=bold];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_5  [key=2, style=dotted];
m3_65 -> m3_6  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_8  [key=2, style=dotted];
m3_66 -> m3_68  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_66 -> m3_69  [color=darkseagreen4, key=1, label=warrior, style=dashed];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> n16  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> n16  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_71  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> n16  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> n16  [key=2, style=dotted];
m3_72 -> m3_63  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_95  [color=blue, key=0, style=bold];
m3_26 -> m3_111  [key=0, style=solid];
m3_26 -> m3_112  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_26 -> m3_113  [color=darkseagreen4, key=1, label="Ninject.Tests.Fakes.IWarrior", style=dashed];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> n16  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> n16  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_115  [color=darkseagreen4, key=1, label=ninja, style=dashed];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> n16  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> n16  [key=2, style=dotted];
m3_116 -> m3_26  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_5  [key=2, style=dotted];
m3_45 -> m3_6  [key=2, style=dotted];
m3_45 -> m3_49  [key=2, style=dotted];
m3_45 -> m3_8  [key=2, style=dotted];
m3_45 -> m3_40  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_8  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_9  [key=2, style=dotted];
m3_48 -> m3_44  [color=blue, key=0, style=bold];
m3_34 -> m3_35  [color=red, key=0, style=solid];
m3_35 -> m3_36  [color=red, key=0, style=solid];
m3_35 -> m3_5  [color=red, key=2, style=dotted];
m3_35 -> m3_6  [color=red, key=2, style=dotted];
m3_35 -> m3_39  [color=red, key=2, style=dotted];
m3_35 -> m3_40  [color=red, key=2, style=dotted];
m3_35 -> m3_42  [color=red, key=1, label="Ninject.Activation.IContext", style=dashed];
m3_36 -> m3_37  [color=red, key=0, style=solid];
m3_36 -> m3_8  [color=red, key=2, style=dotted];
m3_37 -> m3_38  [color=red, key=0, style=solid];
m3_37 -> m3_9  [color=red, key=2, style=dotted];
m3_38 -> m3_34  [color=blue, key=0, style=bold];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=2, style=dotted];
m3_101 -> m3_99  [color=blue, key=0, style=bold];
m3_125 -> m3_1  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_2  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_3  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_14  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_15  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_16  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_20  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_21  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_22  [color=red, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_23  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_125 -> m3_24  [color=red, key=1, label="Ninject.Tests.Integration.WithPropertyValueTests", style=dashed];
m3_126 -> m3_35  [color=red, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_36  [color=red, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_37  [color=red, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_45  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_46  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_47  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_51  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_52  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_53  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_54  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_126 -> m3_55  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WithParameterTests", style=dashed];
m3_127 -> m3_64  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_65  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_66  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_75  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_76  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_77  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_86  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_87  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_127 -> m3_88  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.WhenNoPropertyOverridesAreSupplied", style=dashed];
m3_128 -> m3_100  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_103  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_104  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_118  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_119  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_120  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m3_128 -> m3_121  [color=darkseagreen4, key=1, label="Ninject.Tests.Integration.PropertyInjectionTests", style=dashed];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_10  [color=green, key=2, style=dotted];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_11  [key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_20  [color=green, key=2, style=dotted];
m4_25 -> m4_21  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_47 -> m4_10  [key=2, style=dotted];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_48 -> m4_49  [color=green, key=0, style=solid];
m4_48 -> m4_11  [color=green, key=2, style=dotted];
m4_50 -> m4_51  [color=green, key=0, style=solid];
m4_50 -> m4_13  [key=2, style=dotted];
m4_49 -> m4_50  [color=red, key=0, style=solid];
m4_49 -> m4_12  [color=red, key=2, style=dotted];
m4_51 -> m4_52  [color=green, key=0, style=solid];
m4_51 -> m4_10  [color=green, key=2, style=dotted];
m4_51 -> m4_54  [color=green, key=1, label=options, style=dashed];
m4_52 -> m4_53  [color=green, key=0, style=solid];
m4_52 -> m4_11  [key=2, style=dotted];
m4_54 -> m4_55  [color=green, key=0, style=solid];
m4_54 -> m4_14  [color=green, key=2, style=dotted];
m4_53 -> m4_54  [color=green, key=0, style=solid];
m4_53 -> m4_12  [color=green, key=2, style=dotted];
m4_55 -> m4_46  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_27 -> m4_10  [color=green, key=2, style=dotted];
m4_27 -> m4_30  [color=green, key=1, label=options, style=dashed];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_28 -> m4_11  [color=green, key=2, style=dotted];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_30 -> m4_13  [color=red, key=2, style=dotted];
m4_29 -> m4_30  [color=red, key=0, style=solid];
m4_29 -> m4_12  [color=red, key=2, style=dotted];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_10  [color=green, key=2, style=dotted];
m4_31 -> m4_34  [color=green, key=1, label=options, style=dashed];
m4_32 -> m4_33  [color=green, key=0, style=solid];
m4_32 -> m4_11  [key=2, style=dotted];
m4_34 -> m4_35  [color=green, key=0, style=solid];
m4_34 -> m4_14  [color=green, key=2, style=dotted];
m4_33 -> m4_34  [color=green, key=0, style=solid];
m4_33 -> m4_12  [color=green, key=2, style=dotted];
m4_35 -> m4_26  [color=blue, key=0, style=bold];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_37 -> m4_38  [color=green, key=0, style=solid];
m4_37 -> m4_10  [color=green, key=2, style=dotted];
m4_38 -> m4_39  [color=red, key=0, style=solid];
m4_38 -> m4_11  [color=red, key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_20  [key=2, style=dotted];
m4_40 -> m4_36  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_10  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_2 -> m4_3  [color=red, key=0, style=solid];
m4_2 -> m4_11  [color=green, key=2, style=dotted];
m4_2 -> m4_7  [color=green, key=0, style=solid];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_13  [color=red, key=2, style=dotted];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_3 -> m4_12  [color=red, key=2, style=dotted];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_10  [color=green, key=2, style=dotted];
m4_5 -> m4_8  [color=green, key=1, label=options, style=dashed];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_11  [color=red, key=2, style=dotted];
m4_8 -> m4_9  [color=red, key=0, style=solid];
m4_8 -> m4_14  [color=red, key=2, style=dotted];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_12  [color=green, key=2, style=dotted];
m4_7 -> m4_4  [key=0, style=solid];
m4_9 -> m4_0  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [color=green, key=0, style=solid];
m4_62 -> m4_63  [color=green, key=0, style=solid];
m4_62 -> m4_10  [color=green, key=2, style=dotted];
m4_63 -> m4_64  [color=green, key=0, style=solid];
m4_63 -> m4_11  [color=green, key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_20  [key=2, style=dotted];
m4_65 -> m4_61  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_10  [color=green, key=2, style=dotted];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_17 -> m4_11  [color=green, key=2, style=dotted];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_18 -> m4_20  [color=green, key=2, style=dotted];
m4_19 -> m4_15  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [color=green, key=0, style=solid];
m4_42 -> m4_43  [color=green, key=0, style=solid];
m4_42 -> m4_10  [color=green, key=2, style=dotted];
m4_43 -> m4_44  [color=green, key=0, style=solid];
m4_43 -> m4_11  [color=green, key=2, style=dotted];
m4_44 -> m4_45  [color=green, key=0, style=solid];
m4_44 -> m4_20  [color=green, key=2, style=dotted];
m4_45 -> m4_41  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [color=green, key=0, style=solid];
m4_57 -> m4_58  [color=green, key=0, style=solid];
m4_57 -> m4_10  [color=green, key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_11  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_20  [key=2, style=dotted];
m4_60 -> m4_56  [color=blue, key=0, style=bold];
m4_66 -> m4_67  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_10  [key=2, style=dotted];
m4_67 -> m4_70  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_68 -> m4_69  [color=green, key=0, style=solid];
m4_68 -> m4_11  [key=2, style=dotted];
m4_70 -> m4_71  [color=green, key=0, style=solid];
m4_70 -> m4_13  [color=red, key=2, style=dotted];
m4_69 -> m4_70  [color=green, key=0, style=solid];
m4_69 -> m4_12  [color=green, key=2, style=dotted];
m4_71 -> m4_72  [color=green, key=0, style=solid];
m4_71 -> m4_10  [color=green, key=2, style=dotted];
m4_71 -> m4_74  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_75  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_76  [color=green, key=1, label=options, style=dashed];
m4_71 -> m4_77  [color=green, key=1, label=options, style=dashed];
m4_72 -> m4_73  [color=green, key=0, style=solid];
m4_72 -> m4_11  [color=green, key=2, style=dotted];
m4_74 -> m4_75  [color=green, key=0, style=solid];
m4_74 -> m4_13  [color=green, key=2, style=dotted];
m4_75 -> m4_76  [color=green, key=0, style=solid];
m4_75 -> m4_13  [color=green, key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_13  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_13  [key=2, style=dotted];
m4_73 -> m4_74  [color=green, key=0, style=solid];
m4_73 -> m4_12  [key=2, style=dotted];
m4_78 -> m4_66  [color=blue, key=0, style=bold];
m4_79 -> m4_2  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_3  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_17  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_18  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_24  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_28  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_29  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_33  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_38  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_43  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_44  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_48  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_53  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_58  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_59  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_63  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_68  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_69  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_72  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m4_79 -> m4_73  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_17 -> m5_18  [key=0, style=solid];
m5_25 -> m5_26  [color=red, key=0, style=solid];
m5_25 -> m5_15  [color=red, key=2, style=dotted];
m5_25 -> m5_13  [color=red, key=2, style=dotted];
m5_25 -> d12  [color=red, key=2, style=dotted];
m5_18 -> m5_25  [color=red, key=1, label=writer, style=dashed];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_8  [key=2, style=dotted];
m5_18 -> m5_20  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_24 -> m5_25  [color=red, key=0, style=solid];
m5_24 -> m5_13  [color=red, key=2, style=dotted];
m5_24 -> m5_14  [color=red, key=2, style=dotted];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> m5_12  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_27  [key=2, style=dotted];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_23  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_9  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_11  [key=2, style=dotted];
m5_26 -> m5_17  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_8  [key=2, style=dotted];
m5_1 -> m5_6  [color=green, key=1, label=writer, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_15  [color=green, key=2, style=dotted];
m5_6 -> m5_13  [color=green, key=2, style=dotted];
m5_6 -> d12  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_11  [key=2, style=dotted];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_13  [color=green, key=2, style=dotted];
m5_5 -> m5_14  [color=green, key=2, style=dotted];
m5_7 -> m5_0  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_34 -> m5_35  [color=red, key=0, style=solid];
m5_34 -> m5_15  [color=red, key=2, style=dotted];
m5_34 -> m5_13  [color=red, key=2, style=dotted];
m5_34 -> d12  [color=red, key=2, style=dotted];
m5_29 -> m5_34  [color=red, key=1, label=writer, style=dashed];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_8  [key=2, style=dotted];
m5_29 -> m5_32  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_33 -> m5_34  [color=red, key=0, style=solid];
m5_33 -> m5_13  [color=red, key=2, style=dotted];
m5_33 -> m5_14  [color=red, key=2, style=dotted];
m5_32 -> m5_33  [color=red, key=0, style=solid];
m5_32 -> m5_36  [key=2, style=dotted];
m5_30 -> m5_32  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_9  [key=2, style=dotted];
m5_30 -> m5_27  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_11  [key=2, style=dotted];
m5_35 -> m5_28  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_13  [key=2, style=dotted];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_8  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_10  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_11  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_10  [key=0, style=solid];
m7_7 -> m7_9  [key=0, style=solid];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_16  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_16  [key=2, style=dotted];
m7_9 -> m7_4  [key=0, style=solid];
m7_9 -> m7_16  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_18  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_14  [key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=0, style=solid];
m7_12 -> m7_2  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [color=red, key=0, style=solid];
m7_45 -> m7_46  [color=red, key=0, style=solid];
m7_45 -> m7_35  [color=red, key=2, style=dotted];
m7_46 -> m7_44  [color=blue, key=0, style=bold];
m7_47 -> m7_48  [color=green, key=0, style=solid];
m7_48 -> m7_49  [color=red, key=0, style=solid];
m7_48 -> m7_0  [color=green, key=2, style=dotted];
m7_49 -> m7_50  [color=red, key=0, style=solid];
m7_49 -> m7_24  [color=red, key=2, style=dotted];
m7_49 -> d11  [color=red, key=2, style=dotted];
m7_49 -> m7_26  [color=red, key=2, style=dotted];
m7_50 -> m7_47  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [color=red, key=0, style=solid];
m7_41 -> m7_42  [color=red, key=0, style=solid];
m7_41 -> m7_43  [color=red, key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [key=0, style=solid];
m7_21 -> m7_22  [color=red, key=0, style=solid];
m7_21 -> m7_24  [color=red, key=2, style=dotted];
m7_21 -> d11  [color=red, key=2, style=dotted];
m7_21 -> m7_26  [color=red, key=2, style=dotted];
m7_20 -> m7_21  [color=red, key=0, style=solid];
m7_20 -> m7_23  [key=2, style=dotted];
m7_22 -> m7_19  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_23  [key=2, style=dotted];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_24  [color=green, key=2, style=dotted];
m7_29 -> d11  [color=green, key=2, style=dotted];
m7_29 -> m7_26  [color=green, key=2, style=dotted];
m7_30 -> m7_27  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [key=0, style=solid];
m7_38 -> m7_39  [color=red, key=0, style=solid];
m7_38 -> m7_24  [color=red, key=2, style=dotted];
m7_38 -> d11  [color=red, key=2, style=dotted];
m7_38 -> m7_26  [color=red, key=2, style=dotted];
m7_37 -> m7_38  [color=red, key=0, style=solid];
m7_37 -> m7_35  [key=2, style=dotted];
m7_39 -> m7_36  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_43  [color=green, key=2, style=dotted];
m7_52 -> m7_55  [color=green, key=1, label=info, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_53 -> m7_53  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_55 -> m7_56  [color=red, key=0, style=solid];
m7_55 -> m7_24  [color=red, key=2, style=dotted];
m7_55 -> d11  [color=red, key=2, style=dotted];
m7_55 -> m7_26  [color=red, key=2, style=dotted];
m7_54 -> m7_55  [color=red, key=0, style=solid];
m7_54 -> m7_57  [key=0, style=solid];
m7_56 -> m7_54  [key=0, style=solid];
m7_56 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_57 -> m7_51  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_35  [key=2, style=dotted];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_24  [color=green, key=2, style=dotted];
m7_33 -> d11  [color=green, key=2, style=dotted];
m7_33 -> m7_26  [color=green, key=2, style=dotted];
m7_34 -> m7_31  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_29 -> m8_30  [color=red, key=0, style=solid];
m8_29 -> m8_21  [color=red, key=2, style=dotted];
m8_29 -> m8_22  [color=red, key=2, style=dotted];
m8_27 -> m8_29  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_30  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_31  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_32  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_34  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_35  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_36  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_37  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_39  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_40  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_41  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_42  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_44  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_45  [color=red, key=1, label=e, style=dashed];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_47  [key=2, style=dotted];
m8_27 -> m8_33  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_38  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_28 -> m8_29  [color=red, key=0, style=solid];
m8_28 -> m8_20  [key=2, style=dotted];
m8_30 -> m8_31  [color=red, key=0, style=solid];
m8_30 -> m8_21  [color=red, key=2, style=dotted];
m8_30 -> m8_22  [color=red, key=2, style=dotted];
m8_31 -> m8_32  [color=red, key=0, style=solid];
m8_31 -> m8_48  [color=red, key=2, style=dotted];
m8_31 -> m8_21  [color=red, key=2, style=dotted];
m8_31 -> m8_22  [color=red, key=2, style=dotted];
m8_32 -> m8_33  [color=red, key=0, style=solid];
m8_32 -> m8_21  [color=red, key=2, style=dotted];
m8_32 -> m8_23  [color=red, key=2, style=dotted];
m8_33 -> m8_34  [color=red, key=0, style=solid];
m8_33 -> m8_20  [key=2, style=dotted];
m8_34 -> m8_35  [color=red, key=0, style=solid];
m8_34 -> m8_21  [color=red, key=2, style=dotted];
m8_34 -> m8_22  [color=red, key=2, style=dotted];
m8_35 -> m8_36  [color=red, key=0, style=solid];
m8_35 -> m8_21  [color=red, key=2, style=dotted];
m8_35 -> m8_22  [color=red, key=2, style=dotted];
m8_36 -> m8_37  [color=red, key=0, style=solid];
m8_36 -> m8_48  [color=red, key=2, style=dotted];
m8_36 -> m8_21  [color=red, key=2, style=dotted];
m8_36 -> m8_22  [color=red, key=2, style=dotted];
m8_37 -> m8_38  [color=red, key=0, style=solid];
m8_37 -> m8_21  [color=red, key=2, style=dotted];
m8_37 -> m8_23  [color=red, key=2, style=dotted];
m8_38 -> m8_39  [color=red, key=0, style=solid];
m8_38 -> m8_20  [key=2, style=dotted];
m8_39 -> m8_40  [color=red, key=0, style=solid];
m8_39 -> m8_21  [color=red, key=2, style=dotted];
m8_39 -> m8_22  [color=red, key=2, style=dotted];
m8_40 -> m8_41  [color=red, key=0, style=solid];
m8_40 -> m8_21  [color=red, key=2, style=dotted];
m8_40 -> m8_22  [color=red, key=2, style=dotted];
m8_41 -> m8_42  [color=red, key=0, style=solid];
m8_41 -> m8_48  [color=red, key=2, style=dotted];
m8_41 -> m8_21  [color=red, key=2, style=dotted];
m8_41 -> m8_22  [color=red, key=2, style=dotted];
m8_42 -> m8_43  [color=red, key=0, style=solid];
m8_42 -> m8_21  [color=red, key=2, style=dotted];
m8_42 -> m8_23  [color=red, key=2, style=dotted];
m8_43 -> m8_44  [color=red, key=0, style=solid];
m8_43 -> m8_20  [key=2, style=dotted];
m8_44 -> m8_45  [color=red, key=0, style=solid];
m8_44 -> m8_21  [color=red, key=2, style=dotted];
m8_44 -> m8_22  [color=red, key=2, style=dotted];
m8_45 -> m8_46  [color=red, key=0, style=solid];
m8_45 -> m8_21  [color=red, key=2, style=dotted];
m8_45 -> m8_25  [color=red, key=2, style=dotted];
m8_46 -> m8_26  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_7 -> m8_8  [color=red, key=0, style=solid];
m8_7 -> m8_21  [color=red, key=2, style=dotted];
m8_7 -> m8_22  [color=red, key=2, style=dotted];
m8_1 -> m8_7  [color=red, key=1, label=valueOne, style=dashed];
m8_1 -> m8_1  [color=darkorchid, key=3, label="Local variable string valueOne", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label=valueOne, style=dashed];
m8_5 -> m8_7  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_8  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_11  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_12  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_15  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_9  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_13  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_16  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_17  [color=red, key=1, label=e, style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> d7  [key=2, style=dotted];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_5 -> m8_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_6 -> m8_7  [color=red, key=0, style=solid];
m8_6 -> m8_20  [key=2, style=dotted];
m8_8 -> m8_9  [color=red, key=0, style=solid];
m8_8 -> m8_21  [color=red, key=2, style=dotted];
m8_8 -> m8_22  [color=red, key=2, style=dotted];
m8_2 -> m8_8  [color=red, key=1, label=valueTwo, style=dashed];
m8_2 -> m8_11  [color=red, key=1, label=valueTwo, style=dashed];
m8_2 -> m8_2  [color=darkorchid, key=3, label="Local variable string valueTwo", style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m8_9 -> m8_10  [color=red, key=0, style=solid];
m8_9 -> m8_21  [color=red, key=2, style=dotted];
m8_9 -> m8_23  [color=red, key=2, style=dotted];
m8_11 -> m8_12  [color=red, key=0, style=solid];
m8_11 -> m8_21  [color=red, key=2, style=dotted];
m8_11 -> m8_22  [color=red, key=2, style=dotted];
m8_10 -> m8_11  [color=red, key=0, style=solid];
m8_10 -> m8_20  [key=2, style=dotted];
m8_12 -> m8_13  [color=red, key=0, style=solid];
m8_12 -> m8_21  [color=red, key=2, style=dotted];
m8_12 -> m8_22  [color=red, key=2, style=dotted];
m8_3 -> m8_12  [color=red, key=1, label=valueThree, style=dashed];
m8_3 -> m8_15  [color=red, key=1, label=valueThree, style=dashed];
m8_3 -> m8_3  [color=darkorchid, key=3, label="Local variable string valueThree", style=bold];
m8_3 -> m8_4  [key=0, style=solid];
m8_13 -> m8_14  [color=red, key=0, style=solid];
m8_13 -> m8_21  [color=red, key=2, style=dotted];
m8_13 -> m8_23  [color=red, key=2, style=dotted];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_15 -> m8_21  [color=red, key=2, style=dotted];
m8_15 -> m8_22  [color=red, key=2, style=dotted];
m8_14 -> m8_15  [color=red, key=0, style=solid];
m8_14 -> m8_20  [key=2, style=dotted];
m8_16 -> m8_17  [color=red, key=0, style=solid];
m8_16 -> m8_21  [color=red, key=2, style=dotted];
m8_16 -> m8_24  [color=red, key=2, style=dotted];
m8_17 -> m8_18  [color=red, key=0, style=solid];
m8_17 -> m8_21  [color=red, key=2, style=dotted];
m8_17 -> m8_25  [color=red, key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_18 -> m8_0  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_5  [color=darkseagreen4, key=1, label=hi, style=dashed];
m9_2 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_1  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_5 -> m9_12  [key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_9  [color=green, key=2, style=dotted];
m9_3 -> d12  [color=green, key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_6  [color=green, key=1, label=sw, style=dashed];
m9_6 -> m9_7  [color=green, key=0, style=solid];
m9_6 -> m9_13  [color=green, key=2, style=dotted];
m9_6 -> m9_9  [color=green, key=2, style=dotted];
m9_6 -> d12  [color=green, key=2, style=dotted];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_17 -> m9_18  [color=red, key=0, style=solid];
m9_17 -> m9_9  [color=red, key=2, style=dotted];
m9_17 -> d12  [color=red, key=2, style=dotted];
m9_16 -> m9_17  [color=red, key=0, style=solid];
m9_16 -> m9_15  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m9_18 -> m9_20  [color=red, key=1, label=sw, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_11  [key=2, style=dotted];
m9_20 -> m9_21  [color=red, key=0, style=solid];
m9_20 -> m9_13  [color=red, key=2, style=dotted];
m9_20 -> m9_9  [color=red, key=2, style=dotted];
m9_20 -> d12  [color=red, key=2, style=dotted];
m9_19 -> m9_20  [color=red, key=0, style=solid];
m9_19 -> m9_12  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_19  [color=darkseagreen4, key=1, label=hi, style=dashed];
m9_15 -> m9_22  [key=2, style=dotted];
m9_21 -> m9_14  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_19 -> m10_20  [color=red, key=0, style=solid];
m10_19 -> m10_25  [color=red, key=2, style=dotted];
m10_17 -> m10_19  [color=red, key=1, label=options, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_23  [key=2, style=dotted];
m10_18 -> m10_19  [color=red, key=0, style=solid];
m10_18 -> m10_21  [color=red, key=1, label=writer, style=dashed];
m10_18 -> m10_24  [key=2, style=dotted];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_20 -> m10_26  [color=red, key=2, style=dotted];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_21 -> m10_27  [color=red, key=2, style=dotted];
m10_21 -> d11  [color=red, key=2, style=dotted];
m10_21 -> m10_29  [color=red, key=2, style=dotted];
m10_22 -> m10_16  [color=blue, key=0, style=bold];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_23  [key=2, style=dotted];
m10_43 -> m10_45  [color=green, key=1, label=options, style=dashed];
m10_44 -> m10_45  [color=green, key=0, style=solid];
m10_44 -> m10_24  [key=2, style=dotted];
m10_44 -> m10_47  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_45 -> m10_46  [color=green, key=0, style=solid];
m10_45 -> m10_25  [color=green, key=2, style=dotted];
m10_47 -> m10_48  [color=green, key=0, style=solid];
m10_47 -> m10_27  [key=2, style=dotted];
m10_46 -> m10_47  [color=green, key=0, style=solid];
m10_46 -> m10_39  [color=green, key=2, style=dotted];
m10_48 -> m10_49  [color=green, key=0, style=solid];
m10_48 -> d11  [color=green, key=2, style=dotted];
m10_48 -> m10_40  [color=green, key=2, style=dotted];
m10_49 -> m10_42  [color=blue, key=0, style=bold];
m10_30 -> m10_31  [key=0, style=solid];
m10_33 -> m10_34  [color=red, key=0, style=solid];
m10_33 -> m10_25  [color=red, key=2, style=dotted];
m10_31 -> m10_33  [color=red, key=1, label=options, style=dashed];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_23  [key=2, style=dotted];
m10_32 -> m10_33  [color=red, key=0, style=solid];
m10_32 -> m10_24  [key=2, style=dotted];
m10_32 -> m10_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_34 -> m10_35  [color=red, key=0, style=solid];
m10_34 -> m10_39  [color=red, key=2, style=dotted];
m10_35 -> m10_36  [color=red, key=0, style=solid];
m10_35 -> m10_27  [key=2, style=dotted];
m10_35 -> m10_37  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m10_36 -> m10_37  [color=red, key=0, style=solid];
m10_36 -> d11  [color=red, key=2, style=dotted];
m10_36 -> m10_40  [color=red, key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_41  [key=2, style=dotted];
m10_38 -> m10_30  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_11  [key=2, style=dotted];
m10_1 -> m10_12  [key=2, style=dotted];
m10_1 -> m10_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_5  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_1 -> m10_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_13  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_14  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_14  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_14  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_14  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_14  [key=2, style=dotted];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_15  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_0  [color=blue, key=0, style=bold];
m10_50 -> m10_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", style=dashed];
m10_51 -> m10_19  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m10_51 -> m10_20  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m10_51 -> m10_33  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m10_51 -> m10_34  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m10_51 -> m10_45  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m10_51 -> m10_46  [color=green, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m11_66 -> m11_67  [color=red, key=0, style=solid];
m11_68 -> m11_69  [color=red, key=0, style=solid];
m11_68 -> m11_78  [color=red, key=2, style=dotted];
m11_68 -> m11_64  [color=green, key=2, style=dotted];
m11_68 -> m11_21  [color=red, key=2, style=dotted];
m11_67 -> m11_68  [color=red, key=0, style=solid];
m11_69 -> m11_70  [color=red, key=0, style=solid];
m11_69 -> m11_65  [color=green, key=2, style=dotted];
m11_69 -> m11_42  [color=red, key=2, style=dotted];
m11_70 -> m11_71  [color=red, key=0, style=solid];
m11_70 -> m11_41  [color=green, key=2, style=dotted];
m11_70 -> m11_72  [color=red, key=1, label=lines, style=dashed];
m11_70 -> m11_73  [color=red, key=1, label=lines, style=dashed];
m11_70 -> m11_74  [color=red, key=1, label=lines, style=dashed];
m11_70 -> m11_75  [color=red, key=1, label=lines, style=dashed];
m11_70 -> m11_76  [color=red, key=1, label=lines, style=dashed];
m11_70 -> m11_43  [key=2, style=dotted];
m11_71 -> m11_72  [color=red, key=0, style=solid];
m11_71 -> d11  [color=red, key=2, style=dotted];
m11_71 -> m11_45  [color=red, key=2, style=dotted];
m11_72 -> m11_73  [color=red, key=0, style=solid];
m11_72 -> d11  [color=red, key=2, style=dotted];
m11_72 -> m11_45  [color=red, key=2, style=dotted];
m11_73 -> m11_74  [color=red, key=0, style=solid];
m11_73 -> d11  [color=red, key=2, style=dotted];
m11_73 -> m11_45  [color=red, key=2, style=dotted];
m11_74 -> m11_75  [color=red, key=0, style=solid];
m11_74 -> d11  [color=red, key=2, style=dotted];
m11_74 -> m11_45  [color=red, key=2, style=dotted];
m11_75 -> m11_76  [color=red, key=0, style=solid];
m11_75 -> d11  [color=red, key=2, style=dotted];
m11_75 -> m11_45  [color=red, key=2, style=dotted];
m11_76 -> m11_77  [color=red, key=0, style=solid];
m11_76 -> d11  [color=red, key=2, style=dotted];
m11_76 -> m11_45  [color=red, key=2, style=dotted];
m11_77 -> m11_66  [color=blue, key=0, style=bold];
m11_178 -> m11_179  [color=green, key=0, style=solid];
m11_179 -> m11_180  [color=green, key=0, style=solid];
m11_179 -> m11_171  [color=green, key=2, style=dotted];
m11_180 -> m11_181  [color=red, key=0, style=solid];
m11_180 -> m11_161  [key=2, style=dotted];
m11_180 -> m11_172  [key=2, style=dotted];
m11_180 -> m11_163  [key=2, style=dotted];
m11_181 -> m11_182  [color=red, key=0, style=solid];
m11_181 -> d11  [color=red, key=2, style=dotted];
m11_181 -> m11_164  [color=red, key=2, style=dotted];
m11_182 -> m11_178  [color=blue, key=0, style=bold];
m11_183 -> m11_184  [color=green, key=0, style=solid];
m11_184 -> m11_185  [color=green, key=0, style=solid];
m11_184 -> m11_171  [color=green, key=2, style=dotted];
m11_185 -> m11_186  [color=red, key=0, style=solid];
m11_185 -> m11_161  [key=2, style=dotted];
m11_185 -> m11_188  [key=2, style=dotted];
m11_185 -> m11_163  [key=2, style=dotted];
m11_186 -> m11_187  [color=red, key=0, style=solid];
m11_186 -> d11  [color=red, key=2, style=dotted];
m11_186 -> m11_164  [color=red, key=2, style=dotted];
m11_187 -> m11_183  [color=blue, key=0, style=bold];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_205  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m11_203 -> m11_210  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m11_203 -> m11_212  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_204  [color=darkorchid, key=3, label="Local variable string optionHelp", style=bold];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_208  [key=0, style=solid];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_212  [key=0, style=solid];
m11_212 -> m11_213  [key=0, style=solid];
m11_206 -> m11_207  [key=0, style=solid];
m11_208 -> m11_209  [key=0, style=solid];
m11_207 -> m11_210  [key=0, style=solid];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_211  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m11_209 -> m11_212  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_211  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m11_213 -> m11_203  [color=blue, key=0, style=bold];
m11_134 -> m11_135  [color=green, key=0, style=solid];
m11_135 -> m11_136  [color=green, key=0, style=solid];
m11_135 -> m11_129  [color=green, key=2, style=dotted];
m11_135 -> m11_130  [color=green, key=2, style=dotted];
m11_135 -> m11_131  [color=green, key=2, style=dotted];
m11_135 -> m11_137  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_132  [key=2, style=dotted];
m11_136 -> m11_21  [key=2, style=dotted];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_42  [key=2, style=dotted];
m11_137 -> m11_139  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_139 -> m11_41  [key=2, style=dotted];
m11_139 -> m11_140  [color=red, key=0, style=solid];
m11_139 -> m11_43  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_111  [key=2, style=dotted];
m11_140 -> m11_141  [color=red, key=0, style=solid];
m11_140 -> d11  [color=red, key=2, style=dotted];
m11_140 -> m11_45  [color=red, key=2, style=dotted];
m11_141 -> m11_134  [color=blue, key=0, style=bold];
m11_166 -> m11_167  [color=green, key=0, style=solid];
m11_167 -> m11_168  [color=green, key=0, style=solid];
m11_167 -> m11_171  [color=green, key=2, style=dotted];
m11_168 -> m11_169  [color=red, key=0, style=solid];
m11_168 -> m11_161  [key=2, style=dotted];
m11_168 -> m11_172  [key=2, style=dotted];
m11_168 -> m11_163  [key=2, style=dotted];
m11_169 -> m11_170  [color=red, key=0, style=solid];
m11_169 -> d11  [color=red, key=2, style=dotted];
m11_169 -> m11_164  [color=red, key=2, style=dotted];
m11_170 -> m11_166  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [color=green, key=0, style=solid];
m11_147 -> m11_148  [color=green, key=0, style=solid];
m11_147 -> m11_159  [color=green, key=2, style=dotted];
m11_147 -> m11_149  [color=green, key=1, label=sw, style=dashed];
m11_147 -> m11_152  [color=green, key=1, label=sw, style=dashed];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_160  [key=2, style=dotted];
m11_148 -> m11_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_161  [key=2, style=dotted];
m11_149 -> m11_162  [key=2, style=dotted];
m11_152 -> m11_153  [color=green, key=0, style=solid];
m11_152 -> m11_165  [color=green, key=2, style=dotted];
m11_152 -> m11_154  [color=green, key=1, label=outsw, style=dashed];
m11_150 -> m11_151  [color=red, key=0, style=solid];
m11_150 -> m11_163  [key=2, style=dotted];
m11_151 -> m11_152  [color=green, key=0, style=solid];
m11_151 -> d11  [color=red, key=2, style=dotted];
m11_151 -> m11_164  [color=red, key=2, style=dotted];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_111  [key=2, style=dotted];
m11_154 -> m11_155  [color=red, key=0, style=solid];
m11_154 -> m11_43  [key=2, style=dotted];
m11_154 -> m11_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_154 -> m11_157  [color=green, key=1, label=lines, style=dashed];
m11_154 -> m11_41  [key=2, style=dotted];
m11_155 -> m11_156  [color=red, key=0, style=solid];
m11_155 -> d11  [color=red, key=2, style=dotted];
m11_155 -> m11_45  [color=red, key=2, style=dotted];
m11_156 -> m11_157  [color=green, key=0, style=solid];
m11_156 -> d11  [color=red, key=2, style=dotted];
m11_156 -> m11_45  [color=red, key=2, style=dotted];
m11_157 -> m11_158  [color=green, key=0, style=solid];
m11_157 -> d11  [color=green, key=2, style=dotted];
m11_157 -> m11_45  [color=green, key=2, style=dotted];
m11_158 -> m11_146  [color=blue, key=0, style=bold];
m11_189 -> m11_190  [color=green, key=0, style=solid];
m11_190 -> m11_191  [color=green, key=0, style=solid];
m11_190 -> m11_171  [color=green, key=2, style=dotted];
m11_191 -> m11_192  [color=red, key=0, style=solid];
m11_191 -> m11_161  [key=2, style=dotted];
m11_191 -> m11_188  [key=2, style=dotted];
m11_191 -> m11_163  [key=2, style=dotted];
m11_192 -> m11_193  [color=red, key=0, style=solid];
m11_192 -> d11  [color=red, key=2, style=dotted];
m11_192 -> m11_164  [color=red, key=2, style=dotted];
m11_193 -> m11_189  [color=blue, key=0, style=bold];
m11_79 -> m11_80  [color=green, key=0, style=solid];
m11_80 -> m11_81  [color=green, key=0, style=solid];
m11_80 -> m11_14  [color=green, key=2, style=dotted];
m11_80 -> m11_82  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_80 -> m11_83  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_80 -> m11_84  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_80 -> m11_85  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_81 -> m11_82  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_20  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_40  [key=2, style=dotted];
m11_83 -> m11_21  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_41  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_42  [key=2, style=dotted];
m11_89 -> m11_90  [color=red, key=0, style=solid];
m11_89 -> d11  [color=red, key=2, style=dotted];
m11_89 -> m11_45  [color=red, key=2, style=dotted];
m11_86 -> m11_89  [color=red, key=1, label=lines, style=dashed];
m11_86 -> m11_90  [color=red, key=1, label=lines, style=dashed];
m11_86 -> m11_91  [color=red, key=1, label=lines, style=dashed];
m11_86 -> m11_92  [color=red, key=1, label=lines, style=dashed];
m11_86 -> m11_41  [key=2, style=dotted];
m11_86 -> m11_87  [color=red, key=0, style=solid];
m11_86 -> m11_88  [color=red, key=1, label=lines, style=dashed];
m11_86 -> m11_43  [key=2, style=dotted];
m11_88 -> m11_89  [color=red, key=0, style=solid];
m11_88 -> d11  [color=red, key=2, style=dotted];
m11_88 -> m11_45  [color=red, key=2, style=dotted];
m11_90 -> m11_91  [color=red, key=0, style=solid];
m11_90 -> d11  [color=red, key=2, style=dotted];
m11_90 -> m11_45  [color=red, key=2, style=dotted];
m11_91 -> m11_92  [color=red, key=0, style=solid];
m11_91 -> d11  [color=red, key=2, style=dotted];
m11_91 -> m11_45  [color=red, key=2, style=dotted];
m11_92 -> m11_93  [color=red, key=0, style=solid];
m11_92 -> d11  [color=red, key=2, style=dotted];
m11_92 -> m11_45  [color=red, key=2, style=dotted];
m11_87 -> m11_88  [color=red, key=0, style=solid];
m11_87 -> d11  [color=red, key=2, style=dotted];
m11_87 -> m11_45  [color=red, key=2, style=dotted];
m11_93 -> m11_79  [color=blue, key=0, style=bold];
m11_142 -> m11_143  [color=green, key=0, style=solid];
m11_143 -> m11_144  [color=green, key=0, style=solid];
m11_143 -> m11_129  [color=green, key=2, style=dotted];
m11_144 -> m11_145  [color=red, key=0, style=solid];
m11_144 -> m11_42  [color=red, key=2, style=dotted];
m11_144 -> d11  [color=red, key=2, style=dotted];
m11_144 -> m11_45  [color=red, key=2, style=dotted];
m11_145 -> m11_142  [color=blue, key=0, style=bold];
m11_53 -> m11_54  [color=green, key=0, style=solid];
m11_26 -> m11_27  [color=red, key=0, style=solid];
m11_26 -> m11_20  [color=red, key=2, style=dotted];
m11_35 -> m11_36  [color=green, key=0, style=solid];
m11_35 -> d11  [color=green, key=2, style=dotted];
m11_35 -> m11_45  [color=green, key=2, style=dotted];
m11_35 -> m11_42  [key=2, style=dotted];
m11_34 -> m11_35  [color=green, key=0, style=solid];
m11_34 -> m11_36  [color=green, key=1, label=lines, style=dashed];
m11_34 -> m11_41  [key=2, style=dotted];
m11_36 -> m11_37  [color=red, key=0, style=solid];
m11_36 -> d11  [color=green, key=2, style=dotted];
m11_36 -> m11_45  [color=green, key=2, style=dotted];
m11_36 -> m11_43  [key=2, style=dotted];
m11_36 -> m11_38  [color=red, key=1, label=lines, style=dashed];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_42  [key=2, style=dotted];
m11_33 -> m11_41  [key=2, style=dotted];
m11_27 -> m11_14  [key=2, style=dotted];
m11_27 -> m11_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_30  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_27 -> m11_25  [color=blue, key=0, style=bold];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_41  [key=2, style=dotted];
m11_32 -> m11_40  [key=2, style=dotted];
m11_32 -> m11_21  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_20  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_20  [key=2, style=dotted];
m11_29 -> m11_14  [key=2, style=dotted];
m11_29 -> m11_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_29 -> m11_35  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_40  [key=2, style=dotted];
m11_30 -> m11_21  [key=2, style=dotted];
m11_30 -> m11_20  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_41  [key=2, style=dotted];
m11_31 -> m11_20  [key=2, style=dotted];
m11_37 -> m11_26  [color=blue, key=0, style=bold];
m11_37 -> m11_38  [color=red, key=0, style=solid];
m11_37 -> d11  [color=red, key=2, style=dotted];
m11_37 -> m11_45  [color=red, key=2, style=dotted];
m11_112 -> m11_113  [color=green, key=0, style=solid];
m11_113 -> m11_114  [color=green, key=0, style=solid];
m11_113 -> m11_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m11_113 -> m11_124  [color=red, key=1, label=year, style=dashed];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_129  [key=2, style=dotted];
m11_114 -> m11_116  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_117  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_118  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_119  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_114 -> m11_120  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_131  [key=2, style=dotted];
m11_124 -> m11_125  [color=red, key=0, style=solid];
m11_124 -> d11  [color=red, key=2, style=dotted];
m11_124 -> m11_133  [color=red, key=2, style=dotted];
m11_124 -> m11_45  [color=red, key=2, style=dotted];
m11_125 -> m11_126  [color=red, key=0, style=solid];
m11_125 -> d11  [color=red, key=2, style=dotted];
m11_125 -> m11_45  [color=red, key=2, style=dotted];
m11_122 -> m11_125  [color=red, key=1, label=lines, style=dashed];
m11_122 -> m11_126  [color=red, key=1, label=lines, style=dashed];
m11_122 -> m11_127  [color=red, key=1, label=lines, style=dashed];
m11_122 -> m11_41  [key=2, style=dotted];
m11_122 -> m11_124  [color=red, key=1, label=lines, style=dashed];
m11_122 -> m11_123  [color=red, key=0, style=solid];
m11_122 -> m11_43  [key=2, style=dotted];
m11_126 -> m11_127  [color=red, key=0, style=solid];
m11_126 -> d11  [color=red, key=2, style=dotted];
m11_126 -> m11_45  [color=red, key=2, style=dotted];
m11_127 -> m11_128  [color=red, key=0, style=solid];
m11_127 -> d11  [color=red, key=2, style=dotted];
m11_127 -> m11_45  [color=red, key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_130  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_20  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_132  [key=2, style=dotted];
m11_118 -> m11_21  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_41  [key=2, style=dotted];
m11_120 -> m11_122  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_42  [key=2, style=dotted];
m11_123 -> m11_124  [color=red, key=0, style=solid];
m11_123 -> d11  [color=red, key=2, style=dotted];
m11_123 -> m11_45  [color=red, key=2, style=dotted];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_111  [key=2, style=dotted];
m11_128 -> m11_112  [color=blue, key=0, style=bold];
m11_94 -> m11_95  [color=green, key=0, style=solid];
m11_95 -> m11_96  [color=green, key=0, style=solid];
m11_95 -> m11_14  [color=green, key=2, style=dotted];
m11_95 -> m11_97  [color=green, key=1, label=local, style=dashed];
m11_95 -> m11_98  [color=green, key=1, label=local, style=dashed];
m11_95 -> m11_99  [color=green, key=1, label=local, style=dashed];
m11_95 -> m11_100  [color=green, key=1, label=local, style=dashed];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_109  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_20  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_110  [key=2, style=dotted];
m11_98 -> m11_21  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_41  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_42  [key=2, style=dotted];
m11_100 -> m11_102  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_111  [key=2, style=dotted];
m11_102 -> m11_103  [color=red, key=0, style=solid];
m11_102 -> m11_43  [key=2, style=dotted];
m11_102 -> m11_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_102 -> m11_105  [color=green, key=1, label=lines, style=dashed];
m11_102 -> m11_106  [color=green, key=1, label=lines, style=dashed];
m11_102 -> m11_107  [color=green, key=1, label=lines, style=dashed];
m11_102 -> m11_41  [key=2, style=dotted];
m11_103 -> m11_104  [color=red, key=0, style=solid];
m11_103 -> d11  [color=red, key=2, style=dotted];
m11_103 -> m11_45  [color=red, key=2, style=dotted];
m11_104 -> m11_105  [color=green, key=0, style=solid];
m11_104 -> d11  [color=red, key=2, style=dotted];
m11_104 -> m11_45  [color=red, key=2, style=dotted];
m11_105 -> m11_106  [color=green, key=0, style=solid];
m11_105 -> d11  [color=green, key=2, style=dotted];
m11_105 -> m11_45  [color=green, key=2, style=dotted];
m11_106 -> m11_107  [color=green, key=0, style=solid];
m11_106 -> d11  [color=green, key=2, style=dotted];
m11_106 -> m11_45  [color=green, key=2, style=dotted];
m11_107 -> m11_108  [color=green, key=0, style=solid];
m11_107 -> d11  [color=green, key=2, style=dotted];
m11_107 -> m11_45  [color=green, key=2, style=dotted];
m11_108 -> m11_94  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [color=red, key=0, style=solid];
m11_23 -> m11_24  [color=red, key=0, style=solid];
m11_23 -> m11_25  [color=green, key=2, style=dotted];
m11_23 -> m11_14  [color=red, key=2, style=dotted];
m11_23 -> m11_15  [color=red, key=2, style=dotted];
m11_24 -> m11_22  [color=blue, key=0, style=bold];
m11_44 -> m11_45  [key=0, style=solid];
m11_49 -> m11_50  [color=green, key=0, style=solid];
m11_49 -> d11  [color=green, key=2, style=dotted];
m11_49 -> m11_45  [color=green, key=2, style=dotted];
m11_49 -> m11_42  [key=2, style=dotted];
m11_48 -> m11_49  [color=green, key=0, style=solid];
m11_48 -> m11_41  [key=2, style=dotted];
m11_48 -> m11_53  [key=2, style=dotted];
m11_48 -> m11_21  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_42  [key=2, style=dotted];
m11_47 -> m11_14  [key=2, style=dotted];
m11_47 -> m11_49  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_45 -> m11_14  [key=2, style=dotted];
m11_45 -> m11_47  [color=darkseagreen4, key=1, label=local, style=dashed];
m11_45 -> m11_46  [key=0, style=solid];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_53  [key=2, style=dotted];
m11_46 -> m11_21  [key=2, style=dotted];
m11_50 -> m11_44  [color=blue, key=0, style=bold];
m11_50 -> m11_51  [color=red, key=0, style=solid];
m11_50 -> m11_43  [key=2, style=dotted];
m11_52 -> m11_53  [color=green, key=0, style=solid];
m11_52 -> m11_46  [color=blue, key=0, style=bold];
m11_54 -> m11_55  [color=red, key=0, style=solid];
m11_54 -> m11_65  [color=green, key=2, style=dotted];
m11_54 -> m11_64  [color=green, key=2, style=dotted];
m11_55 -> m11_56  [color=red, key=0, style=solid];
m11_55 -> m11_65  [color=green, key=2, style=dotted];
m11_56 -> m11_59  [color=green, key=1, label=lines, style=dashed];
m11_56 -> m11_60  [color=green, key=1, label=lines, style=dashed];
m11_56 -> m11_61  [color=green, key=1, label=lines, style=dashed];
m11_56 -> m11_57  [color=red, key=0, style=solid];
m11_56 -> m11_41  [key=2, style=dotted];
m11_56 -> m11_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_56 -> m11_65  [color=red, key=2, style=dotted];
m11_56 -> m11_21  [color=red, key=2, style=dotted];
m11_59 -> m11_60  [color=red, key=0, style=solid];
m11_59 -> d11  [color=red, key=2, style=dotted];
m11_59 -> m11_45  [color=red, key=2, style=dotted];
m11_58 -> m11_59  [color=red, key=0, style=solid];
m11_58 -> d11  [key=2, style=dotted];
m11_58 -> m11_45  [key=2, style=dotted];
m11_58 -> m11_43  [key=2, style=dotted];
m11_58 -> m11_60  [color=red, key=1, label=lines, style=dashed];
m11_58 -> m11_61  [color=red, key=1, label=lines, style=dashed];
m11_58 -> m11_62  [color=red, key=1, label=lines, style=dashed];
m11_58 -> m11_63  [color=red, key=1, label=lines, style=dashed];
m11_60 -> m11_61  [color=red, key=0, style=solid];
m11_60 -> d11  [color=red, key=2, style=dotted];
m11_60 -> m11_45  [color=red, key=2, style=dotted];
m11_61 -> m11_62  [color=red, key=0, style=solid];
m11_61 -> d11  [color=red, key=2, style=dotted];
m11_61 -> m11_45  [color=red, key=2, style=dotted];
m11_57 -> m11_58  [color=red, key=0, style=solid];
m11_57 -> d11  [key=2, style=dotted];
m11_57 -> m11_45  [key=2, style=dotted];
m11_57 -> m11_42  [color=red, key=2, style=dotted];
m11_62 -> m11_52  [color=blue, key=0, style=bold];
m11_62 -> m11_63  [color=red, key=0, style=solid];
m11_62 -> d11  [color=red, key=2, style=dotted];
m11_62 -> m11_45  [color=red, key=2, style=dotted];
m11_25 -> m11_26  [color=red, key=0, style=solid];
m11_63 -> m11_64  [color=red, key=0, style=solid];
m11_63 -> d11  [color=red, key=2, style=dotted];
m11_63 -> m11_45  [color=red, key=2, style=dotted];
m11_64 -> m11_54  [color=blue, key=0, style=bold];
m11_173 -> m11_174  [color=green, key=0, style=solid];
m11_174 -> m11_175  [color=green, key=0, style=solid];
m11_174 -> m11_171  [color=green, key=2, style=dotted];
m11_175 -> m11_176  [color=red, key=0, style=solid];
m11_175 -> m11_161  [key=2, style=dotted];
m11_175 -> m11_172  [key=2, style=dotted];
m11_175 -> m11_163  [key=2, style=dotted];
m11_176 -> m11_177  [color=red, key=0, style=solid];
m11_176 -> d11  [color=red, key=2, style=dotted];
m11_176 -> m11_164  [color=red, key=2, style=dotted];
m11_177 -> m11_173  [color=blue, key=0, style=bold];
m11_194 -> m11_195  [color=green, key=0, style=solid];
m11_195 -> m11_196  [color=green, key=0, style=solid];
m11_195 -> m11_200  [color=green, key=2, style=dotted];
m11_195 -> m11_197  [color=green, key=1, label=options, style=dashed];
m11_195 -> m11_198  [color=green, key=1, label=options, style=dashed];
m11_196 -> m11_197  [key=0, style=solid];
m11_196 -> m11_159  [key=2, style=dotted];
m11_197 -> m11_198  [color=red, key=0, style=solid];
m11_197 -> m11_161  [key=2, style=dotted];
m11_197 -> m11_188  [key=2, style=dotted];
m11_197 -> m11_201  [key=2, style=dotted];
m11_198 -> m11_199  [color=red, key=0, style=solid];
m11_198 -> d11  [color=red, key=2, style=dotted];
m11_198 -> m11_202  [color=red, key=2, style=dotted];
m11_199 -> m11_194  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_14  [key=2, style=dotted];
m11_1 -> m11_15  [key=2, style=dotted];
m11_1 -> m11_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_1 -> m11_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_16  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_17  [key=2, style=dotted];
m11_4 -> m11_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_19  [key=2, style=dotted];
m11_6 -> m11_20  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_20  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_20  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_20  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_20  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_21  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=0, style=solid];
m11_5 -> m11_18  [key=2, style=dotted];
m11_13 -> m11_0  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [color=red, key=0, style=solid];
m11_38 -> d11  [color=red, key=2, style=dotted];
m11_38 -> m11_45  [color=red, key=2, style=dotted];
m11_39 -> m11_28  [color=blue, key=0, style=bold];
m11_51 -> m11_52  [color=red, key=0, style=solid];
m11_51 -> d11  [color=red, key=2, style=dotted];
m11_51 -> m11_45  [color=red, key=2, style=dotted];
m11_214 -> m11_4  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m11_214 -> m11_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m11_215 -> m11_23  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_26  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_55  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_56  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_57  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_67  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_68  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_69  [color=red, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m11_215 -> m11_96  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m12_15 -> m12_16  [color=red, key=0, style=solid];
m12_0 -> m12_1  [color=red, key=0, style=solid];
m12_1 -> m12_2  [color=red, key=0, style=solid];
m12_1 -> m12_8  [color=red, key=2, style=dotted];
m12_1 -> m12_9  [color=red, key=2, style=dotted];
m12_1 -> m12_3  [color=red, key=1, label=licenseAttributes, style=dashed];
m12_2 -> m12_3  [color=red, key=0, style=solid];
m12_2 -> m12_10  [color=red, key=2, style=dotted];
m12_2 -> m12_11  [color=red, key=2, style=dotted];
m12_2 -> d12  [color=red, key=2, style=dotted];
m12_3 -> m12_4  [color=red, key=0, style=solid];
m12_3 -> m12_13  [color=red, key=2, style=dotted];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_14  [color=red, key=2, style=dotted];
m12_4 -> m12_6  [color=red, key=1, label=lines, style=dashed];
m12_5 -> m12_6  [color=red, key=0, style=solid];
m12_5 -> m12_11  [color=red, key=2, style=dotted];
m12_5 -> m12_15  [color=green, key=2, style=dotted];
m12_5 -> d12  [color=red, key=2, style=dotted];
m12_6 -> m12_7  [color=red, key=0, style=solid];
m12_6 -> m12_11  [color=red, key=2, style=dotted];
m12_6 -> m12_15  [color=green, key=2, style=dotted];
m12_6 -> d12  [color=red, key=2, style=dotted];
m12_7 -> m12_0  [color=blue, key=0, style=bold];
m12_16 -> m12_17  [color=green, key=0, style=solid];
m12_16 -> m12_8  [color=red, key=2, style=dotted];
m12_16 -> m12_9  [color=red, key=2, style=dotted];
m12_16 -> m12_18  [color=red, key=1, label=usageAttributes, style=dashed];
m12_17 -> m12_18  [color=green, key=0, style=solid];
m12_17 -> m12_10  [color=red, key=2, style=dotted];
m12_17 -> m12_11  [color=red, key=2, style=dotted];
m12_17 -> d12  [color=red, key=2, style=dotted];
m12_17 -> m12_8  [color=green, key=2, style=dotted];
m12_17 -> m12_9  [color=green, key=2, style=dotted];
m12_17 -> m12_19  [color=green, key=1, label=usageAttributes, style=dashed];
m12_18 -> m12_19  [color=green, key=0, style=solid];
m12_18 -> m12_13  [color=red, key=2, style=dotted];
m12_18 -> m12_11  [color=green, key=2, style=dotted];
m12_18 -> d12  [color=red, key=2, style=dotted];
m12_18 -> m12_10  [color=green, key=2, style=dotted];
m12_18 -> m12_15  [color=green, key=2, style=dotted];
m12_19 -> m12_15  [color=blue, key=0, style=bold];
m12_19 -> m12_20  [color=green, key=0, style=solid];
m12_19 -> m12_13  [color=green, key=2, style=dotted];
m12_19 -> m12_11  [color=green, key=2, style=dotted];
m12_20 -> m12_16  [color=blue, key=0, style=bold];
m12_20 -> m12_1  [color=green, key=1, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", style=dashed];
m12_20 -> m12_17  [color=green, key=1, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", style=dashed];
m13_18 -> m13_19  [color=green, key=0, style=solid];
m13_18 -> m13_27  [color=green, key=2, style=dotted];
m13_18 -> m13_28  [color=green, key=2, style=dotted];
m13_18 -> m13_21  [color=green, key=1, label=proof, style=dashed];
m13_18 -> m13_24  [color=green, key=1, label=proof, style=dashed];
m13_19 -> m13_20  [color=red, key=0, style=solid];
m13_19 -> m13_13  [key=2, style=dotted];
m13_19 -> m13_21  [color=green, key=1, label=options, style=dashed];
m13_19 -> m13_10  [key=2, style=dotted];
m13_19 -> m13_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_19 -> m13_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_19 -> m13_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_20 -> m13_21  [color=green, key=0, style=solid];
m13_20 -> m13_14  [color=red, key=2, style=dotted];
m13_20 -> m13_12  [key=2, style=dotted];
m13_20 -> d11  [key=2, style=dotted];
m13_21 -> m13_22  [color=green, key=0, style=solid];
m13_21 -> m13_23  [color=red, key=2, style=dotted];
m13_22 -> m13_18  [color=blue, key=0, style=bold];
m13_22 -> m13_23  [color=green, key=0, style=solid];
m13_22 -> m13_14  [key=2, style=dotted];
m13_6 -> m13_7  [color=green, key=0, style=solid];
m13_6 -> d11  [color=green, key=2, style=dotted];
m13_6 -> m13_12  [color=green, key=2, style=dotted];
m13_17 -> m13_18  [color=green, key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> d11  [key=2, style=dotted];
m13_24 -> m13_17  [key=2, style=dotted];
m13_23 -> m13_24  [color=green, key=0, style=solid];
m13_23 -> m13_15  [color=green, key=2, style=dotted];
m13_25 -> m13_15  [key=2, style=dotted];
m13_25 -> m13_26  [color=red, key=0, style=solid];
m13_25 -> d11  [key=2, style=dotted];
m13_25 -> m13_13  [key=2, style=dotted];
m13_25 -> m13_28  [color=red, key=1, label=options, style=dashed];
m13_25 -> m13_29  [color=red, key=1, label=options, style=dashed];
m13_26 -> m13_17  [color=blue, key=0, style=bold];
m13_26 -> m13_27  [color=red, key=0, style=solid];
m13_26 -> m13_14  [color=red, key=2, style=dotted];
m13_49 -> m13_23  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_32  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_33  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_45  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_49 -> m13_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m13_29 -> m13_30  [color=red, key=0, style=solid];
m13_29 -> d11  [color=red, key=2, style=dotted];
m13_29 -> m13_17  [color=red, key=2, style=dotted];
m13_30 -> m13_31  [color=green, key=0, style=solid];
m13_30 -> m13_10  [color=green, key=2, style=dotted];
m13_30 -> m13_32  [color=green, key=1, label=options, style=dashed];
m13_30 -> m13_24  [color=blue, key=0, style=bold];
m13_31 -> m13_32  [color=green, key=0, style=solid];
m13_31 -> m13_37  [key=2, style=dotted];
m13_31 -> m13_34  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m13_32 -> m13_33  [color=red, key=0, style=solid];
m13_32 -> m13_38  [color=green, key=2, style=dotted];
m13_32 -> m13_35  [color=red, key=1, label=options, style=dashed];
m13_32 -> m13_36  [color=red, key=1, label=options, style=dashed];
m13_33 -> m13_34  [color=red, key=0, style=solid];
m13_33 -> m13_23  [color=green, key=2, style=dotted];
m13_33 -> m13_14  [color=red, key=2, style=dotted];
m13_34 -> m13_35  [color=red, key=0, style=solid];
m13_34 -> m13_40  [key=2, style=dotted];
m13_34 -> m13_15  [color=red, key=2, style=dotted];
m13_35 -> m13_36  [color=red, key=0, style=solid];
m13_35 -> d11  [color=red, key=2, style=dotted];
m13_35 -> m13_17  [color=red, key=2, style=dotted];
m13_36 -> m13_29  [color=blue, key=0, style=bold];
m13_36 -> m13_37  [color=red, key=0, style=solid];
m13_36 -> d11  [color=red, key=2, style=dotted];
m13_36 -> m13_17  [color=red, key=2, style=dotted];
m13_7 -> m13_8  [color=green, key=0, style=solid];
m13_7 -> d11  [key=2, style=dotted];
m13_7 -> m13_15  [key=2, style=dotted];
m13_8 -> m13_9  [color=green, key=0, style=solid];
m13_8 -> m13_13  [key=2, style=dotted];
m13_8 -> m13_11  [color=red, key=1, label=options, style=dashed];
m13_8 -> d11  [color=green, key=2, style=dotted];
m13_8 -> m13_17  [color=green, key=2, style=dotted];
m13_9 -> m13_10  [color=red, key=0, style=solid];
m13_9 -> m13_14  [color=red, key=2, style=dotted];
m13_9 -> m13_0  [color=blue, key=0, style=bold];
m13_11 -> m13_12  [color=red, key=0, style=solid];
m13_11 -> d11  [color=red, key=2, style=dotted];
m13_11 -> m13_17  [color=red, key=2, style=dotted];
m13_10 -> m13_11  [color=red, key=0, style=solid];
m13_10 -> m13_15  [color=red, key=2, style=dotted];
m13_12 -> m13_7  [color=blue, key=0, style=bold];
m13_37 -> m13_31  [color=blue, key=0, style=bold];
m13_28 -> m13_29  [color=red, key=0, style=solid];
m13_28 -> d11  [color=red, key=2, style=dotted];
m13_28 -> m13_17  [color=red, key=2, style=dotted];
m13_27 -> m13_28  [color=red, key=0, style=solid];
m13_27 -> m13_15  [color=red, key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_40 -> m13_41  [color=red, key=0, style=solid];
m13_40 -> m13_38  [key=2, style=dotted];
m13_41 -> m13_42  [color=green, key=0, style=solid];
m13_41 -> m13_14  [color=red, key=2, style=dotted];
m13_42 -> m13_43  [color=green, key=0, style=solid];
m13_42 -> m13_23  [color=red, key=2, style=dotted];
m13_42 -> m13_10  [color=green, key=2, style=dotted];
m13_42 -> m13_44  [color=green, key=1, label=options, style=dashed];
m13_43 -> m13_39  [color=blue, key=0, style=bold];
m13_43 -> m13_44  [color=green, key=0, style=solid];
m13_43 -> m13_37  [color=green, key=2, style=dotted];
m13_43 -> m13_46  [color=green, key=1, label=testWriter, style=dashed];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> d11  [color=green, key=2, style=dotted];
m13_2 -> m13_12  [color=green, key=2, style=dotted];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_5  [color=red, key=2, style=dotted];
m13_3 -> m13_6  [color=red, key=2, style=dotted];
m13_3 -> m13_14  [key=2, style=dotted];
m13_4 -> m13_2  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_15  [key=2, style=dotted];
m13_5 -> m13_6  [color=green, key=0, style=solid];
m13_5 -> m13_12  [key=2, style=dotted];
m13_5 -> d11  [key=2, style=dotted];
m13_44 -> m13_45  [color=green, key=0, style=solid];
m13_44 -> m13_38  [key=2, style=dotted];
m13_46 -> m13_47  [color=red, key=0, style=solid];
m13_46 -> m13_40  [key=2, style=dotted];
m13_46 -> m13_14  [color=red, key=2, style=dotted];
m13_45 -> m13_46  [color=red, key=0, style=solid];
m13_45 -> m13_23  [color=green, key=2, style=dotted];
m13_45 -> m13_49  [key=2, style=dotted];
m13_47 -> m13_48  [color=red, key=0, style=solid];
m13_47 -> d11  [key=2, style=dotted];
m13_47 -> m13_17  [key=2, style=dotted];
m13_47 -> m13_23  [color=red, key=2, style=dotted];
m13_48 -> m13_41  [color=blue, key=0, style=bold];
m13_48 -> m13_44  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_6  [color=green, key=1, label=options, style=dashed];
m13_1 -> m13_8  [color=green, key=1, label=options, style=dashed];
m13_1 -> m13_10  [key=2, style=dotted];
m13_1 -> m13_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_1 -> m13_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_1 -> m13_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_50 -> m13_51  [key=0, style=solid];
m13_51 -> m13_52  [color=red, key=0, style=solid];
m13_51 -> m13_49  [key=2, style=dotted];
m13_51 -> m13_54  [color=red, key=1, label=options, style=dashed];
m13_51 -> m13_55  [color=red, key=1, label=options, style=dashed];
m13_51 -> m13_56  [color=red, key=1, label=options, style=dashed];
m13_52 -> m13_53  [color=red, key=0, style=solid];
m13_52 -> m13_14  [color=red, key=2, style=dotted];
m13_54 -> m13_55  [color=red, key=0, style=solid];
m13_54 -> d11  [color=red, key=2, style=dotted];
m13_54 -> m13_17  [color=red, key=2, style=dotted];
m13_55 -> m13_56  [color=red, key=0, style=solid];
m13_55 -> d11  [color=red, key=2, style=dotted];
m13_55 -> m13_17  [color=red, key=2, style=dotted];
m13_56 -> m13_57  [color=red, key=0, style=solid];
m13_56 -> d11  [color=red, key=2, style=dotted];
m13_56 -> m13_17  [color=red, key=2, style=dotted];
m13_53 -> m13_54  [color=red, key=0, style=solid];
m13_53 -> m13_15  [color=red, key=2, style=dotted];
m13_57 -> m13_50  [color=blue, key=0, style=bold];
m13_58 -> m13_3  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_9  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_10  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_20  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_21  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_26  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_27  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_33  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_34  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_41  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_42  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_46  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_47  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_52  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_53  [color=red, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m14_37 -> m14_38  [color=red, key=0, style=solid];
m14_37 -> d11  [color=red, key=2, style=dotted];
m14_37 -> m14_17  [color=red, key=2, style=dotted];
m14_38 -> m14_39  [color=green, key=0, style=solid];
m14_38 -> m14_10  [color=green, key=2, style=dotted];
m14_38 -> m14_29  [color=blue, key=0, style=bold];
m14_39 -> m14_40  [color=green, key=0, style=solid];
m14_39 -> m14_13  [key=2, style=dotted];
m14_40 -> m14_41  [color=red, key=0, style=solid];
m14_40 -> m14_23  [color=green, key=2, style=dotted];
m14_40 -> m14_12  [key=2, style=dotted];
m14_41 -> m14_37  [color=blue, key=0, style=bold];
m14_41 -> m14_42  [color=red, key=0, style=solid];
m14_41 -> m14_13  [color=red, key=2, style=dotted];
m14_29 -> m14_30  [color=green, key=0, style=solid];
m14_29 -> m14_13  [color=green, key=2, style=dotted];
m14_30 -> m14_31  [color=red, key=0, style=solid];
m14_30 -> m14_12  [key=2, style=dotted];
m14_30 -> m14_33  [color=red, key=1, label=options, style=dashed];
m14_30 -> m14_14  [key=2, style=dotted];
m14_31 -> m14_32  [color=green, key=0, style=solid];
m14_31 -> m14_13  [color=red, key=2, style=dotted];
m14_31 -> d11  [key=2, style=dotted];
m14_31 -> m14_16  [key=2, style=dotted];
m14_33 -> m14_34  [color=green, key=0, style=solid];
m14_33 -> d11  [color=red, key=2, style=dotted];
m14_33 -> m14_16  [color=red, key=2, style=dotted];
m14_33 -> m14_13  [key=2, style=dotted];
m14_32 -> m14_33  [color=green, key=0, style=solid];
m14_32 -> m14_14  [color=red, key=2, style=dotted];
m14_32 -> m14_10  [color=green, key=2, style=dotted];
m14_32 -> m14_35  [color=green, key=1, label=options, style=dashed];
m14_34 -> m14_35  [color=green, key=0, style=solid];
m14_34 -> m14_12  [key=2, style=dotted];
m14_34 -> m14_37  [color=red, key=1, label=options, style=dashed];
m14_34 -> m14_14  [color=green, key=2, style=dotted];
m14_35 -> m14_36  [color=red, key=0, style=solid];
m14_35 -> m14_13  [color=red, key=2, style=dotted];
m14_35 -> d11  [key=2, style=dotted];
m14_35 -> m14_17  [key=2, style=dotted];
m14_36 -> m14_37  [color=red, key=0, style=solid];
m14_36 -> m14_14  [color=red, key=2, style=dotted];
m14_36 -> m14_27  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [color=green, key=0, style=solid];
m14_18 -> m14_13  [key=2, style=dotted];
m14_19 -> m14_20  [color=green, key=0, style=solid];
m14_19 -> m14_12  [key=2, style=dotted];
m14_19 -> m14_23  [color=green, key=2, style=dotted];
m14_20 -> m14_21  [color=red, key=0, style=solid];
m14_20 -> m14_13  [color=red, key=2, style=dotted];
m14_20 -> m14_16  [color=blue, key=0, style=bold];
m14_21 -> m14_22  [color=red, key=0, style=solid];
m14_21 -> m14_23  [color=red, key=2, style=dotted];
m14_22 -> m14_18  [color=blue, key=0, style=bold];
m14_22 -> m14_23  [color=green, key=0, style=solid];
m14_57 -> m14_58  [color=red, key=0, style=solid];
m14_57 -> d11  [color=red, key=2, style=dotted];
m14_57 -> m14_17  [color=red, key=2, style=dotted];
m14_58 -> m14_59  [color=green, key=0, style=solid];
m14_58 -> m14_10  [color=green, key=2, style=dotted];
m14_58 -> m14_49  [color=blue, key=0, style=bold];
m14_59 -> m14_60  [color=green, key=0, style=solid];
m14_59 -> m14_13  [color=green, key=2, style=dotted];
m14_60 -> m14_61  [color=red, key=0, style=solid];
m14_60 -> m14_23  [color=green, key=2, style=dotted];
m14_60 -> m14_12  [key=2, style=dotted];
m14_61 -> m14_57  [color=blue, key=0, style=bold];
m14_61 -> m14_62  [color=red, key=0, style=solid];
m14_61 -> m14_13  [color=red, key=2, style=dotted];
m14_24 -> m14_25  [color=green, key=0, style=solid];
m14_24 -> m14_13  [color=green, key=2, style=dotted];
m14_25 -> m14_26  [color=red, key=0, style=solid];
m14_25 -> m14_12  [key=2, style=dotted];
m14_25 -> m14_23  [key=2, style=dotted];
m14_26 -> m14_27  [color=red, key=0, style=solid];
m14_26 -> m14_13  [color=red, key=2, style=dotted];
m14_26 -> m14_22  [color=blue, key=0, style=bold];
m14_27 -> m14_28  [color=red, key=0, style=solid];
m14_27 -> m14_23  [color=red, key=2, style=dotted];
m14_28 -> m14_24  [color=blue, key=0, style=bold];
m14_28 -> m14_29  [color=green, key=0, style=solid];
m14_28 -> m14_10  [key=2, style=dotted];
m14_28 -> m14_31  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_23 -> m14_24  [color=green, key=0, style=solid];
m14_23 -> m14_10  [color=green, key=2, style=dotted];
m14_42 -> m14_43  [color=red, key=0, style=solid];
m14_42 -> m14_23  [color=red, key=2, style=dotted];
m14_43 -> m14_39  [color=blue, key=0, style=bold];
m14_43 -> m14_44  [color=green, key=0, style=solid];
m14_43 -> m14_10  [key=2, style=dotted];
m14_10 -> m14_11  [color=red, key=0, style=solid];
m14_10 -> d11  [color=red, key=2, style=dotted];
m14_10 -> m14_17  [color=red, key=2, style=dotted];
m14_47 -> m14_48  [color=red, key=0, style=solid];
m14_47 -> m14_23  [color=red, key=2, style=dotted];
m14_48 -> m14_49  [color=green, key=0, style=solid];
m14_48 -> m14_10  [color=green, key=2, style=dotted];
m14_48 -> m14_51  [color=green, key=1, label=options, style=dashed];
m14_48 -> m14_44  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_13  [key=2, style=dotted];
m14_51 -> m14_52  [color=red, key=0, style=solid];
m14_51 -> d11  [key=2, style=dotted];
m14_51 -> m14_16  [key=2, style=dotted];
m14_51 -> m14_13  [color=red, key=2, style=dotted];
m14_52 -> m14_53  [color=red, key=0, style=solid];
m14_52 -> m14_10  [color=green, key=2, style=dotted];
m14_52 -> m14_55  [color=green, key=1, label=options, style=dashed];
m14_52 -> m14_14  [color=red, key=2, style=dotted];
m14_53 -> m14_54  [color=red, key=0, style=solid];
m14_53 -> m14_13  [key=2, style=dotted];
m14_53 -> d11  [color=red, key=2, style=dotted];
m14_53 -> m14_16  [color=red, key=2, style=dotted];
m14_55 -> m14_56  [color=red, key=0, style=solid];
m14_55 -> d11  [color=green, key=2, style=dotted];
m14_55 -> m14_17  [color=green, key=2, style=dotted];
m14_55 -> m14_13  [color=red, key=2, style=dotted];
m14_54 -> m14_55  [color=red, key=0, style=solid];
m14_54 -> m14_14  [color=green, key=2, style=dotted];
m14_54 -> m14_12  [key=2, style=dotted];
m14_54 -> m14_57  [color=red, key=1, label=options, style=dashed];
m14_50 -> m14_51  [color=red, key=0, style=solid];
m14_50 -> m14_14  [key=2, style=dotted];
m14_50 -> m14_12  [key=2, style=dotted];
m14_50 -> m14_53  [color=red, key=1, label=options, style=dashed];
m14_56 -> m14_47  [color=blue, key=0, style=bold];
m14_56 -> m14_57  [color=red, key=0, style=solid];
m14_56 -> m14_14  [color=red, key=2, style=dotted];
m14_44 -> m14_45  [color=green, key=0, style=solid];
m14_44 -> m14_13  [color=green, key=2, style=dotted];
m14_45 -> m14_46  [color=red, key=0, style=solid];
m14_45 -> m14_12  [key=2, style=dotted];
m14_45 -> m14_23  [key=2, style=dotted];
m14_46 -> m14_47  [color=red, key=0, style=solid];
m14_46 -> m14_13  [color=red, key=2, style=dotted];
m14_46 -> m14_42  [color=blue, key=0, style=bold];
m14_17 -> m14_18  [color=green, key=0, style=solid];
m14_17 -> m14_10  [color=green, key=2, style=dotted];
m14_16 -> m14_17  [color=green, key=0, style=solid];
m14_62 -> m14_63  [color=red, key=0, style=solid];
m14_62 -> m14_23  [color=red, key=2, style=dotted];
m14_63 -> m14_59  [color=blue, key=0, style=bold];
m14_63 -> m14_10  [key=2, style=dotted];
m14_63 -> m14_64  [key=0, style=solid];
m14_64 -> m14_65  [color=green, key=0, style=solid];
m14_64 -> m14_13  [key=2, style=dotted];
m14_65 -> m14_66  [color=green, key=0, style=solid];
m14_65 -> m14_12  [key=2, style=dotted];
m14_65 -> m14_23  [color=green, key=2, style=dotted];
m14_66 -> m14_67  [color=red, key=0, style=solid];
m14_66 -> m14_13  [color=red, key=2, style=dotted];
m14_66 -> m14_62  [color=blue, key=0, style=bold];
m14_67 -> m14_68  [color=green, key=0, style=solid];
m14_67 -> m14_23  [color=red, key=2, style=dotted];
m14_68 -> m14_64  [color=blue, key=0, style=bold];
m14_68 -> m14_69  [color=green, key=0, style=solid];
m14_68 -> m14_10  [color=green, key=2, style=dotted];
m14_68 -> m14_71  [color=green, key=1, label=options, style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_2 -> m14_3  [color=green, key=0, style=solid];
m14_2 -> m14_13  [color=green, key=2, style=dotted];
m14_1 -> m14_2  [color=green, key=0, style=solid];
m14_1 -> m14_4  [color=green, key=1, label=options, style=dashed];
m14_1 -> m14_10  [key=2, style=dotted];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_3 -> m14_4  [color=red, key=0, style=solid];
m14_3 -> m14_14  [key=2, style=dotted];
m14_3 -> m14_12  [key=2, style=dotted];
m14_3 -> m14_6  [color=red, key=1, label=options, style=dashed];
m14_4 -> m14_5  [color=red, key=0, style=solid];
m14_4 -> d11  [color=green, key=2, style=dotted];
m14_4 -> m14_16  [color=green, key=2, style=dotted];
m14_4 -> m14_13  [color=red, key=2, style=dotted];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_5 -> m14_10  [key=2, style=dotted];
m14_5 -> m14_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_5 -> m14_14  [color=red, key=2, style=dotted];
m14_7 -> m14_8  [color=red, key=0, style=solid];
m14_7 -> m14_14  [color=green, key=2, style=dotted];
m14_7 -> m14_12  [key=2, style=dotted];
m14_7 -> m14_10  [color=red, key=1, label=options, style=dashed];
m14_6 -> m14_7  [color=red, key=0, style=solid];
m14_6 -> m14_13  [key=2, style=dotted];
m14_6 -> d11  [color=red, key=2, style=dotted];
m14_6 -> m14_16  [color=red, key=2, style=dotted];
m14_8 -> m14_9  [color=red, key=0, style=solid];
m14_8 -> d11  [key=2, style=dotted];
m14_8 -> m14_17  [key=2, style=dotted];
m14_8 -> m14_13  [color=red, key=2, style=dotted];
m14_9 -> m14_0  [color=blue, key=0, style=bold];
m14_9 -> m14_10  [color=red, key=0, style=solid];
m14_9 -> m14_14  [color=red, key=2, style=dotted];
m14_69 -> m14_70  [color=green, key=0, style=solid];
m14_69 -> m14_13  [key=2, style=dotted];
m14_71 -> m14_72  [color=red, key=0, style=solid];
m14_71 -> d11  [color=green, key=2, style=dotted];
m14_71 -> m14_16  [color=green, key=2, style=dotted];
m14_71 -> m14_13  [color=red, key=2, style=dotted];
m14_70 -> m14_71  [color=red, key=0, style=solid];
m14_70 -> m14_14  [color=green, key=2, style=dotted];
m14_70 -> m14_12  [key=2, style=dotted];
m14_70 -> m14_73  [color=red, key=1, label=options, style=dashed];
m14_72 -> m14_73  [color=red, key=0, style=solid];
m14_72 -> m14_10  [color=green, key=2, style=dotted];
m14_72 -> m14_75  [color=green, key=1, label=options, style=dashed];
m14_72 -> m14_76  [color=green, key=1, label=options, style=dashed];
m14_72 -> m14_77  [color=green, key=1, label=options, style=dashed];
m14_72 -> m14_78  [color=green, key=1, label=options, style=dashed];
m14_72 -> m14_14  [color=red, key=2, style=dotted];
m14_73 -> m14_74  [color=red, key=0, style=solid];
m14_73 -> m14_13  [key=2, style=dotted];
m14_73 -> d11  [color=red, key=2, style=dotted];
m14_73 -> m14_16  [color=red, key=2, style=dotted];
m14_75 -> m14_76  [color=red, key=0, style=solid];
m14_75 -> d11  [key=2, style=dotted];
m14_75 -> m14_16  [key=2, style=dotted];
m14_75 -> m14_13  [color=red, key=2, style=dotted];
m14_76 -> m14_77  [color=red, key=0, style=solid];
m14_76 -> d11  [key=2, style=dotted];
m14_76 -> m14_16  [key=2, style=dotted];
m14_76 -> m14_14  [color=red, key=2, style=dotted];
m14_77 -> m14_78  [color=red, key=0, style=solid];
m14_77 -> d11  [color=red, key=2, style=dotted];
m14_77 -> m14_16  [color=red, key=2, style=dotted];
m14_78 -> m14_79  [color=red, key=0, style=solid];
m14_78 -> d11  [color=red, key=2, style=dotted];
m14_78 -> m14_16  [color=red, key=2, style=dotted];
m14_74 -> m14_75  [color=red, key=0, style=solid];
m14_74 -> m14_14  [color=green, key=2, style=dotted];
m14_74 -> m14_12  [key=2, style=dotted];
m14_74 -> m14_77  [color=red, key=1, label=options, style=dashed];
m14_74 -> m14_78  [color=red, key=1, label=options, style=dashed];
m14_74 -> m14_79  [color=red, key=1, label=options, style=dashed];
m14_74 -> m14_80  [color=red, key=1, label=options, style=dashed];
m14_79 -> m14_67  [color=blue, key=0, style=bold];
m14_79 -> m14_80  [color=red, key=0, style=solid];
m14_79 -> d11  [color=red, key=2, style=dotted];
m14_79 -> m14_16  [color=red, key=2, style=dotted];
m14_11 -> m14_2  [color=blue, key=0, style=bold];
m14_80 -> m14_81  [color=red, key=0, style=solid];
m14_80 -> d11  [color=red, key=2, style=dotted];
m14_80 -> m14_16  [color=red, key=2, style=dotted];
m14_81 -> m14_69  [color=blue, key=0, style=bold];
m14_82 -> m14_4  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_5  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_8  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_9  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_20  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_21  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_26  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_27  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_31  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_32  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_35  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_36  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_41  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_42  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_46  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_47  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_51  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_52  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_55  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_56  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_61  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_62  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_66  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_67  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_71  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_72  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_75  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_76  [color=red, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_2  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_7  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_19  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_24  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_29  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_34  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_40  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_44  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_54  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_59  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_60  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_65  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_70  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_74  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_18  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_25  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_30  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_73  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_50  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_68  [color=blue, key=0, style=bold];
m15_77 -> m15_78  [color=green, key=0, style=solid];
m15_77 -> m15_9  [color=green, key=2, style=dotted];
m15_76 -> m15_77  [color=green, key=0, style=solid];
m15_76 -> m15_6  [key=2, style=dotted];
m15_76 -> m15_79  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_78 -> m15_79  [color=red, key=0, style=solid];
m15_78 -> m15_10  [key=2, style=dotted];
m15_78 -> m15_8  [key=2, style=dotted];
m15_78 -> m15_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_79 -> m15_9  [color=red, key=2, style=dotted];
m15_79 -> m15_80  [color=red, key=0, style=solid];
m15_80 -> m15_75  [color=blue, key=0, style=bold];
m15_80 -> m15_81  [color=red, key=0, style=solid];
m15_80 -> m15_10  [color=red, key=2, style=dotted];
m15_165 -> m15_166  [key=0, style=solid];
m15_165 -> m15_163  [color=blue, key=0, style=bold];
m15_166 -> m15_167  [key=0, style=solid];
m15_166 -> m15_166  [key=2, style=dotted];
m15_166 -> m15_9  [key=2, style=dotted];
m15_167 -> m15_165  [color=blue, key=0, style=bold];
m15_167 -> m15_168  [color=red, key=0, style=solid];
m15_12 -> m15_13  [color=green, key=0, style=solid];
m15_12 -> m15_9  [key=2, style=dotted];
m15_13 -> m15_14  [color=green, key=0, style=solid];
m15_13 -> m15_8  [key=2, style=dotted];
m15_13 -> m15_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_13 -> m15_10  [color=green, key=2, style=dotted];
m15_14 -> m15_15  [color=red, key=0, style=solid];
m15_14 -> m15_9  [color=red, key=2, style=dotted];
m15_16 -> m15_17  [color=green, key=0, style=solid];
m15_16 -> m15_11  [key=2, style=dotted];
m15_15 -> m15_16  [color=red, key=0, style=solid];
m15_15 -> m15_10  [color=red, key=2, style=dotted];
m15_17 -> m15_12  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [color=green, key=0, style=solid];
m15_17 -> m15_6  [color=green, key=2, style=dotted];
m15_17 -> m15_20  [color=green, key=1, label=options, style=dashed];
m15_56 -> m15_57  [color=green, key=0, style=solid];
m15_56 -> m15_9  [color=green, key=2, style=dotted];
m15_57 -> m15_58  [color=green, key=0, style=solid];
m15_57 -> m15_66  [key=2, style=dotted];
m15_57 -> m15_60  [color=red, key=1, label=options, style=dashed];
m15_57 -> m15_61  [color=red, key=1, label=options, style=dashed];
m15_57 -> m15_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_57 -> m15_63  [color=red, key=1, label=options, style=dashed];
m15_57 -> m15_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_57 -> m15_10  [color=green, key=2, style=dotted];
m15_58 -> m15_59  [color=green, key=0, style=solid];
m15_58 -> m15_9  [color=red, key=2, style=dotted];
m15_58 -> d11  [color=green, key=2, style=dotted];
m15_58 -> m15_38  [color=green, key=2, style=dotted];
m15_60 -> m15_61  [color=green, key=0, style=solid];
m15_60 -> d11  [color=red, key=2, style=dotted];
m15_60 -> m15_38  [color=red, key=2, style=dotted];
m15_60 -> m15_9  [key=2, style=dotted];
m15_61 -> m15_62  [color=green, key=0, style=solid];
m15_61 -> d11  [color=green, key=2, style=dotted];
m15_61 -> m15_38  [color=red, key=2, style=dotted];
m15_61 -> m15_55  [color=green, key=2, style=dotted];
m15_62 -> m15_63  [color=green, key=0, style=solid];
m15_62 -> m15_11  [key=2, style=dotted];
m15_62 -> m15_67  [color=green, key=2, style=dotted];
m15_63 -> m15_64  [color=red, key=0, style=solid];
m15_63 -> d11  [color=red, key=2, style=dotted];
m15_63 -> m15_55  [color=red, key=2, style=dotted];
m15_63 -> m15_54  [color=blue, key=0, style=bold];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_67  [key=2, style=dotted];
m15_59 -> m15_60  [color=red, key=0, style=solid];
m15_59 -> m15_10  [color=red, key=2, style=dotted];
m15_59 -> d11  [key=2, style=dotted];
m15_59 -> m15_38  [key=2, style=dotted];
m15_65 -> m15_56  [color=blue, key=0, style=bold];
m15_66 -> m15_67  [key=0, style=solid];
m15_83 -> m15_84  [color=green, key=0, style=solid];
m15_83 -> m15_9  [color=green, key=2, style=dotted];
m15_84 -> m15_85  [color=green, key=0, style=solid];
m15_84 -> m15_8  [key=2, style=dotted];
m15_84 -> m15_76  [color=green, key=2, style=dotted];
m15_85 -> m15_86  [color=red, key=0, style=solid];
m15_85 -> m15_9  [color=red, key=2, style=dotted];
m15_85 -> m15_6  [key=2, style=dotted];
m15_86 -> m15_87  [color=green, key=0, style=solid];
m15_86 -> m15_76  [color=red, key=2, style=dotted];
m15_86 -> m15_9  [key=2, style=dotted];
m15_87 -> m15_88  [color=green, key=0, style=solid];
m15_87 -> m15_8  [key=2, style=dotted];
m15_87 -> m15_76  [color=green, key=2, style=dotted];
m15_88 -> m15_89  [color=green, key=0, style=solid];
m15_88 -> m15_9  [color=red, key=2, style=dotted];
m15_88 -> m15_6  [key=2, style=dotted];
m15_89 -> m15_90  [color=green, key=0, style=solid];
m15_89 -> m15_76  [color=red, key=2, style=dotted];
m15_89 -> m15_9  [color=green, key=2, style=dotted];
m15_90 -> m15_91  [color=red, key=0, style=solid];
m15_90 -> m15_8  [key=2, style=dotted];
m15_90 -> m15_76  [key=2, style=dotted];
m15_91 -> m15_92  [color=red, key=0, style=solid];
m15_91 -> m15_9  [color=red, key=2, style=dotted];
m15_91 -> m15_6  [key=2, style=dotted];
m15_92 -> m15_93  [color=green, key=0, style=solid];
m15_92 -> m15_76  [color=red, key=2, style=dotted];
m15_92 -> m15_9  [key=2, style=dotted];
m15_93 -> m15_94  [color=green, key=0, style=solid];
m15_93 -> m15_8  [key=2, style=dotted];
m15_93 -> m15_76  [color=green, key=2, style=dotted];
m15_94 -> m15_95  [color=red, key=0, style=solid];
m15_94 -> m15_9  [color=red, key=2, style=dotted];
m15_94 -> m15_81  [color=blue, key=0, style=bold];
m15_95 -> m15_96  [color=red, key=0, style=solid];
m15_95 -> m15_76  [color=red, key=2, style=dotted];
m15_96 -> m15_83  [color=blue, key=0, style=bold];
m15_96 -> m15_97  [color=green, key=0, style=solid];
m15_96 -> m15_6  [key=2, style=dotted];
m15_18 -> m15_19  [color=green, key=0, style=solid];
m15_18 -> m15_9  [key=2, style=dotted];
m15_19 -> m15_20  [color=green, key=0, style=solid];
m15_19 -> m15_8  [key=2, style=dotted];
m15_19 -> m15_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_19 -> m15_10  [color=green, key=2, style=dotted];
m15_20 -> m15_21  [color=green, key=0, style=solid];
m15_20 -> m15_9  [color=green, key=2, style=dotted];
m15_22 -> m15_23  [color=green, key=0, style=solid];
m15_22 -> m15_11  [key=2, style=dotted];
m15_21 -> m15_22  [color=red, key=0, style=solid];
m15_21 -> m15_10  [color=red, key=2, style=dotted];
m15_21 -> m15_16  [color=blue, key=0, style=bold];
m15_23 -> m15_18  [color=blue, key=0, style=bold];
m15_23 -> m15_24  [color=green, key=0, style=solid];
m15_23 -> m15_6  [color=green, key=2, style=dotted];
m15_23 -> m15_26  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_56  [color=green, key=0, style=solid];
m15_55 -> m15_66  [color=green, key=2, style=dotted];
m15_55 -> m15_58  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_59  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_60  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_61  [color=green, key=1, label=options, style=dashed];
m15_55 -> m15_62  [color=green, key=1, label=options, style=dashed];
m15_97 -> m15_98  [color=green, key=0, style=solid];
m15_97 -> m15_9  [color=green, key=2, style=dotted];
m15_98 -> m15_99  [color=green, key=0, style=solid];
m15_98 -> m15_8  [key=2, style=dotted];
m15_98 -> m15_76  [key=2, style=dotted];
m15_99 -> m15_100  [color=green, key=0, style=solid];
m15_99 -> m15_9  [color=red, key=2, style=dotted];
m15_99 -> m15_6  [color=green, key=2, style=dotted];
m15_100 -> m15_101  [color=red, key=0, style=solid];
m15_100 -> m15_76  [color=red, key=2, style=dotted];
m15_100 -> m15_9  [key=2, style=dotted];
m15_101 -> m15_102  [color=red, key=0, style=solid];
m15_101 -> m15_8  [key=2, style=dotted];
m15_101 -> m15_76  [key=2, style=dotted];
m15_102 -> m15_103  [color=red, key=0, style=solid];
m15_102 -> m15_9  [color=red, key=2, style=dotted];
m15_102 -> m15_95  [color=blue, key=0, style=bold];
m15_103 -> m15_104  [color=green, key=0, style=solid];
m15_103 -> m15_76  [color=red, key=2, style=dotted];
m15_104 -> m15_97  [color=blue, key=0, style=bold];
m15_104 -> m15_105  [color=green, key=0, style=solid];
m15_104 -> m15_6  [color=green, key=2, style=dotted];
m15_104 -> m15_107  [color=green, key=1, label=options, style=dashed];
m15_68 -> m15_69  [color=green, key=0, style=solid];
m15_68 -> m15_9  [color=green, key=2, style=dotted];
m15_67 -> m15_68  [color=green, key=0, style=solid];
m15_67 -> m15_6  [key=2, style=dotted];
m15_69 -> m15_70  [color=red, key=0, style=solid];
m15_69 -> m15_76  [key=2, style=dotted];
m15_69 -> m15_8  [key=2, style=dotted];
m15_70 -> m15_71  [color=red, key=0, style=solid];
m15_70 -> m15_6  [color=green, key=2, style=dotted];
m15_70 -> m15_9  [color=red, key=2, style=dotted];
m15_71 -> m15_72  [color=red, key=0, style=solid];
m15_71 -> m15_9  [color=green, key=2, style=dotted];
m15_71 -> m15_76  [color=red, key=2, style=dotted];
m15_72 -> m15_73  [color=red, key=0, style=solid];
m15_72 -> m15_76  [key=2, style=dotted];
m15_72 -> m15_8  [key=2, style=dotted];
m15_73 -> m15_66  [color=blue, key=0, style=bold];
m15_73 -> m15_74  [color=red, key=0, style=solid];
m15_73 -> m15_9  [color=red, key=2, style=dotted];
m15_109 -> m15_110  [color=green, key=0, style=solid];
m15_109 -> m15_11  [key=2, style=dotted];
m15_110 -> m15_111  [color=green, key=0, style=solid];
m15_110 -> m15_6  [color=green, key=2, style=dotted];
m15_110 -> m15_113  [color=green, key=1, label=options, style=dashed];
m15_110 -> m15_114  [color=green, key=1, label=options, style=dashed];
m15_110 -> m15_115  [color=green, key=1, label=options, style=dashed];
m15_110 -> m15_105  [color=blue, key=0, style=bold];
m15_111 -> m15_112  [color=green, key=0, style=solid];
m15_111 -> m15_9  [color=green, key=2, style=dotted];
m15_113 -> m15_9  [color=red, key=2, style=dotted];
m15_113 -> m15_114  [color=red, key=0, style=solid];
m15_114 -> m15_9  [key=2, style=dotted];
m15_114 -> m15_115  [color=red, key=0, style=solid];
m15_114 -> m15_10  [color=red, key=2, style=dotted];
m15_115 -> m15_9  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_11  [key=2, style=dotted];
m15_112 -> m15_113  [color=red, key=0, style=solid];
m15_112 -> m15_10  [color=green, key=2, style=dotted];
m15_112 -> m15_8  [key=2, style=dotted];
m15_112 -> m15_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_117 -> m15_118  [color=green, key=0, style=solid];
m15_117 -> m15_9  [color=green, key=2, style=dotted];
m15_117 -> m15_11  [key=2, style=dotted];
m15_116 -> m15_117  [color=green, key=0, style=solid];
m15_116 -> m15_6  [key=2, style=dotted];
m15_116 -> m15_119  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_116 -> m15_120  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_116 -> m15_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_116 -> m15_11  [key=2, style=dotted];
m15_118 -> m15_119  [color=red, key=0, style=solid];
m15_118 -> m15_10  [key=2, style=dotted];
m15_118 -> m15_8  [key=2, style=dotted];
m15_118 -> m15_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_122  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_123  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_122 -> m15_123  [color=green, key=0, style=solid];
m15_122 -> m15_6  [color=green, key=2, style=dotted];
m15_122 -> m15_125  [color=green, key=1, label=options, style=dashed];
m15_122 -> m15_126  [color=green, key=1, label=options, style=dashed];
m15_122 -> m15_127  [color=green, key=1, label=options, style=dashed];
m15_122 -> m15_11  [key=2, style=dotted];
m15_121 -> m15_122  [color=green, key=0, style=solid];
m15_121 -> m15_9  [key=2, style=dotted];
m15_121 -> m15_11  [key=2, style=dotted];
m15_123 -> m15_124  [color=green, key=0, style=solid];
m15_123 -> m15_9  [key=2, style=dotted];
m15_123 -> m15_11  [key=2, style=dotted];
m15_125 -> m15_9  [color=red, key=2, style=dotted];
m15_125 -> m15_126  [color=red, key=0, style=solid];
m15_126 -> m15_9  [key=2, style=dotted];
m15_126 -> m15_127  [color=red, key=0, style=solid];
m15_126 -> m15_10  [color=red, key=2, style=dotted];
m15_127 -> m15_9  [key=2, style=dotted];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_11  [key=2, style=dotted];
m15_124 -> m15_125  [color=red, key=0, style=solid];
m15_124 -> m15_10  [color=green, key=2, style=dotted];
m15_124 -> m15_8  [key=2, style=dotted];
m15_124 -> m15_127  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_128  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_129  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_119 -> m15_9  [color=red, key=2, style=dotted];
m15_119 -> m15_120  [color=red, key=0, style=solid];
m15_120 -> m15_9  [key=2, style=dotted];
m15_120 -> m15_121  [color=red, key=0, style=solid];
m15_120 -> m15_10  [color=red, key=2, style=dotted];
m15_128 -> m15_109  [color=blue, key=0, style=bold];
m15_128 -> m15_129  [key=0, style=solid];
m15_128 -> m15_11  [key=2, style=dotted];
m15_174 -> m15_175  [color=red, key=0, style=solid];
m15_174 -> m15_166  [color=red, key=2, style=dotted];
m15_174 -> m15_9  [color=red, key=2, style=dotted];
m15_175 -> m15_176  [color=green, key=0, style=solid];
m15_175 -> m15_181  [color=green, key=1, label=actualCulture, style=dashed];
m15_175 -> m15_173  [color=blue, key=0, style=bold];
m15_176 -> m15_177  [key=0, style=solid];
m15_176 -> m15_185  [key=2, style=dotted];
m15_181 -> m15_182  [color=red, key=0, style=solid];
m15_181 -> m15_10  [color=red, key=2, style=dotted];
m15_178 -> m15_179  [color=green, key=0, style=solid];
m15_178 -> m15_9  [color=green, key=2, style=dotted];
m15_178 -> m15_185  [key=2, style=dotted];
m15_177 -> m15_178  [color=green, key=0, style=solid];
m15_177 -> m15_180  [color=green, key=1, label=options, style=dashed];
m15_177 -> m15_6  [key=2, style=dotted];
m15_177 -> m15_183  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m15_179 -> m15_180  [color=red, key=0, style=solid];
m15_179 -> m15_10  [key=2, style=dotted];
m15_179 -> m15_8  [key=2, style=dotted];
m15_179 -> m15_182  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_180 -> m15_181  [color=red, key=0, style=solid];
m15_180 -> m15_9  [color=red, key=2, style=dotted];
m15_182 -> m15_174  [color=blue, key=0, style=bold];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_11  [key=2, style=dotted];
m15_168 -> m15_169  [color=red, key=0, style=solid];
m15_168 -> m15_166  [color=red, key=2, style=dotted];
m15_168 -> m15_9  [color=red, key=2, style=dotted];
m15_169 -> m15_170  [key=0, style=solid];
m15_169 -> m15_166  [key=2, style=dotted];
m15_169 -> m15_9  [key=2, style=dotted];
m15_169 -> m15_167  [color=blue, key=0, style=bold];
m15_170 -> m15_168  [color=blue, key=0, style=bold];
m15_170 -> m15_171  [color=red, key=0, style=solid];
m15_171 -> m15_172  [color=red, key=0, style=solid];
m15_171 -> m15_166  [color=red, key=2, style=dotted];
m15_171 -> m15_9  [color=red, key=2, style=dotted];
m15_172 -> m15_170  [color=blue, key=0, style=bold];
m15_172 -> m15_173  [key=0, style=solid];
m15_172 -> m15_166  [key=2, style=dotted];
m15_172 -> m15_9  [key=2, style=dotted];
m15_185 -> m15_186  [color=green, key=0, style=solid];
m15_185 -> m15_188  [color=green, key=1, label=options, style=dashed];
m15_185 -> m15_195  [key=2, style=dotted];
m15_185 -> m15_189  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_185 -> m15_190  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_185 -> m15_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_46 -> m15_47  [color=green, key=0, style=solid];
m15_46 -> m15_9  [key=2, style=dotted];
m15_47 -> m15_48  [color=green, key=0, style=solid];
m15_47 -> m15_8  [key=2, style=dotted];
m15_47 -> m15_50  [color=red, key=1, label=options, style=dashed];
m15_47 -> m15_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_47 -> m15_52  [color=red, key=1, label=options, style=dashed];
m15_47 -> m15_53  [color=red, key=1, label=options, style=dashed];
m15_47 -> m15_10  [color=green, key=2, style=dotted];
m15_48 -> m15_49  [color=red, key=0, style=solid];
m15_48 -> m15_9  [color=red, key=2, style=dotted];
m15_48 -> d11  [key=2, style=dotted];
m15_48 -> m15_38  [key=2, style=dotted];
m15_50 -> m15_51  [color=green, key=0, style=solid];
m15_50 -> d11  [color=green, key=2, style=dotted];
m15_50 -> m15_38  [color=red, key=2, style=dotted];
m15_50 -> m15_55  [color=green, key=2, style=dotted];
m15_51 -> m15_52  [color=green, key=0, style=solid];
m15_51 -> m15_11  [key=2, style=dotted];
m15_51 -> d11  [color=green, key=2, style=dotted];
m15_51 -> m15_38  [color=green, key=2, style=dotted];
m15_52 -> m15_53  [color=red, key=0, style=solid];
m15_52 -> d11  [color=red, key=2, style=dotted];
m15_52 -> m15_55  [color=red, key=2, style=dotted];
m15_52 -> m15_44  [color=blue, key=0, style=bold];
m15_53 -> m15_54  [color=red, key=0, style=solid];
m15_53 -> d11  [color=red, key=2, style=dotted];
m15_53 -> m15_38  [color=red, key=2, style=dotted];
m15_49 -> m15_50  [color=green, key=0, style=solid];
m15_49 -> m15_10  [color=red, key=2, style=dotted];
m15_49 -> m15_9  [key=2, style=dotted];
m15_54 -> m15_46  [color=blue, key=0, style=bold];
m15_54 -> m15_55  [color=green, key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_163 -> m15_164  [color=red, key=0, style=solid];
m15_163 -> m15_161  [color=blue, key=0, style=bold];
m15_164 -> m15_165  [color=red, key=0, style=solid];
m15_164 -> m15_166  [color=red, key=2, style=dotted];
m15_164 -> m15_9  [color=red, key=2, style=dotted];
m15_195 -> m15_200  [color=green, key=1, label=options, style=dashed];
m15_195 -> m15_201  [color=green, key=1, label=options, style=dashed];
m15_195 -> m15_196  [key=0, style=solid];
m15_195 -> m15_195  [key=2, style=dotted];
m15_195 -> m15_198  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_195 -> m15_199  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_11  [key=2, style=dotted];
m15_131 -> m15_132  [color=green, key=0, style=solid];
m15_131 -> m15_9  [color=green, key=2, style=dotted];
m15_130 -> m15_131  [color=green, key=0, style=solid];
m15_130 -> m15_134  [color=green, key=1, label=options, style=dashed];
m15_130 -> m15_6  [key=2, style=dotted];
m15_130 -> m15_133  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_130 -> m15_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_130 -> m15_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_130 -> m15_111  [color=blue, key=0, style=bold];
m15_132 -> m15_133  [color=red, key=0, style=solid];
m15_132 -> m15_10  [key=2, style=dotted];
m15_132 -> m15_8  [key=2, style=dotted];
m15_132 -> m15_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_137  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_138  [color=red, key=1, label=options, style=dashed];
m15_134 -> m15_135  [color=red, key=0, style=solid];
m15_134 -> m15_9  [color=green, key=2, style=dotted];
m15_134 -> m15_10  [color=red, key=2, style=dotted];
m15_133 -> m15_134  [color=red, key=0, style=solid];
m15_133 -> m15_9  [color=red, key=2, style=dotted];
m15_135 -> m15_9  [key=2, style=dotted];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_11  [key=2, style=dotted];
m15_138 -> m15_139  [color=red, key=0, style=solid];
m15_138 -> m15_9  [color=green, key=2, style=dotted];
m15_138 -> d11  [color=red, key=2, style=dotted];
m15_138 -> m15_38  [color=red, key=2, style=dotted];
m15_137 -> m15_138  [color=red, key=0, style=solid];
m15_137 -> m15_6  [key=2, style=dotted];
m15_137 -> m15_140  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_137 -> m15_141  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_137 -> m15_142  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_137 -> m15_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_137 -> m15_11  [key=2, style=dotted];
m15_139 -> m15_140  [color=red, key=0, style=solid];
m15_139 -> m15_10  [key=2, style=dotted];
m15_139 -> m15_8  [key=2, style=dotted];
m15_139 -> m15_142  [color=red, key=1, label=options, style=dashed];
m15_139 -> m15_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_144  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_145  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_144 -> m15_145  [color=green, key=0, style=solid];
m15_144 -> m15_6  [color=green, key=2, style=dotted];
m15_144 -> m15_147  [color=green, key=1, label=options, style=dashed];
m15_144 -> m15_148  [color=green, key=1, label=options, style=dashed];
m15_144 -> m15_149  [color=green, key=1, label=options, style=dashed];
m15_144 -> m15_150  [color=green, key=1, label=options, style=dashed];
m15_144 -> m15_11  [key=2, style=dotted];
m15_143 -> m15_144  [color=green, key=0, style=solid];
m15_143 -> m15_9  [key=2, style=dotted];
m15_143 -> m15_11  [key=2, style=dotted];
m15_145 -> m15_146  [color=green, key=0, style=solid];
m15_145 -> m15_9  [color=green, key=2, style=dotted];
m15_145 -> m15_11  [key=2, style=dotted];
m15_147 -> m15_9  [color=red, key=2, style=dotted];
m15_147 -> m15_148  [color=red, key=0, style=solid];
m15_148 -> m15_9  [key=2, style=dotted];
m15_148 -> m15_149  [color=red, key=0, style=solid];
m15_148 -> m15_10  [color=red, key=2, style=dotted];
m15_149 -> m15_150  [key=0, style=solid];
m15_149 -> d11  [key=2, style=dotted];
m15_149 -> m15_38  [key=2, style=dotted];
m15_149 -> m15_11  [key=2, style=dotted];
m15_150 -> m15_9  [key=2, style=dotted];
m15_150 -> m15_151  [color=red, key=0, style=solid];
m15_150 -> m15_11  [key=2, style=dotted];
m15_146 -> m15_147  [color=red, key=0, style=solid];
m15_146 -> m15_10  [color=green, key=2, style=dotted];
m15_146 -> m15_8  [key=2, style=dotted];
m15_146 -> m15_149  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_151  [color=red, key=1, label=options, style=dashed];
m15_146 -> m15_152  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_152 -> m15_153  [color=green, key=0, style=solid];
m15_152 -> m15_9  [color=green, key=2, style=dotted];
m15_152 -> m15_11  [key=2, style=dotted];
m15_151 -> m15_152  [color=red, key=0, style=solid];
m15_151 -> m15_159  [color=green, key=1, label=options, style=dashed];
m15_151 -> m15_6  [key=2, style=dotted];
m15_151 -> m15_154  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_151 -> m15_155  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_151 -> m15_156  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_151 -> m15_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_151 -> m15_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_151 -> d11  [color=red, key=2, style=dotted];
m15_151 -> m15_38  [color=red, key=2, style=dotted];
m15_153 -> m15_154  [color=red, key=0, style=solid];
m15_153 -> m15_10  [key=2, style=dotted];
m15_153 -> m15_8  [key=2, style=dotted];
m15_153 -> m15_156  [color=red, key=1, label=options, style=dashed];
m15_153 -> m15_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_159  [color=red, key=1, label=options, style=dashed];
m15_153 -> m15_160  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_161  [color=red, key=1, label=options, style=dashed];
m15_159 -> m15_160  [color=red, key=0, style=solid];
m15_159 -> d11  [color=red, key=2, style=dotted];
m15_159 -> m15_38  [color=red, key=2, style=dotted];
m15_158 -> m15_159  [color=red, key=0, style=solid];
m15_158 -> m15_9  [key=2, style=dotted];
m15_158 -> m15_11  [key=2, style=dotted];
m15_141 -> m15_9  [key=2, style=dotted];
m15_141 -> m15_142  [color=red, key=0, style=solid];
m15_141 -> m15_10  [color=red, key=2, style=dotted];
m15_142 -> m15_9  [key=2, style=dotted];
m15_142 -> m15_143  [color=red, key=0, style=solid];
m15_142 -> d11  [color=red, key=2, style=dotted];
m15_142 -> m15_38  [color=red, key=2, style=dotted];
m15_155 -> m15_9  [key=2, style=dotted];
m15_155 -> m15_156  [color=red, key=0, style=solid];
m15_155 -> m15_10  [color=red, key=2, style=dotted];
m15_156 -> m15_9  [key=2, style=dotted];
m15_156 -> m15_157  [color=red, key=0, style=solid];
m15_156 -> d11  [color=red, key=2, style=dotted];
m15_156 -> m15_55  [color=red, key=2, style=dotted];
m15_136 -> m15_137  [key=0, style=solid];
m15_136 -> d11  [key=2, style=dotted];
m15_136 -> m15_38  [key=2, style=dotted];
m15_136 -> m15_11  [key=2, style=dotted];
m15_140 -> m15_141  [color=red, key=0, style=solid];
m15_140 -> d11  [key=2, style=dotted];
m15_140 -> m15_38  [key=2, style=dotted];
m15_140 -> m15_9  [color=red, key=2, style=dotted];
m15_154 -> m15_155  [color=red, key=0, style=solid];
m15_154 -> d11  [key=2, style=dotted];
m15_154 -> m15_55  [key=2, style=dotted];
m15_154 -> m15_9  [color=red, key=2, style=dotted];
m15_157 -> m15_158  [key=0, style=solid];
m15_157 -> d11  [key=2, style=dotted];
m15_157 -> m15_38  [key=2, style=dotted];
m15_157 -> m15_11  [key=2, style=dotted];
m15_160 -> m15_129  [color=blue, key=0, style=bold];
m15_160 -> m15_161  [color=red, key=0, style=solid];
m15_160 -> m15_11  [key=2, style=dotted];
m15_24 -> m15_25  [color=green, key=0, style=solid];
m15_24 -> m15_9  [color=green, key=2, style=dotted];
m15_25 -> m15_26  [color=green, key=0, style=solid];
m15_25 -> m15_8  [key=2, style=dotted];
m15_25 -> m15_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_25 -> m15_10  [key=2, style=dotted];
m15_26 -> m15_27  [color=green, key=0, style=solid];
m15_26 -> m15_9  [color=green, key=2, style=dotted];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_11  [key=2, style=dotted];
m15_27 -> m15_28  [color=red, key=0, style=solid];
m15_27 -> m15_10  [color=red, key=2, style=dotted];
m15_27 -> m15_22  [color=blue, key=0, style=bold];
m15_29 -> m15_24  [color=blue, key=0, style=bold];
m15_29 -> m15_30  [color=green, key=0, style=solid];
m15_29 -> m15_33  [color=green, key=1, label=options, style=dashed];
m15_29 -> m15_6  [key=2, style=dotted];
m15_29 -> m15_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_161 -> m15_162  [color=green, key=0, style=solid];
m15_161 -> d11  [color=red, key=2, style=dotted];
m15_161 -> m15_38  [color=red, key=2, style=dotted];
m15_162 -> m15_131  [color=blue, key=0, style=bold];
m15_162 -> m15_163  [color=green, key=0, style=solid];
m15_162 -> m15_166  [color=green, key=2, style=dotted];
m15_162 -> m15_9  [color=green, key=2, style=dotted];
m15_2 -> m15_3  [color=green, key=0, style=solid];
m15_2 -> m15_9  [color=green, key=2, style=dotted];
m15_3 -> m15_4  [color=green, key=0, style=solid];
m15_3 -> m15_8  [key=2, style=dotted];
m15_3 -> m15_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_3 -> m15_10  [key=2, style=dotted];
m15_4 -> m15_5  [color=green, key=0, style=solid];
m15_4 -> m15_9  [color=green, key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_6  [color=red, key=0, style=solid];
m15_5 -> m15_10  [color=red, key=2, style=dotted];
m15_5 -> m15_0  [color=blue, key=0, style=bold];
m15_7 -> m15_2  [color=blue, key=0, style=bold];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_11  [key=2, style=dotted];
m15_45 -> m15_50  [color=green, key=1, label=options, style=dashed];
m15_45 -> m15_51  [color=green, key=1, label=options, style=dashed];
m15_45 -> m15_6  [key=2, style=dotted];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_45 -> m15_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_45 -> m15_39  [color=blue, key=0, style=bold];
m15_30 -> m15_31  [color=green, key=0, style=solid];
m15_30 -> m15_9  [color=green, key=2, style=dotted];
m15_31 -> m15_32  [color=red, key=0, style=solid];
m15_31 -> m15_10  [key=2, style=dotted];
m15_31 -> m15_8  [key=2, style=dotted];
m15_31 -> m15_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_31 -> m15_35  [color=red, key=1, label=options, style=dashed];
m15_33 -> m15_34  [color=red, key=0, style=solid];
m15_33 -> d11  [color=green, key=2, style=dotted];
m15_33 -> m15_38  [color=green, key=2, style=dotted];
m15_33 -> m15_10  [color=red, key=2, style=dotted];
m15_32 -> m15_33  [color=red, key=0, style=solid];
m15_32 -> m15_9  [color=red, key=2, style=dotted];
m15_34 -> m15_28  [color=blue, key=0, style=bold];
m15_34 -> m15_35  [color=red, key=0, style=solid];
m15_34 -> m15_11  [key=2, style=dotted];
m15_184 -> m15_185  [key=0, style=solid];
m15_184 -> m15_176  [color=blue, key=0, style=bold];
m15_186 -> m15_187  [color=green, key=0, style=solid];
m15_186 -> m15_9  [color=green, key=2, style=dotted];
m15_187 -> m15_188  [color=red, key=0, style=solid];
m15_187 -> m15_10  [color=green, key=2, style=dotted];
m15_187 -> m15_195  [key=2, style=dotted];
m15_187 -> m15_190  [color=red, key=1, label=options, style=dashed];
m15_187 -> m15_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_192  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_193  [color=red, key=1, label=options, style=dashed];
m15_188 -> m15_189  [color=red, key=0, style=solid];
m15_188 -> d11  [color=green, key=2, style=dotted];
m15_188 -> m15_38  [color=green, key=2, style=dotted];
m15_188 -> m15_9  [color=red, key=2, style=dotted];
m15_189 -> m15_9  [key=2, style=dotted];
m15_189 -> m15_190  [color=red, key=0, style=solid];
m15_189 -> m15_10  [color=red, key=2, style=dotted];
m15_190 -> m15_9  [key=2, style=dotted];
m15_190 -> m15_191  [color=red, key=0, style=solid];
m15_190 -> d11  [color=red, key=2, style=dotted];
m15_190 -> m15_38  [color=red, key=2, style=dotted];
m15_191 -> m15_192  [key=0, style=solid];
m15_191 -> d11  [key=2, style=dotted];
m15_191 -> m15_55  [key=2, style=dotted];
m15_191 -> m15_11  [key=2, style=dotted];
m15_192 -> m15_184  [color=blue, key=0, style=bold];
m15_192 -> m15_193  [color=red, key=0, style=solid];
m15_192 -> m15_11  [key=2, style=dotted];
m15_194 -> m15_195  [key=0, style=solid];
m15_194 -> m15_186  [color=blue, key=0, style=bold];
m15_200 -> m15_201  [color=red, key=0, style=solid];
m15_200 -> m15_9  [color=green, key=2, style=dotted];
m15_200 -> d11  [color=red, key=2, style=dotted];
m15_200 -> m15_38  [color=red, key=2, style=dotted];
m15_199 -> m15_200  [color=red, key=0, style=solid];
m15_199 -> m15_9  [key=2, style=dotted];
m15_199 -> m15_10  [color=red, key=2, style=dotted];
m15_201 -> m15_202  [color=green, key=0, style=solid];
m15_201 -> d11  [color=green, key=2, style=dotted];
m15_201 -> m15_55  [color=green, key=2, style=dotted];
m15_201 -> m15_11  [key=2, style=dotted];
m15_197 -> m15_198  [color=red, key=0, style=solid];
m15_197 -> m15_10  [color=green, key=2, style=dotted];
m15_197 -> m15_195  [key=2, style=dotted];
m15_197 -> m15_200  [color=red, key=1, label=options, style=dashed];
m15_197 -> m15_201  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_203  [color=red, key=1, label=options, style=dashed];
m15_196 -> m15_197  [color=green, key=0, style=solid];
m15_196 -> m15_9  [key=2, style=dotted];
m15_198 -> m15_199  [color=red, key=0, style=solid];
m15_198 -> d11  [key=2, style=dotted];
m15_198 -> m15_38  [key=2, style=dotted];
m15_198 -> m15_9  [color=red, key=2, style=dotted];
m15_202 -> m15_194  [color=blue, key=0, style=bold];
m15_202 -> m15_203  [color=red, key=0, style=solid];
m15_202 -> m15_11  [key=2, style=dotted];
m15_203 -> m15_204  [color=red, key=0, style=solid];
m15_203 -> d11  [color=red, key=2, style=dotted];
m15_203 -> m15_55  [color=red, key=2, style=dotted];
m15_203 -> m15_2  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_4  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_13  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_20  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_19  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_24  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_26  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_30  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_40  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_47  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_56  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_62  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_57  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_68  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_71  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_77  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_83  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_84  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_87  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_89  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_93  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_97  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_111  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_112  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_117  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_124  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_131  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_134  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_138  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_145  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_146  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_152  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_162  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_178  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_180  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_186  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_187  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_200  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_197  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_14  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_18  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_25  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_31  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_60  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_72  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_78  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_79  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_90  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_92  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_98  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_101  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_105  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_106  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_107  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_113  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_114  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_115  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_118  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_119  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_120  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_123  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_125  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_126  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_132  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_133  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_139  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_142  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_143  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_147  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_148  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_153  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_156  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_158  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_166  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_169  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_172  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_179  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_189  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_190  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_196  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_203 -> m15_199  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_204 -> m15_196  [color=blue, key=0, style=bold];
m15_39 -> m15_40  [color=green, key=0, style=solid];
m15_39 -> m15_9  [key=2, style=dotted];
m15_40 -> m15_41  [color=green, key=0, style=solid];
m15_40 -> m15_8  [key=2, style=dotted];
m15_40 -> m15_43  [color=red, key=1, label=options, style=dashed];
m15_40 -> m15_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_40 -> m15_10  [color=green, key=2, style=dotted];
m15_41 -> m15_42  [color=red, key=0, style=solid];
m15_41 -> m15_9  [color=red, key=2, style=dotted];
m15_41 -> d11  [key=2, style=dotted];
m15_41 -> m15_38  [key=2, style=dotted];
m15_43 -> m15_44  [color=red, key=0, style=solid];
m15_43 -> d11  [color=red, key=2, style=dotted];
m15_43 -> m15_38  [color=red, key=2, style=dotted];
m15_43 -> m15_37  [color=blue, key=0, style=bold];
m15_42 -> m15_43  [color=red, key=0, style=solid];
m15_42 -> m15_10  [color=red, key=2, style=dotted];
m15_42 -> m15_9  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_11 -> m15_6  [key=2, style=dotted];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_9  [key=2, style=dotted];
m15_107 -> m15_9  [color=red, key=2, style=dotted];
m15_107 -> m15_108  [color=red, key=0, style=solid];
m15_106 -> m15_107  [color=red, key=0, style=solid];
m15_106 -> m15_10  [key=2, style=dotted];
m15_106 -> m15_8  [key=2, style=dotted];
m15_106 -> m15_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_108 -> m15_103  [color=blue, key=0, style=bold];
m15_108 -> m15_109  [color=red, key=0, style=solid];
m15_108 -> m15_10  [color=red, key=2, style=dotted];
m15_193 -> m15_194  [color=red, key=0, style=solid];
m15_193 -> d11  [color=red, key=2, style=dotted];
m15_193 -> m15_55  [color=red, key=2, style=dotted];
m15_173 -> m15_171  [color=blue, key=0, style=bold];
m15_173 -> m15_174  [color=red, key=0, style=solid];
m15_81 -> m15_82  [color=green, key=0, style=solid];
m15_81 -> m15_11  [key=2, style=dotted];
m15_82 -> m15_77  [color=blue, key=0, style=bold];
m15_82 -> m15_83  [color=green, key=0, style=solid];
m15_82 -> m15_6  [color=green, key=2, style=dotted];
m15_183 -> m15_184  [key=0, style=solid];
m15_74 -> m15_75  [color=red, key=0, style=solid];
m15_74 -> m15_76  [color=red, key=2, style=dotted];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [color=green, key=0, style=solid];
m15_1 -> m15_4  [color=green, key=1, label=options, style=dashed];
m15_1 -> m15_6  [key=2, style=dotted];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_37 -> m15_38  [key=0, style=solid];
m15_38 -> m15_6  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_38 -> m15_42  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_35 -> m15_36  [color=red, key=0, style=solid];
m15_35 -> d11  [color=red, key=2, style=dotted];
m15_35 -> m15_38  [color=red, key=2, style=dotted];
m15_36 -> m15_30  [color=blue, key=0, style=bold];
m15_205 -> m15_4  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_5  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_14  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_15  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_16  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_20  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_21  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_26  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_27  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_32  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_33  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_41  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_42  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_48  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_49  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_58  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_59  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_70  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_71  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_73  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_74  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_79  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_80  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_81  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_85  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_86  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_88  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_89  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_91  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_92  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_94  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_95  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_99  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_100  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_102  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_103  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_107  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_108  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_109  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_113  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_114  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_115  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_117  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_119  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_120  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_122  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_123  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_125  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_126  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_128  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_129  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_133  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_134  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_136  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_137  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_140  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_141  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_143  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_144  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_145  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_147  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_148  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_152  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_154  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_155  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_158  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_160  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_164  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_168  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_171  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_174  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_180  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_181  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_182  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_188  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_189  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_192  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_198  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_199  [color=red, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_202  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m16_90 -> m16_91  [key=0, style=solid];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_94  [key=0, style=solid];
m16_91 -> m16_95  [key=2, style=dotted];
m16_91 -> m16_42  [key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_86  [key=2, style=dotted];
m16_94 -> m16_90  [color=blue, key=0, style=bold];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m16_26 -> m16_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m16_26 -> m16_32  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_26 -> m16_34  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_26 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_87 -> m16_88  [key=0, style=solid];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_77  [key=2, style=dotted];
m16_89 -> m16_87  [color=blue, key=0, style=bold];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_38  [key=2, style=dotted];
m16_27 -> m16_31  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m16_25 -> m16_43  [color=red, key=0, style=solid];
m16_25 -> m16_44  [color=red, key=1, label=string, style=dashed];
m16_25 -> m16_45  [color=red, key=1, label=string, style=dashed];
m16_25 -> m16_15  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m16_25 -> m16_34  [color=darkorchid, key=3, label="method methodReturn bool SetValueScalar", style=bold];
m16_25 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetValueScalar", style=bold];
m16_43 -> m16_44  [color=red, key=0, style=solid];
m16_43 -> m16_45  [color=red, key=0, style=solid];
m16_44 -> m16_46  [color=red, key=0, style=solid];
m16_44 -> m16_48  [color=red, key=0, style=solid];
m16_44 -> m16_50  [color=red, key=0, style=solid];
m16_44 -> m16_52  [color=red, key=0, style=solid];
m16_44 -> m16_54  [color=red, key=0, style=solid];
m16_44 -> m16_56  [color=red, key=2, style=dotted];
m16_44 -> m16_42  [color=red, key=2, style=dotted];
m16_45 -> m16_46  [color=red, key=0, style=solid];
m16_45 -> m16_48  [color=red, key=0, style=solid];
m16_45 -> m16_50  [color=red, key=0, style=solid];
m16_45 -> m16_52  [color=red, key=0, style=solid];
m16_45 -> m16_54  [color=red, key=0, style=solid];
m16_45 -> m16_40  [color=red, key=2, style=dotted];
m16_45 -> m16_42  [color=red, key=2, style=dotted];
m16_46 -> m16_47  [color=red, key=0, style=solid];
m16_48 -> m16_49  [color=red, key=0, style=solid];
m16_50 -> m16_51  [color=red, key=0, style=solid];
m16_52 -> m16_53  [color=red, key=0, style=solid];
m16_54 -> m16_55  [color=red, key=0, style=solid];
m16_47 -> m16_55  [color=red, key=0, style=solid];
m16_49 -> m16_55  [color=red, key=0, style=solid];
m16_51 -> m16_55  [color=red, key=0, style=solid];
m16_53 -> m16_55  [color=red, key=0, style=solid];
m16_55 -> m16_25  [color=blue, key=0, style=bold];
m16_17 -> m16_21  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_22  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_16  [key=0, style=solid];
m16_17 -> m16_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_15 -> m16_19  [color=red, key=1, label=string, style=dashed];
m16_15 -> m16_20  [color=red, key=1, label=string, style=dashed];
m16_15 -> m16_22  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_15 -> m16_24  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_15 -> m16_25  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_18  [key=0, style=solid];
m16_19 -> m16_21  [color=red, key=0, style=solid];
m16_19 -> m16_24  [color=red, key=2, style=dotted];
m16_20 -> m16_21  [color=red, key=0, style=solid];
m16_20 -> m16_25  [color=red, key=2, style=dotted];
m16_18 -> m16_19  [color=red, key=0, style=solid];
m16_18 -> m16_20  [color=red, key=0, style=solid];
m16_18 -> m16_23  [key=2, style=dotted];
m16_18 -> m16_21  [color=green, key=0, style=solid];
m16_18 -> m16_22  [color=green, key=0, style=solid];
m16_21 -> m16_21  [color=green, key=0, style=solid];
m16_21 -> m16_26  [color=green, key=2, style=dotted];
m16_21 -> m16_15  [color=blue, key=0, style=bold];
m16_21 -> m16_17  [color=blue, key=0, style=bold];
m16_22 -> m16_21  [color=green, key=0, style=solid];
m16_22 -> m16_27  [color=green, key=2, style=dotted];
m16_22 -> m16_69  [key=0, style=solid];
m16_22 -> m16_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_22 -> m16_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_22 -> m16_15  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m16_22 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetValueList", style=bold];
m16_22 -> m16_17  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m16_24 -> m16_57  [color=red, key=0, style=solid];
m16_24 -> m16_58  [color=red, key=1, label=string, style=dashed];
m16_24 -> m16_15  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m16_24 -> m16_34  [color=darkorchid, key=3, label="method methodReturn bool SetNullableValue", style=bold];
m16_24 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetNullableValue", style=bold];
m16_57 -> m16_58  [color=red, key=0, style=solid];
m16_57 -> m16_63  [color=red, key=2, style=dotted];
m16_58 -> m16_59  [color=red, key=0, style=solid];
m16_58 -> m16_61  [color=red, key=0, style=solid];
m16_58 -> m16_64  [color=red, key=2, style=dotted];
m16_58 -> m16_42  [color=red, key=2, style=dotted];
m16_59 -> m16_60  [color=red, key=0, style=solid];
m16_61 -> m16_62  [color=red, key=0, style=solid];
m16_60 -> m16_62  [color=red, key=0, style=solid];
m16_62 -> m16_24  [color=blue, key=0, style=bold];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_42  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_68 -> m16_65  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_0 -> m16_5  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_6  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_7  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_9  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_10  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_11  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_12  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_12 -> m16_13  [color=green, key=0, style=solid];
m16_2 -> m16_13  [key=0, style=solid];
m16_2 -> m16_14  [key=2, style=dotted];
m16_4 -> m16_13  [key=0, style=solid];
m16_4 -> m16_14  [key=2, style=dotted];
m16_13 -> m16_13  [color=green, key=0, style=solid];
m16_13 -> m16_16  [color=green, key=2, style=dotted];
m16_13 -> m16_0  [color=blue, key=0, style=bold];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_85  [key=0, style=solid];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_85  [key=0, style=solid];
m16_82 -> m16_42  [key=2, style=dotted];
m16_83 -> m16_84  [key=0, style=solid];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_86  [key=2, style=dotted];
m16_85 -> m16_80  [color=blue, key=0, style=bold];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_76  [key=2, style=dotted];
m16_69 -> m16_42  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_77  [key=2, style=dotted];
m16_70 -> m16_73  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_78  [key=2, style=dotted];
m16_73 -> m16_72  [key=0, style=solid];
m16_73 -> m16_79  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_74  [key=0, style=solid];
m16_74 -> m16_75  [key=0, style=solid];
m16_75 -> m16_22  [color=blue, key=0, style=bold];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_39  [key=2, style=dotted];
m16_28 -> m16_30  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_28 -> m16_31  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_28 -> m16_32  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_40  [key=2, style=dotted];
m16_31 -> m16_41  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_35  [key=0, style=solid];
m16_32 -> m16_42  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_29 -> m16_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_29 -> m16_29  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_36  [key=0, style=solid];
m16_35 -> m16_30  [key=0, style=solid];
m16_35 -> m16_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_36 -> m16_37  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_37  [key=0, style=solid];
m16_37 -> m16_26  [color=blue, key=0, style=bold];
m16_96 -> m16_5  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_7  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_10  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_12  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_16  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_17  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_18  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_19  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_20  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_27  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_32  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_43  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_44  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_45  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_57  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_58  [color=red, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_66  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_69  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_70  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_71  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_81  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_82  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_88  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_91  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_13  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_21  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_96 -> m16_22  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_29  [color=red, key=3, label="Parameter variable string longName", style=bold];
m17_19 -> m17_31  [color=red, key=3, label="Parameter variable string longName", style=bold];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_26  [key=2, style=dotted];
m17_20 -> m17_22  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_20 -> m17_24  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_16  [key=2, style=dotted];
m17_21 -> m17_23  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_22 -> m17_23  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_18  [key=2, style=dotted];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_17  [key=2, style=dotted];
m17_25 -> m17_19  [color=blue, key=0, style=bold];
m17_27 -> m17_28  [color=green, key=0, style=solid];
m17_28 -> m17_29  [color=green, key=0, style=solid];
m17_28 -> m17_0  [color=red, key=2, style=dotted];
m17_29 -> m17_30  [color=red, key=0, style=solid];
m17_29 -> m17_19  [color=red, key=2, style=dotted];
m17_29 -> m17_27  [color=blue, key=0, style=bold];
m17_30 -> m17_31  [color=red, key=0, style=solid];
m17_30 -> m17_8  [color=red, key=2, style=dotted];
m17_31 -> m17_32  [color=green, key=0, style=solid];
m17_31 -> m17_19  [color=red, key=2, style=dotted];
m17_31 -> d11  [color=green, key=2, style=dotted];
m17_31 -> m17_43  [color=green, key=2, style=dotted];
m17_32 -> m17_33  [color=green, key=0, style=solid];
m17_32 -> d11  [color=green, key=2, style=dotted];
m17_32 -> m17_43  [color=green, key=2, style=dotted];
m17_33 -> m17_27  [color=blue, key=0, style=bold];
m17_33 -> m17_41  [key=0, style=solid];
m17_33 -> d11  [key=2, style=dotted];
m17_33 -> m17_43  [key=2, style=dotted];
m17_44 -> m17_45  [color=red, key=0, style=solid];
m17_44 -> m17_38  [color=green, key=0, style=solid];
m17_44 -> m17_52  [color=green, key=0, style=solid];
m17_44 -> d11  [color=green, key=2, style=dotted];
m17_44 -> m17_48  [color=green, key=2, style=dotted];
m17_45 -> m17_46  [color=red, key=0, style=solid];
m17_46 -> m17_47  [color=red, key=0, style=solid];
m17_46 -> d11  [color=red, key=2, style=dotted];
m17_46 -> m17_48  [color=red, key=2, style=dotted];
m17_38 -> m17_39  [color=red, key=0, style=solid];
m17_38 -> d11  [color=red, key=2, style=dotted];
m17_38 -> m17_43  [color=red, key=2, style=dotted];
m17_39 -> m17_47  [color=green, key=0, style=solid];
m17_39 -> d11  [color=red, key=2, style=dotted];
m17_39 -> m17_48  [color=green, key=2, style=dotted];
m17_39 -> m17_40  [color=red, key=0, style=solid];
m17_39 -> m17_43  [color=red, key=2, style=dotted];
m17_47 -> m17_44  [color=blue, key=0, style=bold];
m17_6 -> m17_30  [color=red, key=3, label="Parameter variable string longName", style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_15  [key=2, style=dotted];
m17_9 -> m17_11  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_9 -> m17_13  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_16  [key=2, style=dotted];
m17_10 -> m17_12  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_11 -> m17_12  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_18  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_17  [key=2, style=dotted];
m17_14 -> m17_8  [color=blue, key=0, style=bold];
m17_34 -> m17_35  [color=red, key=0, style=solid];
m17_35 -> m17_36  [color=red, key=0, style=solid];
m17_36 -> m17_34  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_5  [key=2, style=dotted];
m17_1 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_7  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_7  [key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_64  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_67  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_53  [color=darkorchid, key=3, label="method methodReturn CommandLine.Internal.OptionMap CreateMap", style=bold];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_56  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_63 -> m17_64  [key=0, style=solid];
m17_64 -> m17_65  [key=0, style=solid];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_69  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_67 -> m17_68  [key=0, style=solid];
m17_68 -> m17_69  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_5  [key=2, style=dotted];
m17_55 -> m17_6  [key=2, style=dotted];
m17_55 -> m17_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_64  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_26  [key=2, style=dotted];
m17_56 -> m17_59  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_62  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_66  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_67  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_15  [key=2, style=dotted];
m17_57 -> m17_60  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_57 -> m17_63  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_57 -> m17_68  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_59 -> m17_60  [key=0, style=solid];
m17_59 -> m17_16  [key=2, style=dotted];
m17_59 -> m17_62  [color=darkseagreen4, key=1, label=option1, style=dashed];
m17_59 -> m17_66  [color=darkseagreen4, key=1, label=option1, style=dashed];
m17_58 -> m17_59  [key=0, style=solid];
m17_58 -> m17_26  [key=2, style=dotted];
m17_58 -> m17_61  [color=darkseagreen4, key=1, label=attribute3, style=dashed];
m17_58 -> m17_64  [color=darkseagreen4, key=1, label=attribute3, style=dashed];
m17_60 -> m17_61  [key=0, style=solid];
m17_60 -> m17_16  [key=2, style=dotted];
m17_60 -> m17_63  [color=darkseagreen4, key=1, label=option2, style=dashed];
m17_60 -> m17_67  [color=darkseagreen4, key=1, label=option2, style=dashed];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_16  [key=2, style=dotted];
m17_61 -> m17_64  [color=darkseagreen4, key=1, label=option3, style=dashed];
m17_61 -> m17_68  [color=darkseagreen4, key=1, label=option3, style=dashed];
m17_70 -> m17_53  [color=blue, key=0, style=bold];
m17_43 -> m17_44  [color=green, key=0, style=solid];
m17_49 -> m17_50  [color=red, key=0, style=solid];
m17_49 -> m17_43  [color=green, key=0, style=solid];
m17_50 -> m17_51  [color=red, key=0, style=solid];
m17_51 -> m17_52  [color=red, key=0, style=solid];
m17_51 -> d11  [color=red, key=2, style=dotted];
m17_51 -> m17_48  [color=red, key=2, style=dotted];
m17_52 -> m17_49  [color=blue, key=0, style=bold];
m17_37 -> m17_38  [color=red, key=0, style=solid];
m17_37 -> m17_31  [color=green, key=0, style=solid];
m17_40 -> m17_41  [color=red, key=0, style=solid];
m17_40 -> d11  [color=red, key=2, style=dotted];
m17_40 -> m17_43  [color=red, key=2, style=dotted];
m17_41 -> m17_37  [color=blue, key=0, style=bold];
m17_71 -> m17_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_3 -> m18_4  [color=green, key=0, style=solid];
m18_4 -> m18_2  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [color=green, key=0, style=solid];
m18_5 -> m18_7  [color=green, key=1, label=string, style=dashed];
m18_5 -> m18_8  [color=green, key=1, label=string, style=dashed];
m18_5 -> m18_9  [color=green, key=3, label="method methodReturn bool WriteScalar", style=bold];
m18_5 -> m18_17  [color=green, key=3, label="method methodReturn bool WriteScalar", style=bold];
m18_6 -> m18_7  [color=green, key=0, style=solid];
m18_6 -> m18_8  [color=green, key=0, style=solid];
m18_7 -> m18_9  [color=green, key=0, style=solid];
m18_7 -> m18_11  [color=green, key=0, style=solid];
m18_7 -> m18_13  [color=green, key=0, style=solid];
m18_7 -> m18_15  [color=green, key=0, style=solid];
m18_7 -> m18_17  [color=green, key=0, style=solid];
m18_7 -> m18_19  [color=green, key=2, style=dotted];
m18_7 -> m18_20  [color=green, key=2, style=dotted];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_8 -> m18_11  [color=green, key=0, style=solid];
m18_8 -> m18_13  [color=green, key=0, style=solid];
m18_8 -> m18_15  [color=green, key=0, style=solid];
m18_8 -> m18_17  [color=green, key=0, style=solid];
m18_8 -> m18_21  [color=green, key=2, style=dotted];
m18_8 -> m18_20  [color=green, key=2, style=dotted];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_11 -> m18_12  [color=green, key=0, style=solid];
m18_13 -> m18_14  [color=green, key=0, style=solid];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_17 -> m18_18  [color=green, key=0, style=solid];
m18_10 -> m18_18  [color=green, key=0, style=solid];
m18_12 -> m18_18  [color=green, key=0, style=solid];
m18_14 -> m18_18  [color=green, key=0, style=solid];
m18_16 -> m18_18  [color=green, key=0, style=solid];
m18_18 -> m18_5  [color=blue, key=0, style=bold];
m18_22 -> m18_9  [color=green, key=3, label="method methodReturn bool WriteNullable", style=bold];
m18_22 -> m18_17  [color=green, key=3, label="method methodReturn bool WriteNullable", style=bold];
m18_22 -> m18_23  [color=green, key=0, style=solid];
m18_22 -> m18_24  [color=green, key=1, label=string, style=dashed];
m18_23 -> m18_24  [color=green, key=0, style=solid];
m18_23 -> m18_29  [color=green, key=2, style=dotted];
m18_24 -> m18_25  [color=green, key=0, style=solid];
m18_24 -> m18_27  [color=green, key=0, style=solid];
m18_24 -> m18_30  [color=green, key=2, style=dotted];
m18_24 -> m18_20  [color=green, key=2, style=dotted];
m18_25 -> m18_26  [color=green, key=0, style=solid];
m18_27 -> m18_28  [color=green, key=0, style=solid];
m18_26 -> m18_28  [color=green, key=0, style=solid];
m18_28 -> m18_22  [color=blue, key=0, style=bold];
m18_31 -> m18_3  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_6  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_7  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_8  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_23  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m18_31 -> m18_24  [color=green, key=1, label="CommandLine.Internal.PropertyWriter", style=dashed];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_29  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_25 -> m19_34  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_25 -> m19_37  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_25 -> m19_27  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_18  [key=2, style=dotted];
m19_26 -> m19_35  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_20  [key=2, style=dotted];
m19_29 -> m19_40  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_38  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_35 -> m19_36  [key=0, style=solid];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_38  [key=0, style=solid];
m19_38 -> m19_39  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_37  [key=0, style=solid];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_30 -> m19_34  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_30  [key=0, style=solid];
m19_37 -> m19_39  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_23  [key=2, style=dotted];
m19_32 -> m19_34  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_18  [key=2, style=dotted];
m19_34 -> m19_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_30  [key=0, style=solid];
m19_36 -> m19_39  [key=0, style=solid];
m19_39 -> m19_25  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_0 -> m19_6  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_0 -> m19_4  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute>> RetrievePropertyList", style=bold];
m19_0 -> m19_2  [color=green, key=3, label="method methodReturn System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute>> RetrievePropertyList", style=bold];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_18  [color=green, key=2, style=dotted];
m19_1 -> m19_14  [color=green, key=1, label=key, style=dashed];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_14  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_20  [key=2, style=dotted];
m19_6 -> m19_21  [key=2, style=dotted];
m19_2 -> m19_3  [color=green, key=0, style=solid];
m19_2 -> m19_16  [color=green, key=1, label=cached, style=dashed];
m19_14 -> m19_15  [key=0, style=solid];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_16  [color=green, key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_19  [key=2, style=dotted];
m19_4 -> m19_13  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_4 -> m19_14  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_4 -> m19_15  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_13 -> m19_7  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_13 -> m19_24  [key=2, style=dotted];
m19_15 -> m19_17  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_14  [key=0, style=solid];
m19_7 -> m19_9  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_7 -> m19_11  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_7  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_22  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_23  [key=2, style=dotted];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_7  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_7  [key=0, style=solid];
m19_17 -> m19_0  [color=blue, key=0, style=bold];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_45  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_41 -> m19_50  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_41 -> m19_37  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_41 -> m19_43  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_18  [key=2, style=dotted];
m19_42 -> m19_51  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_20  [key=2, style=dotted];
m19_45 -> m19_40  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_54  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_51 -> m19_52  [key=0, style=solid];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_54  [key=0, style=solid];
m19_54 -> m19_55  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_53  [key=0, style=solid];
m19_46 -> m19_48  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_46  [key=0, style=solid];
m19_53 -> m19_55  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_23  [key=2, style=dotted];
m19_48 -> m19_50  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_46  [key=0, style=solid];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_52  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_52 -> m19_55  [key=0, style=solid];
m19_55 -> m19_41  [color=blue, key=0, style=bold];
m19_101 -> m19_102  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_104  [key=2, style=dotted];
m19_103 -> m19_101  [color=blue, key=0, style=bold];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_37  [color=darkorchid, key=3, label="method methodReturn TAttribute GetAttribute", style=bold];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_79  [key=2, style=dotted];
m19_74 -> m19_77  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_77  [key=0, style=solid];
m19_77 -> m19_78  [key=0, style=solid];
m19_76 -> m19_78  [key=0, style=solid];
m19_78 -> m19_73  [color=blue, key=0, style=bold];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_85  [color=green, key=1, label=object, style=dashed];
m19_80 -> m19_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_80 -> m19_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_80 -> m19_37  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_80 -> m19_84  [color=green, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_80 -> m19_82  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_18  [key=2, style=dotted];
m19_81 -> m19_96  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_85 -> m19_86  [color=green, key=0, style=solid];
m19_85 -> m19_87  [color=green, key=0, style=solid];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_20  [key=2, style=dotted];
m19_87 -> m19_21  [key=2, style=dotted];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_88  [key=0, style=solid];
m19_94 -> m19_100  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_98  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_96 -> m19_97  [key=0, style=solid];
m19_83 -> m19_84  [color=green, key=0, style=solid];
m19_83 -> m19_98  [key=0, style=solid];
m19_98 -> m19_99  [key=0, style=solid];
m19_84 -> m19_85  [color=green, key=0, style=solid];
m19_84 -> m19_37  [color=green, key=3, label="Local variable CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> found", style=bold];
m19_86 -> m19_99  [key=0, style=solid];
m19_88 -> m19_89  [key=0, style=solid];
m19_88 -> m19_98  [key=0, style=solid];
m19_88 -> m19_90  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_88 -> m19_92  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_88 -> m19_95  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_88  [key=0, style=solid];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_22  [key=2, style=dotted];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_23  [key=2, style=dotted];
m19_92 -> m19_95  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_18  [key=2, style=dotted];
m19_95 -> m19_97  [color=darkseagreen4, key=1, label=found, style=dashed];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_88  [key=0, style=solid];
m19_93 -> m19_94  [key=0, style=solid];
m19_97 -> m19_99  [key=0, style=solid];
m19_99 -> m19_80  [color=blue, key=0, style=bold];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_56 -> m19_60  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<TAttribute> RetrievePropertyAttributeList", style=bold];
m19_56 -> m19_58  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<TAttribute> RetrievePropertyAttributeList", style=bold];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_18  [key=2, style=dotted];
m19_57 -> m19_69  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_20  [key=2, style=dotted];
m19_61 -> m19_21  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_71  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_69 -> m19_70  [key=0, style=solid];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_71  [key=0, style=solid];
m19_71 -> m19_72  [key=0, style=solid];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_19  [key=2, style=dotted];
m19_60 -> m19_68  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_60 -> m19_69  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_60 -> m19_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_68 -> m19_62  [key=0, style=solid];
m19_68 -> m19_24  [key=2, style=dotted];
m19_70 -> m19_72  [key=0, style=solid];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_69  [key=0, style=solid];
m19_62 -> m19_64  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_62 -> m19_66  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_62  [key=0, style=solid];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_22  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_23  [key=2, style=dotted];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_62  [key=0, style=solid];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_62  [key=0, style=solid];
m19_72 -> m19_56  [color=blue, key=0, style=bold];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_8  [color=darkseagreen4, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
m20_6 -> m20_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_11  [color=darkseagreen4, key=1, label=method, style=dashed];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_15  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_11  [key=0, style=solid];
m20_9 -> m20_13  [key=2, style=dotted];
m20_10 -> m20_12  [key=0, style=solid];
m20_10 -> m20_14  [key=2, style=dotted];
m20_12 -> m20_6  [color=blue, key=0, style=bold];
m20_13 -> m20_16  [key=0, style=solid];
m20_13 -> m20_8  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=2, style=dotted];
m20_17 -> m20_13  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_2  [color=blue, key=0, style=bold];
m20_19 -> m20_3  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m20_19 -> m20_4  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m23_0 -> m23_1  [key=0, style=solid];
m23_4 -> m23_5  [color=red, key=0, style=solid];
m23_4 -> m23_11  [color=red, key=2, style=dotted];
m23_4 -> d12  [color=red, key=2, style=dotted];
m23_1 -> m23_4  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_5  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_6  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_9  [key=2, style=dotted];
m23_1 -> m23_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_3 -> m23_11  [color=red, key=2, style=dotted];
m23_3 -> m23_12  [color=red, key=2, style=dotted];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_5 -> m23_11  [color=red, key=2, style=dotted];
m23_5 -> d12  [color=red, key=2, style=dotted];
m23_6 -> m23_7  [color=red, key=0, style=solid];
m23_6 -> m23_11  [color=red, key=2, style=dotted];
m23_6 -> m23_12  [color=red, key=2, style=dotted];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_14  [key=2, style=dotted];
m23_2 -> m23_3  [color=red, key=0, style=solid];
m23_2 -> m23_10  [key=2, style=dotted];
m23_8 -> m23_0  [color=blue, key=0, style=bold];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_20  [key=2, style=dotted];
m23_17 -> m23_18  [color=green, key=0, style=solid];
m23_17 -> m23_10  [key=2, style=dotted];
m23_18 -> m23_19  [color=green, key=0, style=solid];
m23_18 -> m23_11  [color=green, key=2, style=dotted];
m23_18 -> m23_12  [color=green, key=2, style=dotted];
m23_19 -> m23_15  [color=blue, key=0, style=bold];
m24_36 -> m24_37  [color=green, key=0, style=solid];
m24_37 -> m24_38  [color=green, key=0, style=solid];
m24_37 -> m24_49  [color=green, key=2, style=dotted];
m24_37 -> m24_39  [color=green, key=1, label=options, style=dashed];
m24_38 -> m24_39  [color=green, key=0, style=solid];
m24_38 -> m24_14  [key=2, style=dotted];
m24_38 -> m24_41  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m24_39 -> m24_40  [color=green, key=0, style=solid];
m24_39 -> m24_15  [color=green, key=2, style=dotted];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_17  [key=2, style=dotted];
m24_41 -> m24_43  [color=green, key=1, label=helpText, style=dashed];
m24_40 -> m24_41  [color=red, key=0, style=solid];
m24_40 -> m24_16  [color=red, key=2, style=dotted];
m24_42 -> m24_43  [color=green, key=0, style=solid];
m24_42 -> m24_18  [key=2, style=dotted];
m24_43 -> m24_44  [color=green, key=0, style=solid];
m24_43 -> m24_19  [color=green, key=2, style=dotted];
m24_43 -> m24_45  [color=green, key=1, label=lines, style=dashed];
m24_43 -> m24_46  [color=green, key=1, label=lines, style=dashed];
m24_43 -> m24_47  [color=green, key=1, label=lines, style=dashed];
m24_44 -> m24_45  [color=green, key=0, style=solid];
m24_44 -> d11  [color=green, key=2, style=dotted];
m24_44 -> m24_21  [color=green, key=2, style=dotted];
m24_45 -> m24_46  [color=green, key=0, style=solid];
m24_45 -> m24_22  [color=green, key=2, style=dotted];
m24_45 -> d11  [color=green, key=2, style=dotted];
m24_45 -> m24_23  [color=green, key=2, style=dotted];
m24_46 -> m24_47  [color=red, key=0, style=solid];
m24_46 -> m24_22  [color=red, key=2, style=dotted];
m24_46 -> d11  [color=red, key=2, style=dotted];
m24_46 -> m24_23  [color=red, key=2, style=dotted];
m24_47 -> m24_48  [color=red, key=0, style=solid];
m24_47 -> m24_22  [color=red, key=2, style=dotted];
m24_47 -> d11  [color=red, key=2, style=dotted];
m24_47 -> m24_23  [color=red, key=2, style=dotted];
m24_48 -> m24_36  [color=blue, key=0, style=bold];
m24_24 -> m24_25  [key=0, style=solid];
m24_26 -> m24_27  [color=red, key=0, style=solid];
m24_26 -> m24_14  [color=green, key=2, style=dotted];
m24_26 -> m24_29  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m24_25 -> m24_26  [color=green, key=0, style=solid];
m24_25 -> m24_35  [key=2, style=dotted];
m24_25 -> m24_27  [color=red, key=1, label=options, style=dashed];
m24_27 -> m24_28  [color=red, key=0, style=solid];
m24_27 -> m24_15  [color=red, key=2, style=dotted];
m24_29 -> m24_30  [color=green, key=0, style=solid];
m24_29 -> m24_17  [color=green, key=2, style=dotted];
m24_29 -> m24_31  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m24_28 -> m24_29  [color=red, key=0, style=solid];
m24_28 -> m24_16  [color=red, key=2, style=dotted];
m24_30 -> m24_31  [color=green, key=0, style=solid];
m24_30 -> m24_18  [color=green, key=2, style=dotted];
m24_31 -> m24_32  [color=red, key=0, style=solid];
m24_31 -> m24_19  [color=green, key=2, style=dotted];
m24_31 -> m24_33  [color=red, key=1, label=lines, style=dashed];
m24_32 -> m24_33  [color=red, key=0, style=solid];
m24_32 -> d11  [color=red, key=2, style=dotted];
m24_32 -> m24_21  [color=red, key=2, style=dotted];
m24_33 -> m24_34  [color=red, key=0, style=solid];
m24_33 -> m24_22  [color=red, key=2, style=dotted];
m24_33 -> d11  [color=red, key=2, style=dotted];
m24_33 -> m24_23  [color=red, key=2, style=dotted];
m24_34 -> m24_24  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_1 -> m24_13  [color=green, key=2, style=dotted];
m24_1 -> m24_3  [color=green, key=1, label=options, style=dashed];
m24_2 -> m24_3  [color=red, key=0, style=solid];
m24_2 -> m24_14  [key=2, style=dotted];
m24_2 -> m24_5  [color=green, key=1, label=testWriter, style=dashed];
m24_3 -> m24_4  [color=green, key=0, style=solid];
m24_3 -> m24_15  [color=red, key=2, style=dotted];
m24_5 -> m24_6  [color=green, key=0, style=solid];
m24_5 -> m24_17  [color=green, key=2, style=dotted];
m24_5 -> m24_7  [color=green, key=1, label=helpText, style=dashed];
m24_4 -> m24_5  [color=green, key=0, style=solid];
m24_4 -> m24_16  [color=green, key=2, style=dotted];
m24_6 -> m24_7  [color=green, key=0, style=solid];
m24_6 -> m24_18  [key=2, style=dotted];
m24_7 -> m24_8  [color=green, key=0, style=solid];
m24_7 -> m24_19  [color=green, key=2, style=dotted];
m24_7 -> m24_9  [color=green, key=1, label=lines, style=dashed];
m24_7 -> m24_10  [color=green, key=1, label=lines, style=dashed];
m24_7 -> m24_11  [color=green, key=1, label=lines, style=dashed];
m24_8 -> m24_9  [color=red, key=0, style=solid];
m24_8 -> d11  [color=red, key=2, style=dotted];
m24_8 -> m24_21  [color=red, key=2, style=dotted];
m24_9 -> m24_10  [color=red, key=0, style=solid];
m24_9 -> m24_22  [color=red, key=2, style=dotted];
m24_9 -> d11  [color=red, key=2, style=dotted];
m24_9 -> m24_23  [color=red, key=2, style=dotted];
m24_10 -> m24_11  [color=green, key=0, style=solid];
m24_10 -> m24_22  [color=red, key=2, style=dotted];
m24_10 -> d11  [color=red, key=2, style=dotted];
m24_10 -> m24_23  [color=red, key=2, style=dotted];
m24_11 -> m24_12  [color=green, key=0, style=solid];
m24_11 -> m24_22  [color=green, key=2, style=dotted];
m24_11 -> d11  [color=green, key=2, style=dotted];
m24_11 -> m24_23  [color=green, key=2, style=dotted];
m24_12 -> m24_0  [color=blue, key=0, style=bold];
m24_50 -> m24_51  [color=green, key=0, style=solid];
m24_51 -> m24_52  [color=green, key=0, style=solid];
m24_51 -> m24_61  [color=green, key=2, style=dotted];
m24_51 -> m24_53  [color=red, key=1, label=options, style=dashed];
m24_52 -> m24_53  [color=red, key=0, style=solid];
m24_52 -> m24_14  [color=green, key=2, style=dotted];
m24_52 -> m24_55  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m24_53 -> m24_54  [color=red, key=0, style=solid];
m24_53 -> m24_15  [color=red, key=2, style=dotted];
m24_55 -> m24_56  [key=0, style=solid];
m24_55 -> m24_17  [key=2, style=dotted];
m24_55 -> m24_57  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m24_54 -> m24_55  [color=red, key=0, style=solid];
m24_54 -> m24_16  [color=red, key=2, style=dotted];
m24_58 -> m24_59  [color=red, key=0, style=solid];
m24_58 -> d11  [color=red, key=2, style=dotted];
m24_58 -> m24_21  [color=red, key=2, style=dotted];
m24_57 -> m24_58  [color=red, key=0, style=solid];
m24_57 -> m24_59  [color=red, key=1, label=lines, style=dashed];
m24_57 -> m24_19  [key=2, style=dotted];
m24_59 -> m24_60  [color=red, key=0, style=solid];
m24_59 -> m24_22  [color=red, key=2, style=dotted];
m24_59 -> d11  [color=red, key=2, style=dotted];
m24_59 -> m24_23  [color=red, key=2, style=dotted];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_18  [key=2, style=dotted];
m24_60 -> m24_50  [color=blue, key=0, style=bold];
m24_62 -> m24_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_4  [color=green, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_39  [color=green, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_40  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_54  [color=green, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [color=red, key=0, style=solid];
m25_3 -> m25_4  [color=red, key=0, style=solid];
m25_4 -> m25_5  [color=red, key=0, style=solid];
m25_4 -> m25_8  [color=red, key=2, style=dotted];
m25_5 -> m25_6  [color=red, key=0, style=solid];
m25_5 -> m25_7  [color=red, key=0, style=solid];
m25_6 -> m25_7  [color=red, key=0, style=solid];
m25_6 -> m25_9  [color=red, key=2, style=dotted];
m25_7 -> m25_2  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [color=red, key=0, style=solid];
m25_10 -> m25_13  [color=red, key=1, label=string, style=dashed];
m25_10 -> m25_12  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m25_10 -> m25_14  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m25_11 -> m25_12  [color=red, key=0, style=solid];
m25_11 -> m25_13  [color=red, key=0, style=solid];
m25_13 -> m25_14  [color=red, key=0, style=solid];
m25_13 -> m25_16  [color=red, key=2, style=dotted];
m25_12 -> m25_15  [color=red, key=0, style=solid];
m25_14 -> m25_15  [color=red, key=0, style=solid];
m25_15 -> m25_10  [color=blue, key=0, style=bold];
m25_17 -> m25_3  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_4  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_5  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_6  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_11  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_13  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_3  [key=2, style=dotted];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_7  [key=2, style=dotted];
m26_10 -> m26_8  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=2, style=dotted];
m26_6 -> m26_4  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [color=green, key=0, style=solid];
m26_15 -> m26_16  [color=green, key=0, style=solid];
m26_15 -> m26_17  [color=green, key=2, style=dotted];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_6 -> m27_7  [color=red, key=0, style=solid];
m27_6 -> m27_17  [color=red, key=2, style=dotted];
m27_6 -> d12  [color=red, key=2, style=dotted];
m27_2 -> m27_6  [color=red, key=1, label=appOptions, style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_13  [key=2, style=dotted];
m27_2 -> m27_4  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m27_5 -> m27_6  [color=red, key=0, style=solid];
m27_5 -> m27_17  [color=red, key=2, style=dotted];
m27_5 -> m27_18  [color=red, key=2, style=dotted];
m27_7 -> m27_10  [color=red, key=1, label=plugInXOptions, style=dashed];
m27_7 -> m27_11  [color=red, key=1, label=plugInXOptions, style=dashed];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_20  [key=2, style=dotted];
m27_4 -> m27_5  [color=red, key=0, style=solid];
m27_4 -> m27_16  [key=2, style=dotted];
m27_10 -> m27_11  [color=red, key=0, style=solid];
m27_10 -> m27_17  [color=red, key=2, style=dotted];
m27_10 -> d12  [color=red, key=2, style=dotted];
m27_9 -> m27_10  [color=red, key=0, style=solid];
m27_9 -> m27_17  [color=red, key=2, style=dotted];
m27_9 -> m27_18  [color=red, key=2, style=dotted];
m27_11 -> m27_12  [color=red, key=0, style=solid];
m27_11 -> m27_17  [color=red, key=2, style=dotted];
m27_11 -> d12  [color=red, key=2, style=dotted];
m27_8 -> m27_9  [color=red, key=0, style=solid];
m27_8 -> m27_16  [key=2, style=dotted];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label=args, style=dashed];
m27_1 -> m27_8  [color=darkseagreen4, key=1, label=args, style=dashed];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_8  [color=darkseagreen4, key=1, label=parser, style=dashed];
m27_3 -> m27_14  [key=2, style=dotted];
m27_3 -> m27_15  [key=2, style=dotted];
m27_12 -> m27_0  [color=blue, key=0, style=bold];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_3 -> m28_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [key=0, style=solid];
m28_6 -> m28_11  [key=2, style=dotted];
m28_8 -> m28_9  [key=0, style=solid];
m28_5 -> m28_9  [key=0, style=solid];
m28_5 -> m28_10  [key=2, style=dotted];
m28_7 -> m28_9  [key=0, style=solid];
m28_7 -> m28_12  [key=2, style=dotted];
m28_9 -> m28_3  [color=blue, key=0, style=bold];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_16  [color=darkorchid, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_34  [key=2, style=dotted];
m28_26 -> m28_29  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_26 -> m28_31  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_29  [key=0, style=solid];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_31  [key=0, style=solid];
m28_31 -> m28_32  [key=0, style=solid];
m28_28 -> m28_33  [key=0, style=solid];
m28_30 -> m28_33  [key=0, style=solid];
m28_30 -> m28_35  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_33 -> m28_25  [color=blue, key=0, style=bold];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_16  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
m28_14 -> m28_15  [key=0, style=solid];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_21  [key=2, style=dotted];
m28_15 -> m28_18  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
m28_15 -> m28_19  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_22  [key=2, style=dotted];
m28_18 -> m28_23  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_24  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_18  [key=0, style=solid];
m28_17 -> m28_20  [key=0, style=solid];
m28_20 -> m28_13  [color=blue, key=0, style=bold];
m28_21 -> m28_36  [key=0, style=solid];
m28_21 -> m28_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_21 -> m28_13  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m28_21 -> m28_14  [color=darkorchid, key=3, label="Parameter variable System.Type concreteType", style=bold];
m28_21 -> m28_16  [color=darkorchid, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
m28_36 -> m28_37  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_34  [key=2, style=dotted];
m28_37 -> m28_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_40  [key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_42  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
m28_39 -> m28_45  [key=0, style=solid];
m28_41 -> m28_45  [key=0, style=solid];
m28_41 -> m28_35  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_45  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m28_44 -> m28_45  [key=0, style=solid];
m28_45 -> m28_21  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m28_46 -> m28_1  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m28_46 -> m28_8  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m29_27 -> m29_28  [color=green, key=0, style=solid];
m29_28 -> m29_29  [color=green, key=0, style=solid];
m29_28 -> m29_22  [color=green, key=2, style=dotted];
m29_28 -> m29_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_23  [key=2, style=dotted];
m29_29 -> m29_31  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_29 -> m29_32  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_33 -> m29_34  [key=0, style=solid];
m29_33 -> m29_36  [key=2, style=dotted];
m29_30 -> m29_31  [key=0, style=solid];
m29_30 -> m29_35  [key=2, style=dotted];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_35  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_35  [key=2, style=dotted];
m29_34 -> m29_27  [color=blue, key=0, style=bold];
m29_4 -> m29_5  [color=red, key=0, style=solid];
m29_5 -> m29_6  [color=red, key=0, style=solid];
m29_5 -> m29_3  [color=red, key=2, style=dotted];
m29_5 -> m29_7  [color=red, key=2, style=dotted];
m29_5 -> m29_8  [color=red, key=2, style=dotted];
m29_6 -> m29_4  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=red, key=0, style=solid];
m29_1 -> m29_2  [color=red, key=0, style=solid];
m29_1 -> m29_3  [color=red, key=2, style=dotted];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_12 -> m29_13  [color=green, key=0, style=solid];
m29_13 -> m29_14  [color=green, key=0, style=solid];
m29_13 -> m29_3  [color=green, key=2, style=dotted];
m29_13 -> m29_15  [color=green, key=2, style=dotted];
m29_13 -> m29_8  [color=green, key=2, style=dotted];
m29_14 -> m29_12  [color=blue, key=0, style=bold];
m29_16 -> m29_17  [color=green, key=0, style=solid];
m29_17 -> m29_18  [color=green, key=0, style=solid];
m29_17 -> m29_22  [color=green, key=2, style=dotted];
m29_18 -> m29_19  [color=red, key=0, style=solid];
m29_18 -> m29_23  [key=2, style=dotted];
m29_18 -> m29_20  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_19 -> m29_20  [color=red, key=0, style=solid];
m29_19 -> d11  [color=red, key=2, style=dotted];
m29_19 -> m29_25  [color=red, key=2, style=dotted];
m29_20 -> m29_21  [color=red, key=0, style=solid];
m29_20 -> m29_8  [color=red, key=2, style=dotted];
m29_20 -> d11  [color=red, key=2, style=dotted];
m29_20 -> m29_26  [color=red, key=2, style=dotted];
m29_21 -> m29_16  [color=blue, key=0, style=bold];
m29_9 -> m29_10  [color=green, key=0, style=solid];
m29_10 -> m29_11  [color=green, key=0, style=solid];
m29_10 -> m29_3  [color=green, key=2, style=dotted];
m29_10 -> m29_7  [color=green, key=2, style=dotted];
m29_10 -> m29_8  [color=green, key=2, style=dotted];
m29_11 -> m29_9  [color=blue, key=0, style=bold];
m29_37 -> m29_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m30_38 -> m30_39  [color=green, key=0, style=solid];
m30_38 -> m30_34  [color=blue, key=0, style=bold];
m30_39 -> m30_40  [color=green, key=0, style=solid];
m30_39 -> m30_45  [color=green, key=2, style=dotted];
m30_39 -> m30_42  [color=green, key=1, label=options, style=dashed];
m30_39 -> m30_43  [color=green, key=1, label=options, style=dashed];
m30_40 -> m30_41  [color=green, key=0, style=solid];
m30_40 -> m30_14  [color=green, key=2, style=dotted];
m30_42 -> m30_43  [color=red, key=0, style=solid];
m30_42 -> d11  [color=green, key=2, style=dotted];
m30_42 -> m30_48  [color=green, key=2, style=dotted];
m30_42 -> m30_14  [color=red, key=2, style=dotted];
m30_43 -> m30_44  [color=red, key=0, style=solid];
m30_43 -> m30_19  [color=green, key=2, style=dotted];
m30_43 -> m30_15  [color=red, key=2, style=dotted];
m30_41 -> m30_42  [color=red, key=0, style=solid];
m30_41 -> m30_15  [key=2, style=dotted];
m30_41 -> m30_47  [key=2, style=dotted];
m30_41 -> m30_44  [color=red, key=1, label=options, style=dashed];
m30_41 -> m30_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_44 -> m30_38  [color=blue, key=0, style=bold];
m30_44 -> m30_45  [color=red, key=0, style=solid];
m30_44 -> d11  [color=red, key=2, style=dotted];
m30_44 -> m30_48  [color=red, key=2, style=dotted];
m30_18 -> m30_19  [key=0, style=solid];
m30_22 -> m30_23  [color=red, key=0, style=solid];
m30_22 -> d11  [color=green, key=2, style=dotted];
m30_22 -> m30_17  [color=green, key=2, style=dotted];
m30_22 -> m30_14  [color=red, key=2, style=dotted];
m30_19 -> m30_22  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_23  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_24  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_25  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_26  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_27  [color=green, key=1, label=options, style=dashed];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_29  [key=2, style=dotted];
m30_21 -> m30_22  [color=red, key=0, style=solid];
m30_21 -> m30_15  [color=green, key=2, style=dotted];
m30_21 -> m30_31  [key=2, style=dotted];
m30_21 -> m30_24  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_25  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_26  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_27  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_28  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_23 -> m30_24  [color=red, key=0, style=solid];
m30_23 -> d11  [color=green, key=2, style=dotted];
m30_23 -> m30_17  [color=green, key=2, style=dotted];
m30_23 -> m30_15  [color=red, key=2, style=dotted];
m30_24 -> m30_25  [color=red, key=0, style=solid];
m30_24 -> d11  [color=red, key=2, style=dotted];
m30_24 -> m30_17  [color=red, key=2, style=dotted];
m30_25 -> m30_26  [color=red, key=0, style=solid];
m30_25 -> d11  [color=red, key=2, style=dotted];
m30_25 -> m30_32  [color=green, key=2, style=dotted];
m30_25 -> m30_17  [color=red, key=2, style=dotted];
m30_26 -> m30_27  [color=red, key=0, style=solid];
m30_26 -> d11  [color=red, key=2, style=dotted];
m30_26 -> m30_33  [color=green, key=2, style=dotted];
m30_26 -> m30_17  [color=red, key=2, style=dotted];
m30_27 -> m30_28  [color=red, key=0, style=solid];
m30_27 -> m30_19  [color=green, key=2, style=dotted];
m30_27 -> d11  [color=red, key=2, style=dotted];
m30_27 -> m30_32  [color=red, key=2, style=dotted];
m30_20 -> m30_21  [color=green, key=0, style=solid];
m30_20 -> m30_14  [key=2, style=dotted];
m30_28 -> m30_18  [color=blue, key=0, style=bold];
m30_28 -> m30_29  [color=red, key=0, style=solid];
m30_28 -> d11  [color=red, key=2, style=dotted];
m30_28 -> m30_33  [color=red, key=2, style=dotted];
m30_47 -> m30_48  [key=0, style=solid];
m30_49 -> m30_50  [color=green, key=0, style=solid];
m30_49 -> m30_14  [color=green, key=2, style=dotted];
m30_48 -> m30_49  [color=green, key=0, style=solid];
m30_48 -> m30_45  [key=2, style=dotted];
m30_50 -> m30_51  [color=red, key=0, style=solid];
m30_50 -> m30_39  [key=2, style=dotted];
m30_50 -> m30_47  [key=2, style=dotted];
m30_51 -> m30_47  [color=blue, key=0, style=bold];
m30_51 -> m30_52  [color=red, key=0, style=solid];
m30_51 -> m30_14  [color=red, key=2, style=dotted];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [color=blue, key=0, style=bold];
m30_1 -> m30_2  [color=green, key=0, style=solid];
m30_1 -> m30_4  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_5  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_6  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_7  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_8  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_9  [color=green, key=1, label=options, style=dashed];
m30_1 -> m30_13  [key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_19  [key=2, style=dotted];
m30_30 -> m30_20  [color=blue, key=0, style=bold];
m30_2 -> m30_3  [color=green, key=0, style=solid];
m30_2 -> m30_14  [color=green, key=2, style=dotted];
m30_3 -> m30_4  [color=red, key=0, style=solid];
m30_3 -> m30_15  [key=2, style=dotted];
m30_3 -> m30_13  [key=2, style=dotted];
m30_3 -> m30_6  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_7  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_8  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_9  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_10  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_4 -> m30_5  [color=red, key=0, style=solid];
m30_4 -> d11  [color=green, key=2, style=dotted];
m30_4 -> m30_17  [color=green, key=2, style=dotted];
m30_4 -> m30_14  [color=red, key=2, style=dotted];
m30_5 -> m30_6  [color=red, key=0, style=solid];
m30_5 -> d11  [color=green, key=2, style=dotted];
m30_5 -> m30_17  [color=green, key=2, style=dotted];
m30_5 -> m30_15  [color=red, key=2, style=dotted];
m30_6 -> m30_7  [color=red, key=0, style=solid];
m30_6 -> d11  [color=red, key=2, style=dotted];
m30_6 -> m30_17  [color=red, key=2, style=dotted];
m30_7 -> m30_8  [color=red, key=0, style=solid];
m30_7 -> d11  [color=red, key=2, style=dotted];
m30_7 -> m30_17  [color=red, key=2, style=dotted];
m30_8 -> m30_9  [color=red, key=0, style=solid];
m30_8 -> d11  [color=red, key=2, style=dotted];
m30_8 -> m30_18  [color=green, key=2, style=dotted];
m30_8 -> m30_17  [color=red, key=2, style=dotted];
m30_9 -> m30_10  [color=red, key=0, style=solid];
m30_9 -> m30_19  [color=green, key=2, style=dotted];
m30_9 -> d11  [color=red, key=2, style=dotted];
m30_9 -> m30_17  [color=red, key=2, style=dotted];
m30_10 -> m30_0  [color=blue, key=0, style=bold];
m30_10 -> m30_11  [color=red, key=0, style=solid];
m30_10 -> d11  [color=red, key=2, style=dotted];
m30_10 -> m30_18  [color=red, key=2, style=dotted];
m30_32 -> m30_33  [color=green, key=0, style=solid];
m30_52 -> m30_53  [color=red, key=0, style=solid];
m30_52 -> m30_39  [color=red, key=2, style=dotted];
m30_53 -> m30_49  [color=blue, key=0, style=bold];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_19  [key=2, style=dotted];
m30_12 -> m30_2  [color=blue, key=0, style=bold];
m30_33 -> m30_34  [color=green, key=0, style=solid];
m30_33 -> m30_29  [color=green, key=2, style=dotted];
m30_34 -> m30_35  [color=green, key=0, style=solid];
m30_34 -> m30_14  [key=2, style=dotted];
m30_35 -> m30_36  [color=green, key=0, style=solid];
m30_35 -> m30_31  [key=2, style=dotted];
m30_35 -> m30_39  [color=green, key=2, style=dotted];
m30_36 -> m30_37  [color=red, key=0, style=solid];
m30_36 -> m30_14  [color=red, key=2, style=dotted];
m30_36 -> m30_32  [color=blue, key=0, style=bold];
m30_37 -> m30_38  [color=red, key=0, style=solid];
m30_37 -> m30_39  [color=red, key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_19  [key=2, style=dotted];
m30_46 -> m30_40  [color=blue, key=0, style=bold];
m30_54 -> m30_4  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_5  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_22  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_23  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_36  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_37  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_42  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_43  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_51  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_52  [color=red, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_2  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_21  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_35  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_40  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_49  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_50  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m31_8 -> m31_33  [color=green, key=0, style=solid];
m31_33 -> m31_34  [color=green, key=0, style=solid];
m31_33 -> m31_35  [color=green, key=2, style=dotted];
m31_34 -> m31_8  [color=blue, key=0, style=bold];
m31_16 -> m31_17  [color=green, key=0, style=solid];
m31_16 -> m31_20  [color=green, key=1, label=string, style=dashed];
m31_16 -> m31_21  [color=green, key=1, label=string, style=dashed];
m31_17 -> m31_18  [color=green, key=0, style=solid];
m31_17 -> m31_21  [color=green, key=0, style=solid];
m31_18 -> m31_19  [color=green, key=0, style=solid];
m31_21 -> m31_22  [color=green, key=0, style=solid];
m31_21 -> m31_9  [color=green, key=2, style=dotted];
m31_20 -> m31_22  [color=green, key=0, style=solid];
m31_20 -> m31_24  [color=green, key=2, style=dotted];
m31_20 -> m31_25  [color=green, key=2, style=dotted];
m31_20 -> m31_26  [color=green, key=2, style=dotted];
m31_19 -> m31_20  [color=green, key=0, style=solid];
m31_19 -> m31_23  [color=green, key=2, style=dotted];
m31_22 -> m31_16  [color=blue, key=0, style=bold];
m31_2 -> m31_3  [color=green, key=0, style=solid];
m31_3 -> m31_4  [color=green, key=0, style=solid];
m31_4 -> m31_5  [color=green, key=0, style=solid];
m31_4 -> m31_7  [color=green, key=2, style=dotted];
m31_5 -> m31_6  [color=green, key=0, style=solid];
m31_5 -> m31_8  [color=green, key=2, style=dotted];
m31_6 -> m31_2  [color=blue, key=0, style=bold];
m31_7 -> m31_27  [color=green, key=0, style=solid];
m31_27 -> m31_28  [color=green, key=0, style=solid];
m31_27 -> m31_31  [color=green, key=2, style=dotted];
m31_28 -> m31_29  [color=green, key=0, style=solid];
m31_28 -> m31_30  [color=green, key=0, style=solid];
m31_29 -> m31_30  [color=green, key=0, style=solid];
m31_29 -> m31_32  [color=green, key=2, style=dotted];
m31_30 -> m31_7  [color=blue, key=0, style=bold];
m31_9 -> m31_10  [color=green, key=0, style=solid];
m31_9 -> m31_12  [color=green, key=1, label=string, style=dashed];
m31_9 -> m31_11  [color=green, key=3, label="method methodReturn bool AddValueItem", style=bold];
m31_9 -> m31_13  [color=green, key=3, label="method methodReturn bool AddValueItem", style=bold];
m31_9 -> m31_16  [color=darkorchid, key=3, label="Parameter variable string item", style=bold];
m31_10 -> m31_11  [color=green, key=0, style=solid];
m31_10 -> m31_12  [color=green, key=0, style=solid];
m31_11 -> m31_14  [color=green, key=0, style=solid];
m31_12 -> m31_13  [color=green, key=0, style=solid];
m31_12 -> m31_15  [color=green, key=2, style=dotted];
m31_13 -> m31_14  [color=green, key=0, style=solid];
m31_14 -> m31_9  [color=blue, key=0, style=bold];
m31_36 -> m31_3  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_4  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_5  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_10  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_12  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_17  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_20  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_21  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_18  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_27  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_28  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_29  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m31_36 -> m31_33  [color=green, key=1, label="CommandLine.Internal.ValueMapper", style=dashed];
m32_38 -> m32_39  [color=green, key=0, style=solid];
m32_39 -> m32_40  [color=green, key=0, style=solid];
m32_39 -> m32_37  [color=green, key=2, style=dotted];
m32_40 -> m32_41  [color=green, key=0, style=solid];
m32_40 -> m32_11  [color=green, key=2, style=dotted];
m32_41 -> m32_42  [color=green, key=0, style=solid];
m32_41 -> m32_43  [color=green, key=2, style=dotted];
m32_42 -> m32_38  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [color=green, key=0, style=solid];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_1 -> m32_10  [color=green, key=2, style=dotted];
m32_1 -> m32_4  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_5  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_6  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_7  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_8  [color=green, key=1, label=options, style=dashed];
m32_2 -> m32_3  [color=green, key=0, style=solid];
m32_2 -> m32_11  [color=green, key=2, style=dotted];
m32_4 -> m32_5  [color=green, key=0, style=solid];
m32_4 -> m32_13  [color=green, key=2, style=dotted];
m32_4 -> m32_14  [color=green, key=2, style=dotted];
m32_5 -> m32_6  [color=green, key=0, style=solid];
m32_5 -> m32_13  [color=green, key=2, style=dotted];
m32_5 -> d12  [color=green, key=2, style=dotted];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_13  [color=green, key=2, style=dotted];
m32_6 -> d12  [color=green, key=2, style=dotted];
m32_7 -> m32_8  [color=green, key=0, style=solid];
m32_7 -> m32_13  [color=green, key=2, style=dotted];
m32_7 -> d12  [color=green, key=2, style=dotted];
m32_8 -> m32_9  [color=green, key=0, style=solid];
m32_8 -> m32_13  [color=green, key=2, style=dotted];
m32_8 -> d12  [color=green, key=2, style=dotted];
m32_3 -> m32_4  [color=green, key=0, style=solid];
m32_3 -> m32_12  [color=green, key=2, style=dotted];
m32_9 -> m32_0  [color=blue, key=0, style=bold];
m32_16 -> m32_17  [color=green, key=0, style=solid];
m32_17 -> m32_18  [color=green, key=0, style=solid];
m32_17 -> m32_10  [color=green, key=2, style=dotted];
m32_17 -> m32_20  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_21  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_22  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_23  [color=green, key=1, label=options, style=dashed];
m32_18 -> m32_19  [color=green, key=0, style=solid];
m32_18 -> m32_11  [color=green, key=2, style=dotted];
m32_20 -> m32_21  [color=green, key=0, style=solid];
m32_20 -> m32_13  [color=green, key=2, style=dotted];
m32_20 -> m32_14  [color=green, key=2, style=dotted];
m32_21 -> m32_22  [color=green, key=0, style=solid];
m32_21 -> m32_13  [color=green, key=2, style=dotted];
m32_21 -> m32_25  [color=green, key=2, style=dotted];
m32_22 -> m32_23  [color=green, key=0, style=solid];
m32_22 -> m32_13  [color=green, key=2, style=dotted];
m32_22 -> d12  [color=green, key=2, style=dotted];
m32_23 -> m32_24  [color=green, key=0, style=solid];
m32_23 -> m32_13  [color=green, key=2, style=dotted];
m32_23 -> m32_25  [color=green, key=2, style=dotted];
m32_19 -> m32_20  [color=green, key=0, style=solid];
m32_19 -> m32_12  [color=green, key=2, style=dotted];
m32_24 -> m32_16  [color=blue, key=0, style=bold];
m32_26 -> m32_27  [color=green, key=0, style=solid];
m32_27 -> m32_28  [color=green, key=0, style=solid];
m32_27 -> m32_37  [color=green, key=2, style=dotted];
m32_27 -> m32_30  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_31  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_32  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_33  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_34  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_35  [color=green, key=1, label=options, style=dashed];
m32_28 -> m32_29  [color=green, key=0, style=solid];
m32_28 -> m32_11  [color=green, key=2, style=dotted];
m32_30 -> m32_31  [color=green, key=0, style=solid];
m32_30 -> m32_13  [color=green, key=2, style=dotted];
m32_30 -> d12  [color=green, key=2, style=dotted];
m32_31 -> m32_32  [color=green, key=0, style=solid];
m32_31 -> m32_13  [color=green, key=2, style=dotted];
m32_31 -> d12  [color=green, key=2, style=dotted];
m32_32 -> m32_33  [color=green, key=0, style=solid];
m32_32 -> m32_13  [color=green, key=2, style=dotted];
m32_32 -> d12  [color=green, key=2, style=dotted];
m32_33 -> m32_34  [color=green, key=0, style=solid];
m32_33 -> m32_13  [color=green, key=2, style=dotted];
m32_33 -> d12  [color=green, key=2, style=dotted];
m32_34 -> m32_35  [color=green, key=0, style=solid];
m32_34 -> m32_13  [color=green, key=2, style=dotted];
m32_34 -> d12  [color=green, key=2, style=dotted];
m32_35 -> m32_36  [color=green, key=0, style=solid];
m32_35 -> m32_13  [color=green, key=2, style=dotted];
m32_35 -> d12  [color=green, key=2, style=dotted];
m32_29 -> m32_30  [color=green, key=0, style=solid];
m32_29 -> m32_12  [color=green, key=2, style=dotted];
m32_36 -> m32_26  [color=blue, key=0, style=bold];
m32_44 -> m32_2  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_3  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_18  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_19  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_28  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_29  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_40  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_41  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m33_24 -> m33_26  [color=green, key=1, label=options, style=dashed];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_13  [key=2, style=dotted];
m33_24 -> m33_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_24 -> m33_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_24 -> m33_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_37 -> m33_38  [color=green, key=0, style=solid];
m33_37 -> m33_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m33_38 -> m33_39  [color=green, key=0, style=solid];
m33_38 -> m33_13  [color=green, key=2, style=dotted];
m33_38 -> m33_40  [color=green, key=1, label=options, style=dashed];
m33_39 -> m33_45  [color=green, key=1, label=testWriter, style=dashed];
m33_39 -> m33_40  [key=0, style=solid];
m33_39 -> m33_48  [key=2, style=dotted];
m33_40 -> m33_41  [key=0, style=solid];
m33_40 -> m33_49  [key=2, style=dotted];
m33_45 -> m33_46  [color=green, key=0, style=solid];
m33_45 -> m33_51  [color=green, key=2, style=dotted];
m33_44 -> m33_45  [color=green, key=0, style=solid];
m33_44 -> m33_18  [color=green, key=2, style=dotted];
m33_44 -> d11  [color=green, key=2, style=dotted];
m33_44 -> m33_20  [color=green, key=2, style=dotted];
m33_46 -> m33_47  [color=green, key=0, style=solid];
m33_46 -> d11  [color=green, key=2, style=dotted];
m33_46 -> m33_21  [color=green, key=2, style=dotted];
m33_42 -> m33_43  [color=green, key=0, style=solid];
m33_42 -> m33_18  [color=green, key=2, style=dotted];
m33_42 -> d11  [color=green, key=2, style=dotted];
m33_42 -> m33_20  [color=green, key=2, style=dotted];
m33_41 -> m33_42  [color=green, key=0, style=solid];
m33_41 -> m33_50  [key=2, style=dotted];
m33_43 -> m33_44  [color=green, key=0, style=solid];
m33_43 -> d11  [key=2, style=dotted];
m33_43 -> m33_18  [key=2, style=dotted];
m33_43 -> m33_20  [key=2, style=dotted];
m33_47 -> m33_37  [color=blue, key=0, style=bold];
m33_4 -> m33_5  [color=red, key=0, style=solid];
m33_4 -> m33_17  [key=2, style=dotted];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_5 -> m33_3  [color=red, key=2, style=dotted];
m33_5 -> m33_7  [color=red, key=2, style=dotted];
m33_5 -> m33_8  [color=red, key=2, style=dotted];
m33_5 -> d11  [key=2, style=dotted];
m33_5 -> m33_19  [key=2, style=dotted];
m33_5 -> m33_18  [key=2, style=dotted];
m33_6 -> m33_4  [color=blue, key=0, style=bold];
m33_6 -> m33_7  [color=green, key=0, style=solid];
m33_6 -> m33_18  [color=green, key=2, style=dotted];
m33_6 -> d11  [color=green, key=2, style=dotted];
m33_6 -> m33_20  [color=green, key=2, style=dotted];
m33_19 -> m33_20  [color=red, key=0, style=solid];
m33_19 -> m33_24  [color=red, key=2, style=dotted];
m33_19 -> m33_25  [color=red, key=2, style=dotted];
m33_52 -> m33_53  [key=0, style=solid];
m33_54 -> m33_55  [color=green, key=0, style=solid];
m33_54 -> m33_48  [color=green, key=2, style=dotted];
m33_54 -> m33_60  [color=green, key=1, label=testWriter, style=dashed];
m33_53 -> m33_54  [color=green, key=0, style=solid];
m33_53 -> m33_55  [color=green, key=1, label=options, style=dashed];
m33_53 -> m33_13  [key=2, style=dotted];
m33_55 -> m33_56  [color=green, key=0, style=solid];
m33_55 -> m33_49  [color=green, key=2, style=dotted];
m33_60 -> m33_61  [color=green, key=0, style=solid];
m33_60 -> m33_51  [key=2, style=dotted];
m33_56 -> m33_57  [key=0, style=solid];
m33_56 -> m33_50  [key=2, style=dotted];
m33_58 -> m33_59  [color=green, key=0, style=solid];
m33_58 -> m33_18  [color=green, key=2, style=dotted];
m33_58 -> d11  [color=green, key=2, style=dotted];
m33_58 -> m33_20  [color=green, key=2, style=dotted];
m33_57 -> m33_58  [color=green, key=0, style=solid];
m33_57 -> d11  [key=2, style=dotted];
m33_57 -> m33_18  [key=2, style=dotted];
m33_57 -> m33_20  [key=2, style=dotted];
m33_59 -> m33_60  [color=green, key=0, style=solid];
m33_59 -> m33_18  [color=green, key=2, style=dotted];
m33_59 -> d11  [color=green, key=2, style=dotted];
m33_59 -> m33_19  [color=green, key=2, style=dotted];
m33_61 -> m33_62  [color=green, key=0, style=solid];
m33_61 -> d11  [color=green, key=2, style=dotted];
m33_61 -> m33_21  [color=green, key=2, style=dotted];
m33_62 -> m33_52  [color=blue, key=0, style=bold];
m33_18 -> m33_19  [color=red, key=0, style=solid];
m33_18 -> m33_23  [color=red, key=2, style=dotted];
m33_18 -> m33_20  [color=red, key=1, label=values, style=dashed];
m33_17 -> m33_18  [color=red, key=0, style=solid];
m33_17 -> m33_22  [key=2, style=dotted];
m33_3 -> m33_4  [color=green, key=0, style=solid];
m33_3 -> m33_16  [color=green, key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_27 -> m33_28  [color=green, key=0, style=solid];
m33_27 -> m33_16  [key=2, style=dotted];
m33_28 -> m33_29  [color=green, key=0, style=solid];
m33_28 -> m33_22  [key=2, style=dotted];
m33_28 -> m33_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_28 -> m33_17  [color=green, key=2, style=dotted];
m33_29 -> m33_30  [color=green, key=0, style=solid];
m33_29 -> m33_23  [color=red, key=2, style=dotted];
m33_29 -> m33_31  [color=red, key=1, label=values, style=dashed];
m33_29 -> m33_32  [color=red, key=1, label=values, style=dashed];
m33_29 -> m33_18  [color=green, key=2, style=dotted];
m33_29 -> d11  [color=green, key=2, style=dotted];
m33_29 -> m33_20  [color=green, key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_36  [key=2, style=dotted];
m33_33 -> d11  [key=2, style=dotted];
m33_33 -> m33_19  [key=2, style=dotted];
m33_30 -> m33_31  [color=green, key=0, style=solid];
m33_30 -> m33_35  [color=red, key=2, style=dotted];
m33_30 -> d11  [key=2, style=dotted];
m33_30 -> m33_19  [key=2, style=dotted];
m33_30 -> m33_18  [key=2, style=dotted];
m33_31 -> m33_32  [color=green, key=0, style=solid];
m33_31 -> m33_35  [key=2, style=dotted];
m33_31 -> m33_18  [color=green, key=2, style=dotted];
m33_31 -> d11  [color=green, key=2, style=dotted];
m33_31 -> m33_20  [color=green, key=2, style=dotted];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_35  [key=2, style=dotted];
m33_32 -> d11  [key=2, style=dotted];
m33_32 -> m33_21  [key=2, style=dotted];
m33_34 -> m33_27  [color=blue, key=0, style=bold];
m33_34 -> m33_22  [color=blue, key=0, style=bold];
m33_8 -> m33_9  [color=green, key=0, style=solid];
m33_8 -> d11  [key=2, style=dotted];
m33_8 -> m33_25  [key=2, style=dotted];
m33_25 -> m33_26  [color=green, key=0, style=solid];
m33_25 -> d11  [key=2, style=dotted];
m33_25 -> m33_25  [key=2, style=dotted];
m33_0 -> m33_1  [color=red, key=0, style=solid];
m33_2 -> m33_3  [color=green, key=0, style=solid];
m33_2 -> d11  [color=green, key=2, style=dotted];
m33_2 -> m33_25  [color=green, key=2, style=dotted];
m33_2 -> m33_0  [color=blue, key=0, style=bold];
m33_1 -> m33_2  [color=red, key=0, style=solid];
m33_1 -> m33_3  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_9  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_10  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_11  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_13  [key=2, style=dotted];
m33_1 -> m33_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_9 -> m33_10  [color=green, key=0, style=solid];
m33_9 -> d11  [color=green, key=2, style=dotted];
m33_9 -> m33_25  [color=green, key=2, style=dotted];
m33_10 -> m33_11  [color=green, key=0, style=solid];
m33_10 -> d11  [color=green, key=2, style=dotted];
m33_10 -> m33_19  [color=green, key=2, style=dotted];
m33_10 -> m33_3  [key=2, style=dotted];
m33_10 -> m33_7  [key=2, style=dotted];
m33_10 -> m33_8  [key=2, style=dotted];
m33_11 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> d11  [color=green, key=2, style=dotted];
m33_11 -> m33_21  [color=green, key=2, style=dotted];
m33_11 -> m33_9  [color=blue, key=0, style=bold];
m33_7 -> m33_8  [color=green, key=0, style=solid];
m33_7 -> m33_18  [color=green, key=2, style=dotted];
m33_7 -> d11  [color=green, key=2, style=dotted];
m33_7 -> m33_20  [color=green, key=2, style=dotted];
m33_12 -> m33_0  [color=blue, key=0, style=bold];
m33_12 -> m33_13  [color=red, key=0, style=solid];
m33_16 -> m33_17  [key=0, style=solid];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_8  [key=2, style=dotted];
m33_20 -> m33_24  [key=2, style=dotted];
m33_20 -> m33_26  [key=2, style=dotted];
m33_21 -> m33_16  [color=blue, key=0, style=bold];
m33_13 -> m33_14  [color=red, key=0, style=solid];
m33_13 -> m33_3  [color=red, key=2, style=dotted];
m33_13 -> m33_15  [color=red, key=2, style=dotted];
m33_13 -> m33_8  [color=red, key=2, style=dotted];
m33_26 -> m33_27  [color=green, key=0, style=solid];
m33_23 -> m33_26  [color=green, key=1, label=proof, style=dashed];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_35  [key=2, style=dotted];
m33_23 -> m33_36  [key=2, style=dotted];
m33_23 -> m33_32  [color=darkseagreen4, key=1, label=proof, style=dashed];
m33_71 -> m33_72  [color=green, key=0, style=solid];
m33_72 -> m33_73  [color=green, key=0, style=solid];
m33_72 -> m33_13  [color=green, key=2, style=dotted];
m33_73 -> m33_74  [color=green, key=0, style=solid];
m33_73 -> m33_16  [color=green, key=2, style=dotted];
m33_74 -> m33_75  [color=green, key=0, style=solid];
m33_74 -> m33_17  [key=2, style=dotted];
m33_75 -> m33_76  [color=green, key=0, style=solid];
m33_75 -> m33_18  [color=green, key=2, style=dotted];
m33_75 -> d11  [color=green, key=2, style=dotted];
m33_75 -> m33_20  [color=green, key=2, style=dotted];
m33_76 -> m33_77  [color=green, key=0, style=solid];
m33_76 -> m33_18  [color=green, key=2, style=dotted];
m33_76 -> d11  [color=green, key=2, style=dotted];
m33_76 -> m33_20  [color=green, key=2, style=dotted];
m33_77 -> m33_71  [color=blue, key=0, style=bold];
m33_14 -> m33_12  [color=blue, key=0, style=bold];
m33_78 -> m33_79  [key=0, style=solid];
m33_80 -> m33_81  [color=green, key=0, style=solid];
m33_80 -> m33_16  [color=green, key=2, style=dotted];
m33_79 -> m33_80  [color=green, key=0, style=solid];
m33_79 -> m33_13  [key=2, style=dotted];
m33_81 -> m33_82  [color=green, key=0, style=solid];
m33_81 -> m33_17  [color=green, key=2, style=dotted];
m33_82 -> d11  [key=2, style=dotted];
m33_82 -> m33_18  [key=2, style=dotted];
m33_82 -> m33_20  [key=2, style=dotted];
m33_82 -> m33_83  [key=0, style=solid];
m33_84 -> m33_85  [color=green, key=0, style=solid];
m33_84 -> m33_18  [color=green, key=2, style=dotted];
m33_84 -> d11  [color=green, key=2, style=dotted];
m33_84 -> m33_20  [color=green, key=2, style=dotted];
m33_83 -> m33_84  [color=green, key=0, style=solid];
m33_83 -> d11  [key=2, style=dotted];
m33_83 -> m33_18  [key=2, style=dotted];
m33_83 -> m33_20  [key=2, style=dotted];
m33_85 -> m33_86  [color=green, key=0, style=solid];
m33_85 -> m33_18  [color=green, key=2, style=dotted];
m33_85 -> d11  [color=green, key=2, style=dotted];
m33_85 -> m33_20  [color=green, key=2, style=dotted];
m33_86 -> d11  [key=2, style=dotted];
m33_86 -> m33_18  [key=2, style=dotted];
m33_86 -> m33_20  [key=2, style=dotted];
m33_86 -> m33_87  [key=0, style=solid];
m33_87 -> d11  [key=2, style=dotted];
m33_87 -> m33_18  [key=2, style=dotted];
m33_87 -> m33_20  [key=2, style=dotted];
m33_87 -> m33_88  [key=0, style=solid];
m33_88 -> m33_78  [color=blue, key=0, style=bold];
m33_63 -> m33_64  [color=green, key=0, style=solid];
m33_64 -> m33_65  [color=green, key=0, style=solid];
m33_64 -> m33_13  [color=green, key=2, style=dotted];
m33_65 -> m33_66  [color=green, key=0, style=solid];
m33_65 -> m33_16  [key=2, style=dotted];
m33_66 -> m33_67  [color=green, key=0, style=solid];
m33_66 -> m33_50  [color=green, key=2, style=dotted];
m33_67 -> d11  [key=2, style=dotted];
m33_67 -> m33_18  [key=2, style=dotted];
m33_67 -> m33_20  [key=2, style=dotted];
m33_67 -> m33_68  [key=0, style=solid];
m33_68 -> d11  [key=2, style=dotted];
m33_68 -> m33_18  [key=2, style=dotted];
m33_68 -> m33_20  [key=2, style=dotted];
m33_68 -> m33_69  [key=0, style=solid];
m33_69 -> d11  [key=2, style=dotted];
m33_69 -> m33_18  [key=2, style=dotted];
m33_69 -> m33_20  [key=2, style=dotted];
m33_69 -> m33_70  [key=0, style=solid];
m33_70 -> m33_63  [color=blue, key=0, style=bold];
m33_89 -> m33_3  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_6  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_7  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_28  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_29  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_31  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_42  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_44  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_55  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_58  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_59  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_66  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_73  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_75  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_76  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_80  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_81  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_84  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_85  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_30  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_40  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_43  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_57  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_65  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_67  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_68  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_82  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_83  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_87  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_1 -> m34_3  [color=green, key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_3 -> m34_41  [key=0, style=solid];
m34_3 -> m34_43  [color=red, key=1, label="string[]", style=dashed];
m34_41 -> m34_42  [key=0, style=solid];
m34_41 -> m34_22  [key=2, style=dotted];
m34_41 -> m34_43  [color=darkseagreen4, key=1, label=options, style=dashed];
m34_43 -> m34_44  [color=red, key=0, style=solid];
m34_43 -> m34_24  [color=red, key=2, style=dotted];
m34_42 -> m34_43  [color=red, key=0, style=solid];
m34_42 -> m34_23  [key=2, style=dotted];
m34_42 -> m34_45  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_26  [key=2, style=dotted];
m34_45 -> m34_47  [color=green, key=1, label=helpText, style=dashed];
m34_44 -> m34_45  [color=red, key=0, style=solid];
m34_44 -> m34_25  [color=red, key=2, style=dotted];
m34_46 -> m34_47  [color=green, key=0, style=solid];
m34_46 -> m34_27  [key=2, style=dotted];
m34_47 -> m34_48  [color=green, key=0, style=solid];
m34_47 -> m34_28  [color=green, key=2, style=dotted];
m34_47 -> m34_49  [color=green, key=1, label=lines, style=dashed];
m34_47 -> m34_50  [color=green, key=1, label=lines, style=dashed];
m34_48 -> m34_49  [color=green, key=0, style=solid];
m34_48 -> m34_29  [color=green, key=2, style=dotted];
m34_48 -> d11  [color=green, key=2, style=dotted];
m34_48 -> m34_31  [color=green, key=2, style=dotted];
m34_49 -> m34_50  [color=green, key=0, style=solid];
m34_49 -> m34_29  [color=red, key=2, style=dotted];
m34_49 -> d11  [color=red, key=2, style=dotted];
m34_49 -> m34_31  [color=red, key=2, style=dotted];
m34_50 -> m34_51  [color=green, key=0, style=solid];
m34_50 -> m34_29  [color=green, key=2, style=dotted];
m34_50 -> d11  [color=green, key=2, style=dotted];
m34_50 -> m34_31  [color=green, key=2, style=dotted];
m34_51 -> m34_3  [color=blue, key=0, style=bold];
m34_32 -> m34_33  [key=0, style=solid];
m34_33 -> m34_34  [color=green, key=0, style=solid];
m34_33 -> m34_22  [key=2, style=dotted];
m34_33 -> m34_35  [color=green, key=1, label=options, style=dashed];
m34_34 -> m34_35  [color=green, key=0, style=solid];
m34_34 -> m34_23  [color=green, key=2, style=dotted];
m34_34 -> m34_37  [color=green, key=1, label=testWriter, style=dashed];
m34_35 -> m34_36  [color=green, key=0, style=solid];
m34_35 -> m34_24  [color=green, key=2, style=dotted];
m34_37 -> m34_38  [color=green, key=0, style=solid];
m34_37 -> m34_26  [color=green, key=2, style=dotted];
m34_37 -> m34_39  [color=green, key=1, label=helpText, style=dashed];
m34_36 -> m34_37  [color=green, key=0, style=solid];
m34_36 -> m34_25  [color=red, key=2, style=dotted];
m34_38 -> m34_39  [color=green, key=0, style=solid];
m34_38 -> m34_27  [color=green, key=2, style=dotted];
m34_39 -> m34_40  [color=green, key=0, style=solid];
m34_39 -> m34_28  [color=green, key=2, style=dotted];
m34_40 -> m34_32  [color=blue, key=0, style=bold];
m34_4 -> m34_5  [color=green, key=0, style=solid];
m34_5 -> m34_6  [color=green, key=0, style=solid];
m34_5 -> m34_3  [color=green, key=2, style=dotted];
m34_6 -> m34_4  [color=blue, key=0, style=bold];
m34_7 -> m34_8  [color=green, key=0, style=solid];
m34_8 -> m34_9  [color=green, key=0, style=solid];
m34_8 -> m34_3  [color=green, key=2, style=dotted];
m34_9 -> m34_7  [color=blue, key=0, style=bold];
m34_10 -> m34_11  [color=green, key=0, style=solid];
m34_11 -> m34_12  [color=green, key=0, style=solid];
m34_11 -> m34_22  [color=green, key=2, style=dotted];
m34_11 -> m34_13  [color=green, key=1, label=options, style=dashed];
m34_12 -> m34_13  [color=red, key=0, style=solid];
m34_12 -> m34_23  [key=2, style=dotted];
m34_12 -> m34_15  [color=green, key=1, label=testWriter, style=dashed];
m34_13 -> m34_14  [color=green, key=0, style=solid];
m34_13 -> m34_24  [color=red, key=2, style=dotted];
m34_15 -> m34_16  [color=green, key=0, style=solid];
m34_15 -> m34_26  [color=green, key=2, style=dotted];
m34_15 -> m34_17  [color=green, key=1, label=helpText, style=dashed];
m34_14 -> m34_15  [color=green, key=0, style=solid];
m34_14 -> m34_25  [color=green, key=2, style=dotted];
m34_16 -> m34_17  [color=green, key=0, style=solid];
m34_16 -> m34_27  [key=2, style=dotted];
m34_17 -> m34_18  [color=green, key=0, style=solid];
m34_17 -> m34_28  [color=green, key=2, style=dotted];
m34_17 -> m34_19  [color=green, key=1, label=lines, style=dashed];
m34_17 -> m34_20  [color=green, key=1, label=lines, style=dashed];
m34_18 -> m34_19  [color=red, key=0, style=solid];
m34_18 -> m34_29  [color=red, key=2, style=dotted];
m34_18 -> d11  [color=red, key=2, style=dotted];
m34_18 -> m34_31  [color=red, key=2, style=dotted];
m34_19 -> m34_20  [color=red, key=0, style=solid];
m34_19 -> m34_29  [color=red, key=2, style=dotted];
m34_19 -> d11  [color=red, key=2, style=dotted];
m34_19 -> m34_31  [color=red, key=2, style=dotted];
m34_20 -> m34_21  [color=red, key=0, style=solid];
m34_20 -> m34_29  [color=red, key=2, style=dotted];
m34_20 -> d11  [color=red, key=2, style=dotted];
m34_20 -> m34_31  [color=red, key=2, style=dotted];
m34_21 -> m34_10  [color=blue, key=0, style=bold];
m34_52 -> m34_1  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_5  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_8  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_13  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_14  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_35  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_36  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_43  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_44  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
}
