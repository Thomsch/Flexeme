digraph  {
n14 [label="Ninject.Activation.IContext", span=""];
n15 [label="Ninject.Activation.InstanceReference", span=""];
n16 [label="Ninject.Activation.IContext", span=""];
n17 [label="Ninject.Activation.InstanceReference", span=""];
n0 [label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n1 [label="context.Binding.ActivationActions.Map(action => action(context, reference.Instance))", span="39-39", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n5 [label="action(context, reference.Instance)", span="39-39", cluster="lambda expression"];
n2 [label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="37-37", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Activate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n3 [label="Entry System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<T>.Map<T>(System.Action<T>)"];
n4 [label="Entry lambda expression", span="39-39", cluster="lambda expression"];
n6 [label="Exit lambda expression", span="39-39", cluster="lambda expression"];
n7 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)"];
n8 [label="Entry Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="47-47", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n9 [label="context.Binding.DeactivationActions.Map(action => action(context, reference.Instance))", span="49-49", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n12 [label="action(context, reference.Instance)", span="49-49", cluster="lambda expression"];
n10 [label="Exit Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="47-47", cluster="Ninject.Activation.Strategies.BindingActionStrategy.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)"];
n11 [label="Entry lambda expression", span="49-49", cluster="lambda expression"];
n13 [label="Exit lambda expression", span="49-49", cluster="lambda expression"];
d2 [label="this.stopsProcessing = stopsProcessing", span="82-82", cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)", color=green, community=0];
d94 [label="CommandLine.Error", span=""];
d0 [label="Entry CommandLine.Error.Error(CommandLine.ErrorType, bool)", span="79-79", cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)"];
d1 [label="this.tag = tag", span="81-81", cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)"];
d3 [label="Exit CommandLine.Error.Error(CommandLine.ErrorType, bool)", span="79-79", cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)"];
d5 [label="this.tag = tag", span="91-91", cluster="CommandLine.Error.Error(CommandLine.ErrorType)", color=green, community=0];
d4 [label="Entry CommandLine.Error.Error(CommandLine.ErrorType)", span="89-89", cluster="CommandLine.Error.Error(CommandLine.ErrorType)"];
d6 [label="Exit CommandLine.Error.Error(CommandLine.ErrorType)", span="89-89", cluster="CommandLine.Error.Error(CommandLine.ErrorType)"];
d10 [label="return Equals(other);", span="112-112", cluster="CommandLine.Error.Equals(object)"];
d11 [label="return base.Equals(obj);", span="115-115", cluster="CommandLine.Error.Equals(object)"];
d16 [label="return Tag.GetHashCode();", span="124-124", cluster="CommandLine.Error.GetHashCode()"];
d21 [label="return Tag.Equals(other.Tag);", span="139-139", cluster="CommandLine.Error.Equals(CommandLine.Error)"];
d8 [label="var other = obj as Error", span="109-109", cluster="CommandLine.Error.Equals(object)"];
d9 [label="other != null", span="110-110", cluster="CommandLine.Error.Equals(object)"];
d12 [label="Exit CommandLine.Error.Equals(object)", span="107-107", cluster="CommandLine.Error.Equals(object)"];
d13 [label="Entry CommandLine.Error.Equals(CommandLine.Error)", span="132-132", cluster="CommandLine.Error.Equals(CommandLine.Error)"];
d7 [label="Entry CommandLine.Error.Equals(object)", span="107-107", cluster="CommandLine.Error.Equals(object)"];
d14 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)"];
d15 [label="Entry CommandLine.Error.GetHashCode()", span="122-122", cluster="CommandLine.Error.GetHashCode()"];
d17 [label="Exit CommandLine.Error.GetHashCode()", span="122-122", cluster="CommandLine.Error.GetHashCode()"];
d18 [label="Entry System.Enum.GetHashCode()", span="0-0", cluster="System.Enum.GetHashCode()"];
d19 [label="other == null", span="134-134", cluster="CommandLine.Error.Equals(CommandLine.Error)"];
d22 [label="Exit CommandLine.Error.Equals(CommandLine.Error)", span="132-132", cluster="CommandLine.Error.Equals(CommandLine.Error)"];
d23 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)"];
d20 [label="return false;", span="136-136", cluster="CommandLine.Error.Equals(CommandLine.Error)"];
d30 [label="Entry CommandLine.TokenError.Equals(object)", span="171-171", cluster="CommandLine.TokenError.Equals(object)"];
d34 [label="return base.Equals(obj);", span="179-179", cluster="CommandLine.TokenError.Equals(object)"];
d51 [label="Entry CommandLine.NamedError.Equals(object)", span="244-244", cluster="CommandLine.NamedError.Equals(object)"];
d55 [label="return base.Equals(obj);", span="252-252", cluster="CommandLine.NamedError.Equals(object)"];
d37 [label="Entry CommandLine.TokenError.GetHashCode()", span="186-186", cluster="CommandLine.TokenError.GetHashCode()"];
d58 [label="Entry CommandLine.NamedError.GetHashCode()", span="259-259", cluster="CommandLine.NamedError.GetHashCode()"];
d43 [label="return Tag.Equals(other.Tag) && Token.Equals(other.Token);", span="203-203", cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)"];
d63 [label="return Tag.Equals(other.Tag) && NameInfo.Equals(other.NameInfo);", span="276-276", cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)"];
d36 [label="Entry CommandLine.TokenError.Equals(CommandLine.TokenError)", span="196-196", cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)"];
d57 [label="Entry CommandLine.NamedError.Equals(CommandLine.NamedError)", span="269-269", cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)"];
d35 [label="Exit CommandLine.TokenError.Equals(object)", span="171-171", cluster="CommandLine.TokenError.Equals(object)"];
d31 [label="var other = obj as TokenError", span="173-173", cluster="CommandLine.TokenError.Equals(object)"];
d95 [label="CommandLine.TokenError", span=""];
d32 [label="other != null", span="174-174", cluster="CommandLine.TokenError.Equals(object)"];
d56 [label="Exit CommandLine.NamedError.Equals(object)", span="244-244", cluster="CommandLine.NamedError.Equals(object)"];
d52 [label="var other = obj as NamedError", span="246-246", cluster="CommandLine.NamedError.Equals(object)"];
d96 [label="CommandLine.NamedError", span=""];
d53 [label="other != null", span="247-247", cluster="CommandLine.NamedError.Equals(object)"];
d39 [label="Exit CommandLine.TokenError.GetHashCode()", span="186-186", cluster="CommandLine.TokenError.GetHashCode()"];
d38 [label="return new {Tag, Token}.GetHashCode();", span="188-188", cluster="CommandLine.TokenError.GetHashCode()"];
d60 [label="Exit CommandLine.NamedError.GetHashCode()", span="259-259", cluster="CommandLine.NamedError.GetHashCode()"];
d59 [label="return new {Tag, NameInfo}.GetHashCode();", span="261-261", cluster="CommandLine.NamedError.GetHashCode()"];
d41 [label="other == null", span="198-198", cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)"];
d44 [label="Exit CommandLine.TokenError.Equals(CommandLine.TokenError)", span="196-196", cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)"];
d45 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)"];
d61 [label="other == null", span="271-271", cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)"];
d64 [label="Exit CommandLine.NamedError.Equals(CommandLine.NamedError)", span="269-269", cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)"];
d65 [label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90", cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)"];
d33 [label="return Equals(other);", span="176-176", cluster="CommandLine.TokenError.Equals(object)"];
d54 [label="return Equals(other);", span="249-249", cluster="CommandLine.NamedError.Equals(object)"];
d27 [label="this.token = token", span="155-155", cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)"];
d49 [label="this.nameInfo = nameInfo", span="228-228", cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)"];
d40 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
d42 [label="return false;", span="200-200", cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)"];
d62 [label="return false;", span="273-273", cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)"];
d24 [label="Entry CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="150-150", cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)"];
d25 [label="token == null", span="153-153", cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)"];
d28 [label="Exit CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="150-150", cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)"];
d48 [label="Entry CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="225-225", cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)"];
d50 [label="Exit CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="225-225", cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)"];
d26 [label="throw new ArgumentNullException(''token'');", span="153-153", cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)"];
d29 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
m2_50 [label="Entry Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", span="128-128", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_51 [label="var lockCookie = kernelRegistrationsLock.UpgradeToWriterLock(Timeout.Infinite)", span="130-130", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_53 [label="kernelRegistrations.TryGetValue(type, out registration)", span="134-134", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_56 [label="kernelRegistrations.Add(type, registration)", span="140-140", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_52 [label="Registration registration", span="133-133", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_54 [label="return registration;", span="136-136", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_55 [label="registration = new Registration()", span="139-139", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_57 [label="return registration;", span="141-141", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_58 [label="Exit Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", span="128-128", cluster="Ninject.GlobalKernelRegistration.CreateNewRegistration(System.Type)", file="ImmutableVerbFakes.cs"];
m2_65 [label="Entry System.Threading.ReaderWriterLock.ReaderWriterLock()", span="0-0", cluster="System.Threading.ReaderWriterLock.ReaderWriterLock()", file="ImmutableVerbFakes.cs"];
m2_18 [label="Entry Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", span="61-61", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_19 [label="bool requiresCleanup = false", span="63-63", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_25 [label="action(kernel)", span="74-74", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_20 [label="var registration = GetRegistrationForType(this.GetType())", span="64-64", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_27 [label=requiresCleanup, span="87-87", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_21 [label="registration.KernelLock.AcquireReaderLock(Timeout.Infinite)", span="65-65", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_22 [label="registration.Kernels", span="69-69", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_28 [label="RemoveKernels(registration, registration.Kernels.Where(reference => !reference.IsAlive))", span="89-89", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_23 [label="var kernel = weakReference.Target as IReadonlyKernel", span="71-71", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_24 [label="kernel != null", span="72-72", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_26 [label="requiresCleanup = true", span="78-78", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_29 [label="Exit Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", span="61-61", cluster="Ninject.GlobalKernelRegistration.MapKernels(System.Action<Ninject.IReadonlyKernel>)", file="ImmutableVerbFakes.cs"];
m2_6 [label="Entry System.Threading.ReaderWriterLock.AcquireWriterLock(int)", span="0-0", cluster="System.Threading.ReaderWriterLock.AcquireWriterLock(int)", file="ImmutableVerbFakes.cs"];
m2_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ImmutableVerbFakes.cs"];
m2_32 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ImmutableVerbFakes.cs"];
m2_61 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ImmutableVerbFakes.cs"];
m2_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ImmutableVerbFakes.cs"];
m2_49 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ImmutableVerbFakes.cs"];
m2_60 [label="Entry Ninject.GlobalKernelRegistration.Registration.Registration()", span="151-151", cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ImmutableVerbFakes.cs"];
m2_62 [label="this.KernelLock = new ReaderWriterLock()", span="153-153", cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ImmutableVerbFakes.cs"];
m2_63 [label="this.Kernels = new List<WeakReference>()", span="154-154", cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ImmutableVerbFakes.cs"];
m2_64 [label="Exit Ninject.GlobalKernelRegistration.Registration.Registration()", span="151-151", cluster="Ninject.GlobalKernelRegistration.Registration.Registration()", file="ImmutableVerbFakes.cs"];
m2_30 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ImmutableVerbFakes.cs"];
m2_33 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_16 [label="reference.Target == kernel || !reference.IsAlive", span="54-54", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_15 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_17 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_34 [label="!reference.IsAlive", span="89-89", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_35 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="ImmutableVerbFakes.cs"];
m2_31 [label="Entry System.Threading.ReaderWriterLock.AcquireReaderLock(int)", span="0-0", cluster="System.Threading.ReaderWriterLock.AcquireReaderLock(int)", file="ImmutableVerbFakes.cs"];
m2_5 [label="Entry Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", span="109-109", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_43 [label="kernelRegistrationsLock.AcquireReaderLock(Timeout.Infinite)", span="111-111", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_45 [label="kernelRegistrations.TryGetValue(type, out registration)", span="115-115", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_47 [label="return CreateNewRegistration(type);", span="120-120", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_44 [label="Registration registration", span="114-114", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_46 [label="return registration;", span="117-117", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_48 [label="Exit Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", span="109-109", cluster="Ninject.GlobalKernelRegistration.GetRegistrationForType(System.Type)", file="ImmutableVerbFakes.cs"];
m2_9 [label="Entry Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", span="51-51", cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_10 [label="var registration = GetRegistrationForType(type)", span="53-53", cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", color=green, community=0, file="ImmutableVerbFakes.cs"];
m2_11 [label="RemoveKernels(registration, registration.Kernels.Where(reference => reference.Target == kernel || !reference.IsAlive))", span="54-54", cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_12 [label="Exit Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", span="51-51", cluster="Ninject.GlobalKernelRegistration.UnregisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_0 [label="Entry Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", span="37-37", cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_1 [label="var registration = GetRegistrationForType(type)", span="39-39", cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_3 [label="registration.Kernels.Add(new WeakReference(kernel))", span="43-43", cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_2 [label="registration.KernelLock.AcquireWriterLock(Timeout.Infinite)", span="40-40", cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_4 [label="Exit Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", span="37-37", cluster="Ninject.GlobalKernelRegistration.RegisterKernelForType(Ninject.IReadonlyKernel, System.Type)", file="ImmutableVerbFakes.cs"];
m2_42 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="ImmutableVerbFakes.cs"];
m2_59 [label="Entry System.Threading.ReaderWriterLock.UpgradeToWriterLock(int)", span="0-0", cluster="System.Threading.ReaderWriterLock.UpgradeToWriterLock(int)", file="ImmutableVerbFakes.cs"];
m2_8 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ImmutableVerbFakes.cs"];
m2_7 [label="Entry System.WeakReference.WeakReference(object)", span="0-0", cluster="System.WeakReference.WeakReference(object)", file="ImmutableVerbFakes.cs"];
m2_66 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ImmutableVerbFakes.cs"];
m2_36 [label="Entry Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", span="93-93", cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ImmutableVerbFakes.cs"];
m2_37 [label="registration.KernelLock.AcquireWriterLock(Timeout.Infinite)", span="95-95", cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ImmutableVerbFakes.cs"];
m2_38 [label="references.ToArray()", span="98-98", cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ImmutableVerbFakes.cs"];
m2_39 [label="registration.Kernels.Remove(reference)", span="100-100", cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ImmutableVerbFakes.cs"];
m2_40 [label="Exit Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", span="93-93", cluster="Ninject.GlobalKernelRegistration.RemoveKernels(Ninject.GlobalKernelRegistration.Registration, System.Collections.Generic.IEnumerable<System.WeakReference>)", file="ImmutableVerbFakes.cs"];
m2_14 [label="Entry Unk.RemoveKernels", span="", cluster="Unk.RemoveKernels", file="ImmutableVerbFakes.cs"];
m2_67 [label="Ninject.IReadonlyKernel", span="", file="ImmutableVerbFakes.cs"];
m2_68 [label="Ninject.GlobalKernelRegistration", span="", file="ImmutableVerbFakes.cs"];
m2_69 [label="Ninject.GlobalKernelRegistration.Registration", span="", file="ImmutableVerbFakes.cs"];
m3_6 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceChooserTests.cs"];
m3_33 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m3_34 [label="var expected = new Immutable_Add_Verb(true, default(bool), ''dummy.bin'')", span="118-118", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_35 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Immutable_Add_Verb), typeof(Immutable_Commit_Verb), typeof(Immutable_Clone_Verb) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="121-126", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_37 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="130-130", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m3_36 [label="Assert.IsType<Immutable_Add_Verb>(((Parsed<object>)result).Value)", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_38 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="115-115", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs"];
m3_40 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_41 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="138-138", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_42 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="141-146", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_44 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="150-150", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_43 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="149-149", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_45 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_14 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs"];
m3_15 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m3_16 [label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true) }", span="58-58", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_17 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="61-66", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_18 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="69-69", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m3_19 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="55-55", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs"];
m3_39 [label="Entry CommandLine.Tests.Fakes.Immutable_Add_Verb.Immutable_Add_Verb(bool, bool, string)", span="13-13", cluster="CommandLine.Tests.Fakes.Immutable_Add_Verb.Immutable_Add_Verb(bool, bool, string)", file="InstanceChooserTests.cs"];
m3_5 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs"];
m3_25 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_26 [label="var expected = new Add_Verb { Patch = true, FileName = ''dummy.bin''}", span="98-98", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_27 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="101-106", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_29 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="110-110", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_28 [label="Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="109-109", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_30 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="95-95", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs"];
m3_31 [label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7", cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="InstanceChooserTests.cs"];
m3_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m3_1 [label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m3_2 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="21-26", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_3 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="29-29", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m3_4 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs"];
m3_9 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m3_10 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="38-38", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m3_11 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="41-46", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_12 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="49-49", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m3_13 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="35-35", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs"];
m3_32 [label="Entry Unk.>", span="", cluster="Unk.>", file="InstanceChooserTests.cs"];
m3_20 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m3_21 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="78-78", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m3_22 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="81-86", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs"];
m3_23 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="89-89", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m3_24 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs"];
m3_47 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m3_48 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="162-162", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m3_49 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="165-170", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=green, community=0, file="InstanceChooserTests.cs"];
m3_51 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="174-174", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m3_50 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="173-173", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m3_52 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="159-159", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs"];
m3_7 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooserTests.cs"];
m3_46 [label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="51-51", cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs"];
m3_8 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs"];
m4_11 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_12 [label="var expected = string.Empty", span="30-30", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_13 [label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = opts.Urls.First())", span="31-35", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_14 [label="''https://value.org/user/file.git''.ShouldBeEquivalentTo(expected)", span="37-37", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_15 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_6 [label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="21-21", cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs"];
m4_135 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", span="68-68", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs"];
m4_16 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs"];
m4_65 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_66 [label="var expected = ''a default''", span="77-77", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_67 [label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="78-80", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_68 [label="''changed''.ShouldBeEquivalentTo(expected)", span="82-82", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_69 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_104 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_105 [label="var expected = Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="111-112", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_106 [label="(-1).ShouldBeEquivalentTo(expected)", span="114-114", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_107 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_54 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_55 [label="var expected = string.Empty", span="66-66", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_56 [label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="67-69", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_57 [label="''value''.ShouldBeEquivalentTo(expected)", span="71-71", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_58 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_17 [label="Entry CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", span="38-38", cluster="CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs"];
m4_28 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_29 [label="var expected = ''a default''", span="43-43", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_30 [label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .WithNotParsed(_ => expected = ''changed'')", span="44-45", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_31 [label="''changed''.ShouldBeEquivalentTo(expected)", span="47-47", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_32 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs"];
m4_91 [label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160", cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs"];
m4_163 [label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249", cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs"];
m4_179 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_8 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_9 [label="expected = opts.StringValue", span="22-22", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_10 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_18 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_21 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_24 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_19 [label="expected = ''wrong1''", span="33-33", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_20 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_22 [label="expected = ''wrong2''", span="34-34", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_23 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_25 [label="expected = opts.Urls.First()", span="35-35", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_26 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_34 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_35 [label="expected = ''changed''", span="45-45", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_36 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_42 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_45 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_48 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_51 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_43 [label="expected = ''wrong1''", span="55-55", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_44 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_46 [label="expected = ''wrong2''", span="56-56", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_47 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_49 [label="expected = ''wrong3''", span="57-57", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_50 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_52 [label="expected = ''changed''", span="58-58", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_53 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_59 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_62 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_60 [label="expected = opts.StringValue", span="68-68", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_61 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_63 [label="expected = ''changed''", span="69-69", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_64 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_70 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_73 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_71 [label="expected = opts.StringValue", span="79-79", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_72 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_74 [label="expected = ''changed''", span="80-80", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_75 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_81 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_84 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_82 [label=0, span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_83 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_85 [label="-1", span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_86 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_92 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_95 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_98 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_101 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_93 [label=0, span="100-100", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_94 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_96 [label=1, span="101-101", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_97 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_99 [label=2, span="102-102", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_100 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_102 [label=3, span="103-103", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_103 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_108 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_111 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_109 [label=0, span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_110 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_112 [label="-1", span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_113 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_118 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_121 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_124 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_127 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_119 [label=0, span="123-123", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_120 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_122 [label=1, span="124-124", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_123 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_125 [label=2, span="125-125", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_126 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_128 [label=3, span="126-126", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_129 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_136 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_139 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_142 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_145 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_137 [label="expected = ''wrong1''", span="137-137", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_138 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_140 [label="expected = ''wrong2''", span="138-138", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_141 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_143 [label="expected = ''wrong3''", span="139-139", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_144 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_146 [label="expected = opts.FileName", span="140-140", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_147 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_153 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_156 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_154 [label=1, span="151-151", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_155 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_157 [label=2, span="152-152", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_158 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_164 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_167 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_170 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_165 [label=0, span="163-163", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_166 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_168 [label=1, span="164-164", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_169 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_171 [label=2, span="165-165", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_172 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_174 [label=4, span="166-166", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_177 [label=3, span="167-167", cluster="lambda expression", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_180 [label=5, span="168-168", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_181 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="ParserResultExtensionsTests.cs"];
m4_27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ParserResultExtensionsTests.cs"];
m4_148 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_149 [label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (Base_Class_For_Verb opts) => 1,\r\n                    errs => 2)", span="148-152", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_150 [label="1.ShouldBeEquivalentTo(expected)", span="154-154", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_151 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_130 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_131 [label="var expected = string.Empty", span="134-134", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_132 [label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = ''wrong3'')\r\n                .WithParsed<Base_Class_For_Verb>(opts => expected = opts.FileName)", span="135-140", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_133 [label="''dummy.bin''.ShouldBeEquivalentTo(expected)", span="142-142", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_134 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_76 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_77 [label="var expected = Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .Return(_ => 0, _ => -1)", span="88-89", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_78 [label="0.ShouldBeEquivalentTo(expected)", span="91-91", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_79 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs"];
m4_80 [label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78", cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs"];
m4_114 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_115 [label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''undefined'', ''-xyz'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    errs => 3)", span="120-126", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_116 [label="3.ShouldBeEquivalentTo(expected)", span="128-128", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_117 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_33 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="59-59", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensionsTests.cs"];
m4_37 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_38 [label="var expected = ''a default''", span="53-53", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_39 [label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''undefined'', ''-xyz'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = ''wrong3'')\r\n                .WithNotParsed(_ => expected = ''changed'')", span="54-58", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_40 [label="''changed''.ShouldBeEquivalentTo(expected)", span="60-60", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_41 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_159 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_160 [label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    (Base_Class_For_Verb opts) => 4,\r\n                    (Derived_Verb opts) => 3,\r\n                    errs => 5)", span="160-168", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_161 [label="4.ShouldBeEquivalentTo(expected)", span="170-170", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_162 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs"];
m4_0 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_1 [label="var expected = string.Empty", span="20-20", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_2 [label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)", span="21-22", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_3 [label="''value''.ShouldBeEquivalentTo(expected)", span="24-24", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_4 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs"];
m4_5 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs"];
m4_152 [label="Entry CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99", cluster="CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs"];
m4_87 [label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_88 [label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    errs => 3)", span="97-103", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", color=green, community=0, file="ParserResultExtensionsTests.cs"];
m4_89 [label="2.ShouldBeEquivalentTo(expected)", span="105-105", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_90 [label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95", cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs"];
m4_7 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ParserResultExtensionsTests.cs"];
m5_0 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m5_2 [label="return info;", span="20-20", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m5_4 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ParserTests.cs"];
m5_1 [label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="16-19", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m5_3 [label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m5_5 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ParserTests.cs"];
m5_6 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="ParserTests.cs"];
m5_97 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs"];
m5_98 [label="var expectedOptions = new Commit_Verb() { Message = message }", span="192-192", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs"];
m5_99 [label="var sut = new Parser()", span="193-193", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs"];
m5_102 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="202-202", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs"];
m5_100 [label="var result = sut.ParseArguments(\r\n                args,\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="196-198", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs"];
m5_101 [label="Assert.IsType<Commit_Verb>(((Parsed<object>)result).Value)", span="201-201", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", color=green, community=0, file="ParserTests.cs"];
m5_103 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", file="ParserTests.cs"];
m5_191 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_194 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="339-339", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_193 [label="var sut = new Parser(config => config.HelpWriter = help)", span="336-336", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_195 [label="var result = help.ToString()", span="340-340", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_192 [label="var help = new StringWriter()", span="335-335", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_196 [label="result.Length.Should().BeGreaterThan(0)", span="343-343", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_197 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="344-344", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_199 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="346-346", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_200 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="347-347", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_201 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="348-348", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_202 [label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="349-349", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_203 [label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="350-350", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_204 [label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="351-351", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_205 [label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="352-352", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_206 [label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="353-353", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_198 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="345-345", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_207 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs"];
m5_274 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_277 [label="sut.ParseArguments<Add_Verb_With_Usage_Attribute, Commit_Verb_With_Usage_Attribute, Clone_Verb_With_Usage_Attribute>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="451-452", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_276 [label="var sut = new Parser(config => config.HelpWriter = help)", span="448-448", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_278 [label="var result = help.ToString()", span="453-453", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_281 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="458-458", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_282 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="459-459", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_283 [label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="460-460", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_284 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="461-461", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_285 [label="lines[5].ShouldBeEquivalentTo(''Cloning quietly:'')", span="462-462", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_286 [label="lines[6].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="463-463", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_287 [label="lines[7].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="464-464", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_288 [label="lines[8].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="465-465", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_289 [label="lines[9].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="466-466", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_290 [label="lines[10].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="467-467", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_291 [label="lines[11].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="468-468", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_292 [label="lines[12].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="469-469", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_293 [label="lines[13].ShouldBeEquivalentTo(''--version         Display version information.'')", span="470-470", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_294 [label="lines[14].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="471-471", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_275 [label="var help = new StringWriter()", span="447-447", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_280 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="457-457", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_279 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="456-456", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_295 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs"];
m5_130 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_132 [label="var sut = new Parser()", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_135 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="276-276", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_134 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="275-275", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_131 [label="var expectedError = new HelpRequestedError()", span="268-268", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_133 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="272-272", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_136 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs"];
m5_67 [label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="ParserTests.cs"];
m5_312 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="497-497", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs"];
m5_314 [label="var result = sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(arguments)", span="505-505", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", color=green, community=0, file="ParserTests.cs"];
m5_313 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="502-502", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs"];
m5_315 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="508-508", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs"];
m5_316 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="509-509", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs"];
m5_317 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="497-497", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="ParserTests.cs"];
m5_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs"];
m5_8 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16", cluster="lambda expression", file="ParserTests.cs"];
m5_147 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_149 [label="var sut = new Parser(config => config.HelpWriter = help)", span="285-285", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_151 [label="var result = help.ToString()", span="289-289", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_148 [label="var help = new StringWriter()", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_150 [label="sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_152 [label="result.Length.Should().BeGreaterThan(0)", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_153 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs"];
m5_11 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ParserTests.cs"];
m5_264 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_267 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''commit'', ''--help'' })", span="435-435", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", color=green, community=0, file="ParserTests.cs"];
m5_266 [label="var sut = new Parser(config => config.HelpWriter = help)", span="432-432", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_268 [label="var result = help.ToString()", span="436-436", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_265 [label="var help = new StringWriter()", span="431-431", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_269 [label="result.Length.Should().BeGreaterThan(0)", span="439-439", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_270 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs"];
m5_61 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_63 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="122-122", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_65 [label="((Parsed<Simple_Options_With_Values>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="130-130", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_62 [label="var expectedOptions = new Simple_Options_With_Values\r\n                                  {\r\n                                      StringValue = ''astring'',\r\n                                      LongValue = 20L,\r\n                                      StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                                      IntValue = 30\r\n                                  }", span="115-121", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_64 [label="var result =\r\n                sut.ParseArguments<Simple_Options_With_Values>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="125-127", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_66 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs"];
m5_139 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="ParserTests.cs"];
m5_60 [label="Entry Unk.>", span="", cluster="Unk.>", file="ParserTests.cs"];
m5_22 [label="Entry lambda expression", span="32-40", cluster="lambda expression", file="ParserTests.cs"];
m5_35 [label="x.IsValue()", span="37-37", cluster="lambda expression", file="ParserTests.cs"];
m5_78 [label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7", cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="ParserTests.cs"];
m5_108 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs"];
m5_110 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="213-215", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_109 [label="var sut = Parser.Default", span="210-210", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs"];
m5_111 [label="Assert.IsType<NotParsed<object>>(result)", span="218-218", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs"];
m5_112 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", file="ParserTests.cs"];
m5_299 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="478-478", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_300 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="483-483", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_302 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="489-489", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_303 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="490-490", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_301 [label="var result = sut.ParseArguments<Simple_Options>(arguments)", span="486-486", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_304 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="478-478", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="ParserTests.cs"];
m5_37 [label="with.HelpWriter = writer", span="52-52", cluster="lambda expression", file="ParserTests.cs"];
m5_14 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ParserTests.cs"];
m5_113 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m5_114 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="226-235", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs"];
m5_115 [label="var sut = new Parser()", span="236-236", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m5_118 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="245-245", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m5_116 [label="var result =\r\n                sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="239-241", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs"];
m5_117 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="244-244", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", color=green, community=0, file="ParserTests.cs"];
m5_119 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs"];
m5_183 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ParserTests.cs"];
m5_71 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m5_72 [label="var expectedOptions = new Add_Verb { Patch = true, FileName = ''--strange-fn'' }", span="138-138", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_73 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="139-139", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m5_76 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="150-150", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m5_74 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(Add_Verb),\r\n                typeof(Commit_Verb),\r\n                typeof(Clone_Verb))", span="142-146", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_75 [label="Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="149-149", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_77 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs"];
m5_55 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs"];
m5_58 [label="Assert.IsType<NotParsed<Options_With_Switches>>(result)", span="107-107", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs"];
m5_57 [label="var result = sut.ParseArguments<Options_With_Switches>(new[] { ''-i'', ''-i'', ''-o'', ''file'' })", span="104-104", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs"];
m5_56 [label="var sut = Parser.Default", span="101-101", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs"];
m5_59 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="ParserTests.cs"];
m5_7 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="ParserTests.cs"];
m5_154 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="ParserTests.cs"];
m5_158 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_160 [label="var sut = new Parser()", span="301-301", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_163 [label="((NotParsed<Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="308-308", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_162 [label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="307-307", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_159 [label="var expectedError = new VersionRequestedError()", span="300-300", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_161 [label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="304-304", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_164 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs"];
m5_85 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs"];
m5_129 [label="Entry CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs"];
m5_165 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="448-448", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParserTests.cs"];
m5_46 [label=T1, span="", cluster="CommandLine.Parser.Parser()", file="ParserTests.cs"];
m5_48 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_52 [label="((Parsed<Options_With_Switches>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="93-93", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_50 [label="var sut = new Parser()", span="87-87", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_49 [label="var expectedOptions = new Options_With_Switches { OutputFile = outputFile }", span="86-86", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_51 [label="var result = sut.ParseArguments<Options_With_Switches>(args)", span="90-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_53 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="ParserTests.cs"];
m5_211 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_214 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''--help'' })", span="365-365", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", color=green, community=0, file="ParserTests.cs"];
m5_213 [label="var sut = new Parser(config => config.HelpWriter = help)", span="362-362", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_215 [label="var result = help.ToString()", span="366-366", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_212 [label="var help = new StringWriter()", span="361-361", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_216 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="369-369", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_218 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="371-371", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_219 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="372-372", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_220 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="373-373", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_221 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="374-374", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_222 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="375-375", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_223 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="376-376", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_217 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="370-370", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_224 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs"];
m5_188 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="ParserTests.cs"];
m5_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs"];
m5_12 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ParserTests.cs"];
m5_13 [label="with.HelpWriter = writer", span="20-20", cluster="lambda expression", file="ParserTests.cs"];
m5_20 [label="text.Should().NotBeEmpty()", span="43-43", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m5_24 [label="Entry Unk.NotBeEmpty", span="", cluster="Unk.NotBeEmpty", file="ParserTests.cs"];
m5_19 [label="var text = writer.ToString()", span="42-42", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m5_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m5_23 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserTests.cs"];
m5_31 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="55-55", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", color=green, community=0];
m5_25 [label="Entry lambda expression", span="36-36", cluster="lambda expression", color=red, community=0, file="ParserTests.cs"];
m5_30 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="52-52", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m5_34 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m5_38 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="ParserTests.cs"];
m5_26 [label="with.HelpWriter = writer", span="36-36", cluster="lambda expression", file="ParserTests.cs"];
m5_32 [label="var text = writer.ToString()", span="58-58", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m5_36 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="ParserTests.cs"];
m5_39 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_40 [label="var expectedOptions = new Simple_Options { StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 } }", span="67-67", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_80 [label="with.EnableDashDash = true", span="139-139", cluster="lambda expression", file="ParserTests.cs"];
m5_82 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="ParserTests.cs"];
m5_94 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="ParserTests.cs"];
m5_105 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="ParserTests.cs"];
m5_120 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="ParserTests.cs"];
m5_209 [label="config.HelpWriter = help", span="336-336", cluster="lambda expression", file="ParserTests.cs"];
m5_226 [label="config.HelpWriter = help", span="362-362", cluster="lambda expression", file="ParserTests.cs"];
m5_239 [label="config.HelpWriter = help", span="387-387", cluster="lambda expression", file="ParserTests.cs"];
m5_272 [label="config.HelpWriter = help", span="432-432", cluster="lambda expression", file="ParserTests.cs"];
m5_322 [label="opts.ShouldBeEquivalentTo(expected)", span="509-509", cluster="lambda expression", file="ParserTests.cs"];
m5_319 [label="config.IgnoreUnknownArguments = true", span="502-502", cluster="lambda expression", file="ParserTests.cs"];
m5_321 [label="Entry lambda expression", span="509-509", cluster="lambda expression", file="ParserTests.cs"];
m5_27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="ParserTests.cs"];
m5_79 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ParserTests.cs"];
m5_81 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ParserTests.cs"];
m5_310 [label="opts.ShouldBeEquivalentTo(expected)", span="490-490", cluster="lambda expression", file="ParserTests.cs"];
m5_84 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="ParserTests.cs"];
m5_83 [label="o.RespectingRuntimeTypes()", span="150-150", cluster="lambda expression", file="ParserTests.cs"];
m5_96 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="ParserTests.cs"];
m5_95 [label="o.RespectingRuntimeTypes()", span="180-180", cluster="lambda expression", file="ParserTests.cs"];
m5_107 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="ParserTests.cs"];
m5_106 [label="o.RespectingRuntimeTypes()", span="202-202", cluster="lambda expression", file="ParserTests.cs"];
m5_122 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="ParserTests.cs"];
m5_121 [label="o.RespectingRuntimeTypes()", span="245-245", cluster="lambda expression", file="ParserTests.cs"];
m5_208 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="ParserTests.cs"];
m5_210 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="ParserTests.cs"];
m5_225 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="ParserTests.cs"];
m5_227 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="ParserTests.cs"];
m5_238 [label="Entry lambda expression", span="387-387", cluster="lambda expression", file="ParserTests.cs"];
m5_240 [label="Exit lambda expression", span="387-387", cluster="lambda expression", file="ParserTests.cs"];
m5_271 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="ParserTests.cs"];
m5_273 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="ParserTests.cs"];
m5_323 [label="Exit lambda expression", span="509-509", cluster="lambda expression", file="ParserTests.cs"];
m5_318 [label="Entry lambda expression", span="502-502", cluster="lambda expression", file="ParserTests.cs"];
m5_320 [label="Exit lambda expression", span="502-502", cluster="lambda expression", file="ParserTests.cs"];
m5_69 [label="with.EnableDashDash = true", span="122-122", cluster="lambda expression", file="ParserTests.cs"];
m5_156 [label="config.HelpWriter = help", span="285-285", cluster="lambda expression", file="ParserTests.cs"];
m5_186 [label="config.HelpWriter = help", span="317-317", cluster="lambda expression", file="ParserTests.cs"];
m5_262 [label="config.HelpWriter = help", span="406-406", cluster="lambda expression", file="ParserTests.cs"];
m5_297 [label="config.HelpWriter = help", span="448-448", cluster="lambda expression", file="ParserTests.cs"];
m5_307 [label="config.IgnoreUnknownArguments = true", span="483-483", cluster="lambda expression", file="ParserTests.cs"];
m5_309 [label="Entry lambda expression", span="490-490", cluster="lambda expression", file="ParserTests.cs"];
m5_311 [label="Exit lambda expression", span="490-490", cluster="lambda expression", file="ParserTests.cs"];
m5_241 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="ParserTests.cs"];
m5_68 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="ParserTests.cs"];
m5_70 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="ParserTests.cs"];
m5_155 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="ParserTests.cs"];
m5_157 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="ParserTests.cs"];
m5_185 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="ParserTests.cs"];
m5_187 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="ParserTests.cs"];
m5_261 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="ParserTests.cs"];
m5_263 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="ParserTests.cs"];
m5_296 [label="Entry lambda expression", span="448-448", cluster="lambda expression", file="ParserTests.cs"];
m5_298 [label="Exit lambda expression", span="448-448", cluster="lambda expression", file="ParserTests.cs"];
m5_306 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="ParserTests.cs"];
m5_308 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="ParserTests.cs"];
m5_143 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="ParserTests.cs"];
m5_140 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="ParserTests.cs"];
m5_169 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="ParserTests.cs"];
m5_166 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="ParserTests.cs"];
m5_144 [label="e.Equals(expectedError)", span="276-276", cluster="lambda expression", file="ParserTests.cs"];
m5_170 [label="e.Equals(expectedError)", span="308-308", cluster="lambda expression", file="ParserTests.cs"];
m5_243 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="ParserTests.cs"];
m5_242 [label="x == 1", span="396-396", cluster="lambda expression", file="ParserTests.cs"];
m5_145 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="ParserTests.cs"];
m5_142 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="ParserTests.cs"];
m5_141 [label="x == 1", span="275-275", cluster="lambda expression", file="ParserTests.cs"];
m5_171 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="ParserTests.cs"];
m5_168 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="ParserTests.cs"];
m5_167 [label="x == 1", span="307-307", cluster="lambda expression", file="ParserTests.cs"];
m5_189 [label="x == 1", span="326-326", cluster="lambda expression", file="ParserTests.cs"];
m5_190 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="ParserTests.cs"];
m5_244 [label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_246 [label="var sut = new Parser(config => config.HelpWriter = help)", span="406-406", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_248 [label="var result = help.ToString()", span="410-410", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_251 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="415-415", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_252 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="416-416", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_253 [label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="417-417", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_254 [label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="418-418", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_255 [label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="419-419", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_256 [label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="420-420", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_257 [label="lines[7].ShouldBeEquivalentTo(''-a'')", span="421-421", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_258 [label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="422-422", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_259 [label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="423-423", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_245 [label="var help = new StringWriter()", span="405-405", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_247 [label="sut.ParseArguments<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="409-409", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_250 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="414-414", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_249 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="413-413", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_260 [label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs"];
m5_28 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m5_29 [label="Entry Unk.WithNextValue", span="", cluster="Unk.WithNextValue", file="ParserTests.cs"];
m5_33 [label="text.Should().NotBeEmpty()", span="59-59", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs"];
m5_93 [label="Entry CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", span="36-36", cluster="CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", file="ParserTests.cs"];
m5_146 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="ParserTests.cs"];
m5_184 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="ParserTests.cs"];
m5_138 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="ParserTests.cs"];
m5_43 [label=string, span="", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_41 [label=string, span="", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_42 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_44 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs"];
m5_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m5_16 [label="var writer = new StringWriter()", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", color=red, community=0, file="ParserTests.cs"];
m5_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="36-36", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs"];
m5_18 [label="sut.ParseArguments(new string[] { }, typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="39-39", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", color=green, community=0];
m5_172 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_174 [label="var sut = new Parser(config => config.HelpWriter = help)", span="317-317", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_176 [label="var result = help.ToString()", span="321-321", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_173 [label="var help = new StringWriter()", span="316-316", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_175 [label="sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="320-320", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_177 [label="result.Length.Should().BeGreaterThan(0)", span="324-324", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_179 [label="lines.Should().HaveCount(x => x == 1)", span="326-326", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_180 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="327-327", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_178 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="325-325", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_181 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs"];
m5_123 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_127 [label="((Parsed<Immutable_Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="260-260", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_125 [label="var sut = new Parser()", span="254-254", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_124 [label="var expectedOptions = new Immutable_Simple_Options(''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="253-253", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_126 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="257-257", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_128 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs"];
m5_182 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="ParserTests.cs"];
m5_104 [label="Entry CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", span="22-22", cluster="CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", file="ParserTests.cs"];
m5_54 [label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4", cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="ParserTests.cs"];
m5_305 [label="Entry Unk.WithParsed", span="", cluster="Unk.WithParsed", file="ParserTests.cs"];
m5_86 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m5_87 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="158-167", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs"];
m5_88 [label="var sut = new Parser()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m5_91 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="180-180", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m5_89 [label="var result =\r\n                sut.ParseArguments(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                    typeof(Add_Verb),\r\n                    typeof(Commit_Verb),\r\n                    typeof(Clone_Verb))", span="171-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs"];
m5_90 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", color=green, community=0, file="ParserTests.cs"];
m5_92 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs"];
m5_228 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_231 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { command })", span="390-390", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", color=green, community=0, file="ParserTests.cs"];
m5_230 [label="var sut = new Parser(config => config.HelpWriter = help)", span="387-387", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_232 [label="var result = help.ToString()", span="391-391", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_229 [label="var help = new StringWriter()", span="386-386", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_233 [label="result.Length.Should().BeGreaterThan(0)", span="394-394", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_234 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="395-395", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_236 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="397-397", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_235 [label="lines.Should().HaveCount(x => x == 1)", span="396-396", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_237 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs"];
m5_45 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="ParserTests.cs"];
m5_137 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="384-384", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs"];
m5_47 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs"];
m5_325 [label=writer, span="", file="ParserTests.cs"];
m5_326 [label=writer, span="", file="ParserTests.cs"];
m5_331 [label=help, span="", file="ParserTests.cs"];
m5_332 [label=help, span="", file="ParserTests.cs"];
m5_333 [label=help, span="", file="ParserTests.cs"];
m5_335 [label=help, span="", file="ParserTests.cs"];
m5_338 [label="CommandLine.Tests.Fakes.Commit_Verb", span="", file="ParserTests.cs"];
m5_337 [label="CommandLine.Tests.Fakes.Simple_Options", span="", file="ParserTests.cs"];
m5_324 [label=writer, span="", file="ParserTests.cs"];
m5_328 [label=help, span="", file="ParserTests.cs"];
m5_330 [label=help, span="", file="ParserTests.cs"];
m5_334 [label=help, span="", file="ParserTests.cs"];
m5_336 [label=help, span="", file="ParserTests.cs"];
m5_327 [label=expectedError, span="", file="ParserTests.cs"];
m5_329 [label=expectedError, span="", file="ParserTests.cs"];
m6_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="81-81", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="UnParserExtensionsTests.cs"];
m6_19 [label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4", cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="UnParserExtensionsTests.cs"];
m6_20 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensionsTests.cs"];
m6_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_1 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="17-19", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="UnParserExtensionsTests.cs"];
m6_15 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m6_16 [label="var options = new Options_With_Switches { InputFile = ''input.bin'', HumanReadable = true, IgnoreWarnings = true }", span="52-52", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m6_17 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.GroupSwitches = true)\r\n                .ShouldBeEquivalentTo(''-hi --input input.bin'')", span="53-55", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m6_18 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs"];
m6_12 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs"];
m6_13 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="44-46", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs"];
m6_14 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="UnParserExtensionsTests.cs"];
m6_29 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_21 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_22 [label="config.GroupSwitches = true", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_23 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_30 [label="config.UseEqualToken = true", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_31 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m6_28 [label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="UnParserExtensionsTests.cs"];
m6_6 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs"];
m6_7 [label="new Parser()\r\n                .FormatCommandLine(verb)\r\n                .ShouldBeEquivalentTo(result)", span="26-28", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", color=green, community=0, file="UnParserExtensionsTests.cs"];
m6_8 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="UnParserExtensionsTests.cs"];
m6_24 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m6_25 [label="var options = new Simple_Options { BoolValue = true, IntSequence = new[] { 1, 2, 3 }, StringValue = ''nospaces'', LongValue = 123456789 }", span="61-61", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m6_26 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.UseEqualToken = true)\r\n                .ShouldBeEquivalentTo(''-i 1 2 3 --stringvalue=nospaces -x 123456789'')", span="62-64", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m6_27 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs"];
m6_9 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_10 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="35-37", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_11 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="UnParserExtensionsTests.cs"];
m6_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs"];
n14 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n15 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.InstanceReference"];
n16 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n17 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.InstanceReference"];
n0 -> n1  [key=0, style=solid];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n6 -> n4  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Ninject.Activation.IContext"];
n9 -> n10  [key=0, style=solid];
n9 -> n3  [key=2, style=dotted];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n12 -> n13  [key=0, style=solid];
n12 -> n7  [key=2, style=dotted];
n10 -> n8  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n13 -> n11  [key=0, style=bold, color=blue];
d2 -> d3  [key=0, style=solid, color=green];
d94 -> d2  [key=1, style=dashed, color=green, label="CommandLine.Error"];
d94 -> d5  [key=1, style=dashed, color=green, label="CommandLine.Error"];
d94 -> d1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d94 -> d10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d94 -> d11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d94 -> d16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d94 -> d21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d0 -> d2  [key=1, style=dashed, color=green, label=bool];
d0 -> d1  [key=0, style=solid];
d1 -> d2  [key=0, style=solid, color=green];
d3 -> d0  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d6 -> d4  [key=0, style=bold, color=blue];
d10 -> d12  [key=0, style=solid];
d10 -> d13  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid];
d11 -> d14  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d18  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=2, style=dotted];
d8 -> d10  [key=1, style=dashed, color=darkseagreen4, label=other];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d11  [key=0, style=solid];
d12 -> d7  [key=0, style=bold, color=blue];
d13 -> d21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
d13 -> d8  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Error other"];
d13 -> d19  [key=0, style=solid];
d13 -> d20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d7 -> d11  [key=1, style=dashed, color=darkseagreen4, label=object];
d7 -> d8  [key=0, style=solid];
d7 -> d13  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d7 -> d30  [key=3, color=darkorchid, style=bold, label="Parameter variable object obj"];
d7 -> d51  [key=3, color=darkorchid, style=bold, label="Parameter variable object obj"];
d15 -> d16  [key=0, style=solid];
d15 -> d37  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
d15 -> d58  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
d17 -> d15  [key=0, style=bold, color=blue];
d19 -> d21  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d22 -> d13  [key=0, style=bold, color=blue];
d20 -> d22  [key=0, style=solid];
d30 -> d7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d30 -> d31  [key=0, style=solid];
d30 -> d34  [key=1, style=dashed, color=darkseagreen4, label=object];
d30 -> d36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d34 -> d7  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d51 -> d7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d51 -> d52  [key=0, style=solid];
d51 -> d55  [key=1, style=dashed, color=darkseagreen4, label=object];
d51 -> d57  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d55 -> d7  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d43 -> d23  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d45  [key=2, style=dotted];
d63 -> d23  [key=2, style=dotted];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=2, style=dotted];
d36 -> d20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d36 -> d43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d36 -> d41  [key=0, style=solid];
d36 -> d31  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.TokenError other"];
d57 -> d20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d57 -> d63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d57 -> d61  [key=0, style=solid];
d57 -> d52  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.NamedError other"];
d35 -> d30  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=1, style=dashed, color=darkseagreen4, label=other];
d95 -> d34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d95 -> d43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d95 -> d27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d95 -> d33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d95 -> d38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.TokenError"];
d32 -> d34  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d56 -> d51  [key=0, style=bold, color=blue];
d52 -> d53  [key=0, style=solid];
d52 -> d54  [key=1, style=dashed, color=darkseagreen4, label=other];
d96 -> d55  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d96 -> d63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d96 -> d49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d96 -> d54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d96 -> d59  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NamedError"];
d53 -> d55  [key=0, style=solid];
d53 -> d54  [key=0, style=solid];
d39 -> d37  [key=0, style=bold, color=blue];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=2, style=dotted];
d60 -> d58  [key=0, style=bold, color=blue];
d59 -> d60  [key=0, style=solid];
d59 -> d40  [key=2, style=dotted];
d41 -> d43  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d44 -> d36  [key=0, style=bold, color=blue];
d61 -> d63  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d64 -> d57  [key=0, style=bold, color=blue];
d33 -> d36  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d54 -> d57  [key=2, style=dotted];
d54 -> d56  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d42 -> d44  [key=0, style=solid];
d62 -> d64  [key=0, style=solid];
d24 -> d27  [key=1, style=dashed, color=darkseagreen4, label=string];
d24 -> d25  [key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d28 -> d24  [key=0, style=bold, color=blue];
d48 -> d49  [key=0, style=solid];
d50 -> d48  [key=0, style=bold, color=blue];
d26 -> d28  [key=0, style=solid];
d26 -> d29  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_50 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_50 -> m2_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m2_50 -> m2_52  [key=3, color=darkorchid, style=bold, label="method methodReturn Ninject.GlobalKernelRegistration.Registration CreateNewRegistration"];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_59  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [key=0, style=solid];
m2_53 -> m2_49  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_61  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_54 -> m2_58  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_60  [key=2, style=dotted];
m2_55 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label=registration];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_50  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Ninject.IReadonlyKernel>"];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=requiresCleanup];
m2_19 -> m2_19  [key=3, color=darkorchid, style=bold, label="Local variable bool requiresCleanup"];
m2_25 -> m2_22  [key=0, style=solid];
m2_25 -> m2_32  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_30  [key=2, style=dotted];
m2_20 -> m2_5  [key=2, style=dotted];
m2_20 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=registration];
m2_20 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=registration];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_27  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_13  [key=2, style=dotted];
m2_28 -> m2_14  [key=2, style=dotted];
m2_28 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=kernel];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_26 -> m2_22  [key=0, style=solid];
m2_26 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=requiresCleanup];
m2_29 -> m2_18  [key=0, style=bold, color=blue];
m2_60 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_66  [key=2, style=dotted];
m2_64 -> m2_60  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_33  [key=0, style=bold, color=blue];
m2_5 -> m2_43  [key=0, style=solid];
m2_5 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_5 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_5 -> m2_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m2_5 -> m2_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m2_5 -> m2_44  [key=3, color=darkorchid, style=bold, label="method methodReturn Ninject.GlobalKernelRegistration.Registration GetRegistrationForType"];
m2_5 -> m2_50  [key=3, color=darkorchid, style=bold, label="method methodReturn Ninject.GlobalKernelRegistration.Registration GetRegistrationForType"];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_31  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=0, style=solid];
m2_45 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_46 -> m2_48  [key=0, style=solid];
m2_48 -> m2_5  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IReadonlyKernel"];
m2_9 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IReadonlyKernel"];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_5  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_9  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IReadonlyKernel"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=registration];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.WeakReference>"];
m2_36 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="Ninject.GlobalKernelRegistration.Registration"];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_6  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_38 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_38  [key=0, style=solid];
m2_39 -> m2_42  [key=2, style=dotted];
m2_40 -> m2_36  [key=0, style=bold, color=blue];
m2_67 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Ninject.IReadonlyKernel"];
m2_68 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Ninject.GlobalKernelRegistration"];
m2_68 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Ninject.GlobalKernelRegistration"];
m2_69 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="Ninject.GlobalKernelRegistration.Registration"];
m2_69 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Ninject.GlobalKernelRegistration.Registration"];
m3_33 -> m3_34  [key=0, style=solid, color=green];
m3_34 -> m3_35  [key=0, style=solid, color=green];
m3_34 -> m3_39  [key=2, style=dotted, color=green];
m3_34 -> m3_37  [key=1, style=dashed, color=green, label=expected];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_35 -> m3_6  [key=2, style=dotted, color=green];
m3_35 -> m3_7  [key=2, style=dotted, color=green];
m3_35 -> m3_37  [key=1, style=dashed, color=green, label=result];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_8  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_32  [key=2, style=dotted, color=green];
m3_38 -> m3_33  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid, color=green];
m3_41 -> m3_46  [key=2, style=dotted];
m3_41 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_42 -> m3_43  [key=0, style=solid, color=green];
m3_42 -> m3_6  [key=2, style=dotted, color=green];
m3_42 -> m3_7  [key=2, style=dotted, color=green];
m3_42 -> m3_44  [key=1, style=dashed, color=green, label=result];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_8  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_32  [key=2, style=dotted];
m3_45 -> m3_40  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_14  [key=2, style=dotted, color=green];
m3_16 -> m3_18  [key=1, style=dashed, color=green, label=expectedErrors];
m3_17 -> m3_18  [key=0, style=solid, color=green];
m3_17 -> m3_6  [key=2, style=dotted, color=green];
m3_17 -> m3_7  [key=2, style=dotted, color=green];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_8  [key=2, style=dotted];
m3_19 -> m3_15  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid, color=green];
m3_26 -> m3_27  [key=0, style=solid, color=green];
m3_26 -> m3_31  [key=2, style=dotted, color=green];
m3_26 -> m3_29  [key=1, style=dashed, color=green, label=expected];
m3_27 -> m3_28  [key=0, style=solid, color=green];
m3_27 -> m3_6  [key=2, style=dotted, color=green];
m3_27 -> m3_7  [key=2, style=dotted, color=green];
m3_27 -> m3_29  [key=1, style=dashed, color=green, label=result];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_8  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid, color=green];
m3_28 -> m3_32  [key=2, style=dotted, color=green];
m3_30 -> m3_25  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_6  [key=2, style=dotted, color=green];
m3_2 -> m3_7  [key=2, style=dotted, color=green];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_10 -> m3_14  [key=2, style=dotted];
m3_10 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_11 -> m3_12  [key=0, style=solid, color=green];
m3_11 -> m3_6  [key=2, style=dotted, color=green];
m3_11 -> m3_7  [key=2, style=dotted, color=green];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_8  [key=2, style=dotted];
m3_13 -> m3_9  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid, color=green];
m3_21 -> m3_14  [key=2, style=dotted];
m3_21 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m3_22 -> m3_23  [key=0, style=solid, color=green];
m3_22 -> m3_6  [key=2, style=dotted, color=green];
m3_22 -> m3_7  [key=2, style=dotted, color=green];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_8  [key=2, style=dotted];
m3_24 -> m3_20  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=1, style=dashed, color=green, label="string[]"];
m3_48 -> m3_49  [key=0, style=solid, color=green];
m3_48 -> m3_46  [key=2, style=dotted];
m3_48 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_49 -> m3_50  [key=0, style=solid, color=green];
m3_49 -> m3_6  [key=2, style=dotted, color=green];
m3_49 -> m3_7  [key=2, style=dotted, color=green];
m3_49 -> m3_51  [key=1, style=dashed, color=green, label=result];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_8  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_32  [key=2, style=dotted];
m3_52 -> m3_47  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid, color=green];
m4_13 -> m4_14  [key=0, style=solid, color=green];
m4_13 -> m4_16  [key=2, style=dotted, color=green];
m4_13 -> m4_17  [key=2, style=dotted, color=green];
m4_13 -> m4_18  [key=1, style=dashed, color=green, label="lambda expression"];
m4_13 -> m4_21  [key=1, style=dashed, color=green, label="lambda expression"];
m4_13 -> m4_24  [key=1, style=dashed, color=green, label="lambda expression"];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_7  [key=2, style=dotted];
m4_15 -> m4_11  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_5  [key=2, style=dotted];
m4_67 -> m4_6  [key=2, style=dotted];
m4_67 -> m4_33  [key=2, style=dotted];
m4_67 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_67 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_7  [key=2, style=dotted];
m4_69 -> m4_65  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_5  [key=2, style=dotted];
m4_105 -> m4_80  [key=2, style=dotted];
m4_105 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_105 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_7  [key=2, style=dotted];
m4_107 -> m4_104  [key=0, style=bold, color=blue];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_5  [key=2, style=dotted];
m4_56 -> m4_6  [key=2, style=dotted];
m4_56 -> m4_33  [key=2, style=dotted];
m4_56 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_56 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_7  [key=2, style=dotted];
m4_58 -> m4_54  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_5  [key=2, style=dotted];
m4_30 -> m4_33  [key=2, style=dotted];
m4_30 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_7  [key=2, style=dotted];
m4_32 -> m4_28  [key=0, style=bold, color=blue];
m4_179 -> m4_180  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid, color=green];
m4_21 -> m4_22  [key=0, style=solid, color=green];
m4_24 -> m4_25  [key=0, style=solid, color=green];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid, color=green];
m4_25 -> m4_27  [key=2, style=dotted, color=green];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=green];
m4_45 -> m4_46  [key=0, style=solid, color=green];
m4_48 -> m4_49  [key=0, style=solid, color=green];
m4_51 -> m4_52  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid, color=green];
m4_44 -> m4_42  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid, color=green];
m4_47 -> m4_45  [key=0, style=bold, color=blue];
m4_49 -> m4_50  [key=0, style=solid, color=green];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_51  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_64 -> m4_62  [key=0, style=bold, color=blue];
m4_70 -> m4_71  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_72 -> m4_70  [key=0, style=bold, color=blue];
m4_74 -> m4_75  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_81 -> m4_82  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_83 -> m4_81  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_84  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid, color=green];
m4_95 -> m4_96  [key=0, style=solid, color=green];
m4_98 -> m4_99  [key=0, style=solid, color=green];
m4_101 -> m4_102  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid, color=green];
m4_94 -> m4_92  [key=0, style=bold, color=blue];
m4_96 -> m4_97  [key=0, style=solid, color=green];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_99 -> m4_100  [key=0, style=solid, color=green];
m4_100 -> m4_98  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_103 -> m4_101  [key=0, style=bold, color=blue];
m4_108 -> m4_109  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_109 -> m4_110  [key=0, style=solid];
m4_110 -> m4_108  [key=0, style=bold, color=blue];
m4_112 -> m4_113  [key=0, style=solid];
m4_113 -> m4_111  [key=0, style=bold, color=blue];
m4_118 -> m4_119  [key=0, style=solid, color=green];
m4_121 -> m4_122  [key=0, style=solid, color=green];
m4_124 -> m4_125  [key=0, style=solid, color=green];
m4_127 -> m4_128  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid, color=green];
m4_120 -> m4_118  [key=0, style=bold, color=blue];
m4_122 -> m4_123  [key=0, style=solid, color=green];
m4_123 -> m4_121  [key=0, style=bold, color=blue];
m4_125 -> m4_126  [key=0, style=solid, color=green];
m4_126 -> m4_124  [key=0, style=bold, color=blue];
m4_128 -> m4_129  [key=0, style=solid];
m4_129 -> m4_127  [key=0, style=bold, color=blue];
m4_136 -> m4_137  [key=0, style=solid, color=green];
m4_139 -> m4_140  [key=0, style=solid, color=green];
m4_142 -> m4_143  [key=0, style=solid, color=green];
m4_145 -> m4_146  [key=0, style=solid, color=green];
m4_137 -> m4_138  [key=0, style=solid, color=green];
m4_138 -> m4_136  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid, color=green];
m4_141 -> m4_139  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid, color=green];
m4_144 -> m4_142  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid, color=green];
m4_147 -> m4_145  [key=0, style=bold, color=blue];
m4_153 -> m4_154  [key=0, style=solid, color=green];
m4_156 -> m4_157  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid, color=green];
m4_155 -> m4_153  [key=0, style=bold, color=blue];
m4_157 -> m4_158  [key=0, style=solid];
m4_158 -> m4_156  [key=0, style=bold, color=blue];
m4_164 -> m4_165  [key=0, style=solid, color=green];
m4_167 -> m4_168  [key=0, style=solid, color=green];
m4_170 -> m4_171  [key=0, style=solid, color=green];
m4_173 -> m4_174  [key=0, style=solid, color=green];
m4_176 -> m4_177  [key=0, style=solid, color=green];
m4_165 -> m4_166  [key=0, style=solid, color=green];
m4_166 -> m4_164  [key=0, style=bold, color=blue];
m4_168 -> m4_169  [key=0, style=solid, color=green];
m4_169 -> m4_167  [key=0, style=bold, color=blue];
m4_171 -> m4_172  [key=0, style=solid, color=green];
m4_172 -> m4_170  [key=0, style=bold, color=blue];
m4_174 -> m4_175  [key=0, style=solid, color=green];
m4_175 -> m4_173  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid, color=green];
m4_178 -> m4_176  [key=0, style=bold, color=blue];
m4_180 -> m4_181  [key=0, style=solid];
m4_181 -> m4_179  [key=0, style=bold, color=blue];
m4_148 -> m4_149  [key=0, style=solid, color=green];
m4_149 -> m4_150  [key=0, style=solid, color=green];
m4_149 -> m4_135  [key=2, style=dotted, color=green];
m4_149 -> m4_152  [key=2, style=dotted, color=green];
m4_149 -> m4_153  [key=1, style=dashed, color=green, label="lambda expression"];
m4_149 -> m4_156  [key=1, style=dashed, color=green, label="lambda expression"];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_7  [key=2, style=dotted];
m4_151 -> m4_148  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid, color=green];
m4_132 -> m4_133  [key=0, style=solid, color=green];
m4_132 -> m4_135  [key=2, style=dotted, color=green];
m4_132 -> m4_17  [key=2, style=dotted, color=green];
m4_132 -> m4_136  [key=1, style=dashed, color=green, label="lambda expression"];
m4_132 -> m4_139  [key=1, style=dashed, color=green, label="lambda expression"];
m4_132 -> m4_142  [key=1, style=dashed, color=green, label="lambda expression"];
m4_132 -> m4_145  [key=1, style=dashed, color=green, label="lambda expression"];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_7  [key=2, style=dotted];
m4_134 -> m4_130  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_5  [key=2, style=dotted];
m4_77 -> m4_80  [key=2, style=dotted];
m4_77 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_77 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_7  [key=2, style=dotted];
m4_79 -> m4_76  [key=0, style=bold, color=blue];
m4_114 -> m4_115  [key=0, style=solid, color=green];
m4_115 -> m4_116  [key=0, style=solid, color=green];
m4_115 -> m4_16  [key=2, style=dotted, color=green];
m4_115 -> m4_91  [key=2, style=dotted, color=green];
m4_115 -> m4_118  [key=1, style=dashed, color=green, label="lambda expression"];
m4_115 -> m4_121  [key=1, style=dashed, color=green, label="lambda expression"];
m4_115 -> m4_124  [key=1, style=dashed, color=green, label="lambda expression"];
m4_115 -> m4_127  [key=1, style=dashed, color=green, label="lambda expression"];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_7  [key=2, style=dotted];
m4_117 -> m4_114  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid, color=green];
m4_38 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m4_39 -> m4_40  [key=0, style=solid, color=green];
m4_39 -> m4_16  [key=2, style=dotted, color=green];
m4_39 -> m4_17  [key=2, style=dotted, color=green];
m4_39 -> m4_33  [key=2, style=dotted, color=green];
m4_39 -> m4_42  [key=1, style=dashed, color=green, label="lambda expression"];
m4_39 -> m4_45  [key=1, style=dashed, color=green, label="lambda expression"];
m4_39 -> m4_48  [key=1, style=dashed, color=green, label="lambda expression"];
m4_39 -> m4_51  [key=1, style=dashed, color=green, label="lambda expression"];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_7  [key=2, style=dotted];
m4_41 -> m4_37  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid, color=green];
m4_160 -> m4_161  [key=0, style=solid, color=green];
m4_160 -> m4_135  [key=2, style=dotted, color=green];
m4_160 -> m4_163  [key=2, style=dotted, color=green];
m4_160 -> m4_164  [key=1, style=dashed, color=green, label="lambda expression"];
m4_160 -> m4_167  [key=1, style=dashed, color=green, label="lambda expression"];
m4_160 -> m4_170  [key=1, style=dashed, color=green, label="lambda expression"];
m4_160 -> m4_173  [key=1, style=dashed, color=green, label="lambda expression"];
m4_160 -> m4_176  [key=1, style=dashed, color=green, label="lambda expression"];
m4_160 -> m4_179  [key=1, style=dashed, color=green, label="lambda expression"];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_7  [key=2, style=dotted];
m4_162 -> m4_159  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid, color=green];
m4_88 -> m4_89  [key=0, style=solid, color=green];
m4_88 -> m4_16  [key=2, style=dotted, color=green];
m4_88 -> m4_91  [key=2, style=dotted, color=green];
m4_88 -> m4_92  [key=1, style=dashed, color=green, label="lambda expression"];
m4_88 -> m4_95  [key=1, style=dashed, color=green, label="lambda expression"];
m4_88 -> m4_98  [key=1, style=dashed, color=green, label="lambda expression"];
m4_88 -> m4_101  [key=1, style=dashed, color=green, label="lambda expression"];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_7  [key=2, style=dotted];
m4_90 -> m4_87  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_4 -> m5_10  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_1 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_1 -> m5_5  [key=2, style=dotted];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_9  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_97 -> m5_98  [key=0, style=solid, color=green];
m5_97 -> m5_100  [key=1, style=dashed, color=green, label="string[]"];
m5_98 -> m5_99  [key=0, style=solid, color=green];
m5_98 -> m5_104  [key=2, style=dotted, color=green];
m5_98 -> m5_102  [key=1, style=dashed, color=green, label=expectedOptions];
m5_99 -> m5_100  [key=0, style=solid, color=green];
m5_99 -> m5_46  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_47  [key=2, style=dotted];
m5_102 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_100 -> m5_101  [key=0, style=solid, color=green];
m5_100 -> m5_22  [key=2, style=dotted, color=green];
m5_100 -> m5_102  [key=1, style=dashed, color=green, label=result];
m5_101 -> m5_102  [key=0, style=solid, color=green];
m5_101 -> m5_60  [key=2, style=dotted, color=green];
m5_103 -> m5_97  [key=0, style=bold, color=blue];
m5_191 -> m5_192  [key=0, style=solid];
m5_194 -> m5_195  [key=0, style=solid, color=green];
m5_194 -> m5_35  [key=2, style=dotted, color=green];
m5_193 -> m5_194  [key=0, style=solid, color=green];
m5_193 -> m5_8  [key=2, style=dotted];
m5_193 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_10  [key=2, style=dotted];
m5_195 -> m5_197  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_192 -> m5_7  [key=2, style=dotted];
m5_192 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_23  [key=2, style=dotted];
m5_196 -> m5_154  [key=2, style=dotted];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_182  [key=2, style=dotted];
m5_197 -> m5_183  [key=2, style=dotted];
m5_197 -> m5_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_204  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_197 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_199 -> m5_47  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_200 -> m5_47  [key=2, style=dotted];
m5_200 -> m5_201  [key=0, style=solid];
m5_201 -> m5_47  [key=2, style=dotted];
m5_201 -> m5_202  [key=0, style=solid];
m5_202 -> m5_47  [key=2, style=dotted];
m5_202 -> m5_203  [key=0, style=solid];
m5_203 -> m5_47  [key=2, style=dotted];
m5_203 -> m5_204  [key=0, style=solid];
m5_204 -> m5_47  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_205 -> m5_47  [key=2, style=dotted];
m5_205 -> m5_206  [key=0, style=solid];
m5_206 -> m5_47  [key=2, style=dotted];
m5_206 -> m5_207  [key=0, style=solid];
m5_198 -> m5_23  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_184  [key=2, style=dotted];
m5_207 -> m5_191  [key=0, style=bold, color=blue];
m5_274 -> m5_275  [key=0, style=solid];
m5_277 -> m5_35  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_276 -> m5_8  [key=2, style=dotted];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_278 -> m5_10  [key=2, style=dotted];
m5_278 -> m5_279  [key=0, style=solid];
m5_281 -> m5_47  [key=2, style=dotted];
m5_281 -> m5_282  [key=0, style=solid];
m5_282 -> m5_47  [key=2, style=dotted];
m5_282 -> m5_283  [key=0, style=solid];
m5_283 -> m5_47  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_284 -> m5_47  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_285 -> m5_47  [key=2, style=dotted];
m5_285 -> m5_286  [key=0, style=solid];
m5_286 -> m5_47  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_287 -> m5_47  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_288 -> m5_47  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_289 -> m5_47  [key=2, style=dotted];
m5_289 -> m5_290  [key=0, style=solid];
m5_290 -> m5_47  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_291 -> m5_47  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_292 -> m5_47  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_293 -> m5_47  [key=2, style=dotted];
m5_293 -> m5_294  [key=0, style=solid];
m5_294 -> m5_47  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_275 -> m5_7  [key=2, style=dotted];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> m5_278  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_275 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_280 -> m5_23  [key=2, style=dotted];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_184  [key=2, style=dotted];
m5_279 -> m5_281  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_282  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_283  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_284  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_287  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_288  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_289  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_290  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_291  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_292  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_293  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_279 -> m5_182  [key=2, style=dotted];
m5_279 -> m5_183  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_295 -> m5_274  [key=0, style=bold, color=blue];
m5_130 -> m5_131  [key=0, style=solid];
m5_132 -> m5_46  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_135 -> m5_23  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_139  [key=2, style=dotted];
m5_135 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_134 -> m5_23  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_138  [key=2, style=dotted];
m5_134 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m5_131 -> m5_137  [key=2, style=dotted];
m5_131 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m5_133 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_9  [key=2, style=dotted];
m5_136 -> m5_130  [key=0, style=bold, color=blue];
m5_312 -> m5_314  [key=1, style=dashed, color=green, label="string[]"];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_316  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m5_312 -> m5_322  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m5_314 -> m5_315  [key=0, style=solid, color=green];
m5_314 -> m5_35  [key=2, style=dotted, color=green];
m5_314 -> m5_316  [key=1, style=dashed, color=green, label=result];
m5_313 -> m5_314  [key=0, style=solid, color=green];
m5_313 -> m5_8  [key=2, style=dotted];
m5_313 -> m5_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_47  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_305  [key=2, style=dotted];
m5_316 -> m5_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_317 -> m5_312  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_149 -> m5_8  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_151 -> m5_10  [key=2, style=dotted];
m5_151 -> m5_152  [key=0, style=solid];
m5_148 -> m5_7  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_151  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_148 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_9  [key=2, style=dotted];
m5_152 -> m5_23  [key=2, style=dotted];
m5_152 -> m5_154  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_153 -> m5_147  [key=0, style=bold, color=blue];
m5_11 -> m5_12  [key=0, style=solid];
m5_264 -> m5_265  [key=0, style=solid];
m5_267 -> m5_268  [key=0, style=solid, color=green];
m5_267 -> m5_35  [key=2, style=dotted, color=green];
m5_266 -> m5_267  [key=0, style=solid, color=green];
m5_266 -> m5_8  [key=2, style=dotted];
m5_266 -> m5_272  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_10  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_268  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_265 -> m5_7  [key=2, style=dotted];
m5_265 -> m5_272  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_23  [key=2, style=dotted];
m5_269 -> m5_154  [key=2, style=dotted];
m5_270 -> m5_264  [key=0, style=bold, color=blue];
m5_61 -> m5_62  [key=0, style=solid];
m5_63 -> m5_8  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_65 -> m5_47  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m5_62 -> m5_67  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_9  [key=2, style=dotted];
m5_66 -> m5_61  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=T1];
m5_22 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=T1];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_110 -> m5_111  [key=0, style=solid, color=green];
m5_110 -> m5_22  [key=2, style=dotted, color=green];
m5_109 -> m5_110  [key=0, style=solid, color=green];
m5_111 -> m5_60  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_108  [key=0, style=bold, color=blue];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_310  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m5_299 -> m5_303  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m5_299 -> m5_301  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_300 -> m5_8  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_307  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_302 -> m5_47  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_303 -> m5_305  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_303  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_301 -> m5_9  [key=2, style=dotted];
m5_304 -> m5_299  [key=0, style=bold, color=blue];
m5_37 -> m5_38  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid, color=green];
m5_114 -> m5_115  [key=0, style=solid, color=green];
m5_114 -> m5_93  [key=2, style=dotted, color=green];
m5_114 -> m5_118  [key=1, style=dashed, color=green, label=expectedOptions];
m5_115 -> m5_116  [key=0, style=solid, color=green];
m5_115 -> m5_46  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_47  [key=2, style=dotted];
m5_118 -> m5_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_116 -> m5_117  [key=0, style=solid, color=green];
m5_116 -> m5_35  [key=2, style=dotted, color=green];
m5_116 -> m5_118  [key=1, style=dashed, color=green, label=result];
m5_117 -> m5_118  [key=0, style=solid, color=green];
m5_117 -> m5_60  [key=2, style=dotted, color=green];
m5_119 -> m5_113  [key=0, style=bold, color=blue];
m5_71 -> m5_72  [key=0, style=solid, color=green];
m5_72 -> m5_73  [key=0, style=solid, color=green];
m5_72 -> m5_78  [key=2, style=dotted, color=green];
m5_72 -> m5_76  [key=1, style=dashed, color=green, label=expectedOptions];
m5_73 -> m5_74  [key=0, style=solid, color=green];
m5_73 -> m5_8  [key=2, style=dotted];
m5_73 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_47  [key=2, style=dotted];
m5_76 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_74 -> m5_75  [key=0, style=solid, color=green];
m5_74 -> m5_22  [key=2, style=dotted, color=green];
m5_74 -> m5_76  [key=1, style=dashed, color=green, label=result];
m5_75 -> m5_76  [key=0, style=solid, color=green];
m5_75 -> m5_60  [key=2, style=dotted, color=green];
m5_77 -> m5_71  [key=0, style=bold, color=blue];
m5_55 -> m5_56  [key=0, style=solid];
m5_58 -> m5_60  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_9  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_59 -> m5_55  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_160 -> m5_46  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_163 -> m5_23  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_139  [key=2, style=dotted];
m5_163 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_162 -> m5_23  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_138  [key=2, style=dotted];
m5_162 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m5_159 -> m5_165  [key=2, style=dotted];
m5_159 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m5_161 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_9  [key=2, style=dotted];
m5_164 -> m5_158  [key=0, style=bold, color=blue];
m5_46 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=T1];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m5_52 -> m5_47  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_50 -> m5_46  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_49 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_54  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_9  [key=2, style=dotted];
m5_53 -> m5_48  [key=0, style=bold, color=blue];
m5_211 -> m5_212  [key=0, style=solid];
m5_214 -> m5_215  [key=0, style=solid, color=green];
m5_214 -> m5_35  [key=2, style=dotted, color=green];
m5_213 -> m5_214  [key=0, style=solid, color=green];
m5_213 -> m5_8  [key=2, style=dotted];
m5_213 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_10  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_215  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_212 -> m5_7  [key=2, style=dotted];
m5_212 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_182  [key=2, style=dotted];
m5_216 -> m5_183  [key=2, style=dotted];
m5_216 -> m5_218  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_216 -> m5_219  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_216 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_216 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_216 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_216 -> m5_223  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_218 -> m5_47  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_47  [key=2, style=dotted];
m5_219 -> m5_220  [key=0, style=solid];
m5_220 -> m5_47  [key=2, style=dotted];
m5_220 -> m5_221  [key=0, style=solid];
m5_221 -> m5_47  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_222 -> m5_47  [key=2, style=dotted];
m5_222 -> m5_223  [key=0, style=solid];
m5_223 -> m5_47  [key=2, style=dotted];
m5_223 -> m5_224  [key=0, style=solid];
m5_217 -> m5_23  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_184  [key=2, style=dotted];
m5_224 -> m5_211  [key=0, style=bold, color=blue];
m5_188 -> m5_189  [key=0, style=solid];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_13 -> m5_26  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_10  [key=2, style=dotted];
m5_20 -> m5_23  [key=2, style=dotted];
m5_20 -> m5_24  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid, color=red];
m5_24 -> m5_27  [key=2, style=dotted];
m5_24 -> m5_28  [key=2, style=dotted];
m5_24 -> m5_4  [key=2, style=dotted];
m5_24 -> m5_5  [key=2, style=dotted];
m5_24 -> m5_6  [key=2, style=dotted];
m5_24 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_24 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_24 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_10  [key=2, style=dotted];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_21 -> m5_15  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_14  [key=2, style=dotted];
m5_23 -> m5_25  [key=1, style=dashed, color=red, label=descr];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> d14  [key=2, style=dotted];
m5_31 -> m5_35  [key=2, style=dotted, color=green];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> m5_29  [key=2, style=dotted, color=red];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_8  [key=2, style=dotted];
m5_30 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_28  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_36  [key=0, style=bold, color=blue];
m5_26 -> m5_22  [key=0, style=bold, color=blue];
m5_26 -> m5_12  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_10  [key=2, style=dotted];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_14  [key=2, style=dotted];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_40 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_45  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_226 -> m5_227  [key=0, style=solid];
m5_239 -> m5_240  [key=0, style=solid];
m5_272 -> m5_273  [key=0, style=solid];
m5_322 -> m5_47  [key=2, style=dotted];
m5_322 -> m5_323  [key=0, style=solid];
m5_319 -> m5_320  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_27 -> m5_25  [key=0, style=bold, color=blue];
m5_79 -> m5_80  [key=0, style=solid];
m5_81 -> m5_79  [key=0, style=bold, color=blue];
m5_310 -> m5_47  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_84 -> m5_82  [key=0, style=bold, color=blue];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [key=2, style=dotted];
m5_96 -> m5_94  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_85  [key=2, style=dotted];
m5_107 -> m5_105  [key=0, style=bold, color=blue];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_85  [key=2, style=dotted];
m5_122 -> m5_120  [key=0, style=bold, color=blue];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_85  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_210 -> m5_208  [key=0, style=bold, color=blue];
m5_225 -> m5_226  [key=0, style=solid];
m5_227 -> m5_225  [key=0, style=bold, color=blue];
m5_238 -> m5_239  [key=0, style=solid];
m5_240 -> m5_238  [key=0, style=bold, color=blue];
m5_271 -> m5_272  [key=0, style=solid];
m5_273 -> m5_271  [key=0, style=bold, color=blue];
m5_323 -> m5_321  [key=0, style=bold, color=blue];
m5_318 -> m5_319  [key=0, style=solid];
m5_320 -> m5_318  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_262 -> m5_263  [key=0, style=solid];
m5_297 -> m5_298  [key=0, style=solid];
m5_307 -> m5_308  [key=0, style=solid];
m5_309 -> m5_310  [key=0, style=solid];
m5_311 -> m5_309  [key=0, style=bold, color=blue];
m5_241 -> m5_242  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_70 -> m5_68  [key=0, style=bold, color=blue];
m5_155 -> m5_156  [key=0, style=solid];
m5_157 -> m5_155  [key=0, style=bold, color=blue];
m5_185 -> m5_186  [key=0, style=solid];
m5_187 -> m5_185  [key=0, style=bold, color=blue];
m5_261 -> m5_262  [key=0, style=solid];
m5_263 -> m5_261  [key=0, style=bold, color=blue];
m5_296 -> m5_297  [key=0, style=solid];
m5_298 -> m5_296  [key=0, style=bold, color=blue];
m5_306 -> m5_307  [key=0, style=solid];
m5_308 -> m5_306  [key=0, style=bold, color=blue];
m5_143 -> m5_144  [key=0, style=solid];
m5_140 -> m5_141  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_166 -> m5_167  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_146  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_146  [key=2, style=dotted];
m5_243 -> m5_241  [key=0, style=bold, color=blue];
m5_242 -> m5_243  [key=0, style=solid];
m5_145 -> m5_143  [key=0, style=bold, color=blue];
m5_142 -> m5_140  [key=0, style=bold, color=blue];
m5_141 -> m5_142  [key=0, style=solid];
m5_171 -> m5_169  [key=0, style=bold, color=blue];
m5_168 -> m5_166  [key=0, style=bold, color=blue];
m5_167 -> m5_168  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_190 -> m5_188  [key=0, style=bold, color=blue];
m5_244 -> m5_245  [key=0, style=solid];
m5_246 -> m5_8  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_248 -> m5_10  [key=2, style=dotted];
m5_248 -> m5_249  [key=0, style=solid];
m5_251 -> m5_47  [key=2, style=dotted];
m5_251 -> m5_252  [key=0, style=solid];
m5_252 -> m5_47  [key=2, style=dotted];
m5_252 -> m5_253  [key=0, style=solid];
m5_253 -> m5_47  [key=2, style=dotted];
m5_253 -> m5_254  [key=0, style=solid];
m5_254 -> m5_47  [key=2, style=dotted];
m5_254 -> m5_255  [key=0, style=solid];
m5_255 -> m5_47  [key=2, style=dotted];
m5_255 -> m5_256  [key=0, style=solid];
m5_256 -> m5_47  [key=2, style=dotted];
m5_256 -> m5_257  [key=0, style=solid];
m5_257 -> m5_47  [key=2, style=dotted];
m5_257 -> m5_258  [key=0, style=solid];
m5_258 -> m5_47  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_259 -> m5_47  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_245 -> m5_7  [key=2, style=dotted];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_248  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_245 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_9  [key=2, style=dotted];
m5_250 -> m5_23  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_184  [key=2, style=dotted];
m5_249 -> m5_251  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_252  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_253  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_254  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_255  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_256  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_257  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_258  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_259  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_249 -> m5_182  [key=2, style=dotted];
m5_249 -> m5_183  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_260 -> m5_244  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_29 -> m5_7  [key=2, style=dotted];
m5_29 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_23  [key=2, style=dotted];
m5_33 -> m5_24  [key=2, style=dotted];
m5_43 -> m5_47  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_41 -> m5_46  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_9  [key=2, style=dotted];
m5_42 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_44 -> m5_39  [key=0, style=bold, color=blue];
m5_44 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_15 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_15 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_16 -> m5_4  [key=2, style=dotted, color=red];
m5_16 -> m5_5  [key=2, style=dotted, color=red];
m5_16 -> m5_6  [key=2, style=dotted, color=red];
m5_16 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_16 -> m5_22  [key=1, style=dashed, color=red, label="lambda expression"];
m5_16 -> m5_7  [key=2, style=dotted];
m5_16 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_17 -> m5_18  [key=0, style=solid, color=green];
m5_17 -> m5_8  [key=2, style=dotted];
m5_17 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_18 -> m5_15  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_22  [key=2, style=dotted, color=green];
m5_172 -> m5_173  [key=0, style=solid];
m5_174 -> m5_8  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_176 -> m5_10  [key=2, style=dotted];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_178  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_173 -> m5_7  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_173 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_9  [key=2, style=dotted];
m5_177 -> m5_23  [key=2, style=dotted];
m5_177 -> m5_154  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_179 -> m5_23  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_138  [key=2, style=dotted];
m5_179 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_180 -> m5_23  [key=2, style=dotted];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_184  [key=2, style=dotted];
m5_178 -> m5_182  [key=2, style=dotted];
m5_178 -> m5_183  [key=2, style=dotted];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_181 -> m5_172  [key=0, style=bold, color=blue];
m5_123 -> m5_124  [key=0, style=solid];
m5_127 -> m5_47  [key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_125 -> m5_46  [key=2, style=dotted];
m5_125 -> m5_126  [key=0, style=solid];
m5_124 -> m5_127  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_129  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_9  [key=2, style=dotted];
m5_128 -> m5_123  [key=0, style=bold, color=blue];
m5_86 -> m5_87  [key=0, style=solid, color=green];
m5_87 -> m5_88  [key=0, style=solid, color=green];
m5_87 -> m5_93  [key=2, style=dotted, color=green];
m5_87 -> m5_91  [key=1, style=dashed, color=green, label=expectedOptions];
m5_88 -> m5_89  [key=0, style=solid, color=green];
m5_88 -> m5_46  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_47  [key=2, style=dotted];
m5_91 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_89 -> m5_90  [key=0, style=solid, color=green];
m5_89 -> m5_22  [key=2, style=dotted, color=green];
m5_89 -> m5_91  [key=1, style=dashed, color=green, label=result];
m5_90 -> m5_91  [key=0, style=solid, color=green];
m5_90 -> m5_60  [key=2, style=dotted, color=green];
m5_92 -> m5_86  [key=0, style=bold, color=blue];
m5_228 -> m5_231  [key=1, style=dashed, color=green, label=string];
m5_228 -> m5_229  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid, color=green];
m5_231 -> m5_35  [key=2, style=dotted, color=green];
m5_230 -> m5_231  [key=0, style=solid, color=green];
m5_230 -> m5_8  [key=2, style=dotted];
m5_230 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_10  [key=2, style=dotted];
m5_232 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_232  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_229 -> m5_7  [key=2, style=dotted];
m5_229 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_23  [key=2, style=dotted];
m5_233 -> m5_154  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_182  [key=2, style=dotted];
m5_234 -> m5_183  [key=2, style=dotted];
m5_234 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label=lines];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_23  [key=2, style=dotted];
m5_236 -> m5_184  [key=2, style=dotted];
m5_235 -> m5_23  [key=2, style=dotted];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_138  [key=2, style=dotted];
m5_235 -> m5_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_237 -> m5_228  [key=0, style=bold, color=blue];
m5_45 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_325 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_326 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_331 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_332 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_333 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_335 -> m5_272  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_338 -> m5_322  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m5_337 -> m5_310  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m5_324 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_328 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_330 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_334 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_336 -> m5_297  [key=1, style=dashed, color=darkseagreen4, label=help];
m5_327 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m5_329 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_3  [key=2, style=dotted];
m6_17 -> m6_20  [key=2, style=dotted];
m6_17 -> m6_5  [key=2, style=dotted];
m6_17 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_18 -> m6_15  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_3  [key=2, style=dotted];
m6_13 -> m6_4  [key=2, style=dotted];
m6_13 -> m6_5  [key=2, style=dotted];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_29 -> m6_30  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_21  [key=0, style=bold, color=blue];
m6_30 -> m6_31  [key=0, style=solid];
m6_31 -> m6_29  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_7 -> m6_3  [key=2, style=dotted, color=green];
m6_7 -> m6_4  [key=2, style=dotted, color=green];
m6_7 -> m6_5  [key=2, style=dotted, color=green];
m6_8 -> m6_6  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_3  [key=2, style=dotted];
m6_26 -> m6_20  [key=2, style=dotted];
m6_26 -> m6_5  [key=2, style=dotted];
m6_26 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_27 -> m6_24  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_3  [key=2, style=dotted];
m6_10 -> m6_4  [key=2, style=dotted];
m6_10 -> m6_5  [key=2, style=dotted];
m6_11 -> m6_9  [key=0, style=bold, color=blue];
}
