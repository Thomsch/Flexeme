digraph  {
n6 [label="CommandLine.Tests.Fakes.FakeImmutableOptions", span=""];
n0 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
n1 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="this.stringValue = stringValue", span="15-15"];
n2 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="this.intSequence = intSequence", span="16-16"];
n3 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="this.boolValue = boolValue", span="17-17"];
n4 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="this.longValue = longValue", span="18-18"];
n5 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="Exit CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m13_63 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="this.Forget(cacheEntry)", span="159-159"];
m13_57 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Release(object)", span="149-149"];
m13_58 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="this.entries", span="151-151"];
m13_61 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="var instanceEntries = bindingEntry.Where(cacheEntry => ReferenceEquals(instance, cacheEntry.Reference.Instance)).ToList()", span="156-156"];
m13_59 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="var instanceFound = false", span="153-153"];
m13_60 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="this.entries.Values.SelectMany(bindingEntries => bindingEntries.Values).ToList()", span="154-154"];
m13_66 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="return instanceFound;", span="165-165"];
m13_64 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="bindingEntry.Remove(cacheEntry)", span="160-160"];
m13_62 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label=instanceEntries, span="157-157"];
m13_65 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="instanceFound = true", span="161-161"];
m13_67 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Release(object)", span="149-149"];
m13_80 [cluster="object.ReferenceEquals(object, object)", file="FakeOptionsWithRequired.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m13_0 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", span="37-37"];
m13_1 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="Ensure.ArgumentNotNull(pipeline, ''pipeline'')", span="39-39"];
m13_2 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="Ensure.ArgumentNotNull(cachePruner, ''cachePruner'')", span="40-40"];
m13_3 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="this.Pipeline = pipeline", span="42-42"];
m13_4 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="cachePruner.Start(this)", span="43-43"];
m13_5 [cluster="Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Cache(Ninject.Activation.IPipeline, Ninject.Activation.Caching.ICachePruner)", span="37-37"];
m13_14 [cluster="Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Infrastructure.Disposal.DisposableObject.Dispose(bool)", span="37-37"];
m13_123 [cluster="Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", span="238-238"];
m13_90 [cluster="Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", span="238-238"];
m13_121 [cluster="Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", file="FakeOptionsWithRequired.cs", label="cacheEntries.ToList()", span="240-240"];
m13_122 [cluster="Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", file="FakeOptionsWithRequired.cs", label="this.Forget(entry)", span="242-242"];
m13_8 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Dispose(bool)", span="63-63"];
m13_9 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="disposing && !IsDisposed", span="65-65"];
m13_11 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="base.Dispose(disposing)", span="70-70"];
m13_10 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="this.Clear()", span="67-67"];
m13_12 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Dispose(bool)", span="63-63"];
m13_70 [cluster="Unk.Where", file="FakeOptionsWithRequired.cs", label="Entry Unk.Where", span=""];
m13_44 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="Multimap<IBindingConfiguration, CacheEntry> bindings", span="118-118"];
m13_38 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="107-107"];
m13_39 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="109-109"];
m13_40 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="var scope = context.GetScope()", span="110-110"];
m13_47 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="bindings[context.Binding.BindingConfiguration]", span="124-124"];
m13_48 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="context.HasInferredGenericArguments", span="126-126"];
m13_50 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="var arguments = context.GenericArguments", span="129-129"];
m13_41 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="scope == null", span="111-111"];
m13_45 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="!this.entries.TryGetValue(scope, out bindings)", span="119-119"];
m13_42 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="return null;", span="113-113"];
m13_43 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="this.entries", span="116-116"];
m13_46 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="return null;", span="121-121"];
m13_53 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="return null;", span="140-140"];
m13_49 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="var cachedArguments = entry.Context.GenericArguments", span="128-128"];
m13_52 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="return entry.Reference.Instance;", span="137-137"];
m13_51 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="!cachedArguments.SequenceEqual(arguments)", span="131-131"];
m13_54 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="107-107"];
m13_72 [cluster="Unk.Forget", file="FakeOptionsWithRequired.cs", label="Entry Unk.Forget", span=""];
m13_128 [cluster="Ninject.Activation.IPipeline.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.IPipeline.Deactivate(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="40-40"];
m13_73 [cluster="Unk.Remove", file="FakeOptionsWithRequired.cs", label="Entry Unk.Remove", span=""];
m13_131 [cluster="Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="266-266"];
m13_29 [cluster="Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="266-266"];
m13_129 [cluster="Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="this.Context = context", span="268-268"];
m13_130 [cluster="Ninject.Activation.Caching.Cache.CacheEntry.CacheEntry(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="this.Reference = reference", span="269-269"];
m13_55 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_6 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m13_28 [cluster="Ninject.Activation.IContext.GetScope()", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.IContext.GetScope()", span="71-71"];
m13_68 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m13_118 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="231-231"];
m13_35 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="this.Clear(weakScopeReference)", span="94-94"];
m13_34 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="94-94"];
m13_36 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="94-94"];
m13_78 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="ReferenceEquals(instance, cacheEntry.Reference.Instance)", span="156-156"];
m13_74 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="154-154"];
m13_77 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="156-156"];
m13_75 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="bindingEntries.Values", span="154-154"];
m13_76 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="154-154"];
m13_79 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="156-156"];
m13_91 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="176-176"];
m13_94 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="176-176"];
m13_92 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="!((ReferenceEqualWeakReference)scope.Key).IsAlive", span="176-176"];
m13_93 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="176-176"];
m13_95 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label=scope, span="176-176"];
m13_96 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="176-176"];
m13_113 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Entry lambda expression", span="222-222"];
m13_114 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="bindingEntries.Value", span="222-222"];
m13_115 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="222-222"];
m13_119 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="GetAllBindingEntries(scopeCache.Value)", span="231-231"];
m13_120 [cluster="lambda expression", file="FakeOptionsWithRequired.cs", label="Exit lambda expression", span="231-231"];
m13_13 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Clear()", span="206-206"];
m13_105 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="FakeOptionsWithRequired.cs", label="this.entries", span="208-208"];
m13_106 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="FakeOptionsWithRequired.cs", label="this.Forget(this.GetAllCacheEntries())", span="210-210"];
m13_107 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="FakeOptionsWithRequired.cs", label="this.entries.Clear()", span="211-211"];
m13_108 [cluster="Ninject.Activation.Caching.Cache.Clear()", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Clear()", span="206-206"];
m13_103 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m13_56 [cluster="Unk.SequenceEqual", file="FakeOptionsWithRequired.cs", label="Entry Unk.SequenceEqual", span=""];
m13_112 [cluster="Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", span="220-220"];
m13_104 [cluster="Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", span="220-220"];
m13_111 [cluster="Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", file="FakeOptionsWithRequired.cs", label="return bindings.SelectMany(bindingEntries => bindingEntries.Value);", span="222-222"];
m13_7 [cluster="Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.ICachePruner.Start(Ninject.Activation.Caching.IPruneable)", span="25-25"];
m13_32 [cluster="Ninject.Infrastructure.Multimap<K, V>.Multimap()", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Multimap()", span="22-22"];
m13_109 [cluster="Ninject.Activation.Caching.Cache.GetAllCacheEntries()", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.GetAllCacheEntries()", span="229-229"];
m13_116 [cluster="Ninject.Activation.Caching.Cache.GetAllCacheEntries()", file="FakeOptionsWithRequired.cs", label="return this.entries.SelectMany(scopeCache => GetAllBindingEntries(scopeCache.Value));", span="231-231"];
m13_117 [cluster="Ninject.Activation.Caching.Cache.GetAllCacheEntries()", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.GetAllCacheEntries()", span="229-229"];
m13_31 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m13_30 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", span="29-29"];
m13_127 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", span="250-250"];
m13_124 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", span="250-250"];
m13_125 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="FakeOptionsWithRequired.cs", label="this.Clear(entry.Reference.Instance)", span="252-252"];
m13_126 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="FakeOptionsWithRequired.cs", label="this.Pipeline.Deactivate(entry.Context, entry.Reference)", span="253-253"];
m13_81 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Prune()", span="172-172"];
m13_82 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="this.entries", span="174-174"];
m13_83 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="var disposedScopes = this.entries.Where(scope => !((ReferenceEqualWeakReference)scope.Key).IsAlive).Select(scope => scope).ToList()", span="176-176"];
m13_84 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label=disposedScopes, span="177-177"];
m13_85 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="this.entries.Remove(disposedScope.Key)", span="179-179"];
m13_86 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="this.Forget(GetAllBindingEntries(disposedScope.Value))", span="180-180"];
m13_87 [cluster="Ninject.Activation.Caching.Cache.Prune()", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Prune()", span="172-172"];
m13_88 [cluster="Unk.Select", file="FakeOptionsWithRequired.cs", label="Entry Unk.Select", span=""];
m13_71 [cluster="Unk.ToList", file="FakeOptionsWithRequired.cs", label="Entry Unk.ToList", span=""];
m13_22 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="this.entries[weakScopeReference] = new Multimap<IBindingConfiguration, CacheEntry>()", span="90-90"];
m13_15 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="78-78"];
m13_16 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="80-80"];
m13_17 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="var scope = context.GetScope()", span="82-82"];
m13_18 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="var entry = new CacheEntry(context, reference)", span="83-83"];
m13_26 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="this.entries[weakScopeReference].Add(context.Binding.BindingConfiguration, entry)", span="98-98"];
m13_20 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="var weakScopeReference = new ReferenceEqualWeakReference(scope)", span="87-87"];
m13_23 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="var notifyScope = scope as INotifyWhenDisposed", span="91-91"];
m13_19 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="this.entries", span="85-85"];
m13_21 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="!this.entries.ContainsKey(weakScopeReference)", span="88-88"];
m13_25 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="notifyScope.Disposed += (o, e) => this.Clear(weakScopeReference)", span="94-94"];
m13_24 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="notifyScope != null", span="92-92"];
m13_27 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="78-78"];
m13_98 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="Multimap<IBindingConfiguration, CacheEntry> bindings", span="194-194"];
m13_37 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Activation.Caching.Cache.Clear(object)", span="190-190"];
m13_97 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="this.entries", span="192-192"];
m13_99 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="this.entries.TryGetValue(scope, out bindings)", span="195-195"];
m13_100 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="this.entries.Remove(scope)", span="197-197"];
m13_101 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="this.Forget(GetAllBindingEntries(bindings))", span="198-198"];
m13_102 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="FakeOptionsWithRequired.cs", label="Exit Ninject.Activation.Caching.Cache.Clear(object)", span="190-190"];
m13_33 [cluster="Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", file="FakeOptionsWithRequired.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", span="64-64"];
m13_110 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m13_89 [cluster="Unk.GetAllBindingEntries", file="FakeOptionsWithRequired.cs", label="Entry Unk.GetAllBindingEntries", span=""];
m13_69 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="FakeOptionsWithRequired.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m13_132 [file="FakeOptionsWithRequired.cs", label="Ninject.Activation.Caching.Cache", span=""];
m13_133 [file="FakeOptionsWithRequired.cs", label=weakScopeReference, span=""];
m13_134 [file="FakeOptionsWithRequired.cs", label=object, span=""];
m13_135 [file="FakeOptionsWithRequired.cs", label="Ninject.Activation.Caching.Cache.CacheEntry", span=""];
m18_5 [cluster="Ninject.Tests.ExtensionsForIEnumerable.ShouldContainSingle<T>(System.Collections.Generic.IEnumerable<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Entry Ninject.Tests.ExtensionsForIEnumerable.ShouldContainSingle<T>(System.Collections.Generic.IEnumerable<T>)", span="16-16"];
m18_6 [cluster="Ninject.Tests.ExtensionsForIEnumerable.ShouldContainSingle<T>(System.Collections.Generic.IEnumerable<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="return Assert.Single(source);", span="18-18"];
m18_7 [cluster="Ninject.Tests.ExtensionsForIEnumerable.ShouldContainSingle<T>(System.Collections.Generic.IEnumerable<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Exit Ninject.Tests.ExtensionsForIEnumerable.ShouldContainSingle<T>(System.Collections.Generic.IEnumerable<T>)", span="16-16"];
m18_0 [cluster="Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Entry Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="8-8"];
m18_1 [cluster="Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label=series, span="10-10"];
m18_2 [cluster="Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="action(item)", span="12-12"];
m18_3 [cluster="Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Exit Ninject.Tests.ExtensionsForIEnumerable.Map<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="8-8"];
m18_8 [cluster="Unk.Single", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Entry Unk.Single", span=""];
m18_4 [cluster="System.Action<T>.Invoke(T)", file="FakeOptionsWithSequenceAndOnlyMaxConstraint.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m31_0 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="Entry Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="41-41"];
m31_1 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="Ensure.ArgumentNotNull(selector, ''selector'')", span="43-43"];
m31_2 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="Ensure.ArgumentNotNull(injectorFactory, ''injectorFactory'')", span="44-44"];
m31_3 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="Selector = selector", span="46-46"];
m31_4 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="InjectorFactory = injectorFactory", span="47-47"];
m31_5 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", file="InstanceBuilderTests.cs", label="Exit Ninject.Planning.Strategies.PropertyReflectionStrategy.PropertyReflectionStrategy(Ninject.Selection.ISelector, Ninject.Injection.IInjectorFactory)", span="41-41"];
m31_13 [cluster="Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", file="InstanceBuilderTests.cs", label="Entry Ninject.Planning.Directives.PropertyInjectionDirective.PropertyInjectionDirective(System.Reflection.PropertyInfo, Ninject.Injection.PropertyInjector)", span="38-38"];
m31_7 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="InstanceBuilderTests.cs", label="Entry Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="55-55"];
m31_8 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="InstanceBuilderTests.cs", label="Ensure.ArgumentNotNull(plan, ''plan'')", span="57-57"];
m31_9 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="InstanceBuilderTests.cs", label="Selector.SelectPropertiesForInjection(plan.Type)", span="59-59"];
m31_10 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="InstanceBuilderTests.cs", label="plan.Add(new PropertyInjectionDirective(property, InjectorFactory.Create(property)))", span="60-60"];
m31_11 [cluster="Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", file="InstanceBuilderTests.cs", label="Exit Ninject.Planning.Strategies.PropertyReflectionStrategy.Execute(Ninject.Planning.IPlan)", span="55-55"];
m31_12 [cluster="Ninject.Selection.ISelector.SelectPropertiesForInjection(System.Type)", file="InstanceBuilderTests.cs", label="Entry Ninject.Selection.ISelector.SelectPropertiesForInjection(System.Type)", span="46-46"];
m31_6 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", file="InstanceBuilderTests.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
m31_14 [cluster="Ninject.Injection.IInjectorFactory.Create(System.Reflection.PropertyInfo)", file="InstanceBuilderTests.cs", label="Entry Ninject.Injection.IInjectorFactory.Create(System.Reflection.PropertyInfo)", span="34-34"];
m31_15 [cluster="Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", file="InstanceBuilderTests.cs", label="Entry Ninject.Planning.IPlan.Add(Ninject.Planning.Directives.IDirective)", span="31-31"];
m31_16 [file="InstanceBuilderTests.cs", label="Ninject.Planning.Strategies.PropertyReflectionStrategy", span=""];
m32_11 [cluster="Unk.SingleOrDefault", file="NameLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m32_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m32_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=red, community=0, file="NameLookup.cs", label="0: return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="13-13"];
m32_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m32_7 [cluster="string.MatchName(string, string, System.StringComparer)", file="NameLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m32_12 [cluster="Unk.ToMaybe", file="NameLookup.cs", label="Entry Unk.ToMaybe", span=""];
m32_21 [cluster="Unk.Just", file="NameLookup.cs", label="Entry Unk.Just", span=""];
m32_18 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="22-22"];
m32_5 [cluster="lambda expression", color=red, community=0, file="NameLookup.cs", label="0: name.MatchName(a.ShortName, a.LongName, comparer)", span="13-13"];
m32_4 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="13-13"];
m32_6 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="13-13"];
m32_16 [cluster="lambda expression", file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="20-20"];
m32_15 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="20-20"];
m32_17 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="20-20"];
m32_19 [cluster="lambda expression", file="NameLookup.cs", label="Maybe.Just(spec.Separator)", span="22-22"];
m32_20 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="22-22"];
m32_14 [cluster="Unk.Return", file="NameLookup.cs", label="Entry Unk.Return", span=""];
m32_13 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookup.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m32_3 [cluster="Unk.Any", file="NameLookup.cs", label="Entry Unk.Any", span=""];
m32_8 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m32_9 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="19-22"];
m32_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m32_22 [file="NameLookup.cs", label=string, span=""];
m32_23 [file="NameLookup.cs", label="System.StringComparer", span=""];
m32_24 [file="NameLookup.cs", label=string, span=""];
m32_25 [file="NameLookup.cs", label="System.StringComparer", span=""];
m33_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m33_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m33_31 [cluster="Unk.IsOption", file="OptionMapperTests.cs", label="Entry Unk.IsOption", span=""];
m33_13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70"];
m33_12 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="23-24"];
m33_11 [cluster="lambda expression", file="OptionMapperTests.cs", label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24"];
m33_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m33_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43"];
m33_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37"];
m33_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m33_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m33_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m33_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m33_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m33_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", color=green, community=0, file="OptionMapperTests.cs", label="0: Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m33_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m33_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m33_21 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m33_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m33_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m33_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m33_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m33_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m33_32 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m33_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="OptionMapperTests.cs", label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
m33_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m33_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="OptionMapperTests.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m33_15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m33_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m33_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", color=green, community=0, file="OptionMapperTests.cs", label="0: Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m33_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="OptionMapperTests.cs", label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
m33_16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="OptionMapperTests.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
m33_14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75"];
m34_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m34_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings = new ParserSettings()", span="41-41"];
m34_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration == null", span="39-39"];
m34_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration(settings)", span="42-42"];
m34_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings.Consumed = true", span="43-43"];
m34_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="throw new ArgumentNullException(''configuration'');", span="39-39"];
m34_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m34_87 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m34_93 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m34_37 [cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs", label="Entry CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198"];
m34_118 [cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs", label="return ignoreUnknownArguments\r\n                ? Enumerable.Empty<ErrorType>().Concat(ErrorType.UnknownOptionError)\r\n                : Enumerable.Empty<ErrorType>();", span="200-202"];
m34_119 [cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs", label="Exit CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198"];
m34_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="55-55"];
m34_21 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Dispose(false)", span="57-57"];
m34_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="55-55"];
m34_86 [cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", file="Parser.cs", label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span=""];
m34_89 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m34_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Parser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m34_59 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144"];
m34_66 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="150-158"];
m34_64 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types.Length == 0", span="148-148"];
m34_60 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="args == null", span="146-146"];
m34_62 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types == null", span="147-147"];
m34_65 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="148-148"];
m34_61 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="146-146"];
m34_63 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''types'');", span="147-147"];
m34_67 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144"];
m34_16 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m34_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m34_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings = settings", span="48-48"];
m34_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings.Consumed = true", span="49-49"];
m34_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m34_113 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m34_43 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114"];
m34_50 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="121-129"];
m34_48 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="119-119"];
m34_44 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="factory == null", span="117-117"];
m34_46 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="!typeof(T).IsMutable()", span="118-118"];
m34_49 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="119-119"];
m34_45 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''factory'');", span="117-117"];
m34_47 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentException(''factory'');", span="118-118"];
m34_51 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114"];
m34_68 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m34_52 [cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m34_88 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20"];
m34_120 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Parser.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m34_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m34_97 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m34_5 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m34_6 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="settings = new ParserSettings { Consumed = true }", span="28-28"];
m34_7 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="26-26"];
m34_31 [cluster="CSharpx.Maybe.Just<T>(T)", file="Parser.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m34_117 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205"];
m34_122 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="parserResult.Tag == ParserResultType.NotParsed", span="207-207"];
m34_123 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="((NotParsed<T>)parserResult).Errors.Any()", span="209-209"];
m34_124 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="211-211"];
m34_125 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="return parserResult;", span="215-215"];
m34_126 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205"];
m34_116 [cluster="System.Func<TResult>.Invoke()", file="Parser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m34_130 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="211-211"];
m34_1 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="21-21"];
m34_0 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="21-21"];
m34_2 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="21-21"];
m34_91 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="177-178"];
m34_99 [cluster="lambda expression", file="Parser.cs", label=toks, span="179-179"];
m34_102 [cluster="lambda expression", file="Parser.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="185-185"];
m34_90 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="177-178"];
m34_92 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="177-178"];
m34_94 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="178-178"];
m34_95 [cluster="lambda expression", color=green, community=0, file="Parser.cs", label="0: NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="178-178"];
m34_96 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="178-178"];
m34_40 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="96-96"];
m34_57 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="124-124"];
m34_74 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="152-152"];
m34_105 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="185-185"];
m34_108 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="186-186"];
m34_111 [cluster="lambda expression", file="Parser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="187-187"];
m34_101 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="184-185"];
m34_107 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="186-186"];
m34_98 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="179-179"];
m34_100 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="179-179"];
m34_103 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="184-185"];
m34_104 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="185-185"];
m34_39 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="96-96"];
m34_41 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="96-96"];
m34_56 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="124-124"];
m34_58 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="124-124"];
m34_73 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="152-152"];
m34_75 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="152-152"];
m34_106 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="185-185"];
m34_109 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="186-186"];
m34_110 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="187-187"];
m34_112 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="187-187"];
m34_35 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="94-100"];
m34_54 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="122-128"];
m34_70 [cluster="lambda expression", file="Parser.cs", label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="151-157"];
m34_34 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="94-100"];
m34_36 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="94-100"];
m34_53 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="122-128"];
m34_55 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="122-128"];
m34_69 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="151-157"];
m34_71 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="151-157"];
m34_131 [cluster="lambda expression", file="Parser.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", span="211-211"];
m34_132 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="211-211"];
m34_127 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m34_128 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m34_121 [cluster="System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", span="94-94"];
m34_129 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m34_133 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m34_80 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m34_32 [cluster="CSharpx.Maybe.Nothing<T>()", file="Parser.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m34_142 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m34_72 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Parser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35"];
m34_30 [cluster="System.Type.IsMutable()", file="Parser.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m34_33 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191"];
m34_114 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="return DisplayHelp(\r\n                parseFunc(),\r\n                settings.HelpWriter);", span="193-195"];
m34_115 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191"];
m34_76 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="164-164"];
m34_77 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Dispose(true)", span="166-166"];
m34_78 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="GC.SuppressFinalize(this)", span="168-168"];
m34_79 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="164-164"];
m34_24 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m34_28 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="93-101"];
m34_27 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91"];
m34_25 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="87-87"];
m34_26 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="87-87"];
m34_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m34_42 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171"];
m34_81 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=green, community=0, file="Parser.cs", label="0: var normalize = settings.IgnoreUnknownArguments\r\n                ? toks => Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))\r\n                : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks)", span="176-179"];
m34_82 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="181-186"];
m34_83 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="187-187"];
m34_84 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="return explodedTokens;", span="188-188"];
m34_85 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171"];
m34_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="218-218"];
m34_135 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposed, span="220-220"];
m34_138 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings != null", span="227-227"];
m34_139 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings.Dispose()", span="229-229"];
m34_140 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="disposed = true", span="232-232"];
m34_136 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="return;", span="222-222"];
m34_137 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposing, span="225-225"];
m34_141 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="218-218"];
m34_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m34_134 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m34_150 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m34_151 [file="Parser.cs", label="CommandLine.ParserSettings", span=""];
m34_152 [file="Parser.cs", label=normalize, span=""];
m34_143 [file="Parser.cs", label="CommandLine.Parser", span=""];
m34_144 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m34_145 [file="Parser.cs", label=factory, span=""];
m34_146 [file="Parser.cs", label="System.Func<T>", span=""];
m34_147 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m34_148 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m34_149 [file="Parser.cs", label="params System.Type[]", span=""];
m34_153 [file="Parser.cs", label="CommandLine.ParserResult<T>", span=""];
m35_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", span="36-36"];
m35_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m35_0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m35_1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", color=red, community=0, file="ParserResultExtensionsTests.cs", label="0: return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Tag == TypeDescriptorKind.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="15-24"];
m35_2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m35_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="10-10"];
m35_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m35_29 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="32-32"];
m35_5 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="0: f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Tag == TypeDescriptorKind.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { }", span="17-22"];
m35_12 [cluster="lambda expression", color=red, community=0, file="ParserResultExtensionsTests.cs", label="1: info.Tag == TypeDescriptorKind.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f))\r\n                                        : new Token[] { }", span="19-21"];
m35_4 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="16-22"];
m35_6 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="16-22"];
m35_11 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="18-21"];
m35_13 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="18-21"];
m35_26 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="t.Equals(nameToken)", span="29-29"];
m35_25 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="29-29"];
m35_27 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="29-29"];
m35_30 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="v.IsValue()", span="32-32"];
m35_31 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="32-32"];
m35_28 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m35_16 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", span="27-27"];
m35_17 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="var nameIndex = tokens.IndexOf(t => t.Equals(nameToken))", span="29-29"];
m35_19 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="return tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue());", span="32-32"];
m35_18 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="nameIndex >= 0", span="30-30"];
m35_20 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="return new Token[] { };", span="34-34"];
m35_21 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token)", span="27-27"];
m35_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m35_10 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m35_7 [cluster="CommandLine.Core.Token.IsName()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m35_14 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>.OfSequence(CommandLine.Core.Token)", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.Token>.OfSequence(CommandLine.Core.Token)", span="27-27"];
m35_8 [cluster="CommandLine.Core.Token.IsValue()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m35_9 [cluster="System.Func<T, TResult>.Invoke(T)", file="ParserResultExtensionsTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m35_32 [file="ParserResultExtensionsTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m35_33 [file="ParserResultExtensionsTests.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", span=""];
m35_34 [file="ParserResultExtensionsTests.cs", label="CommandLine.Core.Token", span=""];
m35_35 [file="ParserResultExtensionsTests.cs", label="CommandLine.Core.Token", span=""];
m37_5 [cluster="Unk.BeTrue", file="ReflectionExtensions.cs", label="Entry Unk.BeTrue", span=""];
m37_9 [cluster="Unk.BeFalse", file="ReflectionExtensions.cs", label="Entry Unk.BeFalse", span=""];
m37_0 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12"];
m37_1 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", color=green, community=0, file="ReflectionExtensions.cs", label="0: typeof(FakeOptions).IsMutable().Should().BeTrue()", span="14-14"];
m37_2 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12"];
m37_6 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18"];
m37_7 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", color=green, community=0, file="ReflectionExtensions.cs", label="0: typeof(FakeImmutableOptions).IsMutable().Should().BeFalse()", span="20-20"];
m37_8 [cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="ReflectionExtensions.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18"];
m37_4 [cluster="Unk.Should", file="ReflectionExtensions.cs", label="Entry Unk.Should", span=""];
m37_3 [cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m38_68 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m38_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="65-65"];
m38_69 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m38_44 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m38_67 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m38_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m38_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="return new DefaultSentenceBuilder();", span="23-23"];
m38_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m38_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="149-174"];
m38_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="69-69"];
m38_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="69-69"];
m38_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="69-69"];
m38_7 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="74-74"];
m38_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="74-74"];
m38_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="74-74"];
m38_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="79-79"];
m38_11 [cluster="lambda expression", file="SentenceBuilder.cs", label="''USAGE:''", span="79-79"];
m38_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="79-79"];
m38_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="86-88"];
m38_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="86-88"];
m38_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="86-88"];
m38_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="94-94"];
m38_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Display version information.''", span="94-94"];
m38_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="94-94"];
m38_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="101-134"];
m38_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="103-103"];
m38_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="106-106"];
m38_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="108-109"];
m38_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="111-111"];
m38_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="113-113"];
m38_31 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="118-118"];
m38_34 [cluster="lambda expression", file="SentenceBuilder.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="123-123"];
m38_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="129-129"];
m38_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="105-105"];
m38_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="107-107"];
m38_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="110-110"];
m38_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="112-112"];
m38_30 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="117-117"];
m38_33 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.SequenceOutOfRangeError", span="122-122"];
m38_36 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadVerbSelectedError", span="128-128"];
m38_38 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.NoVerbSelectedError", span="130-130"];
m38_29 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="114-116"];
m38_32 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="119-121"];
m38_35 [cluster="lambda expression", file="SentenceBuilder.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with fewer or more items than required.'');", span="124-127"];
m38_39 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''No verb selected.'';", span="131-131"];
m38_40 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="101-134"];
m38_41 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="133-133"];
m38_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="142-176"];
m38_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="144-146"];
m38_47 [cluster="lambda expression", file="SentenceBuilder.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="148-174"];
m38_57 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="156-161"];
m38_48 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="175-175"];
m38_49 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="142-176"];
m38_55 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="151-153"];
m38_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="154-154"];
m38_58 [cluster="lambda expression", file="SentenceBuilder.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="163-173"];
m38_59 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="149-174"];
m38_65 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m38_43 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m38_51 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m38_60 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m38_42 [cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs", label="Entry string.JoinTo(params string[])", span="50-50"];
m38_70 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m38_66 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m38_53 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m38_63 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m38_64 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m38_52 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m38_61 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m38_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m38_62 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m38_71 [file="SentenceBuilder.cs", label=bySet, span=""];
m40_0 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="Tokenizer.cs", label="Entry Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m40_3 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2) });", span="28-28"];
m40_1 [cluster="Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", file="Tokenizer.cs", label="Exit Ninject.Modules.IModuleLoaderPlugin.LoadModules(System.Collections.Generic.IEnumerable<string>)", span="39-39"];
m40_2 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="26-26"];
m40_4 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, string[])", span="24-24"];
m40_42 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", span="221-221"];
m40_45 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10) });", span="225-226"];
m40_43 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="223-223"];
m40_44 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="223-223"];
m40_46 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, string[])", span="221-221"];
m40_27 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", span="139-139"];
m40_30 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7) });", span="143-143"];
m40_28 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="141-141"];
m40_29 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="141-141"];
m40_31 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, string[])", span="139-139"];
m40_52 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", span="282-282"];
m40_55 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12) });", span="286-287"];
m40_53 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="284-284"];
m40_54 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="284-284"];
m40_56 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, string[])", span="282-282"];
m40_72 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", span="416-416"];
m40_75 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14), typeof(T15), typeof(T16) });", span="420-421"];
m40_73 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="418-418"];
m40_74 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="418-418"];
m40_76 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, string[])", span="416-416"];
m40_17 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", span="90-90"];
m40_20 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5) });", span="94-94"];
m40_18 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="92-92"];
m40_19 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="92-92"];
m40_21 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, string[])", span="90-90"];
m40_47 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", span="251-251"];
m40_50 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11) });", span="255-256"];
m40_48 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="253-253"];
m40_49 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="253-253"];
m40_51 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, string[])", span="251-251"];
m40_7 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", span="45-45"];
m40_10 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3) });", span="49-49"];
m40_8 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="47-47"];
m40_9 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="47-47"];
m40_11 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, string[])", span="45-45"];
m40_37 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", span="192-192"];
m40_40 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9) });", span="196-197"];
m40_38 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="194-194"];
m40_39 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="194-194"];
m40_41 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, string[])", span="192-192"];
m40_57 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", span="314-314"];
m40_60 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13) });", span="318-319"];
m40_58 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="316-316"];
m40_59 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="316-316"];
m40_61 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, string[])", span="314-314"];
m40_22 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", span="114-114"];
m40_25 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6) });", span="118-118"];
m40_23 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="116-116"];
m40_24 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="116-116"];
m40_26 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, string[])", span="114-114"];
m40_6 [cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Tokenizer.cs", label="Entry CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="129-129"];
m40_62 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", span="347-347"];
m40_65 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14) });", span="351-352"];
m40_63 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="349-349"];
m40_64 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="349-349"];
m40_66 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, string[])", span="347-347"];
m40_67 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", span="381-381"];
m40_70 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14), typeof(T15) });", span="385-386"];
m40_68 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="383-383"];
m40_69 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="383-383"];
m40_71 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, string[])", span="381-381"];
m40_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Tokenizer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m40_12 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", span="67-67"];
m40_15 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", color=green, community=0, file="Tokenizer.cs", label="0: return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4) });", span="71-71"];
m40_13 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="69-69"];
m40_14 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="69-69"];
m40_16 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, string[])", span="67-67"];
m40_32 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", span="165-165"];
m40_35 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8) });", span="169-169"];
m40_33 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="parser == null", span="167-167"];
m40_34 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="throw new ArgumentNullException(''parser'');", span="167-167"];
m40_36 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", file="Tokenizer.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, string[])", span="165-165"];
n6 -> n1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
n6 -> n2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
n6 -> n3  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
n6 -> n4  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<int>", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=bool, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=long, style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [color=blue, key=0, style=bold];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_72  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_57 -> m13_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_58 -> m13_59  [key=0, style=solid];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_70  [key=2, style=dotted];
m13_61 -> m13_71  [key=2, style=dotted];
m13_61 -> m13_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_66  [color=darkseagreen4, key=1, label=instanceFound, style=dashed];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_66  [key=0, style=solid];
m13_60 -> m13_68  [key=2, style=dotted];
m13_60 -> m13_69  [key=2, style=dotted];
m13_60 -> m13_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_60 -> m13_64  [color=darkseagreen4, key=1, label=bindingEntry, style=dashed];
m13_66 -> m13_67  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_73  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_60  [key=0, style=solid];
m13_62 -> m13_64  [color=darkseagreen4, key=1, label=cacheEntry, style=dashed];
m13_65 -> m13_62  [key=0, style=solid];
m13_65 -> m13_66  [color=darkseagreen4, key=1, label=instanceFound, style=dashed];
m13_67 -> m13_57  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ICachePruner", style=dashed];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="Ninject.Activation.IPipeline", style=dashed];
m13_0 -> m13_4  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ICachePruner", style=dashed];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_7  [key=2, style=dotted];
m13_5 -> m13_0  [color=blue, key=0, style=bold];
m13_123 -> m13_90  [color=blue, key=0, style=bold];
m13_90 -> m13_121  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_123  [key=0, style=solid];
m13_121 -> m13_69  [key=2, style=dotted];
m13_122 -> m13_121  [key=0, style=solid];
m13_122 -> m13_124  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_14  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=2, style=dotted];
m13_12 -> m13_8  [color=blue, key=0, style=bold];
m13_44 -> m13_45  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_40  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_38 -> m13_47  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_38 -> m13_48  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_38 -> m13_50  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_6  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_28  [key=2, style=dotted];
m13_40 -> m13_45  [color=darkseagreen4, key=1, label=scope, style=dashed];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_53  [key=0, style=solid];
m13_47 -> m13_49  [color=darkseagreen4, key=1, label=entry, style=dashed];
m13_47 -> m13_52  [color=darkseagreen4, key=1, label=entry, style=dashed];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_52  [key=0, style=solid];
m13_50 -> m13_51  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_43  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_47  [key=0, style=solid];
m13_45 -> m13_55  [key=2, style=dotted];
m13_42 -> m13_54  [key=0, style=solid];
m13_43 -> m13_44  [key=0, style=solid];
m13_46 -> m13_54  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_51  [color=darkseagreen4, key=1, label=cachedArguments, style=dashed];
m13_52 -> m13_54  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_47  [key=0, style=solid];
m13_51 -> m13_56  [key=2, style=dotted];
m13_54 -> m13_38  [color=blue, key=0, style=bold];
m13_131 -> m13_29  [color=blue, key=0, style=bold];
m13_29 -> m13_129  [key=0, style=solid];
m13_29 -> m13_130  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m13_129 -> m13_130  [key=0, style=solid];
m13_130 -> m13_131  [key=0, style=solid];
m13_118 -> m13_119  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_37  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_36 -> m13_34  [color=blue, key=0, style=bold];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_80  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_77 -> m13_78  [key=0, style=solid];
m13_75 -> m13_76  [key=0, style=solid];
m13_76 -> m13_74  [color=blue, key=0, style=bold];
m13_79 -> m13_77  [color=blue, key=0, style=bold];
m13_91 -> m13_92  [key=0, style=solid];
m13_94 -> m13_95  [key=0, style=solid];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_92  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, Ninject.Infrastructure.Multimap<Ninject.Planning.Bindings.IBindingConfiguration, Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m13_93 -> m13_91  [color=blue, key=0, style=bold];
m13_95 -> m13_96  [key=0, style=solid];
m13_96 -> m13_94  [color=blue, key=0, style=bold];
m13_113 -> m13_114  [key=0, style=solid];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBindingConfiguration, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m13_115 -> m13_113  [color=blue, key=0, style=bold];
m13_119 -> m13_120  [key=0, style=solid];
m13_119 -> m13_104  [key=2, style=dotted];
m13_119 -> m13_119  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, Ninject.Infrastructure.Multimap<Ninject.Planning.Bindings.IBindingConfiguration, Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m13_120 -> m13_118  [color=blue, key=0, style=bold];
m13_13 -> m13_105  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_109  [key=2, style=dotted];
m13_106 -> m13_90  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_110  [key=2, style=dotted];
m13_108 -> m13_13  [color=blue, key=0, style=bold];
m13_112 -> m13_104  [color=blue, key=0, style=bold];
m13_104 -> m13_111  [key=0, style=solid];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_68  [key=2, style=dotted];
m13_111 -> m13_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_109 -> m13_116  [key=0, style=solid];
m13_116 -> m13_117  [key=0, style=solid];
m13_116 -> m13_68  [key=2, style=dotted];
m13_116 -> m13_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_117 -> m13_109  [color=blue, key=0, style=bold];
m13_127 -> m13_124  [color=blue, key=0, style=bold];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_126  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_37  [key=2, style=dotted];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_128  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_70  [key=2, style=dotted];
m13_83 -> m13_88  [key=2, style=dotted];
m13_83 -> m13_71  [key=2, style=dotted];
m13_83 -> m13_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_83 -> m13_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_87  [key=0, style=solid];
m13_84 -> m13_86  [color=darkseagreen4, key=1, label=disposedScope, style=dashed];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_73  [key=2, style=dotted];
m13_86 -> m13_84  [key=0, style=solid];
m13_86 -> m13_89  [key=2, style=dotted];
m13_86 -> m13_90  [key=2, style=dotted];
m13_87 -> m13_81  [color=blue, key=0, style=bold];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_32  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_15 -> m13_18  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_15 -> m13_26  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_6  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_28  [key=2, style=dotted];
m13_17 -> m13_20  [color=darkseagreen4, key=1, label=scope, style=dashed];
m13_17 -> m13_23  [color=darkseagreen4, key=1, label=scope, style=dashed];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_29  [key=2, style=dotted];
m13_18 -> m13_26  [color=darkseagreen4, key=1, label=entry, style=dashed];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_33  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_30  [key=2, style=dotted];
m13_20 -> m13_22  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m13_20 -> m13_25  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m13_20 -> m13_35  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m13_20 -> m13_26  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [color=darkseagreen4, key=1, label=notifyScope, style=dashed];
m13_19 -> m13_20  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_26  [key=0, style=solid];
m13_21 -> m13_31  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_26  [key=0, style=solid];
m13_27 -> m13_15  [color=blue, key=0, style=bold];
m13_98 -> m13_99  [key=0, style=solid];
m13_37 -> m13_97  [key=0, style=solid];
m13_37 -> m13_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_37 -> m13_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_97 -> m13_98  [key=0, style=solid];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_102  [key=0, style=solid];
m13_99 -> m13_55  [key=2, style=dotted];
m13_99 -> m13_101  [color=darkseagreen4, key=1, label=bindings, style=dashed];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_103  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_104  [key=2, style=dotted];
m13_101 -> m13_90  [key=2, style=dotted];
m13_102 -> m13_37  [color=blue, key=0, style=bold];
m13_132 -> m13_3  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_4  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_9  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_10  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_11  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_19  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_21  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_22  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_25  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_35  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_26  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_43  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_45  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_58  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_60  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_63  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_82  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_83  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_85  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_86  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_97  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_99  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_100  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_101  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_105  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_106  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_107  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_116  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_122  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_125  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_132 -> m13_126  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m13_133 -> m13_35  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m13_134 -> m13_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_135 -> m13_129  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m13_135 -> m13_130  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_8  [key=2, style=dotted];
m18_7 -> m18_5  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_2 -> m18_1  [key=0, style=solid];
m18_2 -> m18_4  [key=2, style=dotted];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_2  [color=darkseagreen4, key=1, label="Ninject.Injection.IInjectorFactory", style=dashed];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label="Ninject.Selection.ISelector", style=dashed];
m31_0 -> m31_4  [color=darkseagreen4, key=1, label="Ninject.Injection.IInjectorFactory", style=dashed];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_6  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_6  [key=2, style=dotted];
m31_3 -> m31_4  [key=0, style=solid];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_0  [color=blue, key=0, style=bold];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_9  [color=darkseagreen4, key=1, label="Ninject.Planning.IPlan", style=dashed];
m31_7 -> m31_10  [color=darkseagreen4, key=1, label="Ninject.Planning.IPlan", style=dashed];
m31_8 -> m31_9  [key=0, style=solid];
m31_8 -> m31_6  [key=2, style=dotted];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_11  [key=0, style=solid];
m31_9 -> m31_12  [key=2, style=dotted];
m31_10 -> m31_9  [key=0, style=solid];
m31_10 -> m31_13  [key=2, style=dotted];
m31_10 -> m31_14  [key=2, style=dotted];
m31_10 -> m31_15  [key=2, style=dotted];
m31_11 -> m31_7  [color=blue, key=0, style=bold];
m31_14 -> m31_0  [color=darkorchid, key=3, label="Property variable Ninject.Injection.IInjectorFactory InjectorFactory", style=bold];
m31_16 -> m31_3  [color=darkseagreen4, key=1, label="Ninject.Planning.Strategies.PropertyReflectionStrategy", style=dashed];
m31_16 -> m31_4  [color=darkseagreen4, key=1, label="Ninject.Planning.Strategies.PropertyReflectionStrategy", style=dashed];
m31_16 -> m31_9  [color=darkseagreen4, key=1, label="Ninject.Planning.Strategies.PropertyReflectionStrategy", style=dashed];
m31_16 -> m31_10  [color=darkseagreen4, key=1, label="Ninject.Planning.Strategies.PropertyReflectionStrategy", style=dashed];
m32_0 -> m32_1  [color=red, key=0, style=solid];
m32_0 -> m32_5  [color=red, key=1, label=string, style=dashed];
m32_1 -> m32_2  [color=red, key=0, style=solid];
m32_1 -> m32_3  [color=red, key=2, style=dotted];
m32_1 -> m32_4  [color=red, key=1, label="lambda expression", style=dashed];
m32_2 -> m32_0  [color=blue, key=0, style=bold];
m32_18 -> m32_19  [key=0, style=solid];
m32_5 -> m32_6  [color=red, key=0, style=solid];
m32_5 -> m32_7  [color=red, key=2, style=dotted];
m32_4 -> m32_5  [color=red, key=0, style=solid];
m32_6 -> m32_4  [color=blue, key=0, style=bold];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_7  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_17 -> m32_15  [color=blue, key=0, style=bold];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [key=2, style=dotted];
m32_20 -> m32_18  [color=blue, key=0, style=bold];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_11  [key=2, style=dotted];
m32_9 -> m32_12  [key=2, style=dotted];
m32_9 -> m32_13  [key=2, style=dotted];
m32_9 -> m32_14  [key=2, style=dotted];
m32_9 -> m32_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_9 -> m32_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_10 -> m32_8  [color=blue, key=0, style=bold];
m32_22 -> m32_5  [color=red, key=1, label=string, style=dashed];
m32_23 -> m32_5  [color=red, key=1, label="System.StringComparer", style=dashed];
m32_24 -> m32_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_25 -> m32_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_7 -> m33_8  [key=0, style=solid];
m33_12 -> m33_10  [color=blue, key=0, style=bold];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_6  [key=2, style=dotted];
m33_11 -> m33_13  [key=2, style=dotted];
m33_11 -> m33_14  [key=2, style=dotted];
m33_28 -> m33_29  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_6  [key=2, style=dotted];
m33_4 -> m33_11  [key=2, style=dotted];
m33_4 -> m33_15  [key=2, style=dotted];
m33_4 -> m33_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_13  [key=2, style=dotted];
m33_3 -> m33_14  [key=2, style=dotted];
m33_3 -> m33_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_3 -> m33_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_5 -> m33_3  [color=blue, key=0, style=bold];
m33_5 -> m33_0  [color=blue, key=0, style=bold];
m33_10 -> m33_11  [key=0, style=solid];
m33_19 -> m33_20  [key=0, style=solid];
m33_19 -> m33_21  [key=2, style=dotted];
m33_18 -> m33_19  [key=0, style=solid];
m33_18 -> m33_17  [color=green, key=0, style=solid];
m33_18 -> m33_18  [color=blue, key=0, style=bold];
m33_20 -> m33_18  [color=blue, key=0, style=bold];
m33_20 -> m33_21  [key=0, style=solid];
m33_17 -> m33_18  [color=green, key=0, style=solid];
m33_17 -> m33_19  [color=green, key=2, style=dotted];
m33_17 -> m33_15  [color=blue, key=0, style=bold];
m33_24 -> m33_25  [key=0, style=solid];
m33_22 -> m33_20  [color=blue, key=0, style=bold];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_23  [key=2, style=dotted];
m33_26 -> m33_24  [color=blue, key=0, style=bold];
m33_25 -> m33_26  [key=0, style=solid];
m33_25 -> m33_27  [key=2, style=dotted];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_31  [key=2, style=dotted];
m33_29 -> m33_32  [key=2, style=dotted];
m33_30 -> m33_28  [color=blue, key=0, style=bold];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> m33_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_9 -> m33_7  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [key=0, style=solid];
m33_0 -> m33_1  [key=0, style=solid];
m33_2 -> m33_3  [color=green, key=0, style=solid];
m33_2 -> m33_7  [color=green, key=2, style=dotted];
m33_2 -> m33_8  [color=green, key=2, style=dotted];
m33_2 -> m33_9  [color=green, key=2, style=dotted];
m33_2 -> m33_10  [color=green, key=2, style=dotted];
m33_2 -> m33_11  [color=green, key=2, style=dotted];
m33_2 -> m33_12  [color=green, key=2, style=dotted];
m33_2 -> m33_18  [color=green, key=1, label="lambda expression", style=dashed];
m33_2 -> m33_0  [color=blue, key=0, style=bold];
m33_1 -> m33_2  [color=green, key=0, style=solid];
m33_1 -> m33_6  [key=2, style=dotted];
m33_1 -> m33_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m33_1 -> m33_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m34_11 -> m34_4  [key=2, style=dotted];
m34_11 -> m34_12  [key=0, style=solid];
m34_9 -> m34_11  [key=0, style=solid];
m34_9 -> m34_10  [key=0, style=solid];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_16  [key=2, style=dotted];
m34_13 -> m34_14  [key=0, style=solid];
m34_10 -> m34_14  [key=0, style=solid];
m34_10 -> m34_15  [key=2, style=dotted];
m34_14 -> m34_8  [color=blue, key=0, style=bold];
m34_37 -> m34_118  [key=0, style=solid];
m34_118 -> m34_119  [key=0, style=solid];
m34_118 -> m34_120  [key=2, style=dotted];
m34_118 -> m34_121  [key=2, style=dotted];
m34_119 -> m34_37  [color=blue, key=0, style=bold];
m34_20 -> m34_21  [key=0, style=solid];
m34_21 -> m34_22  [key=0, style=solid];
m34_21 -> m34_23  [key=2, style=dotted];
m34_22 -> m34_20  [color=blue, key=0, style=bold];
m34_59 -> m34_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_59 -> m34_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_59 -> m34_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> ParseArguments", style=bold];
m34_59 -> m34_60  [key=0, style=solid];
m34_59 -> m34_62  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m34_59 -> m34_64  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m34_66 -> m34_67  [key=0, style=solid];
m34_66 -> m34_33  [key=2, style=dotted];
m34_66 -> m34_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_64 -> m34_66  [key=0, style=solid];
m34_64 -> m34_65  [key=0, style=solid];
m34_60 -> m34_61  [key=0, style=solid];
m34_60 -> m34_62  [key=0, style=solid];
m34_62 -> m34_64  [key=0, style=solid];
m34_62 -> m34_63  [key=0, style=solid];
m34_65 -> m34_67  [key=0, style=solid];
m34_65 -> m34_68  [key=2, style=dotted];
m34_61 -> m34_67  [key=0, style=solid];
m34_61 -> m34_15  [key=2, style=dotted];
m34_63 -> m34_67  [key=0, style=solid];
m34_63 -> m34_15  [key=2, style=dotted];
m34_67 -> m34_59  [color=blue, key=0, style=bold];
m34_3 -> m34_17  [key=0, style=solid];
m34_17 -> m34_18  [key=0, style=solid];
m34_18 -> m34_19  [key=0, style=solid];
m34_19 -> m34_3  [color=blue, key=0, style=bold];
m34_113 -> m34_4  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<CommandLine.Error>>> propAndErrors", style=bold];
m34_43 -> m34_50  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m34_43 -> m34_54  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m34_43 -> m34_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_50 -> m34_51  [key=0, style=solid];
m34_50 -> m34_33  [key=2, style=dotted];
m34_50 -> m34_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_48 -> m34_50  [key=0, style=solid];
m34_48 -> m34_49  [key=0, style=solid];
m34_44 -> m34_45  [key=0, style=solid];
m34_44 -> m34_46  [key=0, style=solid];
m34_46 -> m34_48  [key=0, style=solid];
m34_46 -> m34_30  [key=2, style=dotted];
m34_46 -> m34_47  [key=0, style=solid];
m34_49 -> m34_51  [key=0, style=solid];
m34_49 -> m34_15  [key=2, style=dotted];
m34_45 -> m34_51  [key=0, style=solid];
m34_45 -> m34_15  [key=2, style=dotted];
m34_47 -> m34_51  [key=0, style=solid];
m34_47 -> m34_52  [key=2, style=dotted];
m34_51 -> m34_43  [color=blue, key=0, style=bold];
m34_5 -> m34_6  [key=0, style=solid];
m34_6 -> m34_4  [key=2, style=dotted];
m34_6 -> m34_6  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>> converter", style=bold];
m34_6 -> m34_7  [key=0, style=solid];
m34_7 -> m34_5  [color=blue, key=0, style=bold];
m34_117 -> m34_117  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp", style=bold];
m34_117 -> m34_122  [key=0, style=solid];
m34_117 -> m34_123  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m34_117 -> m34_124  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m34_117 -> m34_131  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m34_117 -> m34_125  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m34_122 -> m34_123  [key=0, style=solid];
m34_122 -> m34_125  [key=0, style=solid];
m34_123 -> m34_124  [key=0, style=solid];
m34_123 -> m34_125  [key=0, style=solid];
m34_123 -> m34_127  [key=2, style=dotted];
m34_124 -> m34_125  [key=0, style=solid];
m34_124 -> m34_128  [key=2, style=dotted];
m34_124 -> m34_129  [key=2, style=dotted];
m34_124 -> m34_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_125 -> m34_126  [key=0, style=solid];
m34_126 -> m34_117  [color=blue, key=0, style=bold];
m34_130 -> m34_131  [key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_1 -> m34_3  [color=green, key=2, style=dotted];
m34_1 -> m34_4  [color=green, key=2, style=dotted];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_91 -> m34_92  [color=green, key=0, style=solid];
m34_91 -> m34_93  [color=green, key=2, style=dotted];
m34_91 -> m34_94  [color=green, key=1, label="lambda expression", style=dashed];
m34_99 -> m34_100  [key=0, style=solid];
m34_102 -> m34_103  [key=0, style=solid];
m34_102 -> m34_88  [key=2, style=dotted];
m34_102 -> m34_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_90 -> m34_91  [color=green, key=0, style=solid];
m34_92 -> m34_90  [color=blue, key=0, style=bold];
m34_94 -> m34_95  [color=green, key=0, style=solid];
m34_95 -> m34_96  [color=green, key=0, style=solid];
m34_95 -> m34_97  [color=green, key=2, style=dotted];
m34_96 -> m34_94  [color=blue, key=0, style=bold];
m34_40 -> m34_42  [key=2, style=dotted];
m34_40 -> m34_41  [key=0, style=solid];
m34_57 -> m34_42  [key=2, style=dotted];
m34_57 -> m34_58  [key=0, style=solid];
m34_74 -> m34_42  [key=2, style=dotted];
m34_74 -> m34_75  [key=0, style=solid];
m34_105 -> m34_97  [key=2, style=dotted];
m34_105 -> m34_106  [key=0, style=solid];
m34_108 -> m34_97  [key=2, style=dotted];
m34_108 -> m34_109  [key=0, style=solid];
m34_111 -> m34_113  [key=2, style=dotted];
m34_111 -> m34_112  [key=0, style=solid];
m34_101 -> m34_102  [key=0, style=solid];
m34_107 -> m34_108  [key=0, style=solid];
m34_98 -> m34_99  [key=0, style=solid];
m34_100 -> m34_98  [color=blue, key=0, style=bold];
m34_103 -> m34_101  [color=blue, key=0, style=bold];
m34_104 -> m34_105  [key=0, style=solid];
m34_39 -> m34_40  [key=0, style=solid];
m34_41 -> m34_39  [color=blue, key=0, style=bold];
m34_56 -> m34_57  [key=0, style=solid];
m34_58 -> m34_56  [color=blue, key=0, style=bold];
m34_73 -> m34_74  [key=0, style=solid];
m34_75 -> m34_73  [color=blue, key=0, style=bold];
m34_106 -> m34_104  [color=blue, key=0, style=bold];
m34_109 -> m34_107  [color=blue, key=0, style=bold];
m34_110 -> m34_111  [key=0, style=solid];
m34_112 -> m34_110  [color=blue, key=0, style=bold];
m34_35 -> m34_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_37  [key=2, style=dotted];
m34_35 -> m34_38  [key=2, style=dotted];
m34_54 -> m34_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_54 -> m34_55  [key=0, style=solid];
m34_54 -> m34_31  [key=2, style=dotted];
m34_54 -> m34_37  [key=2, style=dotted];
m34_54 -> m34_38  [key=2, style=dotted];
m34_70 -> m34_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_70 -> m34_71  [key=0, style=solid];
m34_70 -> m34_37  [key=2, style=dotted];
m34_70 -> m34_72  [key=2, style=dotted];
m34_34 -> m34_35  [key=0, style=solid];
m34_36 -> m34_34  [color=blue, key=0, style=bold];
m34_53 -> m34_54  [key=0, style=solid];
m34_55 -> m34_53  [color=blue, key=0, style=bold];
m34_69 -> m34_70  [key=0, style=solid];
m34_71 -> m34_69  [color=blue, key=0, style=bold];
m34_131 -> m34_132  [key=0, style=solid];
m34_131 -> m34_133  [key=2, style=dotted];
m34_131 -> m34_134  [key=2, style=dotted];
m34_132 -> m34_130  [color=blue, key=0, style=bold];
m34_33 -> m34_28  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m34_33 -> m34_50  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m34_33 -> m34_66  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m34_33 -> m34_114  [key=0, style=solid];
m34_33 -> m34_117  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult", style=bold];
m34_114 -> m34_115  [key=0, style=solid];
m34_114 -> m34_116  [key=2, style=dotted];
m34_114 -> m34_117  [key=2, style=dotted];
m34_115 -> m34_33  [color=blue, key=0, style=bold];
m34_76 -> m34_77  [key=0, style=solid];
m34_77 -> m34_78  [key=0, style=solid];
m34_77 -> m34_23  [key=2, style=dotted];
m34_78 -> m34_79  [key=0, style=solid];
m34_78 -> m34_80  [key=2, style=dotted];
m34_79 -> m34_76  [color=blue, key=0, style=bold];
m34_24 -> m34_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_24 -> m34_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_33  [key=2, style=dotted];
m34_28 -> m34_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_27 -> m34_28  [key=0, style=solid];
m34_27 -> m34_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m34_27 -> m34_30  [key=2, style=dotted];
m34_27 -> m34_31  [key=2, style=dotted];
m34_27 -> m34_32  [key=2, style=dotted];
m34_25 -> m34_27  [key=0, style=solid];
m34_25 -> m34_26  [key=0, style=solid];
m34_26 -> m34_29  [key=0, style=solid];
m34_26 -> m34_15  [key=2, style=dotted];
m34_29 -> m34_24  [color=blue, key=0, style=bold];
m34_42 -> m34_81  [color=green, key=0, style=solid];
m34_42 -> m34_91  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_95  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_42 -> m34_102  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_105  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_83  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_42 -> m34_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_81 -> m34_82  [color=green, key=0, style=solid];
m34_81 -> m34_86  [color=green, key=2, style=dotted];
m34_81 -> m34_91  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m34_81 -> m34_99  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m34_81 -> m34_102  [color=green, key=1, label=normalize, style=dashed];
m34_82 -> m34_83  [key=0, style=solid];
m34_82 -> m34_87  [key=2, style=dotted];
m34_82 -> m34_88  [key=2, style=dotted];
m34_82 -> m34_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_82 -> m34_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_83 -> m34_84  [key=0, style=solid];
m34_83 -> m34_89  [key=2, style=dotted];
m34_83 -> m34_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_84 -> m34_85  [key=0, style=solid];
m34_85 -> m34_42  [color=blue, key=0, style=bold];
m34_23 -> m34_21  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m34_23 -> m34_77  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m34_23 -> m34_135  [key=0, style=solid];
m34_23 -> m34_137  [color=darkseagreen4, key=1, label=bool, style=dashed];
m34_135 -> m34_136  [key=0, style=solid];
m34_135 -> m34_137  [key=0, style=solid];
m34_138 -> m34_139  [key=0, style=solid];
m34_138 -> m34_140  [key=0, style=solid];
m34_139 -> m34_140  [key=0, style=solid];
m34_139 -> m34_142  [key=2, style=dotted];
m34_140 -> m34_141  [key=0, style=solid];
m34_136 -> m34_141  [key=0, style=solid];
m34_137 -> m34_138  [key=0, style=solid];
m34_137 -> m34_141  [key=0, style=solid];
m34_141 -> m34_23  [color=blue, key=0, style=bold];
m34_150 -> m34_91  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_150 -> m34_95  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_150 -> m34_102  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_150 -> m34_105  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_150 -> m34_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_150 -> m34_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m34_151 -> m34_91  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_151 -> m34_95  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_151 -> m34_102  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_151 -> m34_105  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_151 -> m34_108  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_151 -> m34_111  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m34_152 -> m34_102  [color=darkseagreen4, key=1, label=normalize, style=dashed];
m34_143 -> m34_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_6  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_11  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_40  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_57  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_74  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_18  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_13  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_28  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_50  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_54  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_66  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_70  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_77  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_78  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_135  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_138  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_139  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_143 -> m34_140  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m34_144 -> m34_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_145 -> m34_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m34_146 -> m34_54  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m34_147 -> m34_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_148 -> m34_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m34_149 -> m34_70  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m34_153 -> m34_131  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m35_0 -> m35_1  [color=red, key=0, style=solid];
m35_0 -> m35_5  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m35_0 -> m35_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m35_1 -> m35_2  [color=red, key=0, style=solid];
m35_1 -> m35_3  [color=red, key=2, style=dotted];
m35_1 -> m35_4  [color=red, key=1, label="lambda expression", style=dashed];
m35_1 -> m35_1  [color=red, key=1, label=tseq, style=dashed];
m35_2 -> m35_0  [color=blue, key=0, style=bold];
m35_29 -> m35_30  [key=0, style=solid];
m35_5 -> m35_6  [color=red, key=0, style=solid];
m35_5 -> m35_7  [color=red, key=2, style=dotted];
m35_5 -> m35_8  [color=red, key=2, style=dotted];
m35_5 -> m35_9  [color=red, key=2, style=dotted];
m35_5 -> m35_10  [color=red, key=2, style=dotted];
m35_5 -> m35_11  [color=red, key=1, label="lambda expression", style=dashed];
m35_12 -> m35_13  [color=red, key=0, style=solid];
m35_12 -> m35_14  [color=red, key=2, style=dotted];
m35_12 -> m35_15  [color=red, key=2, style=dotted];
m35_4 -> m35_5  [color=red, key=0, style=solid];
m35_4 -> m35_12  [color=red, key=1, label="CommandLine.Core.Token", style=dashed];
m35_6 -> m35_4  [color=blue, key=0, style=bold];
m35_11 -> m35_12  [color=red, key=0, style=solid];
m35_13 -> m35_11  [color=blue, key=0, style=bold];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_28  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_27 -> m35_25  [color=blue, key=0, style=bold];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_8  [key=2, style=dotted];
m35_31 -> m35_29  [color=blue, key=0, style=bold];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m35_16 -> m35_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_22  [key=2, style=dotted];
m35_17 -> m35_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_17 -> m35_19  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m35_19 -> m35_21  [key=0, style=solid];
m35_19 -> m35_23  [key=2, style=dotted];
m35_19 -> m35_24  [key=2, style=dotted];
m35_19 -> m35_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_20  [key=0, style=solid];
m35_20 -> m35_21  [key=0, style=solid];
m35_21 -> m35_16  [color=blue, key=0, style=bold];
m35_14 -> m35_1  [color=red, key=3, label="Parameter variable CommandLine.Core.Token nameToken", style=bold];
m35_32 -> m35_5  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m35_32 -> m35_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m35_33 -> m35_5  [color=red, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m35_34 -> m35_12  [color=red, key=1, label="CommandLine.Core.Token", style=dashed];
m35_35 -> m35_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m37_0 -> m37_1  [color=green, key=0, style=solid];
m37_1 -> m37_2  [color=green, key=0, style=solid];
m37_1 -> m37_3  [color=green, key=2, style=dotted];
m37_1 -> m37_4  [color=green, key=2, style=dotted];
m37_1 -> m37_5  [color=green, key=2, style=dotted];
m37_2 -> m37_0  [color=blue, key=0, style=bold];
m37_6 -> m37_7  [color=green, key=0, style=solid];
m37_7 -> m37_8  [color=green, key=0, style=solid];
m37_7 -> m37_3  [color=green, key=2, style=dotted];
m37_7 -> m37_4  [color=green, key=2, style=dotted];
m37_7 -> m37_9  [color=green, key=2, style=dotted];
m37_8 -> m37_6  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=2, style=dotted];
m38_2 -> m38_0  [color=blue, key=0, style=bold];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_56  [color=darkseagreen4, key=1, label="?", style=dashed];
m38_54 -> m38_57  [color=darkseagreen4, key=1, label="?", style=dashed];
m38_4 -> m38_5  [key=0, style=solid];
m38_5 -> m38_6  [key=0, style=solid];
m38_6 -> m38_4  [color=blue, key=0, style=bold];
m38_7 -> m38_8  [key=0, style=solid];
m38_8 -> m38_9  [key=0, style=solid];
m38_9 -> m38_7  [color=blue, key=0, style=bold];
m38_10 -> m38_11  [key=0, style=solid];
m38_11 -> m38_12  [key=0, style=solid];
m38_12 -> m38_10  [color=blue, key=0, style=bold];
m38_13 -> m38_14  [key=0, style=solid];
m38_14 -> m38_15  [key=0, style=solid];
m38_15 -> m38_13  [color=blue, key=0, style=bold];
m38_16 -> m38_17  [key=0, style=solid];
m38_17 -> m38_18  [key=0, style=solid];
m38_18 -> m38_16  [color=blue, key=0, style=bold];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_22  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_24  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_26  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_37  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m38_19 -> m38_19  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_23  [key=0, style=solid];
m38_20 -> m38_25  [key=0, style=solid];
m38_20 -> m38_27  [key=0, style=solid];
m38_20 -> m38_30  [key=0, style=solid];
m38_20 -> m38_33  [key=0, style=solid];
m38_20 -> m38_36  [key=0, style=solid];
m38_20 -> m38_38  [key=0, style=solid];
m38_22 -> m38_40  [key=0, style=solid];
m38_22 -> m38_42  [key=2, style=dotted];
m38_24 -> m38_40  [key=0, style=solid];
m38_24 -> m38_42  [key=2, style=dotted];
m38_26 -> m38_40  [key=0, style=solid];
m38_26 -> m38_42  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid];
m38_31 -> m38_32  [key=0, style=solid];
m38_34 -> m38_35  [key=0, style=solid];
m38_37 -> m38_40  [key=0, style=solid];
m38_37 -> m38_42  [key=2, style=dotted];
m38_21 -> m38_22  [key=0, style=solid];
m38_23 -> m38_24  [key=0, style=solid];
m38_25 -> m38_26  [key=0, style=solid];
m38_27 -> m38_28  [key=0, style=solid];
m38_30 -> m38_31  [key=0, style=solid];
m38_33 -> m38_34  [key=0, style=solid];
m38_36 -> m38_37  [key=0, style=solid];
m38_38 -> m38_39  [key=0, style=solid];
m38_29 -> m38_40  [key=0, style=solid];
m38_29 -> m38_43  [key=2, style=dotted];
m38_29 -> m38_42  [key=2, style=dotted];
m38_32 -> m38_40  [key=0, style=solid];
m38_32 -> m38_43  [key=2, style=dotted];
m38_32 -> m38_42  [key=2, style=dotted];
m38_35 -> m38_40  [key=0, style=solid];
m38_35 -> m38_43  [key=2, style=dotted];
m38_35 -> m38_42  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_40 -> m38_19  [color=blue, key=0, style=bold];
m38_41 -> m38_40  [key=0, style=solid];
m38_41 -> m38_44  [key=2, style=dotted];
m38_45 -> m38_46  [key=0, style=solid];
m38_46 -> m38_47  [key=0, style=solid];
m38_46 -> m38_50  [key=2, style=dotted];
m38_46 -> m38_46  [color=darkseagreen4, key=1, label=e, style=dashed];
m38_46 -> m38_57  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_51  [key=2, style=dotted];
m38_47 -> m38_52  [key=2, style=dotted];
m38_47 -> m38_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_57 -> m38_58  [key=0, style=solid];
m38_57 -> m38_62  [key=2, style=dotted];
m38_57 -> m38_63  [key=2, style=dotted];
m38_57 -> m38_60  [key=2, style=dotted];
m38_57 -> m38_52  [key=2, style=dotted];
m38_57 -> m38_53  [key=2, style=dotted];
m38_57 -> m38_57  [color=darkseagreen4, key=1, label=s, style=dashed];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_53  [key=2, style=dotted];
m38_49 -> m38_45  [color=blue, key=0, style=bold];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_60  [key=2, style=dotted];
m38_55 -> m38_52  [key=2, style=dotted];
m38_55 -> m38_53  [key=2, style=dotted];
m38_55 -> m38_55  [color=darkseagreen4, key=1, label=e, style=dashed];
m38_55 -> m38_58  [color=darkseagreen4, key=1, label=names, style=dashed];
m38_56 -> m38_57  [key=0, style=solid];
m38_56 -> m38_61  [key=2, style=dotted];
m38_56 -> m38_58  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_64  [key=2, style=dotted];
m38_58 -> m38_65  [key=2, style=dotted];
m38_58 -> m38_66  [key=2, style=dotted];
m38_58 -> m38_67  [key=2, style=dotted];
m38_58 -> m38_68  [key=2, style=dotted];
m38_58 -> m38_69  [key=2, style=dotted];
m38_58 -> m38_70  [key=2, style=dotted];
m38_59 -> m38_54  [color=blue, key=0, style=bold];
m38_71 -> m38_57  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m40_0 -> m40_3  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_0 -> m40_1  [key=0, style=solid];
m40_3 -> m40_6  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_1 -> m40_3  [key=0, style=solid];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_0  [color=blue, key=0, style=bold];
m40_2 -> m40_5  [key=2, style=dotted];
m40_2 -> m40_4  [key=0, style=solid];
m40_4 -> m40_0  [color=blue, key=0, style=bold];
m40_42 -> m40_45  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_42 -> m40_43  [key=0, style=solid];
m40_45 -> m40_6  [key=2, style=dotted];
m40_45 -> m40_46  [key=0, style=solid];
m40_43 -> m40_45  [key=0, style=solid];
m40_43 -> m40_44  [key=0, style=solid];
m40_44 -> m40_5  [key=2, style=dotted];
m40_44 -> m40_46  [key=0, style=solid];
m40_46 -> m40_42  [color=blue, key=0, style=bold];
m40_27 -> m40_30  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_27 -> m40_28  [key=0, style=solid];
m40_30 -> m40_6  [key=2, style=dotted];
m40_30 -> m40_31  [key=0, style=solid];
m40_28 -> m40_30  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_29 -> m40_5  [key=2, style=dotted];
m40_29 -> m40_31  [key=0, style=solid];
m40_31 -> m40_27  [color=blue, key=0, style=bold];
m40_52 -> m40_55  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_52 -> m40_53  [key=0, style=solid];
m40_55 -> m40_6  [key=2, style=dotted];
m40_55 -> m40_56  [key=0, style=solid];
m40_53 -> m40_55  [key=0, style=solid];
m40_53 -> m40_54  [key=0, style=solid];
m40_54 -> m40_5  [key=2, style=dotted];
m40_54 -> m40_56  [key=0, style=solid];
m40_56 -> m40_52  [color=blue, key=0, style=bold];
m40_72 -> m40_75  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_72 -> m40_73  [key=0, style=solid];
m40_75 -> m40_6  [key=2, style=dotted];
m40_75 -> m40_76  [key=0, style=solid];
m40_73 -> m40_75  [key=0, style=solid];
m40_73 -> m40_74  [key=0, style=solid];
m40_74 -> m40_5  [key=2, style=dotted];
m40_74 -> m40_76  [key=0, style=solid];
m40_76 -> m40_72  [color=blue, key=0, style=bold];
m40_17 -> m40_20  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_17 -> m40_18  [key=0, style=solid];
m40_20 -> m40_6  [key=2, style=dotted];
m40_20 -> m40_21  [key=0, style=solid];
m40_18 -> m40_20  [key=0, style=solid];
m40_18 -> m40_19  [key=0, style=solid];
m40_19 -> m40_5  [key=2, style=dotted];
m40_19 -> m40_21  [key=0, style=solid];
m40_21 -> m40_17  [color=blue, key=0, style=bold];
m40_47 -> m40_50  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_47 -> m40_48  [key=0, style=solid];
m40_50 -> m40_6  [key=2, style=dotted];
m40_50 -> m40_51  [key=0, style=solid];
m40_48 -> m40_50  [key=0, style=solid];
m40_48 -> m40_49  [key=0, style=solid];
m40_49 -> m40_5  [key=2, style=dotted];
m40_49 -> m40_51  [key=0, style=solid];
m40_51 -> m40_47  [color=blue, key=0, style=bold];
m40_7 -> m40_10  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_7 -> m40_8  [key=0, style=solid];
m40_10 -> m40_6  [key=2, style=dotted];
m40_10 -> m40_11  [key=0, style=solid];
m40_8 -> m40_10  [key=0, style=solid];
m40_8 -> m40_9  [key=0, style=solid];
m40_9 -> m40_5  [key=2, style=dotted];
m40_9 -> m40_11  [key=0, style=solid];
m40_11 -> m40_7  [color=blue, key=0, style=bold];
m40_37 -> m40_40  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_37 -> m40_38  [key=0, style=solid];
m40_40 -> m40_6  [key=2, style=dotted];
m40_40 -> m40_41  [key=0, style=solid];
m40_38 -> m40_40  [key=0, style=solid];
m40_38 -> m40_39  [key=0, style=solid];
m40_39 -> m40_5  [key=2, style=dotted];
m40_39 -> m40_41  [key=0, style=solid];
m40_41 -> m40_37  [color=blue, key=0, style=bold];
m40_57 -> m40_60  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_57 -> m40_58  [key=0, style=solid];
m40_60 -> m40_6  [key=2, style=dotted];
m40_60 -> m40_61  [key=0, style=solid];
m40_58 -> m40_60  [key=0, style=solid];
m40_58 -> m40_59  [key=0, style=solid];
m40_59 -> m40_5  [key=2, style=dotted];
m40_59 -> m40_61  [key=0, style=solid];
m40_61 -> m40_57  [color=blue, key=0, style=bold];
m40_22 -> m40_25  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_22 -> m40_23  [key=0, style=solid];
m40_25 -> m40_6  [key=2, style=dotted];
m40_25 -> m40_26  [key=0, style=solid];
m40_23 -> m40_25  [key=0, style=solid];
m40_23 -> m40_24  [key=0, style=solid];
m40_24 -> m40_5  [key=2, style=dotted];
m40_24 -> m40_26  [key=0, style=solid];
m40_26 -> m40_22  [color=blue, key=0, style=bold];
m40_62 -> m40_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_62 -> m40_63  [key=0, style=solid];
m40_65 -> m40_6  [key=2, style=dotted];
m40_65 -> m40_66  [key=0, style=solid];
m40_63 -> m40_65  [key=0, style=solid];
m40_63 -> m40_64  [key=0, style=solid];
m40_64 -> m40_5  [key=2, style=dotted];
m40_64 -> m40_66  [key=0, style=solid];
m40_66 -> m40_62  [color=blue, key=0, style=bold];
m40_67 -> m40_70  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_67 -> m40_68  [key=0, style=solid];
m40_70 -> m40_6  [key=2, style=dotted];
m40_70 -> m40_71  [key=0, style=solid];
m40_68 -> m40_70  [key=0, style=solid];
m40_68 -> m40_69  [key=0, style=solid];
m40_69 -> m40_5  [key=2, style=dotted];
m40_69 -> m40_71  [key=0, style=solid];
m40_71 -> m40_67  [color=blue, key=0, style=bold];
m40_12 -> m40_15  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m40_12 -> m40_13  [key=0, style=solid];
m40_15 -> m40_16  [color=green, key=0, style=solid];
m40_15 -> m40_6  [color=green, key=2, style=dotted];
m40_13 -> m40_15  [color=green, key=0, style=solid];
m40_13 -> m40_14  [key=0, style=solid];
m40_14 -> m40_16  [key=0, style=solid];
m40_14 -> m40_5  [key=2, style=dotted];
m40_16 -> m40_12  [color=blue, key=0, style=bold];
m40_32 -> m40_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m40_32 -> m40_33  [key=0, style=solid];
m40_35 -> m40_6  [key=2, style=dotted];
m40_35 -> m40_36  [key=0, style=solid];
m40_33 -> m40_35  [key=0, style=solid];
m40_33 -> m40_34  [key=0, style=solid];
m40_34 -> m40_5  [key=2, style=dotted];
m40_34 -> m40_36  [key=0, style=solid];
m40_36 -> m40_32  [color=blue, key=0, style=bold];
}
