digraph  {
m1_6 [cluster="CommandLine.Tests.CultureHandlers.CultureHandlers()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.CultureHandlers.CultureHandlers()", span="12-12"];
m1_10 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="26-26"];
m1_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="Thread.CurrentThread.CurrentCulture = newCulture", span="24-24"];
m1_11 [cluster="lambda expression", file="InstanceBuilder.cs", label="Thread.CurrentThread.CurrentCulture = currentCulutre", span="26-26"];
m1_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="24-24"];
m1_9 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="24-24"];
m1_12 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="26-26"];
m1_0 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", span="20-20"];
m1_1 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var currentCulutre = Thread.CurrentThread.CurrentCulture", span="22-22"];
m1_2 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Action changer = () => Thread.CurrentThread.CurrentCulture = newCulture", span="24-24"];
m1_3 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Action resetter = () => Thread.CurrentThread.CurrentCulture = currentCulutre", span="26-26"];
m1_4 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return new CultureHandlers { ChangeCulture = changer, ResetCulture = resetter };", span="28-28"];
m1_5 [cluster="CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.CultureInfoExtensions.MakeCultureHandlers(System.Globalization.CultureInfo)", span="20-20"];
m1_13 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m1_14 [file="InstanceBuilder.cs", label=currentCulutre, span=""];
m2_130 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_62 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Tokenizer.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m2_14 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m2_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_128 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m2_8 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_56 [cluster="Unk.SkipWhile", file="Tokenizer.cs", label="Entry Unk.SkipWhile", span=""];
m2_108 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m2_129 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_30 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m2_9 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m2_13 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m2_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_15 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m2_18 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m2_74 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_109 [cluster="string.Substring(int, int)", file="Tokenizer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_110 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m2_22 [cluster="Unk.Contains", file="Tokenizer.cs", label="Entry Unk.Contains", span=""];
m2_73 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m2_61 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Tokenizer.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m2_80 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="56-56"];
m2_20 [cluster="lambda expression", color=red, community=0, file="Tokenizer.cs", label="1: !unkTokens.Contains(x)", span="29-29"];
m2_19 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="29-29"];
m2_21 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="29-29"];
m2_37 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="36-36"];
m2_41 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="38-38"];
m2_44 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m2_48 [cluster="lambda expression", color=red, community=0, file="Tokenizer.cs", label="1: tokens.Concat(values)", span="40-40"];
m2_47 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="40-40"];
m2_38 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="36-36"];
m2_39 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="36-36"];
m2_42 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="38-38"];
m2_43 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="38-38"];
m2_45 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="39-39"];
m2_46 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m2_49 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="40-40"];
m2_59 [cluster="lambda expression", file="Tokenizer.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="50-52"];
m2_58 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="49-52"];
m2_66 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="52-52"];
m2_70 [cluster="lambda expression", file="Tokenizer.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="55-57"];
m2_69 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="54-57"];
m2_84 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="59-59"];
m2_64 [cluster="lambda expression", file="Tokenizer.cs", label="Tuple.Create(i + 1, sep)", span="51-51"];
m2_60 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="49-52"];
m2_63 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="51-51"];
m2_65 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="51-51"];
m2_67 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 < 0", span="52-52"];
m2_68 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="52-52"];
m2_78 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 == i", span="55-55"];
m2_81 [cluster="lambda expression", file="Tokenizer.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="56-56"];
m2_71 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="54-57"];
m2_77 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="55-55"];
m2_79 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="55-55"];
m2_82 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="56-56"];
m2_85 [cluster="lambda expression", file="Tokenizer.cs", label=x, span="59-59"];
m2_86 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="59-59"];
m2_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m2_10 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="109-109"];
m2_114 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="113-113"];
m2_118 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="119-119"];
m2_119 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="120-120"];
m2_122 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="125-125"];
m2_124 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="128-128"];
m2_125 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1]);", span="129-129"];
m2_115 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="115-115"];
m2_121 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="124-124"];
m2_116 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="116-116"];
m2_123 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="127-127"];
m2_117 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="117-117"];
m2_120 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="122-122"];
m2_126 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="109-109"];
m2_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m2_17 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m2_40 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="35-35"];
m2_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m2_127 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m2_35 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m2_36 [cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="Tokenizer.cs", label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="66-66"];
m2_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m2_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="16-16"];
m2_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", span="19-25"];
m2_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", span="27-27"];
m2_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = errors.Add", span="17-17"];
m2_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=red, community=0, file="Tokenizer.cs", label="1: return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="29-29"];
m2_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m2_23 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="32-32"];
m2_24 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="36-36"];
m2_25 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="38-38"];
m2_26 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="39-39"];
m2_28 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="42-42"];
m2_27 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", color=red, community=0, file="Tokenizer.cs", label="0: return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="40-40"];
m2_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="32-32"];
m2_12 [cluster="Unk.ToList", file="Tokenizer.cs", label="Entry Unk.ToList", span=""];
m2_76 [cluster="Unk.Return", file="Tokenizer.cs", label="Entry Unk.Return", span=""];
m2_112 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_107 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m2_7 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_16 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m2_113 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_57 [cluster="Unk.SelectMany", file="Tokenizer.cs", label="Entry Unk.SelectMany", span=""];
m2_72 [cluster="Unk.FirstOrDefault", file="Tokenizer.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_83 [cluster="Unk.Split", file="Tokenizer.cs", label="Entry Unk.Split", span=""];
m2_11 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="64-64"];
m2_87 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="68-68"];
m2_90 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="74-74"];
m2_91 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="75-75"];
m2_93 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="80-80"];
m2_94 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="81-81"];
m2_96 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="85-85"];
m2_102 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="95-95"];
m2_104 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="104-104"];
m2_88 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="70-70"];
m2_92 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="78-78"];
m2_100 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="92-92"];
m2_89 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="72-72"];
m2_95 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="84-84"];
m2_98 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="89-89"];
m2_103 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="102-102"];
m2_97 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="87-87"];
m2_101 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="94-94"];
m2_99 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="91-91"];
m2_105 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="64-64"];
m2_50 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m2_51 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=1, file="Tokenizer.cs", label="1: var replaces = tokens.Value.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="49-52"];
m2_52 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=1, file="Tokenizer.cs", label="1: var exploded = tokens.Value.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="54-57"];
m2_54 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", color=red, community=0, file="Tokenizer.cs", label="1: return StatePair.Create(flattened, tokens.Errors);", span="61-61"];
m2_53 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var flattened = exploded.SelectMany(x => x)", span="59-59"];
m2_55 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m2_111 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m2_106 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m2_131 [file="Tokenizer.cs", label=unkTokens, span=""];
m2_132 [file="Tokenizer.cs", label=values, span=""];
m2_133 [file="Tokenizer.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m2_134 [file="Tokenizer.cs", label=int, span=""];
m2_135 [file="Tokenizer.cs", label=replaces, span=""];
m2_136 [file="Tokenizer.cs", label=int, span=""];
m2_137 [file="Tokenizer.cs", label="CommandLine.Core.Token", span=""];
m1_10 -> m1_11  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=currentCulutre, style=dashed];
m1_1 -> m1_11  [color=darkseagreen4, key=1, label=currentCulutre, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=changer, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_13 -> m1_8  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_14 -> m1_11  [color=darkseagreen4, key=1, label=currentCulutre, style=dashed];
m2_80 -> m2_81  [key=0, style=solid];
m2_20 -> m2_21  [color=red, key=0, style=solid];
m2_20 -> m2_22  [color=red, key=2, style=dotted];
m2_19 -> m2_20  [color=red, key=0, style=solid];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_48 -> m2_17  [color=red, key=2, style=dotted];
m2_47 -> m2_48  [color=red, key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_40  [key=2, style=dotted];
m2_43 -> m2_41  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_40  [key=2, style=dotted];
m2_46 -> m2_44  [color=blue, key=0, style=bold];
m2_49 -> m2_47  [color=blue, key=0, style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_32  [key=2, style=dotted];
m2_59 -> m2_61  [key=2, style=dotted];
m2_59 -> m2_62  [key=2, style=dotted];
m2_59 -> m2_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_64  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_66 -> m2_67  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_73  [key=2, style=dotted];
m2_70 -> m2_74  [key=2, style=dotted];
m2_70 -> m2_75  [key=2, style=dotted];
m2_70 -> m2_76  [key=2, style=dotted];
m2_70 -> m2_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_70 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_69 -> m2_81  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_61  [key=2, style=dotted];
m2_60 -> m2_58  [color=blue, key=0, style=bold];
m2_63 -> m2_64  [key=0, style=solid];
m2_65 -> m2_63  [color=blue, key=0, style=bold];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_66  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=2, style=dotted];
m2_81 -> m2_35  [key=2, style=dotted];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_84  [color=blue, key=0, style=bold];
m2_10 -> m2_114  [key=0, style=solid];
m2_10 -> m2_118  [color=crimson, key=0, style=bold];
m2_10 -> m2_119  [color=crimson, key=0, style=bold];
m2_10 -> m2_122  [color=crimson, key=0, style=bold];
m2_10 -> m2_124  [color=crimson, key=0, style=bold];
m2_10 -> m2_125  [color=crimson, key=0, style=bold];
m2_10 -> m2_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_10 -> m2_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_126  [key=0, style=solid];
m2_114 -> m2_8  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_108  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_108  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_9  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_106  [key=2, style=dotted];
m2_115 -> m2_118  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_115 -> m2_123  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_128  [key=2, style=dotted];
m2_121 -> m2_129  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_127  [key=2, style=dotted];
m2_116 -> m2_120  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_130  [key=2, style=dotted];
m2_123 -> m2_125  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_123  [key=0, style=solid];
m2_126 -> m2_10  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_5  [color=red, key=1, label=errors, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_3  [color=darkseagreen4, key=1, label=arg, style=dashed];
m2_3 -> m2_5  [color=red, key=1, label=tokens, style=dashed];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_4 -> m2_13  [key=2, style=dotted];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_12  [key=2, style=dotted];
m2_4 -> m2_4  [color=darkseagreen4, key=1, label=t, style=dashed];
m2_4 -> m2_20  [color=red, key=1, label=unkTokens, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_15  [color=red, key=2, style=dotted];
m2_5 -> m2_16  [color=red, key=2, style=dotted];
m2_5 -> m2_17  [color=red, key=2, style=dotted];
m2_5 -> m2_18  [color=red, key=2, style=dotted];
m2_5 -> m2_19  [color=red, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_5  [color=red, key=1, label=t, style=dashed];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_23 -> m2_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=0, style=solid];
m2_24 -> m2_30  [key=2, style=dotted];
m2_24 -> m2_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_31  [key=2, style=dotted];
m2_25 -> m2_32  [key=2, style=dotted];
m2_25 -> m2_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_27  [color=red, key=1, label=tokenizerResult, style=dashed];
m2_26 -> m2_27  [color=red, key=0, style=solid];
m2_26 -> m2_33  [key=2, style=dotted];
m2_26 -> m2_34  [key=2, style=dotted];
m2_26 -> m2_35  [key=2, style=dotted];
m2_26 -> m2_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_48  [color=red, key=1, label=values, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_27 -> m2_29  [color=red, key=0, style=solid];
m2_27 -> m2_36  [color=red, key=2, style=dotted];
m2_27 -> m2_47  [color=red, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_23  [color=blue, key=0, style=bold];
m2_11 -> m2_87  [key=0, style=solid];
m2_11 -> m2_90  [color=crimson, key=0, style=bold];
m2_11 -> m2_91  [color=crimson, key=0, style=bold];
m2_11 -> m2_93  [color=crimson, key=0, style=bold];
m2_11 -> m2_94  [color=crimson, key=0, style=bold];
m2_11 -> m2_96  [color=crimson, key=0, style=bold];
m2_11 -> m2_102  [color=crimson, key=0, style=bold];
m2_11 -> m2_104  [color=crimson, key=0, style=bold];
m2_11 -> m2_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_11 -> m2_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_11 -> m2_100  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_105  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_9  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_108  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_108  [key=2, style=dotted];
m2_102 -> m2_98  [key=0, style=solid];
m2_102 -> m2_108  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_113  [key=2, style=dotted];
m2_104 -> m2_106  [key=2, style=dotted];
m2_104 -> m2_9  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_106  [key=2, style=dotted];
m2_88 -> m2_93  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_88 -> m2_95  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_88 -> m2_98  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_88 -> m2_103  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_88 -> m2_104  [color=darkseagreen4, key=1, label=text, style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_103  [key=0, style=solid];
m2_100 -> m2_111  [key=2, style=dotted];
m2_100 -> m2_32  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_92  [key=0, style=solid];
m2_89 -> m2_107  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_109  [key=2, style=dotted];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=first, style=dashed];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_103  [key=0, style=solid];
m2_98 -> m2_106  [key=2, style=dotted];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_98 -> m2_101  [color=darkseagreen4, key=1, label=c, style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_103 -> m2_113  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_7  [key=2, style=dotted];
m2_97 -> m2_100  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_97 -> m2_101  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_97 -> m2_103  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_97 -> m2_104  [color=darkseagreen4, key=1, label=seen, style=dashed];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_112  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_110  [key=2, style=dotted];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=n, style=dashed];
m2_105 -> m2_11  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [color=red, key=0, style=solid];
m2_50 -> m2_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m2_50 -> m2_52  [color=red, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m2_50 -> m2_54  [color=red, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m2_51 -> m2_52  [color=red, key=0, style=solid];
m2_51 -> m2_35  [color=red, key=2, style=dotted];
m2_51 -> m2_56  [color=red, key=2, style=dotted];
m2_51 -> m2_58  [color=red, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_66  [color=red, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_70  [color=red, key=1, label=replaces, style=dashed];
m2_52 -> m2_53  [color=red, key=0, style=solid];
m2_52 -> m2_35  [color=red, key=2, style=dotted];
m2_52 -> m2_69  [color=red, key=1, label="lambda expression", style=dashed];
m2_54 -> m2_55  [color=red, key=0, style=solid];
m2_54 -> m2_18  [color=red, key=2, style=dotted];
m2_53 -> m2_54  [color=red, key=0, style=solid];
m2_53 -> m2_57  [key=2, style=dotted];
m2_53 -> m2_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_55 -> m2_50  [color=blue, key=0, style=bold];
m2_131 -> m2_20  [color=red, key=1, label=unkTokens, style=dashed];
m2_132 -> m2_48  [color=red, key=1, label=values, style=dashed];
m2_133 -> m2_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m2_134 -> m2_64  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_135 -> m2_70  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m2_136 -> m2_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_137 -> m2_81  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
}
