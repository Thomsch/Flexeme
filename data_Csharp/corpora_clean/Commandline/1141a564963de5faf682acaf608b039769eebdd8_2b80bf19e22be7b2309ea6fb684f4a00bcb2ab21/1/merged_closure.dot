digraph  {
n41 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
n42 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", span=""];
n43 [label="System.StringComparer", span=""];
n44 [label="CommandLine.Core.SpecificationProperty", span=""];
n0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13"];
n16 [cluster="lambda expression", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="23-23"];
n2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="return StatePair.Create(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="36-38"];
n4 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n7 [cluster="lambda expression", label="Entry lambda expression", span="20-34"];
n3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13"];
n5 [cluster="Unk.>", label="Entry Unk.>", span=""];
n6 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n32 [cluster="lambda expression", label="Entry lambda expression", span="37-37"];
n35 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n38 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n29 [cluster="lambda expression", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="28-30"];
n9 [cluster="lambda expression", label="Exit lambda expression", span="20-34"];
n10 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
n11 [cluster="Unk.ToMaybe", label="Entry Unk.ToMaybe", span=""];
n12 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
n13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
n14 [cluster="Unk.Return", label="Entry Unk.Return", span=""];
n15 [cluster="lambda expression", label="Entry lambda expression", span="22-23"];
n19 [cluster="lambda expression", label="Entry lambda expression", span="25-33"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="22-23"];
n18 [cluster="string.MatchName(string, string, System.StringComparer)", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="25-33"];
n22 [cluster="System.Type.IsScalar()", label="Entry System.Type.IsScalar()", span="33-33"];
n23 [cluster="Unk.converter", label="Entry Unk.converter", span=""];
n24 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
n25 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
n26 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
n27 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
n28 [cluster="lambda expression", label="Entry lambda expression", span="27-30"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="27-30"];
n31 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
n33 [cluster="lambda expression", label="se.Item1", span="37-37"];
n34 [cluster="lambda expression", label="Exit lambda expression", span="37-37"];
n36 [cluster="lambda expression", label="se.Item2", span="38-38"];
n37 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
n39 [cluster="lambda expression", label="se.Value", span="38-38"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
d4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=green, community=0, label="this.max = max", prediction=0, span="33-33"];
d32 [label="CommandLine.Core.Specification", span=""];
d0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28"];
d3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="this.min = min", span="32-32"];
d5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="this.defaultValue = defaultValue", span="35-35"];
d1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="this.tag = tag", span="30-30"];
d2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="this.required = required", span="31-31"];
d6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="this.conversionType = conversionType", span="36-36"];
d7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28"];
m0_4 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNullOrEmpty(string, string)", file="ParserTests.cs", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNullOrEmpty(string, string)", span="22-22"];
m0_10 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", file="ParserTests.cs", label="Entry Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", span="59-59"];
m0_11 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", file="ParserTests.cs", label="Ensure.ArgumentNotNullOrEmpty(key, ''key'')", span="61-61"];
m0_12 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", file="ParserTests.cs", label="return _values.ContainsKey(key) ? (T)_values[key] : defaultValue;", span="62-62"];
m0_13 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", file="ParserTests.cs", label="Exit Ninject.Planning.Bindings.BindingMetadata.Get<T>(string, T)", span="59-59"];
m0_6 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", file="ParserTests.cs", label="Entry Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", span="47-47"];
m0_7 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", file="ParserTests.cs", label="Ensure.ArgumentNotNullOrEmpty(key, ''key'')", span="49-49"];
m0_8 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", file="ParserTests.cs", label="return Get(key, default(T));", span="50-50"];
m0_9 [cluster="Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", file="ParserTests.cs", label="Exit Ninject.Planning.Bindings.BindingMetadata.Get<T>(string)", span="47-47"];
m0_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ParserTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_0 [cluster="Ninject.Planning.Bindings.BindingMetadata.Has(string)", file="ParserTests.cs", label="Entry Ninject.Planning.Bindings.BindingMetadata.Has(string)", span="35-35"];
m0_1 [cluster="Ninject.Planning.Bindings.BindingMetadata.Has(string)", file="ParserTests.cs", label="Ensure.ArgumentNotNullOrEmpty(key, ''key'')", span="37-37"];
m0_2 [cluster="Ninject.Planning.Bindings.BindingMetadata.Has(string)", file="ParserTests.cs", label="return _values.ContainsKey(key);", span="38-38"];
m0_3 [cluster="Ninject.Planning.Bindings.BindingMetadata.Has(string)", file="ParserTests.cs", label="Exit Ninject.Planning.Bindings.BindingMetadata.Has(string)", span="35-35"];
m0_14 [cluster="Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", file="ParserTests.cs", label="Entry Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", span="70-70"];
m0_15 [cluster="Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", file="ParserTests.cs", label="Ensure.ArgumentNotNullOrEmpty(key, ''key'')", span="72-72"];
m0_16 [cluster="Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", file="ParserTests.cs", label="_values[key] = value", span="73-73"];
m0_17 [cluster="Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", file="ParserTests.cs", label="Exit Ninject.Planning.Bindings.BindingMetadata.Set(string, object)", span="70-70"];
m0_18 [file="ParserTests.cs", label="Ninject.Planning.Bindings.BindingMetadata", span=""];
n43 -> n16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n44 -> n16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n44 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n0 -> n16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n16 -> n16  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
n2 -> n32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n7 -> n16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n7 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_18 -> m0_2  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingMetadata", style=dashed];
m0_18 -> m0_8  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingMetadata", style=dashed];
m0_18 -> m0_12  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingMetadata", style=dashed];
}
