digraph  {
n66 [label="CommandLine.ArgumentParser", span=""];
n0 [label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="37-37", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n1 [label="this.PostParsingState = new List<ParsingError>()", span="39-39", cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0];
n2 [label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="37-37", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n4 [label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="42-42", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n5 [label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="42-42", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n6 [label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="46-46", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n7 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="50-50", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0];
n8 [label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="46-46", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n9 [label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="46-46", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n10 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n11 [label="Entry CommandLine.ArgumentParser.Create(string)", span="53-53", cluster="CommandLine.ArgumentParser.Create(string)"];
n12 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="55-55", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n14 [label="argument[0] == '-' && argument[1] == '-'", span="58-58", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n16 [label="argument[0] == '-'", span="61-61", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n13 [label="return null;", span="56-56", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n20 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
n15 [label="return new LongOptionParser();", span="59-59", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n17 [label="return new OptionGroupParser();", span="62-62", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n18 [label="return null;", span="64-64", cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0];
n19 [label="Exit CommandLine.ArgumentParser.Create(string)", span="53-53", cluster="CommandLine.ArgumentParser.Create(string)"];
n22 [label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="31-31", cluster="CommandLine.OptionGroupParser.OptionGroupParser()"];
n21 [label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="33-33", cluster="CommandLine.LongOptionParser.LongOptionParser()"];
n23 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n24 [label="argument.Length > 0", span="69-69", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n25 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="70-70", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n26 [label="return true;", span="72-72", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n27 [label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="67-67", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n28 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n29 [label="IList<string> list = new List<string>()", span="84-84", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n30 [label="ae.MoveNext()", span="86-86", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n31 [label="IsInputValue(ae.Current)", span="88-88", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n32 [label="list.Add(ae.Current)", span="89-89", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n33 [label="!ae.MovePrevious()", span="93-93", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n35 [label="return list;", span="96-96", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n37 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42", cluster="CommandLine.IArgumentEnumerator.MoveNext()"];
n38 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n34 [label="throw new CommandLineParserException();", span="94-94", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n39 [label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="44-44", cluster="CommandLine.IArgumentEnumerator.MovePrevious()"];
n36 [label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n40 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="41-41", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
n41 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n42 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="101-101", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0];
n43 [label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n44 [label="Entry string.Compare(string, string, bool)", span="0-0", cluster="string.Compare(string, string, bool)"];
n45 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n46 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="106-106", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0];
n47 [label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n48 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n49 [label="return BooleanToParserState(value, false);", span="111-111", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0];
n50 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n51 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n52 [label="value && !addMoveNextIfTrue", span="116-116", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n54 [label="value && addMoveNextIfTrue", span="118-118", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n53 [label="return ParserState.Success;", span="117-117", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n55 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="119-119", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n56 [label="return ParserState.Failure;", span="121-121", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n57 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n58 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n59 [label="!option.IsAttributeArrayCompatible", span="126-126", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0];
n60 [label="throw new CommandLineParserException();", span="127-127", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0];
n61 [label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n62 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n63 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="132-132", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0];
n64 [label="throw new CommandLineParserException();", span="133-133", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0];
n65 [label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
m0_11 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Assumes.cs"];
m0_12 [label="array.Length == 0", span="51-51", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="Assumes.cs"];
m0_13 [label="throw new ArgumentOutOfRangeException(paramName);", span="52-52", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="Assumes.cs"];
m0_14 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Assumes.cs"];
m0_0 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Assumes.cs"];
m0_1 [label="value == null", span="39-39", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="Assumes.cs"];
m0_2 [label="throw new ArgumentNullException(paramName);", span="40-40", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="Assumes.cs"];
m0_3 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Assumes.cs"];
m0_9 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Assumes.cs"];
m0_4 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Assumes.cs"];
m0_5 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Assumes.cs"];
m0_6 [label="string.IsNullOrEmpty(value)", span="45-45", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="Assumes.cs"];
m0_7 [label="throw new ArgumentException(paramName);", span="46-46", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="Assumes.cs"];
m0_8 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Assumes.cs"];
m0_15 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Assumes.cs"];
m0_10 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Assumes.cs"];
m1_2 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="45-45", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="BadOptionInfo.cs"];
m1_3 [label="ShortName = shortName", span="47-47", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="BadOptionInfo.cs"];
m1_4 [label="LongName = longName", span="48-48", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="BadOptionInfo.cs"];
m1_5 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="45-45", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="BadOptionInfo.cs"];
m1_0 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="41-41", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="BadOptionInfo.cs"];
m1_1 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="41-41", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="BadOptionInfo.cs"];
m1_6 [label="CommandLine.BadOptionInfo", span="", file="BadOptionInfo.cs"];
m3_0 [label="Entry CommandLine.BaseSentenceBuilder.CreateBuiltIn()", span="46-46", cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs"];
m3_1 [label="return new EnglishSentenceBuilder();", span="48-48", cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", color=red, community=0, file="BaseSentenceBuilder.cs"];
m3_2 [label="Exit CommandLine.BaseSentenceBuilder.CreateBuiltIn()", span="46-46", cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs"];
m3_3 [label="Entry CommandLine.EnglishSentenceBuilder.EnglishSentenceBuilder()", span="38-38", cluster="CommandLine.EnglishSentenceBuilder.EnglishSentenceBuilder()", file="BaseSentenceBuilder.cs"];
m4_451 [label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1222-1222", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs"];
m4_452 [label="this.ViolatesFormat = format", span="1224-1224", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs"];
m4_453 [label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs"];
m4_13 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs"];
m4_16 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="145-145", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLine.cs"];
m4_17 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs"];
m4_318 [label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs"];
m4_335 [label="_property.PropertyType.IsEnum", span="877-877", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_336 [label=_setValueLock, span="879-879", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_338 [label=_setValueLock, span="886-886", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_337 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="881-881", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_340 [label=InvalidCastException, span="892-892", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_342 [label=FormatException, span="896-896", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_344 [label=ArgumentException, span="900-900", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_346 [label="return true;", span="905-905", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_339 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="888-888", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_341 [label="return false;", span="894-894", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_343 [label="return false;", span="898-898", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_345 [label="return false;", span="902-902", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_347 [label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs"];
m4_501 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m4_502 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m4_151 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs"];
m4_152 [label="ShortName = shortName", span="472-472", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_153 [label="LongName = longName", span="473-473", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_154 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs"];
m4_442 [label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs"];
m4_443 [label="var other = obj as Pair<TLeft, TRight>", span="1199-1199", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs"];
m4_444 [label="other == null", span="1201-1201", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs"];
m4_446 [label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1204-1204", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs"];
m4_445 [label="return false;", span="1202-1202", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs"];
m4_447 [label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs"];
m4_543 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m4_544 [label="Assumes.NotNull(args, ''args'')", span="1640-1640", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_545 [label="Assumes.NotNull(options, ''options'')", span="1641-1641", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_546 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1643-1643", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_547 [label="pair != null && helpWriter != null", span="1645-1645", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_548 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1647-1647", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_550 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1650-1650", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_554 [label="return DoParseArguments(args, options);", span="1657-1657", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_549 [label="string helpText", span="1649-1649", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_553 [label="return true;", span="1654-1654", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_551 [label="helpWriter.Write(helpText)", span="1651-1651", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_552 [label="return false;", span="1652-1652", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_555 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs"];
m4_50 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs"];
m4_507 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs"];
m4_105 [label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="690-690", cluster="CommandLine.OptionGroupParser.OptionGroupParser()", file="CommandLine.cs"];
m4_208 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs"];
m4_209 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="609-609", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs"];
m4_210 [label="_data = value", span="611-611", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs"];
m4_211 [label="_index = -1", span="612-612", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs"];
m4_212 [label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs"];
m4_83 [label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="361-361", cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs"];
m4_84 [label="this.PostParsingState = new List<ParsingError>()", span="363-363", cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, file="CommandLine.cs"];
m4_85 [label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="361-361", cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs"];
m4_634 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="CommandLine.cs"];
m4_49 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs"];
m4_207 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="929-929", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs"];
m4_358 [label=_setValueLock, span="931-931", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs"];
m4_359 [label="_property.SetValue(options, value, null)", span="933-933", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs"];
m4_360 [label="return true;", span="935-935", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs"];
m4_361 [label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="929-929", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs"];
m4_214 [label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="651-651", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs"];
m4_215 [label="_index = -1", span="653-653", cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, file="CommandLine.cs"];
m4_216 [label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="651-651", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs"];
m4_31 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs"];
m4_476 [label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_477 [label="_index <= 0", span="1358-1358", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_478 [label="throw new InvalidOperationException();", span="1360-1360", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_479 [label="_index <= _endIndex", span="1362-1362", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_480 [label="_index--", span="1364-1364", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_482 [label="return false;", span="1367-1367", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_481 [label="return _index <= _endIndex;", span="1365-1365", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_483 [label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_524 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs"];
m4_525 [label="CaseSensitive = caseSensitive", span="1543-1543", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_526 [label="MutuallyExclusive = mutuallyExclusive", span="1544-1544", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_527 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs"];
m4_413 [label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_414 [label="var setName = option.MutuallyExclusiveSet", span="1138-1138", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_415 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1140-1140", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_416 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1143-1143", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_417 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1147-1147", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_418 [label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_6 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs"];
m4_7 [label="text = null", span="134-134", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs"];
m4_8 [label="var method = pair.Left", span="136-136", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs"];
m4_9 [label="!CheckMethodSignature(method)", span="137-137", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs"];
m4_11 [label="text = (string)method.Invoke(target, null)", span="140-140", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs"];
m4_10 [label="throw new MemberAccessException();", span="138-138", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs"];
m4_12 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs"];
m4_436 [label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs"];
m4_437 [label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1191-1191", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs"];
m4_438 [label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1192-1192", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs"];
m4_439 [label="return leftHash ^ rightHash;", span="1194-1194", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs"];
m4_440 [label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs"];
m4_528 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m4_529 [label="CaseSensitive = caseSensitive", span="1557-1557", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_530 [label="MutuallyExclusive = mutuallyExclusive", span="1558-1558", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_531 [label="HelpWriter = helpWriter", span="1559-1559", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_532 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs"];
m4_236 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs"];
m4_134 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs"];
m4_135 [label="value && !addMoveNextIfTrue", span="440-440", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_136 [label="return ParserState.Success;", span="441-441", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_137 [label="value && addMoveNextIfTrue", span="442-442", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_138 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="443-443", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_139 [label="return ParserState.Failure;", span="445-445", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs"];
m4_140 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs"];
m4_376 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs"];
m4_377 [label="++count", span="1031-1031", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, file="CommandLine.cs"];
m4_378 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs"];
m4_48 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs"];
m4_316 [label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs"];
m4_656 [label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1848-1848", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_657 [label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs"];
m4_21 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs"];
m4_22 [label="!string.IsNullOrEmpty(shortName)", span="183-183", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_23 [label="_uniqueName = shortName", span="184-184", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_24 [label="!string.IsNullOrEmpty(longName)", span="185-185", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_26 [label="_uniqueName == null", span="188-188", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_25 [label="_uniqueName = longName", span="186-186", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_28 [label="base.ShortName = shortName", span="191-191", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_29 [label="base.LongName = longName", span="192-192", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_27 [label="throw new InvalidOperationException();", span="189-189", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_30 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs"];
m4_420 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs"];
m4_540 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m4_541 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="1622-1622", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_542 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m4_202 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="CommandLine.cs"];
m4_389 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs"];
m4_635 [label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs"];
m4_636 [label="var info = target.GetType().GetMethods()", span="1807-1807", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_637 [label=info, span="1809-1809", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_638 [label="!method.IsStatic", span="1811-1811", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_640 [label="attribute != null", span="1815-1815", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_642 [label="return null;", span="1820-1820", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_639 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1813-1814", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=1, file="CommandLine.cs"];
m4_641 [label="return (TAttribute)attribute;", span="1816-1816", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_643 [label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs"];
m4_63 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs"];
m4_64 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="319-319", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_65 [label="list == null || list.Count == 0", span="320-320", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_67 [label="list.Count > 1", span="323-323", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_69 [label="var pairZero = list[0]", span="326-326", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_66 [label="return null;", span="321-321", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_68 [label="throw new InvalidOperationException();", span="324-324", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_70 [label="return pairZero.Right;", span="328-328", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs"];
m4_71 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs"];
m4_660 [label="Entry CommandLine.StringUtil.Spaces(int)", span="1876-1876", cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs"];
m4_661 [label="return new String(' ', count);", span="1878-1878", cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, file="CommandLine.cs"];
m4_662 [label="Exit CommandLine.StringUtil.Spaces(int)", span="1876-1876", cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs"];
m4_15 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs"];
m4_512 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs"];
m4_513 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs"];
m4_486 [label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs"];
m4_487 [label="_target = target", span="1383-1383", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs"];
m4_488 [label="_vla = ValueListAttribute.GetAttribute(_target)", span="1384-1384", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs"];
m4_489 [label=IsValueListDefined, span="1385-1385", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs"];
m4_490 [label="_valueList = ValueListAttribute.GetReference(_target)", span="1386-1386", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs"];
m4_491 [label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs"];
m4_297 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_298 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="819-819", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_299 [label="list != null", span="820-820", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_300 [label="var map = new OptionMap(list.Count, settings)", span="822-822", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_301 [label=list, span="824-824", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_303 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="827-827", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_304 [label="map.RawOptions = target", span="830-830", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_305 [label="return map;", span="832-832", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_306 [label="return null;", span="835-835", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_302 [label="pair != null && pair.Right != null", span="826-826", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_307 [label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_149 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs"];
m4_150 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466", cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs"];
m4_373 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_374 [label="BadOption = option", span="1025-1025", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_375 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_605 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs"];
m4_606 [label="array.Length == 0", span="1752-1752", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs"];
m4_607 [label="throw new ArgumentOutOfRangeException(paramName);", span="1753-1753", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs"];
m4_608 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs"];
m4_332 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs"];
m4_334 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="CommandLine.cs"];
m4_419 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs"];
m4_333 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs"];
m4_503 [label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs"];
m4_504 [label="LastPostParsingState = new PostParsingState()", span="1447-1447", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, file="CommandLine.cs"];
m4_505 [label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs"];
m4_128 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs"];
m4_129 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="430-430", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, file="CommandLine.cs"];
m4_130 [label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs"];
m4_14 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs"];
m4_120 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="507-507", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs"];
m4_157 [label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="507-507", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs"];
m4_123 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464", cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs"];
m4_506 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464", cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs"];
m4_644 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs"];
m4_645 [label="IList<TAttribute> list = new List<TAttribute>()", span="1826-1826", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_646 [label="var info = target.GetType().GetProperties()", span="1827-1827", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_653 [label="list.Add((TAttribute)attribute)", span="1838-1838", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_654 [label="return list;", span="1843-1843", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_647 [label=info, span="1829-1829", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_651 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1836-1836", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_652 [label="attribute != null", span="1837-1837", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_648 [label="property != null && (property.CanRead && property.CanWrite)", span="1831-1831", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_650 [label="setMethod != null && !setMethod.IsStatic", span="1834-1834", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_649 [label="var setMethod = property.GetSetMethod()", span="1833-1833", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_655 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs"];
m4_233 [label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_234 [label="throw new NotSupportedException();", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs"];
m4_235 [label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_59 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs"];
m4_73 [label="concreteType = null", span="333-333", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_74 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="335-335", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_75 [label="list == null || list.Count == 0", span="336-336", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_77 [label="list.Count > 1", span="339-339", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_79 [label="var pairZero = list[0]", span="342-342", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_76 [label="return null;", span="337-337", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_78 [label="throw new InvalidOperationException();", span="340-340", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_80 [label="concreteType = pairZero.Right.ConcreteType", span="343-343", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_81 [label="return pairZero.Left;", span="345-345", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_82 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs"];
m4_60 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs"];
m4_203 [label="Entry string.Split(char[], int)", span="0-0", cluster="string.Split(char[], int)", file="CommandLine.cs"];
m4_213 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs"];
m4_601 [label="string.IsNullOrEmpty(value)", span="1746-1746", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_602 [label="throw new ArgumentException(paramName);", span="1747-1747", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_603 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs"];
m4_2 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs"];
m4_3 [label="base.ShortName = shortName", span="116-116", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_4 [label="base.LongName = longName", span="117-117", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs"];
m4_5 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs"];
m4_390 [label="Entry CommandLine.OptionMap.EnforceRules()", span="1093-1093", cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs"];
m4_391 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1095-1095", cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, file="CommandLine.cs"];
m4_392 [label="Exit CommandLine.OptionMap.EnforceRules()", span="1093-1093", cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs"];
m4_86 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs"];
m4_226 [label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_227 [label="_index == -1", span="671-671", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_228 [label="throw new InvalidOperationException();", span="672-672", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_229 [label="_index > _data.Length", span="674-674", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_230 [label="throw new InvalidOperationException();", span="675-675", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_231 [label="return _data.Substring(_index + 1);", span="677-677", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_232 [label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_625 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs"];
m4_106 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="391-391", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs"];
m4_107 [label="argument.Length > 0", span="393-393", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs"];
m4_108 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="394-394", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs"];
m4_109 [label="return true;", span="396-396", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs"];
m4_110 [label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="391-391", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs"];
m4_51 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="304-304", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs"];
m4_52 [label="Type concreteType", span="306-306", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_53 [label="var property = GetProperty(target, out concreteType)", span="307-307", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_54 [label="property == null || concreteType == null", span="309-309", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_56 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="312-312", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_57 [label="return (IList<string>)property.GetValue(target, null);", span="314-314", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_55 [label="return null;", span="310-310", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs"];
m4_58 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="304-304", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs"];
m4_394 [label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs"];
m4_395 [label="_map.Values", span="1100-1100", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs"];
m4_396 [label="option.Required && !option.IsDefined", span="1102-1102", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs"];
m4_399 [label="return true;", span="1108-1108", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs"];
m4_397 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1104-1104", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs"];
m4_398 [label="return false;", span="1105-1105", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs"];
m4_400 [label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs"];
m4_558 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs"];
m4_560 [label="bool hadError = false", span="1662-1662", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_561 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1663-1663", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_578 [label="hadError |= !optionMap.EnforceRules()", span="1698-1698", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_562 [label="var target = new TargetWrapper(options)", span="1664-1664", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_569 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1675-1675", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_563 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1666-1666", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_575 [label="target.IsValueListDefined", span="1686-1686", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_576 [label="!target.AddValueItemIfAllowed(argument)", span="1688-1688", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_564 [label="arguments.MoveNext()", span="1667-1667", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_565 [label="string argument = arguments.Current", span="1669-1669", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_574 [label="arguments.MoveNext()", span="1684-1684", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_567 [label="ArgumentParser parser = ArgumentParser.Create(argument)", span="1672-1672", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_568 [label="parser != null", span="1673-1673", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_570 [label="(result & ParserState.Failure) == ParserState.Failure", span="1676-1676", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_573 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1683-1683", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_571 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1678-1678", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_572 [label="hadError = true", span="1679-1679", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_577 [label="hadError = true", span="1690-1690", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_579 [label="return !hadError;", span="1700-1700", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_566 [label="argument != null && argument.Length > 0", span="1670-1670", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs"];
m4_580 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs"];
m4_559 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs"];
m4_155 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_156 [label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_393 [label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs"];
m4_402 [label="!_settings.MutuallyExclusive", span="1113-1113", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_403 [label="return true;", span="1114-1114", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_404 [label="_map.Values", span="1116-1116", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_405 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1118-1118", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_406 [label="BuildMutuallyExclusiveMap(option)", span="1119-1119", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_407 [label="_mutuallyExclusiveSetMap.Values", span="1123-1123", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=1, file="CommandLine.cs"];
m4_408 [label="info.Occurrence > 1", span="1125-1125", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_411 [label="return true;", span="1133-1133", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_409 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1128-1128", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_410 [label="return false;", span="1129-1129", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs"];
m4_412 [label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs"];
m4_372 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="CommandLine.cs"];
m4_87 [label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_88 [label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_317 [label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs"];
m4_349 [label="var nc = new NullableConverter(_property.PropertyType)", span="910-910", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_350 [label=_setValueLock, span="914-914", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_351 [label="_property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="916-916", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_352 [label=Exception, span="921-921", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=1, file="CommandLine.cs"];
m4_354 [label="return true;", span="926-926", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_353 [label="return false;", span="923-923", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_355 [label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs"];
m4_604 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs"];
m4_41 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs"];
m4_42 [label="concreteType == null", span="283-283", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_43 [label="throw new ArgumentNullException(''concreteType'');", span="284-284", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_44 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="286-286", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_45 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="287-287", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_46 [label="_concreteType = concreteType", span="289-289", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs"];
m4_47 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs"];
m4_89 [label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_90 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="374-374", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_91 [label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_122 [label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509", cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_158 [label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509", cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs"];
m4_473 [label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_474 [label="throw new NotSupportedException();", span="1353-1353", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs"];
m4_475 [label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs"];
m4_663 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="CommandLine.cs"];
m4_217 [label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs"];
m4_218 [label="_index < (_data.Length - 1)", span="658-658", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_219 [label="_index++", span="660-660", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_222 [label="_index = _data.Length", span="664-664", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_220 [label="_currentElement = _data.Substring(_index, 1)", span="661-661", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_223 [label="return false;", span="666-666", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_221 [label="return true;", span="662-662", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_224 [label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs"];
m4_597 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs"];
m4_160 [label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_161 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="523-523", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_162 [label="var option = map[parts[0]]", span="524-524", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_169 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="536-536", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_171 [label="parts.Length == 2", span="539-539", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_173 [label="valueSetting = option.SetValue(parts[1], options)", span="543-543", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_179 [label="items.Insert(0, parts[1])", span="554-554", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_195 [label="parts.Length == 2", span="589-589", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_163 [label="var valueSetting = false", span="525-525", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_164 [label="option == null", span="527-527", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_166 [label="option.IsDefined = true", span="530-530", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_167 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="532-532", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_168 [label="!option.IsBoolean", span="534-534", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_172 [label="!option.IsArray", span="541-541", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_175 [label="this.DefineOptionThatViolatesFormat(option)", span="545-545", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_177 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="551-551", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_180 [label="valueSetting = option.SetValue(items, options)", span="556-556", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_182 [label="this.DefineOptionThatViolatesFormat(option)", span="558-558", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_184 [label="!option.IsArray", span="565-565", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_185 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="567-567", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_187 [label="this.DefineOptionThatViolatesFormat(option)", span="569-569", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_189 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="575-575", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_191 [label="valueSetting = option.SetValue(items, options)", span="579-579", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_193 [label="this.DefineOptionThatViolatesFormat(option)", span="581-581", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_197 [label="valueSetting = option.SetValue(true, options)", span="592-592", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_199 [label="this.DefineOptionThatViolatesFormat(option)", span="594-594", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_170 [label="return ParserState.Failure;", span="537-537", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_174 [label="!valueSetting", span="544-544", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_176 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="547-547", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_178 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="553-553", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_181 [label="!valueSetting", span="557-557", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_183 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="560-560", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_186 [label="!valueSetting", span="568-568", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_188 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="571-571", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_190 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="577-577", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_192 [label="!valueSetting", span="580-580", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_194 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="583-583", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_198 [label="!valueSetting", span="593-593", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_200 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="596-596", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_196 [label="return ParserState.Failure;", span="590-590", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_165 [label="return ParserState.Failure;", span="528-528", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_201 [label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_205 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs"];
m4_581 [label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs"];
m4_594 [label="options is CommandLineOptionsBase", span="1728-1728", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs"];
m4_595 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1729-1729", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs"];
m4_596 [label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs"];
m4_520 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs"];
m4_521 [label="CaseSensitive = caseSensitive", span="1531-1531", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_522 [label="HelpWriter = helpWriter", span="1532-1532", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_523 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs"];
m4_441 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="CommandLine.cs"];
m4_308 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_379 [label="_settings = settings", span="1044-1044", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_380 [label="IEqualityComparer<string> comparer", span="1046-1046", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_384 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="1052-1052", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_382 [label="comparer = StringComparer.Ordinal", span="1048-1048", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_383 [label="comparer = StringComparer.OrdinalIgnoreCase", span="1050-1050", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_385 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1053-1053", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_386 [label="_settings.MutuallyExclusive", span="1055-1055", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_387 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1058-1058", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_381 [label="_settings.CaseSensitive", span="1047-1047", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_388 [label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_623 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="CommandLine.cs"];
m4_533 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs"];
m4_534 [label="_settings = new CommandLineParserSettings()", span="1594-1594", cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, file="CommandLine.cs"];
m4_535 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs"];
m4_141 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_142 [label="!option.IsAttributeArrayCompatible", span="450-450", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_143 [label="throw new CommandLineParserException();", span="451-451", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_144 [label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_38 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs"];
m4_39 [label="MaximumElements = -1", span="272-272", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, file="CommandLine.cs"];
m4_40 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs"];
m4_348 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs"];
m4_35 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs"];
m4_36 [label="Separator = separator", span="249-249", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, file="CommandLine.cs"];
m4_37 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs"];
m4_448 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="CommandLine.cs"];
m4_315 [label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="939-939", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs"];
m4_366 [label="int i = 0", span="948-948", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_362 [label=_setValueLock, span="941-941", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_363 [label="_property.SetValue(options, new List<string>(), null)", span="943-943", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_364 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="945-945", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_365 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="946-946", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_368 [label="fieldRef.Add(values[i])", span="950-950", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_367 [label="i < values.Length", span="948-948", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_369 [label="i++", span="948-948", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_370 [label="return true;", span="953-953", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_371 [label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="939-939", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs"];
m4_356 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs"];
m4_457 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs"];
m4_458 [label="Assumes.NotNull(value, ''value'')", span="1288-1288", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs"];
m4_459 [label="_data = value", span="1290-1290", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs"];
m4_460 [label="_index = -1", span="1291-1291", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs"];
m4_461 [label="_endIndex = value.Length", span="1292-1292", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs"];
m4_462 [label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs"];
m4_357 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs"];
m4_145 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_146 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="456-456", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_147 [label="throw new CommandLineParserException();", span="457-457", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs"];
m4_148 [label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs"];
m4_556 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs"];
m4_626 [label="var info = target.GetType().GetMethods()", span="1788-1788", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_627 [label=info, span="1790-1790", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_628 [label="!method.IsStatic", span="1792-1792", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_630 [label="attribute != null", span="1796-1796", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_632 [label="return null;", span="1801-1801", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_629 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1794-1795", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=1, file="CommandLine.cs"];
m4_631 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1797-1797", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_633 [label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs"];
m4_131 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs"];
m4_132 [label="return BooleanToParserState(value, false);", span="435-435", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, file="CommandLine.cs"];
m4_133 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs"];
m4_431 [label="Entry CommandLine.ParsingError.ParsingError()", span="1213-1213", cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs"];
m4_449 [label="this.BadOption = new BadOptionInfo()", span="1215-1215", cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, file="CommandLine.cs"];
m4_450 [label="Exit CommandLine.ParsingError.ParsingError()", span="1213-1213", cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs"];
m4_72 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs"];
m4_610 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1762-1762", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_611 [label="target != null", span="1763-1763", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_619 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1776-1776", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_620 [label="return list;", span="1782-1782", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_612 [label="var propertiesInfo = target.GetType().GetProperties()", span="1765-1765", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_613 [label=propertiesInfo, span="1767-1767", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_617 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1774-1774", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_618 [label="attribute != null", span="1775-1775", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_614 [label="property != null && (property.CanRead && property.CanWrite)", span="1769-1769", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_616 [label="setMethod != null && !setMethod.IsStatic", span="1772-1772", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_615 [label="var setMethod = property.GetSetMethod()", span="1771-1771", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs"];
m4_621 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs"];
m4_492 [label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs"];
m4_493 [label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1393-1393", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs"];
m4_494 [label="return false;", span="1394-1394", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs"];
m4_495 [label=this, span="1396-1396", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs"];
m4_496 [label="_valueList.Add(item)", span="1398-1398", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs"];
m4_497 [label="return true;", span="1401-1401", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs"];
m4_498 [label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs"];
m4_94 [label="Entry CommandLine.ArgumentParser.Create(string)", span="377-377", cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs"];
m4_95 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="379-379", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_96 [label="return null;", span="380-380", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_97 [label="argument[0] == '-' && argument[1] == '-'", span="382-382", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_98 [label="return new LongOptionParser();", span="383-383", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_99 [label="argument[0] == '-'", span="385-385", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_100 [label="return new OptionGroupParser();", span="386-386", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_101 [label="return null;", span="388-388", cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs"];
m4_102 [label="Exit CommandLine.ArgumentParser.Create(string)", span="377-377", cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs"];
m4_206 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs"];
m4_319 [label="Type elementType = _property.PropertyType.GetElementType()", span="851-851", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_320 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="852-852", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_324 [label="array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="860-860", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_321 [label="int i = 0", span="854-854", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_322 [label="i < array.Length", span="854-854", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_325 [label="_property.SetValue(options, array, null)", span="861-861", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_323 [label=_setValueLock, span="858-858", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_326 [label=FormatException, span="864-864", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_328 [label="i++", span="854-854", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_329 [label="return true;", span="870-870", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_327 [label="return false;", span="866-866", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs"];
m4_330 [label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs"];
m4_62 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs"];
m4_464 [label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1336-1336", cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs"];
m4_465 [label="_index = -1", span="1338-1338", cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, file="CommandLine.cs"];
m4_466 [label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1336-1336", cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs"];
m4_124 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs"];
m4_125 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="425-425", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, file="CommandLine.cs"];
m4_126 [label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs"];
m4_609 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs"];
m4_32 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs"];
m4_18 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs"];
m4_225 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="CommandLine.cs"];
m4_557 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs"];
m4_584 [label="i < args.Length", span="1707-1707", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_582 [label="bool caseSensitive = _settings.CaseSensitive", span="1705-1705", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_583 [label="int i = 0", span="1707-1707", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_586 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1711-1711", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_589 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1717-1717", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_591 [label="i++", span="1707-1707", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_585 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1709-1709", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_592 [label="return false;", span="1722-1722", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_588 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="1715-1715", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_587 [label="return true;", span="1712-1712", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_590 [label="return true;", span="1718-1718", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs"];
m4_593 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs"];
m4_514 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs"];
m4_515 [label="CaseSensitive = caseSensitive", span="1507-1507", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, file="CommandLine.cs"];
m4_516 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs"];
m4_622 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="CommandLine.cs"];
m4_61 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs"];
m4_103 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs"];
m4_467 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs"];
m4_468 [label="_index < _endIndex", span="1343-1343", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_469 [label="_index++", span="1345-1345", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_471 [label="return false;", span="1348-1348", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_470 [label="return _index < _endIndex;", span="1346-1346", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs"];
m4_472 [label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs"];
m4_499 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m4_500 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs"];
m4_658 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs"];
m4_104 [label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="516-516", cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs"];
m4_159 [label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="516-516", cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs"];
m4_121 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs"];
m4_463 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs"];
m4_598 [label="value == null", span="1740-1740", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs"];
m4_599 [label="throw new ArgumentNullException(paramName);", span="1741-1741", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs"];
m4_600 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs"];
m4_536 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_537 [label="Assumes.NotNull(settings, ''settings'')", span="1605-1605", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_538 [label="_settings = settings", span="1607-1607", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs"];
m4_539 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs"];
m4_111 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs"];
m4_112 [label="IList<string> list = new List<string>()", span="408-408", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_113 [label="ae.MoveNext()", span="410-410", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_115 [label="list.Add(ae.Current)", span="413-413", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_118 [label="return list;", span="420-420", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_114 [label="IsInputValue(ae.Current)", span="412-412", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_116 [label="!ae.MovePrevious()", span="417-417", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_117 [label="throw new CommandLineParserException();", span="418-418", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs"];
m4_119 [label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs"];
m4_624 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs"];
m4_93 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs"];
m4_331 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="CommandLine.cs"];
m4_517 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs"];
m4_518 [label="HelpWriter = helpWriter", span="1519-1519", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs"];
m4_519 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs"];
m4_659 [label="Entry System.Type.Equals(System.Type)", span="0-0", cluster="System.Type.Equals(System.Type)", file="CommandLine.cs"];
m4_239 [label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_240 [label="var valueSetting = false", span="694-694", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_241 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="696-696", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_242 [label="group.MoveNext()", span="697-697", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_243 [label="var option = map[group.Current]", span="699-699", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_249 [label="argumentEnumerator.IsLast && group.IsLast", span="709-709", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_251 [label="!group.IsLast", span="712-712", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_253 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="716-716", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_259 [label="items.Insert(0, group.GetRemainingFromNext())", span="727-727", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_277 [label="!group.IsLast && map[group.Next] == null", span="765-765", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_244 [label="option == null", span="700-700", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_246 [label="option.IsDefined = true", span="703-703", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_247 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="705-705", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_248 [label="!option.IsBoolean", span="707-707", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_252 [label="!option.IsArray", span="714-714", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_255 [label="this.DefineOptionThatViolatesFormat(option)", span="718-718", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_257 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="724-724", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_260 [label="valueSetting = option.SetValue(items, options)", span="729-729", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_262 [label="this.DefineOptionThatViolatesFormat(option)", span="731-731", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_266 [label="!option.IsArray", span="741-741", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_267 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="743-743", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_269 [label="this.DefineOptionThatViolatesFormat(option)", span="745-745", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_271 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="751-751", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_273 [label="valueSetting = option.SetValue(items, options)", span="755-755", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_275 [label="this.DefineOptionThatViolatesFormat(option)", span="757-757", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_279 [label="!option.SetValue(true, options)", span="768-768", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_250 [label="return ParserState.Failure;", span="710-710", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_254 [label="!valueSetting", span="717-717", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_256 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="720-720", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_258 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="726-726", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_261 [label="!valueSetting", span="730-730", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_263 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="733-733", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_264 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="737-737", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_265 [label="return ParserState.Failure;", span="738-738", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_268 [label="!valueSetting", span="744-744", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_270 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="747-747", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_272 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="753-753", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_274 [label="!valueSetting", span="756-756", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_276 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="759-759", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_278 [label="return ParserState.Failure;", span="766-766", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_280 [label="return ParserState.Failure;", span="769-769", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_281 [label="return ParserState.Success;", span="773-773", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_245 [label="return ParserState.Failure;", span="701-701", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs"];
m4_282 [label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs"];
m4_296 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs"];
m4_432 [label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs"];
m4_433 [label="_left = left", span="1175-1175", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs"];
m4_434 [label="_right = right", span="1176-1176", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs"];
m4_435 [label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs"];
m4_401 [label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs"];
m4_421 [label="options is CommandLineOptionsBase", span="1152-1152", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_422 [label="ParsingError error = new ParsingError()", span="1154-1154", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_423 [label="error.BadOption.ShortName = option.ShortName", span="1157-1157", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_424 [label="error.BadOption.LongName = option.LongName", span="1158-1158", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_425 [label="required != null", span="1160-1160", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_426 [label="error.ViolatesRequired = required.Value", span="1160-1160", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_427 [label="mutualExclusiveness != null", span="1161-1161", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_428 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1161-1161", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_429 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1163-1163", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs"];
m4_430 [label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs"];
m4_204 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="838-838", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs"];
m4_309 [label="_attribute is OptionListAttribute", span="840-840", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_310 [label="return SetValueList(value, options);", span="841-841", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_311 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="843-843", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_312 [label="return SetNullableValue(value, options);", span="844-844", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_313 [label="return SetValueScalar(value, options);", span="846-846", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs"];
m4_314 [label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="838-838", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs"];
m4_454 [label="Entry CommandLine.PostParsingState.PostParsingState()", span="1266-1266", cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs"];
m4_455 [label="Errors = new List<ParsingError>()", span="1268-1268", cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, file="CommandLine.cs"];
m4_456 [label="Exit CommandLine.PostParsingState.PostParsingState()", span="1266-1266", cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs"];
m4_127 [label="Entry string.Compare(string, string, bool)", span="0-0", cluster="string.Compare(string, string, bool)", file="CommandLine.cs"];
m4_283 [label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs"];
m4_284 [label="attribute != null", span="791-791", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_285 [label="_required = attribute.Required", span="793-793", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_291 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="801-801", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_286 [label="_helpText = attribute.HelpText", span="794-794", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_287 [label="_shortName = attribute.ShortName", span="795-795", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_288 [label="_longName = attribute.LongName", span="796-796", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_289 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="797-797", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_290 [label="_attribute = attribute", span="798-798", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_292 [label="property != null", span="803-803", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_293 [label="_property = property", span="804-804", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_294 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="806-806", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs"];
m4_295 [label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs"];
m4_664 [label="CommandLine.HelpOptionAttribute", span="", file="CommandLine.cs"];
m4_665 [label="CommandLine.OptionAttribute", span="", file="CommandLine.cs"];
m4_666 [label="CommandLine.OptionListAttribute", span="", file="CommandLine.cs"];
m4_667 [label="CommandLine.ValueListAttribute", span="", file="CommandLine.cs"];
m4_668 [label="CommandLine.ArgumentParser", span="", file="CommandLine.cs"];
m4_669 [label="CommandLine.BadOptionInfo", span="", file="CommandLine.cs"];
m4_670 [label="CommandLine.LongOptionParser", span="", file="CommandLine.cs"];
m4_671 [label="CommandLine.OneCharStringEnumerator", span="", file="CommandLine.cs"];
m4_672 [label="CommandLine.OptionGroupParser", span="", file="CommandLine.cs"];
m4_673 [label="CommandLine.OptionInfo", span="", file="CommandLine.cs"];
m4_674 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span="", file="CommandLine.cs"];
m4_675 [label="CommandLine.OptionMap", span="", file="CommandLine.cs"];
m4_676 [label="CommandLine.Pair<TLeft, TRight>", span="", file="CommandLine.cs"];
m4_677 [label="CommandLine.ParsingError", span="", file="CommandLine.cs"];
m4_678 [label="CommandLine.PostParsingState", span="", file="CommandLine.cs"];
m4_679 [label="CommandLine.StringArrayEnumerator", span="", file="CommandLine.cs"];
m4_680 [label="CommandLine.TargetWrapper", span="", file="CommandLine.cs"];
m4_681 [label="CommandLine.CommandLineOptionsBase", span="", file="CommandLine.cs"];
m4_682 [label="CommandLine.CommandLineParserSettings", span="", file="CommandLine.cs"];
m4_683 [label="CommandLine.CommandLineParser", span="", file="CommandLine.cs"];
m5_3 [label="Entry CommandLine.PostParsingState.PostParsingState()", span="40-40", cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLineOptionsBase.cs"];
m5_0 [label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="39-39", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLineOptionsBase.cs"];
m5_1 [label="LastPostParsingState = new PostParsingState()", span="41-41", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0, file="CommandLineOptionsBase.cs"];
m5_2 [label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="39-39", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLineOptionsBase.cs"];
m5_4 [label="CommandLine.CommandLineOptionsBase", span="", file="CommandLineOptionsBase.cs"];
m6_3 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParser.cs"];
m6_52 [label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="42-42", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLineParser.cs"];
m6_51 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs"];
m6_73 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLineParser.cs"];
m6_12 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="93-93", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs"];
m6_13 [label="Assumes.NotNull(args, ''args'')", span="95-95", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_14 [label="Assumes.NotNull(options, ''options'')", span="96-96", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_15 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="98-98", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_16 [label="pair != null && helpWriter != null", span="100-100", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_17 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="102-102", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_19 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="105-105", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_20 [label="helpWriter.Write(helpText)", span="106-106", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_23 [label="return DoParseArguments(args, options);", span="112-112", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_18 [label="string helpText", span="104-104", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_22 [label="return true;", span="109-109", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_21 [label="return false;", span="107-107", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs"];
m6_24 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="93-93", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs"];
m6_55 [label="Entry CommandLine.ArgumentParser.Create(string)", span="53-53", cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLineParser.cs"];
m6_26 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="158-158", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs"];
m6_60 [label="bool caseSensitive = _settings.CaseSensitive", span="160-160", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_62 [label="i < args.Length", span="162-162", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_63 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="164-164", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_64 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="166-166", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_66 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="170-170", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_67 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="172-172", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_61 [label="int i = 0", span="162-162", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_69 [label="i++", span="162-162", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_70 [label="return false;", span="177-177", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_65 [label="return true;", span="167-167", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_68 [label="return true;", span="173-173", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs"];
m6_71 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="158-158", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs"];
m6_78 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLineParser.cs"];
m6_57 [label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="181-181", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLineParser.cs"];
m6_75 [label="options is CommandLineOptionsBase", span="183-183", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, file="CommandLineParser.cs"];
m6_76 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="184-184", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, file="CommandLineParser.cs"];
m6_77 [label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="181-181", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLineParser.cs"];
m6_74 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLineParser.cs"];
m6_54 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLineParser.cs"];
m6_8 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLineParser.cs"];
m6_4 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="58-58", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs"];
m6_5 [label="Assumes.NotNull(settings, ''settings'')", span="60-60", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineParser.cs"];
m6_6 [label="_settings = settings", span="62-62", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineParser.cs"];
m6_7 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="58-58", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs"];
m6_0 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="47-47", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs"];
m6_1 [label="_settings = new CommandLineParserSettings()", span="49-49", cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0, file="CommandLineParser.cs"];
m6_2 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="47-47", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs"];
m6_72 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="CommandLineParser.cs"];
m6_59 [label="Entry CommandLine.OptionMap.EnforceRules()", span="112-112", cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLineParser.cs"];
m6_53 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLineParser.cs"];
m6_28 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs"];
m6_25 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="64-64", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineParser.cs"];
m6_27 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="115-115", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs"];
m6_30 [label="bool hadError = false", span="117-117", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_31 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="118-118", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_32 [label="var target = new TargetWrapper(options)", span="119-119", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_33 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="121-121", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_39 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="130-130", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_41 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="133-133", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_48 [label="hadError |= !optionMap.EnforceRules()", span="153-153", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_45 [label="target.IsValueListDefined", span="141-141", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_46 [label="!target.AddValueItemIfAllowed(argument)", span="143-143", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_34 [label="arguments.MoveNext()", span="122-122", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_35 [label="string argument = arguments.Current", span="124-124", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_44 [label="arguments.MoveNext()", span="139-139", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_36 [label="argument != null && argument.Length > 0", span="125-125", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_37 [label="ArgumentParser parser = ArgumentParser.Create(argument)", span="127-127", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_38 [label="parser != null", span="128-128", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_40 [label="(result & ParserState.Failure) == ParserState.Failure", span="131-131", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_43 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="138-138", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_42 [label="hadError = true", span="134-134", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_47 [label="hadError = true", span="145-145", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_49 [label="return !hadError;", span="155-155", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_50 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="115-115", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs"];
m6_58 [label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="52-52", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLineParser.cs"];
m6_29 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs"];
m6_9 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="75-75", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs"];
m6_10 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="77-77", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs"];
m6_11 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="75-75", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs"];
m6_79 [label="CommandLine.CommandLineParser", span="", file="CommandLineParser.cs"];
m7_1 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="41-41", cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs"];
m7_4 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="51-51", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs"];
m7_5 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="51-51", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs"];
m7_6 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="56-56", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs"];
m7_7 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="56-56", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs"];
m7_2 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="46-46", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs"];
m7_3 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="46-46", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs"];
m8_2 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="54-54", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs"];
m8_3 [label="CaseSensitive = caseSensitive", span="56-56", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_4 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="54-54", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs"];
m8_16 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="104-104", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_17 [label="CaseSensitive = caseSensitive", span="106-106", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_18 [label="MutuallyExclusive = mutuallyExclusive", span="107-107", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_19 [label="HelpWriter = helpWriter", span="108-108", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_20 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="104-104", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_0 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettings.cs"];
m8_1 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettings.cs"];
m8_12 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="90-90", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs"];
m8_13 [label="CaseSensitive = caseSensitive", span="92-92", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_14 [label="MutuallyExclusive = mutuallyExclusive", span="93-93", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_15 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="90-90", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs"];
m8_5 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="65-65", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_6 [label="HelpWriter = helpWriter", span="68-68", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_7 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="65-65", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_8 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="78-78", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_9 [label="CaseSensitive = caseSensitive", span="80-80", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_10 [label="HelpWriter = helpWriter", span="81-81", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs"];
m8_11 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="78-78", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs"];
m8_21 [label="CommandLine.CommandLineParserSettings", span="", file="CommandLineParserSettings.cs"];
m9_31 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs"];
m9_16 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CopyrightInfo.cs"];
m9_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs"];
m9_17 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs"];
m9_6 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="90-90", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m9_7 [label="Assumes.NotNullOrEmpty(author, ''author'')", span="92-92", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_8 [label="Assumes.NotZeroLength(years, ''years'')", span="93-93", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_10 [label="_isSymbolUpper = isSymbolUpper", span="96-96", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_11 [label="_author = author", span="97-97", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_12 [label="_years = years", span="98-98", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_13 [label="_builder = new StringBuilder\r\n                    (CopyrightWord.Length + author.Length + (4 * years.Length) + extraLength)", span="99-100", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=1, file="CopyrightInfo.cs"];
m9_9 [label="int extraLength = 10", span="95-95", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_14 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="90-90", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m9_2 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs"];
m9_3 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs"];
m9_51 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs"];
m9_34 [label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs"];
m9_35 [label="return info.ToString();", span="131-131", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", color=red, community=0, file="CopyrightInfo.cs"];
m9_36 [label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs"];
m9_18 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="107-107", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m9_19 [label="_builder.Append(CopyrightWord)", span="109-109", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_20 [label="_builder.Append(' ')", span="110-110", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_21 [label=_isSymbolUpper, span="111-111", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_22 [label="_builder.Append(_symbolUpper)", span="112-112", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_23 [label="_builder.Append(_symbolLower)", span="114-114", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_24 [label="_builder.Append(' ')", span="116-116", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_25 [label="_builder.Append(FormatYears(_years))", span="117-117", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_26 [label="_builder.Append(' ')", span="118-118", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_27 [label="_builder.Append(_author)", span="119-119", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_28 [label="return _builder.ToString();", span="121-121", cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs"];
m9_29 [label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="107-107", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m9_32 [label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="148-148", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m9_37 [label="years.Length == 1", span="150-150", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_38 [label="return years[0].ToString(CultureInfo.InvariantCulture);", span="151-151", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_39 [label="var yearsPart = new StringBuilder(years.Length * 6)", span="153-153", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_41 [label="i < years.Length", span="154-154", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_42 [label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="156-156", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_44 [label="next < years.Length", span="158-158", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_45 [label="years[next] - years[i] > 1", span="160-160", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_40 [label="int i = 0", span="154-154", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_46 [label="yearsPart.Append('' - '')", span="161-161", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_47 [label="yearsPart.Append('', '')", span="163-163", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_49 [label="return yearsPart.ToString();", span="167-167", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_43 [label="int next = i + 1", span="157-157", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_48 [label="i++", span="154-154", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs"];
m9_50 [label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="148-148", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m9_4 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="76-76", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs"];
m9_5 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="76-76", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs"];
m9_15 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CopyrightInfo.cs"];
m9_0 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="52-52", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs"];
m9_1 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="52-52", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs"];
m9_33 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs"];
m9_52 [label="CommandLine.Text.CopyrightInfo", span="", file="CopyrightInfo.cs"];
m11_0 [label="Entry CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45", cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="FormatOptionHelpTextEventArgs.cs"];
m11_1 [label="_option = option", span="47-47", cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", color=red, community=0, file="FormatOptionHelpTextEventArgs.cs"];
m11_2 [label="Exit CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45", cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="FormatOptionHelpTextEventArgs.cs"];
m11_3 [label="CommandLine.Text.FormatOptionHelpTextEventArgs", span="", file="FormatOptionHelpTextEventArgs.cs"];
m12_25 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="108-108", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs"];
m12_26 [label="Assumes.NotNullOrEmpty(message, ''message'')", span="110-110", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_27 [label="Assumes.NotNull(writer, ''writer'')", span="111-111", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_28 [label="var builder = new StringBuilder(_programName.Length + message.Length + 2)", span="113-113", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_31 [label="builder.Append(message)", span="116-116", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_32 [label="writer.WriteLine(builder.ToString())", span="117-117", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_29 [label="builder.Append(_programName)", span="114-114", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_30 [label="builder.Append('': '')", span="115-115", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs"];
m12_33 [label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="108-108", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs"];
m12_20 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="HeadingInfo.cs"];
m12_35 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="HeadingInfo.cs"];
m12_2 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="63-63", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs"];
m12_3 [label="Assumes.NotNullOrEmpty(programName, ''programName'')", span="65-65", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs"];
m12_4 [label="_programName = programName", span="67-67", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs"];
m12_5 [label="_version = version", span="68-68", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs"];
m12_6 [label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="63-63", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs"];
m12_18 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="HeadingInfo.cs"];
m12_22 [label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="95-95", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs"];
m12_23 [label="return info.ToString();", span="97-97", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", color=red, community=0, file="HeadingInfo.cs"];
m12_24 [label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="95-95", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs"];
m12_34 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="HeadingInfo.cs"];
m12_0 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="51-51", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs"];
m12_1 [label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="51-51", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs"];
m12_8 [label="Entry CommandLine.Text.HeadingInfo.ToString()", span="75-75", cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs"];
m12_9 [label="bool isVersionNull = string.IsNullOrEmpty(_version)", span="77-77", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_10 [label="var builder = new StringBuilder(_programName.Length +\r\n                                (!isVersionNull ? _version.Length + 1: 0))", span="78-79", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=1, file="HeadingInfo.cs"];
m12_12 [label="!isVersionNull", span="81-81", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_11 [label="builder.Append(_programName)", span="80-80", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_13 [label="builder.Append(' ')", span="83-83", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_14 [label="builder.Append(_version)", span="84-84", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_15 [label="return builder.ToString();", span="87-87", cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs"];
m12_16 [label="Exit CommandLine.Text.HeadingInfo.ToString()", span="75-75", cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs"];
m12_17 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="HeadingInfo.cs"];
m12_39 [label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="137-137", cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs"];
m12_40 [label="WriteMessage(message, Console.Error)", span="139-139", cluster="CommandLine.Text.HeadingInfo.WriteError(string)", color=red, community=0, file="HeadingInfo.cs"];
m12_41 [label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="137-137", cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs"];
m12_21 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="HeadingInfo.cs"];
m12_19 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="HeadingInfo.cs"];
m12_7 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="HeadingInfo.cs"];
m12_36 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="126-126", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs"];
m12_37 [label="WriteMessage(message, Console.Out)", span="128-128", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", color=red, community=0, file="HeadingInfo.cs"];
m12_38 [label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="126-126", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs"];
m12_42 [label="CommandLine.Text.HeadingInfo", span="", file="HeadingInfo.cs"];
m13_6 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs"];
m13_7 [label="text = null", span="79-79", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_8 [label="var method = pair.Left", span="81-81", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_11 [label="text = (string)method.Invoke(target, null)", span="85-85", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_9 [label="!CheckMethodSignature(method)", span="82-82", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_10 [label="throw new MemberAccessException();", span="83-83", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_12 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs"];
m13_13 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs"];
m13_16 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="90-90", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_17 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs"];
m13_15 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpOptionAttribute.cs"];
m13_0 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs"];
m13_1 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs"];
m13_2 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="HelpOptionAttribute.cs"];
m13_3 [label="base.ShortName = shortName", span="61-61", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_4 [label="base.LongName = longName", span="62-62", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="HelpOptionAttribute.cs"];
m13_5 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="HelpOptionAttribute.cs"];
m13_14 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()", file="HelpOptionAttribute.cs"];
m13_18 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="HelpOptionAttribute.cs"];
m13_19 [label="CommandLine.HelpOptionAttribute", span="", file="HelpOptionAttribute.cs"];
m15_5 [label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="44-44", cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="IArgumentEnumerator.cs"];
m15_2 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs"];
m15_3 [label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="42-42", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs"];
m15_0 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs"];
m15_1 [label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs"];
m16_0 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ICommandLineParser.cs"];
m16_1 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ICommandLineParser.cs"];
m16_2 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="ICommandLineParser.cs"];
m16_3 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="ICommandLineParser.cs"];
m17_0 [label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="33-33", cluster="CommandLine.LongOptionParser.LongOptionParser()", file="LongOptionParser.cs"];
m17_1 [label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="33-33", cluster="CommandLine.LongOptionParser.LongOptionParser()", file="LongOptionParser.cs"];
m17_46 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="LongOptionParser.cs"];
m17_48 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="LongOptionParser.cs"];
m17_56 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="LongOptionParser.cs"];
m17_47 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="LongOptionParser.cs"];
m17_51 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="LongOptionParser.cs"];
m17_2 [label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="LongOptionParser.cs"];
m17_3 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="40-40", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_4 [label="var option = map[parts[0]]", span="41-41", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_11 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="53-53", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_15 [label="valueSetting = option.SetValue(parts[1], options)", span="60-60", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_20 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="70-70", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_22 [label="valueSetting = option.SetValue(items, options)", span="73-73", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_27 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="84-84", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_32 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="94-94", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_33 [label="valueSetting = option.SetValue(items, options)", span="96-96", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_39 [label="valueSetting = option.SetValue(true, options)", span="109-109", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_13 [label="parts.Length == 2", span="56-56", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_21 [label="items.Insert(0, parts[1])", span="71-71", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_37 [label="parts.Length == 2", span="106-106", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_5 [label="var valueSetting = false", span="42-42", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_6 [label="option == null", span="44-44", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_8 [label="option.IsDefined = true", span="47-47", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_9 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="49-49", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_10 [label="!option.IsBoolean", span="51-51", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_14 [label="!option.IsArray", span="58-58", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_17 [label="this.DefineOptionThatViolatesFormat(option)", span="62-62", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_19 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="68-68", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_24 [label="this.DefineOptionThatViolatesFormat(option)", span="75-75", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_26 [label="!option.IsArray", span="82-82", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_29 [label="this.DefineOptionThatViolatesFormat(option)", span="86-86", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_31 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="92-92", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_35 [label="this.DefineOptionThatViolatesFormat(option)", span="98-98", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_41 [label="this.DefineOptionThatViolatesFormat(option)", span="111-111", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_7 [label="return ParserState.Failure;", span="45-45", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_12 [label="return ParserState.Failure;", span="54-54", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_16 [label="!valueSetting", span="61-61", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_18 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="64-64", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_23 [label="!valueSetting", span="74-74", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_25 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="77-77", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_28 [label="!valueSetting", span="85-85", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_30 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="88-88", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_34 [label="!valueSetting", span="97-97", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_36 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="100-100", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_38 [label="return ParserState.Failure;", span="107-107", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_40 [label="!valueSetting", span="110-110", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_42 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="113-113", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs"];
m17_43 [label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="LongOptionParser.cs"];
m17_52 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="LongOptionParser.cs"];
m17_53 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="LongOptionParser.cs"];
m17_45 [label="Entry string.Split(char[], int)", span="0-0", cluster="string.Split(char[], int)", file="LongOptionParser.cs"];
m17_50 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="LongOptionParser.cs"];
m17_55 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="LongOptionParser.cs"];
m17_54 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="LongOptionParser.cs"];
m17_44 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="LongOptionParser.cs"];
m17_57 [label="CommandLine.LongOptionParser", span="", file="LongOptionParser.cs"];
m18_18 [label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="105-105", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="OneCharStringEnumerator.cs"];
m18_19 [label="_index == -1", span="107-107", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_20 [label="throw new InvalidOperationException();", span="108-108", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_21 [label="_index > _data.Length", span="110-110", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_22 [label="throw new InvalidOperationException();", span="111-111", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_23 [label="return _data.Substring(_index + 1);", span="113-113", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_24 [label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="105-105", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="OneCharStringEnumerator.cs"];
m18_17 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="OneCharStringEnumerator.cs"];
m18_9 [label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="92-92", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="OneCharStringEnumerator.cs"];
m18_10 [label="_index < (_data.Length - 1)", span="94-94", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_11 [label="_index++", span="96-96", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_14 [label="_index = _data.Length", span="100-100", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_12 [label="_currentElement = _data.Substring(_index, 1)", span="97-97", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_13 [label="return true;", span="98-98", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_15 [label="return false;", span="102-102", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_16 [label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="92-92", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="OneCharStringEnumerator.cs"];
m18_0 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OneCharStringEnumerator.cs"];
m18_1 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="43-43", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_2 [label="_data = value", span="45-45", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_3 [label="_index = -1", span="46-46", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_4 [label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OneCharStringEnumerator.cs"];
m18_27 [label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="116-116", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="OneCharStringEnumerator.cs"];
m18_28 [label="throw new NotSupportedException();", span="118-118", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_29 [label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="116-116", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="OneCharStringEnumerator.cs"];
m18_30 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="OneCharStringEnumerator.cs"];
m18_6 [label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="87-87", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="OneCharStringEnumerator.cs"];
m18_7 [label="_index = -1", span="89-89", cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0, file="OneCharStringEnumerator.cs"];
m18_8 [label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="87-87", cluster="CommandLine.OneCharStringEnumerator.Reset()", file="OneCharStringEnumerator.cs"];
m18_31 [label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="121-121", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="OneCharStringEnumerator.cs"];
m18_32 [label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="121-121", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="OneCharStringEnumerator.cs"];
m18_5 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="OneCharStringEnumerator.cs"];
m18_26 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="OneCharStringEnumerator.cs"];
m18_25 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="OneCharStringEnumerator.cs"];
m18_33 [label="CommandLine.OneCharStringEnumerator", span="", file="OneCharStringEnumerator.cs"];
m19_0 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="44-44", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="OptionArrayAttribute.cs"];
m19_1 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="44-44", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="OptionArrayAttribute.cs"];
m20_10 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="OptionAttribute.cs"];
m20_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="50-50", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m20_1 [label="!string.IsNullOrEmpty(shortName)", span="52-52", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_2 [label="_uniqueName = shortName", span="53-53", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_3 [label="!string.IsNullOrEmpty(longName)", span="54-54", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_4 [label="_uniqueName = longName", span="55-55", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_7 [label="base.ShortName = shortName", span="60-60", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_8 [label="base.LongName = longName", span="61-61", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_5 [label="_uniqueName == null", span="57-57", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_6 [label="throw new InvalidOperationException();", span="58-58", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m20_9 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="50-50", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m20_11 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="OptionAttribute.cs"];
m20_12 [label="CommandLine.OptionAttribute", span="", file="OptionAttribute.cs"];
m21_46 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="OptionGroupParser.cs"];
m21_47 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="OptionGroupParser.cs"];
m21_49 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionGroupParser.cs"];
m21_44 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OptionGroupParser.cs"];
m21_58 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionGroupParser.cs"];
m21_57 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67", cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="OptionGroupParser.cs"];
m21_52 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="OptionGroupParser.cs"];
m21_53 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="OptionGroupParser.cs"];
m21_51 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="OptionGroupParser.cs"];
m21_54 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="OptionGroupParser.cs"];
m21_56 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="OptionGroupParser.cs"];
m21_55 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionGroupParser.cs"];
m21_0 [label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="33-33", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="OptionGroupParser.cs"];
m21_1 [label="var valueSetting = false", span="35-35", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_2 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="37-37", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_4 [label="var option = map[group.Current]", span="40-40", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_10 [label="argumentEnumerator.IsLast && group.IsLast", span="50-50", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_14 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="57-57", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_19 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="67-67", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_21 [label="valueSetting = option.SetValue(items, options)", span="70-70", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_25 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="78-78", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_28 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="84-84", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_33 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="94-94", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_34 [label="valueSetting = option.SetValue(items, options)", span="96-96", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_38 [label="!group.IsLast && map[group.Next] == null", span="106-106", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_40 [label="!option.SetValue(true, options)", span="109-109", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_3 [label="group.MoveNext()", span="38-38", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_12 [label="!group.IsLast", span="53-53", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_20 [label="items.Insert(0, group.GetRemainingFromNext())", span="68-68", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_42 [label="return ParserState.Success;", span="114-114", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_5 [label="option == null", span="41-41", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_7 [label="option.IsDefined = true", span="44-44", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_8 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="46-46", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_9 [label="!option.IsBoolean", span="48-48", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_13 [label="!option.IsArray", span="55-55", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_16 [label="this.DefineOptionThatViolatesFormat(option)", span="59-59", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_18 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="65-65", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_23 [label="this.DefineOptionThatViolatesFormat(option)", span="72-72", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_27 [label="!option.IsArray", span="82-82", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_30 [label="this.DefineOptionThatViolatesFormat(option)", span="86-86", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_32 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="92-92", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_36 [label="this.DefineOptionThatViolatesFormat(option)", span="98-98", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_6 [label="return ParserState.Failure;", span="42-42", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_11 [label="return ParserState.Failure;", span="51-51", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_15 [label="!valueSetting", span="58-58", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_17 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="61-61", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_22 [label="!valueSetting", span="71-71", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_24 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="74-74", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_26 [label="return ParserState.Failure;", span="79-79", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_29 [label="!valueSetting", span="85-85", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_31 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="88-88", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_35 [label="!valueSetting", span="97-97", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_37 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="100-100", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_39 [label="return ParserState.Failure;", span="107-107", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_41 [label="return ParserState.Failure;", span="110-110", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs"];
m21_43 [label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="33-33", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="OptionGroupParser.cs"];
m21_48 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="OptionGroupParser.cs"];
m21_45 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="OptionGroupParser.cs"];
m21_59 [label="CommandLine.OptionGroupParser", span="", file="OptionGroupParser.cs"];
m22_37 [label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="134-134", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs"];
m22_56 [label="_property.PropertyType.IsEnum", span="138-138", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_58 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="142-142", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_60 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="149-149", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_57 [label=_setValueLock, span="140-140", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_59 [label=_setValueLock, span="147-147", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_61 [label=InvalidCastException, span="153-153", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_63 [label=FormatException, span="157-157", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_65 [label=ArgumentException, span="161-161", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_67 [label="return true;", span="166-166", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_62 [label="return false;", span="155-155", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_64 [label="return false;", span="159-159", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_66 [label="return false;", span="163-163", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_68 [label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="134-134", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs"];
m22_96 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="OptionInfo.cs"];
m22_14 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs"];
m22_15 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="80-80", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_17 [label="var map = new OptionMap(list.Count, settings)", span="83-83", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_21 [label="map.RawOptions = target", span="91-91", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_16 [label="list != null", span="81-81", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_18 [label=list, span="85-85", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_23 [label="return null;", span="96-96", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_20 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="88-88", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_22 [label="return map;", span="93-93", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_19 [label="pair != null && pair.Right != null", span="87-87", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs"];
m22_24 [label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs"];
m22_36 [label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="169-169", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs"];
m22_70 [label="var nc = new NullableConverter(_property.PropertyType)", span="171-171", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_72 [label="_property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="177-177", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_71 [label=_setValueLock, span="175-175", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_73 [label=Exception, span="182-182", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=1, file="OptionInfo.cs"];
m22_75 [label="return true;", span="187-187", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_74 [label="return false;", span="184-184", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_76 [label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="169-169", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs"];
m22_52 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs"];
m22_55 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs"];
m22_54 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs"];
m22_53 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs"];
m22_26 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs"];
m22_79 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs"];
m22_80 [label=_setValueLock, span="192-192", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs"];
m22_81 [label="_property.SetValue(options, value, null)", span="194-194", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs"];
m22_82 [label="return true;", span="196-196", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs"];
m22_83 [label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="190-190", cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs"];
m22_69 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="OptionInfo.cs"];
m22_51 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="OptionInfo.cs"];
m22_77 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="OptionInfo.cs"];
m22_34 [label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="200-200", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs"];
m22_84 [label=_setValueLock, span="202-202", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_85 [label="_property.SetValue(options, new List<string>(), null)", span="204-204", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_86 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="206-206", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_87 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="207-207", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_90 [label="fieldRef.Add(values[i])", span="211-211", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_88 [label="int i = 0", span="209-209", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_89 [label="i < values.Length", span="209-209", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_91 [label="i++", span="209-209", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_92 [label="return true;", span="214-214", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_93 [label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="200-200", cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs"];
m22_94 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs"];
m22_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs"];
m22_95 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs"];
m22_78 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="OptionInfo.cs"];
m22_27 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionInfo.cs"];
m22_28 [label="_attribute is OptionListAttribute", span="101-101", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_29 [label="return SetValueList(value, options);", span="102-102", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_31 [label="return SetNullableValue(value, options);", span="105-105", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_32 [label="return SetValueScalar(value, options);", span="107-107", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_30 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="104-104", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs"];
m22_33 [label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="99-99", cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionInfo.cs"];
m22_25 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionInfo.cs"];
m22_0 [label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="51-51", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs"];
m22_1 [label="attribute != null", span="53-53", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_2 [label="_required = attribute.Required", span="55-55", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_3 [label="_helpText = attribute.HelpText", span="56-56", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_4 [label="_shortName = attribute.ShortName", span="57-57", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_5 [label="_longName = attribute.LongName", span="58-58", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_6 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_7 [label="_attribute = attribute", span="60-60", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_9 [label="property != null", span="65-65", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_10 [label="_property = property", span="66-66", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_8 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="63-63", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_11 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="68-68", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs"];
m22_12 [label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="51-51", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs"];
m22_35 [label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="125-125", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs"];
m22_38 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs"];
m22_39 [label="Type elementType = _property.PropertyType.GetElementType()", span="112-112", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_40 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="113-113", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_44 [label="array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="121-121", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_45 [label="_property.SetValue(options, array, null)", span="122-122", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_41 [label="int i = 0", span="115-115", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_42 [label="i < array.Length", span="115-115", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_48 [label="i++", span="115-115", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_43 [label=_setValueLock, span="119-119", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_49 [label="return true;", span="131-131", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_46 [label=FormatException, span="125-125", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_47 [label="return false;", span="127-127", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs"];
m22_50 [label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs"];
m22_98 [label="CommandLine.OptionInfo", span="", file="OptionInfo.cs"];
m23_0 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="46-46", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="OptionListAttribute.cs"];
m23_1 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="46-46", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="OptionListAttribute.cs"];
m23_2 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="57-57", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="OptionListAttribute.cs"];
m23_3 [label="Separator = separator", span="60-60", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0, file="OptionListAttribute.cs"];
m23_4 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="57-57", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="OptionListAttribute.cs"];
m23_5 [label="CommandLine.OptionListAttribute", span="", file="OptionListAttribute.cs"];
m24_29 [label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="169-169", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m24_49 [label="options is CommandLineOptionsBase", span="171-171", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_51 [label="error.BadOption.ShortName = option.ShortName", span="176-176", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_52 [label="error.BadOption.LongName = option.LongName", span="177-177", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_53 [label="required != null", span="179-179", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_54 [label="error.ViolatesRequired = required.Value", span="179-179", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_55 [label="mutualExclusiveness != null", span="180-180", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_56 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="180-180", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_57 [label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="182-182", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_50 [label="ParsingError error = new ParsingError()", span="173-173", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs"];
m24_58 [label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="169-169", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m24_21 [label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="130-130", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m24_30 [label="!_settings.MutuallyExclusive", span="132-132", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_31 [label="return true;", span="133-133", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_32 [label="_map.Values", span="135-135", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_33 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="137-137", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_35 [label="_mutuallyExclusiveSetMap.Values", span="142-142", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=1, file="OptionMap.cs"];
m24_34 [label="BuildMutuallyExclusiveMap(option)", span="138-138", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_36 [label="info.Occurrence > 1", span="144-144", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_39 [label="return true;", span="152-152", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_37 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="147-147", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_38 [label="return false;", span="148-148", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs"];
m24_40 [label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="130-130", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m24_41 [label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="155-155", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="OptionMap.cs"];
m24_42 [label="var setName = option.MutuallyExclusiveSet", span="157-157", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs"];
m24_44 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="162-162", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs"];
m24_43 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="159-159", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs"];
m24_45 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="166-166", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs"];
m24_46 [label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="155-155", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="OptionMap.cs"];
m24_48 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionMap.cs"];
m24_18 [label="Entry CommandLine.OptionMap.EnforceRules()", span="112-112", cluster="CommandLine.OptionMap.EnforceRules()", file="OptionMap.cs"];
m24_19 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="114-114", cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0, file="OptionMap.cs"];
m24_20 [label="Exit CommandLine.OptionMap.EnforceRules()", span="112-112", cluster="CommandLine.OptionMap.EnforceRules()", file="OptionMap.cs"];
m24_22 [label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="117-117", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m24_23 [label="_map.Values", span="119-119", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs"];
m24_24 [label="option.Required && !option.IsDefined", span="121-121", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs"];
m24_27 [label="return true;", span="127-127", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs"];
m24_25 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="123-123", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs"];
m24_26 [label="return false;", span="124-124", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs"];
m24_28 [label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="117-117", cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m24_59 [label="Entry CommandLine.ParsingError.ParsingError()", span="41-41", cluster="CommandLine.ParsingError.ParsingError()", file="OptionMap.cs"];
m24_3 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs"];
m24_4 [label="++count", span="50-50", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0, file="OptionMap.cs"];
m24_5 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs"];
m24_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionMap.cs"];
m24_0 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="41-41", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="OptionMap.cs"];
m24_1 [label="BadOption = option", span="44-44", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs"];
m24_2 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="41-41", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="OptionMap.cs"];
m24_6 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m24_7 [label="_settings = settings", span="63-63", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_12 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="71-71", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_13 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="72-72", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_15 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="77-77", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_8 [label="IEqualityComparer<string> comparer", span="65-65", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_9 [label="_settings.CaseSensitive", span="66-66", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_10 [label="comparer = StringComparer.Ordinal", span="67-67", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_11 [label="comparer = StringComparer.OrdinalIgnoreCase", span="69-69", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_14 [label="_settings.MutuallyExclusive", span="74-74", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs"];
m24_16 [label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m24_17 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionMap.cs"];
m24_61 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span="", file="OptionMap.cs"];
m24_62 [label="CommandLine.OptionMap", span="", file="OptionMap.cs"];
m25_0 [label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="36-36", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="PairT.cs"];
m25_1 [label="_left = left", span="38-38", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="PairT.cs"];
m25_2 [label="_right = right", span="39-39", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="PairT.cs"];
m25_3 [label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="36-36", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="PairT.cs"];
}
