digraph  {
n66 [label="CommandLine.ArgumentParser", span=""];
n0 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="37-37"];
n1 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0, label="0: this.PostParsingState = new List<ParsingError>()", span="39-39"];
n2 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="37-37"];
n3 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n4 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="42-42"];
n5 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="42-42"];
n6 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="46-46"];
n7 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0, label="0: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="50-50"];
n8 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="46-46"];
n9 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="46-46"];
n10 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n11 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="53-53"];
n12 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument.Equals(''-'', StringComparison.InvariantCulture)", span="55-55"];
n14 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument[0] == '-' && argument[1] == '-'", span="58-58"];
n16 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument[0] == '-'", span="61-61"];
n13 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: return null;", span="56-56"];
n20 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n15 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: return new LongOptionParser();", span="59-59"];
n17 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: return new OptionGroupParser();", span="62-62"];
n18 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: return null;", span="64-64"];
n19 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="53-53"];
n22 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="31-31"];
n21 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="33-33"];
n23 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67"];
n24 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="0: argument.Length > 0", span="69-69"];
n25 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="0: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="70-70"];
n26 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="0: return true;", span="72-72"];
n27 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="67-67"];
n28 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82"];
n29 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: IList<string> list = new List<string>()", span="84-84"];
n30 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: ae.MoveNext()", span="86-86"];
n31 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: IsInputValue(ae.Current)", span="88-88"];
n32 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: list.Add(ae.Current)", span="89-89"];
n33 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: !ae.MovePrevious()", span="93-93"];
n35 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: return list;", span="96-96"];
n37 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42"];
n38 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n34 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: throw new CommandLineParserException();", span="94-94"];
n39 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="44-44"];
n36 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82"];
n40 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="41-41"];
n41 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99"];
n42 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0, label="0: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="101-101"];
n43 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99"];
n44 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n45 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104"];
n46 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0, label="0: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="106-106"];
n47 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104"];
n48 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109"];
n49 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0, label="0: return BooleanToParserState(value, false);", span="111-111"];
n50 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109"];
n51 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114"];
n52 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: value && !addMoveNextIfTrue", span="116-116"];
n54 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: value && addMoveNextIfTrue", span="118-118"];
n53 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: return ParserState.Success;", span="117-117"];
n55 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: return ParserState.Success | ParserState.MoveOnNextElement;", span="119-119"];
n56 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: return ParserState.Failure;", span="121-121"];
n57 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114"];
n58 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124"];
n59 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="0: !option.IsAttributeArrayCompatible", span="126-126"];
n60 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="0: throw new CommandLineParserException();", span="127-127"];
n61 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124"];
n62 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130"];
n63 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="0: !option.IsArray && option.IsAttributeArrayCompatible", span="132-132"];
n64 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="0: throw new CommandLineParserException();", span="133-133"];
n65 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130"];
m0_11 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Assumes.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49"];
m0_12 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="Assumes.cs", label="0: array.Length == 0", span="51-51"];
m0_13 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, file="Assumes.cs", label="0: throw new ArgumentOutOfRangeException(paramName);", span="52-52"];
m0_14 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Assumes.cs", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49"];
m0_0 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Assumes.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36"];
m0_1 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="Assumes.cs", label="0: value == null", span="39-39"];
m0_2 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, file="Assumes.cs", label="0: throw new ArgumentNullException(paramName);", span="40-40"];
m0_3 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Assumes.cs", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="36-36"];
m0_9 [cluster="string.IsNullOrEmpty(string)", file="Assumes.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_4 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Assumes.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_5 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Assumes.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43"];
m0_6 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="Assumes.cs", label="0: string.IsNullOrEmpty(value)", span="45-45"];
m0_7 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, file="Assumes.cs", label="0: throw new ArgumentException(paramName);", span="46-46"];
m0_8 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Assumes.cs", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43"];
m0_15 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Assumes.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_10 [cluster="System.ArgumentException.ArgumentException(string)", file="Assumes.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_2 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="BadOptionInfo.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="45-45"];
m1_3 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="BadOptionInfo.cs", label="0: ShortName = shortName", span="47-47"];
m1_4 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, file="BadOptionInfo.cs", label="0: LongName = longName", span="48-48"];
m1_5 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="BadOptionInfo.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="45-45"];
m1_0 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="BadOptionInfo.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="41-41"];
m1_1 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="BadOptionInfo.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="41-41"];
m1_6 [file="BadOptionInfo.cs", label="CommandLine.BadOptionInfo", span=""];
m3_0 [cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.BaseSentenceBuilder.CreateBuiltIn()", span="46-46"];
m3_1 [cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", color=red, community=0, file="BaseSentenceBuilder.cs", label="0: return new EnglishSentenceBuilder();", span="48-48"];
m3_2 [cluster="CommandLine.BaseSentenceBuilder.CreateBuiltIn()", file="BaseSentenceBuilder.cs", label="Exit CommandLine.BaseSentenceBuilder.CreateBuiltIn()", span="46-46"];
m3_3 [cluster="CommandLine.EnglishSentenceBuilder.EnglishSentenceBuilder()", file="BaseSentenceBuilder.cs", label="Entry CommandLine.EnglishSentenceBuilder.EnglishSentenceBuilder()", span="38-38"];
m4_451 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="0: this.BadOption = new BadOptionInfo(shortName, longName)", span="1222-1222"];
m4_452 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="0: this.ViolatesFormat = format", span="1224-1224"];
m4_453 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218"];
m4_13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
m4_16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, file="CommandLine.cs", label="0: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="145-145"];
m4_17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
m4_318 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
m4_335 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.PropertyType.IsEnum", span="877-877"];
m4_336 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="879-879"];
m4_338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="886-886"];
m4_337 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="881-881"];
m4_340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: InvalidCastException", span="892-892"];
m4_342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: FormatException", span="896-896"];
m4_344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentException", span="900-900"];
m4_346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="905-905"];
m4_339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="888-888"];
m4_341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="894-894"];
m4_343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="898-898"];
m4_345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="902-902"];
m4_347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
m4_501 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
m4_502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
m4_151 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
m4_152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs", label="0: ShortName = shortName", span="472-472"];
m4_153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, file="CommandLine.cs", label="0: LongName = longName", span="473-473"];
m4_154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
m4_442 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
m4_443 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="0: var other = obj as Pair<TLeft, TRight>", span="1199-1199"];
m4_444 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="0: other == null", span="1201-1201"];
m4_446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="0: return Equals(_left, other._left) && Equals(_right, other._right);", span="1204-1204"];
m4_445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1202-1202"];
m4_447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
m4_543 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
m4_544 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: Assumes.NotNull(args, ''args'')", span="1640-1640"];
m4_545 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: Assumes.NotNull(options, ''options'')", span="1641-1641"];
m4_546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1643-1643"];
m4_547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: pair != null && helpWriter != null", span="1645-1645"];
m4_548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1647-1647"];
m4_550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1650-1650"];
m4_554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: return DoParseArguments(args, options);", span="1657-1657"];
m4_549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: string helpText", span="1649-1649"];
m4_553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1654-1654"];
m4_551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: helpWriter.Write(helpText)", span="1651-1651"];
m4_552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1652-1652"];
m4_555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
m4_50 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
m4_507 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
m4_105 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="690-690"];
m4_208 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
m4_209 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="0: Assumes.NotNullOrEmpty(value, ''value'')", span="609-609"];
m4_210 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="0: _data = value", span="611-611"];
m4_211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, file="CommandLine.cs", label="0: _index = -1", span="612-612"];
m4_212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
m4_83 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
m4_84 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, file="CommandLine.cs", label="0: this.PostParsingState = new List<ParsingError>()", span="363-363"];
m4_85 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
m4_634 [cluster="System.Type.GetMethods()", file="CommandLine.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m4_49 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m4_207 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
m4_358 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="931-931"];
m4_359 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, value, null)", span="933-933"];
m4_360 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="935-935"];
m4_361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
m4_214 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
m4_215 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="0: _index = -1", span="653-653"];
m4_216 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
m4_31 [cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_476 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
m4_477 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: _index <= 0", span="1358-1358"];
m4_478 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="1360-1360"];
m4_479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: _index <= _endIndex", span="1362-1362"];
m4_480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: _index--", span="1364-1364"];
m4_482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1367-1367"];
m4_481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: return _index <= _endIndex;", span="1365-1365"];
m4_483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
m4_524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
m4_525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: CaseSensitive = caseSensitive", span="1543-1543"];
m4_526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: MutuallyExclusive = mutuallyExclusive", span="1544-1544"];
m4_527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
m4_413 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
m4_414 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: var setName = option.MutuallyExclusiveSet", span="1138-1138"];
m4_415 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1140-1140"];
m4_416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1143-1143"];
m4_417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1147-1147"];
m4_418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
m4_6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
m4_7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="0: text = null", span="134-134"];
m4_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="0: var method = pair.Left", span="136-136"];
m4_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="0: !CheckMethodSignature(method)", span="137-137"];
m4_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="0: text = (string)method.Invoke(target, null)", span="140-140"];
m4_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, file="CommandLine.cs", label="0: throw new MemberAccessException();", span="138-138"];
m4_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
m4_436 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
m4_437 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="0: int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1191-1191"];
m4_438 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="0: int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1192-1192"];
m4_439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, file="CommandLine.cs", label="0: return leftHash ^ rightHash;", span="1194-1194"];
m4_440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
m4_528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
m4_529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: CaseSensitive = caseSensitive", span="1557-1557"];
m4_530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: MutuallyExclusive = mutuallyExclusive", span="1558-1558"];
m4_531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: HelpWriter = helpWriter", span="1559-1559"];
m4_532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
m4_236 [cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m4_134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
m4_135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: value && !addMoveNextIfTrue", span="440-440"];
m4_136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Success;", span="441-441"];
m4_137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: value && addMoveNextIfTrue", span="442-442"];
m4_138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Success | ParserState.MoveOnNextElement;", span="443-443"];
m4_139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="445-445"];
m4_140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
m4_376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
m4_377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, file="CommandLine.cs", label="0: ++count", span="1031-1031"];
m4_378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
m4_48 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_316 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
m4_656 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1848-1848"];
m4_657 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
m4_21 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
m4_22 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: !string.IsNullOrEmpty(shortName)", span="183-183"];
m4_23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: _uniqueName = shortName", span="184-184"];
m4_24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: !string.IsNullOrEmpty(longName)", span="185-185"];
m4_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: _uniqueName == null", span="188-188"];
m4_25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: _uniqueName = longName", span="186-186"];
m4_28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: base.ShortName = shortName", span="191-191"];
m4_29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: base.LongName = longName", span="192-192"];
m4_27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="189-189"];
m4_30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
m4_420 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_540 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
m4_541 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: return ParseArguments(args, options, _settings.HelpWriter);", span="1622-1622"];
m4_542 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
m4_202 [cluster="string.Substring(int)", file="CommandLine.cs", label="Entry string.Substring(int)", span="0-0"];
m4_389 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m4_635 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
m4_636 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var info = target.GetType().GetMethods()", span="1807-1807"];
m4_637 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: info", span="1809-1809"];
m4_638 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: !method.IsStatic", span="1811-1811"];
m4_640 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: attribute != null", span="1815-1815"];
m4_642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="1820-1820"];
m4_639 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=1, file="CommandLine.cs", label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1813-1814"];
m4_641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return (TAttribute)attribute;", span="1816-1816"];
m4_643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
m4_63 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
m4_64 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="319-319"];
m4_65 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: list == null || list.Count == 0", span="320-320"];
m4_67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: list.Count > 1", span="323-323"];
m4_69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: var pairZero = list[0]", span="326-326"];
m4_66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="321-321"];
m4_68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="324-324"];
m4_70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, file="CommandLine.cs", label="0: return pairZero.Right;", span="328-328"];
m4_71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
m4_660 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
m4_661 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, file="CommandLine.cs", label="0: return new String(' ', count);", span="1878-1878"];
m4_662 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
m4_15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m4_512 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
m4_513 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
m4_486 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
m4_487 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="0: _target = target", span="1383-1383"];
m4_488 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="0: _vla = ValueListAttribute.GetAttribute(_target)", span="1384-1384"];
m4_489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="0: IsValueListDefined", span="1385-1385"];
m4_490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, file="CommandLine.cs", label="0: _valueList = ValueListAttribute.GetReference(_target)", span="1386-1386"];
m4_491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
m4_297 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
m4_298 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="819-819"];
m4_299 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: list != null", span="820-820"];
m4_300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: var map = new OptionMap(list.Count, settings)", span="822-822"];
m4_301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: list", span="824-824"];
m4_303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="827-827"];
m4_304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: map.RawOptions = target", span="830-830"];
m4_305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: return map;", span="832-832"];
m4_306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="835-835"];
m4_302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: pair != null && pair.Right != null", span="826-826"];
m4_307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
m4_149 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
m4_150 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
m4_373 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
m4_374 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: BadOption = option", span="1025-1025"];
m4_375 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
m4_605 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
m4_606 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="0: array.Length == 0", span="1752-1752"];
m4_607 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentOutOfRangeException(paramName);", span="1753-1753"];
m4_608 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
m4_332 [cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m4_334 [cluster="System.Array.SetValue(object, int)", file="CommandLine.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m4_419 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_333 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m4_503 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
m4_504 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, file="CommandLine.cs", label="0: LastPostParsingState = new PostParsingState()", span="1447-1447"];
m4_505 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
m4_128 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
m4_129 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="0: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="430-430"];
m4_130 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
m4_14 [cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m4_120 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
m4_157 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
m4_123 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
m4_506 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
m4_644 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
m4_645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: IList<TAttribute> list = new List<TAttribute>()", span="1826-1826"];
m4_646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var info = target.GetType().GetProperties()", span="1827-1827"];
m4_653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: list.Add((TAttribute)attribute)", span="1838-1838"];
m4_654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return list;", span="1843-1843"];
m4_647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: info", span="1829-1829"];
m4_651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1836-1836"];
m4_652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: attribute != null", span="1837-1837"];
m4_648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: property != null && (property.CanRead && property.CanWrite)", span="1831-1831"];
m4_650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: setMethod != null && !setMethod.IsStatic", span="1834-1834"];
m4_649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var setMethod = property.GetSetMethod()", span="1833-1833"];
m4_655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
m4_233 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
m4_234 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, file="CommandLine.cs", label="0: throw new NotSupportedException();", span="682-682"];
m4_235 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
m4_59 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
m4_73 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: concreteType = null", span="333-333"];
m4_74 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="335-335"];
m4_75 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: list == null || list.Count == 0", span="336-336"];
m4_77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: list.Count > 1", span="339-339"];
m4_79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: var pairZero = list[0]", span="342-342"];
m4_76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="337-337"];
m4_78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="340-340"];
m4_80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: concreteType = pairZero.Right.ConcreteType", span="343-343"];
m4_81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, file="CommandLine.cs", label="0: return pairZero.Left;", span="345-345"];
m4_82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
m4_60 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m4_203 [cluster="string.Split(char[], int)", file="CommandLine.cs", label="Entry string.Split(char[], int)", span="0-0"];
m4_213 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
m4_601 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="0: string.IsNullOrEmpty(value)", span="1746-1746"];
m4_602 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentException(paramName);", span="1747-1747"];
m4_603 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
m4_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
m4_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: base.ShortName = shortName", span="116-116"];
m4_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="CommandLine.cs", label="0: base.LongName = longName", span="117-117"];
m4_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
m4_390 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
m4_391 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, file="CommandLine.cs", label="0: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1095-1095"];
m4_392 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
m4_86 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_226 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
m4_227 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: _index == -1", span="671-671"];
m4_228 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="672-672"];
m4_229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: _index > _data.Length", span="674-674"];
m4_230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: throw new InvalidOperationException();", span="675-675"];
m4_231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: return _data.Substring(_index + 1);", span="677-677"];
m4_232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
m4_625 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m4_106 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
m4_107 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="0: argument.Length > 0", span="393-393"];
m4_108 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="0: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="394-394"];
m4_109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="396-396"];
m4_110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
m4_51 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
m4_52 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: Type concreteType", span="306-306"];
m4_53 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: var property = GetProperty(target, out concreteType)", span="307-307"];
m4_54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: property == null || concreteType == null", span="309-309"];
m4_56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="312-312"];
m4_57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: return (IList<string>)property.GetValue(target, null);", span="314-314"];
m4_55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="310-310"];
m4_58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
m4_394 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
m4_395 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="0: _map.Values", span="1100-1100"];
m4_396 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="0: option.Required && !option.IsDefined", span="1102-1102"];
m4_399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1108-1108"];
m4_397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1104-1104"];
m4_398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1105-1105"];
m4_400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
m4_558 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
m4_560 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: bool hadError = false", span="1662-1662"];
m4_561 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: var optionMap = OptionInfo.CreateMap(options, _settings)", span="1663-1663"];
m4_578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: hadError |= !optionMap.EnforceRules()", span="1698-1698"];
m4_562 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: var target = new TargetWrapper(options)", span="1664-1664"];
m4_569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: ParserState result = parser.Parse(arguments, optionMap, options)", span="1675-1675"];
m4_563 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1666-1666"];
m4_575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: target.IsValueListDefined", span="1686-1686"];
m4_576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: !target.AddValueItemIfAllowed(argument)", span="1688-1688"];
m4_564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: arguments.MoveNext()", span="1667-1667"];
m4_565 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: string argument = arguments.Current", span="1669-1669"];
m4_574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: arguments.MoveNext()", span="1684-1684"];
m4_567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser parser = ArgumentParser.Create(argument)", span="1672-1672"];
m4_568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: parser != null", span="1673-1673"];
m4_570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: (result & ParserState.Failure) == ParserState.Failure", span="1676-1676"];
m4_573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1683-1683"];
m4_571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1678-1678"];
m4_572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: hadError = true", span="1679-1679"];
m4_577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: hadError = true", span="1690-1690"];
m4_579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: return !hadError;", span="1700-1700"];
m4_566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLine.cs", label="0: argument != null && argument.Length > 0", span="1670-1670"];
m4_580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
m4_559 [cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m4_155 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
m4_156 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
m4_393 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
m4_402 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: !_settings.MutuallyExclusive", span="1113-1113"];
m4_403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1114-1114"];
m4_404 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: _map.Values", span="1116-1116"];
m4_405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: option.IsDefined && option.MutuallyExclusiveSet != null", span="1118-1118"];
m4_406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: BuildMutuallyExclusiveMap(option)", span="1119-1119"];
m4_407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=1, file="CommandLine.cs", label="0: _mutuallyExclusiveSetMap.Values", span="1123-1123"];
m4_408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: info.Occurrence > 1", span="1125-1125"];
m4_411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1133-1133"];
m4_409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1128-1128"];
m4_410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1129-1129"];
m4_412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
m4_372 [cluster="string.Split(params char[])", file="CommandLine.cs", label="Entry string.Split(params char[])", span="0-0"];
m4_87 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
m4_88 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
m4_317 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
m4_349 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: var nc = new NullableConverter(_property.PropertyType)", span="910-910"];
m4_350 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="914-914"];
m4_351 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="916-916"];
m4_352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=1, file="CommandLine.cs", label="0: Exception", span="921-921"];
m4_354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="926-926"];
m4_353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="923-923"];
m4_355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
m4_604 [cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
m4_42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: concreteType == null", span="283-283"];
m4_43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentNullException(''concreteType'');", span="284-284"];
m4_44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="286-286"];
m4_45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: throw new CommandLineParserException(''The types are incompatible.'');", span="287-287"];
m4_46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, file="CommandLine.cs", label="0: _concreteType = concreteType", span="289-289"];
m4_47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
m4_89 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
m4_90 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="374-374"];
m4_91 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
m4_122 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
m4_158 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
m4_473 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
m4_474 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, file="CommandLine.cs", label="0: throw new NotSupportedException();", span="1353-1353"];
m4_475 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
m4_663 [cluster="string.String(char, int)", file="CommandLine.cs", label="Entry string.String(char, int)", span="0-0"];
m4_217 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
m4_218 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _index < (_data.Length - 1)", span="658-658"];
m4_219 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _index++", span="660-660"];
m4_222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _index = _data.Length", span="664-664"];
m4_220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _currentElement = _data.Substring(_index, 1)", span="661-661"];
m4_223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="666-666"];
m4_221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="662-662"];
m4_224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
m4_597 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_160 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
m4_161 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="523-523"];
m4_162 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var option = map[parts[0]]", span="524-524"];
m4_169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="536-536"];
m4_171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: parts.Length == 2", span="539-539"];
m4_173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(parts[1], options)", span="543-543"];
m4_179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: items.Insert(0, parts[1])", span="554-554"];
m4_195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: parts.Length == 2", span="589-589"];
m4_163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var valueSetting = false", span="525-525"];
m4_164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: option == null", span="527-527"];
m4_166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: option.IsDefined = true", span="530-530"];
m4_167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="532-532"];
m4_168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsBoolean", span="534-534"];
m4_172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsArray", span="541-541"];
m4_175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="545-545"];
m4_177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="551-551"];
m4_180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(items, options)", span="556-556"];
m4_182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="558-558"];
m4_184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsArray", span="565-565"];
m4_185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="567-567"];
m4_187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="569-569"];
m4_189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="575-575"];
m4_191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(items, options)", span="579-579"];
m4_193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="581-581"];
m4_197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(true, options)", span="592-592"];
m4_199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="594-594"];
m4_170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="537-537"];
m4_174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="544-544"];
m4_176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="547-547"];
m4_178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="553-553"];
m4_181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="557-557"];
m4_183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="560-560"];
m4_186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="568-568"];
m4_188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="571-571"];
m4_190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="577-577"];
m4_192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="580-580"];
m4_194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="583-583"];
m4_198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="593-593"];
m4_200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="596-596"];
m4_196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="590-590"];
m4_165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="528-528"];
m4_201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
m4_205 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m4_581 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
m4_594 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs", label="0: options is CommandLineOptionsBase", span="1728-1728"];
m4_595 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, file="CommandLine.cs", label="0: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1729-1729"];
m4_596 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
m4_520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
m4_521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: CaseSensitive = caseSensitive", span="1531-1531"];
m4_522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: HelpWriter = helpWriter", span="1532-1532"];
m4_523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
m4_441 [cluster="object.GetHashCode()", file="CommandLine.cs", label="Entry object.GetHashCode()", span="0-0"];
m4_308 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
m4_379 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _settings = settings", span="1044-1044"];
m4_380 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: IEqualityComparer<string> comparer", span="1046-1046"];
m4_384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _names = new Dictionary<string, string>(capacity, comparer)", span="1052-1052"];
m4_382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: comparer = StringComparer.Ordinal", span="1048-1048"];
m4_383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: comparer = StringComparer.OrdinalIgnoreCase", span="1050-1050"];
m4_385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1053-1053"];
m4_386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _settings.MutuallyExclusive", span="1055-1055"];
m4_387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1058-1058"];
m4_381 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _settings.CaseSensitive", span="1047-1047"];
m4_388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
m4_623 [cluster="System.Type.GetProperties()", file="CommandLine.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m4_533 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
m4_534 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, file="CommandLine.cs", label="0: _settings = new CommandLineParserSettings()", span="1594-1594"];
m4_535 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
m4_141 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
m4_142 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsAttributeArrayCompatible", span="450-450"];
m4_143 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: throw new CommandLineParserException();", span="451-451"];
m4_144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
m4_38 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
m4_39 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, file="CommandLine.cs", label="0: MaximumElements = -1", span="272-272"];
m4_40 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
m4_348 [cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m4_35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
m4_36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, file="CommandLine.cs", label="0: Separator = separator", span="249-249"];
m4_37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
m4_448 [cluster="object.Equals(object, object)", file="CommandLine.cs", label="Entry object.Equals(object, object)", span="0-0"];
m4_315 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
m4_366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: int i = 0", span="948-948"];
m4_362 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="941-941"];
m4_363 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, new List<string>(), null)", span="943-943"];
m4_364 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="945-945"];
m4_365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="946-946"];
m4_368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: fieldRef.Add(values[i])", span="950-950"];
m4_367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: i < values.Length", span="948-948"];
m4_369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: i++", span="948-948"];
m4_370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="953-953"];
m4_371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
m4_356 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m4_457 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
m4_458 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="0: Assumes.NotNull(value, ''value'')", span="1288-1288"];
m4_459 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="0: _data = value", span="1290-1290"];
m4_460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="0: _index = -1", span="1291-1291"];
m4_461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, file="CommandLine.cs", label="0: _endIndex = value.Length", span="1292-1292"];
m4_462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
m4_357 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m4_145 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
m4_146 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsArray && option.IsAttributeArrayCompatible", span="456-456"];
m4_147 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, file="CommandLine.cs", label="0: throw new CommandLineParserException();", span="457-457"];
m4_148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
m4_556 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
m4_626 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var info = target.GetType().GetMethods()", span="1788-1788"];
m4_627 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: info", span="1790-1790"];
m4_628 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: !method.IsStatic", span="1792-1792"];
m4_630 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: attribute != null", span="1796-1796"];
m4_632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="1801-1801"];
m4_629 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=1, file="CommandLine.cs", label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1794-1795"];
m4_631 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1797-1797"];
m4_633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
m4_131 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
m4_132 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, file="CommandLine.cs", label="0: return BooleanToParserState(value, false);", span="435-435"];
m4_133 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
m4_431 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="1213-1213"];
m4_449 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, file="CommandLine.cs", label="0: this.BadOption = new BadOptionInfo()", span="1215-1215"];
m4_450 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="1213-1213"];
m4_72 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
m4_610 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1762-1762"];
m4_611 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: target != null", span="1763-1763"];
m4_619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1776-1776"];
m4_620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: return list;", span="1782-1782"];
m4_612 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var propertiesInfo = target.GetType().GetProperties()", span="1765-1765"];
m4_613 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: propertiesInfo", span="1767-1767"];
m4_617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1774-1774"];
m4_618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: attribute != null", span="1775-1775"];
m4_614 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: property != null && (property.CanRead && property.CanWrite)", span="1769-1769"];
m4_616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: setMethod != null && !setMethod.IsStatic", span="1772-1772"];
m4_615 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="CommandLine.cs", label="0: var setMethod = property.GetSetMethod()", span="1771-1771"];
m4_621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
m4_492 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
m4_493 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="0: _vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1393-1393"];
m4_494 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1394-1394"];
m4_495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="0: this", span="1396-1396"];
m4_496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="0: _valueList.Add(item)", span="1398-1398"];
m4_497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1401-1401"];
m4_498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
m4_94 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Create(string)", span="377-377"];
m4_95 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: argument.Equals(''-'', StringComparison.InvariantCulture)", span="379-379"];
m4_96 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="380-380"];
m4_97 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: argument[0] == '-' && argument[1] == '-'", span="382-382"];
m4_98 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: return new LongOptionParser();", span="383-383"];
m4_99 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: argument[0] == '-'", span="385-385"];
m4_100 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: return new OptionGroupParser();", span="386-386"];
m4_101 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, file="CommandLine.cs", label="0: return null;", span="388-388"];
m4_102 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Create(string)", span="377-377"];
m4_206 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
m4_319 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: Type elementType = _property.PropertyType.GetElementType()", span="851-851"];
m4_320 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: Array array = Array.CreateInstance(elementType, values.Count)", span="852-852"];
m4_324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="860-860"];
m4_321 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: int i = 0", span="854-854"];
m4_322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: i < array.Length", span="854-854"];
m4_325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: _property.SetValue(options, array, null)", span="861-861"];
m4_323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: _setValueLock", span="858-858"];
m4_326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: FormatException", span="864-864"];
m4_328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: i++", span="854-854"];
m4_329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="870-870"];
m4_327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="866-866"];
m4_330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
m4_62 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m4_464 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
m4_465 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, file="CommandLine.cs", label="0: _index = -1", span="1338-1338"];
m4_466 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
m4_124 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
m4_125 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, file="CommandLine.cs", label="0: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="425-425"];
m4_126 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
m4_609 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m4_32 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m4_18 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m4_225 [cluster="string.Substring(int, int)", file="CommandLine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_557 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
m4_584 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: i < args.Length", span="1707-1707"];
m4_582 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: bool caseSensitive = _settings.CaseSensitive", span="1705-1705"];
m4_583 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: int i = 0", span="1707-1707"];
m4_586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1711-1711"];
m4_589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1717-1717"];
m4_591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: i++", span="1707-1707"];
m4_585 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: !string.IsNullOrEmpty(helpOption.ShortName)", span="1709-1709"];
m4_592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1722-1722"];
m4_588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: !string.IsNullOrEmpty(helpOption.LongName)", span="1715-1715"];
m4_587 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1712-1712"];
m4_590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLine.cs", label="0: return true;", span="1718-1718"];
m4_593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
m4_514 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
m4_515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, file="CommandLine.cs", label="0: CaseSensitive = caseSensitive", span="1507-1507"];
m4_516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
m4_622 [cluster="object.GetType()", file="CommandLine.cs", label="Entry object.GetType()", span="0-0"];
m4_61 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m4_103 [cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_467 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
m4_468 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _index < _endIndex", span="1343-1343"];
m4_469 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: _index++", span="1345-1345"];
m4_471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: return false;", span="1348-1348"];
m4_470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, file="CommandLine.cs", label="0: return _index < _endIndex;", span="1346-1346"];
m4_472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
m4_499 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
m4_500 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
m4_658 [cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m4_104 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
m4_159 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
m4_121 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m4_463 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
m4_598 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="0: value == null", span="1740-1740"];
m4_599 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentNullException(paramName);", span="1741-1741"];
m4_600 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
m4_536 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
m4_537 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: Assumes.NotNull(settings, ''settings'')", span="1605-1605"];
m4_538 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, file="CommandLine.cs", label="0: _settings = settings", span="1607-1607"];
m4_539 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
m4_111 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
m4_112 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: IList<string> list = new List<string>()", span="408-408"];
m4_113 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: ae.MoveNext()", span="410-410"];
m4_115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: list.Add(ae.Current)", span="413-413"];
m4_118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: return list;", span="420-420"];
m4_114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: IsInputValue(ae.Current)", span="412-412"];
m4_116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: !ae.MovePrevious()", span="417-417"];
m4_117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, file="CommandLine.cs", label="0: throw new CommandLineParserException();", span="418-418"];
m4_119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
m4_624 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m4_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_331 [cluster="System.Type.GetElementType()", file="CommandLine.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m4_517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
m4_518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, file="CommandLine.cs", label="0: HelpWriter = helpWriter", span="1519-1519"];
m4_519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
m4_659 [cluster="System.Type.Equals(System.Type)", file="CommandLine.cs", label="Entry System.Type.Equals(System.Type)", span="0-0"];
m4_239 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
m4_240 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var valueSetting = false", span="694-694"];
m4_241 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="696-696"];
m4_242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: group.MoveNext()", span="697-697"];
m4_243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var option = map[group.Current]", span="699-699"];
m4_249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: argumentEnumerator.IsLast && group.IsLast", span="709-709"];
m4_251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !group.IsLast", span="712-712"];
m4_253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="716-716"];
m4_259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: items.Insert(0, group.GetRemainingFromNext())", span="727-727"];
m4_277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !group.IsLast && map[group.Next] == null", span="765-765"];
m4_244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: option == null", span="700-700"];
m4_246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: option.IsDefined = true", span="703-703"];
m4_247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="705-705"];
m4_248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsBoolean", span="707-707"];
m4_252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsArray", span="714-714"];
m4_255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="718-718"];
m4_257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="724-724"];
m4_260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(items, options)", span="729-729"];
m4_262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="731-731"];
m4_266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.IsArray", span="741-741"];
m4_267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="743-743"];
m4_269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="745-745"];
m4_271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="751-751"];
m4_273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: valueSetting = option.SetValue(items, options)", span="755-755"];
m4_275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="757-757"];
m4_279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !option.SetValue(true, options)", span="768-768"];
m4_250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="710-710"];
m4_254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="717-717"];
m4_256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="720-720"];
m4_258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="726-726"];
m4_261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="730-730"];
m4_263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="733-733"];
m4_264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="737-737"];
m4_265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="738-738"];
m4_268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="744-744"];
m4_270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="747-747"];
m4_272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="753-753"];
m4_274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: !valueSetting", span="756-756"];
m4_276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="759-759"];
m4_278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="766-766"];
m4_280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="769-769"];
m4_281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Success;", span="773-773"];
m4_245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, file="CommandLine.cs", label="0: return ParserState.Failure;", span="701-701"];
m4_282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
m4_296 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m4_432 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
m4_433 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="0: _left = left", span="1175-1175"];
m4_434 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, file="CommandLine.cs", label="0: _right = right", span="1176-1176"];
m4_435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
m4_401 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
m4_421 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: options is CommandLineOptionsBase", span="1152-1152"];
m4_422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: ParsingError error = new ParsingError()", span="1154-1154"];
m4_423 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: error.BadOption.ShortName = option.ShortName", span="1157-1157"];
m4_424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: error.BadOption.LongName = option.LongName", span="1158-1158"];
m4_425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: required != null", span="1160-1160"];
m4_426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: error.ViolatesRequired = required.Value", span="1160-1160"];
m4_427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: mutualExclusiveness != null", span="1161-1161"];
m4_428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1161-1161"];
m4_429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, file="CommandLine.cs", label="0: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1163-1163"];
m4_430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
m4_204 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
m4_309 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: _attribute is OptionListAttribute", span="840-840"];
m4_310 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return SetValueList(value, options);", span="841-841"];
m4_311 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: ReflectionUtil.IsNullableType(_property.PropertyType)", span="843-843"];
m4_312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return SetNullableValue(value, options);", span="844-844"];
m4_313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, file="CommandLine.cs", label="0: return SetValueScalar(value, options);", span="846-846"];
m4_314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
m4_454 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
m4_455 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, file="CommandLine.cs", label="0: Errors = new List<ParsingError>()", span="1268-1268"];
m4_456 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
m4_127 [cluster="string.Compare(string, string, bool)", file="CommandLine.cs", label="Entry string.Compare(string, string, bool)", span="0-0"];
m4_283 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
m4_284 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: attribute != null", span="791-791"];
m4_285 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _required = attribute.Required", span="793-793"];
m4_291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="801-801"];
m4_286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _helpText = attribute.HelpText", span="794-794"];
m4_287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _shortName = attribute.ShortName", span="795-795"];
m4_288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _longName = attribute.LongName", span="796-796"];
m4_289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="797-797"];
m4_290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _attribute = attribute", span="798-798"];
m4_292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: property != null", span="803-803"];
m4_293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: _property = property", span="804-804"];
m4_294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, file="CommandLine.cs", label="0: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="806-806"];
m4_295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
m4_664 [file="CommandLine.cs", label="CommandLine.HelpOptionAttribute", span=""];
m4_665 [file="CommandLine.cs", label="CommandLine.OptionAttribute", span=""];
m4_666 [file="CommandLine.cs", label="CommandLine.OptionListAttribute", span=""];
m4_667 [file="CommandLine.cs", label="CommandLine.ValueListAttribute", span=""];
m4_668 [file="CommandLine.cs", label="CommandLine.ArgumentParser", span=""];
m4_669 [file="CommandLine.cs", label="CommandLine.BadOptionInfo", span=""];
m4_670 [file="CommandLine.cs", label="CommandLine.LongOptionParser", span=""];
m4_671 [file="CommandLine.cs", label="CommandLine.OneCharStringEnumerator", span=""];
m4_672 [file="CommandLine.cs", label="CommandLine.OptionGroupParser", span=""];
m4_673 [file="CommandLine.cs", label="CommandLine.OptionInfo", span=""];
m4_674 [file="CommandLine.cs", label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
m4_675 [file="CommandLine.cs", label="CommandLine.OptionMap", span=""];
m4_676 [file="CommandLine.cs", label="CommandLine.Pair<TLeft, TRight>", span=""];
m4_677 [file="CommandLine.cs", label="CommandLine.ParsingError", span=""];
m4_678 [file="CommandLine.cs", label="CommandLine.PostParsingState", span=""];
m4_679 [file="CommandLine.cs", label="CommandLine.StringArrayEnumerator", span=""];
m4_680 [file="CommandLine.cs", label="CommandLine.TargetWrapper", span=""];
m4_681 [file="CommandLine.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m4_682 [file="CommandLine.cs", label="CommandLine.CommandLineParserSettings", span=""];
m4_683 [file="CommandLine.cs", label="CommandLine.CommandLineParser", span=""];
m5_3 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLineOptionsBase.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="40-40"];
m5_0 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLineOptionsBase.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="39-39"];
m5_1 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0, file="CommandLineOptionsBase.cs", label="0: LastPostParsingState = new PostParsingState()", span="41-41"];
m5_2 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLineOptionsBase.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="39-39"];
m5_4 [file="CommandLineOptionsBase.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m6_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44"];
m6_52 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLineParser.cs", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="42-42"];
m6_51 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78"];
m6_73 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="99-99"];
m6_12 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="93-93"];
m6_13 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: Assumes.NotNull(args, ''args'')", span="95-95"];
m6_14 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: Assumes.NotNull(options, ''options'')", span="96-96"];
m6_15 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="98-98"];
m6_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: pair != null && helpWriter != null", span="100-100"];
m6_17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="102-102"];
m6_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="105-105"];
m6_20 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: helpWriter.Write(helpText)", span="106-106"];
m6_23 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: return DoParseArguments(args, options);", span="112-112"];
m6_18 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: string helpText", span="104-104"];
m6_22 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: return true;", span="109-109"];
m6_21 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, file="CommandLineParser.cs", label="0: return false;", span="107-107"];
m6_24 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="93-93"];
m6_55 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLineParser.cs", label="Entry CommandLine.ArgumentParser.Create(string)", span="53-53"];
m6_26 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="158-158"];
m6_60 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: bool caseSensitive = _settings.CaseSensitive", span="160-160"];
m6_62 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: i < args.Length", span="162-162"];
m6_63 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: !string.IsNullOrEmpty(helpOption.ShortName)", span="164-164"];
m6_64 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="166-166"];
m6_66 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: !string.IsNullOrEmpty(helpOption.LongName)", span="170-170"];
m6_67 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="172-172"];
m6_61 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: int i = 0", span="162-162"];
m6_69 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: i++", span="162-162"];
m6_70 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: return false;", span="177-177"];
m6_65 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: return true;", span="167-167"];
m6_68 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, file="CommandLineParser.cs", label="0: return true;", span="173-173"];
m6_71 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="158-158"];
m6_78 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_57 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="181-181"];
m6_75 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, file="CommandLineParser.cs", label="0: options is CommandLineOptionsBase", span="183-183"];
m6_76 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, file="CommandLineParser.cs", label="0: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="184-184"];
m6_77 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="181-181"];
m6_74 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="104-104"];
m6_54 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLineParser.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42"];
m6_8 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLineParser.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36"];
m6_4 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="58-58"];
m6_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineParser.cs", label="0: Assumes.NotNull(settings, ''settings'')", span="60-60"];
m6_6 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, file="CommandLineParser.cs", label="0: _settings = settings", span="62-62"];
m6_7 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="58-58"];
m6_0 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="47-47"];
m6_1 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0, file="CommandLineParser.cs", label="0: _settings = new CommandLineParserSettings()", span="49-49"];
m6_2 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="47-47"];
m6_72 [cluster="string.IsNullOrEmpty(string)", file="CommandLineParser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_59 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLineParser.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="112-112"];
m6_53 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLineParser.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
m6_28 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m6_25 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="64-64"];
m6_27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="115-115"];
m6_30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: bool hadError = false", span="117-117"];
m6_31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: var optionMap = OptionInfo.CreateMap(options, _settings)", span="118-118"];
m6_32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: var target = new TargetWrapper(options)", span="119-119"];
m6_33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="121-121"];
m6_39 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: ParserState result = parser.Parse(arguments, optionMap, options)", span="130-130"];
m6_41 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="133-133"];
m6_48 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: hadError |= !optionMap.EnforceRules()", span="153-153"];
m6_45 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: target.IsValueListDefined", span="141-141"];
m6_46 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: !target.AddValueItemIfAllowed(argument)", span="143-143"];
m6_34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: arguments.MoveNext()", span="122-122"];
m6_35 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: string argument = arguments.Current", span="124-124"];
m6_44 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: arguments.MoveNext()", span="139-139"];
m6_36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: argument != null && argument.Length > 0", span="125-125"];
m6_37 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: ArgumentParser parser = ArgumentParser.Create(argument)", span="127-127"];
m6_38 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: parser != null", span="128-128"];
m6_40 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: (result & ParserState.Failure) == ParserState.Failure", span="131-131"];
m6_43 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="138-138"];
m6_42 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: hadError = true", span="134-134"];
m6_47 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: hadError = true", span="145-145"];
m6_49 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: return !hadError;", span="155-155"];
m6_50 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="115-115"];
m6_58 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLineParser.cs", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="52-52"];
m6_29 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m6_9 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="75-75"];
m6_10 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0, file="CommandLineParser.cs", label="0: return ParseArguments(args, options, _settings.HelpWriter);", span="77-77"];
m6_11 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="75-75"];
m6_79 [file="CommandLineParser.cs", label="CommandLine.CommandLineParser", span=""];
m7_1 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="41-41"];
m7_4 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="51-51"];
m7_5 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="51-51"];
m7_6 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="56-56"];
m7_7 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="56-56"];
m7_2 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="46-46"];
m7_3 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="46-46"];
m8_2 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="54-54"];
m8_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: CaseSensitive = caseSensitive", span="56-56"];
m8_4 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="54-54"];
m8_16 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="104-104"];
m8_17 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: CaseSensitive = caseSensitive", span="106-106"];
m8_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: MutuallyExclusive = mutuallyExclusive", span="107-107"];
m8_19 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: HelpWriter = helpWriter", span="108-108"];
m8_20 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="104-104"];
m8_0 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44"];
m8_1 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="44-44"];
m8_12 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="90-90"];
m8_13 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: CaseSensitive = caseSensitive", span="92-92"];
m8_14 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: MutuallyExclusive = mutuallyExclusive", span="93-93"];
m8_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="90-90"];
m8_5 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="65-65"];
m8_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: HelpWriter = helpWriter", span="68-68"];
m8_7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="65-65"];
m8_8 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="78-78"];
m8_9 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: CaseSensitive = caseSensitive", span="80-80"];
m8_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, file="CommandLineParserSettings.cs", label="0: HelpWriter = helpWriter", span="81-81"];
m8_11 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLineParserSettings.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="78-78"];
m8_21 [file="CommandLineParserSettings.cs", label="CommandLine.CommandLineParserSettings", span=""];
m9_31 [cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m9_16 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CopyrightInfo.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49"];
m9_30 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m9_17 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m9_6 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="90-90"];
m9_7 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: Assumes.NotNullOrEmpty(author, ''author'')", span="92-92"];
m9_8 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: Assumes.NotZeroLength(years, ''years'')", span="93-93"];
m9_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: _isSymbolUpper = isSymbolUpper", span="96-96"];
m9_11 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: _author = author", span="97-97"];
m9_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: _years = years", span="98-98"];
m9_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=1, file="CopyrightInfo.cs", label="0: _builder = new StringBuilder\r\n                    (CopyrightWord.Length + author.Length + (4 * years.Length) + extraLength)", span="99-100"];
m9_9 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: int extraLength = 10", span="95-95"];
m9_14 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="90-90"];
m9_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="63-63"];
m9_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="63-63"];
m9_51 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m9_34 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m9_35 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", color=red, community=0, file="CopyrightInfo.cs", label="0: return info.ToString();", span="131-131"];
m9_36 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m9_18 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="107-107"];
m9_19 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(CopyrightWord)", span="109-109"];
m9_20 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(' ')", span="110-110"];
m9_21 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _isSymbolUpper", span="111-111"];
m9_22 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(_symbolUpper)", span="112-112"];
m9_23 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(_symbolLower)", span="114-114"];
m9_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(' ')", span="116-116"];
m9_25 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(FormatYears(_years))", span="117-117"];
m9_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(' ')", span="118-118"];
m9_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: _builder.Append(_author)", span="119-119"];
m9_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", color=red, community=0, file="CopyrightInfo.cs", label="0: return _builder.ToString();", span="121-121"];
m9_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="107-107"];
m9_32 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="148-148"];
m9_37 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: years.Length == 1", span="150-150"];
m9_38 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: return years[0].ToString(CultureInfo.InvariantCulture);", span="151-151"];
m9_39 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: var yearsPart = new StringBuilder(years.Length * 6)", span="153-153"];
m9_41 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: i < years.Length", span="154-154"];
m9_42 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="156-156"];
m9_44 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: next < years.Length", span="158-158"];
m9_45 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: years[next] - years[i] > 1", span="160-160"];
m9_40 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: int i = 0", span="154-154"];
m9_46 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: yearsPart.Append('' - '')", span="161-161"];
m9_47 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: yearsPart.Append('', '')", span="163-163"];
m9_49 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: return yearsPart.ToString();", span="167-167"];
m9_43 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: int next = i + 1", span="157-157"];
m9_48 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", color=red, community=0, file="CopyrightInfo.cs", label="0: i++", span="154-154"];
m9_50 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="148-148"];
m9_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="76-76"];
m9_5 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="76-76"];
m9_15 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CopyrightInfo.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43"];
m9_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="52-52"];
m9_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="52-52"];
m9_33 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m9_52 [file="CopyrightInfo.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m11_0 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="FormatOptionHelpTextEventArgs.cs", label="Entry CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45"];
m11_1 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", color=red, community=0, file="FormatOptionHelpTextEventArgs.cs", label="0: _option = option", span="47-47"];
m11_2 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="FormatOptionHelpTextEventArgs.cs", label="Exit CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45"];
m11_3 [file="FormatOptionHelpTextEventArgs.cs", label="CommandLine.Text.FormatOptionHelpTextEventArgs", span=""];
m12_25 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="108-108"];
m12_26 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: Assumes.NotNullOrEmpty(message, ''message'')", span="110-110"];
m12_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: Assumes.NotNull(writer, ''writer'')", span="111-111"];
m12_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: var builder = new StringBuilder(_programName.Length + message.Length + 2)", span="113-113"];
m12_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append(message)", span="116-116"];
m12_32 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: writer.WriteLine(builder.ToString())", span="117-117"];
m12_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append(_programName)", span="114-114"];
m12_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append('': '')", span="115-115"];
m12_33 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="108-108"];
m12_20 [cluster="System.Text.StringBuilder.Append(char)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m12_35 [cluster="System.IO.TextWriter.WriteLine(string)", file="HeadingInfo.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m12_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="63-63"];
m12_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs", label="0: Assumes.NotNullOrEmpty(programName, ''programName'')", span="65-65"];
m12_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs", label="0: _programName = programName", span="67-67"];
m12_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="HeadingInfo.cs", label="0: _version = version", span="68-68"];
m12_6 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="63-63"];
m12_18 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m12_22 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="95-95"];
m12_23 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", color=red, community=0, file="HeadingInfo.cs", label="0: return info.ToString();", span="97-97"];
m12_24 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="95-95"];
m12_34 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="HeadingInfo.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36"];
m12_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="51-51"];
m12_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="51-51"];
m12_8 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="75-75"];
m12_9 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: bool isVersionNull = string.IsNullOrEmpty(_version)", span="77-77"];
m12_10 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=1, file="HeadingInfo.cs", label="0: var builder = new StringBuilder(_programName.Length +\r\n                                (!isVersionNull ? _version.Length + 1: 0))", span="78-79"];
m12_12 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: !isVersionNull", span="81-81"];
m12_11 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append(_programName)", span="80-80"];
m12_13 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append(' ')", span="83-83"];
m12_14 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: builder.Append(_version)", span="84-84"];
m12_15 [cluster="CommandLine.Text.HeadingInfo.ToString()", color=red, community=0, file="HeadingInfo.cs", label="0: return builder.ToString();", span="87-87"];
m12_16 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="75-75"];
m12_17 [cluster="string.IsNullOrEmpty(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m12_39 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="137-137"];
m12_40 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", color=red, community=0, file="HeadingInfo.cs", label="0: WriteMessage(message, Console.Error)", span="139-139"];
m12_41 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="137-137"];
m12_21 [cluster="System.Text.StringBuilder.ToString()", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m12_19 [cluster="System.Text.StringBuilder.Append(string)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m12_7 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43"];
m12_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="126-126"];
m12_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", color=red, community=0, file="HeadingInfo.cs", label="0: WriteMessage(message, Console.Out)", span="128-128"];
m12_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="126-126"];
m12_42 [file="HeadingInfo.cs", label="CommandLine.Text.HeadingInfo", span=""];
m13_6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m13_7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: text = null", span="79-79"];
m13_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: var method = pair.Left", span="81-81"];
m13_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: text = (string)method.Invoke(target, null)", span="85-85"];
m13_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: !CheckMethodSignature(method)", span="82-82"];
m13_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: throw new MemberAccessException();", span="83-83"];
m13_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m13_13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m13_16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="90-90"];
m13_17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m13_15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpOptionAttribute.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m13_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m13_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m13_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m13_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: base.ShortName = shortName", span="61-61"];
m13_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: base.LongName = longName", span="62-62"];
m13_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="HelpOptionAttribute.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m13_14 [cluster="System.MemberAccessException.MemberAccessException()", file="HelpOptionAttribute.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m13_18 [cluster="System.Reflection.MethodBase.GetParameters()", file="HelpOptionAttribute.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m13_19 [file="HelpOptionAttribute.cs", label="CommandLine.HelpOptionAttribute", span=""];
m15_5 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="IArgumentEnumerator.cs", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="44-44"];
m15_2 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42"];
m15_3 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="IArgumentEnumerator.cs", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="42-42"];
m15_0 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37"];
m15_1 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="IArgumentEnumerator.cs", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37"];
m16_0 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ICommandLineParser.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m16_1 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ICommandLineParser.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m16_2 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="ICommandLineParser.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m16_3 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="ICommandLineParser.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m17_0 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="LongOptionParser.cs", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="33-33"];
m17_1 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="LongOptionParser.cs", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="33-33"];
m17_46 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130"];
m17_48 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="LongOptionParser.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99"];
m17_56 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="LongOptionParser.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190"];
m17_47 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67"];
m17_51 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124"];
m17_2 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="LongOptionParser.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38"];
m17_3 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="40-40"];
m17_4 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: var option = map[parts[0]]", span="41-41"];
m17_11 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="53-53"];
m17_15 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: valueSetting = option.SetValue(parts[1], options)", span="60-60"];
m17_20 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="70-70"];
m17_22 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: valueSetting = option.SetValue(items, options)", span="73-73"];
m17_27 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="84-84"];
m17_32 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="94-94"];
m17_33 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: valueSetting = option.SetValue(items, options)", span="96-96"];
m17_39 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: valueSetting = option.SetValue(true, options)", span="109-109"];
m17_13 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: parts.Length == 2", span="56-56"];
m17_21 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: items.Insert(0, parts[1])", span="71-71"];
m17_37 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: parts.Length == 2", span="106-106"];
m17_5 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: var valueSetting = false", span="42-42"];
m17_6 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: option == null", span="44-44"];
m17_8 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: option.IsDefined = true", span="47-47"];
m17_9 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="49-49"];
m17_10 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !option.IsBoolean", span="51-51"];
m17_14 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !option.IsArray", span="58-58"];
m17_17 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="62-62"];
m17_19 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="68-68"];
m17_24 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="75-75"];
m17_26 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !option.IsArray", span="82-82"];
m17_29 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="86-86"];
m17_31 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="92-92"];
m17_35 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="98-98"];
m17_41 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="111-111"];
m17_7 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ParserState.Failure;", span="45-45"];
m17_12 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ParserState.Failure;", span="54-54"];
m17_16 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !valueSetting", span="61-61"];
m17_18 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="64-64"];
m17_23 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !valueSetting", span="74-74"];
m17_25 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="77-77"];
m17_28 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !valueSetting", span="85-85"];
m17_30 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="88-88"];
m17_34 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !valueSetting", span="97-97"];
m17_36 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="100-100"];
m17_38 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ParserState.Failure;", span="107-107"];
m17_40 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: !valueSetting", span="110-110"];
m17_42 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="LongOptionParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="113-113"];
m17_43 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="LongOptionParser.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="38-38"];
m17_52 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82"];
m17_53 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="LongOptionParser.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m17_45 [cluster="string.Split(char[], int)", file="LongOptionParser.cs", label="Entry string.Split(char[], int)", span="0-0"];
m17_50 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109"];
m17_55 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="LongOptionParser.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114"];
m17_54 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="LongOptionParser.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110"];
m17_44 [cluster="string.Substring(int)", file="LongOptionParser.cs", label="Entry string.Substring(int)", span="0-0"];
m17_57 [file="LongOptionParser.cs", label="CommandLine.LongOptionParser", span=""];
m18_18 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="105-105"];
m18_19 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index == -1", span="107-107"];
m18_20 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: throw new InvalidOperationException();", span="108-108"];
m18_21 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index > _data.Length", span="110-110"];
m18_22 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: throw new InvalidOperationException();", span="111-111"];
m18_23 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: return _data.Substring(_index + 1);", span="113-113"];
m18_24 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="105-105"];
m18_17 [cluster="string.Substring(int, int)", file="OneCharStringEnumerator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m18_9 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="92-92"];
m18_10 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index < (_data.Length - 1)", span="94-94"];
m18_11 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index++", span="96-96"];
m18_14 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index = _data.Length", span="100-100"];
m18_12 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _currentElement = _data.Substring(_index, 1)", span="97-97"];
m18_13 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: return true;", span="98-98"];
m18_15 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: return false;", span="102-102"];
m18_16 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="92-92"];
m18_0 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41"];
m18_1 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: Assumes.NotNullOrEmpty(value, ''value'')", span="43-43"];
m18_2 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _data = value", span="45-45"];
m18_3 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index = -1", span="46-46"];
m18_4 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41"];
m18_27 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="116-116"];
m18_28 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: throw new NotSupportedException();", span="118-118"];
m18_29 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="116-116"];
m18_30 [cluster="System.NotSupportedException.NotSupportedException()", file="OneCharStringEnumerator.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m18_6 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="87-87"];
m18_7 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0, file="OneCharStringEnumerator.cs", label="0: _index = -1", span="89-89"];
m18_8 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="87-87"];
m18_31 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="121-121"];
m18_32 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="121-121"];
m18_5 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43"];
m18_26 [cluster="string.Substring(int)", file="OneCharStringEnumerator.cs", label="Entry string.Substring(int)", span="0-0"];
m18_25 [cluster="System.InvalidOperationException.InvalidOperationException()", file="OneCharStringEnumerator.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m18_33 [file="OneCharStringEnumerator.cs", label="CommandLine.OneCharStringEnumerator", span=""];
m19_0 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="OptionArrayAttribute.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="44-44"];
m19_1 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="OptionArrayAttribute.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="44-44"];
m20_10 [cluster="string.IsNullOrEmpty(string)", file="OptionAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m20_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="50-50"];
m20_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: !string.IsNullOrEmpty(shortName)", span="52-52"];
m20_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = shortName", span="53-53"];
m20_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: !string.IsNullOrEmpty(longName)", span="54-54"];
m20_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = longName", span="55-55"];
m20_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: base.ShortName = shortName", span="60-60"];
m20_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: base.LongName = longName", span="61-61"];
m20_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName == null", span="57-57"];
m20_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="0: throw new InvalidOperationException();", span="58-58"];
m20_9 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="50-50"];
m20_11 [cluster="System.InvalidOperationException.InvalidOperationException()", file="OptionAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m20_12 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m21_46 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="OptionGroupParser.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="42-42"];
m21_47 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="130-130"];
m21_49 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionGroupParser.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99"];
m21_44 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OptionGroupParser.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="41-41"];
m21_58 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionGroupParser.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190"];
m21_57 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="67-67"];
m21_52 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="124-124"];
m21_53 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="82-82"];
m21_51 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="109-109"];
m21_54 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m21_56 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="OptionGroupParser.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114"];
m21_55 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionGroupParser.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110"];
m21_0 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="OptionGroupParser.cs", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="33-33"];
m21_1 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: var valueSetting = false", span="35-35"];
m21_2 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="37-37"];
m21_4 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: var option = map[group.Current]", span="40-40"];
m21_10 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: argumentEnumerator.IsLast && group.IsLast", span="50-50"];
m21_14 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="57-57"];
m21_19 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="67-67"];
m21_21 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: valueSetting = option.SetValue(items, options)", span="70-70"];
m21_25 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="78-78"];
m21_28 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="84-84"];
m21_33 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="94-94"];
m21_34 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: valueSetting = option.SetValue(items, options)", span="96-96"];
m21_38 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !group.IsLast && map[group.Next] == null", span="106-106"];
m21_40 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !option.SetValue(true, options)", span="109-109"];
m21_3 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: group.MoveNext()", span="38-38"];
m21_12 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !group.IsLast", span="53-53"];
m21_20 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: items.Insert(0, group.GetRemainingFromNext())", span="68-68"];
m21_42 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Success;", span="114-114"];
m21_5 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: option == null", span="41-41"];
m21_7 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: option.IsDefined = true", span="44-44"];
m21_8 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="46-46"];
m21_9 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !option.IsBoolean", span="48-48"];
m21_13 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !option.IsArray", span="55-55"];
m21_16 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="59-59"];
m21_18 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="65-65"];
m21_23 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="72-72"];
m21_27 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !option.IsArray", span="82-82"];
m21_30 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="86-86"];
m21_32 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="92-92"];
m21_36 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: this.DefineOptionThatViolatesFormat(option)", span="98-98"];
m21_6 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Failure;", span="42-42"];
m21_11 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Failure;", span="51-51"];
m21_15 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !valueSetting", span="58-58"];
m21_17 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="61-61"];
m21_22 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !valueSetting", span="71-71"];
m21_24 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="74-74"];
m21_26 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Failure;", span="79-79"];
m21_29 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !valueSetting", span="85-85"];
m21_31 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="88-88"];
m21_35 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: !valueSetting", span="97-97"];
m21_37 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ArgumentParser.BooleanToParserState(valueSetting);", span="100-100"];
m21_39 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Failure;", span="107-107"];
m21_41 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="0: return ParserState.Failure;", span="110-110"];
m21_43 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="OptionGroupParser.cs", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="33-33"];
m21_48 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="OptionGroupParser.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="37-37"];
m21_45 [cluster="string.Substring(int)", file="OptionGroupParser.cs", label="Entry string.Substring(int)", span="0-0"];
m21_59 [file="OptionGroupParser.cs", label="CommandLine.OptionGroupParser", span=""];
m22_37 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="134-134"];
m22_56 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.PropertyType.IsEnum", span="138-138"];
m22_58 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="142-142"];
m22_60 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="149-149"];
m22_57 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="140-140"];
m22_59 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="147-147"];
m22_61 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: InvalidCastException", span="153-153"];
m22_63 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: FormatException", span="157-157"];
m22_65 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: ArgumentException", span="161-161"];
m22_67 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="166-166"];
m22_62 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="155-155"];
m22_64 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="159-159"];
m22_66 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="163-163"];
m22_68 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="134-134"];
m22_96 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m22_14 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78"];
m22_15 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="80-80"];
m22_17 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: var map = new OptionMap(list.Count, settings)", span="83-83"];
m22_21 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: map.RawOptions = target", span="91-91"];
m22_16 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: list != null", span="81-81"];
m22_18 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: list", span="85-85"];
m22_23 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: return null;", span="96-96"];
m22_20 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="88-88"];
m22_22 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: return map;", span="93-93"];
m22_19 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionInfo.cs", label="0: pair != null && pair.Right != null", span="87-87"];
m22_24 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="78-78"];
m22_36 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="169-169"];
m22_70 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: var nc = new NullableConverter(_property.PropertyType)", span="171-171"];
m22_72 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="177-177"];
m22_71 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="175-175"];
m22_73 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=1, file="OptionInfo.cs", label="0: Exception", span="182-182"];
m22_75 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="187-187"];
m22_74 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="184-184"];
m22_76 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="169-169"];
m22_52 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m22_55 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m22_54 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m22_53 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m22_26 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionInfo.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m22_79 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="190-190"];
m22_80 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="192-192"];
m22_81 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, value, null)", span="194-194"];
m22_82 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="196-196"];
m22_83 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="190-190"];
m22_69 [cluster="System.Enum.Parse(System.Type, string, bool)", file="OptionInfo.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m22_51 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m22_77 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="OptionInfo.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m22_34 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="200-200"];
m22_84 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="202-202"];
m22_85 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, new List<string>(), null)", span="204-204"];
m22_86 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="206-206"];
m22_87 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="207-207"];
m22_90 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: fieldRef.Add(values[i])", span="211-211"];
m22_88 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: int i = 0", span="209-209"];
m22_89 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: i < values.Length", span="209-209"];
m22_91 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: i++", span="209-209"];
m22_92 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="214-214"];
m22_93 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="200-200"];
m22_94 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m22_13 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m22_95 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m22_78 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="OptionInfo.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m22_27 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="99-99"];
m22_28 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: _attribute is OptionListAttribute", span="101-101"];
m22_29 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return SetValueList(value, options);", span="102-102"];
m22_31 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return SetNullableValue(value, options);", span="105-105"];
m22_32 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: return SetValueScalar(value, options);", span="107-107"];
m22_30 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, file="OptionInfo.cs", label="0: ReflectionUtil.IsNullableType(_property.PropertyType)", span="104-104"];
m22_33 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="99-99"];
m22_25 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionInfo.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m22_0 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="51-51"];
m22_1 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: attribute != null", span="53-53"];
m22_2 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _required = attribute.Required", span="55-55"];
m22_3 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _helpText = attribute.HelpText", span="56-56"];
m22_4 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _shortName = attribute.ShortName", span="57-57"];
m22_5 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _longName = attribute.LongName", span="58-58"];
m22_6 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59"];
m22_7 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _attribute = attribute", span="60-60"];
m22_9 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: property != null", span="65-65"];
m22_10 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: _property = property", span="66-66"];
m22_8 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="63-63"];
m22_11 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="OptionInfo.cs", label="0: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="68-68"];
m22_12 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="51-51"];
m22_35 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="125-125"];
m22_38 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110"];
m22_39 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: Type elementType = _property.PropertyType.GetElementType()", span="112-112"];
m22_40 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: Array array = Array.CreateInstance(elementType, values.Count)", span="113-113"];
m22_44 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="121-121"];
m22_45 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, array, null)", span="122-122"];
m22_41 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: int i = 0", span="115-115"];
m22_42 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: i < array.Length", span="115-115"];
m22_48 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: i++", span="115-115"];
m22_43 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: _setValueLock", span="119-119"];
m22_49 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: return true;", span="131-131"];
m22_46 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: FormatException", span="125-125"];
m22_47 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="OptionInfo.cs", label="0: return false;", span="127-127"];
m22_50 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="110-110"];
m22_98 [file="OptionInfo.cs", label="CommandLine.OptionInfo", span=""];
m23_0 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="46-46"];
m23_1 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="46-46"];
m23_2 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="57-57"];
m23_3 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0, file="OptionListAttribute.cs", label="0: Separator = separator", span="60-60"];
m23_4 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="57-57"];
m23_5 [file="OptionListAttribute.cs", label="CommandLine.OptionListAttribute", span=""];
m24_29 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="169-169"];
m24_49 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: options is CommandLineOptionsBase", span="171-171"];
m24_51 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: error.BadOption.ShortName = option.ShortName", span="176-176"];
m24_52 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: error.BadOption.LongName = option.LongName", span="177-177"];
m24_53 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: required != null", span="179-179"];
m24_54 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: error.ViolatesRequired = required.Value", span="179-179"];
m24_55 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: mutualExclusiveness != null", span="180-180"];
m24_56 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="180-180"];
m24_57 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="182-182"];
m24_50 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, file="OptionMap.cs", label="0: ParsingError error = new ParsingError()", span="173-173"];
m24_58 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="OptionMap.cs", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="169-169"];
m24_21 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="130-130"];
m24_30 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: !_settings.MutuallyExclusive", span="132-132"];
m24_31 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: return true;", span="133-133"];
m24_32 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: _map.Values", span="135-135"];
m24_33 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: option.IsDefined && option.MutuallyExclusiveSet != null", span="137-137"];
m24_35 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=1, file="OptionMap.cs", label="0: _mutuallyExclusiveSetMap.Values", span="142-142"];
m24_34 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: BuildMutuallyExclusiveMap(option)", span="138-138"];
m24_36 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: info.Occurrence > 1", span="144-144"];
m24_39 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: return true;", span="152-152"];
m24_37 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="147-147"];
m24_38 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, file="OptionMap.cs", label="0: return false;", span="148-148"];
m24_40 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="130-130"];
m24_41 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="155-155"];
m24_42 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs", label="0: var setName = option.MutuallyExclusiveSet", span="157-157"];
m24_44 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs", label="0: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="162-162"];
m24_43 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs", label="0: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="159-159"];
m24_45 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs", label="0: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="166-166"];
m24_46 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="155-155"];
m24_48 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m24_18 [cluster="CommandLine.OptionMap.EnforceRules()", file="OptionMap.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="112-112"];
m24_19 [cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0, file="OptionMap.cs", label="0: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="114-114"];
m24_20 [cluster="CommandLine.OptionMap.EnforceRules()", file="OptionMap.cs", label="Exit CommandLine.OptionMap.EnforceRules()", span="112-112"];
m24_22 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="117-117"];
m24_23 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs", label="0: _map.Values", span="119-119"];
m24_24 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs", label="0: option.Required && !option.IsDefined", span="121-121"];
m24_27 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs", label="0: return true;", span="127-127"];
m24_25 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs", label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="123-123"];
m24_26 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, file="OptionMap.cs", label="0: return false;", span="124-124"];
m24_28 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="OptionMap.cs", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="117-117"];
m24_59 [cluster="CommandLine.ParsingError.ParsingError()", file="OptionMap.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="41-41"];
m24_3 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m24_4 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0, file="OptionMap.cs", label="0: ++count", span="50-50"];
m24_5 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50"];
m24_47 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m24_0 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="OptionMap.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="41-41"];
m24_1 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0, file="OptionMap.cs", label="0: BadOption = option", span="44-44"];
m24_2 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="OptionMap.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="41-41"];
m24_6 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m24_7 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _settings = settings", span="63-63"];
m24_12 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _names = new Dictionary<string, string>(capacity, comparer)", span="71-71"];
m24_13 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="72-72"];
m24_15 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="77-77"];
m24_8 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: IEqualityComparer<string> comparer", span="65-65"];
m24_9 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _settings.CaseSensitive", span="66-66"];
m24_10 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: comparer = StringComparer.Ordinal", span="67-67"];
m24_11 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: comparer = StringComparer.OrdinalIgnoreCase", span="69-69"];
m24_14 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, file="OptionMap.cs", label="0: _settings.MutuallyExclusive", span="74-74"];
m24_16 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m24_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionMap.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m24_61 [file="OptionMap.cs", label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
m24_62 [file="OptionMap.cs", label="CommandLine.OptionMap", span=""];
m25_0 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="PairT.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="36-36"];
m25_1 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="PairT.cs", label="0: _left = left", span="38-38"];
m25_2 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, file="PairT.cs", label="1: _right = right", span="39-39"];
m25_3 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="PairT.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="36-36"];
}
