digraph  {
m1_40 [label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15", cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="AttributesFixture.cs"];
m1_141 [label="Entry NameInfo.cstr", span="", cluster="NameInfo.cstr", file="AttributesFixture.cs"];
m1_4 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="AttributesFixture.cs"];
m1_8 [label="return specProps =>\r\n            {\r\n                var options = specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0);\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="26-40", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=red, community=0, file="AttributesFixture.cs"];
m1_9 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="AttributesFixture.cs"];
m1_137 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="AttributesFixture.cs"];
m1_6 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="86-86", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="AttributesFixture.cs"];
m1_105 [label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="88-103", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", color=red, community=0, file="AttributesFixture.cs"];
m1_106 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="86-86", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="AttributesFixture.cs"];
m1_52 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="AttributesFixture.cs"];
m1_145 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()", file="AttributesFixture.cs"];
m1_113 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="AttributesFixture.cs"];
m1_98 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="AttributesFixture.cs"];
m1_17 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="AttributesFixture.cs"];
m1_21 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="AttributesFixture.cs"];
m1_78 [label="Entry Unk.IsNothing", span="", cluster="Unk.IsNothing", file="AttributesFixture.cs"];
m1_53 [label="Entry Unk.FromSpecification", span="", cluster="Unk.FromSpecification", file="AttributesFixture.cs"];
m1_7 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="106-106", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_128 [label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="108-126", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_129 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="106-106", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_94 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="AttributesFixture.cs"];
m1_127 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="AttributesFixture.cs"];
m1_0 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_1 [label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_2 [label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="AttributesFixture.cs"];
m1_142 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="AttributesFixture.cs"];
m1_11 [label="var options = specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0)", span="28-31", cluster="lambda expression", file="AttributesFixture.cs"];
m1_10 [label="Entry lambda expression", span="26-40", cluster="lambda expression", file="AttributesFixture.cs"];
m1_12 [label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="32-32", cluster="lambda expression", file="AttributesFixture.cs"];
m1_22 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="AttributesFixture.cs"];
m1_26 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="AttributesFixture.cs"];
m1_30 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="AttributesFixture.cs"];
m1_14 [label="return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));", span="35-37", cluster="lambda expression", file="AttributesFixture.cs"];
m1_13 [label="groups.Count() > 1", span="33-33", cluster="lambda expression", file="AttributesFixture.cs"];
m1_33 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="AttributesFixture.cs"];
m1_15 [label="return Enumerable.Empty<Error>();", span="39-39", cluster="lambda expression", file="AttributesFixture.cs"];
m1_16 [label="Exit lambda expression", span="26-40", cluster="lambda expression", file="AttributesFixture.cs"];
m1_36 [label="Entry lambda expression", span="35-37", cluster="lambda expression", file="AttributesFixture.cs"];
m1_23 [label="sp.Specification.IsOption()", span="29-29", cluster="lambda expression", file="AttributesFixture.cs"];
m1_24 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="AttributesFixture.cs"];
m1_27 [label="sp.Value.IsJust()", span="30-30", cluster="lambda expression", file="AttributesFixture.cs"];
m1_28 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="AttributesFixture.cs"];
m1_31 [label="((OptionSpecification)sp.Specification).SetName.Length > 0", span="31-31", cluster="lambda expression", file="AttributesFixture.cs"];
m1_32 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="AttributesFixture.cs"];
m1_34 [label="((OptionSpecification)g.Specification).SetName", span="32-32", cluster="lambda expression", file="AttributesFixture.cs"];
m1_35 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="AttributesFixture.cs"];
m1_37 [label="new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification())", span="36-37", cluster="lambda expression", file="AttributesFixture.cs"];
m1_38 [label="Exit lambda expression", span="35-37", cluster="lambda expression", file="AttributesFixture.cs"];
m1_44 [label="var setCount =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()\r\n                        .Count()", span="47-52", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_45 [label="var setWithRequired =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()", span="54-59", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_46 [label="var missing =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Where(sp => sp.Value.IsNothing())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length == 0)\r\n                        .Concat(\r\n                            specProps.Where(sp => sp.Specification.IsOption())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())\r\n                                .Where(\r\n                                    sp =>\r\n                                        ((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))))\r\n                        .Concat(\r\n                            specProps\r\n                                .Where(sp => sp.Specification.IsValue())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())).ToList()", span="61-80", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_43 [label="Entry lambda expression", span="45-83", cluster="lambda expression", file="AttributesFixture.cs"];
m1_54 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="AttributesFixture.cs"];
m1_57 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="AttributesFixture.cs"];
m1_92 [label="((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))", span="72-75", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_60 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="AttributesFixture.cs"];
m1_63 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="AttributesFixture.cs"];
m1_66 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="AttributesFixture.cs"];
m1_47 [label="return from sp in missing select new MissingRequiredOptionError(sp.Specification.FromSpecification());", span="82-82", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_69 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="AttributesFixture.cs"];
m1_72 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="AttributesFixture.cs"];
m1_75 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="AttributesFixture.cs"];
m1_79 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="AttributesFixture.cs"];
m1_82 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="AttributesFixture.cs"];
m1_85 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="AttributesFixture.cs"];
m1_88 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="AttributesFixture.cs"];
m1_91 [label="Entry lambda expression", span="71-75", cluster="lambda expression", file="AttributesFixture.cs"];
m1_95 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="AttributesFixture.cs"];
m1_99 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="AttributesFixture.cs"];
m1_102 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="AttributesFixture.cs"];
m1_48 [label="Exit lambda expression", span="45-83", cluster="lambda expression", file="AttributesFixture.cs"];
m1_55 [label="sp.Specification.IsOption()", span="48-48", cluster="lambda expression", file="AttributesFixture.cs"];
m1_56 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="AttributesFixture.cs"];
m1_58 [label="((OptionSpecification)sp.Specification).SetName", span="49-49", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_59 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="AttributesFixture.cs"];
m1_61 [label="sp.Specification.IsOption()", span="55-55", cluster="lambda expression", file="AttributesFixture.cs"];
m1_62 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="AttributesFixture.cs"];
m1_64 [label="sp.Specification.Required", span="56-56", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_65 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="AttributesFixture.cs"];
m1_67 [label="((OptionSpecification)sp.Specification).SetName", span="57-57", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_68 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="AttributesFixture.cs"];
m1_70 [label="sp.Specification.IsOption()", span="62-62", cluster="lambda expression", file="AttributesFixture.cs"];
m1_71 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="AttributesFixture.cs"];
m1_73 [label="sp.Specification.Required", span="63-63", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_74 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="AttributesFixture.cs"];
m1_76 [label="sp.Value.IsNothing()", span="64-64", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_77 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="AttributesFixture.cs"];
m1_80 [label="((OptionSpecification)sp.Specification).SetName.Length == 0", span="65-65", cluster="lambda expression", file="AttributesFixture.cs"];
m1_81 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="AttributesFixture.cs"];
m1_83 [label="sp.Specification.IsOption()", span="67-67", cluster="lambda expression", file="AttributesFixture.cs"];
m1_84 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="AttributesFixture.cs"];
m1_86 [label="sp.Specification.Required", span="68-68", cluster="lambda expression", file="AttributesFixture.cs"];
m1_87 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="AttributesFixture.cs"];
m1_89 [label="sp.Value.IsNothing()", span="69-69", cluster="lambda expression", file="AttributesFixture.cs"];
m1_90 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="AttributesFixture.cs"];
m1_93 [label="Exit lambda expression", span="71-75", cluster="lambda expression", file="AttributesFixture.cs"];
m1_96 [label="sp.Specification.IsValue()", span="78-78", cluster="lambda expression", file="AttributesFixture.cs"];
m1_97 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="AttributesFixture.cs"];
m1_100 [label="sp.Specification.Required", span="79-79", cluster="lambda expression", file="AttributesFixture.cs"];
m1_101 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="AttributesFixture.cs"];
m1_103 [label="sp.Value.IsNothing()", span="80-80", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_104 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="AttributesFixture.cs"];
m1_108 [label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="90-96", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_107 [label="Entry lambda expression", span="88-103", cluster="lambda expression", file="AttributesFixture.cs"];
m1_109 [label="options.Any()", span="97-97", cluster="lambda expression", file="AttributesFixture.cs"];
m1_114 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="AttributesFixture.cs"];
m1_117 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="AttributesFixture.cs"];
m1_120 [label="Entry lambda expression", span="93-95", cluster="lambda expression", file="AttributesFixture.cs"];
m1_110 [label="return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));", span="99-100", cluster="lambda expression", file="AttributesFixture.cs"];
m1_111 [label="return Enumerable.Empty<Error>();", span="102-102", cluster="lambda expression", file="AttributesFixture.cs"];
m1_112 [label="Exit lambda expression", span="88-103", cluster="lambda expression", file="AttributesFixture.cs"];
m1_124 [label="Entry lambda expression", span="99-100", cluster="lambda expression", file="AttributesFixture.cs"];
m1_115 [label="sp.Specification.TargetType == TargetType.Sequence", span="91-91", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_116 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="AttributesFixture.cs"];
m1_118 [label="sp.Value.IsJust()", span="92-92", cluster="lambda expression", color=red, community=0, file="AttributesFixture.cs"];
m1_119 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="AttributesFixture.cs"];
m1_121 [label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="94-95", cluster="lambda expression", file="AttributesFixture.cs"];
m1_122 [label="Exit lambda expression", span="93-95", cluster="lambda expression", file="AttributesFixture.cs"];
m1_125 [label="new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification())", span="99-100", cluster="lambda expression", file="AttributesFixture.cs"];
m1_126 [label="Exit lambda expression", span="99-100", cluster="lambda expression", file="AttributesFixture.cs"];
m1_132 [label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="113-117", cluster="lambda expression", file="AttributesFixture.cs"];
m1_131 [label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="110-112", cluster="lambda expression", file="AttributesFixture.cs"];
m1_130 [label="Entry lambda expression", span="108-126", cluster="lambda expression", file="AttributesFixture.cs"];
m1_133 [label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="118-121", cluster="lambda expression", file="AttributesFixture.cs"];
m1_134 [label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="122-124", cluster="lambda expression", file="AttributesFixture.cs"];
m1_135 [label="return errors;", span="125-125", cluster="lambda expression", file="AttributesFixture.cs"];
m1_136 [label="Exit lambda expression", span="108-126", cluster="lambda expression", file="AttributesFixture.cs"];
m1_143 [label="t.IsName()", span="113-113", cluster="lambda expression", file="AttributesFixture.cs"];
m1_144 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="AttributesFixture.cs"];
m1_140 [label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="AttributesFixture.cs"];
m1_51 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="AttributesFixture.cs"];
m1_5 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="AttributesFixture.cs"];
m1_41 [label="return specProps =>\r\n            {\r\n                var setCount =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()\r\n                        .Count();\r\n\r\n                var setWithRequired =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList();\r\n\r\n                var missing =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Where(sp => sp.Value.IsNothing())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length == 0)\r\n                        .Concat(\r\n                            specProps.Where(sp => sp.Specification.IsOption())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())\r\n                                .Where(\r\n                                    sp =>\r\n                                        ((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))))\r\n                        .Concat(\r\n                            specProps\r\n                                .Where(sp => sp.Specification.IsValue())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())).ToList();\r\n\r\n                return from sp in missing select new MissingRequiredOptionError(sp.Specification.FromSpecification());\r\n            };", span="45-83", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=red, community=0, file="AttributesFixture.cs"];
m1_42 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="AttributesFixture.cs"];
m1_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="AttributesFixture.cs"];
m1_29 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="AttributesFixture.cs"];
m1_138 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="AttributesFixture.cs"];
m1_50 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="AttributesFixture.cs"];
m1_39 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="AttributesFixture.cs"];
m1_139 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="AttributesFixture.cs"];
m1_25 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="AttributesFixture.cs"];
m1_123 [label="Entry Unk.FromJust", span="", cluster="Unk.FromJust", file="AttributesFixture.cs"];
m1_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="AttributesFixture.cs"];
m1_49 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="AttributesFixture.cs"];
m1_18 [label="Entry Unk.GroupBy", span="", cluster="Unk.GroupBy", file="AttributesFixture.cs"];
m1_19 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="AttributesFixture.cs"];
m1_146 [label=setCount, span="", file="AttributesFixture.cs"];
m1_147 [label=setWithRequired, span="", file="AttributesFixture.cs"];
m1_148 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="AttributesFixture.cs"];
m2_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="BaseFixture.cs"];
m2_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="BaseFixture.cs"];
m2_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="BaseFixture.cs"];
m2_7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)", file="BaseFixture.cs"];
m2_8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="BaseFixture.cs"];
m2_9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="BaseFixture.cs"];
m2_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="BaseFixture.cs"];
m2_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="BaseFixture.cs"];
m2_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="BaseFixture.cs"];
m2_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=red, community=0, file="BaseFixture.cs"];
m2_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="BaseFixture.cs"];
m2_4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="BaseFixture.cs"];
m2_5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="BaseFixture.cs"];
m2_6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="BaseFixture.cs"];
m3_0 [label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m3_1 [label="NonBooleanValue = 0", span="37-37", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m3_2 [label="Exit CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs"];
m3_3 [label="CommandLine.Tests.Mocks.BooleanSetOptions", span="", file="BooleanSetOptions.cs"];
m5_14 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m5_15 [label="Result.Should().Be.False()", span="66-66", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m5_16 [label="Result = null", span="67-67", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m5_17 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs"];
m5_18 [label="Entry Unk.False", span="", cluster="Unk.False", file="CommandLineParserBaseFixture.cs"];
m5_4 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m5_5 [label="Parser = new CommandLineParser()", span="55-55", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m5_6 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs"];
m5_0 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m5_1 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="47-47", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m5_2 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41", cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs"];
m5_7 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs"];
m5_13 [label="Entry Unk.True", span="", cluster="Unk.True", file="CommandLineParserBaseFixture.cs"];
m5_3 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs"];
m5_12 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CommandLineParserBaseFixture.cs"];
m5_8 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m5_9 [label="Result.Should().Be.True()", span="60-60", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m5_10 [label="Result = null", span="61-61", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m5_11 [label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs"];
m5_19 [label="CommandLine.Tests.CommandLineParserBaseFixture", span="", file="CommandLineParserBaseFixture.cs"];
m6_12 [label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_16 [label="Entry Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", span="7-7", cluster="Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_11 [label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_10 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="CommandLineParserFixture.cs"];
m6_13 [label="Entry Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_9 [label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_15 [label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_0 [label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_1 [label="Register(''de'', new GermanOrdinalizer())", span="8-8", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_2 [label="Register(''en'', new EnglishOrdinalizer())", span="9-9", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_3 [label="Register(''es'', new SpanishOrdinalizer())", span="10-10", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_4 [label="Register(''it'', new ItalianOrdinalizer())", span="11-11", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_5 [label="Register(''pt-BR'', new BrazilianPortugueseOrdinalizer())", span="12-12", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_6 [label="Register(''ru'', new RussianOrdinalizer())", span="13-13", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_7 [label="Register(''tr'', new TurkishOrdinalizer())", span="14-14", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_8 [label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="CommandLineParserFixture.cs"];
m6_14 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="CommandLineParserFixture.cs"];
m6_17 [label="Humanizer.Configuration.OrdinalizerRegistry", span="", file="CommandLineParserFixture.cs"];
m10_4 [label="Entry CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m10_5 [label="return DebugStringUtil.ConvertOptionsToString(this);", span="55-55", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m10_6 [label="Exit CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53", cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs"];
m10_0 [label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m10_1 [label="StartOffset = 0", span="37-37", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m10_2 [label="Bytes = 0", span="38-38", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m10_3 [label="Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs"];
m10_7 [label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ComplexOptions.cs"];
m10_8 [label="CommandLine.Tests.Mocks.ComplexOptions", span="", file="ComplexOptions.cs"];
m13_30 [label="Entry string.Remove(int, int)", span="0-0", cluster="string.Remove(int, int)", file="HeadingInfoFixture.cs"];
m13_22 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)", file="HeadingInfoFixture.cs"];
m13_13 [label="Entry int.ToWords()", span="16-16", cluster="int.ToWords()", file="HeadingInfoFixture.cs"];
m13_23 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="HeadingInfoFixture.cs"];
m13_35 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="HeadingInfoFixture.cs"];
m13_15 [label="Entry Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_16 [label="string towords = number.ToWords().Replace('-', ' ')", span="39-39", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_17 [label="towords = RemoveOnePrefix(towords)", span="41-41", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_18 [label="towords.EndsWith(''y'')", span="43-43", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_19 [label="towords = towords.TrimEnd('y') + ''ie''", span="44-44", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_20 [label="return towords + ''th'';", span="46-46", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_21 [label="Exit Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="HeadingInfoFixture.cs"];
m13_14 [label="Entry Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="HeadingInfoFixture.cs"];
m13_25 [label="towords.IndexOf(''one'', StringComparison.Ordinal) == 0", span="52-52", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="HeadingInfoFixture.cs"];
m13_26 [label="towords = towords.Remove(0, 4)", span="53-53", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="HeadingInfoFixture.cs"];
m13_27 [label="return towords;", span="55-55", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="HeadingInfoFixture.cs"];
m13_28 [label="Exit Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="HeadingInfoFixture.cs"];
m13_0 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_1 [label="string towords", span="17-17", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_2 [label="ExceptionNumbersToWords(number, out towords)", span="19-19", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_4 [label="number > 20", span="23-23", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_6 [label="ExceptionNumbersToWords(number%10, out exceptionPart)", span="26-26", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_7 [label="var normalPart = number - number%10", span="28-28", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_10 [label="return NormalNumberToWords(number);", span="34-34", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_3 [label="return towords;", span="20-20", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_5 [label="string exceptionPart", span="25-25", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_9 [label="return towords + '' '' + exceptionPart;", span="30-30", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_8 [label="towords = RemoveOnePrefix(normalPart.ToWords())", span="29-29", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_11 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="HeadingInfoFixture.cs"];
m13_12 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="HeadingInfoFixture.cs"];
m13_31 [label="var exceptions = new Dictionary<int, string>\r\n            {\r\n                {1, ''first''},\r\n                {2, ''second''},\r\n                {3, ''third''},\r\n                {4, ''forth''},\r\n                {5, ''fifth''},\r\n                {8, ''eighth''},\r\n                {9, ''ninth''},\r\n                {12, ''twelfth''},\r\n            }", span="60-70", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="HeadingInfoFixture.cs"];
m13_32 [label="return exceptions.TryGetValue(number, out words);", span="72-72", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="HeadingInfoFixture.cs"];
m13_33 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="HeadingInfoFixture.cs"];
m13_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HeadingInfoFixture.cs"];
m13_29 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="HeadingInfoFixture.cs"];
m13_24 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="HeadingInfoFixture.cs"];
m14_4 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m14_5 [label="p.Name == ''Description''", span="103-103", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m14_6 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m14_3 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="35-35", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="HelpOptionAttributeFixture.cs"];
m14_0 [label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="HelpOptionAttributeFixture.cs"];
m14_1 [label="return Formatters.ResolveForCulture(culture);", span="68-68", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="HelpOptionAttributeFixture.cs"];
m14_2 [label="Exit Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="HelpOptionAttributeFixture.cs"];
m15_0 [label="Entry Humanizer.Truncator.Truncate(string, int)", span="15-15", cluster="Humanizer.Truncator.Truncate(string, int)", file="HelpTextFixture.cs"];
m15_1 [label="return input.Truncate(length, ''…'', FixedLength);", span="17-17", cluster="Humanizer.Truncator.Truncate(string, int)", file="HelpTextFixture.cs"];
m15_2 [label="Exit Humanizer.Truncator.Truncate(string, int)", span="15-15", cluster="Humanizer.Truncator.Truncate(string, int)", file="HelpTextFixture.cs"];
m15_7 [label="Entry Humanizer.Truncator.Truncate(string, int, string, Humanizer.TruncateFrom)", span="41-41", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_8 [label="return input.Truncate(length, truncationString, FixedLength, from);", span="43-43", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_9 [label="Exit Humanizer.Truncator.Truncate(string, int, string, Humanizer.TruncateFrom)", span="41-41", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_18 [label="Entry Humanizer.ITruncator.Truncate(string, int, string, Humanizer.TruncateFrom)", span="15-15", cluster="Humanizer.ITruncator.Truncate(string, int, string, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_4 [label="Entry Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="28-28", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_5 [label="return input.Truncate(length, ''…'', truncator, from);", span="30-30", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_6 [label="Exit Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="28-28", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpTextFixture.cs"];
m15_10 [label="Entry Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="55-55", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_11 [label="truncator == null", span="57-57", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_13 [label="input == null", span="60-60", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_15 [label="return truncator.Truncate(input, length, truncationString, from);", span="63-63", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_12 [label="throw new ArgumentNullException(''truncator'');", span="58-58", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", color=red, community=0, file="HelpTextFixture.cs"];
m15_14 [label="return null;", span="61-61", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", color=red, community=0, file="HelpTextFixture.cs"];
m15_16 [label="Exit Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="55-55", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m15_3 [label="Entry string.Truncate(int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="55-55", cluster="string.Truncate(int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", file="HelpTextFixture.cs"];
m21_0 [label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m21_1 [label="return DebugStringUtil.ConvertOptionsToString(this);", span="35-35", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m21_2 [label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33", cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs"];
m21_3 [label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39", cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="OptionsBase.cs"];
m21_4 [label="CommandLine.Tests.Mocks.OptionsBase", span="", file="OptionsBase.cs"];
m31_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ReflectionUtilFixture.cs"];
m31_5 [label="Entry int.ToOrdinalWords()", span="52-52", cluster="int.ToOrdinalWords()", file="ReflectionUtilFixture.cs"];
m31_0 [label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", file="ReflectionUtilFixture.cs"];
m31_1 [label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", file="ReflectionUtilFixture.cs"];
m31_2 [label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="52-52", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="ReflectionUtilFixture.cs"];
m31_3 [label="Assert.Equal(words, number.ToOrdinalWords())", span="54-54", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="ReflectionUtilFixture.cs"];
m31_4 [label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="52-52", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="ReflectionUtilFixture.cs"];
m34_3 [label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="780-780", cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs"];
m34_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m34_1 [label="return HelpText.AutoBuild(this);", span="14-14", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m34_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12", cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs"];
m34_4 [label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", span="", file="SimpleOptionsForAutoBuid.cs"];
m38_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m38_1 [label="BadIntegerValue = 0", span="39-39", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m38_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs"];
m38_3 [label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray", span="", file="SimpleOptionsWithBadOptionArray.cs"];
m41_0 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m41_1 [label="FileAccess = FileAccess.Read", span="40-40", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m41_2 [label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs"];
m41_3 [label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span="", file="SimpleOptionsWithEnum.cs"];
m46_5 [label="Entry CommandLine.Parsed<T>.Parsed(T, System.Collections.Generic.IEnumerable<System.Type>)", span="67-67", cluster="CommandLine.Parsed<T>.Parsed(T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_6 [label="Exit CommandLine.Parsed<T>.Parsed(T, System.Collections.Generic.IEnumerable<System.Type>)", span="67-67", cluster="CommandLine.Parsed<T>.Parsed(T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_0 [label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", span="35-35", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_1 [label="this.tag = tag", span="37-37", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_2 [label="this.value = value", span="38-38", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_3 [label="this.verbTypes = verbTypes", span="39-39", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_4 [label="Exit CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", span="35-35", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<System.Type>)", file="UnknownArgumentsFixture.cs"];
m46_9 [label="Entry CommandLine.Parsed<T>.Equals(object)", span="90-90", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_10 [label="var other = obj as Parsed<T>", span="92-92", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_13 [label="return base.Equals(obj);", span="98-98", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_11 [label="other != null", span="93-93", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_12 [label="return Equals(other);", span="95-95", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_14 [label="Exit CommandLine.Parsed<T>.Equals(object)", span="90-90", cluster="CommandLine.Parsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_30 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnknownArgumentsFixture.cs"];
m46_31 [label="Exit CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnknownArgumentsFixture.cs"];
m46_16 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_38 [label="Entry CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="186-186", cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_42 [label="other == null", span="188-188", cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_44 [label="return this.Tag.Equals(other.Tag) && Errors.SequenceEqual(other.Errors);", span="193-193", cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_43 [label="return false;", span="190-190", cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_45 [label="Exit CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="186-186", cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_25 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_46 [label="Entry CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199", cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="UnknownArgumentsFixture.cs"];
m46_47 [label="return new NotParsed<T>(parserResult.Value, func(parserResult.Errors));", span="203-203", cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="UnknownArgumentsFixture.cs"];
m46_48 [label="Exit CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199", cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="UnknownArgumentsFixture.cs"];
m46_32 [label="Entry CommandLine.NotParsed<T>.Equals(object)", span="161-161", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_33 [label="var other = obj as NotParsed<T>", span="163-163", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_36 [label="return base.Equals(obj);", span="169-169", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_34 [label="other != null", span="164-164", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_35 [label="return Equals(other);", span="166-166", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_37 [label="Exit CommandLine.NotParsed<T>.Equals(object)", span="161-161", cluster="CommandLine.NotParsed<T>.Equals(object)", file="UnknownArgumentsFixture.cs"];
m46_15 [label="Entry CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="115-115", cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_21 [label="other == null", span="117-117", cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_23 [label="return this.Tag.Equals(other.Tag)\r\n                    && Value.Equals(other.Value)\r\n                    && VerbTypes.SequenceEqual(other.VerbTypes);", span="122-124", cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_22 [label="return false;", span="119-119", cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_24 [label="Exit CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="115-115", cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="UnknownArgumentsFixture.cs"];
m46_39 [label="Entry CommandLine.NotParsed<T>.GetHashCode()", span="176-176", cluster="CommandLine.NotParsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_40 [label="return new { Value, Errors }.GetHashCode();", span="178-178", cluster="CommandLine.NotParsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_41 [label="Exit CommandLine.NotParsed<T>.GetHashCode()", span="176-176", cluster="CommandLine.NotParsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_26 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="UnknownArgumentsFixture.cs"];
m46_49 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnknownArgumentsFixture.cs"];
m46_7 [label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72", cluster="CommandLine.Parsed<T>.Parsed(T)", file="UnknownArgumentsFixture.cs"];
m46_8 [label="Exit CommandLine.Parsed<T>.Parsed(T)", span="72-72", cluster="CommandLine.Parsed<T>.Parsed(T)", file="UnknownArgumentsFixture.cs"];
m46_20 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_27 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnknownArgumentsFixture.cs"];
m46_28 [label="this.errors = errors", span="139-139", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnknownArgumentsFixture.cs"];
m46_29 [label="Exit CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnknownArgumentsFixture.cs"];
m46_17 [label="Entry CommandLine.Parsed<T>.GetHashCode()", span="105-105", cluster="CommandLine.Parsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_18 [label="return new { ParserResultType = this.Tag, Value, VerbTypes }.GetHashCode();", span="107-107", cluster="CommandLine.Parsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_19 [label="Exit CommandLine.Parsed<T>.GetHashCode()", span="105-105", cluster="CommandLine.Parsed<T>.GetHashCode()", file="UnknownArgumentsFixture.cs"];
m46_50 [label="CommandLine.ParserResult<T>", span="", file="UnknownArgumentsFixture.cs"];
m46_51 [label="CommandLine.Parsed<T>", span="", file="UnknownArgumentsFixture.cs"];
m46_52 [label="CommandLine.NotParsed<T>", span="", file="UnknownArgumentsFixture.cs"];
m48_0 [label="Entry Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_1 [label="number == 2", span="10-10", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_2 [label="return resourceKey + DualPostfix;", span="11-11", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_3 [label="number >= 3 && number <= 10", span="14-14", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_4 [label="return resourceKey + PluralPostfix;", span="15-15", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_5 [label="return resourceKey;", span="17-17", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m48_6 [label="Exit Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="ValueListAttributeParsingFixture.cs"];
m1_4 -> m1_8  [key=0, style=solid, color=red];
m1_8 -> m1_9  [key=0, style=solid, color=red];
m1_8 -> m1_11  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_9 -> m1_4  [key=0, style=bold, color=blue];
m1_6 -> m1_105  [key=0, style=solid, color=red];
m1_105 -> m1_106  [key=0, style=solid, color=red];
m1_105 -> m1_108  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_106 -> m1_6  [key=0, style=bold, color=blue];
m1_7 -> m1_128  [key=0, style=solid];
m1_7 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_129 -> m1_7  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_142 -> m1_143  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_11 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_11 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_11 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_10 -> m1_11  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_18  [key=2, style=dotted];
m1_12 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_22 -> m1_23  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_14 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_19  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_21  [key=2, style=dotted];
m1_16 -> m1_10  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=2, style=dotted];
m1_37 -> m1_40  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid, color=red];
m1_44 -> m1_17  [key=2, style=dotted, color=red];
m1_44 -> m1_20  [key=2, style=dotted, color=red];
m1_44 -> m1_49  [key=2, style=dotted, color=red];
m1_44 -> m1_50  [key=2, style=dotted, color=red];
m1_44 -> m1_19  [key=2, style=dotted, color=red];
m1_44 -> m1_54  [key=1, style=dashed, color=red, label="lambda expression"];
m1_44 -> m1_57  [key=1, style=dashed, color=red, label="lambda expression"];
m1_44 -> m1_46  [key=1, style=dashed, color=red, label=setCount];
m1_44 -> m1_92  [key=1, style=dashed, color=red, label=setCount];
m1_45 -> m1_46  [key=0, style=solid, color=red];
m1_45 -> m1_17  [key=2, style=dotted, color=red];
m1_45 -> m1_20  [key=2, style=dotted, color=red];
m1_45 -> m1_49  [key=2, style=dotted, color=red];
m1_45 -> m1_50  [key=2, style=dotted, color=red];
m1_45 -> m1_60  [key=1, style=dashed, color=red, label="lambda expression"];
m1_45 -> m1_63  [key=1, style=dashed, color=red, label="lambda expression"];
m1_45 -> m1_66  [key=1, style=dashed, color=red, label="lambda expression"];
m1_45 -> m1_92  [key=1, style=dashed, color=red, label=setWithRequired];
m1_46 -> m1_47  [key=0, style=solid, color=red];
m1_46 -> m1_17  [key=2, style=dotted, color=red];
m1_46 -> m1_51  [key=2, style=dotted, color=red];
m1_46 -> m1_50  [key=2, style=dotted, color=red];
m1_46 -> m1_69  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_72  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_75  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_79  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_82  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_85  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_88  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_91  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_95  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_99  [key=1, style=dashed, color=red, label="lambda expression"];
m1_46 -> m1_102  [key=1, style=dashed, color=red, label="lambda expression"];
m1_43 -> m1_44  [key=0, style=solid, color=red];
m1_43 -> m1_45  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_43 -> m1_46  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_54 -> m1_55  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid, color=red];
m1_92 -> m1_93  [key=0, style=solid, color=red];
m1_92 -> m1_94  [key=2, style=dotted, color=red];
m1_60 -> m1_61  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid, color=red];
m1_66 -> m1_67  [key=0, style=solid, color=red];
m1_47 -> m1_48  [key=0, style=solid, color=red];
m1_47 -> m1_52  [key=2, style=dotted, color=red];
m1_47 -> m1_53  [key=2, style=dotted, color=red];
m1_47 -> m1_47  [key=1, style=dashed, color=red, label=sp];
m1_69 -> m1_70  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid, color=red];
m1_75 -> m1_76  [key=0, style=solid, color=red];
m1_79 -> m1_80  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid, color=red];
m1_95 -> m1_96  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid, color=red];
m1_48 -> m1_43  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_25  [key=2, style=dotted];
m1_56 -> m1_54  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid, color=red];
m1_59 -> m1_57  [key=0, style=bold, color=blue];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_25  [key=2, style=dotted];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_64 -> m1_65  [key=0, style=solid, color=red];
m1_65 -> m1_63  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid, color=red];
m1_68 -> m1_66  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_25  [key=2, style=dotted];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_73 -> m1_74  [key=0, style=solid, color=red];
m1_74 -> m1_72  [key=0, style=bold, color=blue];
m1_76 -> m1_77  [key=0, style=solid, color=red];
m1_76 -> m1_78  [key=2, style=dotted, color=red];
m1_77 -> m1_75  [key=0, style=bold, color=blue];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_79  [key=0, style=bold, color=blue];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_25  [key=2, style=dotted];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_85  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_78  [key=2, style=dotted];
m1_90 -> m1_88  [key=0, style=bold, color=blue];
m1_93 -> m1_91  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=2, style=dotted];
m1_97 -> m1_95  [key=0, style=bold, color=blue];
m1_100 -> m1_101  [key=0, style=solid];
m1_101 -> m1_99  [key=0, style=bold, color=blue];
m1_103 -> m1_104  [key=0, style=solid, color=red];
m1_103 -> m1_78  [key=2, style=dotted, color=red];
m1_104 -> m1_102  [key=0, style=bold, color=blue];
m1_108 -> m1_109  [key=0, style=solid, color=red];
m1_108 -> m1_17  [key=2, style=dotted, color=red];
m1_108 -> m1_114  [key=1, style=dashed, color=red, label="lambda expression"];
m1_108 -> m1_117  [key=1, style=dashed, color=red, label="lambda expression"];
m1_108 -> m1_120  [key=1, style=dashed, color=red, label="lambda expression"];
m1_108 -> m1_110  [key=1, style=dashed, color=red, label=options];
m1_107 -> m1_108  [key=0, style=solid, color=red];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_111  [key=0, style=solid];
m1_109 -> m1_113  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid, color=red];
m1_117 -> m1_118  [key=0, style=solid, color=red];
m1_120 -> m1_121  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_110 -> m1_20  [key=2, style=dotted];
m1_110 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_21  [key=2, style=dotted];
m1_112 -> m1_107  [key=0, style=bold, color=blue];
m1_124 -> m1_125  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid, color=red];
m1_116 -> m1_114  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid, color=red];
m1_118 -> m1_29  [key=2, style=dotted, color=red];
m1_119 -> m1_117  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_29  [key=2, style=dotted];
m1_121 -> m1_123  [key=2, style=dotted];
m1_122 -> m1_120  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_127  [key=2, style=dotted];
m1_125 -> m1_53  [key=2, style=dotted];
m1_126 -> m1_124  [key=0, style=bold, color=blue];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_17  [key=2, style=dotted];
m1_132 -> m1_138  [key=2, style=dotted];
m1_132 -> m1_139  [key=2, style=dotted];
m1_132 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_132 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_25  [key=2, style=dotted];
m1_131 -> m1_137  [key=2, style=dotted];
m1_131 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=sp];
m1_130 -> m1_131  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_19  [key=2, style=dotted];
m1_133 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=x];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_140  [key=2, style=dotted];
m1_134 -> m1_141  [key=2, style=dotted];
m1_134 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=y];
m1_135 -> m1_136  [key=0, style=solid];
m1_136 -> m1_130  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=2, style=dotted];
m1_144 -> m1_142  [key=0, style=bold, color=blue];
m1_5 -> m1_41  [key=0, style=solid, color=red];
m1_41 -> m1_42  [key=0, style=solid, color=red];
m1_41 -> m1_44  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_41 -> m1_45  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_41 -> m1_46  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_42 -> m1_5  [key=0, style=bold, color=blue];
m1_146 -> m1_92  [key=1, style=dashed, color=red, label=setCount];
m1_147 -> m1_92  [key=1, style=dashed, color=red, label=setWithRequired];
m1_148 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_3  [key=2, style=dotted];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtNoon"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_7  [key=2, style=dotted];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_0 -> m2_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m2_0 -> m2_9  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_3  [key=2, style=dotted, color=red];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtMidnight"];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.BooleanSetOptions"];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_12  [key=2, style=dotted];
m5_15 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_14  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=2, style=dotted];
m5_9 -> m5_13  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_8  [key=0, style=bold, color=blue];
m5_19 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m5_19 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m5_19 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m5_19 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m5_19 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserBaseFixture"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_9  [key=2, style=dotted];
m6_1 -> m6_10  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_11  [key=2, style=dotted];
m6_2 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_12  [key=2, style=dotted];
m6_3 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_13  [key=2, style=dotted];
m6_4 -> m6_10  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_14  [key=2, style=dotted];
m6_5 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_15  [key=2, style=dotted];
m6_6 -> m6_10  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_16  [key=2, style=dotted];
m6_7 -> m6_10  [key=2, style=dotted];
m6_8 -> m6_0  [key=0, style=bold, color=blue];
m6_17 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m6_17 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=2, style=dotted];
m10_6 -> m10_4  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_8 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m10_8 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m10_8 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.ComplexOptions"];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_13  [key=2, style=dotted];
m13_16 -> m13_22  [key=2, style=dotted];
m13_16 -> m13_14  [key=3, color=darkorchid, style=bold, label="Local variable string towords"];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_14  [key=2, style=dotted];
m13_17 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label=towords];
m13_17 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label=towords];
m13_17 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label=towords];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=0, style=solid];
m13_18 -> m13_23  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_24  [key=2, style=dotted];
m13_19 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label=towords];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_15  [key=0, style=bold, color=blue];
m13_14 -> m13_25  [key=0, style=solid];
m13_14 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_14 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_14 -> m13_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string towords"];
m13_14 -> m13_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string RemoveOnePrefix"];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=0, style=solid];
m13_25 -> m13_29  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_30  [key=2, style=dotted];
m13_26 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_14  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_15  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToOrdinalWords"];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_14  [key=3, color=darkorchid, style=bold, label="Local variable string towords"];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [key=0, style=solid];
m13_2 -> m13_12  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_10  [key=0, style=solid];
m13_6 -> m13_12  [key=2, style=dotted];
m13_6 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label=exceptionPart];
m13_7 -> m13_8  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_15  [key=2, style=dotted];
m13_3 -> m13_11  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_9 -> m13_11  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_13  [key=2, style=dotted];
m13_8 -> m13_14  [key=2, style=dotted];
m13_11 -> m13_0  [key=0, style=bold, color=blue];
m13_12 -> m13_31  [key=0, style=solid];
m13_12 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_12 -> m13_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m13_12 -> m13_1  [key=3, color=darkorchid, style=bold, label="Parameter variable string words"];
m13_12 -> m13_5  [key=3, color=darkorchid, style=bold, label="Parameter variable string words"];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_34  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_35  [key=2, style=dotted];
m13_33 -> m13_12  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_4  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<System.Reflection.PropertyInfo, bool> DefaultEnumDescriptionPropertyLocator"];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_3  [key=2, style=dotted];
m15_9 -> m15_7  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_3  [key=2, style=dotted];
m15_6 -> m15_4  [key=0, style=bold, color=blue];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_10 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_11 -> m15_12  [key=0, style=solid, color=red];
m15_11 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid, color=red];
m15_13 -> m15_15  [key=0, style=solid];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_18  [key=2, style=dotted];
m15_12 -> m15_16  [key=0, style=solid, color=red];
m15_12 -> m15_17  [key=2, style=dotted, color=red];
m15_14 -> m15_16  [key=0, style=solid, color=red];
m15_16 -> m15_10  [key=0, style=bold, color=blue];
m15_3 -> m15_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int length"];
m15_3 -> m15_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.TruncateFrom from"];
m15_3 -> m15_7  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.TruncateFrom from"];
m15_3 -> m15_1  [key=3, color=darkorchid, style=bold, label="Parameter variable string truncationString"];
m15_3 -> m15_14  [key=3, color=red, style=bold, label="method methodReturn string Truncate"];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_4 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.OptionsBase"];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [key=0, style=bold, color=blue];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_5  [key=2, style=dotted];
m31_3 -> m31_6  [key=2, style=dotted];
m31_4 -> m31_2  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=2, style=dotted];
m34_2 -> m34_0  [key=0, style=bold, color=blue];
m34_4 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid"];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_2 -> m38_0  [key=0, style=bold, color=blue];
m38_3 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray"];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_0  [key=0, style=bold, color=blue];
m41_3 -> m41_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum"];
m46_5 -> m46_6  [key=0, style=solid];
m46_6 -> m46_5  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_2  [key=1, style=dashed, color=darkseagreen4, label=T];
m46_0 -> m46_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_4 -> m46_0  [key=0, style=bold, color=blue];
m46_9 -> m46_10  [key=0, style=solid];
m46_9 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label=object];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_12  [key=1, style=dashed, color=darkseagreen4, label=other];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_16  [key=2, style=dotted];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_13  [key=0, style=solid];
m46_12 -> m46_14  [key=0, style=solid];
m46_12 -> m46_15  [key=2, style=dotted];
m46_14 -> m46_9  [key=0, style=bold, color=blue];
m46_30 -> m46_31  [key=0, style=solid];
m46_31 -> m46_30  [key=0, style=bold, color=blue];
m46_38 -> m46_42  [key=0, style=solid];
m46_38 -> m46_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_44  [key=0, style=solid];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_25  [key=2, style=dotted];
m46_44 -> m46_26  [key=2, style=dotted];
m46_43 -> m46_45  [key=0, style=solid];
m46_45 -> m46_38  [key=0, style=bold, color=blue];
m46_46 -> m46_47  [key=0, style=solid];
m46_47 -> m46_48  [key=0, style=solid];
m46_47 -> m46_30  [key=2, style=dotted];
m46_47 -> m46_49  [key=2, style=dotted];
m46_48 -> m46_46  [key=0, style=bold, color=blue];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_36  [key=1, style=dashed, color=darkseagreen4, label=object];
m46_33 -> m46_34  [key=0, style=solid];
m46_33 -> m46_35  [key=1, style=dashed, color=darkseagreen4, label=other];
m46_36 -> m46_37  [key=0, style=solid];
m46_36 -> m46_16  [key=2, style=dotted];
m46_34 -> m46_35  [key=0, style=solid];
m46_34 -> m46_36  [key=0, style=solid];
m46_35 -> m46_37  [key=0, style=solid];
m46_35 -> m46_38  [key=2, style=dotted];
m46_37 -> m46_32  [key=0, style=bold, color=blue];
m46_15 -> m46_21  [key=0, style=solid];
m46_15 -> m46_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsed<T>"];
m46_21 -> m46_22  [key=0, style=solid];
m46_21 -> m46_23  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_23 -> m46_25  [key=2, style=dotted];
m46_23 -> m46_16  [key=2, style=dotted];
m46_23 -> m46_26  [key=2, style=dotted];
m46_22 -> m46_24  [key=0, style=solid];
m46_24 -> m46_15  [key=0, style=bold, color=blue];
m46_39 -> m46_40  [key=0, style=solid];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_20  [key=2, style=dotted];
m46_41 -> m46_39  [key=0, style=bold, color=blue];
m46_7 -> m46_8  [key=0, style=solid];
m46_8 -> m46_7  [key=0, style=bold, color=blue];
m46_27 -> m46_28  [key=0, style=solid];
m46_28 -> m46_29  [key=0, style=solid];
m46_29 -> m46_27  [key=0, style=bold, color=blue];
m46_17 -> m46_18  [key=0, style=solid];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_20  [key=2, style=dotted];
m46_19 -> m46_17  [key=0, style=bold, color=blue];
m46_50 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m46_50 -> m46_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m46_50 -> m46_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m46_51 -> m46_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsed<T>"];
m46_51 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsed<T>"];
m46_51 -> m46_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsed<T>"];
m46_51 -> m46_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsed<T>"];
m46_52 -> m46_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m46_52 -> m46_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m46_52 -> m46_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m46_52 -> m46_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m46_52 -> m46_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NotParsed<T>"];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_0 -> m48_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m48_0 -> m48_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_0 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_3  [key=0, style=solid];
m48_2 -> m48_6  [key=0, style=solid];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_5  [key=0, style=solid];
m48_4 -> m48_6  [key=0, style=solid];
m48_5 -> m48_6  [key=0, style=solid];
m48_6 -> m48_0  [key=0, style=bold, color=blue];
}
