digraph  {
m0_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="20-24", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="27-30", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="16-19", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_4 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="33-33", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooser.cs"];
m0_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="InstanceChooser.cs"];
m0_11 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceChooser.cs"];
m0_13 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceChooser.cs"];
m0_17 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs"];
m0_22 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_34 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="55-55", cluster="lambda expression", color=green, community=0, file="InstanceChooser.cs"];
m0_33 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_37 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_35 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="InstanceChooser.cs"];
m0_36 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_38 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_39 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_40 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_15 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="29-29", cluster="lambda expression", file="InstanceChooser.cs"];
m0_14 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="InstanceChooser.cs"];
m0_19 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_41 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="InstanceChooser.cs"];
m0_16 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="InstanceChooser.cs"];
m0_18 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_20 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_23 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_24 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="InstanceChooser.cs"];
m0_12 [label="Entry Unk.All", span="", cluster="Unk.All", file="InstanceChooser.cs"];
m0_25 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="InstanceChooser.cs"];
m0_9 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="InstanceChooser.cs"];
m0_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="InstanceChooser.cs"];
m0_10 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="InstanceChooser.cs"];
m0_26 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="InstanceChooser.cs"];
m0_27 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooser.cs"];
m0_29 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="46-50", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="InstanceChooser.cs"];
m0_28 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="42-45", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooser.cs"];
m0_30 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="53-56", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="InstanceChooser.cs"];
m0_31 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="59-59", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooser.cs"];
m0_32 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooser.cs"];
m0_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="InstanceChooser.cs"];
m0_45 [label=specs, span="", file="InstanceChooser.cs"];
m0_46 [label=result, span="", file="InstanceChooser.cs"];
m0_47 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="InstanceChooser.cs"];
m0_42 [label=specs, span="", file="InstanceChooser.cs"];
m0_43 [label=result, span="", file="InstanceChooser.cs"];
m0_44 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="InstanceChooser.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=specs];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_3 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_17  [key=2, style=dotted, color=green];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_21  [key=2, style=dotted];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m0_35 -> m0_33  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid];
m0_38 -> m0_36  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_25  [key=2, style=dotted];
m0_40 -> m0_26  [key=2, style=dotted];
m0_15 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_23 -> m0_25  [key=2, style=dotted];
m0_23 -> m0_26  [key=2, style=dotted];
m0_23 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_7  [key=2, style=dotted, color=green];
m0_29 -> m0_8  [key=2, style=dotted, color=green];
m0_29 -> m0_34  [key=1, style=dashed, color=green, label=specs];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_6  [key=2, style=dotted];
m0_28 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_9  [key=2, style=dotted, color=green];
m0_30 -> m0_10  [key=2, style=dotted, color=green];
m0_30 -> m0_11  [key=2, style=dotted, color=green];
m0_30 -> m0_33  [key=1, style=dashed, color=green, label="lambda expression"];
m0_30 -> m0_37  [key=1, style=dashed, color=green, label=result];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_12  [key=2, style=dotted];
m0_31 -> m0_13  [key=2, style=dotted];
m0_31 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_32 -> m0_27  [key=0, style=bold, color=blue];
m0_45 -> m0_34  [key=1, style=dashed, color=green, label=specs];
m0_46 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_47 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m0_42 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=specs];
m0_43 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_44 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
}
