digraph  {
m0_4 [label="var result = Parser.Default.ParseArguments<HeadOptions, TailOptions>(args)", span="41-41", cluster="ReadText.Demo.Program.Main(string[])", file="Program.cs", color=green, community=0];
m0_30 [label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture, ignoreValueCase)", span="43-43", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="Program.cs"];
m0_31 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="Program.cs"];
m0_32 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="Program.cs"];
m0_33 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Program.cs"];
m0_59 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Program.cs"];
m0_67 [label="Exit lambda expression", span="53-74", cluster="lambda expression", file="Program.cs"];
m0_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Program.cs"];
m0_66 [label="return (value == null) ? empty() : withValue();", span="73-73", cluster="lambda expression", file="Program.cs"];
m0_102 [label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0", cluster="System.Enum.IsDefined(System.Type, object)", file="Program.cs"];
m0_50 [label="MakeError()", span="46-46", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_34 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Program.cs"];
m0_44 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Program.cs"];
m0_45 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Program.cs"];
m0_46 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="Program.cs"];
m0_47 [label="Tuple.Create(header(opts), reader(opts))", span="45-45", cluster="lambda expression", file="Program.cs", color=green, community=1];
m0_12 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="Program.cs"];
m0_60 [label="Entry lambda expression", span="53-74", cluster="lambda expression", file="Program.cs"];
m0_77 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="17-17", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="Program.cs"];
m0_16 [label="var fromTop = opts.GetType() == typeof(HeadOptions)", span="16-16", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_49 [label="Entry Unk.IsFSharpOptionType", span="", cluster="Unk.IsFSharpOptionType", file="Program.cs"];
m0_71 [label=header, span="", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="Program.cs"];
m0_57 [label="Entry System.Type.GetTypeInfo()", span="218-218", cluster="System.Type.GetTypeInfo()", file="Program.cs"];
m0_72 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="Program.cs"];
m0_0 [label="Entry ReadText.Demo.Program.Main(string[])", span="12-12", cluster="ReadText.Demo.Program.Main(string[])", file="Program.cs"];
m0_1 [label="Func<IOptions, string> reader = opts =>\r\n		        {\r\n		            var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            return opts.Lines.HasValue\r\n		                ? ReadLines(opts.FileName, fromTop, (int)opts.Lines)\r\n		                : ReadBytes(opts.FileName, fromTop, (int)opts.Bytes);\r\n		        }", span="14-20", cluster="ReadText.Demo.Program.Main(string[])", color=green, community=1, file="Program.cs"];
m0_2 [label="Func<IOptions, string> header = opts =>\r\n		        {\r\n		            if (opts.Quiet)\r\n		            {\r\n		                return string.Empty;\r\n		            }\r\n                    var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            var builder = new StringBuilder(''Reading '');\r\n		            builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'');\r\n		            builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'');\r\n		            return builder.ToString();\r\n		        }", span="21-34", cluster="ReadText.Demo.Program.Main(string[])", file="Program.cs", color=green, community=1];
m0_19 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Program.cs"];
m0_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="Program.cs"];
m0_21 [label="Entry ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs"];
m0_20 [label="Entry ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54", cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs"];
m0_23 [label="opts.Quiet", span="23-23", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_27 [label="builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'')", span="29-31", cluster="lambda expression", file="Program.cs", color=green, community=1];
m0_24 [label="return string.Empty;", span="25-25", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_25 [label="var fromTop = opts.GetType() == typeof(HeadOptions)", span="27-27", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_28 [label="builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'')", span="32-32", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_29 [label="return builder.ToString();", span="33-33", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_37 [label="return;", span="37-37", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_39 [label="Exit lambda expression", span="35-39", cluster="lambda expression", file="Program.cs"];
m0_38 [label="Console.WriteLine(text)", span="38-38", cluster="lambda expression", file="Program.cs", color=green, community=0];
m0_40 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m0_41 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="Program.cs"];
m0_52 [label="var lines = File.ReadAllLines(fileName)", span="56-56", cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs", color=green, community=0];
m0_61 [label="var bytes = File.ReadAllBytes(fileName)", span="66-66", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", color=green, community=0];
m0_62 [label=fromTop, span="67-67", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", color=green, community=0];
m0_69 [label="Exit ReadText.Demo.Program.MakeError()", span="74-74", cluster="ReadText.Demo.Program.MakeError()", file="Program.cs"];
m0_63 [label="return Encoding.UTF8.GetString(bytes, 0, count);", span="69-69", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", color=green, community=0];
m0_64 [label="return Encoding.UTF8.GetString(bytes, bytes.Length - count, count);", span="71-71", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", color=green, community=0];
m0_74 [label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="67-69", cluster="lambda expression", file="Program.cs"];
m0_53 [label=fromTop, span="57-57", cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs", color=green, community=0];
m0_83 [label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="85-85", cluster="lambda expression", file="Program.cs"];
m0_84 [label="return ctor.Invoke(new object[] { value });", span="86-86", cluster="lambda expression", file="Program.cs"];
m0_51 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="Program.cs"];
m0_54 [label="return string.Join(Environment.NewLine, lines.Take(count));", span="59-59", cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs", color=green, community=0];
m0_65 [label="Exit ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64", cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs"];
m0_79 [label="isFsOption ? FSharpOptionHelper.None(type) : null", span="71-71", cluster="lambda expression", file="Program.cs"];
m0_68 [label="return Tuple.Create(''\0'', ''\0'');", span="76-76", cluster="ReadText.Demo.Program.MakeError()", file="Program.cs", color=green, community=0];
m0_70 [label=reader, span="", cluster="lambda expression", file="Program.cs"];
m0_73 [label="Entry lambda expression", span="66-69", cluster="lambda expression", file="Program.cs"];
m0_75 [label="Exit lambda expression", span="66-69", cluster="lambda expression", file="Program.cs"];
m0_78 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="Program.cs"];
m0_80 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="Program.cs"];
m0_82 [label="Entry lambda expression", span="81-92", cluster="lambda expression", file="Program.cs"];
m0_85 [label=Exception, span="88-88", cluster="lambda expression", file="Program.cs"];
m0_86 [label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="90-90", cluster="lambda expression", file="Program.cs"];
m0_87 [label="Exit lambda expression", span="81-92", cluster="lambda expression", file="Program.cs"];
m0_17 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=1, file="Program.cs"];
m0_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", color=green, community=0, file="Program.cs"];
m0_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Program.cs"];
m0_18 [label="Entry Unk.ToUntypedArray", span="", cluster="Unk.ToUntypedArray", file="Program.cs"];
m0_48 [label="Entry System.Type.IsPrimitiveEx()", span="201-201", cluster="System.Type.IsPrimitiveEx()", file="Program.cs"];
m0_36 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", span="25-25", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", color=green, community=0, file="Program.cs"];
m0_26 [label="Entry Unk.MatchNothing", span="", cluster="Unk.MatchNothing", color=green, community=0, file="Program.cs"];
m0_58 [label="Entry string.ToEnum(System.Type, bool)", span="100-100", cluster="string.ToEnum(System.Type, bool)", file="Program.cs"];
m0_76 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="Program.cs"];
m0_3 [label="Action<string> printIfNotEmpty = text =>\r\n                {\r\n                    if (text.Length == 0) { return; }\r\n                    Console.WriteLine(text);\r\n                }", span="35-39", cluster="ReadText.Demo.Program.Main(string[])", file="Program.cs", color=green, community=1];
m0_10 [label="Entry CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", file="Program.cs"];
m0_56 [label="Exit ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54", cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs"];
m0_91 [label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_92 [label="object parsedValue", span="102-102", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_93 [label="parsedValue = Enum.Parse(conversionType, value, ignoreValueCase)", span="105-105", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_96 [label="Enum.IsDefined(conversionType, parsedValue)", span="111-111", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_94 [label=ArgumentException, span="107-107", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_97 [label="return parsedValue;", span="113-113", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_95 [label="throw new FormatException();", span="109-109", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_98 [label="throw new FormatException();", span="115-115", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_99 [label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs"];
m0_90 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="Program.cs"];
m0_5 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=1, file="Program.cs"];
m0_6 [label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJustOrFail(\r\n                                  new InvalidOperationException(''Non scalar properties should be sequence of type IEnumerable<T>.'')\r\n                    )", span="26-32", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs"];
m0_7 [label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture, ignoreValueCase))", span="34-34", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs"];
m0_8 [label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="36-38", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs"];
m0_9 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="Program.cs"];
m0_88 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="Program.cs"];
m0_14 [label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355", cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="Program.cs"];
m0_100 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="Program.cs"];
m0_13 [label="Entry ReadText.Demo.Program.MakeError()", span="74-74", cluster="ReadText.Demo.Program.MakeError()", file="Program.cs"];
m0_55 [label="Entry string.IsBooleanString()", span="65-65", cluster="string.IsBooleanString()", color=green, community=0, file="Program.cs"];
m0_81 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="25-25", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="Program.cs"];
m0_35 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="495-495", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="Program.cs"];
m0_89 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="Program.cs"];
m0_101 [label="Entry System.FormatException.FormatException()", span="0-0", cluster="System.FormatException.FormatException()", file="Program.cs"];
m0_43 [label="Entry System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", span="11-11", cluster="System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs"];
m0_103 [label="System.Globalization.CultureInfo", span="", file="Program.cs"];
m0_104 [label=bool, span="", file="Program.cs"];
m0_105 [label=type, span="", file="Program.cs"];
m0_106 [label=string, span="", file="Program.cs"];
m0_107 [label="System.Type", span="", file="Program.cs"];
m0_108 [label="System.Globalization.CultureInfo", span="", file="Program.cs"];
m0_109 [label=bool, span="", file="Program.cs"];
m0_110 [label=isFsOption, span="", file="Program.cs"];
m0_111 [label=type, span="", file="Program.cs"];
m0_4 -> m0_30  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_10  [key=2, style=dotted, color=green];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_34  [key=2, style=dotted];
m0_30 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_31 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_4  [key=0, style=bold, color=blue];
m0_67 -> m0_60  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_59  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_13  [key=2, style=dotted, color=green];
m0_34 -> m0_44  [key=0, style=solid];
m0_34 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_34 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_34 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_34 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_34 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_34 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=changeType];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_44  [key=3, color=darkorchid, style=bold, label="Parameter variable int unit"];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_48  [key=2, style=dotted];
m0_46 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_34  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_44  [key=2, style=dotted, color=green];
m0_47 -> m0_45  [key=2, style=dotted, color=green];
m0_60 -> m0_61  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_19  [key=2, style=dotted, color=green];
m0_71 -> m0_42  [key=1, style=dashed, color=green, label=header];
m0_71 -> m0_47  [key=1, style=dashed, color=green, label=header];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_4  [key=1, style=dashed, color=green, label="string[]"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted, color=red];
m0_1 -> m0_4  [key=2, style=dotted, color=red];
m0_1 -> m0_5  [key=2, style=dotted, color=red];
m0_1 -> m0_1  [key=3, color=green, style=bold, label="Local variable System.Func<ReadText.Demo.IOptions, string> reader"];
m0_1 -> m0_16  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_1 -> m0_17  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_1 -> m0_42  [key=1, style=dashed, color=green, label=reader];
m0_1 -> m0_47  [key=1, style=dashed, color=green, label=reader];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_2  [key=3, color=green, style=bold, label="Local variable System.Func<ReadText.Demo.IOptions, string> header"];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_23  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_2 -> m0_25  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_2 -> m0_27  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_2 -> m0_5  [key=1, style=dashed, color=green, label=header];
m0_2 -> m0_42  [key=1, style=dashed, color=green, label=header];
m0_2 -> m0_47  [key=1, style=dashed, color=green, label=header];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_25  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_22 -> m0_27  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_4  [key=2, style=dotted];
m0_21 -> m0_1  [key=3, color=green, style=bold, label="Parameter variable bool fromTop"];
m0_21 -> m0_61  [key=0, style=solid, color=green];
m0_21 -> m0_62  [key=1, style=dashed, color=green, label=bool];
m0_21 -> m0_63  [key=1, style=dashed, color=green, label=int];
m0_21 -> m0_64  [key=1, style=dashed, color=green, label=int];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_50  [key=0, style=solid, color=green];
m0_20 -> m0_1  [key=3, color=green, style=bold, label="Parameter variable bool fromTop"];
m0_20 -> m0_52  [key=0, style=solid, color=green];
m0_20 -> m0_53  [key=1, style=dashed, color=green, label=bool];
m0_20 -> m0_54  [key=1, style=dashed, color=green, label=int];
m0_20 -> m0_55  [key=1, style=dashed, color=green, label=int];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_25  [key=0, style=solid, color=green];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_27  [key=1, style=dashed, color=green, label=builder];
m0_27 -> m0_32  [key=2, style=dotted, color=green];
m0_27 -> m0_33  [key=2, style=dotted, color=green];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_41  [key=0, style=solid, color=green];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_19  [key=2, style=dotted, color=green];
m0_25 -> m0_28  [key=1, style=dashed, color=green, label=fromTop];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_28  [key=1, style=dashed, color=green, label=builder];
m0_28 -> m0_33  [key=2, style=dotted, color=green];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_29 -> m0_41  [key=0, style=solid, color=green];
m0_29 -> m0_34  [key=2, style=dotted, color=green];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=0, style=solid, color=green];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_36  [key=0, style=solid, color=green];
m0_39 -> m0_38  [key=1, style=dashed, color=green, label=string];
m0_39 -> m0_39  [key=0, style=bold, color=blue];
m0_38 -> m0_37  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_40  [key=2, style=dotted, color=green];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_40 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_41 -> m0_22  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_52 -> m0_53  [key=0, style=solid, color=green];
m0_52 -> m0_57  [key=2, style=dotted, color=green];
m0_52 -> m0_54  [key=1, style=dashed, color=green, label=lines];
m0_52 -> m0_55  [key=1, style=dashed, color=green, label=lines];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_61 -> m0_49  [key=2, style=dotted];
m0_61 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_61 -> m0_64  [key=1, style=dashed, color=green, label=bytes];
m0_61 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_61 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_61 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_61 -> m0_66  [key=2, style=dotted, color=green];
m0_61 -> m0_63  [key=1, style=dashed, color=green, label=bytes];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_62 -> m0_64  [key=0, style=solid, color=green];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_69 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_13  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_59  [key=2, style=dotted];
m0_63 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_63 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_63 -> m0_67  [key=2, style=dotted, color=green];
m0_64 -> m0_65  [key=0, style=solid, color=green];
m0_64 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=withValue];
m0_64 -> m0_67  [key=2, style=dotted, color=green];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_77  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_53 -> m0_55  [key=2, style=dotted];
m0_53 -> m0_56  [key=2, style=dotted];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_58  [key=2, style=dotted];
m0_53 -> m0_59  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_88  [key=2, style=dotted];
m0_84 -> m0_87  [key=0, style=solid];
m0_84 -> m0_89  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_20  [key=0, style=bold, color=blue];
m0_54 -> m0_51  [key=0, style=bold, color=blue];
m0_54 -> m0_41  [key=0, style=bold, color=blue];
m0_54 -> m0_56  [key=0, style=solid, color=green];
m0_54 -> m0_58  [key=2, style=dotted, color=green];
m0_54 -> m0_59  [key=2, style=dotted, color=green];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_21  [key=0, style=bold, color=blue];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid, color=green];
m0_68 -> m0_45  [key=2, style=dotted, color=green];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_70 -> m0_42  [key=1, style=dashed, color=green, label=reader];
m0_70 -> m0_47  [key=1, style=dashed, color=green, label=reader];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_80 -> m0_78  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_90  [key=2, style=dotted];
m0_87 -> m0_82  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_20  [key=2, style=dotted, color=green];
m0_17 -> m0_21  [key=2, style=dotted, color=green];
m0_42 -> m0_54  [key=0, style=solid, color=green];
m0_42 -> m0_44  [key=2, style=dotted, color=green];
m0_42 -> m0_45  [key=2, style=dotted, color=green];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_17  [key=1, style=dashed, color=green, label="ReadText.Demo.IOptions"];
m0_18 -> m0_15  [key=0, style=bold, color=blue];
m0_48 -> m0_46  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_38  [key=0, style=solid, color=green];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_31  [key=2, style=dotted, color=green];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_3  [key=3, color=green, style=bold, label="Local variable System.Action<string> printIfNotEmpty"];
m0_3 -> m0_36  [key=1, style=dashed, color=green, label=string];
m0_3 -> m0_38  [key=1, style=dashed, color=green, label=string];
m0_3 -> m0_6  [key=1, style=dashed, color=green, label=printIfNotEmpty];
m0_3 -> m0_7  [key=1, style=dashed, color=green, label=printIfNotEmpty];
m0_56 -> m0_20  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_91 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_96  [key=0, style=solid];
m0_93 -> m0_100  [key=2, style=dotted];
m0_93 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=parsedValue];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_96 -> m0_102  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_97 -> m0_99  [key=0, style=solid];
m0_95 -> m0_99  [key=0, style=solid];
m0_95 -> m0_101  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=2, style=dotted];
m0_99 -> m0_91  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_11  [key=2, style=dotted, color=green];
m0_5 -> m0_41  [key=1, style=dashed, color=green, label="lambda expression"];
m0_5 -> m0_46  [key=1, style=dashed, color=green, label="lambda expression"];
m0_5 -> m0_20  [key=1, style=dashed, color=green, label="lambda expression"];
m0_5 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_5 -> m0_8  [key=1, style=dashed, color=green, label=texts];
m0_5 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_12  [key=2, style=dotted, color=green];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_12  [key=2, style=dotted, color=green];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_13  [key=2, style=dotted, color=green];
m0_8 -> m0_14  [key=2, style=dotted, color=green];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_19  [key=2, style=dotted];
m0_8 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_36  [key=3, color=darkorchid, style=bold, label="Parameter variable bool countEmptyUnits"];
m0_9 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_5  [key=0, style=bold, color=blue];
m0_13 -> m0_68  [key=0, style=solid, color=green];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_60  [key=2, style=dotted, color=green];
m0_55 -> m0_58  [key=2, style=dotted, color=green];
m0_55 -> m0_59  [key=2, style=dotted, color=green];
m0_103 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_104 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_105 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_106 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_106 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_107 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_107 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_108 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_108 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_108 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_109 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_110 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_110 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_110 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m0_111 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_111 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=type];
}
