digraph  {
n25 [label="Ninject.Planning.Bindings.BindingConfiguration", span=""];
n0 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", label="Entry Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", span="37-37"];
n1 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", label="Exit Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration()", span="37-37"];
n2 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="Entry Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", span="43-43"];
n3 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="this.Metadata = new BindingMetadata()", span="45-45"];
n7 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="this.ScopeCallback = scopeCallback ?? StandardScopeCallbacks.Transient", span="49-49"];
n4 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="this.Parameters = new List<IParameter>()", span="46-46"];
n9 [cluster="Ninject.Planning.Bindings.BindingMetadata.BindingMetadata()", label="Entry Ninject.Planning.Bindings.BindingMetadata.BindingMetadata()", span="21-21"];
n5 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="this.ActivationActions = new List<Action<IContext, object>>()", span="47-47"];
n10 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n6 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="this.DeactivationActions = new List<Action<IContext, object>>()", span="48-48"];
n8 [cluster="Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", label="Exit Ninject.Planning.Bindings.BindingConfiguration.BindingConfiguration(System.Func<Ninject.Activation.IContext, object>)", span="43-43"];
n11 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", label="Entry Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", span="110-110"];
n12 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", label="Ensure.ArgumentNotNull(context, ''context'')", span="112-112"];
n13 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", label="return this.ProviderCallback(context);", span="113-113"];
n15 [cluster="Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", label="Entry Ninject.Infrastructure.Ensure.ArgumentNotNull(object, string)", span="17-17"];
n14 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", label="Exit Ninject.Planning.Bindings.BindingConfiguration.GetProvider(Ninject.Activation.IContext)", span="110-110"];
n16 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n17 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", label="Entry Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", span="121-121"];
n18 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", label="Ensure.ArgumentNotNull(context, ''context'')", span="123-123"];
n19 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", label="return this.ScopeCallback(context);", span="124-124"];
n20 [cluster="Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", label="Exit Ninject.Planning.Bindings.BindingConfiguration.GetScope(Ninject.Activation.IContext)", span="121-121"];
n21 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", label="Entry Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", span="132-132"];
n22 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", label="Ensure.ArgumentNotNull(request, ''request'')", span="134-134"];
n23 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", label="return this.Condition == null || this.Condition(request);", span="135-135"];
n24 [cluster="Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", label="Exit Ninject.Planning.Bindings.BindingConfiguration.Matches(Ninject.Activation.IRequest)", span="132-132"];
m0_9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserProperties.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m0_5 [cluster="lambda expression", file="ParserProperties.cs", label="Entry lambda expression", span="20-24"];
m0_6 [cluster="lambda expression", color=green, community=0, file="ParserProperties.cs", label="1: var result = Sut.ParseArguments<Scalar_String_Mutable>(new[] { ''--stringvalue'', x })", span="22-22"];
m0_7 [cluster="lambda expression", color=green, community=0, file="ParserProperties.cs", label="1: ((Parsed<Scalar_String_Mutable>)result).Value.StringValue.ShouldBeEquivalentTo(x)", span="23-23"];
m0_8 [cluster="lambda expression", file="ParserProperties.cs", label="Exit lambda expression", span="20-24"];
m0_3 [cluster="Unk.>", file="ParserProperties.cs", label="Entry Unk.>", span=""];
m0_4 [cluster="Unk.QuickCheckThrowOnFailure", file="ParserProperties.cs", label="Entry Unk.QuickCheckThrowOnFailure", span=""];
m0_10 [cluster="Unk.ShouldBeEquivalentTo", file="ParserProperties.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m0_0 [cluster="CommandLine.Tests.Properties.ParserProperties.Parsing_a_string_returns_original_string()", file="ParserProperties.cs", label="Entry CommandLine.Tests.Properties.ParserProperties.Parsing_a_string_returns_original_string()", span="17-17"];
m0_1 [cluster="CommandLine.Tests.Properties.ParserProperties.Parsing_a_string_returns_original_string()", color=green, community=1, file="ParserProperties.cs", label="0: Prop.ForAll<string>(\r\n                x =>\r\n                {\r\n                    var result = Sut.ParseArguments<Scalar_String_Mutable>(new[] { ''--stringvalue'', x });\r\n                    ((Parsed<Scalar_String_Mutable>)result).Value.StringValue.ShouldBeEquivalentTo(x);\r\n                }).QuickCheckThrowOnFailure()", span="19-24"];
m0_2 [cluster="CommandLine.Tests.Properties.ParserProperties.Parsing_a_string_returns_original_string()", file="ParserProperties.cs", label="Exit CommandLine.Tests.Properties.ParserProperties.Parsing_a_string_returns_original_string()", span="17-17"];
n25 -> n3  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n4  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n5  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n6  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n7  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n13  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n19  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n25 -> n23  [color=darkseagreen4, key=1, label="Ninject.Planning.Bindings.BindingConfiguration", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [color=darkseagreen4, key=1, label="System.Func<Ninject.Activation.IContext, object>", style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n8 -> n2  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=2, style=dotted];
n14 -> n11  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n15  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n16  [key=2, style=dotted];
n20 -> n17  [color=blue, key=0, style=bold];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [color=darkseagreen4, key=1, label="Ninject.Activation.IRequest", style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n15  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n16  [key=2, style=dotted];
n24 -> n21  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=1, label=string, style=dashed];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_9  [color=green, key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_10  [color=green, key=2, style=dotted];
m0_8 -> m0_5  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_1 -> m0_5  [color=green, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
}
