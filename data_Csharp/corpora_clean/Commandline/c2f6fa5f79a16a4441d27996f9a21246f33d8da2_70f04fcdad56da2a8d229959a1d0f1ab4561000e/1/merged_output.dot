digraph  {
m1_35 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m1_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="40-40"];
m1_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m1_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="48-48"];
m1_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="44-44"];
m1_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_34 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m1_9 [cluster="OptionSpecification.cstr", file="SpecificationExtensions.cs", label="Entry OptionSpecification.cstr", span=""];
m1_33 [cluster="System.Type.ToDescriptorKind()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m1_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="13-13"];
m1_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="18-18"];
m1_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_18 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="42-42"];
m1_19 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="42-42"];
m1_20 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="42-42"];
m1_22 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_23 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptorKind()", span="53-53"];
m1_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="58-58"];
m1_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="59-59"];
m1_24 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="TypeDescriptorKind.Scalar", span="55-55"];
m1_26 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="TypeDescriptorKind.Sequence", span="57-57"];
m1_25 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="56-56"];
m1_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="60-60"];
m1_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="62-62"];
m1_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="67-67"];
m1_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_36 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="70-70"];
m1_37 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Min == -1;", span="72-72"];
m1_38 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="70-70"];
m1_17 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m1_16 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m1_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m1_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues);", span="23-35"];
m1_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m1_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_39 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="75-75"];
m1_40 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Max == -1;", span="77-77"];
m1_41 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="75-75"];
m1_42 [file="SpecificationExtensions.cs", label=guard, span=""];
m3_64 [cluster="Unk.SingleOrDefault", file="ValueSpecification.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62"];
m3_43 [cluster="Unk.>", file="ValueSpecification.cs", label="Entry Unk.>", span=""];
m3_42 [cluster="Unk.Any", file="ValueSpecification.cs", label="Entry Unk.Any", span=""];
m3_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueSpecification.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m3_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="31-31"];
m3_4 [cluster="lambda expression", color=red, community=0, file="ValueSpecification.cs", label="3: Entry lambda expression", span="19-24"];
m3_5 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="17: var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="21-21"];
m3_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m3_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="ValueSpecification.cs", label="19: return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-28"];
m3_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m3_30 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ValueSpecification.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m3_37 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ValueSpecification.cs", label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="87-87"];
m3_62 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ValueSpecification.cs", label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="92-98"];
m3_63 [cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ValueSpecification.cs", label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="87-87"];
m3_45 [cluster="NotParsed<object>.cstr", file="ValueSpecification.cs", label="Entry NotParsed<object>.cstr", span=""];
m3_47 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ValueSpecification.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
m3_66 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ValueSpecification.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m3_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="var verbs = Verb.SelectFromTypes(types)", span="38-38"];
m3_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="arguments.Empty()", span="40-40"];
m3_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="return new NotParsed<object>(new NullInstance(), types, new[] { new NoVerbSelectedError() });", span="42-42"];
m3_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="nameComparer.Equals(''help'', arguments.First()) || nameComparer.Equals(''--help'', arguments.First())", span="45-45"];
m3_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer)\r\n                    });", span="47-53"];
m3_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="nameComparer.Equals(''version'', arguments.First()) || nameComparer.Equals(''--version'', arguments.First())", span="56-56"];
m3_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        new VersionRequestedError()\r\n                    });", span="58-61"];
m3_26 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="return MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="64-64"];
m3_27 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="31-31"];
m3_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ValueSpecification.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m3_38 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ValueSpecification.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421"];
m3_34 [cluster="System.StringComparer.Equals(string, string)", file="ValueSpecification.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m3_65 [cluster="Unk.ToMaybe", file="ValueSpecification.cs", label="Entry Unk.ToMaybe", span=""];
m3_54 [cluster="Unk.Single", file="ValueSpecification.cs", label="Entry Unk.Single", span=""];
m3_6 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="9: var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="22-22"];
m3_71 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="96-96"];
m3_11 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="21-21"];
m3_12 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="16: NameLookup.Contains(name, optionSpecs, nameComparer)", span="21-21"];
m3_13 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="21-21"];
m3_7 [cluster="lambda expression", file="ValueSpecification.cs", label="CommandLine.Core.ValueSpecification", span=""];
m3_15 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="22-22"];
m3_16 [cluster="lambda expression", color=green, community=0, file="ValueSpecification.cs", label="9: NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="22-22"];
m3_17 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="22-22"];
m3_8 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="19-24"];
m3_49 [cluster="lambda expression", file="ValueSpecification.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="74-74"];
m3_57 [cluster="lambda expression", file="ValueSpecification.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="76-76"];
m3_69 [cluster="lambda expression", file="ValueSpecification.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="93-93"];
m3_52 [cluster="lambda expression", file="ValueSpecification.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="76-76"];
m3_48 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="74-74"];
m3_51 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="76-76"];
m3_59 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="83-83"];
m3_50 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="74-74"];
m3_56 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="76-76"];
m3_58 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="76-76"];
m3_68 [cluster="lambda expression", file="ValueSpecification.cs", label="Entry lambda expression", span="93-93"];
m3_70 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="93-93"];
m3_53 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="76-76"];
m3_61 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="83-83"];
m3_60 [cluster="lambda expression", file="ValueSpecification.cs", label="v.Item2", span="83-83"];
m3_72 [cluster="lambda expression", file="ValueSpecification.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="96-96"];
m3_73 [cluster="lambda expression", file="ValueSpecification.cs", label="Exit lambda expression", span="96-96"];
m3_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m3_46 [cluster="Unk.Select", file="ValueSpecification.cs", label="Entry Unk.Select", span=""];
m3_32 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="ValueSpecification.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m3_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m3_67 [cluster="Unk.Return", file="ValueSpecification.cs", label="Entry Unk.Return", span=""];
m3_39 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="67-67"];
m3_40 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(() => verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : new NotParsed<object>(\r\n                    new NullInstance(),\r\n                    verbs.Select(v => v.Item2),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) });", span="74-84"];
m3_41 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="67-67"];
m3_55 [cluster="Unk.AutoDefault", file="ValueSpecification.cs", label="Entry Unk.AutoDefault", span=""];
m3_31 [cluster="CommandLine.NullInstance.NullInstance()", file="ValueSpecification.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m3_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ValueSpecification.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34"];
m3_28 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m3_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m3_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ValueSpecification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_74 [cluster="HelpVerbRequestedError.cstr", file="ValueSpecification.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m3_75 [file="ValueSpecification.cs", label="System.StringComparer", span=""];
m3_76 [file="ValueSpecification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m3_77 [file="ValueSpecification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m3_78 [file="ValueSpecification.cs", label="System.StringComparer", span=""];
m3_80 [file="ValueSpecification.cs", label=string, span=""];
m3_81 [file="ValueSpecification.cs", label="System.StringComparer", span=""];
m3_79 [file="ValueSpecification.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_10 -> m1_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_10 -> m1_10  [color=green, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_11  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_12 -> m1_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_10  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_3  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [key=0, style=solid];
m1_23 -> m1_33  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=min, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label=max, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_25 -> m1_32  [key=0, style=solid];
m1_25 -> m1_34  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_34  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_22  [color=blue, key=0, style=bold];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_36  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=2, style=dotted];
m1_7 -> m1_7  [color=darkorchid, key=3, label="Parameter variable System.Func<TSource, TSource, TResult> selector", style=bold];
m1_8 -> m1_6  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_39  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> ToEnumerable", style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_42 -> m1_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m3_3 -> m3_4  [color=red, key=0, style=solid];
m3_3 -> m3_19  [key=0, style=solid];
m3_3 -> m3_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m3_3 -> m3_26  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_0  [color=red, key=2, style=dotted];
m3_4 -> m3_6  [color=red, key=2, style=dotted];
m3_4 -> m3_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_5 -> m3_3  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_9  [color=green, key=2, style=dotted];
m3_5 -> m3_11  [color=green, key=1, label="lambda expression", style=dashed];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_6  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=2, style=dotted];
m3_1 -> m3_4  [color=green, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_37 -> m3_62  [key=0, style=solid];
m3_37 -> m3_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=2, style=dotted];
m3_62 -> m3_65  [key=2, style=dotted];
m3_62 -> m3_66  [key=2, style=dotted];
m3_62 -> m3_67  [key=2, style=dotted];
m3_62 -> m3_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_62 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_63 -> m3_37  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_28  [key=2, style=dotted];
m3_19 -> m3_23  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m3_19 -> m3_26  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_20 -> m3_29  [key=2, style=dotted];
m3_21 -> m3_27  [key=0, style=solid];
m3_21 -> m3_30  [key=2, style=dotted];
m3_21 -> m3_31  [key=2, style=dotted];
m3_21 -> m3_32  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_33  [key=2, style=dotted];
m3_22 -> m3_34  [key=2, style=dotted];
m3_23 -> m3_27  [key=0, style=solid];
m3_23 -> m3_30  [key=2, style=dotted];
m3_23 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_35  [key=2, style=dotted];
m3_23 -> m3_36  [key=2, style=dotted];
m3_23 -> m3_37  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_24 -> m3_34  [key=2, style=dotted];
m3_25 -> m3_27  [key=0, style=solid];
m3_25 -> m3_30  [key=2, style=dotted];
m3_25 -> m3_31  [key=2, style=dotted];
m3_25 -> m3_38  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_39  [key=2, style=dotted];
m3_27 -> m3_3  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_10  [color=green, key=2, style=dotted];
m3_6 -> m3_15  [color=green, key=1, label="lambda expression", style=dashed];
m3_71 -> m3_72  [key=0, style=solid];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_14  [color=green, key=2, style=dotted];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_1  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m3_15 -> m3_16  [color=green, key=0, style=solid];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_16 -> m3_18  [color=green, key=2, style=dotted];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_8 -> m3_4  [color=blue, key=0, style=bold];
m3_49 -> m3_33  [key=2, style=dotted];
m3_49 -> m3_34  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_57 -> m3_33  [key=2, style=dotted];
m3_57 -> m3_34  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_69 -> m3_34  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=2, style=dotted];
m3_52 -> m3_55  [key=2, style=dotted];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_50 -> m3_48  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_58 -> m3_56  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_70 -> m3_68  [color=blue, key=0, style=bold];
m3_53 -> m3_51  [color=blue, key=0, style=bold];
m3_61 -> m3_59  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_74  [key=2, style=dotted];
m3_73 -> m3_71  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_39 -> m3_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m3_39 -> m3_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_40 -> m3_31  [key=2, style=dotted];
m3_40 -> m3_33  [key=2, style=dotted];
m3_40 -> m3_35  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=2, style=dotted];
m3_40 -> m3_43  [key=2, style=dotted];
m3_40 -> m3_44  [key=2, style=dotted];
m3_40 -> m3_45  [key=2, style=dotted];
m3_40 -> m3_46  [key=2, style=dotted];
m3_40 -> m3_47  [key=2, style=dotted];
m3_40 -> m3_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_40 -> m3_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_40 -> m3_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_41 -> m3_39  [color=blue, key=0, style=bold];
m3_75 -> m3_5  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_75 -> m3_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_75 -> m3_6  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_75 -> m3_16  [color=green, key=1, label="System.StringComparer", style=dashed];
m3_76 -> m3_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_76 -> m3_16  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_77 -> m3_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_77 -> m3_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_77 -> m3_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_78 -> m3_49  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_78 -> m3_57  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_78 -> m3_52  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_80 -> m3_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_81 -> m3_69  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_79 -> m3_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
}
