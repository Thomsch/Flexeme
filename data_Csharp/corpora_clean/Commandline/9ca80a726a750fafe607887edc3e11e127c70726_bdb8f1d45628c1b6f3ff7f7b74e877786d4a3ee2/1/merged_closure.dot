digraph  {
m1_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ArgumentsExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_0 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ArgumentsExtensions.cs", label="Entry CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m1_1 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ArgumentsExtensions.cs", label="return preprocessorLookup.TryHead().Return(\r\n                func =>\r\n                    {\r\n                        var errors = func(arguments);\r\n                        return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());\r\n                    },\r\n                Enumerable.Empty<Error>());", span="17-25"];
m1_2 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ArgumentsExtensions.cs", label="Exit CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m1_6 [cluster="lambda expression", file="ArgumentsExtensions.cs", label="Entry lambda expression", span="18-24"];
m1_7 [cluster="lambda expression", file="ArgumentsExtensions.cs", label="var errors = func(arguments)", span="20-20"];
m1_8 [cluster="lambda expression", file="ArgumentsExtensions.cs", label="return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());", span="21-23"];
m1_9 [cluster="lambda expression", file="ArgumentsExtensions.cs", label="Exit lambda expression", span="18-24"];
m1_5 [cluster="Unk.Return", file="ArgumentsExtensions.cs", label="Entry Unk.Return", span=""];
m1_10 [cluster="Unk.func", file="ArgumentsExtensions.cs", label="Entry Unk.func", span=""];
m1_13 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ArgumentsExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m1_11 [cluster="Unk.Any", file="ArgumentsExtensions.cs", label="Entry Unk.Any", span=""];
m1_3 [cluster="System.Collections.Generic.IEnumerable<T>.TryHead<T>()", file="ArgumentsExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TryHead<T>()", span="318-318"];
m1_12 [cluster="System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", file="ArgumentsExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", span="361-361"];
m1_14 [file="ArgumentsExtensions.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_15 [file="ArgumentsExtensions.cs", label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", span=""];
m3_0 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="18-18"];
m3_1 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="18-18"];
m3_2 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="29-29"];
m3_3 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="29-29"];
m3_8 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="68-68"];
m3_9 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="68-68"];
m3_6 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="54-54"];
m3_7 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="54-54"];
m3_4 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="41-41"];
m3_5 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="41-41"];
m4_8 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68"];
m4_9 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68"];
m4_2 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29"];
m4_3 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29"];
m4_6 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54"];
m4_7 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54"];
m4_0 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18"];
m4_1 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18"];
m4_4 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41"];
m4_5 [cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs", label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41"];
m5_0 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="Entry CommandLine.BaseAttribute.BaseAttribute()", span="20-20"];
m5_1 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="min = -1", span="22-22"];
m5_2 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="max = -1", span="23-23"];
m5_3 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="helpText = string.Empty", span="24-24"];
m5_4 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="metaValue = string.Empty", span="25-25"];
m5_5 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="BaseAttribute.cs", label="Exit CommandLine.BaseAttribute.BaseAttribute()", span="20-20"];
m5_6 [file="BaseAttribute.cs", label="CommandLine.BaseAttribute", span=""];
m6_34 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m6_36 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="years.Length == 1", span="164-164"];
m6_37 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166"];
m6_38 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169"];
m6_40 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i < years.Length", span="170-170"];
m6_41 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172"];
m6_43 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="next < years.Length", span="174-174"];
m6_44 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176"];
m6_39 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var i = 0", span="170-170"];
m6_46 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return yearsPart.ToString();", span="180-180"];
m6_42 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var next = i + 1", span="173-173"];
m6_45 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i++", span="170-170"];
m6_47 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m6_33 [cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m6_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m6_19 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m6_32 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_20 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m6_21 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="this.attribute = attribute", span="86-86"];
m6_22 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m6_31 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m6_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m6_5 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="string.IsNullOrWhiteSpace(author)", span="62-62"];
m6_7 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="copyrightYears.Length == 0", span="63-63"];
m6_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.isSymbolUpper = isSymbolUpper", span="66-66"];
m6_11 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.author = author", span="67-67"];
m6_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.copyrightYears = copyrightYears", span="68-68"];
m6_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69"];
m6_6 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentException(''author'');", span="62-62"];
m6_8 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63"];
m6_9 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="int ExtraLength = 10", span="65-65"];
m6_14 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m6_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m6_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m6_48 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m6_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="attribute != null", span="140-140"];
m6_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return attribute.Copyright;", span="142-142"];
m6_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return new StringBuilder(builderSize)\n                .Append(CopyrightWord)\n                .Append(' ')\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\n                .Append(' ')\n                .Append(FormatYears(copyrightYears))\n                .Append(' ')\n                .Append(author)\n                .ToString();", span="145-153"];
m6_30 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m6_23 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m6_24 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="return info.ToString();", span="131-131"];
m6_25 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m6_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m6_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m6_35 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_17 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m6_16 [cluster="System.ArgumentException.ArgumentException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m6_15 [cluster="string.IsNullOrWhiteSpace(string)", file="CopyrightInfo.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_49 [file="CopyrightInfo.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m7_0 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10"];
m7_1 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="var index = -1", span="12-12"];
m7_2 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label=source, span="13-13"];
m7_4 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="predicate(item)", span="16-16"];
m7_3 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="index++", span="15-15"];
m7_5 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="return index;", span="21-21"];
m7_6 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10"];
m7_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m7_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m7_14 [cluster="System.Array.CreateInstance(System.Type, int)", file="EnumerableExtensions`1.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m7_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m7_17 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31"];
m7_18 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="return !source.Any();", span="33-33"];
m7_19 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31"];
m7_16 [cluster="System.Array.CopyTo(System.Array, int)", file="EnumerableExtensions`1.cs", label="Entry System.Array.CopyTo(System.Array, int)", span="0-0"];
m7_7 [cluster="System.Func<T, TResult>.Invoke(T)", file="EnumerableExtensions`1.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_8 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24"];
m7_9 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="var array = Array.CreateInstance(type, value.Count())", span="26-26"];
m7_10 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="value.ToArray().CopyTo(array, 0)", span="27-27"];
m7_11 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="return array;", span="28-28"];
m7_12 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24"];
m8_3 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="Entry CommandLine.Error.Equals(object)", span="91-91"];
m8_4 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="var other = obj as Error", span="93-93"];
m8_7 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="return base.Equals(obj);", span="99-99"];
m8_5 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="other != null", span="94-94"];
m8_6 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="return Equals(other);", span="96-96"];
m8_8 [cluster="CommandLine.Error.Equals(object)", file="Error.cs", label="Exit CommandLine.Error.Equals(object)", span="91-91"];
m8_68 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="Error.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="304-304"];
m8_69 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="Error.cs", label="this.setName = setName", span="307-307"];
m8_70 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="Error.cs", label="Exit CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="304-304"];
m8_9 [cluster="CommandLine.Error.Equals(CommandLine.Error)", file="Error.cs", label="Entry CommandLine.Error.Equals(CommandLine.Error)", span="116-116"];
m8_15 [cluster="CommandLine.Error.Equals(CommandLine.Error)", file="Error.cs", label="other == null", span="118-118"];
m8_17 [cluster="CommandLine.Error.Equals(CommandLine.Error)", file="Error.cs", label="return Tag.Equals(other.Tag);", span="123-123"];
m8_16 [cluster="CommandLine.Error.Equals(CommandLine.Error)", file="Error.cs", label="return false;", span="120-120"];
m8_18 [cluster="CommandLine.Error.Equals(CommandLine.Error)", file="Error.cs", label="Exit CommandLine.Error.Equals(CommandLine.Error)", span="116-116"];
m8_42 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Error.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m8_43 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Error.cs", label="Exit CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m8_66 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m8_67 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m8_11 [cluster="CommandLine.Error.GetHashCode()", file="Error.cs", label="Entry CommandLine.Error.GetHashCode()", span="106-106"];
m8_12 [cluster="CommandLine.Error.GetHashCode()", file="Error.cs", label="return Tag.GetHashCode();", span="108-108"];
m8_13 [cluster="CommandLine.Error.GetHashCode()", file="Error.cs", label="Exit CommandLine.Error.GetHashCode()", span="106-106"];
m8_77 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="Error.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m8_78 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="Error.cs", label="Exit CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m8_81 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Error.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m8_82 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Error.cs", label="this.verb = verb", span="386-386"];
m8_83 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Error.cs", label="this.type = type", span="387-387"];
m8_84 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Error.cs", label="this.matched = matched", span="388-388"];
m8_85 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Error.cs", label="Exit CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m8_88 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="Error.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m8_89 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="Error.cs", label="Exit CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m8_73 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m8_74 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m8_19 [cluster="System.Enum.Equals(object)", file="Error.cs", label="Entry System.Enum.Equals(object)", span="0-0"];
m8_53 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", file="Error.cs", label="Entry CommandLine.NamedError.Equals(CommandLine.NamedError)", span="253-253"];
m8_57 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", file="Error.cs", label="other == null", span="255-255"];
m8_59 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", file="Error.cs", label="return Tag.Equals(other.Tag) && NameInfo.Equals(other.NameInfo);", span="260-260"];
m8_58 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", file="Error.cs", label="return false;", span="257-257"];
m8_60 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", file="Error.cs", label="Exit CommandLine.NamedError.Equals(CommandLine.NamedError)", span="253-253"];
m8_32 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", file="Error.cs", label="Entry CommandLine.TokenError.Equals(CommandLine.TokenError)", span="180-180"];
m8_37 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", file="Error.cs", label="other == null", span="182-182"];
m8_39 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", file="Error.cs", label="return Tag.Equals(other.Tag) && Token.Equals(other.Token);", span="187-187"];
m8_38 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", file="Error.cs", label="return false;", span="184-184"];
m8_40 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", file="Error.cs", label="Exit CommandLine.TokenError.Equals(CommandLine.TokenError)", span="180-180"];
m8_75 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="346-346"];
m8_76 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="346-346"];
m8_26 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="Entry CommandLine.TokenError.Equals(object)", span="155-155"];
m8_27 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="var other = obj as TokenError", span="157-157"];
m8_30 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="return base.Equals(obj);", span="163-163"];
m8_28 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="other != null", span="158-158"];
m8_29 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="return Equals(other);", span="160-160"];
m8_31 [cluster="CommandLine.TokenError.Equals(object)", file="Error.cs", label="Exit CommandLine.TokenError.Equals(object)", span="155-155"];
m8_62 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m8_63 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m8_54 [cluster="CommandLine.NamedError.GetHashCode()", file="Error.cs", label="Entry CommandLine.NamedError.GetHashCode()", span="243-243"];
m8_55 [cluster="CommandLine.NamedError.GetHashCode()", file="Error.cs", label="return new {Tag, NameInfo}.GetHashCode();", span="245-245"];
m8_56 [cluster="CommandLine.NamedError.GetHashCode()", file="Error.cs", label="Exit CommandLine.NamedError.GetHashCode()", span="243-243"];
m8_36 [cluster="object.GetHashCode()", file="Error.cs", label="Entry object.GetHashCode()", span="0-0"];
m8_33 [cluster="CommandLine.TokenError.GetHashCode()", file="Error.cs", label="Entry CommandLine.TokenError.GetHashCode()", span="170-170"];
m8_34 [cluster="CommandLine.TokenError.GetHashCode()", file="Error.cs", label="return new {Tag, Token}.GetHashCode();", span="172-172"];
m8_35 [cluster="CommandLine.TokenError.GetHashCode()", file="Error.cs", label="Exit CommandLine.TokenError.GetHashCode()", span="170-170"];
m8_61 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m8_86 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Error.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m8_87 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Error.cs", label="Exit CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m8_64 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="Error.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m8_65 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="Error.cs", label="Exit CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m8_71 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m8_72 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m8_41 [cluster="string.Equals(string)", file="Error.cs", label="Entry string.Equals(string)", span="0-0"];
m8_14 [cluster="System.Enum.GetHashCode()", file="Error.cs", label="Entry System.Enum.GetHashCode()", span="0-0"];
m8_0 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", file="Error.cs", label="Entry CommandLine.Error.Error(CommandLine.ErrorType)", span="73-73"];
m8_1 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", file="Error.cs", label="this.tag = tag", span="75-75"];
m8_2 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", file="Error.cs", label="Exit CommandLine.Error.Error(CommandLine.ErrorType)", span="73-73"];
m8_44 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", file="Error.cs", label="Entry CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="209-209"];
m8_45 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", file="Error.cs", label="this.nameInfo = nameInfo", span="212-212"];
m8_46 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", file="Error.cs", label="Exit CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="209-209"];
m8_10 [cluster="object.Equals(object)", file="Error.cs", label="Entry object.Equals(object)", span="0-0"];
m8_79 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="Error.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m8_80 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="Error.cs", label="Exit CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m8_25 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Error.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_47 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="Entry CommandLine.NamedError.Equals(object)", span="228-228"];
m8_48 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="var other = obj as NamedError", span="230-230"];
m8_51 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="return base.Equals(obj);", span="236-236"];
m8_49 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="other != null", span="231-231"];
m8_50 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="return Equals(other);", span="233-233"];
m8_52 [cluster="CommandLine.NamedError.Equals(object)", file="Error.cs", label="Exit CommandLine.NamedError.Equals(object)", span="228-228"];
m8_20 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", file="Error.cs", label="Entry CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="134-134"];
m8_21 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", file="Error.cs", label="token == null", span="137-137"];
m8_23 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", file="Error.cs", label="this.token = token", span="139-139"];
m8_22 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", file="Error.cs", label="throw new ArgumentNullException(''token'');", span="137-137"];
m8_24 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", file="Error.cs", label="Exit CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="134-134"];
m8_90 [file="Error.cs", label="CommandLine.Error", span=""];
m8_91 [file="Error.cs", label="CommandLine.TokenError", span=""];
m8_92 [file="Error.cs", label="CommandLine.NamedError", span=""];
m8_93 [file="Error.cs", label="CommandLine.MutuallyExclusiveSetError", span=""];
m8_94 [file="Error.cs", label="CommandLine.HelpVerbRequestedError", span=""];
m9_0 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="ErrorExtensions.cs", label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m9_1 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="ErrorExtensions.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", span="35-35"];
m9_2 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="ErrorExtensions.cs", label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m9_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ErrorExtensions.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m9_4 [file="ErrorExtensions.cs", label="CommandLine.Tests.Mocks.OptionsBase", span=""];
m10_0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="23-23"];
m10_1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="string.IsNullOrEmpty(helpText)", span="25-25"];
m10_3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="formatStyles == null", span="26-26"];
m10_5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="sample == null", span="27-27"];
m10_7 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.helpText = helpText", span="29-29"];
m10_8 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.formatStyles = formatStyles", span="30-30"];
m10_9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.sample = sample", span="31-31"];
m10_2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="25-25"];
m10_4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentNullException(''formatStyles'');", span="26-26"];
m10_6 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentNullException(''sample'');", span="27-27"];
m10_10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="23-23"];
m10_16 [cluster="CommandLine.Text.Example.Example(string, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, object)", span="50-50"];
m10_17 [cluster="CommandLine.Text.Example.Example(string, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, object)", span="50-50"];
m10_24 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="109-109"];
m10_30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="other == null", span="111-111"];
m10_32 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="116-118"];
m10_31 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="return false;", span="113-113"];
m10_33 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="109-109"];
m10_26 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="Entry CommandLine.Text.Example.GetHashCode()", span="99-99"];
m10_27 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="101-101"];
m10_28 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="Exit CommandLine.Text.Example.GetHashCode()", span="99-99"];
m10_14 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="40-40"];
m10_15 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="40-40"];
m10_25 [cluster="object.Equals(object)", file="Example.cs", label="Entry object.Equals(object)", span="0-0"];
m10_40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="Example.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m10_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Example.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m10_36 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="124-124"];
m10_37 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="126-128"];
m10_38 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="124-124"];
m10_34 [cluster="string.Equals(string)", file="Example.cs", label="Entry string.Equals(string)", span="0-0"];
m10_11 [cluster="string.IsNullOrEmpty(string)", file="Example.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_12 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Example.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_35 [cluster="Unk.SequenceEqual", file="Example.cs", label="Entry Unk.SequenceEqual", span=""];
m10_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Example.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_18 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="Entry CommandLine.Text.Example.Equals(object)", span="84-84"];
m10_19 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="var other = obj as Example", span="86-86"];
m10_22 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="return base.Equals(obj);", span="92-92"];
m10_20 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="other != null", span="87-87"];
m10_21 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="return Equals(other);", span="89-89"];
m10_23 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="Exit CommandLine.Text.Example.Equals(object)", span="84-84"];
m10_29 [cluster="object.GetHashCode()", file="Example.cs", label="Entry object.GetHashCode()", span="0-0"];
m10_41 [file="Example.cs", label="CommandLine.Text.Example", span=""];
m11_4 [cluster="System.Exception.GetType()", file="ExceptionExtensions.cs", label="Entry System.Exception.GetType()", span="0-0"];
m11_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ExceptionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m11_0 [cluster="CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", file="ExceptionExtensions.cs", label="Entry CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", span="11-11"];
m11_1 [cluster="CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", file="ExceptionExtensions.cs", label="!validExceptions.Contains(exception.GetType())", span="13-13"];
m11_2 [cluster="CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", file="ExceptionExtensions.cs", label="throw exception;", span="15-15"];
m11_3 [cluster="CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", file="ExceptionExtensions.cs", label="Exit CommandLine.Infrastructure.ExceptionExtensions.RethrowWhenAbsentIn(System.Exception, System.Collections.Generic.IEnumerable<System.Type>)", span="11-11"];
m12_0 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m12_1 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="this.stringValue = stringValue", span="15-15"];
m12_2 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="this.intSequence = intSequence", span="16-16"];
m12_3 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="this.boolValue = boolValue", span="17-17"];
m12_4 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="this.longValue = longValue", span="18-18"];
m12_5 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="FakeImmutableOptions.cs", label="Exit CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m12_6 [file="FakeImmutableOptions.cs", label="CommandLine.Tests.Fakes.FakeImmutableOptions", span=""];
m41_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m41_18 [cluster="Unk.get_IsSome", file="FSharpOptionHelperTests.cs", label="Entry Unk.get_IsSome", span=""];
m41_5 [cluster="Unk.BeTrue", file="FSharpOptionHelperTests.cs", label="Entry Unk.BeTrue", span=""];
m41_24 [cluster="Unk.get_IsNone", file="FSharpOptionHelperTests.cs", label="Entry Unk.get_IsNone", span=""];
m41_0 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="14-14"];
m41_1 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs", label="ReflectionHelper.IsFSharpOptionType(TestData.PropertyType)\r\n                .Should().BeTrue()", span="16-17"];
m41_2 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="FSharpOptionHelperTests.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="14-14"];
m41_6 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", span="21-21"];
m41_7 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs", label="FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType).FullName\r\n                .ShouldBeEquivalentTo(''System.String'')", span="23-24"];
m41_8 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="FSharpOptionHelperTests.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", span="21-21"];
m41_19 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", span="37-37"];
m41_20 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs", label="var expected = FSharpOptionHelper.None(FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType))", span="39-39"];
m41_21 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs", label="FSharpOption<string>.get_IsNone((FSharpOption<string>)expected).Should().BeTrue()", span="41-41"];
m41_22 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", file="FSharpOptionHelperTests.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_none()", span="37-37"];
m41_17 [cluster="Unk.>", file="FSharpOptionHelperTests.cs", label="Entry Unk.>", span=""];
m41_16 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m41_23 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m41_4 [cluster="Unk.Should", file="FSharpOptionHelperTests.cs", label="Entry Unk.Should", span=""];
m41_11 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", span="28-28"];
m41_12 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs", label="var expected = FSharpOptionHelper.Some(FSharpOptionHelper.GetUnderlyingType(TestData.PropertyType), ''with data'')", span="30-30"];
m41_13 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs", label="expected.Should().BeOfType<FSharpOption<string>>()", span="32-32"];
m41_14 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs", label="FSharpOption<string>.get_IsSome((FSharpOption<string>)expected).Should().BeTrue()", span="33-33"];
m41_15 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", file="FSharpOptionHelperTests.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Create_some()", span="28-28"];
m41_10 [cluster="Unk.ShouldBeEquivalentTo", file="FSharpOptionHelperTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m41_9 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m41_25 [file="FSharpOptionHelperTests.cs", label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests", span=""];
m42_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="90-90"];
m42_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="string.IsNullOrWhiteSpace(''message'')", span="92-92"];
m42_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="writer == null", span="93-93"];
m42_32 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="writer.WriteLine(\n                new StringBuilder(programName.Length + message.Length + 2)\n                    .Append(programName)\n                    .Append('': '')\n                    .Append(message)\n                    .ToString())", span="95-100"];
m42_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="throw new ArgumentException(''message'');", span="92-92"];
m42_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="throw new ArgumentNullException(''writer'');", span="93-93"];
m42_33 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="90-90"];
m42_11 [cluster="Unk.GetFileNameWithoutExtension", file="HeadingInfo.cs", label="Entry Unk.GetFileNameWithoutExtension", span=""];
m42_35 [cluster="System.IO.TextWriter.WriteLine(string)", file="HeadingInfo.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m42_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="109-109"];
m42_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Out)", span="111-111"];
m42_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="109-109"];
m42_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m42_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="string.IsNullOrWhiteSpace(''programName'')", span="29-29"];
m42_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="this.programName = programName", span="31-31"];
m42_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="this.version = version", span="32-32"];
m42_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="throw new ArgumentException(''programName'');", span="29-29"];
m42_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m42_23 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m42_15 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="63-63"];
m42_16 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="return info.ToString();", span="65-65"];
m42_17 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="63-63"];
m42_18 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="72-72"];
m42_19 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="var isVersionNull = string.IsNullOrEmpty(version)", span="74-74"];
m42_20 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="return new StringBuilder(programName.Length +\n                    (!isVersionNull ? version.Length + 1 : 0))\n                .Append(programName)\n                .AppendWhen(!isVersionNull, '' '', version)\n                .ToString();", span="75-79"];
m42_21 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="72-72"];
m42_12 [cluster="lambda expression", file="HeadingInfo.cs", label="Entry lambda expression", span="52-52"];
m42_8 [cluster="lambda expression", file="HeadingInfo.cs", label="Entry lambda expression", span="48-48"];
m42_9 [cluster="lambda expression", file="HeadingInfo.cs", label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="48-48"];
m42_10 [cluster="lambda expression", file="HeadingInfo.cs", label="Exit lambda expression", span="48-48"];
m42_13 [cluster="lambda expression", file="HeadingInfo.cs", label="versionAttribute.InformationalVersion", span="52-52"];
m42_14 [cluster="lambda expression", file="HeadingInfo.cs", label="Exit lambda expression", span="52-52"];
m42_22 [cluster="string.IsNullOrEmpty(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m42_25 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m42_39 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="120-120"];
m42_40 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Error)", span="122-122"];
m42_41 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="120-120"];
m42_26 [cluster="System.Text.StringBuilder.ToString()", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m42_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HeadingInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m42_24 [cluster="System.Text.StringBuilder.Append(string)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m42_7 [cluster="System.ArgumentException.ArgumentException(string)", file="HeadingInfo.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m42_6 [cluster="string.IsNullOrWhiteSpace(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m42_42 [file="HeadingInfo.cs", label="CommandLine.Text.HeadingInfo", span=""];
m44_249 [cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m44_94 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="278-278"];
m44_110 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="parserResult == null", span="280-280"];
m44_112 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="current == null", span="281-281"];
m44_114 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="283-283"];
m44_115 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="284-284"];
m44_116 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="286-289"];
m44_118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="291-291"];
m44_119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="293-296"];
m44_111 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="280-280"];
m44_113 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''current'');", span="281-281"];
m44_117 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="errors.Empty()", span="290-290"];
m44_120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="278-278"];
m44_121 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m44_54 [cluster="Unk.Any", file="HelpText.cs", label="Entry Unk.Any", span=""];
m44_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="35-35"];
m44_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="35-35"];
m44_374 [cluster="string.PadRight(int)", file="HelpText.cs", label="Entry string.PadRight(int)", span="0-0"];
m44_455 [cluster="T.ToStringInvariant<T>()", file="HelpText.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m44_319 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m44_57 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="382-382"];
m44_166 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="384-384"];
m44_168 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="386-389"];
m44_167 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="384-384"];
m44_169 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="382-382"];
m44_264 [cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m44_263 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m44_84 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m44_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m44_397 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m44_127 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="573-573"];
m44_257 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="int ExtraLength = 10", span="575-575"];
m44_258 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="576-588"];
m44_259 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="573-573"];
m44_260 [cluster="string.SafeLength()", file="HelpText.cs", label="Entry string.SafeLength()", span="40-40"];
m44_131 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326"];
m44_132 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="return AddLine(postOptionsHelp, value);", span="328-328"];
m44_133 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326"];
m44_262 [cluster="string.IsNullOrEmpty(string)", file="HelpText.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m44_247 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m44_421 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="838-838"];
m44_424 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var specLength = 0", span="840-840"];
m44_425 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasShort = spec.ShortName.Length > 0", span="842-842"];
m44_426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasLong = spec.LongName.Length > 0", span="843-843"];
m44_428 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="846-846"];
m44_429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="847-847"];
m44_436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += spec.LongName.Length", span="860-860"];
m44_431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="851-851"];
m44_441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="868-868"];
m44_442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return specLength;", span="870-870"];
m44_430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasShort, span="849-849"];
m44_440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="hasShort && hasLong", span="867-867"];
m44_427 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var metaLength = 0", span="845-845"];
m44_435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasLong, span="858-858"];
m44_434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="855-855"];
m44_439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="864-864"];
m44_432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="852-852"];
m44_433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="853-853"];
m44_437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="861-861"];
m44_438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="862-862"];
m44_443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="838-838"];
m44_250 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m44_320 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="663-670"];
m44_179 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="661-661"];
m44_321 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="661-661"];
m44_376 [cluster="string.Trim()", file="HelpText.cs", label="Entry string.Trim()", span="0-0"];
m44_261 [cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m44_322 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m44_375 [cluster="string.FormatInvariant(params object[])", file="HelpText.cs", label="Entry string.FormatInvariant(params object[])", span="20-20"];
m44_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m44_294 [cluster="string.Substring(int)", file="HelpText.cs", label="Entry string.Substring(int)", span="0-0"];
m44_192 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="451-451"];
m44_193 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="457-459"];
m44_194 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="451-451"];
m44_45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="591-591"];
m44_265 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="593-593"];
m44_266 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="591-591"];
m44_310 [cluster="System.Type.GetUsageData()", file="HelpText.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m44_396 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m44_55 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m44_248 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m44_48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m44_122 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="470-470"];
m44_196 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="parserResult == null", span="476-476"];
m44_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield break;", span="481-481"];
m44_203 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line.ToString();", span="488-488"];
m44_208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line;", span="499-499"];
m44_198 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="478-479"];
m44_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="486-487"];
m44_204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="491-493"];
m44_197 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="476-476"];
m44_199 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors.Empty()", span="480-480"];
m44_201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="483-484"];
m44_205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="mutuallyErrs.Length > 0", span="494-494"];
m44_206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="496-497"];
m44_207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label=lines, span="498-498"];
m44_209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="470-470"];
m44_335 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="718-718"];
m44_343 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(''  '')", span="720-720"];
m44_344 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="721-725"];
m44_345 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="727-729"];
m44_346 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var optionHelpText = specification.HelpText", span="731-731"];
m44_347 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="733-733"];
m44_348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="734-734"];
m44_349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="736-737"];
m44_350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.Required", span="739-739"];
m44_351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="740-740"];
m44_357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="750-750"];
m44_360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="754-754"];
m44_363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="760-760"];
m44_364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="762-762"];
m44_365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer = widthOfHelpText", span="763-763"];
m44_368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="771-772"];
m44_369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText.Length > widthOfHelpText", span="774-774"];
m44_352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="742-742"];
m44_354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var words = optionHelpText.Split(' ')", span="747-747"];
m44_367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="770-770"];
m44_370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="777-780"];
m44_353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var wordBuffer = 0", span="746-746"];
m44_359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="753-753"];
m44_355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var i = 0", span="748-748"];
m44_356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i < words.Length", span="748-748"];
m44_358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i])", span="752-752"];
m44_366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i++", span="748-748"];
m44_362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer++", span="757-757"];
m44_361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append('' '')", span="756-756"];
m44_371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="return this;", span="782-782"];
m44_372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="718-718"];
m44_339 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="701-701"];
m44_302 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="701-701"];
m44_338 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="703-708"];
m44_398 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m44_123 [cluster="string.Concat(string, string)", file="HelpText.cs", label="Entry string.Concat(string, string)", span="0-0"];
m44_417 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="827-834"];
m44_59 [cluster="lambda expression", file="HelpText.cs", label="license.AddToHelpText(auto, true)", span="219-219"];
m44_63 [cluster="lambda expression", file="HelpText.cs", label="usage.AddToHelpText(auto, true)", span="222-222"];
m44_58 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="219-219"];
m44_62 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="222-222"];
m44_65 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="232-232"];
m44_60 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="219-219"];
m44_64 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="222-222"];
m44_66 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="232-232"];
m44_67 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="232-232"];
m44_92 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="264-264"];
m44_105 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="270-270"];
m44_85 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="260-260"];
m44_88 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="263-263"];
m44_99 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(pr, current)", span="269-269"];
m44_98 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="269-269"];
m44_101 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="269-269"];
m44_104 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="270-270"];
m44_107 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="270-270"];
m44_91 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="264-264"];
m44_95 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="264-264"];
m44_86 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.VersionRequestedError", span="260-260"];
m44_87 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="260-260"];
m44_89 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="263-263"];
m44_90 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="263-263"];
m44_93 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="264-264"];
m44_96 [cluster="lambda expression", file="HelpText.cs", label=e, span="264-264"];
m44_97 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="264-264"];
m44_100 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="269-269"];
m44_102 [cluster="lambda expression", file="HelpText.cs", label=e, span="269-269"];
m44_103 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="269-269"];
m44_106 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="270-270"];
m44_108 [cluster="lambda expression", file="HelpText.cs", label=e, span="270-270"];
m44_109 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="270-270"];
m44_139 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="338-338"];
m44_140 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="338-338"];
m44_141 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="338-338"];
m44_146 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="349-349"];
m44_147 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="349-349"];
m44_148 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="349-349"];
m44_155 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="361-361"];
m44_156 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="361-361"];
m44_157 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="361-361"];
m44_163 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="373-373"];
m44_164 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="373-373"];
m44_165 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="373-373"];
m44_216 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="484-484"];
m44_217 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="484-484"];
m44_218 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="484-484"];
m44_223 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="511-511"];
m44_224 [cluster="lambda expression", file="HelpText.cs", label=example, span="511-511"];
m44_225 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="511-511"];
m44_253 [cluster="lambda expression", file="HelpText.cs", label="config.PreferShortName = s.PreferShortName", span="560-560"];
m44_254 [cluster="lambda expression", file="HelpText.cs", label="config.GroupSwitches = s.GroupSwitches", span="561-561"];
m44_255 [cluster="lambda expression", file="HelpText.cs", label="config.UseEqualToken = s.UseEqualToken", span="562-562"];
m44_252 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="558-563"];
m44_256 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="558-563"];
m44_267 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="593-593"];
m44_268 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="593-593"];
m44_269 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="593-593"];
m44_305 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="640-640"];
m44_306 [cluster="lambda expression", file="HelpText.cs", label="v.Index", span="640-640"];
m44_307 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="640-640"];
m44_312 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="649-658"];
m44_313 [cluster="lambda expression", file="HelpText.cs", label="var prop = tuple.Item1", span="651-651"];
m44_314 [cluster="lambda expression", file="HelpText.cs", label="var attr = tuple.Item2", span="652-652"];
m44_315 [cluster="lambda expression", file="HelpText.cs", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="654-655"];
m44_316 [cluster="lambda expression", file="HelpText.cs", label="return Tuple.Create(attr, examples);", span="657-657"];
m44_317 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="649-658"];
m44_333 [cluster="lambda expression", file="HelpText.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="686-686"];
m44_332 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="685-686"];
m44_334 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="685-686"];
m44_379 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="724-724"];
m44_383 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="725-725"];
m44_378 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="724-724"];
m44_382 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="725-725"];
m44_386 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="737-737"];
m44_387 [cluster="lambda expression", file="HelpText.cs", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="737-737"];
m44_380 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="724-724"];
m44_384 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="725-725"];
m44_388 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="737-737"];
m44_394 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="791-795"];
m44_400 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="798-801"];
m44_393 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="791-795"];
m44_399 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="798-801"];
m44_395 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="791-795"];
m44_401 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="798-801"];
m44_405 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="810-810"];
m44_409 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="811-811"];
m44_404 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="810-810"];
m44_408 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="811-811"];
m44_406 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="810-810"];
m44_410 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="811-811"];
m44_418 [cluster="lambda expression", file="HelpText.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="829-831"];
m44_419 [cluster="lambda expression", file="HelpText.cs", label="return Math.Max(length, specLength);", span="833-833"];
m44_420 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="827-834"];
m44_392 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m44_80 [cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m44_381 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="785-785"];
m44_390 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="787-802"];
m44_391 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="785-785"];
m44_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="58-58"];
m44_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="58-58"];
m44_324 [cluster="Unk.Concat", file="HelpText.cs", label="Entry Unk.Concat", span=""];
m44_68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m44_69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="255-255"];
m44_71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="258-258"];
m44_75 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="264-264"];
m44_78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="268-270"];
m44_70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="256-256"];
m44_72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="260-260"];
m44_74 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="263-263"];
m44_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="266-266"];
m44_73 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="261-261"];
m44_77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="267-267"];
m44_79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m44_212 [cluster="int.Spaces()", file="HelpText.cs", label="Entry int.Spaces()", span="30-30"];
m44_61 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m44_215 [cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m44_246 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m44_158 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="370-370"];
m44_159 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="372-372"];
m44_160 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="373-373"];
m44_161 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="return this;", span="374-374"];
m44_162 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="370-370"];
m44_56 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="398-398"];
m44_172 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types == null", span="400-400"];
m44_174 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="401-401"];
m44_176 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="403-406"];
m44_173 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="400-400"];
m44_175 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="401-401"];
m44_177 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="398-398"];
m44_245 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="646-646"];
m44_308 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="648-658"];
m44_309 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="646-646"];
m44_154 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m44_195 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m44_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="81-81"];
m44_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="81-81"];
m44_219 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="509-509"];
m44_220 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return RenderUsageText(parserResult, example => example);", span="511-511"];
m44_221 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="509-509"];
m44_138 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m44_291 [cluster="string.Split(params char[])", file="HelpText.cs", label="Entry string.Split(params char[])", span="0-0"];
m44_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m44_323 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m44_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="195-195"];
m44_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="201-206"];
m44_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="210-210"];
m44_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="212-212"];
m44_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto = onError(auto)", span="215-215"];
m44_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample)", span="224-224"];
m44_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="231-232"];
m44_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="235-235"];
m44_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddOptions(parserResult)", span="238-238"];
m44_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var errors = Enumerable.Empty<Error>()", span="208-208"];
m44_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="218-219"];
m44_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="221-222"];
m44_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddPreOptionsLine(auto.SentenceBuilder.UsageHeadingText())", span="227-227"];
m44_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddPreOptionsLines(usageLines)", span="228-228"];
m44_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddDashesToOption = false", span="234-234"];
m44_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="return auto;", span="240-240"];
m44_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="FilterMeaningfulErrors(errors).Any()", span="214-214"];
m44_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageLines.Any()", span="225-225"];
m44_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="195-195"];
m44_47 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m44_44 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m44_210 [cluster="Unk.Where", file="HelpText.cs", label="Entry Unk.Where", span=""];
m44_83 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m44_377 [cluster="string.String(char, int)", file="HelpText.cs", label="Entry string.String(char, int)", span="0-0"];
m44_293 [cluster="System.Math.Min(int, int)", file="HelpText.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m44_304 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m44_407 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m44_171 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="673-673"];
m44_325 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var maxLength = GetMaxLength(specifications)", span="678-678"];
m44_327 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="682-682"];
m44_328 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="684-686"];
m44_326 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="680-680"];
m44_329 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="return this;", span="688-688"];
m44_330 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="673-673"];
m44_214 [cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m44_124 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="304-304"];
m44_125 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="return info.ToString();", span="306-306"];
m44_126 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="304-304"];
m44_130 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="711-711"];
m44_340 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="713-713"];
m44_341 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="return this;", span="715-715"];
m44_342 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="711-711"];
m44_318 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="HelpText.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m44_134 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="817-817"];
m44_411 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="819-819"];
m44_412 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="return this;", span="821-821"];
m44_413 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="817-817"];
m44_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="47-47"];
m44_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="47-47"];
m44_296 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="635-637"];
m44_170 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="632-632"];
m44_295 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="634-634"];
m44_297 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="638-640"];
m44_298 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="641-643"];
m44_299 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="632-632"];
m44_270 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="596-596"];
m44_271 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="598-598"];
m44_273 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var words = value.Split(' ')", span="602-602"];
m44_276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="605-605"];
m44_277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i])", span="607-607"];
m44_279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="609-609"];
m44_280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append('' '')", span="611-611"];
m44_282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="615-615"];
m44_283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="617-617"];
m44_284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer = maximumLength", span="618-618"];
m44_286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="624-624"];
m44_287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="625-625"];
m44_288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value.Length > maximumLength", span="627-627"];
m44_289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(value)", span="629-629"];
m44_272 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var wordBuffer = 0", span="601-601"];
m44_278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="608-608"];
m44_274 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var i = 0", span="603-603"];
m44_275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i < words.Length", span="603-603"];
m44_285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i++", span="603-603"];
m44_281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer++", span="612-612"];
m44_290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="596-596"];
m44_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="94-94"];
m44_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="sentenceBuilder == null", span="96-96"];
m44_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="heading == null", span="97-97"];
m44_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="copyright == null", span="98-98"];
m44_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.sentenceBuilder = sentenceBuilder", span="103-103"];
m44_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.heading = heading", span="104-104"];
m44_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.copyright = copyright", span="105-105"];
m44_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="96-96"];
m44_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''heading'');", span="97-97"];
m44_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''copyright'');", span="98-98"];
m44_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100"];
m44_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m44_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="94-94"];
m44_385 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="805-805"];
m44_402 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="807-814"];
m44_403 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="805-805"];
m44_53 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="336-336"];
m44_135 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="338-338"];
m44_136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="339-339"];
m44_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="336-336"];
m44_423 [cluster="System.Math.Max(int, int)", file="HelpText.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m44_213 [cluster="Unk.formatError", file="HelpText.cs", label="Entry Unk.formatError", span=""];
m44_331 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="824-824"];
m44_414 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="826-834"];
m44_415 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="824-824"];
m44_373 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m44_178 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m44_337 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="691-691"];
m44_301 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="691-691"];
m44_336 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="693-698"];
m44_292 [cluster="string.Substring(int, int)", file="HelpText.cs", label="Entry string.Substring(int, int)", span="0-0"];
m44_389 [cluster="string.FormatLocal(params object[])", file="HelpText.cs", label="Entry string.FormatLocal(params object[])", span="25-25"];
m44_180 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="415-415"];
m44_181 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="417-417"];
m44_183 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="419-422"];
m44_182 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="417-417"];
m44_184 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="415-415"];
m44_422 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="873-873"];
m44_444 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var specLength = 0", span="875-875"];
m44_445 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var hasMeta = spec.MetaName.Length > 0", span="877-877"];
m44_447 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="880-880"];
m44_448 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="881-881"];
m44_450 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="884-884"];
m44_451 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="886-886"];
m44_446 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var metaLength = 0", span="879-879"];
m44_449 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label=hasMeta, span="883-883"];
m44_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += metaLength", span="888-888"];
m44_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return specLength;", span="890-890"];
m44_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="873-873"];
m44_52 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="315-315"];
m44_128 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="317-317"];
m44_129 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="315-315"];
m44_311 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m44_300 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m44_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m44_51 [cluster="System.Func<TResult>.Invoke()", file="HelpText.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m44_185 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="432-432"];
m44_186 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types == null", span="434-434"];
m44_188 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="435-435"];
m44_190 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="437-440"];
m44_187 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="434-434"];
m44_189 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="435-435"];
m44_191 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="432-432"];
m44_142 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="347-347"];
m44_143 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="349-349"];
m44_144 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="350-350"];
m44_145 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="347-347"];
m44_49 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m44_149 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="358-358"];
m44_150 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="360-360"];
m44_151 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="361-361"];
m44_152 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="return this;", span="362-362"];
m44_153 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="358-358"];
m44_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="69-69"];
m44_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="69-69"];
m44_222 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="521-521"];
m44_226 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="523-523"];
m44_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="521-521"];
m44_50 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="533-533"];
m44_228 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="parserResult == null", span="535-535"];
m44_232 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield break;", span="539-539"];
m44_239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return exampleText.ToString();", span="550-550"];
m44_243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return commandLine.ToString();", span="564-564"];
m44_230 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="537-537"];
m44_237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var example = mapperFunc(e)", span="547-547"];
m44_229 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="535-535"];
m44_231 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="usage.MatchNothing()", span="538-538"];
m44_233 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usageTuple = usage.FromJust()", span="541-541"];
m44_234 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var examples = usageTuple.Item2", span="542-542"];
m44_235 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="543-543"];
m44_236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=examples, span="545-545"];
m44_242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="554-563"];
m44_238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="548-549"];
m44_240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var styles = example.GetFormatStylesOrDefault()", span="551-551"];
m44_241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=styles, span="552-552"];
m44_244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="533-533"];
m44_416 [cluster="Unk.Aggregate", file="HelpText.cs", label="Entry Unk.Aggregate", span=""];
m44_251 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m44_211 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m44_81 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m44_303 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m44_456 [file="HelpText.cs", label="CommandLine.Text.HelpText", span=""];
m44_457 [file="HelpText.cs", label=auto, span=""];
m44_458 [file="HelpText.cs", label="CommandLine.ParserResult<T>", span=""];
m44_459 [file="HelpText.cs", label=pr, span=""];
m44_460 [file="HelpText.cs", label=s, span=""];
m44_461 [file="HelpText.cs", label=string, span=""];
m44_462 [file="HelpText.cs", label=maxLength, span=""];
m44_463 [file="HelpText.cs", label=remainingSpace, span=""];
m44_464 [file="HelpText.cs", label=int, span=""];
m44_465 [file="HelpText.cs", label="CommandLine.Core.Specification", span=""];
m44_466 [file="HelpText.cs", label=optionHelpText, span=""];
m44_467 [file="HelpText.cs", label="CommandLine.Core.OptionSpecification", span=""];
m44_468 [file="HelpText.cs", label="CommandLine.Core.ValueSpecification", span=""];
m45_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m45_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="97-100"];
m45_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
m45_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105"];
m45_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106"];
m45_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107"];
m45_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108"];
m45_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109"];
m45_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110"];
m45_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m45_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="81-81"];
m45_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="451-451"];
m45_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m45_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m45_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m45_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="58-58"];
m45_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="59-59"];
m45_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="60-60"];
m45_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="61-61"];
m45_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="62-62"];
m45_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="63-63"];
m45_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="64-64"];
m45_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="65-65"];
m45_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m45_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m45_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135"];
m45_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="136-136"];
m45_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140"];
m45_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
m45_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
m45_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
m45_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
m45_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
m45_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149"];
m45_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m45_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="509-509"];
m45_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m45_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
m45_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="159-159"];
m45_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
m45_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
m45_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
m45_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
m45_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
m45_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
m45_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m45_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m45_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m45_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m45_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m45_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
m45_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="262-268"];
m45_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="271-271"];
m45_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="274-274"];
m45_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="275-275"];
m45_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="276-276"];
m45_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="277-277"];
m45_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="278-278"];
m45_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="279-279"];
m45_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="280-280"];
m45_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="281-281"];
m45_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="282-282"];
m45_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="283-283"];
m45_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
m45_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
m45_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="345-348"];
m45_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="352-352"];
m45_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="353-353"];
m45_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="354-354"];
m45_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="355-355"];
m45_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="356-356"];
m45_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="357-357"];
m45_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="358-358"];
m45_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="359-359"];
m45_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="360-360"];
m45_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="361-361"];
m45_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
m45_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m45_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="74-77"];
m45_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81"];
m45_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="82-82"];
m45_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="83-83"];
m45_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84"];
m45_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="85-85"];
m45_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="86-86"];
m45_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="87-87"];
m45_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="88-88"];
m45_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m45_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m45_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m45_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
m45_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="182-182"];
m45_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
m45_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
m45_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m45_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m45_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m45_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m45_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m45_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m45_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m45_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
m45_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="317-318"];
m45_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="319-322"];
m45_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="325-325"];
m45_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="328-328"];
m45_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="330-330"];
m45_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="331-331"];
m45_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="332-332"];
m45_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="333-333"];
m45_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="334-334"];
m45_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="335-335"];
m45_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="336-336"];
m45_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
m45_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m45_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18"];
m45_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m45_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m45_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m45_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m45_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m45_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m45_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="35-35"];
m45_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m45_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
m45_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
m45_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
m45_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m45_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="315-315"];
m45_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m45_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
m45_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="369-371"];
m45_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var text = HelpText.RenderUsageText(result)", span="374-374"];
m45_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines()", span="377-377"];
m45_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="380-380"];
m45_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="381-381"];
m45_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="382-382"];
m45_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="383-383"];
m45_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="384-384"];
m45_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="385-385"];
m45_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="386-386"];
m45_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
m45_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m45_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="382-382"];
m45_146 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="240-240"];
m45_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="219-219"];
m45_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="222-222"];
m45_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="224-224"];
m45_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="226-226"];
m45_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="228-228"];
m45_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="230-230"];
m45_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="234-234"];
m45_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="217-238"];
m45_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="221-221"];
m45_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="223-223"];
m45_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="225-225"];
m45_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="227-227"];
m45_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="229-229"];
m45_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="231-231"];
m45_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="233-233"];
m45_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="236-236"];
m45_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="232-232"];
m45_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="217-238"];
m45_147 [cluster="lambda expression", file="HelpTextTests.cs", label="string.Empty", span="240-240"];
m45_148 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="240-240"];
m45_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m45_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m45_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="58-58"];
m45_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m45_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m45_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="573-573"];
m45_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m45_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m45_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m45_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m45_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m45_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m45_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326"];
m45_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m45_218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
m45_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="393-398"];
m45_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="401-401"];
m45_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="404-404"];
m45_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="405-405"];
m45_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="406-406"];
m45_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="407-407"];
m45_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="408-408"];
m45_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="409-409"];
m45_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="410-410"];
m45_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="411-411"];
m45_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="412-412"];
m45_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="413-413"];
m45_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="414-414"];
m45_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="415-415"];
m45_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="416-416"];
m45_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="417-417"];
m45_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="418-418"];
m45_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="419-419"];
m45_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="420-420"];
m45_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="421-421"];
m45_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="422-422"];
m45_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="423-423"];
m45_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="424-424"];
m45_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
m45_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m45_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m45_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m45_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m45_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
m45_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
m45_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
m45_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
m45_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
m45_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41"];
m45_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m45_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m45_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-216"];
m45_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="217-238"];
m45_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="243-243"];
m45_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="239-240"];
m45_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="246-246"];
m45_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="248-248"];
m45_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="249-249"];
m45_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="250-250"];
m45_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="251-251"];
m45_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="252-252"];
m45_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="253-253"];
m45_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="254-254"];
m45_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m45_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
m45_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="291-296"];
m45_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="299-299"];
m45_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="302-302"];
m45_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="304-304"];
m45_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="305-305"];
m45_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="306-306"];
m45_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="307-307"];
m45_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="308-308"];
m45_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="309-309"];
m45_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
m45_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m45_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m45_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m46_0 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m46_1 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="15-15"];
m46_2 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.force = force", span="16-16"];
m46_3 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="this.fileName = fileName", span="17-17"];
m46_4 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m46_5 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m46_6 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.patch = patch", span="40-40"];
m46_7 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="this.amend = amend", span="41-41"];
m46_8 [cluster="CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCommitOptions.ImmutableCommitOptions(bool, bool)", span="38-38"];
m46_9 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Entry CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m46_10 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.noHardLinks = noHardLinks", span="61-61"];
m46_11 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.quiet = quiet", span="62-62"];
m46_12 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="this.urls = urls", span="63-63"];
m46_13 [cluster="CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", file="ImmutableVerbFakes.cs", label="Exit CommandLine.Tests.Fakes.ImmutableCloneOptions.ImmutableCloneOptions(bool, bool, System.Collections.Generic.IEnumerable<string>)", span="59-59"];
m46_14 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableAddOptions", span=""];
m46_15 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCommitOptions", span=""];
m46_16 [file="ImmutableVerbFakes.cs", label="CommandLine.Tests.Fakes.ImmutableCloneOptions", span=""];
m47_58 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m47_47 [cluster="Unk.ThrowingValidate", file="InstanceBuilder.cs", label="Entry Unk.ThrowingValidate", span=""];
m47_68 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilder.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m47_114 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m47_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m47_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42"];
m47_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-57"];
m47_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="arguments.Any()", span="59-59"];
m47_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61"];
m47_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68"];
m47_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74"];
m47_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecPropsResult = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80"];
m47_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var valueSpecPropsResult = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85"];
m47_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89"];
m47_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="97-97"];
m47_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45"];
m47_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="typeInfo.IsMutable()", span="95-95"];
m47_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="113-113"];
m47_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specs = from pt in specProps select pt.Specification", span="47-47"];
m47_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="49-51"];
m47_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), preprocessorErrors);", span="64-64"];
m47_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="preprocessorErrors.Any()", span="62-62"];
m47_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokens = tokenizerResult.SucceededWith()", span="70-70"];
m47_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return tokenizerResult\r\n                .SuccessfulMessages()\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                    .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                    .Concat(validationErrors)\r\n                .ToParserResult(instance);", span="125-131"];
m47_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="122-123"];
m47_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specPropsWithValue = optionSpecPropsResult.SucceededWith()\r\n                .Concat(valueSpecPropsResult.SucceededWith())", span="91-92"];
m47_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="T instance", span="94-94"];
m47_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="98-109"];
m47_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="114-118"];
m47_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="instance = (T)ctor.Invoke(values)", span="119-119"];
m47_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m47_85 [cluster="Unk.GetType", file="InstanceBuilder.cs", label="Entry Unk.GetType", span=""];
m47_71 [cluster="Unk.GetParameters", file="InstanceBuilder.cs", label="Entry Unk.GetParameters", span=""];
m47_107 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m47_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m47_96 [cluster="Unk.>", file="InstanceBuilder.cs", label="Entry Unk.>", span=""];
m47_55 [cluster="System.Type.ToTypeInfo()", file="InstanceBuilder.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m47_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m47_61 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m47_77 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m47_52 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m47_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m47_70 [cluster="Unk.GetConstructor", file="InstanceBuilder.cs", label="Entry Unk.GetConstructor", span=""];
m47_63 [cluster="Unk.Single", file="InstanceBuilder.cs", label="Entry Unk.Single", span=""];
m47_75 [cluster="Unk.Invoke", file="InstanceBuilder.cs", label="Entry Unk.Invoke", span=""];
m47_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m47_53 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m47_76 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m47_97 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="55-55"];
m47_5 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m47_12 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m47_6 [cluster="lambda expression", file="InstanceBuilder.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27"];
m47_16 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27"];
m47_4 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="22-29"];
m47_11 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="24-24"];
m47_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="return explodedTokens;", span="28-28"];
m47_15 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="27-27"];
m47_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="22-29"];
m47_13 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="24-24"];
m47_17 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="27-27"];
m47_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57"];
m47_101 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74"];
m47_105 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79"];
m47_109 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85"];
m47_112 [cluster="lambda expression", file="InstanceBuilder.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89"];
m47_81 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="42-42"];
m47_86 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="44-45"];
m47_100 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="74-74"];
m47_104 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="79-79"];
m47_108 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="85-85"];
m47_111 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="89-89"];
m47_115 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="97-97"];
m47_143 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="116-116"];
m47_146 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="117-117"];
m47_118 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="100-100"];
m47_122 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="101-101"];
m47_126 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="103-103"];
m47_130 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="104-104"];
m47_133 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="106-108"];
m47_137 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="109-109"];
m47_82 [cluster="lambda expression", file="InstanceBuilder.cs", label="f().GetType()", span="42-42"];
m47_83 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="42-42"];
m47_87 [cluster="lambda expression", file="InstanceBuilder.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45"];
m47_88 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="44-45"];
m47_92 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="53-57"];
m47_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="53-57"];
m47_98 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="55-55"];
m47_99 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="55-55"];
m47_102 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="74-74"];
m47_106 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="79-79"];
m47_110 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="85-85"];
m47_113 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="89-89"];
m47_116 [cluster="lambda expression", file="InstanceBuilder.cs", label="f()", span="97-97"];
m47_117 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="97-97"];
m47_119 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsJust()", span="100-100"];
m47_120 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="100-100"];
m47_123 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.FromJust()", span="101-101"];
m47_124 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="101-101"];
m47_127 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="103-103"];
m47_128 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="103-103"];
m47_131 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Specification.DefaultValue.FromJust()", span="104-104"];
m47_132 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="104-104"];
m47_134 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="106-108"];
m47_135 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="106-108"];
m47_138 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="109-109"];
m47_139 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="109-109"];
m47_144 [cluster="lambda expression", file="InstanceBuilder.cs", label=v, span="116-116"];
m47_145 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="116-116"];
m47_147 [cluster="lambda expression", file="InstanceBuilder.cs", label=d, span="117-117"];
m47_148 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="117-117"];
m47_54 [cluster="object.GetType()", file="InstanceBuilder.cs", label="Entry object.GetType()", span="0-0"];
m47_51 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m47_62 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m47_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m47_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32"];
m47_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m47_46 [cluster="Unk.GetSpecifications", file="InstanceBuilder.cs", label="Entry Unk.GetSpecifications", span=""];
m47_74 [cluster="Unk.CreateDefaultForImmutable", file="InstanceBuilder.cs", label="Entry Unk.CreateDefaultForImmutable", span=""];
m47_78 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="InstanceBuilder.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m47_79 [cluster="Unk.Concat", file="InstanceBuilder.cs", label="Entry Unk.Concat", span=""];
m47_141 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m47_142 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs", label="Entry System.Type.CreateEmptyArray()", span="125-125"];
m47_73 [cluster="string.ToLower()", file="InstanceBuilder.cs", label="Entry string.ToLower()", span="0-0"];
m47_140 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m47_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m47_80 [cluster="Unk.ToParserResult", file="InstanceBuilder.cs", label="Entry Unk.ToParserResult", span=""];
m47_45 [cluster="Unk.Return", file="InstanceBuilder.cs", label="Entry Unk.Return", span=""];
m47_89 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m47_103 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m47_84 [cluster="Unk.f", file="InstanceBuilder.cs", label="Entry Unk.f", span=""];
m47_67 [cluster="System.Activator.CreateInstance<T>()", file="InstanceBuilder.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m47_57 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="InstanceBuilder.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m47_59 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m47_90 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m47_125 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m47_129 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334"];
m47_136 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m47_95 [cluster="System.Type.IsMutable()", file="InstanceBuilder.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m47_91 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m47_72 [cluster="Unk.ToLower", file="InstanceBuilder.cs", label="Entry Unk.ToLower", span=""];
m47_48 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m47_50 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m47_66 [cluster="Unk.IsMutable", file="InstanceBuilder.cs", label="Entry Unk.IsMutable", span=""];
m47_69 [cluster="Unk.ToArray", file="InstanceBuilder.cs", label="Entry Unk.ToArray", span=""];
m47_121 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m47_64 [cluster="Unk.FromOptionSpecification", file="InstanceBuilder.cs", label="Entry Unk.FromOptionSpecification", span=""];
m47_56 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m47_65 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m47_60 [cluster="Unk.MapValues", file="InstanceBuilder.cs", label="Entry Unk.MapValues", span=""];
m47_149 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m47_150 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m47_151 [file="InstanceBuilder.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m47_152 [file="InstanceBuilder.cs", label=specProps, span=""];
m47_153 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m47_154 [file="InstanceBuilder.cs", label=optionSpecs, span=""];
m47_155 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m47_156 [file="InstanceBuilder.cs", label=token, span=""];
m48_39 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m48_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m48_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptions>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="123-123"];
m48_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m48_222 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequired.FakeOptionsWithRequired()", span="4-4"];
m48_346 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="814-814"];
m48_347 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="817-821"];
m48_348 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="824-824"];
m48_349 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="814-814"];
m48_170 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m48_327 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m48_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m48_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="383-383"];
m48_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="388-392"];
m48_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.LongSequence)", span="395-395"];
m48_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="383-383"];
m48_53 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m48_256 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="615-615"];
m48_257 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="620-624"];
m48_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptions>)result).Value.StringValue.ShouldBeEquivalentTo(expected)", span="627-627"];
m48_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="615-615"];
m48_323 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="786-786"];
m48_324 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="789-793"];
m48_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="796-796"];
m48_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="786-786"];
m48_296 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="719-719"];
m48_297 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="724-728"];
m48_298 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableLong)", span="731-731"];
m48_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="719-719"];
m48_77 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m48_8 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m48_164 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="426-426"];
m48_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="429-435"];
m48_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="436-436"];
m48_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="449-449"];
m48_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="439-446"];
m48_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="426-426"];
m48_248 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="594-594"];
m48_249 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="597-597"];
m48_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="600-604"];
m48_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="607-607"];
m48_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="594-594"];
m48_383 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="871-871"];
m48_384 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeInterfaceOptions>>(() => new FakeInterfaceOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="874-878"];
m48_385 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeInterfaceOptions>)result).Value.InputFile)", span="881-881"];
m48_386 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="871-871"];
m48_106 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m48_72 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m48_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196"];
m48_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="199-203"];
m48_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="206-206"];
m48_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m48_236 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m48_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="231-231"];
m48_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="234-234"];
m48_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="237-241"];
m48_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="244-244"];
m48_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="231-231"];
m48_181 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m48_445 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m48_303 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="739-739"];
m48_304 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="744-748"];
m48_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName.Value)", span="753-753"];
m48_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName))", span="755-755"];
m48_305 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithFSharpOption>)result).Value.FileName != null", span="751-751"];
m48_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="739-739"];
m48_287 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m48_295 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4"];
m48_428 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="976-976"];
m48_429 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequired>>(() => new FakeOptionsWithTwoRequired()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="979-983"];
m48_431 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="errors.OfType<MissingRequiredOptionError>().Should().HaveCount(x => x == expected)", span="987-987"];
m48_430 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var errors = ((NotParsed<FakeOptionsWithTwoRequired>)result).Errors", span="986-986"];
m48_432 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="976-976"];
m48_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m48_240 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="575-575"];
m48_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="578-578"];
m48_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="581-585"];
m48_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="588-588"];
m48_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="575-575"];
m48_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="274-274"];
m48_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="277-277"];
m48_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="280-284"];
m48_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="287-287"];
m48_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="274-274"];
m48_9 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m48_369 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNamedAndEmptySets.FakeOptionsWithNamedAndEmptySets()", span="4-4"];
m48_12 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m48_412 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="933-933"];
m48_413 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithScalarValueAndSequenceStringAdjacent>>(() => new FakeOptionsWithScalarValueAndSequenceStringAdjacent()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="938-942"];
m48_414 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithScalarValueAndSequenceStringAdjacent>)result).Value)", span="945-945"];
m48_415 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="933-933"];
m48_81 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m48_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="361-361"];
m48_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceWithoutRange>>(() => new FakeOptionsWithSequenceWithoutRange()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="366-370"];
m48_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceWithoutRange>)result).Value.LongSequence)", span="373-373"];
m48_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="361-361"];
m48_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m48_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165"];
m48_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="168-168"];
m48_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m48_357 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="833-833"];
m48_358 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNamedAndEmptySets>>(() => new FakeOptionsWithNamedAndEmptySets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="836-840"];
m48_359 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="843-843"];
m48_360 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithNamedAndEmptySets>)result).Errors.Should().HaveCount(x => x == expected)", span="845-845"];
m48_361 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="847-847"];
m48_362 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="result.Should().BeOfType<Parsed<FakeOptionsWithNamedAndEmptySets>>()", span="849-849"];
m48_363 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="833-833"];
m48_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m48_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequence>>(() => new FakeOptionsWithSequence()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="94-98"];
m48_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithSequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="101-101"];
m48_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m48_454 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="1017-1017"];
m48_14 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=fakeOptions, span="27-27"];
m48_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="27-27"];
m48_15 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="27-27"];
m48_20 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="48-48"];
m48_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="48-48"];
m48_22 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="48-48"];
m48_27 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="71-71"];
m48_28 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="71-71"];
m48_29 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="71-71"];
m48_35 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="95-95"];
m48_36 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequence()", span="95-95"];
m48_37 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="95-95"];
m48_43 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="117-117"];
m48_44 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="117-117"];
m48_45 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="117-117"];
m48_50 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="140-140"];
m48_51 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="140-140"];
m48_52 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="140-140"];
m48_58 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="162-162"];
m48_59 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="162-162"];
m48_60 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="162-162"];
m48_69 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="181-181"];
m48_70 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="181-181"];
m48_71 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="181-181"];
m48_78 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="200-200"];
m48_79 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="200-200"];
m48_80 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="200-200"];
m48_87 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="219-219"];
m48_88 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="219-219"];
m48_89 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="219-219"];
m48_95 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="238-238"];
m48_96 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="238-238"];
m48_97 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="238-238"];
m48_103 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="262-262"];
m48_104 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="262-262"];
m48_105 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="262-262"];
m48_113 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="281-281"];
m48_114 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="281-281"];
m48_115 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="281-281"];
m48_121 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="300-300"];
m48_122 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="300-300"];
m48_123 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="300-300"];
m48_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="319-319"];
m48_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="319-319"];
m48_131 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="319-319"];
m48_138 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="344-344"];
m48_139 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="344-344"];
m48_140 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="344-344"];
m48_145 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="367-367"];
m48_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="367-367"];
m48_147 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="367-367"];
m48_153 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="389-389"];
m48_154 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="389-389"];
m48_155 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="389-389"];
m48_161 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="411-411"];
m48_162 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="411-411"];
m48_163 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="411-411"];
m48_171 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="440-440"];
m48_174 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="441-443"];
m48_172 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="440-440"];
m48_173 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="440-440"];
m48_175 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="442-443"];
m48_179 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="443-443"];
m48_183 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="443-443"];
m48_176 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="441-443"];
m48_178 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="443-443"];
m48_180 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="443-443"];
m48_182 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="443-443"];
m48_184 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="443-443"];
m48_192 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="466-466"];
m48_193 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSets()", span="466-466"];
m48_194 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="466-466"];
m48_202 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="486-486"];
m48_203 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithRequiredAndSet()", span="486-486"];
m48_204 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="486-486"];
m48_211 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="506-506"];
m48_212 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithRequiredAndSet()", span="506-506"];
m48_213 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="506-506"];
m48_219 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="525-525"];
m48_220 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithRequired()", span="525-525"];
m48_221 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="525-525"];
m48_228 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="544-544"];
m48_229 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="544-544"];
m48_230 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="544-544"];
m48_237 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="563-563"];
m48_238 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="563-563"];
m48_239 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="563-563"];
m48_245 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="582-582"];
m48_246 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="582-582"];
m48_247 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="582-582"];
m48_253 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="601-601"];
m48_254 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="601-601"];
m48_255 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="601-601"];
m48_260 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="621-621"];
m48_261 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="621-621"];
m48_262 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="621-621"];
m48_268 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="640-640"];
m48_269 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithRequiredValue()", span="640-640"];
m48_270 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="640-640"];
m48_276 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="662-662"];
m48_277 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="662-662"];
m48_278 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="662-662"];
m48_284 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="681-681"];
m48_285 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="681-681"];
m48_286 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="681-681"];
m48_292 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="703-703"];
m48_293 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithNullables()", span="703-703"];
m48_294 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="703-703"];
m48_300 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="725-725"];
m48_301 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithNullables()", span="725-725"];
m48_302 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="725-725"];
m48_310 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="745-745"];
m48_311 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithFSharpOption()", span="745-745"];
m48_312 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="745-745"];
m48_320 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="769-769"];
m48_321 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithFSharpOption()", span="769-769"];
m48_322 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="769-769"];
m48_328 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="789-793"];
m48_329 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinZero>>(() => new FakeOptionsWithMinZero()),\r\n                new string[] {},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="789-793"];
m48_330 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="789-793"];
m48_331 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="790-790"];
m48_332 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithMinZero()", span="790-790"];
m48_333 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="790-790"];
m48_339 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="803-807"];
m48_340 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="803-807"];
m48_341 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="803-807"];
m48_342 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="804-804"];
m48_343 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithMaxZero()", span="804-804"];
m48_344 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="804-804"];
m48_350 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="817-821"];
m48_351 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMinMaxZero>>(() => new FakeOptionsWithMinMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="817-821"];
m48_352 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="817-821"];
m48_353 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="818-818"];
m48_354 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithMinMaxZero()", span="818-818"];
m48_355 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="818-818"];
m48_371 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="845-845"];
m48_366 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="837-837"];
m48_370 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="845-845"];
m48_367 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithNamedAndEmptySets()", span="837-837"];
m48_368 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="837-837"];
m48_372 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="845-845"];
m48_381 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="865-865"];
m48_377 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="859-859"];
m48_380 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="865-865"];
m48_378 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="859-859"];
m48_379 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="859-859"];
m48_382 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="865-865"];
m48_387 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="875-875"];
m48_388 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeInterfaceOptions()", span="875-875"];
m48_389 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="875-875"];
m48_403 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="904-904"];
m48_398 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="896-896"];
m48_402 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="904-904"];
m48_399 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithTwoRequiredAndSets()", span="896-896"];
m48_400 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="896-896"];
m48_404 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="904-904"];
m48_409 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="920-920"];
m48_410 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithRequiredValue()", span="920-920"];
m48_411 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="920-920"];
m48_416 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="939-939"];
m48_417 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="939-939"];
m48_418 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="939-939"];
m48_425 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="958-958"];
m48_426 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="958-958"];
m48_427 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="958-958"];
m48_439 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="987-987"];
m48_434 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="980-980"];
m48_438 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="987-987"];
m48_435 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithTwoRequired()", span="980-980"];
m48_436 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="980-980"];
m48_440 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="987-987"];
m48_455 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSimpleType()", span="1017-1017"];
m48_456 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="1017-1017"];
m48_11 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m48_30 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m48_156 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m48_373 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="855-855"];
m48_374 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="858-862"];
m48_375 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == expected)", span="865-865"];
m48_376 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="855-855"];
m48_391 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="892-892"];
m48_392 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithTwoRequiredAndSets>>(() => new FakeOptionsWithTwoRequiredAndSets()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="895-899"];
m48_393 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="902-902"];
m48_394 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithTwoRequiredAndSets>)result).Errors.Should().HaveCount(x => x == expected)", span="904-904"];
m48_395 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="906-906"];
m48_396 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="result.Should().BeOfType<Parsed<FakeOptionsWithTwoRequiredAndSets>>()", span="908-908"];
m48_397 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="892-892"];
m48_46 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m48_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143"];
m48_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="146-146"];
m48_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m48_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="293-293"];
m48_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="296-296"];
m48_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="299-303"];
m48_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="306-306"];
m48_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="293-293"];
m48_137 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m48_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m48_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithDouble>>(() => new FakeOptionsWithDouble()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="70-74"];
m48_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithDouble>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="77-77"];
m48_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m48_271 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m48_356 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinMaxZero.FakeOptionsWithMinMaxZero()", span="6-6"];
m48_201 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredAndSet.FakeOptionsWithRequiredAndSet()", span="4-4"];
m48_452 [cluster="System.Uri.Uri(string)", file="InstanceBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m48_263 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="633-633"];
m48_264 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="636-636"];
m48_265 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="639-643"];
m48_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithRequiredValue>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="646-646"];
m48_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="633-633"];
m48_223 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="537-537"];
m48_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="540-540"];
m48_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="543-547"];
m48_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="550-550"];
m48_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="537-537"];
m48_313 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6"];
m48_309 [cluster="Unk.get_IsSome", file="InstanceBuilderTests.cs", label="Entry Unk.get_IsSome", span=""];
m48_7 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m48_185 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m48_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m48_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var fakeOptions = new FakeOptions()", span="21-21"];
m48_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var expectedResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)), new Error[] { new HelpRequestedError() })", span="22-23"];
m48_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => fakeOptions),\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="26-30"];
m48_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="result.ShouldBeEquivalentTo(expectedResult)", span="33-33"];
m48_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="18-18"];
m48_214 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="518-518"];
m48_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="521-521"];
m48_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequired>>(() => new FakeOptionsWithRequired()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="524-528"];
m48_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithRequired>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="531-531"];
m48_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="518-518"];
m48_451 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSimpleType.FakeOptionsWithSimpleType()", span="23-23"];
m48_205 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="497-497"];
m48_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="499-503"];
m48_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="505-509"];
m48_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithRequiredAndSet>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="512-512"];
m48_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="497-497"];
m48_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="312-312"];
m48_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="315-315"];
m48_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="318-322"];
m48_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithEnum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="325-325"];
m48_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="312-312"];
m48_67 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m48_405 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="914-914"];
m48_406 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredValue>>(() => new FakeOptionsWithRequiredValue()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="919-923"];
m48_407 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredValue>)result).Value)", span="926-926"];
m48_408 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="914-914"];
m48_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="212-212"];
m48_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="215-215"];
m48_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMaxConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMaxConstraint()),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="218-222"];
m48_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMaxConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="225-225"];
m48_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="212-212"];
m48_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m48_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="177-177"];
m48_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndOnlyMinConstraint>>(() => new FakeOptionsWithSequenceAndOnlyMinConstraint()),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="180-184"];
m48_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSequenceAndOnlyMinConstraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="187-187"];
m48_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m48_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="331-331"];
m48_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="334-340"];
m48_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithValues>>(() => new FakeOptionsWithValues()),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="343-347"];
m48_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithValues>)result).Value)", span="350-350"];
m48_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="331-331"];
m48_419 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m48_345 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMaxZero.FakeOptionsWithMaxZero()", span="6-6"];
m48_365 [cluster="Unk.HaveCount", file="InstanceBuilderTests.cs", label="Entry Unk.HaveCount", span=""];
m48_195 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m48_68 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m48_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m48_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="47-51"];
m48_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptions>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="54-54"];
m48_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m48_390 [cluster="CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeInterfaceOptions.FakeInterfaceOptions()", span="2-2"];
m48_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="763-763"];
m48_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithFSharpOption>>(() => new FakeOptionsWithFSharpOption()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="768-772"];
m48_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset.Value)", span="777-777"];
m48_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset))", span="779-779"];
m48_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="((Parsed<FakeOptionsWithFSharpOption>)result).Value.Offset != null", span="775-775"];
m48_319 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="763-763"];
m48_420 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="951-951"];
m48_421 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptions { StringValue=''strval0'', IntSequence=new[] { 9, 7, 8 }, BoolValue = true,  LongValue = 9876543210L }", span="954-954"];
m48_422 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue=strval0'', ''-i'', ''9'', ''7'', ''8'', ''-x'', ''9876543210'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="957-961"];
m48_423 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value)", span="964-964"];
m48_424 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="951-951"];
m48_148 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m48_191 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="304-304"];
m48_177 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m48_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="405-405"];
m48_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceAndSeparator>>(() => new FakeOptionsWithSequenceAndSeparator()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="410-414"];
m48_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSequenceAndSeparator>)result).Value.StringSequence)", span="417-417"];
m48_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="405-405"];
m48_210 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m48_288 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="697-697"];
m48_289 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithNullables>>(() => new FakeOptionsWithNullables()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="702-706"];
m48_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithNullables>)result).Value.NullableInt)", span="709-709"];
m48_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="697-697"];
m48_231 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="556-556"];
m48_232 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="559-559"];
m48_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="562-566"];
m48_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptions>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="569-569"];
m48_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="556-556"];
m48_196 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="478-478"];
m48_197 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="480-483"];
m48_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithRequiredAndSet>>(() => new FakeOptionsWithRequiredAndSet()),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="485-489"];
m48_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithRequiredAndSet>)result).Value)", span="492-492"];
m48_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="478-478"];
m48_279 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="674-674"];
m48_280 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="677-677"];
m48_281 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSequenceMinMaxEqual>>(() => new FakeOptionsWithSequenceMinMaxEqual()),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="680-684"];
m48_282 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSequenceMinMaxEqual>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="687-687"];
m48_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="674-674"];
m48_10 [cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m48_401 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequiredAndSets.FakeOptionsWithTwoRequiredAndSets()", span="4-4"];
m48_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="256-256"];
m48_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithEnum>>(() => new FakeOptionsWithEnum()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="261-265"];
m48_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithEnum>)result).Value.Colors)", span="268-268"];
m48_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="256-256"];
m48_441 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="992-992"];
m48_442 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Nothing<Func<FakeImmutableOptions>>(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="997-1001"];
m48_443 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeImmutableOptions>)result).Value)", span="1004-1004"];
m48_444 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.FakeImmutableOptions)", span="992-992"];
m48_98 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m48_364 [cluster="Unk.Should", file="InstanceBuilderTests.cs", label="Entry Unk.Should", span=""];
m48_453 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m48_272 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="656-656"];
m48_273 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptions>>(() => new FakeOptions()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="661-665"];
m48_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<FakeOptions>)result).Value.StringValue)", span="668-668"];
m48_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="656-656"];
m48_112 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m48_446 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1010-1010"];
m48_447 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithSimpleType { EndPoint = new Uri(''http://localhost/test/''), MyValue = new MySimpleType(''custom-value'') }", span="1013-1013"];
m48_448 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSimpleType>>(() => new FakeOptionsWithSimpleType()),\r\n                new[] { ''--endpoint=http://localhost/test/'', ''custom-value'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="1016-1020"];
m48_449 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<FakeOptionsWithSimpleType>)result).Value)", span="1023-1023"];
m48_450 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="1010-1010"];
m48_437 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithTwoRequired.FakeOptionsWithTwoRequired()", span="4-4"];
m48_433 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m48_38 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m48_334 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMinZero.FakeOptionsWithMinZero()", span="6-6"];
m48_335 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="800-800"];
m48_336 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithMaxZero>>(() => new FakeOptionsWithMaxZero()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="803-807"];
m48_337 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Assert.Throws<ApplicationException>(test)", span="810-810"];
m48_338 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="800-800"];
m48_186 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="455-455"];
m48_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="458-462"];
m48_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<FakeOptionsWithSets>>(() => new FakeOptionsWithSets()),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="465-469"];
m48_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="((NotParsed<FakeOptionsWithSets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="472-472"];
m48_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="455-455"];
m48_457 [file="InstanceBuilderTests.cs", label=fakeOptions, span=""];
m48_458 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m48_459 [file="InstanceBuilderTests.cs", label=int, span=""];
m48_460 [file="InstanceBuilderTests.cs", label=int, span=""];
m48_461 [file="InstanceBuilderTests.cs", label=int, span=""];
m48_462 [file="InstanceBuilderTests.cs", label=int, span=""];
m49_66 [cluster="Unk.SingleOrDefault", file="InstanceChooser.cs", label="Entry Unk.SingleOrDefault", span=""];
m49_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m49_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="97-97"];
m49_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m49_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m49_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m49_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m49_45 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m49_49 [cluster="Unk.MakeNotParsed", file="InstanceChooser.cs", label="Entry Unk.MakeNotParsed", span=""];
m49_44 [cluster="Unk.Any", file="InstanceChooser.cs", label="Entry Unk.Any", span=""];
m49_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m49_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceChooser.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m49_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m49_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="69-78"];
m49_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m49_79 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m49_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m49_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m49_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m49_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m49_40 [cluster="System.StringComparer.Equals(string, string)", file="InstanceChooser.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m49_56 [cluster="Unk.Single", file="InstanceChooser.cs", label="Entry Unk.Single", span=""];
m49_67 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m49_41 [cluster="string.Concat(string, string)", file="InstanceChooser.cs", label="Entry string.Concat(string, string)", span="0-0"];
m49_73 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="90-90"];
m49_5 [cluster="lambda expression", file="InstanceChooser.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="23-23"];
m49_12 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="23-23"];
m49_6 [cluster="lambda expression", file="InstanceChooser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="24-24"];
m49_16 [cluster="lambda expression", file="InstanceChooser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="24-24"];
m49_4 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="21-26"];
m49_11 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="23-23"];
m49_7 [cluster="lambda expression", file="InstanceChooser.cs", label="return explodedTokens;", span="25-25"];
m49_15 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="24-24"];
m49_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="21-26"];
m49_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="23-23"];
m49_17 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="24-24"];
m49_38 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="48-49"];
m49_37 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="47-49"];
m49_39 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="47-49"];
m49_51 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="69-69"];
m49_54 [cluster="lambda expression", file="InstanceChooser.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="73-73"];
m49_59 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="73-73"];
m49_50 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="69-69"];
m49_53 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="72-73"];
m49_61 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="78-78"];
m49_52 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="69-69"];
m49_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="72-73"];
m49_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="73-73"];
m49_60 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="73-73"];
m49_62 [cluster="lambda expression", file="InstanceChooser.cs", label="v.Item2", span="78-78"];
m49_63 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="78-78"];
m49_71 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m49_70 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="87-87"];
m49_72 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="87-87"];
m49_74 [cluster="lambda expression", file="InstanceChooser.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m49_75 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="90-90"];
m49_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m49_80 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m49_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m49_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m49_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m49_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m49_47 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m49_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m49_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m49_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-30"];
m49_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m49_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m49_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m49_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="arguments.Empty()", span="40-40"];
m49_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="42-42"];
m49_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var firstArg = arguments.First()", span="45-45"];
m49_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-49"];
m49_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="var verbs = Verb.SelectFromTypes(types)", span="51-51"];
m49_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="53-59"];
m49_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m49_69 [cluster="Unk.Return", file="InstanceChooser.cs", label="Entry Unk.Return", span=""];
m49_57 [cluster="Unk.AutoDefault", file="InstanceChooser.cs", label="Entry Unk.AutoDefault", span=""];
m49_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m49_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m49_76 [cluster="HelpVerbRequestedError.cstr", file="InstanceChooser.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m49_81 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m49_82 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m49_83 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m49_84 [file="InstanceChooser.cs", label=firstArg, span=""];
m49_85 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m49_86 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m49_87 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m49_88 [file="InstanceChooser.cs", label=string, span=""];
m49_89 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m50_39 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129"];
m50_40 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="132-132"];
m50_41 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="135-139"];
m50_43 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="143-143"];
m50_42 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="142-142"];
m50_44 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129"];
m50_13 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m50_14 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m50_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="56-56"];
m50_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="59-63"];
m50_17 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="66-66"];
m50_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m50_38 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m50_5 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m50_6 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m50_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m50_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94"];
m50_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101"];
m50_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="105-105"];
m50_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="104-104"];
m50_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m50_30 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m50_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m50_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m50_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25"];
m50_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="28-28"];
m50_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m50_8 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m50_9 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="37-37"];
m50_10 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="40-44"];
m50_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="47-47"];
m50_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m50_31 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m50_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m50_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75"];
m50_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82"];
m50_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="85-85"];
m50_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m50_46 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152"];
m50_47 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="155-155"];
m50_48 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="158-162"];
m50_50 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="166-166"];
m50_49 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="165-165"];
m50_51 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152"];
m50_32 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110"];
m50_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="var expected = new ImmutableAddOptions(true, default(bool), ''dummy.bin'')", span="113-113"];
m50_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(ImmutableAddOptions), typeof(ImmutableCommitOptions), typeof(ImmutableCloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m50_36 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="124-124"];
m50_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Assert.IsType<ImmutableAddOptions>(((Parsed<object>)result).Value)", span="123-123"];
m50_37 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110"];
m50_45 [cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="48-48"];
m50_7 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m51_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m51_27 [cluster="Unk.ToKeyValuePair", file="KeyValuePairHelper.cs", label="Entry Unk.ToKeyValuePair", span=""];
m51_3 [cluster="Unk.Select", file="KeyValuePairHelper.cs", label="Entry Unk.Select", span=""];
m51_45 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m51_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="248-248"];
m51_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m51_39 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m51_4 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="13-13"];
m51_5 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="t.Text.ToKeyValuePair(''true'')", span="13-13"];
m51_6 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="13-13"];
m51_12 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="19-19"];
m51_13 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="f.Text.ToKeyValuePair(s.Text)", span="19-19"];
m51_14 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="19-19"];
m51_21 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="f.IsName()\r\n                            ? f.Text.ToKeyValuePair(tokens.SkipWhile(t => !t.Equals(f)).SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : string.Empty.ToKeyValuePair()", span="27-29"];
m51_20 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="26-29"];
m51_29 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="!t.Equals(f)", span="28-28"];
m51_33 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="t.Equals(f)", span="28-28"];
m51_22 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="26-29"];
m51_28 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m51_32 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m51_35 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m51_30 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m51_34 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m51_36 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="v.IsValue()", span="28-28"];
m51_37 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m51_40 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="x.Text", span="28-28"];
m51_41 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m51_0 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m51_1 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return tokens.Select(t => t.Text.ToKeyValuePair(''true''));", span="13-13"];
m51_2 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m51_7 [cluster="string.ToKeyValuePair(params string[])", file="KeyValuePairHelper.cs", label="Entry string.ToKeyValuePair(params string[])", span="34-34"];
m51_26 [cluster="Unk.ToArray", file="KeyValuePairHelper.cs", label="Entry Unk.ToArray", span=""];
m51_31 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m51_8 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m51_9 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return tokens.Pairwise((f, s) => f.Text.ToKeyValuePair(s.Text));", span="19-19"];
m51_10 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m51_42 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", span="34-34"];
m51_43 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="36-36"];
m51_44 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", span="34-34"];
m51_23 [cluster="CommandLine.Core.Token.IsName()", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m51_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m51_38 [cluster="CommandLine.Core.Token.IsValue()", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m51_15 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m51_16 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? f.Text.ToKeyValuePair(tokens.SkipWhile(t => !t.Equals(f)).SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : string.Empty.ToKeyValuePair())\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="25-31"];
m51_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m51_18 [cluster="Unk.Pairwise", file="KeyValuePairHelper.cs", label="Entry Unk.Pairwise", span=""];
m51_46 [file="KeyValuePairHelper.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m51_47 [file="KeyValuePairHelper.cs", label="CommandLine.Core.Token", span=""];
m52_28 [cluster="System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", file="KeyValuePairHelperTests.cs", label="Entry System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="0-0"];
m52_12 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="KeyValuePairHelperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m52_0 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", span="12-12"];
m52_1 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="var expected = new KeyValuePair<string, IEnumerable<string>>[] { }", span="14-14"];
m52_2 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="var result = KeyValuePairHelper.ForSequence(new Token[] { })", span="16-16"];
m52_3 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="AssertEqual(expected, result)", span="18-18"];
m52_4 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", span="12-12"];
m52_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="KeyValuePairHelperTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m52_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="KeyValuePairHelperTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m52_16 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", span="38-38"];
m52_17 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="KeyValuePairHelperTests.cs", label="var expected = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq1'', new[] {''seq10'', ''seq11'', ''seq12''}),\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq2'', new[] {''seq20'', ''seq21''})\r\n                }", span="40-44"];
m52_18 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="KeyValuePairHelperTests.cs", label="var result = KeyValuePairHelper.ForSequence(new[]\r\n                {\r\n                    Token.Name(''seq1''), Token.Value(''seq10''), Token.Value(''seq11''), Token.Value(''seq12''),\r\n                    Token.Name(''seq2''), Token.Value(''seq20''), Token.Value(''seq21'')\r\n                })", span="46-50"];
m52_19 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="KeyValuePairHelperTests.cs", label="AssertEqual(expected, result)", span="52-52"];
m52_20 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", file="KeyValuePairHelperTests.cs", label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence_for_multiple_sequences()", span="38-38"];
m52_29 [cluster="lambda expression", file="KeyValuePairHelperTests.cs", label="Entry lambda expression", span="58-58"];
m52_30 [cluster="lambda expression", file="KeyValuePairHelperTests.cs", label="new { Expected = e, Result = r }", span="58-58"];
m52_31 [cluster="lambda expression", file="KeyValuePairHelperTests.cs", label="Exit lambda expression", span="58-58"];
m52_27 [cluster="Unk.Equal", file="KeyValuePairHelperTests.cs", label="Entry Unk.Equal", span=""];
m52_13 [cluster="CommandLine.Core.Token.Name(string)", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m52_7 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="22-22"];
m52_8 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="var expected = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq'', new[] {''seq0'', ''seq1'', ''seq2''})\r\n                }", span="24-27"];
m52_9 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="var result = KeyValuePairHelper.ForSequence(new []\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seq0''), Token.Value(''seq1''), Token.Value(''seq2'') \r\n                }).ToArray()", span="29-32"];
m52_10 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="AssertEqual(expected, result)", span="34-34"];
m52_11 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="22-22"];
m52_6 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", span="55-55"];
m52_21 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="Assert.Equal(expected.Count(), result.Count())", span="57-57"];
m52_22 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="expected.Zip(result, (e, r) => new { Expected = e, Result = r })", span="58-58"];
m52_23 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="Assert.Equal(value.Expected.Key, value.Result.Key)", span="60-60"];
m52_24 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="Assert.Equal(value.Expected.Value, value.Result.Value)", span="61-61"];
m52_25 [cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", file="KeyValuePairHelperTests.cs", label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.AssertEqual(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>)", span="55-55"];
m52_14 [cluster="CommandLine.Core.Token.Value(string)", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m52_5 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelperTests.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m53_42 [cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0"];
m53_38 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m53_39 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="var index = Array.FindLastIndex(value, str => !string.IsNullOrEmpty(str))", span="172-172"];
m53_40 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="return index + 1;", span="175-175"];
m53_41 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m53_4 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m53_5 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m53_2 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m53_3 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m53_6 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m53_7 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m53_43 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="172-172"];
m53_32 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="func(line)", span="152-152"];
m53_31 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="152-152"];
m53_33 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="152-152"];
m53_44 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="!string.IsNullOrEmpty(str)", span="172-172"];
m53_45 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="172-172"];
m53_46 [cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m53_35 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m53_36 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="return before\r\n                ? AddToHelpText(helpText, helpText.AddPreOptionsLine)\r\n                : AddToHelpText(helpText, helpText.AddPostOptionsLine);", span="159-161"];
m53_37 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m53_8 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m53_9 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line1 == null", span="76-76"];
m53_11 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line2 == null", span="77-77"];
m53_13 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line3 == null", span="78-78"];
m53_15 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line4 == null", span="79-79"];
m53_17 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line5 == null", span="80-80"];
m53_19 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line1 = line1", span="82-82"];
m53_20 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line2 = line2", span="83-83"];
m53_21 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line3 = line3", span="84-84"];
m53_22 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line4 = line4", span="85-85"];
m53_23 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line5 = line5", span="86-86"];
m53_10 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line1'');", span="76-76"];
m53_12 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line2'');", span="77-77"];
m53_14 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line3'');", span="78-78"];
m53_16 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line4'');", span="79-79"];
m53_18 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line5'');", span="80-80"];
m53_24 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m53_26 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m53_27 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="var strArray = new[] { line1, line2, line3, line4, line5 }", span="151-151"];
m53_28 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="return strArray.Aggregate(helpText, (current, line) => func(line));", span="152-152"];
m53_29 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m53_0 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m53_1 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m53_34 [cluster="System.Func<T, TResult>.Invoke(T)", file="MultiLineTextAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m53_25 [cluster="System.ArgumentException.ArgumentException(string)", file="MultiLineTextAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m53_30 [cluster="Unk.Aggregate", file="MultiLineTextAttribute.cs", label="Entry Unk.Aggregate", span=""];
m53_47 [file="MultiLineTextAttribute.cs", label="CommandLine.Text.MultilineTextAttribute", span=""];
m53_48 [file="MultiLineTextAttribute.cs", label="System.Func<string, CommandLine.Text.HelpText>", span=""];
m54_8 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="Entry CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", span="22-22"];
m54_9 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="specification.Tag", span="24-24"];
m54_11 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="return FromOptionSpecification((OptionSpecification)specification);", span="27-27"];
m54_10 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="SpecificationType.Option", span="26-26"];
m54_12 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="return NameInfo.EmptyName;", span="29-29"];
m54_13 [cluster="CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", file="NameExtensions.cs", label="Exit CommandLine.Core.NameExtensions.FromSpecification(CommandLine.Core.Specification)", span="22-22"];
m54_7 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameExtensions.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m54_3 [cluster="System.StringComparer.Equals(string, string)", file="NameExtensions.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m54_0 [cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs", label="Entry CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8"];
m54_1 [cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs", label="return value.Length == 1\r\n               ? comparer.Equals(value, shortName)\r\n               : comparer.Equals(value, longName);", span="10-12"];
m54_2 [cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs", label="Exit CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8"];
m54_4 [cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs", label="Entry CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="15-15"];
m54_5 [cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs", label="return new NameInfo(\r\n                specification.LongName,\r\n                specification.ShortName);", span="17-19"];
m54_6 [cluster="CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="NameExtensions.cs", label="Exit CommandLine.Core.NameExtensions.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="15-15"];
m55_17 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Entry CommandLine.NameInfo.GetHashCode()", span="80-80"];
m55_18 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="return new { ShortName, LongName }.GetHashCode();", span="82-82"];
m55_19 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Exit CommandLine.NameInfo.GetHashCode()", span="80-80"];
m55_0 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m55_1 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="shortName == null", span="22-22"];
m55_3 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="longName == null", span="23-23"];
m55_5 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="this.longName = longName", span="25-25"];
m55_6 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="this.shortName = shortName", span="26-26"];
m55_2 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="throw new ArgumentNullException(''shortName'');", span="22-22"];
m55_4 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="throw new ArgumentNullException(''longName'');", span="23-23"];
m55_7 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m55_15 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m55_21 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="other == null", span="92-92"];
m55_23 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="return ShortName.Equals(other.ShortName) && LongName.Equals(other.LongName);", span="97-97"];
m55_22 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="return false;", span="94-94"];
m55_24 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m55_16 [cluster="object.Equals(object)", file="NameInfo.cs", label="Entry object.Equals(object)", span="0-0"];
m55_25 [cluster="string.Equals(string)", file="NameInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m55_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m55_9 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(object)", span="65-65"];
m55_10 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="var other = obj as NameInfo", span="67-67"];
m55_13 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="return base.Equals(obj);", span="73-73"];
m55_11 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="other != null", span="68-68"];
m55_12 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="return Equals(other);", span="70-70"];
m55_14 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(object)", span="65-65"];
m55_20 [cluster="object.GetHashCode()", file="NameInfo.cs", label="Entry object.GetHashCode()", span="0-0"];
m55_26 [file="NameInfo.cs", label="CommandLine.NameInfo", span=""];
m56_11 [cluster="Unk.SingleOrDefault", file="NameLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m56_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m56_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="13-13"];
m56_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m56_7 [cluster="string.MatchName(string, string, System.StringComparer)", file="NameLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m56_12 [cluster="Unk.ToMaybe", file="NameLookup.cs", label="Entry Unk.ToMaybe", span=""];
m56_21 [cluster="Unk.Just", file="NameLookup.cs", label="Entry Unk.Just", span=""];
m56_18 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="22-22"];
m56_5 [cluster="lambda expression", file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="13-13"];
m56_4 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="13-13"];
m56_6 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="13-13"];
m56_16 [cluster="lambda expression", file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="20-20"];
m56_15 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="20-20"];
m56_17 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="20-20"];
m56_19 [cluster="lambda expression", file="NameLookup.cs", label="Maybe.Just(spec.Separator)", span="22-22"];
m56_20 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="22-22"];
m56_14 [cluster="Unk.Return", file="NameLookup.cs", label="Entry Unk.Return", span=""];
m56_13 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookup.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m56_3 [cluster="Unk.Any", file="NameLookup.cs", label="Entry Unk.Any", span=""];
m56_8 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m56_9 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="19-22"];
m56_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m56_22 [file="NameLookup.cs", label=string, span=""];
m56_23 [file="NameLookup.cs", label="System.StringComparer", span=""];
m56_24 [file="NameLookup.cs", label=string, span=""];
m56_25 [file="NameLookup.cs", label="System.StringComparer", span=""];
m57_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m57_6 [cluster="CSharpx.Maybe.Just<T>(T)", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m57_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m57_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m57_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var expected = Maybe.Just(''.'')", span="17-17"];
m57_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="18-19"];
m57_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="25-25"];
m57_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var result = NameLookup.HavingSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22"];
m57_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m57_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookupTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m57_11 [cluster="Unk.ShouldBeEquivalentTo", file="NameLookupTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m57_9 [cluster="System.Collections.Generic.List<T>.List()", file="NameLookupTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m58_0 [cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m58_1 [cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs", label="Exit CommandLine.NullInstance.NullInstance()", span="9-9"];
m59_11 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="33-33"];
m59_12 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="33-33"];
m59_17 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="61-61"];
m59_18 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="61-61"];
m59_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="52-52"];
m59_16 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="52-52"];
m59_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m59_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="18-18"];
m59_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="shortName == null", span="20-20"];
m59_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="longName == null", span="21-21"];
m59_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.shortName = shortName", span="23-23"];
m59_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.longName = longName", span="24-24"];
m59_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''shortName'');", span="20-20"];
m59_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''longName'');", span="21-21"];
m59_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="setName = string.Empty", span="25-25"];
m59_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="separator = '\0'", span="26-26"];
m59_9 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="18-18"];
m59_13 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="42-42"];
m59_14 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="42-42"];
m59_19 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m60_30 [cluster="Unk.WithValue", file="OptionMapper.cs", label="Entry Unk.WithValue", span=""];
m60_4 [cluster="Unk.Select", file="OptionMapper.cs", label="Entry Unk.Select", span=""];
m60_18 [cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapper.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m60_24 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapper.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m60_23 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m60_11 [cluster="Unk.ToMaybe", file="OptionMapper.cs", label="Entry Unk.ToMaybe", span=""];
m60_10 [cluster="Unk.FirstOrDefault", file="OptionMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m60_25 [cluster="CSharpx.Maybe.Just<T>(T)", file="OptionMapper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m60_13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m60_29 [cluster="Unk.Just", file="OptionMapper.cs", label="Entry Unk.Just", span=""];
m60_26 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="28-31"];
m60_8 [cluster="lambda expression", file="OptionMapper.cs", label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="22-35"];
m60_16 [cluster="lambda expression", file="OptionMapper.cs", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24"];
m60_20 [cluster="lambda expression", file="OptionMapper.cs", label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="27-34"];
m60_7 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="21-35"];
m60_31 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="38-38"];
m60_34 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="39-39"];
m60_37 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="39-39"];
m60_27 [cluster="lambda expression", file="OptionMapper.cs", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31"];
m60_9 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="21-35"];
m60_15 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="23-24"];
m60_19 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="26-34"];
m60_17 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="23-24"];
m60_21 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="26-34"];
m60_28 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="28-31"];
m60_32 [cluster="lambda expression", file="OptionMapper.cs", label="se.Item1", span="38-38"];
m60_33 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="38-38"];
m60_35 [cluster="lambda expression", file="OptionMapper.cs", label="se.Item2", span="39-39"];
m60_36 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="39-39"];
m60_38 [cluster="lambda expression", file="OptionMapper.cs", label="se.Value", span="39-39"];
m60_39 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="39-39"];
m60_14 [cluster="Unk.Return", file="OptionMapper.cs", label="Entry Unk.Return", span=""];
m60_22 [cluster="Unk.converter", file="OptionMapper.cs", label="Entry Unk.converter", span=""];
m60_5 [cluster="Unk.>", file="OptionMapper.cs", label="Entry Unk.>", span=""];
m60_12 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m60_6 [cluster="Unk.Succeed", file="OptionMapper.cs", label="Entry Unk.Succeed", span=""];
m60_0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m60_1 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="20-36"];
m60_2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39"];
m60_3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m60_40 [file="OptionMapper.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
m60_41 [file="OptionMapper.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span=""];
m60_42 [file="OptionMapper.cs", label="System.StringComparer", span=""];
m60_43 [file="OptionMapper.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m61_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m61_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m61_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m61_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m61_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m61_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m61_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m61_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m61_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23"];
m61_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30"];
m61_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37"];
m61_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43"];
m61_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17"];
m61_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="41-43"];
m61_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="28-28"];
m61_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="34-34"];
m61_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="36-36"];
m61_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28"];
m61_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="28-28"];
m61_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="34-34"];
m61_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="34-34"];
m61_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36"];
m61_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="36-36"];
m61_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43"];
m61_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="41-43"];
m61_31 [cluster="Unk.IsOption", file="OptionMapperTests.cs", label="Entry Unk.IsOption", span=""];
m61_32 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m61_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m61_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m61_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m61_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m61_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m61_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m62_16 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="OptionSpecification.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m62_12 [cluster="System.Type.ToTargetType()", file="OptionSpecification.cs", label="Entry System.Type.ToTargetType()", span="71-71"];
m62_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m62_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="this.shortName = shortName", span="21-21"];
m62_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="this.longName = longName", span="22-22"];
m62_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="this.separator = separator", span="23-23"];
m62_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="this.setName = setName", span="24-24"];
m62_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m62_10 [cluster="CSharpx.Maybe.Just<T>(T)", file="OptionSpecification.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m62_11 [cluster="T.ToMaybe<T>()", file="OptionSpecification.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m62_13 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m62_14 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs", label="return new OptionSpecification(shortName, longName, required, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(),\r\n                '\0', Maybe.Nothing<object>(), helpText, metaValue, Enumerable.Empty<string>(), typeof(bool), TargetType.Switch);", span="47-48"];
m62_15 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m62_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionSpecification.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m62_6 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m62_7 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Min),\r\n                attribute.Max == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Max),\r\n                attribute.Separator,\r\n                attribute.Default.ToMaybe(),\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues,\r\n                conversionType,\r\n                conversionType.ToTargetType());", span="29-42"];
m62_8 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m62_17 [file="OptionSpecification.cs", label="CommandLine.Core.OptionSpecification", span=""];
m63_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m63_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration == null", span="39-39"];
m63_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration(settings)", span="42-42"];
m63_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="throw new ArgumentNullException(''configuration'');", span="39-39"];
m63_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings = new ParserSettings()", span="41-41"];
m63_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings.Consumed = true", span="43-43"];
m63_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m63_84 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m63_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m63_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="55-55"];
m63_21 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Dispose(false)", span="57-57"];
m63_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="55-55"];
m63_86 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m63_16 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m63_58 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m63_59 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="args == null", span="144-144"];
m63_61 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types == null", span="145-145"];
m63_63 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types.Length == 0", span="146-146"];
m63_65 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="148-155"];
m63_60 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="144-144"];
m63_62 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''types'');", span="145-145"];
m63_64 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="146-146"];
m63_66 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m63_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m63_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings = settings", span="48-48"];
m63_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings.Consumed = true", span="49-49"];
m63_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m63_67 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m63_42 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="113-113"];
m63_43 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="factory == null", span="116-116"];
m63_47 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="118-118"];
m63_49 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="120-127"];
m63_44 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''factory'');", span="116-116"];
m63_45 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="!typeof(T).IsMutable()", span="117-117"];
m63_46 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentException(''factory'');", span="117-117"];
m63_48 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="118-118"];
m63_50 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="113-113"];
m63_100 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m63_51 [cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m63_112 [cluster="Unk.Where", file="Parser.cs", label="Entry Unk.Where", span=""];
m63_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m63_93 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m63_5 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m63_6 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="settings = new ParserSettings { Consumed = true }", span="28-28"];
m63_7 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="26-26"];
m63_31 [cluster="CSharpx.Maybe.Just<T>(T)", file="Parser.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m63_103 [cluster="System.Func<TResult>.Invoke()", file="Parser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m63_105 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="201-201"];
m63_116 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="parserResult.Tag == ParserResultType.NotParsed", span="203-203"];
m63_117 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="((NotParsed<T>)parserResult).Errors.Any()", span="205-205"];
m63_118 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="207-207"];
m63_119 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="return parserResult;", span="211-211"];
m63_120 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="201-201"];
m63_124 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="207-207"];
m63_0 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="21-21"];
m63_1 [cluster="lambda expression", file="Parser.cs", label="new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="21-21"];
m63_2 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="21-21"];
m63_35 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="94-99"];
m63_34 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="94-99"];
m63_36 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="94-99"];
m63_38 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="96-96"];
m63_39 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="96-96"];
m63_40 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="96-96"];
m63_53 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="121-126"];
m63_52 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="121-126"];
m63_54 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="121-126"];
m63_55 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="123-123"];
m63_56 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="123-123"];
m63_57 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="123-123"];
m63_69 [cluster="lambda expression", file="Parser.cs", label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="149-154"];
m63_68 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="149-154"];
m63_70 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="149-154"];
m63_72 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="150-150"];
m63_73 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="150-150"];
m63_74 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="150-150"];
m63_88 [cluster="lambda expression", file="Parser.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="177-177"];
m63_91 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="177-177"];
m63_95 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="178-178"];
m63_98 [cluster="lambda expression", file="Parser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="179-179"];
m63_87 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="176-177"];
m63_94 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="178-178"];
m63_97 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="179-179"];
m63_89 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="176-177"];
m63_90 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="177-177"];
m63_92 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="177-177"];
m63_96 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="178-178"];
m63_99 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="179-179"];
m63_109 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="196-196"];
m63_110 [cluster="lambda expression", file="Parser.cs", label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="196-196"];
m63_111 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="196-196"];
m63_113 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="196-196"];
m63_114 [cluster="lambda expression", file="Parser.cs", label="e.Tag != ErrorType.UnknownOptionError", span="196-196"];
m63_115 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="196-196"];
m63_125 [cluster="lambda expression", file="Parser.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", span="207-207"];
m63_126 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="207-207"];
m63_121 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m63_122 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m63_104 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="192-192"];
m63_106 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="return ignoreUnknownArguments\r\n                       ? parserResult.Tag == ParserResultType.NotParsed\r\n                            ? ((NotParsed<T>)parserResult).MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                            : parserResult\r\n                       : parserResult;", span="194-198"];
m63_107 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="192-192"];
m63_108 [cluster="Unk.MapErrors", file="Parser.cs", label="Entry Unk.MapErrors", span=""];
m63_123 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m63_127 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m63_71 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m63_85 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m63_79 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m63_32 [cluster="CSharpx.Maybe.Nothing<T>()", file="Parser.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m63_136 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m63_30 [cluster="System.Type.IsMutable()", file="Parser.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m63_33 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="183-183"];
m63_101 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="185-189"];
m63_102 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="183-183"];
m63_75 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="161-161"];
m63_76 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Dispose(true)", span="163-163"];
m63_77 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="GC.SuppressFinalize(this)", span="165-165"];
m63_78 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="161-161"];
m63_24 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m63_25 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="87-87"];
m63_28 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="93-100"];
m63_26 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="87-87"];
m63_27 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91"];
m63_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m63_41 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="168-168"];
m63_80 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="173-178"];
m63_81 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="179-179"];
m63_82 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="return explodedTokens;", span="180-180"];
m63_83 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="168-168"];
m63_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="214-214"];
m63_129 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposed, span="216-216"];
m63_131 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposing, span="221-221"];
m63_130 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="return;", span="218-218"];
m63_132 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings != null", span="223-223"];
m63_133 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings.Dispose()", span="225-225"];
m63_134 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="disposed = true", span="228-228"];
m63_135 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="214-214"];
m63_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m63_128 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m63_137 [file="Parser.cs", label="CommandLine.Parser", span=""];
m63_138 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m63_139 [file="Parser.cs", label=factory, span=""];
m63_140 [file="Parser.cs", label="System.Func<T>", span=""];
m63_141 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m63_142 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m63_143 [file="Parser.cs", label="params System.Type[]", span=""];
m63_144 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m63_145 [file="Parser.cs", label="CommandLine.ParserSettings", span=""];
m63_146 [file="Parser.cs", label="CommandLine.ParserResult<T>", span=""];
m64_42 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="222-222"];
m64_43 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="224-224"];
m64_45 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10) });", span="226-227"];
m64_44 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="224-224"];
m64_46 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="222-222"];
m64_52 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="283-283"];
m64_53 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="285-285"];
m64_55 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12) });", span="287-288"];
m64_54 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="285-285"];
m64_56 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="283-283"];
m64_0 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m64_1 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="27-27"];
m64_3 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2) });", span="29-29"];
m64_2 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="27-27"];
m64_4 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m64_22 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="115-115"];
m64_23 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="117-117"];
m64_25 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6) });", span="119-119"];
m64_24 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="117-117"];
m64_26 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="115-115"];
m64_32 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="166-166"];
m64_33 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="168-168"];
m64_35 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8) });", span="170-170"];
m64_34 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="168-168"];
m64_36 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="166-166"];
m64_57 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="315-315"];
m64_58 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="317-317"];
m64_60 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13) });", span="319-320"];
m64_59 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="317-317"];
m64_61 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="315-315"];
m64_37 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="193-193"];
m64_38 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="195-195"];
m64_40 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9) });", span="197-198"];
m64_39 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="195-195"];
m64_41 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="193-193"];
m64_47 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="252-252"];
m64_48 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="254-254"];
m64_50 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11) });", span="256-257"];
m64_49 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="254-254"];
m64_51 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="252-252"];
m64_17 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="91-91"];
m64_18 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="93-93"];
m64_20 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5) });", span="95-95"];
m64_19 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="93-93"];
m64_21 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="91-91"];
m64_12 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m64_13 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="70-70"];
m64_15 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4) });", span="72-72"];
m64_14 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="70-70"];
m64_16 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m64_67 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="382-382"];
m64_68 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="384-384"];
m64_70 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14), typeof(T15) });", span="386-387"];
m64_69 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="384-384"];
m64_71 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="382-382"];
m64_7 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m64_8 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="48-48"];
m64_10 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3) });", span="50-50"];
m64_9 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="48-48"];
m64_11 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m64_62 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="348-348"];
m64_63 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="350-350"];
m64_65 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14) });", span="352-353"];
m64_64 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="350-350"];
m64_66 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="348-348"];
m64_72 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="417-417"];
m64_73 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="419-419"];
m64_75 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7), typeof(T8),\r\n                typeof(T9), typeof(T10), typeof(T11), typeof(T12), typeof(T13), typeof(T14), typeof(T15), typeof(T16) });", span="421-422"];
m64_74 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="419-419"];
m64_76 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="417-417"];
m64_6 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ParserExtensions.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m64_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m64_27 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Entry CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="140-140"];
m64_28 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="parser == null", span="142-142"];
m64_30 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="return parser.ParseArguments(args, new[] { typeof(T1), typeof(T2), typeof(T3), typeof(T4), typeof(T5), typeof(T6), typeof(T7) });", span="144-144"];
m64_29 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="throw new ArgumentNullException(''parser'');", span="142-142"];
m64_31 [cluster="CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", file="ParserExtensions.cs", label="Exit CommandLine.ParserExtensions.ParseArguments<T1, T2, T3, T4, T5, T6, T7>(CommandLine.Parser, System.Collections.Generic.IEnumerable<string>)", span="140-140"];
m65_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserResult.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m65_18 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="100-100"];
m65_19 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Parsed(T)", span="100-100"];
m65_37 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m65_38 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="this.errors = errors", span="166-166"];
m65_39 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m65_55 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="Entry CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="221-221"];
m65_56 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="var notParsed = parserResult as NotParsed<T>", span="225-225"];
m65_58 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="return new NotParsed<T>(notParsed.TypeInfo, func(notParsed.Errors));", span="227-227"];
m65_59 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="return parserResult;", span="228-228"];
m65_57 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="notParsed != null", span="226-226"];
m65_60 [cluster="CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResult.cs", label="Exit CommandLine.ParserResultExtensions.MapErrors<T>(CommandLine.ParserResult<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="221-221"];
m65_20 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Equals(object)", span="118-118"];
m65_21 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="var other = obj as Parsed<T>", span="120-120"];
m65_24 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="return base.Equals(obj);", span="126-126"];
m65_22 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="other != null", span="121-121"];
m65_23 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="return Equals(other);", span="123-123"];
m65_25 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Equals(object)", span="118-118"];
m65_54 [cluster="Unk.SequenceEqual", file="ParserResult.cs", label="Entry Unk.SequenceEqual", span=""];
m65_27 [cluster="object.Equals(object)", file="ParserResult.cs", label="Entry object.Equals(object)", span="0-0"];
m65_46 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="208-208"];
m65_50 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="other == null", span="210-210"];
m65_52 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="return this.Tag.Equals(other.Tag) && Errors.SequenceEqual(other.Errors);", span="215-215"];
m65_51 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="return false;", span="212-212"];
m65_53 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="208-208"];
m65_15 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", span="94-94"];
m65_16 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.value = value", span="97-97"];
m65_17 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", span="94-94"];
m65_36 [cluster="System.Enum.Equals(object)", file="ParserResult.cs", label="Entry System.Enum.Equals(object)", span="0-0"];
m65_8 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m65_9 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="return new TypeInfo(current, choices);", span="36-36"];
m65_10 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m65_0 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="13-13"];
m65_1 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="this.current = current", span="15-15"];
m65_2 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="this.choices = choices", span="16-16"];
m65_3 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="13-13"];
m65_4 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m65_5 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="return new TypeInfo(current, Enumerable.Empty<Type>());", span="31-31"];
m65_6 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m65_26 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="143-143"];
m65_32 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="other == null", span="145-145"];
m65_34 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="return this.Tag.Equals(other.Tag)\r\n                    && Value.Equals(other.Value);", span="150-151"];
m65_33 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="return false;", span="147-147"];
m65_35 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="143-143"];
m65_40 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.Equals(object)", span="182-182"];
m65_41 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="var other = obj as NotParsed<T>", span="184-184"];
m65_44 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="return base.Equals(obj);", span="190-190"];
m65_42 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="other != null", span="185-185"];
m65_43 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="return Equals(other);", span="187-187"];
m65_45 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.Equals(object)", span="182-182"];
m65_47 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.GetHashCode()", span="197-197"];
m65_48 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="return new { Tag, Errors }.GetHashCode();", span="200-200"];
m65_49 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.GetHashCode()", span="197-197"];
m65_61 [cluster="System.Func<T, TResult>.Invoke(T)", file="ParserResult.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m65_11 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", span="66-66"];
m65_12 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.tag = tag", span="68-68"];
m65_13 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.typeInfo = typeInfo", span="69-69"];
m65_14 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="Exit CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", span="66-66"];
m65_31 [cluster="object.GetHashCode()", file="ParserResult.cs", label="Entry object.GetHashCode()", span="0-0"];
m65_28 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.GetHashCode()", span="133-133"];
m65_29 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="return new { Tag, Value }.GetHashCode();", span="135-135"];
m65_30 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.GetHashCode()", span="133-133"];
m65_62 [file="ParserResult.cs", label="CommandLine.TypeInfo", span=""];
m65_63 [file="ParserResult.cs", label="CommandLine.ParserResult<T>", span=""];
m65_64 [file="ParserResult.cs", label="CommandLine.Parsed<T>", span=""];
m65_65 [file="ParserResult.cs", label="CommandLine.NotParsed<T>", span=""];
m66_288 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="996-996"];
m66_289 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="1013-1013"];
m66_292 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="1018-1018"];
m66_294 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="1022-1022"];
m66_296 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="1026-1026"];
m66_298 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="1030-1030"];
m66_300 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="1034-1034"];
m66_302 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="1038-1038"];
m66_304 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="1042-1042"];
m66_306 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="1046-1046"];
m66_308 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="1050-1050"];
m66_310 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="1054-1054"];
m66_312 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="1058-1058"];
m66_314 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc12((T12)parsed.Value);", span="1062-1062"];
m66_316 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc13((T13)parsed.Value);", span="1066-1066"];
m66_318 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc14((T14)parsed.Value);", span="1070-1070"];
m66_320 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="1074-1074"];
m66_290 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="1014-1014"];
m66_291 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="1016-1016"];
m66_293 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="1020-1020"];
m66_295 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="1024-1024"];
m66_297 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="1028-1028"];
m66_299 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="1032-1032"];
m66_301 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="1036-1036"];
m66_303 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="1040-1040"];
m66_305 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="1044-1044"];
m66_307 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="1048-1048"];
m66_309 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="1052-1052"];
m66_311 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="1056-1056"];
m66_313 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T12", span="1060-1060"];
m66_315 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T13", span="1064-1064"];
m66_317 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T14", span="1068-1068"];
m66_319 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="1072-1072"];
m66_321 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="996-996"];
m66_256 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="885-885"];
m66_257 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="901-901"];
m66_260 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="906-906"];
m66_262 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="910-910"];
m66_264 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="914-914"];
m66_266 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="918-918"];
m66_268 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="922-922"];
m66_270 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="926-926"];
m66_272 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="930-930"];
m66_274 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="934-934"];
m66_276 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="938-938"];
m66_278 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="942-942"];
m66_280 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="946-946"];
m66_282 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc12((T12)parsed.Value);", span="950-950"];
m66_284 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc13((T13)parsed.Value);", span="954-954"];
m66_286 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="958-958"];
m66_258 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="902-902"];
m66_259 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="904-904"];
m66_261 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="908-908"];
m66_263 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="912-912"];
m66_265 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="916-916"];
m66_267 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="920-920"];
m66_269 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="924-924"];
m66_271 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="928-928"];
m66_273 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="932-932"];
m66_275 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="936-936"];
m66_277 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="940-940"];
m66_279 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="944-944"];
m66_281 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T12", span="948-948"];
m66_283 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T13", span="952-952"];
m66_285 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="956-956"];
m66_287 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="885-885"];
m66_6 [cluster="System.Action<T>.Invoke(T)", file="ParserResultExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m66_172 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="594-594"];
m66_173 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="607-607"];
m66_176 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="612-612"];
m66_178 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="616-616"];
m66_180 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="620-620"];
m66_182 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="624-624"];
m66_184 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="628-628"];
m66_186 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="632-632"];
m66_188 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="636-636"];
m66_190 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="640-640"];
m66_192 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="644-644"];
m66_194 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="648-648"];
m66_196 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="652-652"];
m66_174 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="608-608"];
m66_175 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="610-610"];
m66_177 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="614-614"];
m66_179 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="618-618"];
m66_181 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="622-622"];
m66_183 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="626-626"];
m66_185 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="630-630"];
m66_187 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="634-634"];
m66_189 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="638-638"];
m66_191 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="642-642"];
m66_193 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="646-646"];
m66_195 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="650-650"];
m66_197 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="594-594"];
m66_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="ParserResultExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m66_198 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="684-684"];
m66_199 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="698-698"];
m66_202 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="703-703"];
m66_204 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="707-707"];
m66_206 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="711-711"];
m66_208 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="715-715"];
m66_210 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="719-719"];
m66_212 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="723-723"];
m66_214 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="727-727"];
m66_216 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="731-731"];
m66_218 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="735-735"];
m66_220 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="739-739"];
m66_222 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="743-743"];
m66_224 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="747-747"];
m66_200 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="699-699"];
m66_201 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="701-701"];
m66_203 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="705-705"];
m66_205 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="709-709"];
m66_207 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="713-713"];
m66_209 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="717-717"];
m66_211 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="721-721"];
m66_213 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="725-725"];
m66_215 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="729-729"];
m66_217 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="733-733"];
m66_219 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="737-737"];
m66_221 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="741-741"];
m66_223 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="745-745"];
m66_225 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="684-684"];
m66_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ParserResultExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m66_358 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="1239-1239"];
m66_359 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="1258-1258"];
m66_362 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="1263-1263"];
m66_364 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="1267-1267"];
m66_366 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="1271-1271"];
m66_368 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="1275-1275"];
m66_370 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="1279-1279"];
m66_372 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="1283-1283"];
m66_374 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="1287-1287"];
m66_376 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="1291-1291"];
m66_378 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="1295-1295"];
m66_380 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="1299-1299"];
m66_382 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="1303-1303"];
m66_384 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc12((T12)parsed.Value);", span="1307-1307"];
m66_386 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc13((T13)parsed.Value);", span="1311-1311"];
m66_388 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc14((T14)parsed.Value);", span="1315-1315"];
m66_390 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc15((T15)parsed.Value);", span="1319-1319"];
m66_392 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc16((T16)parsed.Value);", span="1323-1323"];
m66_394 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="1327-1327"];
m66_360 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="1259-1259"];
m66_361 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="1261-1261"];
m66_363 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="1265-1265"];
m66_365 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="1269-1269"];
m66_367 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="1273-1273"];
m66_369 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="1277-1277"];
m66_371 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="1281-1281"];
m66_373 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="1285-1285"];
m66_375 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="1289-1289"];
m66_377 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="1293-1293"];
m66_379 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="1297-1297"];
m66_381 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="1301-1301"];
m66_383 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T12", span="1305-1305"];
m66_385 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T13", span="1309-1309"];
m66_387 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T14", span="1313-1313"];
m66_389 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T15", span="1317-1317"];
m66_391 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T16", span="1321-1321"];
m66_393 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="1325-1325"];
m66_395 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<T16, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="1239-1239"];
m66_46 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160"];
m66_47 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="166-166"];
m66_50 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="171-171"];
m66_52 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="175-175"];
m66_54 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="179-179"];
m66_56 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="183-183"];
m66_48 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="167-167"];
m66_49 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="169-169"];
m66_51 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="173-173"];
m66_53 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="177-177"];
m66_55 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="181-181"];
m66_57 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160"];
m66_72 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249"];
m66_73 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="257-257"];
m66_76 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="262-262"];
m66_78 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="266-266"];
m66_80 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="270-270"];
m66_82 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="274-274"];
m66_84 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="278-278"];
m66_86 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="282-282"];
m66_74 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="258-258"];
m66_75 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="260-260"];
m66_77 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="264-264"];
m66_79 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="268-268"];
m66_81 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="272-272"];
m66_83 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="276-276"];
m66_85 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="280-280"];
m66_87 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249"];
m66_322 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="1114-1114"];
m66_323 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="1132-1132"];
m66_326 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="1137-1137"];
m66_328 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="1141-1141"];
m66_330 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="1145-1145"];
m66_332 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="1149-1149"];
m66_334 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="1153-1153"];
m66_336 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="1157-1157"];
m66_338 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="1161-1161"];
m66_340 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="1165-1165"];
m66_342 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="1169-1169"];
m66_344 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="1173-1173"];
m66_346 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="1177-1177"];
m66_348 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc12((T12)parsed.Value);", span="1181-1181"];
m66_350 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc13((T13)parsed.Value);", span="1185-1185"];
m66_352 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc14((T14)parsed.Value);", span="1189-1189"];
m66_354 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc15((T15)parsed.Value);", span="1193-1193"];
m66_356 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="1197-1197"];
m66_324 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="1133-1133"];
m66_325 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="1135-1135"];
m66_327 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="1139-1139"];
m66_329 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="1143-1143"];
m66_331 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="1147-1147"];
m66_333 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="1151-1151"];
m66_335 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="1155-1155"];
m66_337 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="1159-1159"];
m66_339 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="1163-1163"];
m66_341 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="1167-1167"];
m66_343 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="1171-1171"];
m66_345 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="1175-1175"];
m66_347 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T12", span="1179-1179"];
m66_349 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T13", span="1183-1183"];
m66_351 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T14", span="1187-1187"];
m66_353 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T15", span="1191-1191"];
m66_355 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="1195-1195"];
m66_357 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<T13, TResult>, System.Func<T14, TResult>, System.Func<T15, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="1114-1114"];
m66_88 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="304-304"];
m66_89 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="313-313"];
m66_92 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="318-318"];
m66_94 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="322-322"];
m66_96 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="326-326"];
m66_98 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="330-330"];
m66_100 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="334-334"];
m66_102 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="338-338"];
m66_104 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="342-342"];
m66_90 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="314-314"];
m66_91 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="316-316"];
m66_93 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="320-320"];
m66_95 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="324-324"];
m66_97 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="328-328"];
m66_99 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="332-332"];
m66_101 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="336-336"];
m66_103 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="340-340"];
m66_105 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="304-304"];
m66_7 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", span="38-38"];
m66_8 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="40-40"];
m66_11 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="action((T)parsed.Value)", span="45-45"];
m66_12 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="return result;", span="48-48"];
m66_9 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="parsed != null", span="41-41"];
m66_10 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="parsed.Value is T", span="43-43"];
m66_13 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<object>, System.Action<T>)", span="38-38"];
m66_20 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78"];
m66_21 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<TSource>", span="82-82"];
m66_23 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc(parsed.Value);", span="85-85"];
m66_24 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<TSource>)result).Errors);", span="87-87"];
m66_22 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="83-83"];
m66_25 [cluster="CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<TSource, TResult>(CommandLine.ParserResult<TSource>, System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78"];
m66_58 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="201-201"];
m66_59 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="208-208"];
m66_62 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="213-213"];
m66_64 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="217-217"];
m66_66 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="221-221"];
m66_68 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="225-225"];
m66_70 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="229-229"];
m66_60 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="209-209"];
m66_61 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="211-211"];
m66_63 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="215-215"];
m66_65 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="219-219"];
m66_67 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="223-223"];
m66_69 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="227-227"];
m66_71 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="201-201"];
m66_0 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", span="21-21"];
m66_1 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<T>", span="23-23"];
m66_3 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="action(parsed.Value)", span="26-26"];
m66_4 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="return result;", span="28-28"];
m66_2 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="parsed != null", span="24-24"];
m66_5 [cluster="CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.WithParsed<T>(CommandLine.ParserResult<T>, System.Action<T>)", span="21-21"];
m66_148 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="511-511"];
m66_149 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="523-523"];
m66_152 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="528-528"];
m66_154 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="532-532"];
m66_156 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="536-536"];
m66_158 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="540-540"];
m66_160 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="544-544"];
m66_162 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="548-548"];
m66_164 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="552-552"];
m66_166 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="556-556"];
m66_168 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="560-560"];
m66_170 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="564-564"];
m66_150 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="524-524"];
m66_151 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="526-526"];
m66_153 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="530-530"];
m66_155 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="534-534"];
m66_157 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="538-538"];
m66_159 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="542-542"];
m66_161 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="546-546"];
m66_163 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="550-550"];
m66_165 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="554-554"];
m66_167 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="558-558"];
m66_169 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="562-562"];
m66_171 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="511-511"];
m66_106 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="366-366"];
m66_107 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="376-376"];
m66_110 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="381-381"];
m66_112 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="385-385"];
m66_114 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="389-389"];
m66_116 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="393-393"];
m66_118 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="397-397"];
m66_120 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="401-401"];
m66_122 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="405-405"];
m66_124 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="409-409"];
m66_108 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="377-377"];
m66_109 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="379-379"];
m66_111 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="383-383"];
m66_113 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="387-387"];
m66_115 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="391-391"];
m66_117 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="395-395"];
m66_119 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="399-399"];
m66_121 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="403-403"];
m66_123 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="407-407"];
m66_125 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="366-366"];
m66_36 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="126-126"];
m66_37 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="131-131"];
m66_40 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="136-136"];
m66_42 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="140-140"];
m66_44 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="144-144"];
m66_38 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="132-132"];
m66_39 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="134-134"];
m66_41 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="138-138"];
m66_43 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="142-142"];
m66_45 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="126-126"];
m66_126 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="435-435"];
m66_127 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="446-446"];
m66_130 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="451-451"];
m66_132 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="455-455"];
m66_134 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="459-459"];
m66_136 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="463-463"];
m66_138 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="467-467"];
m66_140 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="471-471"];
m66_142 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="475-475"];
m66_144 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="479-479"];
m66_146 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="483-483"];
m66_128 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="447-447"];
m66_129 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="449-449"];
m66_131 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="453-453"];
m66_133 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="457-457"];
m66_135 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="461-461"];
m66_137 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="465-465"];
m66_139 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="469-469"];
m66_141 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="473-473"];
m66_143 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="477-477"];
m66_145 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="481-481"];
m66_147 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="435-435"];
m66_14 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="59-59"];
m66_15 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="var notParsed = result as NotParsed<T>", span="61-61"];
m66_17 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="action(notParsed.Errors)", span="64-64"];
m66_18 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="return result;", span="66-66"];
m66_16 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="notParsed != null", span="62-62"];
m66_19 [cluster="CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.WithNotParsed<T>(CommandLine.ParserResult<T>, System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="59-59"];
m66_27 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99"];
m66_28 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="103-103"];
m66_31 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="108-108"];
m66_33 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="112-112"];
m66_29 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="104-104"];
m66_30 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="106-106"];
m66_32 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="110-110"];
m66_34 [cluster="CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99"];
m66_226 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Entry CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="781-781"];
m66_227 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="var parsed = result as Parsed<object>", span="796-796"];
m66_230 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc1((T1)parsed.Value);", span="801-801"];
m66_232 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc2((T2)parsed.Value);", span="805-805"];
m66_234 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc3((T3)parsed.Value);", span="809-809"];
m66_236 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc4((T4)parsed.Value);", span="813-813"];
m66_238 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc5((T5)parsed.Value);", span="817-817"];
m66_240 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc6((T6)parsed.Value);", span="821-821"];
m66_242 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc7((T7)parsed.Value);", span="825-825"];
m66_244 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc8((T8)parsed.Value);", span="829-829"];
m66_246 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc9((T9)parsed.Value);", span="833-833"];
m66_248 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc10((T10)parsed.Value);", span="837-837"];
m66_250 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc11((T11)parsed.Value);", span="841-841"];
m66_252 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return parsedFunc12((T12)parsed.Value);", span="845-845"];
m66_254 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="return notParsedFunc(((NotParsed<object>)result).Errors);", span="849-849"];
m66_228 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed != null", span="797-797"];
m66_229 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T1", span="799-799"];
m66_231 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T2", span="803-803"];
m66_233 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T3", span="807-807"];
m66_235 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T4", span="811-811"];
m66_237 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T5", span="815-815"];
m66_239 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T6", span="819-819"];
m66_241 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T7", span="823-823"];
m66_243 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T8", span="827-827"];
m66_245 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T9", span="831-831"];
m66_247 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T10", span="835-835"];
m66_249 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T11", span="839-839"];
m66_251 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="parsed.Value is T12", span="843-843"];
m66_253 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="throw new InvalidOperationException();", span="847-847"];
m66_255 [cluster="CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensions.cs", label="Exit CommandLine.ParserResultExtensions.Return<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(CommandLine.ParserResult<object>, System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<T6, TResult>, System.Func<T7, TResult>, System.Func<T8, TResult>, System.Func<T9, TResult>, System.Func<T10, TResult>, System.Func<T11, TResult>, System.Func<T12, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="781-781"];
m67_11 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m67_12 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="30-30"];
m67_13 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = opts.Urls.First())", span="31-35"];
m67_14 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="''https://value.org/user/file.git''.ShouldBeEquivalentTo(expected)", span="37-37"];
m67_15 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m67_6 [cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="21-21"];
m67_135 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m67_16 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m67_65 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m67_66 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="77-77"];
m67_67 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="78-80"];
m67_68 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="82-82"];
m67_69 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m67_104 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m67_105 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="111-112"];
m67_106 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="(-1).ShouldBeEquivalentTo(expected)", span="114-114"];
m67_107 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m67_54 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m67_55 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="66-66"];
m67_56 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="67-69"];
m67_57 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="71-71"];
m67_58 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m67_17 [cluster="CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", span="38-38"];
m67_28 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m67_29 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="43-43"];
m67_30 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .WithNotParsed(_ => expected = ''changed'')", span="44-45"];
m67_31 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="47-47"];
m67_32 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m67_91 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160"];
m67_163 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249"];
m67_179 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="168-168"];
m67_8 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="22-22"];
m67_9 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="22-22"];
m67_10 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="22-22"];
m67_18 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="33-33"];
m67_21 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="34-34"];
m67_24 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="35-35"];
m67_19 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="33-33"];
m67_20 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="33-33"];
m67_22 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="34-34"];
m67_23 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="34-34"];
m67_25 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.Urls.First()", span="35-35"];
m67_26 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="35-35"];
m67_34 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="45-45"];
m67_35 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="45-45"];
m67_36 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="45-45"];
m67_42 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="55-55"];
m67_45 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="56-56"];
m67_48 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="57-57"];
m67_51 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="58-58"];
m67_43 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="55-55"];
m67_44 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="55-55"];
m67_46 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="56-56"];
m67_47 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="56-56"];
m67_49 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong3''", span="57-57"];
m67_50 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="57-57"];
m67_52 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="58-58"];
m67_53 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="58-58"];
m67_59 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="68-68"];
m67_62 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="69-69"];
m67_60 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="68-68"];
m67_61 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="68-68"];
m67_63 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="69-69"];
m67_64 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="69-69"];
m67_70 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="79-79"];
m67_73 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="80-80"];
m67_71 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="79-79"];
m67_72 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="79-79"];
m67_74 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="80-80"];
m67_75 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="80-80"];
m67_81 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m67_84 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m67_82 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="89-89"];
m67_83 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m67_85 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="89-89"];
m67_86 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m67_92 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="100-100"];
m67_95 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="101-101"];
m67_98 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="102-102"];
m67_101 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="103-103"];
m67_93 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="100-100"];
m67_94 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="100-100"];
m67_96 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="101-101"];
m67_97 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="101-101"];
m67_99 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="102-102"];
m67_100 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="102-102"];
m67_102 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="103-103"];
m67_103 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="103-103"];
m67_108 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m67_111 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m67_109 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="112-112"];
m67_110 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m67_112 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="112-112"];
m67_113 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m67_118 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="123-123"];
m67_121 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="124-124"];
m67_124 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="125-125"];
m67_127 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="126-126"];
m67_119 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="123-123"];
m67_120 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="123-123"];
m67_122 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="124-124"];
m67_123 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="124-124"];
m67_125 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="125-125"];
m67_126 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="125-125"];
m67_128 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="126-126"];
m67_129 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="126-126"];
m67_136 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="137-137"];
m67_139 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="138-138"];
m67_142 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="139-139"];
m67_145 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="140-140"];
m67_137 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="137-137"];
m67_138 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="137-137"];
m67_140 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="138-138"];
m67_141 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="138-138"];
m67_143 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong3''", span="139-139"];
m67_144 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="139-139"];
m67_146 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.FileName", span="140-140"];
m67_147 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="140-140"];
m67_153 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="151-151"];
m67_156 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="152-152"];
m67_154 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="151-151"];
m67_155 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="151-151"];
m67_157 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="152-152"];
m67_158 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="152-152"];
m67_164 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="163-163"];
m67_167 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="164-164"];
m67_170 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="165-165"];
m67_173 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="166-166"];
m67_176 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="167-167"];
m67_165 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="163-163"];
m67_166 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="163-163"];
m67_168 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="164-164"];
m67_169 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="164-164"];
m67_171 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="165-165"];
m67_172 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="165-165"];
m67_174 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=4, span="166-166"];
m67_175 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="166-166"];
m67_177 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="167-167"];
m67_178 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="167-167"];
m67_180 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=5, span="168-168"];
m67_181 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="168-168"];
m67_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m67_148 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m67_149 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (BaseFileOptions opts) => 1,\r\n                    errs => 2)", span="148-152"];
m67_150 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="1.ShouldBeEquivalentTo(expected)", span="154-154"];
m67_151 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m67_130 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m67_131 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="134-134"];
m67_132 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = ''wrong3'')\r\n                .WithParsed<BaseFileOptions>(opts => expected = opts.FileName)", span="135-140"];
m67_133 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="''dummy.bin''.ShouldBeEquivalentTo(expected)", span="142-142"];
m67_134 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m67_76 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m67_77 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .Return(_ => 0, _ => -1)", span="88-89"];
m67_78 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="0.ShouldBeEquivalentTo(expected)", span="91-91"];
m67_79 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m67_80 [cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78"];
m67_114 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m67_115 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''undefined'', ''-xyz'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="120-126"];
m67_116 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="3.ShouldBeEquivalentTo(expected)", span="128-128"];
m67_117 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m67_33 [cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="59-59"];
m67_37 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m67_38 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="53-53"];
m67_39 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''undefined'', ''-xyz'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = ''wrong3'')\r\n                .WithNotParsed(_ => expected = ''changed'')", span="54-58"];
m67_40 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="60-60"];
m67_41 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m67_159 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m67_160 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    (BaseFileOptions opts) => 4,\r\n                    (DerivedAddOptions opts) => 3,\r\n                    errs => 5)", span="160-168"];
m67_161 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="4.ShouldBeEquivalentTo(expected)", span="170-170"];
m67_162 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m67_0 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m67_1 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="20-20"];
m67_2 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)", span="21-22"];
m67_3 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="24-24"];
m67_4 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m67_5 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m67_152 [cluster="CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99"];
m67_87 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m67_88 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="97-103"];
m67_89 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="2.ShouldBeEquivalentTo(expected)", span="105-105"];
m67_90 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m67_7 [cluster="Unk.ShouldBeEquivalentTo", file="ParserResultExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m68_4 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m68_5 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Dispose(false)", span="36-36"];
m68_6 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m68_0 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m68_1 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="caseSensitive = true", span="27-27"];
m68_2 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="parsingCulture = CultureInfo.InvariantCulture", span="28-28"];
m68_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m68_7 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m68_13 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label=disposed, span="128-128"];
m68_15 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label=disposing, span="133-133"];
m68_14 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="return;", span="130-130"];
m68_16 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="HelpWriter != null", span="135-135"];
m68_17 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="helpWriter.Dispose()", span="137-137"];
m68_19 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="disposed = true", span="141-141"];
m68_18 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="helpWriter = null", span="138-138"];
m68_20 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m68_12 [cluster="System.GC.SuppressFinalize(object)", file="ParserSettings.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m68_21 [cluster="System.IO.TextWriter.Dispose()", file="ParserSettings.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m68_8 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m68_9 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Dispose(true)", span="121-121"];
m68_10 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="GC.SuppressFinalize(this)", span="123-123"];
m68_11 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose()", span="119-119"];
m68_22 [file="ParserSettings.cs", label="CommandLine.ParserSettings", span=""];
m69_0 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15"];
m69_1 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var writer = new StringWriter()", span="18-18"];
m69_2 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="19-19"];
m69_4 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="var text = writer.ToString()", span="25-25"];
m69_3 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="sut.ParseArguments<FakeOptionsWithRequired>(new string[] { })", span="22-22"];
m69_5 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Assert.True(text.Length > 0)", span="26-26"];
m69_6 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15"];
m69_102 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m69_103 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var expectedError = new HelpRequestedError()", span="187-187"];
m69_104 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="188-188"];
m69_107 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195"];
m69_105 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191"];
m69_106 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194"];
m69_108 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184"];
m69_163 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m69_164 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="254-254"];
m69_165 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="255-255"];
m69_167 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="259-259"];
m69_166 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="258-258"];
m69_168 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="262-262"];
m69_169 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="263-263"];
m69_170 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="264-264"];
m69_171 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="265-265"];
m69_172 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="266-266"];
m69_173 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="267-267"];
m69_174 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="268-268"];
m69_175 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="269-269"];
m69_176 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="270-270"];
m69_177 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="271-271"];
m69_178 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="272-272"];
m69_179 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251"];
m69_246 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="364-364"];
m69_247 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="367-367"];
m69_248 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="368-368"];
m69_250 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="373-373"];
m69_249 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="sut.ParseArguments<AddOptionsWithUsage, CommitOptionsWithUsage, CloneOptionsWithUsage>(\r\n                new [] { ''clone'', ''--badoption=@bad?value'' })", span="371-372"];
m69_251 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="376-376"];
m69_252 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="377-377"];
m69_253 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="378-378"];
m69_254 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="379-379"];
m69_255 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="380-380"];
m69_256 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="381-381"];
m69_257 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''Cloning quietly:'')", span="382-382"];
m69_258 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="383-383"];
m69_259 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="384-384"];
m69_260 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="385-385"];
m69_261 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[9].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="386-386"];
m69_262 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[10].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="387-387"];
m69_263 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[11].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="388-388"];
m69_264 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[12].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="389-389"];
m69_265 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[13].ShouldBeEquivalentTo(''--version         Display version information.'')", span="390-390"];
m69_266 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="lines[14].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="391-391"];
m69_267 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="364-364"];
m69_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m69_81 [cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33"];
m69_11 [cluster="Unk.True", file="ParserTests.cs", label="Entry Unk.True", span=""];
m69_119 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m69_120 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="203-203"];
m69_121 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204"];
m69_123 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="208-208"];
m69_122 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207"];
m69_124 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="211-211"];
m69_125 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200"];
m69_48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81"];
m69_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="84-90"];
m69_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="91-91"];
m69_52 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="((Parsed<FakeOptionsWithValues>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="98-98"];
m69_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="94-95"];
m69_53 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81"];
m69_111 [cluster="Unk.ContainSingle", file="ParserTests.cs", label="Entry Unk.ContainSingle", span=""];
m69_236 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="348-348"];
m69_237 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="351-351"];
m69_238 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="352-352"];
m69_240 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="356-356"];
m69_239 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''commit'', ''--help'' })", span="355-355"];
m69_241 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="359-359"];
m69_242 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="348-348"];
m69_66 [cluster="Unk.>", file="ParserTests.cs", label="Entry Unk.>", span=""];
m69_22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m69_35 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m69_85 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m69_86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154"];
m69_87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser()", span="155-155"];
m69_90 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163"];
m69_88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159"];
m69_89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(((Parsed<object>)result).Value)", span="162-162"];
m69_91 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147"];
m69_155 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="ParserTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m69_58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m69_59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110"];
m69_60 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111"];
m69_63 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120"];
m69_61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116"];
m69_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="119-119"];
m69_64 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m69_7 [cluster="System.IO.StringWriter.StringWriter()", file="ParserTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m69_73 [cluster="Unk.RespectingRuntimeTypes", file="ParserTests.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m69_126 [cluster="Unk.BeGreaterThan", file="ParserTests.cs", label="Entry Unk.BeGreaterThan", span=""];
m69_130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m69_131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var expectedError = new VersionRequestedError()", span="219-219"];
m69_132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var sut = new Parser()", span="220-220"];
m69_135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227"];
m69_133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223"];
m69_134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226"];
m69_136 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216"];
m69_137 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParserTests.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m69_46 [cluster="CommandLine.Parser.Parser()", file="ParserTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m69_183 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277"];
m69_184 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var help = new StringWriter()", span="280-280"];
m69_185 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="281-281"];
m69_187 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var result = help.ToString()", span="285-285"];
m69_186 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="284-284"];
m69_188 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="288-288"];
m69_189 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="289-289"];
m69_190 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="290-290"];
m69_191 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="291-291"];
m69_192 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="292-292"];
m69_193 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="293-293"];
m69_194 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="294-294"];
m69_195 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="295-295"];
m69_196 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="277-277"];
m69_268 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="368-368"];
m69_13 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="19-19"];
m69_12 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="19-19"];
m69_14 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="19-19"];
m69_26 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="35-35"];
m69_25 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="35-35"];
m69_27 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="35-35"];
m69_37 [cluster="lambda expression", file="ParserTests.cs", label="with.HelpWriter = writer", span="51-51"];
m69_36 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="51-51"];
m69_38 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="51-51"];
m69_56 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="91-91"];
m69_55 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="91-91"];
m69_57 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="91-91"];
m69_68 [cluster="lambda expression", file="ParserTests.cs", label="with.EnableDashDash = true", span="111-111"];
m69_70 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="120-120"];
m69_67 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="111-111"];
m69_69 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="111-111"];
m69_71 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="120-120"];
m69_72 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="120-120"];
m69_82 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="142-142"];
m69_83 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="142-142"];
m69_84 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="142-142"];
m69_92 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="163-163"];
m69_93 [cluster="lambda expression", file="ParserTests.cs", label="o.RespectingRuntimeTypes()", span="163-163"];
m69_94 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="163-163"];
m69_116 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="195-195"];
m69_112 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="194-194"];
m69_115 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="195-195"];
m69_113 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="194-194"];
m69_114 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="194-194"];
m69_117 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="195-195"];
m69_128 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="204-204"];
m69_127 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="204-204"];
m69_129 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="204-204"];
m69_142 [cluster="lambda expression", file="ParserTests.cs", label="e.Equals(expectedError)", span="227-227"];
m69_138 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="226-226"];
m69_141 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="227-227"];
m69_139 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="226-226"];
m69_140 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="226-226"];
m69_143 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="227-227"];
m69_158 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="236-236"];
m69_160 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="245-245"];
m69_157 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="236-236"];
m69_159 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="236-236"];
m69_161 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="245-245"];
m69_162 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="245-245"];
m69_181 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="255-255"];
m69_180 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="255-255"];
m69_182 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="255-255"];
m69_198 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="281-281"];
m69_197 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="281-281"];
m69_199 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="281-281"];
m69_211 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="306-306"];
m69_213 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="315-315"];
m69_210 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="306-306"];
m69_212 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="306-306"];
m69_214 [cluster="lambda expression", file="ParserTests.cs", label="x == 1", span="315-315"];
m69_215 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="315-315"];
m69_234 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="325-325"];
m69_233 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="325-325"];
m69_235 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="325-325"];
m69_244 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="352-352"];
m69_243 [cluster="lambda expression", file="ParserTests.cs", label="Entry lambda expression", span="352-352"];
m69_245 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="352-352"];
m69_269 [cluster="lambda expression", file="ParserTests.cs", label="config.HelpWriter = help", span="368-368"];
m69_270 [cluster="lambda expression", file="ParserTests.cs", label="Exit lambda expression", span="368-368"];
m69_216 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="321-321"];
m69_217 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var help = new StringWriter()", span="324-324"];
m69_218 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="325-325"];
m69_220 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var result = help.ToString()", span="330-330"];
m69_219 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="sut.ParseArguments<FakeOptionsWithTwoRequiredAndSets>(\r\n                new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="328-329"];
m69_221 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="333-333"];
m69_222 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="334-334"];
m69_223 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="335-335"];
m69_224 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="336-336"];
m69_225 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="337-337"];
m69_226 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="338-338"];
m69_227 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="339-339"];
m69_228 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="340-340"];
m69_229 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[7].ShouldBeEquivalentTo(''-a'')", span="341-341"];
m69_230 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="342-342"];
m69_231 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="343-343"];
m69_232 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="321-321"];
m69_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m69_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var writer = new StringWriter()", span="50-50"];
m69_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51"];
m69_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="var text = writer.ToString()", span="57-57"];
m69_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54"];
m69_33 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="text.Should().NotBeEmpty()", span="58-58"];
m69_34 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47"];
m69_23 [cluster="Unk.Should", file="ParserTests.cs", label="Entry Unk.Should", span=""];
m69_118 [cluster="Unk.Equals", file="ParserTests.cs", label="Entry Unk.Equals", span=""];
m69_24 [cluster="Unk.NotBeEmpty", file="ParserTests.cs", label="Entry Unk.NotBeEmpty", span=""];
m69_10 [cluster="System.IO.StringWriter.ToString()", file="ParserTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m69_156 [cluster="Unk.StartWithEquivalent", file="ParserTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m69_110 [cluster="Unk.HaveCount", file="ParserTests.cs", label="Entry Unk.HaveCount", span=""];
m69_101 [cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
m69_65 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m69_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m69_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69"];
m69_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var sut = new Parser()", span="70-70"];
m69_43 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="((Parsed<FakeOptions>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76"];
m69_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73"];
m69_44 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63"];
m69_144 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m69_145 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var help = new StringWriter()", span="235-235"];
m69_146 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="236-236"];
m69_148 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var result = help.ToString()", span="240-240"];
m69_147 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="239-239"];
m69_149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="243-243"];
m69_150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="244-244"];
m69_151 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="245-245"];
m69_152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="246-246"];
m69_153 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232"];
m69_95 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m69_96 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172"];
m69_97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var sut = new Parser()", span="173-173"];
m69_99 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="((Parsed<FakeImmutableOptions>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179"];
m69_98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176"];
m69_100 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168"];
m69_15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m69_16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var writer = new StringWriter()", span="34-34"];
m69_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35"];
m69_19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="var text = writer.ToString()", span="41-41"];
m69_18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38"];
m69_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="text.Should().NotBeEmpty()", span="42-42"];
m69_21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31"];
m69_154 [cluster="string.ToNotEmptyLines()", file="ParserTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m69_9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserTests.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m69_74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m69_75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132"];
m69_76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var sut = new Parser()", span="133-133"];
m69_79 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142"];
m69_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138"];
m69_78 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Assert.IsType<CloneOptions>(((Parsed<object>)result).Value)", span="141-141"];
m69_80 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125"];
m69_45 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m69_200 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="302-302"];
m69_201 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var help = new StringWriter()", span="305-305"];
m69_203 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="309-309"];
m69_202 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var sut = new Parser(config => config.HelpWriter = help)", span="306-306"];
m69_204 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var result = help.ToString()", span="310-310"];
m69_205 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="result.Length.Should().BeGreaterThan(0)", span="313-313"];
m69_206 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="314-314"];
m69_207 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines.Should().HaveCount(x => x == 1)", span="315-315"];
m69_208 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="316-316"];
m69_209 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="ParserTests.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="302-302"];
m69_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="ParserTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m69_109 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="ParserTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m69_47 [cluster="Unk.ShouldBeEquivalentTo", file="ParserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m69_271 [file="ParserTests.cs", label=writer, span=""];
m69_272 [file="ParserTests.cs", label=writer, span=""];
m69_273 [file="ParserTests.cs", label=writer, span=""];
m69_274 [file="ParserTests.cs", label=expectedError, span=""];
m69_275 [file="ParserTests.cs", label=help, span=""];
m69_276 [file="ParserTests.cs", label=expectedError, span=""];
m69_277 [file="ParserTests.cs", label=help, span=""];
m69_278 [file="ParserTests.cs", label=help, span=""];
m69_279 [file="ParserTests.cs", label=help, span=""];
m69_280 [file="ParserTests.cs", label=help, span=""];
m69_281 [file="ParserTests.cs", label=help, span=""];
m69_282 [file="ParserTests.cs", label=help, span=""];
m69_283 [file="ParserTests.cs", label=help, span=""];
m70_0 [cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs", label="Entry CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", span="8-8"];
m70_1 [cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs", label=consumed, span="10-10"];
m70_3 [cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs", label="field = value", span="15-15"];
m70_2 [cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs", label="throw new InvalidOperationException();", span="12-12"];
m70_4 [cluster="CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", file="PopsicleSetter.cs", label="Exit CommandLine.Infrastructure.PopsicleSetter.Set<T>(bool, ref T, T)", span="8-8"];
m70_5 [cluster="System.InvalidOperationException.InvalidOperationException()", file="PopsicleSetter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m71_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PreprocessorGuards.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m71_0 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="PreprocessorGuards.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m71_1 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="PreprocessorGuards.cs", label="return new List<Func<IEnumerable<string>, IEnumerable<Error>>>\r\n                {\r\n                    HelpCommand(nameComparer),\r\n                    VersionCommand(nameComparer)\r\n                };", span="13-17"];
m71_2 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="PreprocessorGuards.cs", label="Exit CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m71_5 [cluster="CommandLine.Core.PreprocessorGuards.VersionCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Entry CommandLine.Core.PreprocessorGuards.VersionCommand(System.StringComparer)", span="29-29"];
m71_15 [cluster="CommandLine.Core.PreprocessorGuards.VersionCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="return\r\n                arguments =>\r\n                    nameComparer.Equals(''--version'', arguments.First())\r\n                        ? new Error[] { new VersionRequestedError() }\r\n                        : Enumerable.Empty<Error>();", span="31-35"];
m71_16 [cluster="CommandLine.Core.PreprocessorGuards.VersionCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Exit CommandLine.Core.PreprocessorGuards.VersionCommand(System.StringComparer)", span="29-29"];
m71_20 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="PreprocessorGuards.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m71_12 [cluster="System.StringComparer.Equals(string, string)", file="PreprocessorGuards.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m71_17 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Entry lambda expression", span="32-35"];
m71_9 [cluster="lambda expression", file="PreprocessorGuards.cs", label="nameComparer.Equals(''--help'', arguments.First())\r\n                        ? new Error[] { new HelpRequestedError() }\r\n                        : Enumerable.Empty<Error>()", span="24-26"];
m71_8 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Entry lambda expression", span="23-26"];
m71_10 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Exit lambda expression", span="23-26"];
m71_18 [cluster="lambda expression", file="PreprocessorGuards.cs", label="nameComparer.Equals(''--version'', arguments.First())\r\n                        ? new Error[] { new VersionRequestedError() }\r\n                        : Enumerable.Empty<Error>()", span="33-35"];
m71_19 [cluster="lambda expression", file="PreprocessorGuards.cs", label="Exit lambda expression", span="32-35"];
m71_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PreprocessorGuards.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m71_13 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="PreprocessorGuards.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m71_4 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Entry CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", span="20-20"];
m71_6 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="return\r\n                arguments =>\r\n                    nameComparer.Equals(''--help'', arguments.First())\r\n                        ? new Error[] { new HelpRequestedError() }\r\n                        : Enumerable.Empty<Error>();", span="22-26"];
m71_7 [cluster="CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", file="PreprocessorGuards.cs", label="Exit CommandLine.Core.PreprocessorGuards.HelpCommand(System.StringComparer)", span="20-20"];
m71_3 [cluster="System.Collections.Generic.List<T>.List()", file="PreprocessorGuards.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m71_21 [file="PreprocessorGuards.cs", label="System.StringComparer", span=""];
m71_22 [file="PreprocessorGuards.cs", label="System.StringComparer", span=""];
m72_142 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199"];
m72_143 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance,\r\n                null,\r\n                target,\r\n                new object[] { });", span="201-206"];
m72_144 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="199-199"];
m72_17 [cluster="Unk.SingleOrDefault", file="ReflectionExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m72_44 [cluster="System.Type.GetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m72_91 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139"];
m72_92 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="141-145"];
m72_93 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="return type != typeof(object) ? isMutable() : true;", span="146-146"];
m72_94 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="139-139"];
m72_148 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m72_101 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m72_126 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m72_145 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209"];
m72_146 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                type.IsValueType ||\r\n                type.IsPrimitive ||\r\n                new [] { \r\n                    typeof(string),\r\n                    typeof(decimal),\r\n                    typeof(DateTime),\r\n                    typeof(DateTimeOffset),\r\n                    typeof(TimeSpan),\r\n                    typeof(Guid)\r\n                }.Contains(type) ||\r\n                Convert.GetTypeCode(type) != TypeCode.Object;", span="211-222"];
m72_147 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="209-209"];
m72_6 [cluster="Unk.>", file="ReflectionExtensions.cs", label="Entry Unk.>", span=""];
m72_73 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m72_82 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130"];
m72_83 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="132-135"];
m72_84 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="return e.Compile()();", span="136-136"];
m72_85 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="130-130"];
m72_7 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m72_8 [cluster="Unk.First", file="ReflectionExtensions.cs", label="Entry Unk.First", span=""];
m72_131 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174"];
m72_132 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="return TypeInfo.Create(type);", span="176-176"];
m72_133 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="174-174"];
m72_43 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m72_26 [cluster="Unk.Create", file="ReflectionExtensions.cs", label="Entry Unk.Create", span=""];
m72_52 [cluster="Unk.Where", file="ReflectionExtensions.cs", label="Entry Unk.Where", span=""];
m72_59 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m72_60 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="99-99"];
m72_61 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="property.SetValue(instance, value, null)", span="103-103"];
m72_70 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="return instance;", span="122-122"];
m72_63 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="107-107"];
m72_65 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="111-111"];
m72_67 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="115-115"];
m72_69 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="119-119"];
m72_62 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetException, span="105-105"];
m72_64 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetParameterCountException, span="109-109"];
m72_66 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=MethodAccessException, span="113-113"];
m72_68 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetInvocationException, span="117-117"];
m72_71 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m72_45 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m72_46 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="73-79"];
m72_47 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m72_102 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m72_77 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="ReflectionExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m72_18 [cluster="Unk.ToMaybe", file="ReflectionExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m72_39 [cluster="System.Type.SafeGetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.SafeGetInterfaces()", span="66-66"];
m72_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m72_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m72_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m72_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="29-35"];
m72_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m72_9 [cluster="Unk.selector", file="ReflectionExtensions.cs", label="Entry Unk.selector", span=""];
m72_128 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="169-169"];
m72_10 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="18-18"];
m72_11 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="18-18"];
m72_12 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="18-18"];
m72_19 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="31-31"];
m72_20 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m72_21 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="31-31"];
m72_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="41-41"];
m72_28 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="41-41"];
m72_29 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="41-41"];
m72_55 [cluster="lambda expression", file="ReflectionExtensions.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="92-92"];
m72_56 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return instance;", span="93-93"];
m72_54 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="90-94"];
m72_57 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="90-94"];
m72_75 [cluster="lambda expression", file="ReflectionExtensions.cs", label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="99-99"];
m72_74 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="99-99"];
m72_76 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="99-99"];
m72_96 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="142-142"];
m72_97 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="143-143"];
m72_95 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="141-145"];
m72_103 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="142-142"];
m72_98 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return props || fields;", span="144-144"];
m72_99 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="141-145"];
m72_104 [cluster="lambda expression", file="ReflectionExtensions.cs", label="p.CanWrite", span="142-142"];
m72_105 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="142-142"];
m72_129 [cluster="lambda expression", file="ReflectionExtensions.cs", label="pi.PropertyType", span="169-169"];
m72_130 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="169-169"];
m72_72 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m72_81 [cluster="System.Array.CreateInstance(System.Type, int)", file="ReflectionExtensions.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m72_87 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m72_86 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m72_90 [cluster="System.Func<TResult>.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m72_127 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m72_48 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m72_106 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149"];
m72_107 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="type == typeof(string)", span="151-151"];
m72_109 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="155-155"];
m72_110 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return type.GetGenericArguments()[0].CreateEmptyArray();", span="157-157"];
m72_111 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return type.GetDefaultValue();", span="159-159"];
m72_108 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return string.Empty;", span="153-153"];
m72_112 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="149-149"];
m72_134 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m72_13 [cluster="System.Type.GetProperties()", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m72_23 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m72_24 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="40-46"];
m72_25 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m72_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m72_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24"];
m72_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m72_88 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m72_113 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m72_117 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162"];
m72_118 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="type.IsMutable()", span="164-164"];
m72_119 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return Activator.CreateInstance(type);", span="166-166"];
m72_120 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="169-169"];
m72_121 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="171-171"];
m72_122 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="162-162"];
m72_139 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189"];
m72_140 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="191-196"];
m72_141 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="189-189"];
m72_149 [cluster="System.Convert.GetTypeCode(object)", file="ReflectionExtensions.cs", label="Entry System.Convert.GetTypeCode(object)", span="0-0"];
m72_40 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66"];
m72_41 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="68-68"];
m72_42 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66"];
m72_115 [cluster="System.Type.CreateEmptyArray()", file="ReflectionExtensions.cs", label="Entry System.Type.CreateEmptyArray()", span="125-125"];
m72_116 [cluster="System.Type.GetDefaultValue()", file="ReflectionExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m72_114 [cluster="System.Type.GetGenericArguments()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m72_125 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m72_124 [cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m72_100 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m72_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m72_123 [cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m72_53 [cluster="Unk.Aggregate", file="ReflectionExtensions.cs", label="Entry Unk.Aggregate", span=""];
m72_78 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125"];
m72_79 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="return Array.CreateInstance(type, 0);", span="127-127"];
m72_80 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="125-125"];
m72_49 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m72_50 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="88-94"];
m72_51 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m72_30 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m72_31 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type == null", span="51-51"];
m72_32 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield break;", span="53-53"];
m72_33 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return type;", span="55-55"];
m72_35 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="58-58"];
m72_37 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="62-62"];
m72_34 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type.SafeGetInterfaces()", span="56-56"];
m72_36 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="FlattenHierarchy(type.BaseType)", span="60-60"];
m72_38 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m72_58 [cluster="Unk.SetValue", file="ReflectionExtensions.cs", label="Entry Unk.SetValue", span=""];
m72_138 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m72_135 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179"];
m72_136 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="181-186"];
m72_137 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="179-179"];
m72_3 [cluster="System.Type.FlattenHierarchy()", file="ReflectionExtensions.cs", label="Entry System.Type.FlattenHierarchy()", span="49-49"];
m72_89 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m72_150 [file="ReflectionExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m72_151 [file="ReflectionExtensions.cs", label=T, span=""];
m72_152 [file="ReflectionExtensions.cs", label="System.Type", span=""];
m73_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m73_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="37-38"];
m73_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m73_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="15-15"];
m73_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m73_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="16-16"];
m73_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="18-20"];
m73_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m73_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m73_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m73_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m73_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m73_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="31-31"];
m73_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m73_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="32-32"];
m73_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m73_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m73_32 [cluster="System.Type.CreateDefaultForImmutable()", file="ReflectionHelper.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="149-149"];
m73_8 [cluster="CSharpx.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m73_34 [cluster="Unk.Invoke", file="ReflectionHelper.cs", label="Entry Unk.Invoke", span=""];
m73_30 [cluster="System.Type.GetConstructor(System.Type[])", file="ReflectionHelper.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m73_35 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m73_36 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var ctor = type.GetConstructor(constructorTypes)", span="52-52"];
m73_37 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="53-54"];
m73_38 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="return ctor.Invoke(values);", span="55-55"];
m73_39 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m73_33 [cluster="Unk.ToArray", file="ReflectionHelper.cs", label="Entry Unk.ToArray", span=""];
m73_23 [cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionHelper.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m73_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m73_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="25-25"];
m73_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m73_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="return assembly.GetName().Name;", span="26-26"];
m73_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m73_24 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m73_25 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var t = typeof(T)", span="43-43"];
m73_26 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var ctor = t.GetConstructor(constructorTypes)", span="44-44"];
m73_27 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="45-46"];
m73_28 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="return (T)ctor.Invoke(values);", span="47-47"];
m73_29 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m73_31 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionHelper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m74_0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m74_1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="result.Tag == ResultType.Ok", span="14-14"];
m74_2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16"];
m74_4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return Enumerable.Empty<TMessage>();", span="19-19"];
m74_3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return ok.Value.Messages;", span="17-17"];
m74_5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m74_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ResultExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m75_11 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="19-20"];
m75_5 [cluster="lambda expression", file="Scalar.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="18-21"];
m75_4 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="17-21"];
m75_12 [cluster="lambda expression", file="Scalar.cs", label="info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="20-20"];
m75_6 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="17-21"];
m75_13 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="19-20"];
m75_10 [cluster="Unk.Return", file="Scalar.cs", label="Entry Unk.Return", span=""];
m75_0 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs", label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m75_1 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-23"];
m75_2 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs", label="Exit CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m75_7 [cluster="CommandLine.Core.Token.IsName()", file="Scalar.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m75_8 [cluster="CommandLine.Core.Token.IsValue()", file="Scalar.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m75_9 [cluster="System.Func<T, TResult>.Invoke(T)", file="Scalar.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m75_3 [cluster="Unk.Pairwise", file="Scalar.cs", label="Entry Unk.Pairwise", span=""];
m75_14 [file="Scalar.cs", label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span=""];
m75_15 [file="Scalar.cs", label="CommandLine.Core.Token", span=""];
m75_16 [file="Scalar.cs", label="CommandLine.Core.Token", span=""];
m76_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ScalarTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m76_14 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="28-28"];
m76_15 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="var expected = new [] { Token.Name(''str''), Token.Value(''strvalue'') }", span="30-30"];
m76_16 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="var result = Scalar.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="32-41"];
m76_17 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="43-43"];
m76_18 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="ScalarTests.cs", label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="28-28"];
m76_0 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="13-13"];
m76_1 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="var expected = new Token[] { }", span="15-15"];
m76_2 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="var result = Scalar.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22"];
m76_3 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="24-24"];
m76_4 [cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="ScalarTests.cs", label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="13-13"];
m76_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="ScalarTests.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35"];
m76_13 [cluster="CSharpx.Maybe.Just<T>(T)", file="ScalarTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m76_21 [cluster="lambda expression", file="ScalarTests.cs", label="Entry lambda expression", span="38-41"];
m76_7 [cluster="lambda expression", file="ScalarTests.cs", label="Entry lambda expression", span="19-22"];
m76_8 [cluster="lambda expression", file="ScalarTests.cs", label="new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22"];
m76_9 [cluster="lambda expression", file="ScalarTests.cs", label="Exit lambda expression", span="19-22"];
m76_22 [cluster="lambda expression", file="ScalarTests.cs", label="new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41"];
m76_23 [cluster="lambda expression", file="ScalarTests.cs", label="Exit lambda expression", span="38-41"];
m76_19 [cluster="CommandLine.Core.Token.Name(string)", file="ScalarTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m76_5 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ScalarTests.cs", label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m76_11 [cluster="CSharpx.Maybe.Nothing<T>()", file="ScalarTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m76_20 [cluster="CommandLine.Core.Token.Value(string)", file="ScalarTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m76_6 [cluster="Unk.ShouldBeEquivalentTo", file="ScalarTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m77_68 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m77_44 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m77_69 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m77_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="65-65"];
m77_67 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m77_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m77_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="return new DefaultSentenceBuilder();", span="23-23"];
m77_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m77_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="149-174"];
m77_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="69-69"];
m77_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="69-69"];
m77_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="69-69"];
m77_7 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="74-74"];
m77_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="74-74"];
m77_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="74-74"];
m77_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="79-79"];
m77_11 [cluster="lambda expression", file="SentenceBuilder.cs", label="''USAGE:''", span="79-79"];
m77_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="79-79"];
m77_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="86-88"];
m77_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="86-88"];
m77_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="86-88"];
m77_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="94-94"];
m77_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Display version information.''", span="94-94"];
m77_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="94-94"];
m77_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="101-134"];
m77_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="103-103"];
m77_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="106-106"];
m77_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="108-109"];
m77_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="111-111"];
m77_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="113-113"];
m77_31 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="118-118"];
m77_34 [cluster="lambda expression", file="SentenceBuilder.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="123-123"];
m77_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="129-129"];
m77_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="105-105"];
m77_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="107-107"];
m77_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="110-110"];
m77_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="112-112"];
m77_30 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="117-117"];
m77_33 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.SequenceOutOfRangeError", span="122-122"];
m77_36 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadVerbSelectedError", span="128-128"];
m77_38 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.NoVerbSelectedError", span="130-130"];
m77_29 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="114-116"];
m77_32 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="119-121"];
m77_35 [cluster="lambda expression", file="SentenceBuilder.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with fewer or more items than required.'');", span="124-127"];
m77_39 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''No verb selected.'';", span="131-131"];
m77_40 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="101-134"];
m77_41 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="133-133"];
m77_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="142-176"];
m77_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="144-146"];
m77_47 [cluster="lambda expression", file="SentenceBuilder.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="148-174"];
m77_57 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="156-161"];
m77_48 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="175-175"];
m77_49 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="142-176"];
m77_55 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="151-153"];
m77_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="154-154"];
m77_58 [cluster="lambda expression", file="SentenceBuilder.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="163-173"];
m77_59 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="149-174"];
m77_65 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m77_43 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m77_51 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m77_60 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m77_42 [cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m77_70 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m77_66 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m77_53 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m77_63 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m77_64 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m77_52 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m77_61 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m77_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m77_62 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m77_71 [file="SentenceBuilder.cs", label=bySet, span=""];
m78_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", span="10-10"];
m78_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m78_0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m78_1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-25"];
m78_2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m78_35 [cluster="Unk.Take", file="Sequence.cs", label="Entry Unk.Take", span=""];
m78_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m78_36 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="36-36"];
m78_5 [cluster="lambda expression", file="Sequence.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { }", span="18-23"];
m78_12 [cluster="lambda expression", file="Sequence.cs", label="info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }", span="20-22"];
m78_4 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="17-23"];
m78_6 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="17-23"];
m78_11 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="19-22"];
m78_13 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="19-22"];
m78_26 [cluster="lambda expression", file="Sequence.cs", label="t.Equals(nameToken)", span="30-30"];
m78_30 [cluster="lambda expression", file="Sequence.cs", label="info.MaxItems.Return(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()))", span="34-36"];
m78_33 [cluster="lambda expression", file="Sequence.cs", label="tokens.Skip(nameIndex + 1).Take(n)", span="35-35"];
m78_25 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="30-30"];
m78_29 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="34-36"];
m78_39 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="37-37"];
m78_27 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="30-30"];
m78_31 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="34-36"];
m78_32 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="35-35"];
m78_34 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="35-35"];
m78_37 [cluster="lambda expression", file="Sequence.cs", label="v.IsValue()", span="36-36"];
m78_38 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="36-36"];
m78_40 [cluster="lambda expression", file="Sequence.cs", label="v.IsValue()", span="37-37"];
m78_41 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="37-37"];
m78_10 [cluster="Unk.Return", file="Sequence.cs", label="Entry Unk.Return", span=""];
m78_28 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Sequence.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m78_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m78_16 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="Entry CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28"];
m78_17 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="var nameIndex = tokens.IndexOf(t => t.Equals(nameToken))", span="30-30"];
m78_19 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="return info.NextValue.Return(\r\n                    _ => info.MaxItems.Return(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue())),\r\n                    tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()));", span="33-37"];
m78_18 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="nameIndex >= 0", span="31-31"];
m78_20 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="return new Token[] { };", span="39-39"];
m78_21 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="Exit CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28"];
m78_7 [cluster="CommandLine.Core.Token.IsName()", file="Sequence.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m78_14 [cluster="Unk.OfSequence", file="Sequence.cs", label="Entry Unk.OfSequence", span=""];
m78_8 [cluster="CommandLine.Core.Token.IsValue()", file="Sequence.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m78_9 [cluster="System.Func<T, TResult>.Invoke(T)", file="Sequence.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m78_3 [cluster="Unk.Pairwise", file="Sequence.cs", label="Entry Unk.Pairwise", span=""];
m78_42 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m78_43 [file="Sequence.cs", label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span=""];
m78_44 [file="Sequence.cs", label="CommandLine.Core.Token", span=""];
m78_45 [file="Sequence.cs", label="CommandLine.Core.Token", span=""];
m78_46 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m78_47 [file="Sequence.cs", label="CommandLine.Core.TypeDescriptor", span=""];
m78_48 [file="Sequence.cs", label=nameIndex, span=""];
m79_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SequenceTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m79_5 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SequenceTests.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m79_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="SequenceTests.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35"];
m79_13 [cluster="CSharpx.Maybe.Just<T>(T)", file="SequenceTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m79_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="SequenceTests.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m79_38 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="88-91"];
m79_7 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="19-22"];
m79_8 [cluster="lambda expression", file="SequenceTests.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22"];
m79_9 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="19-22"];
m79_22 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="42-45"];
m79_23 [cluster="lambda expression", file="SequenceTests.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="43-45"];
m79_24 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="42-45"];
m79_30 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="67-70"];
m79_31 [cluster="lambda expression", file="SequenceTests.cs", label="new[] { ''seq'', ''seqb'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="68-70"];
m79_32 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="67-70"];
m79_39 [cluster="lambda expression", file="SequenceTests.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="89-91"];
m79_40 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="88-91"];
m79_14 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="SequenceTests.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="28-28"];
m79_15 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="SequenceTests.cs", label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                }", span="30-33"];
m79_16 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="SequenceTests.cs", label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="35-45"];
m79_17 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="SequenceTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="47-47"];
m79_18 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="SequenceTests.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="28-28"];
m79_11 [cluster="CSharpx.Maybe.Nothing<T>()", file="SequenceTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m79_0 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="SequenceTests.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="13-13"];
m79_1 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="SequenceTests.cs", label="var expected = new Token[] { }", span="15-15"];
m79_2 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="SequenceTests.cs", label="var result = Sequence.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22"];
m79_3 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="SequenceTests.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="24-24"];
m79_4 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="SequenceTests.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="13-13"];
m79_19 [cluster="CommandLine.Core.Token.Name(string)", file="SequenceTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m79_33 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="SequenceTests.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", span="76-76"];
m79_34 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="SequenceTests.cs", label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                }", span="78-81"];
m79_35 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="SequenceTests.cs", label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="83-91"];
m79_36 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="SequenceTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="93-93"];
m79_37 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="SequenceTests.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", span="76-76"];
m79_20 [cluster="CommandLine.Core.Token.Value(string)", file="SequenceTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m79_21 [cluster="Unk.ShouldBeEquivalentTo", file="SequenceTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m79_25 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="SequenceTests.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", span="51-51"];
m79_26 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="SequenceTests.cs", label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                    Token.Name(''seqb''), Token.Value(''seqbval0'')\r\n                }", span="53-57"];
m79_27 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="SequenceTests.cs", label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2''),\r\n                        Token.Name(''seqb''), Token.Value(''seqbval0'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'', ''seqb'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="59-70"];
m79_28 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="SequenceTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="72-72"];
m79_29 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="SequenceTests.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", span="51-51"];
m81_30 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Specification.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m81_31 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m81_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m81_26 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m81_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="39-39"];
m81_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.tag = tag", span="43-43"];
m81_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.required = required", span="44-44"];
m81_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.min = min", span="45-45"];
m81_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.max = max", span="46-46"];
m81_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.defaultValue = defaultValue", span="47-47"];
m81_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.conversionType = conversionType", span="48-48"];
m81_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.targetType = targetType", span="49-49"];
m81_8 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.helpText = helpText", span="50-50"];
m81_9 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.metaValue = metaValue", span="51-51"];
m81_10 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.enumValues = enumValues", span="52-52"];
m81_11 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="39-39"];
m81_34 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m81_32 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m81_29 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m81_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m81_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", span="107-107"];
m81_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>())", span="111-114"];
m81_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec.WithLongName(property.Name.ToLowerInvariant());", span="117-117"];
m81_22 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>());", span="125-128"];
m81_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", span="108-108"];
m81_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="122-122"];
m81_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="oa.Count() == 1", span="109-109"];
m81_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="115-115"];
m81_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="119-119"];
m81_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="123-123"];
m81_23 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="131-131"];
m81_24 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m81_25 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m81_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m81_33 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="20-20"];
m81_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m81_36 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m82_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m82_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="45-45"];
m82_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="47-47"];
m82_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="53-53"];
m82_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="49-49"];
m82_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m82_33 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SpecificationExtensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m82_25 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="56-56"];
m82_26 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int min", span="58-58"];
m82_28 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="60-60"];
m82_29 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min, max);", span="62-62"];
m82_27 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int max", span="59-59"];
m82_30 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="64-64"];
m82_31 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="56-56"];
m82_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m82_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="12-12"];
m82_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m82_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m82_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m82_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="17-17"];
m82_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m82_21 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="47-47"];
m82_22 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="47-47"];
m82_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="47-47"];
m82_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="77-77"];
m82_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int max", span="79-79"];
m82_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Max.MatchJust(out max)", span="80-80"];
m82_43 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(max);", span="82-82"];
m82_44 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="84-84"];
m82_45 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="77-77"];
m82_10 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m82_11 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="return specification.ShortName.Length > 0 ? specification.ShortName : specification.LongName;", span="40-40"];
m82_12 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m82_34 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="67-67"];
m82_35 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int min", span="69-69"];
m82_36 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min)", span="70-70"];
m82_37 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min);", span="72-72"];
m82_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="74-74"];
m82_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="67-67"];
m82_20 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m82_19 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m82_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m82_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues,\r\n                specification.ConversionType,\r\n                specification.TargetType);", span="22-35"];
m82_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m82_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m82_32 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="SpecificationExtensions.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="48-48"];
m82_46 [file="SpecificationExtensions.cs", label=guard, span=""];
m83_30 [cluster="CommandLine.Core.Specification.HavingMin(System.Func<int, bool>)", file="SpecificationGuards.cs", label="Entry CommandLine.Core.Specification.HavingMin(System.Func<int, bool>)", span="67-67"];
m83_13 [cluster="CommandLine.Core.Specification.HavingRange(System.Func<int, int, bool>)", file="SpecificationGuards.cs", label="Entry CommandLine.Core.Specification.HavingRange(System.Func<int, int, bool>)", span="56-56"];
m83_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationGuards.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="24-24"];
m83_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationGuards.cs", label="return spec => spec.TargetType == TargetType.Sequence\r\n                && spec.HavingRange((min, max) => min > max);", span="26-27"];
m83_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationGuards.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="24-24"];
m83_35 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="39-39"];
m83_4 [cluster="lambda expression", file="SpecificationGuards.cs", label="spec.TargetType == TargetType.Scalar\r\n                && (spec.Min.IsJust() || spec.Max.IsJust())", span="20-21"];
m83_3 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="20-21"];
m83_5 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="20-21"];
m83_11 [cluster="lambda expression", file="SpecificationGuards.cs", label="spec.TargetType == TargetType.Sequence\r\n                && spec.HavingRange((min, max) => min > max)", span="26-27"];
m83_10 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="26-27"];
m83_12 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="26-27"];
m83_14 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="27-27"];
m83_15 [cluster="lambda expression", file="SpecificationGuards.cs", label="min > max", span="27-27"];
m83_16 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="27-27"];
m83_21 [cluster="lambda expression", file="SpecificationGuards.cs", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="32-32"];
m83_20 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="32-32"];
m83_22 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="32-32"];
m83_28 [cluster="lambda expression", file="SpecificationGuards.cs", label="spec.TargetType == TargetType.Sequence\r\n                && (spec.HavingMin(min => min == 0)\r\n                || spec.HavingMax(max => max == 0))", span="37-39"];
m83_27 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="37-39"];
m83_29 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="37-39"];
m83_32 [cluster="lambda expression", file="SpecificationGuards.cs", label="Entry lambda expression", span="38-38"];
m83_33 [cluster="lambda expression", file="SpecificationGuards.cs", label="min == 0", span="38-38"];
m83_34 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="38-38"];
m83_36 [cluster="lambda expression", file="SpecificationGuards.cs", label="max == 0", span="39-39"];
m83_37 [cluster="lambda expression", file="SpecificationGuards.cs", label="Exit lambda expression", span="39-39"];
m83_6 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="SpecificationGuards.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m83_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationGuards.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="30-30"];
m83_18 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationGuards.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="32-32"];
m83_19 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationGuards.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="30-30"];
m83_23 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationGuards.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m83_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationGuards.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="18-18"];
m83_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationGuards.cs", label="return spec => spec.TargetType == TargetType.Scalar\r\n                && (spec.Min.IsJust() || spec.Max.IsJust());", span="20-21"];
m83_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationGuards.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="18-18"];
m83_24 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", file="SpecificationGuards.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="35-35"];
m83_25 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", file="SpecificationGuards.cs", label="return spec => spec.TargetType == TargetType.Sequence\r\n                && (spec.HavingMin(min => min == 0)\r\n                || spec.HavingMax(max => max == 0));", span="37-39"];
m83_26 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", file="SpecificationGuards.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="35-35"];
m83_31 [cluster="CommandLine.Core.Specification.HavingMax(System.Func<int, bool>)", file="SpecificationGuards.cs", label="Entry CommandLine.Core.Specification.HavingMax(System.Func<int, bool>)", span="77-77"];
m84_5 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m84_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="value == null", span="23-23"];
m84_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="return new SpecificationProperty(specification, property, value);", span="25-25"];
m84_7 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="throw new ArgumentNullException(''value'');", span="23-23"];
m84_9 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m84_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m84_0 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14"];
m84_1 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.property = property", span="16-16"];
m84_2 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.specification = specification", span="17-17"];
m84_3 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.value = value", span="18-18"];
m84_4 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14"];
m84_11 [file="SpecificationProperty.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m85_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m85_7 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m85_8 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="newValue == null", span="20-20"];
m85_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="22-22"];
m85_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", span="20-20"];
m85_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m85_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m85_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="newSpecification == null", span="13-13"];
m85_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="15-15"];
m85_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newSpecification'');", span="13-13"];
m85_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m85_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m85_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp.Specification.TargetType", span="27-27"];
m85_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="30-34"];
m85_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", span="36-36"];
m85_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="TargetType.Sequence", span="29-29"];
m85_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m85_18 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m85_20 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m85_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m85_27 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="45-45"];
m85_28 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="rule(specProps)", span="45-45"];
m85_29 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="45-45"];
m85_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m85_24 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", span="45-45"];
m85_25 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m85_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m85_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m85_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m85_22 [cluster="Unk.FromJust", file="SpecificationPropertyExtensions.cs", label="Entry Unk.FromJust", span=""];
m85_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m85_31 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m86_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m86_74 [cluster="NameInfo.cstr", file="SpecificationPropertyRules.cs", label="Entry NameInfo.cstr", span=""];
m86_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m86_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n            {\r\n                var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o;\r\n                var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g;\r\n                if (groups.Count() > 1)\r\n                {\r\n                    return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);\r\n                }\r\n                return Enumerable.Empty<Error>();\r\n            };", span="26-45"];
m86_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m86_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m86_40 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="98-114"];
m86_41 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="96-96"];
m86_38 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m86_20 [cluster="MutuallyExclusiveSetError.cstr", file="SpecificationPropertyRules.cs", label="Entry MutuallyExclusiveSetError.cstr", span=""];
m86_49 [cluster="Unk.Any", file="SpecificationPropertyRules.cs", label="Entry Unk.Any", span=""];
m86_70 [cluster="CommandLine.Core.Token.IsName()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m86_37 [cluster="CommandLine.Core.Specification.IsValue()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m86_22 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m86_33 [cluster="Unk.IsNothing", file="SpecificationPropertyRules.cs", label="Entry Unk.IsNothing", span=""];
m86_48 [cluster="Unk.Where", file="SpecificationPropertyRules.cs", label="Entry Unk.Where", span=""];
m86_39 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m86_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m86_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="119-139"];
m86_62 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m86_50 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m86_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m86_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m86_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m86_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m86_63 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="119-139"];
m86_11 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options =\r\n                    from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select o", span="28-34"];
m86_10 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="26-45"];
m86_12 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = from o in options\r\n                             group o by o.SetName into g\r\n                             select g", span="35-37"];
m86_14 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return\r\n                        from o in options\r\n                        select new MutuallyExclusiveSetError(o.FromOptionSpecification(), o.SetName);", span="40-42"];
m86_13 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="groups.Count() > 1", span="38-38"];
m86_15 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Error>();", span="44-44"];
m86_16 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="26-45"];
m86_26 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58"];
m86_28 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72"];
m86_29 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89"];
m86_25 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="50-93"];
m86_27 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64"];
m86_30 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92"];
m86_31 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="50-93"];
m86_43 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="100-106"];
m86_42 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="98-114"];
m86_44 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="options.Any()", span="107-107"];
m86_51 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="101-101"];
m86_54 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="102-102"];
m86_57 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="103-105"];
m86_45 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111"];
m86_46 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Error>();", span="113-113"];
m86_47 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="98-114"];
m86_52 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.TargetType == TargetType.Sequence", span="101-101"];
m86_53 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="101-101"];
m86_55 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Value.IsJust()", span="102-102"];
m86_56 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="102-102"];
m86_58 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="104-105"];
m86_59 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="103-105"];
m86_65 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var options = from t in tokens\r\n                                  where t.IsName()\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="125-130"];
m86_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption()\r\n                                where sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-124"];
m86_66 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="131-134"];
m86_67 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="135-137"];
m86_68 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return errors;", span="138-138"];
m86_69 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="119-139"];
m86_73 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="346-346"];
m86_36 [cluster="Unk.Concat", file="SpecificationPropertyRules.cs", label="Entry Unk.Concat", span=""];
m86_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m86_23 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93"];
m86_24 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m86_18 [cluster="Unk.IsJust", file="SpecificationPropertyRules.cs", label="Entry Unk.IsJust", span=""];
m86_34 [cluster="Unk.ContainsIfNotEmpty", file="SpecificationPropertyRules.cs", label="Entry Unk.ContainsIfNotEmpty", span=""];
m86_71 [cluster="Unk.UniqueName", file="SpecificationPropertyRules.cs", label="Entry Unk.UniqueName", span=""];
m86_35 [cluster="Unk.Except", file="SpecificationPropertyRules.cs", label="Entry Unk.Except", span=""];
m86_72 [cluster="Unk.DefaultIfEmpty", file="SpecificationPropertyRules.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m86_17 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m86_60 [cluster="Unk.FromJust", file="SpecificationPropertyRules.cs", label="Entry Unk.FromJust", span=""];
m86_75 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m86_76 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="sequence.Any()", span="144-144"];
m86_77 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="return sequence.Contains(value);", span="146-146"];
m86_78 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="return true;", span="148-148"];
m86_79 [cluster="CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.ContainsIfNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, T)", span="142-142"];
m86_3 [cluster="System.Collections.Generic.List<T>.List()", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m86_32 [cluster="Unk.Distinct", file="SpecificationPropertyRules.cs", label="Entry Unk.Distinct", span=""];
m86_19 [cluster="Unk.Count", file="SpecificationPropertyRules.cs", label="Entry Unk.Count", span=""];
m86_21 [cluster="Unk.FromOptionSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromOptionSpecification", span=""];
m86_82 [file="SpecificationPropertyRules.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m87_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m87_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="StringBuilderExtensions.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", prediction=0, span="99-99"];
m87_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="StringBuilderExtensions.cs", label="help.AdditionalNewLineAfterOption = true", prediction=1, span="100-100"];
m87_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="StringBuilderExtensions.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", prediction=2, span="104-104"];
m87_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="StringBuilderExtensions.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", prediction=3, span="101-101"];
m87_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="!string.IsNullOrEmpty(errors)", span="105-105"];
m87_125 [cluster="string.Format(System.IFormatProvider, string, object)", file="StringBuilderExtensions.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m87_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m87_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="StringBuilderExtensions.cs", label="var options = new ComplexOptionsWithHelp()", span="314-314"];
m87_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="StringBuilderExtensions.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="316-317"];
m87_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Assert.IsFalse(result)", span="319-319"];
m87_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="312-312"];
m87_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m87_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="string optionHelp = null", span="337-337"];
m87_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="e.Option.ShortName", span="339-339"];
m87_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="e.Option.Required", span="350-350"];
m87_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="e.Option.HelpText = optionHelp", span="353-353"];
m87_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="''v''", span="341-341"];
m87_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="''i''", span="345-345"];
m87_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="342-342"];
m87_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="346-346"];
m87_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="351-351"];
m87_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="334-334"];
m87_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="string formattingMessage = ''Beyond the second line should be formatted as though it's in a column.''", span="164-164"];
m87_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[3], ''                of the verbosity to '', formattingMessage)", span="165-165"];
m87_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[4], ''                test out the wrapping '', formattingMessage)", span="166-166"];
m87_164 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m87_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="StringBuilderExtensions.cs", label="var options = new ComplexOptionsWithHelp()", span="325-325"];
m87_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="StringBuilderExtensions.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="327-328"];
m87_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Assert.IsFalse(result)", span="330-330"];
m87_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="323-323"];
m87_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m87_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="_helpText.MaximumDisplayWidth = 40", span="174-174"];
m87_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="175-175"];
m87_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="string help = _helpText.ToString()", span="176-176"];
m87_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="178-178"];
m87_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  v, verbose    Before '', lines[2])", span="179-179"];
m87_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[3])", span="180-180"];
m87_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''                After'', lines[4])", span="181-181"];
m87_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  input-file    Before '', lines[5])", span="182-182"];
m87_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[6])", span="183-183"];
m87_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''                456789 After'', lines[7])", span="184-184"];
m87_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m87_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="648-648"];
m87_121 [cluster="CommandLine.Text.HelpText.HelpText()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="456-456"];
m87_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m87_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="StringBuilderExtensions.cs", label="var local = new HelpText()", span="272-272"];
m87_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="StringBuilderExtensions.cs", label="Assert.AreEqual('''', local.ToString())", span="274-274"];
m87_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="270-270"];
m87_20 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m87_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="88-88"];
m87_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="StringBuilderExtensions.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="146-146"];
m87_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", color=green, community=0, file="StringBuilderExtensions.cs", label="string help = local.ToString()", prediction=4, span="148-148"];
m87_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="150-150"];
m87_19 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="return condition\r\n                ? builder.Append(ifTrue)\r\n                : builder.Append(ifFalse);", span="36-38"];
m87_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m87_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="var local = new HelpText(''Customizing Test.'')", span="210-210"];
m87_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="211-211"];
m87_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="212-212"];
m87_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="213-213"];
m87_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="214-214"];
m87_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="string help = local.ToString()", span="216-216"];
m87_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Console.WriteLine(help)", span="218-218"];
m87_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="220-220"];
m87_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Customizing Test.'', lines[0])", span="221-221"];
m87_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Pre-Options.'', lines[1])", span="222-222"];
m87_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  v, verbose       Kommentar umfassend Operationen.'', lines[3])", span="223-223"];
m87_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'', lines[4])", span="224-224"];
m87_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="225-225"];
m87_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m87_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="301-301"];
m87_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="StringBuilderExtensions.cs", label="var options = new ComplexOptionsWithHelp()", span="303-303"];
m87_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="StringBuilderExtensions.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-i0'' }, options)", span="305-306"];
m87_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="StringBuilderExtensions.cs", label="Assert.IsFalse(result)", span="308-308"];
m87_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="301-301"];
m87_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="486-486"];
m87_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="185-185"];
m87_45 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m87_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=green, community=0, file="StringBuilderExtensions.cs", label="string help = _helpText.ToString()", prediction=5, span="160-160"];
m87_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="159-159"];
m87_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", color=green, community=0, file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", prediction=6, span="162-162"];
m87_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="_helpText.MaximumDisplayWidth = 40", span="158-158"];
m87_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[2], ''  v, verbose    This is the description'', ''The first line should have the arguments and the start of the Help Text.'')", span="163-163"];
m87_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="64-64"];
m87_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[5], ''                capabilities of the '', formattingMessage)", span="167-167"];
m87_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="55-55"];
m87_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="279-279"];
m87_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="StringBuilderExtensions.cs", label="var options = new ComplexOptionsWithHelp()", span="281-281"];
m87_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="StringBuilderExtensions.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="283-284"];
m87_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="StringBuilderExtensions.cs", label="Assert.IsFalse(result)", span="286-286"];
m87_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="279-279"];
m87_42 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="return builder.Length > 0\r\n                ? builder.Remove(builder.Length - 1, 1)\r\n                : builder;", span="80-82"];
m87_44 [cluster="Unk.AreEqual", file="StringBuilderExtensions.cs", label="Entry Unk.AreEqual", span=""];
m87_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m87_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="StringBuilderExtensions.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="132-132"];
m87_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m87_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="304-304"];
m87_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[6], ''                Help Text.'', formattingMessage)", span="168-168"];
m87_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m87_123 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="172-172"];
m87_41 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m87_122 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="292-292"];
m87_144 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="StringBuilderExtensions.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1670-1670"];
m87_18 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m87_147 [cluster="Unk.IsFalse", file="StringBuilderExtensions.cs", label="Entry Unk.IsFalse", span=""];
m87_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m87_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="var local = new HelpText {\n				AddDashesToOption = true,\n		    	Heading = new HeadingInfo(''AddOptionsWithDashes''),\n	        	Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\n			}", span="254-258"];
m87_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="local.AddOptions(new MockOptionsSimple())", span="259-259"];
m87_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="string help = local.ToString()", span="261-261"];
m87_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="Console.WriteLine(help)", span="263-263"];
m87_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="265-265"];
m87_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  -s, --something    Input something here.'', lines[3])", span="266-266"];
m87_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m87_145 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="StringBuilderExtensions.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1575-1575"];
m87_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="709-709"];
m87_101 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="StringBuilderExtensions.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m87_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="290-290"];
m87_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="StringBuilderExtensions.cs", label="var options = new ComplexOptionsWithHelp()", span="292-292"];
m87_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="StringBuilderExtensions.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-j0'' }, options)", span="294-295"];
m87_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="StringBuilderExtensions.cs", label="Assert.IsFalse(result)", span="297-297"];
m87_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="290-290"];
m87_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m87_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="var local = new HelpText(''Heading Info.'')", span="190-190"];
m87_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="local.MaximumDisplayWidth = 40", span="191-191"];
m87_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="192-192"];
m87_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="local.AddOptions(new MockOptions())", span="193-193"];
m87_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="194-194"];
m87_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="string help = local.ToString()", span="196-196"];
m87_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="198-198"];
m87_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Before '', lines[1])", span="199-199"];
m87_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[2])", span="200-200"];
m87_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''012 After'', lines[3])", span="201-201"];
m87_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Before '', lines[lines.Length - 3])", span="202-202"];
m87_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[lines.Length - 2])", span="203-203"];
m87_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Assert.AreEqual('' After'', lines[lines.Length - 1])", span="204-204"];
m87_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m87_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="107-107"];
m87_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddPreOptionsLine(errors)", span="108-108"];
m87_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="111-111"];
m87_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="112-112"];
m87_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="113-113"];
m87_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="help.AddOptions(this)", span="114-114"];
m87_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="return help;", span="116-116"];
m87_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m87_103 [cluster="System.Console.WriteLine(string)", file="StringBuilderExtensions.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m87_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[lines.Length - 2], ''This is a first post-options line.'')", span="151-151"];
m87_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="46-46"];
m87_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="73-73"];
m87_28 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m87_29 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label=values, span="59-59"];
m87_30 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="value.Length > 0", span="60-60"];
m87_31 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="61-61"];
m87_32 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="return builder;", span="63-63"];
m87_33 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m87_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(lines[lines.Length - 1], ''This is a second post-options line.'')", span="152-152"];
m87_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m87_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m87_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="StringBuilderExtensions.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="126-126"];
m87_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m87_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="82-82"];
m87_163 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="StringBuilderExtensions.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1614-1614"];
m87_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="StringBuilderExtensions.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m87_146 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="StringBuilderExtensions.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1695-1695"];
m87_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m87_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="var year = DateTime.Now.Year", span="231-231"];
m87_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="var local = new HelpText()", span="232-232"];
m87_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="234-234"];
m87_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year), lines[1])", span="245-245"];
m87_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="233-233"];
m87_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="235-235"];
m87_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="local.AddOptions(new MockOptionsSimple())", span="236-236"];
m87_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="237-237"];
m87_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="string help = local.ToString()", span="239-239"];
m87_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Console.WriteLine(help)", span="241-241"];
m87_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="243-243"];
m87_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Parameterless Constructor Test.'', lines[0])", span="244-244"];
m87_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Pre-Options.'', lines[2])", span="246-246"];
m87_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''  s, something    Input something here.'', lines[4])", span="247-247"];
m87_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="248-248"];
m87_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m87_180 [file="StringBuilderExtensions.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m87_181 [file="StringBuilderExtensions.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m88_7 [cluster="Unk.Select", file="StringExtensions.cs", label="Entry Unk.Select", span=""];
m88_12 [cluster="string.Trim()", file="StringExtensions.cs", label="Entry string.Trim()", span="0-0"];
m88_4 [cluster="CommandLine.Tests.StringExtensions.TrimStringArray(System.Collections.Generic.IEnumerable<string>)", file="StringExtensions.cs", label="Entry CommandLine.Tests.StringExtensions.TrimStringArray(System.Collections.Generic.IEnumerable<string>)", span="15-15"];
m88_5 [cluster="CommandLine.Tests.StringExtensions.TrimStringArray(System.Collections.Generic.IEnumerable<string>)", file="StringExtensions.cs", label="return array.Select(item => item.Trim()).ToArray();", span="17-17"];
m88_6 [cluster="CommandLine.Tests.StringExtensions.TrimStringArray(System.Collections.Generic.IEnumerable<string>)", file="StringExtensions.cs", label="Exit CommandLine.Tests.StringExtensions.TrimStringArray(System.Collections.Generic.IEnumerable<string>)", span="15-15"];
m88_0 [cluster="CommandLine.Tests.StringExtensions.ToNotEmptyLines(string)", file="StringExtensions.cs", label="Entry CommandLine.Tests.StringExtensions.ToNotEmptyLines(string)", span="10-10"];
m88_1 [cluster="CommandLine.Tests.StringExtensions.ToNotEmptyLines(string)", file="StringExtensions.cs", label="return value.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);", span="12-12"];
m88_2 [cluster="CommandLine.Tests.StringExtensions.ToNotEmptyLines(string)", file="StringExtensions.cs", label="Exit CommandLine.Tests.StringExtensions.ToNotEmptyLines(string)", span="10-10"];
m88_9 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="17-17"];
m88_10 [cluster="lambda expression", file="StringExtensions.cs", label="item.Trim()", span="17-17"];
m88_11 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="17-17"];
m88_8 [cluster="Unk.ToArray", file="StringExtensions.cs", label="Entry Unk.ToArray", span=""];
m88_3 [cluster="string.Split(string[], System.StringSplitOptions)", file="StringExtensions.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m89_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m89_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17"];
m89_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m89_5 [cluster="lambda expression", file="Switch.cs", label="Entry lambda expression", span="16-16"];
m89_6 [cluster="lambda expression", file="Switch.cs", label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16"];
m89_7 [cluster="lambda expression", file="Switch.cs", label="Exit lambda expression", span="16-16"];
m89_4 [cluster="Unk.Return", file="Switch.cs", label="Entry Unk.Return", span=""];
m89_8 [cluster="CommandLine.Core.Token.IsName()", file="Switch.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m89_3 [cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m89_9 [file="Switch.cs", label=t, span=""];
m90_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SwitchTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m90_14 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SwitchTests.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28"];
m90_15 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SwitchTests.cs", label="var expected = new [] { Token.Name(''x'') }", span="30-30"];
m90_16 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SwitchTests.cs", label="var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="32-41"];
m90_17 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SwitchTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="43-43"];
m90_18 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SwitchTests.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28"];
m90_5 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SwitchTests.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m90_13 [cluster="CSharpx.Maybe.Just<T>(T)", file="SwitchTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m90_21 [cluster="lambda expression", file="SwitchTests.cs", label="Entry lambda expression", span="38-41"];
m90_7 [cluster="lambda expression", file="SwitchTests.cs", label="Entry lambda expression", span="19-22"];
m90_8 [cluster="lambda expression", file="SwitchTests.cs", label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22"];
m90_9 [cluster="lambda expression", file="SwitchTests.cs", label="Exit lambda expression", span="19-22"];
m90_22 [cluster="lambda expression", file="SwitchTests.cs", label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41"];
m90_23 [cluster="lambda expression", file="SwitchTests.cs", label="Exit lambda expression", span="38-41"];
m90_19 [cluster="CommandLine.Core.Token.Name(string)", file="SwitchTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m90_11 [cluster="CSharpx.Maybe.Nothing<T>()", file="SwitchTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m90_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="SwitchTests.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35"];
m90_20 [cluster="CommandLine.Core.Token.Value(string)", file="SwitchTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m90_6 [cluster="Unk.ShouldBeEquivalentTo", file="SwitchTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m90_0 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SwitchTests.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13"];
m90_1 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SwitchTests.cs", label="var expected = new Token[] { }", span="15-15"];
m90_2 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SwitchTests.cs", label="var result = Switch.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22"];
m90_3 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SwitchTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="24-24"];
m90_4 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SwitchTests.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13"];
m91_31 [cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs", label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73"];
m91_32 [cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs", label="return token.Tag == TokenType.Value;", span="75-75"];
m91_33 [cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs", label="Exit CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73"];
m91_28 [cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs", label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68"];
m91_29 [cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs", label="return token.Tag == TokenType.Name;", span="70-70"];
m91_30 [cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs", label="Exit CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68"];
m91_21 [cluster="object.GetHashCode()", file="Token.cs", label="Entry object.GetHashCode()", span="0-0"];
m91_0 [cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs", label="Entry CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13"];
m91_1 [cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs", label="this.tag = tag", span="15-15"];
m91_2 [cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs", label="this.text = text", span="16-16"];
m91_3 [cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs", label="Exit CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13"];
m91_17 [cluster="object.Equals(object)", file="Token.cs", label="Entry object.Equals(object)", span="0-0"];
m91_26 [cluster="System.Enum.Equals(object)", file="Token.cs", label="Entry System.Enum.Equals(object)", span="0-0"];
m91_27 [cluster="string.Equals(string)", file="Token.cs", label="Entry string.Equals(string)", span="0-0"];
m91_16 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m91_22 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs", label="other == null", span="57-57"];
m91_24 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs", label="return Tag.Equals(other.Tag) && Text.Equals(other.Text);", span="62-62"];
m91_23 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs", label="return false;", span="59-59"];
m91_25 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs", label="Exit CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m91_4 [cluster="CommandLine.Core.Token.Name(string)", file="Token.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m91_5 [cluster="CommandLine.Core.Token.Name(string)", file="Token.cs", label="return new Token(TokenType.Name, text);", span="21-21"];
m91_6 [cluster="CommandLine.Core.Token.Name(string)", file="Token.cs", label="Exit CommandLine.Core.Token.Name(string)", span="19-19"];
m91_18 [cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs", label="Entry CommandLine.Core.Token.GetHashCode()", span="50-50"];
m91_19 [cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs", label="return new {Tag, Text}.GetHashCode();", span="52-52"];
m91_20 [cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs", label="Exit CommandLine.Core.Token.GetHashCode()", span="50-50"];
m91_7 [cluster="CommandLine.Core.Token.Value(string)", file="Token.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m91_8 [cluster="CommandLine.Core.Token.Value(string)", file="Token.cs", label="return new Token(TokenType.Value, text);", span="26-26"];
m91_9 [cluster="CommandLine.Core.Token.Value(string)", file="Token.cs", label="Exit CommandLine.Core.Token.Value(string)", span="24-24"];
m91_10 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="Entry CommandLine.Core.Token.Equals(object)", span="39-39"];
m91_11 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="var other = obj as Token", span="41-41"];
m91_14 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="return base.Equals(obj);", span="47-47"];
m91_12 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="other != null", span="42-42"];
m91_13 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="return Equals(other);", span="44-44"];
m91_15 [cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", label="Exit CommandLine.Core.Token.Equals(object)", span="39-39"];
m91_34 [file="Token.cs", label="CommandLine.Core.Token", span=""];
m92_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m92_133 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m92_14 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m92_23 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m92_24 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="37-37"];
m92_25 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="39-39"];
m92_26 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="40-40"];
m92_28 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="43-43"];
m92_27 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="return tokenizerResult.Map(tokens => tokens.Concat(values));", span="41-41"];
m92_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m92_79 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m92_131 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m92_50 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m92_51 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var tokens = tokenizerResult.SucceededWith()", span="50-50"];
m92_52 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var replaces = tokens.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="52-55"];
m92_55 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="return Result.Succeed(flattened, tokenizerResult.SuccessfulMessages());", span="64-64"];
m92_53 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var exploded = tokens.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="57-60"];
m92_54 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="var flattened = exploded.SelectMany(x => x)", span="62-62"];
m92_56 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m92_8 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m92_58 [cluster="Unk.SkipWhile", file="Tokenizer.cs", label="Entry Unk.SkipWhile", span=""];
m92_111 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m92_132 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m92_30 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m92_9 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m92_13 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m92_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m92_15 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m92_69 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m92_78 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m92_112 [cluster="string.Substring(int, int)", file="Tokenizer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m92_113 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m92_77 [cluster="Unk.ToMaybe", file="Tokenizer.cs", label="Entry Unk.ToMaybe", span=""];
m92_64 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Tokenizer.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m92_83 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="59-59"];
m92_20 [cluster="lambda expression", file="Tokenizer.cs", label="!unkTokens.Contains(x)", span="30-30"];
m92_19 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="30-30"];
m92_21 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="30-30"];
m92_37 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="37-37"];
m92_41 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m92_44 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="40-40"];
m92_48 [cluster="lambda expression", file="Tokenizer.cs", label="tokens.Concat(values)", span="41-41"];
m92_47 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="41-41"];
m92_38 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="37-37"];
m92_39 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="37-37"];
m92_42 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="39-39"];
m92_43 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m92_45 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="40-40"];
m92_46 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="40-40"];
m92_49 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="41-41"];
m92_62 [cluster="lambda expression", file="Tokenizer.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="53-55"];
m92_61 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="52-55"];
m92_70 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="55-55"];
m92_74 [cluster="lambda expression", file="Tokenizer.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="58-60"];
m92_73 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="57-60"];
m92_87 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="62-62"];
m92_67 [cluster="lambda expression", file="Tokenizer.cs", label="Tuple.Create(i + 1, sep)", span="54-54"];
m92_63 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="52-55"];
m92_66 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="54-54"];
m92_68 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="54-54"];
m92_71 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 < 0", span="55-55"];
m92_72 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="55-55"];
m92_81 [cluster="lambda expression", file="Tokenizer.cs", label="x.Item1 == i", span="58-58"];
m92_84 [cluster="lambda expression", file="Tokenizer.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="59-59"];
m92_75 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="57-60"];
m92_80 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="58-58"];
m92_82 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="58-58"];
m92_85 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="59-59"];
m92_88 [cluster="lambda expression", file="Tokenizer.cs", label=x, span="62-62"];
m92_89 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="62-62"];
m92_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m92_10 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112"];
m92_117 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116"];
m92_121 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="122-122"];
m92_122 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="123-123"];
m92_125 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="128-128"];
m92_127 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="131-131"];
m92_128 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1]);", span="132-132"];
m92_118 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="118-118"];
m92_124 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="127-127"];
m92_119 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="119-119"];
m92_126 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="130-130"];
m92_120 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="120-120"];
m92_123 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="125-125"];
m92_129 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112"];
m92_60 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12"];
m92_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m92_17 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m92_36 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Map<TSuccess, TMessage, TResult>(System.Func<TSuccess, TResult>)", span="534-534"];
m92_40 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="35-35"];
m92_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m92_130 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m92_35 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m92_12 [cluster="Unk.Memorize", file="Tokenizer.cs", label="Entry Unk.Memorize", span=""];
m92_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m92_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="17-17"];
m92_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).Memorize()", span="20-26"];
m92_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="28-28"];
m92_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = errors.Add", span="18-18"];
m92_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="return Result.Succeed(tokens.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30"];
m92_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m92_65 [cluster="Unk.Return", file="Tokenizer.cs", label="Entry Unk.Return", span=""];
m92_115 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m92_57 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="Tokenizer.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653"];
m92_110 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m92_7 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m92_16 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m92_116 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m92_59 [cluster="Unk.SelectMany", file="Tokenizer.cs", label="Entry Unk.SelectMany", span=""];
m92_76 [cluster="Unk.FirstOrDefault", file="Tokenizer.cs", label="Entry Unk.FirstOrDefault", span=""];
m92_86 [cluster="Unk.Split", file="Tokenizer.cs", label="Entry Unk.Split", span=""];
m92_11 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67"];
m92_90 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71"];
m92_93 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="77-77"];
m92_94 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="78-78"];
m92_96 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="83-83"];
m92_97 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="84-84"];
m92_99 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="88-88"];
m92_105 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="98-98"];
m92_107 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107"];
m92_91 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="73-73"];
m92_95 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="81-81"];
m92_103 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="95-95"];
m92_92 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="75-75"];
m92_98 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="87-87"];
m92_101 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="92-92"];
m92_106 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="105-105"];
m92_100 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="90-90"];
m92_104 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="97-97"];
m92_102 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="94-94"];
m92_108 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67"];
m92_18 [cluster="Unk.Succeed", file="Tokenizer.cs", label="Entry Unk.Succeed", span=""];
m92_114 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m92_109 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m92_134 [file="Tokenizer.cs", label=unkTokens, span=""];
m92_135 [file="Tokenizer.cs", label=values, span=""];
m92_136 [file="Tokenizer.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m92_137 [file="Tokenizer.cs", label=int, span=""];
m92_138 [file="Tokenizer.cs", label=replaces, span=""];
m92_139 [file="Tokenizer.cs", label=int, span=""];
m92_140 [file="Tokenizer.cs", label="CommandLine.Core.Token", span=""];
m93_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TokenizerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m93_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="42-42"];
m93_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="45-46"];
m93_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="47-48"];
m93_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="60-60"];
m93_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="51-57"];
m93_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="42-42"];
m93_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m93_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m93_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="18-18"];
m93_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="21-22"];
m93_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="23-24"];
m93_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="36-36"];
m93_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="27-33"];
m93_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="18-18"];
m93_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="57-57"];
m93_17 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="33-33"];
m93_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="33-33"];
m93_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="33-33"];
m93_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="57-57"];
m93_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="57-57"];
m93_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m93_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m93_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m93_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m93_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m93_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m93_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m93_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m93_29 [file="TokenizerTests.cs", label=specs, span=""];
m93_30 [file="TokenizerTests.cs", label=specs, span=""];
m94_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m94_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var tokenList = tokens.Memorize()", span="16-16"];
m94_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var switches = Switch.Partition(tokenList, typeLookup).Memorize()", span="17-17"];
m94_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var scalars = Scalar.Partition(tokenList, typeLookup).Memorize()", span="18-18"];
m94_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var sequences = Sequence.Partition(tokenList, typeLookup).Memorize()", span="19-19"];
m94_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var nonOptions = tokenList\r\n                .Where(t => !switches.Contains(t))\r\n                .Where(t => !scalars.Contains(t))\r\n                .Where(t => !sequences.Contains(t)).Memorize()", span="20-23"];
m94_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="return TokenPartitions.Create(\r\n                    KeyValuePairHelper.ForSwitch(switches)\r\n                        .Concat(KeyValuePairHelper.ForScalar(scalars))\r\n                        .Concat(KeyValuePairHelper.ForSequence(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="27-32"];
m94_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var values = nonOptions.Where(v => v.IsValue()).Memorize()", span="24-24"];
m94_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="var errors = nonOptions.Except(values).Memorize()", span="25-25"];
m94_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m94_14 [cluster="Unk.Where", file="TokenPartitioner.cs", label="Entry Unk.Where", span=""];
m94_22 [cluster="Unk.Create", file="TokenPartitioner.cs", label="Entry Unk.Create", span=""];
m94_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m94_13 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m94_21 [cluster="Unk.Select", file="TokenPartitioner.cs", label="Entry Unk.Select", span=""];
m94_15 [cluster="Unk.Memorize", file="TokenPartitioner.cs", label="Entry Unk.Memorize", span=""];
m94_30 [cluster="Unk.Contains", file="TokenPartitioner.cs", label="Entry Unk.Contains", span=""];
m94_11 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m94_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m94_38 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="31-31"];
m94_24 [cluster="lambda expression", file="TokenPartitioner.cs", label="!switches.Contains(t)", span="21-21"];
m94_28 [cluster="lambda expression", file="TokenPartitioner.cs", label="!scalars.Contains(t)", span="22-22"];
m94_32 [cluster="lambda expression", file="TokenPartitioner.cs", label="!sequences.Contains(t)", span="23-23"];
m94_23 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="21-21"];
m94_27 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="22-22"];
m94_31 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="23-23"];
m94_34 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="24-24"];
m94_25 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="21-21"];
m94_29 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="22-22"];
m94_33 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="23-23"];
m94_35 [cluster="lambda expression", file="TokenPartitioner.cs", label="v.IsValue()", span="24-24"];
m94_36 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="24-24"];
m94_39 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Text", span="31-31"];
m94_40 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="31-31"];
m94_10 [cluster="System.Collections.Generic.IEnumerable<T>.Memorize<T>()", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memorize<T>()", span="374-374"];
m94_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m94_12 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m94_18 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m94_37 [cluster="Unk.IsValue", file="TokenPartitioner.cs", label="Entry Unk.IsValue", span=""];
m94_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m94_20 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m94_41 [file="TokenPartitioner.cs", label=switches, span=""];
m94_42 [file="TokenPartitioner.cs", label=scalars, span=""];
m94_43 [file="TokenPartitioner.cs", label=sequences, span=""];
m95_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m95_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20"];
m95_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="21-25"];
m95_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34"];
m95_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31"];
m95_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m95_13 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m95_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m95_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m95_10 [cluster="CSharpx.Maybe.Just<T>(T)", file="TokenPartitionerTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m95_15 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m95_14 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m95_41 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="60-60"];
m95_17 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="30-30"];
m95_16 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="30-30"];
m95_21 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34"];
m95_20 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m95_18 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="30-30"];
m95_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m95_24 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m95_25 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34"];
m95_26 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m95_36 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="56-56"];
m95_35 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="56-56"];
m95_39 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="60-60"];
m95_38 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="60-60"];
m95_37 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="56-56"];
m95_40 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="60-60"];
m95_42 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="60-60"];
m95_43 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="60-60"];
m95_19 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m95_27 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m95_11 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m95_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenPartitionerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m95_28 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m95_23 [cluster="Unk.Any", file="TokenPartitionerTests.cs", label="Entry Unk.Any", span=""];
m95_12 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m95_29 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40"];
m95_30 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="43-46"];
m95_31 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="47-51"];
m95_33 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="60-60"];
m95_32 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="54-57"];
m95_34 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40"];
m95_9 [cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m95_44 [file="TokenPartitionerTests.cs", label=specs, span=""];
m95_45 [file="TokenPartitionerTests.cs", label=result, span=""];
m95_46 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m95_47 [file="TokenPartitionerTests.cs", label=specs, span=""];
m95_48 [file="TokenPartitionerTests.cs", label=result, span=""];
m95_49 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m96_0 [cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="Entry CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m96_1 [cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="this.options = options", span="17-17"];
m96_2 [cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="this.values = values", span="18-18"];
m96_3 [cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="this.errors = errors", span="19-19"];
m96_4 [cluster="CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="Exit CommandLine.Core.TokenPartitions.TokenPartitions(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m96_5 [cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="Entry CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37"];
m96_6 [cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="return new TokenPartitions(options, values, errors);", span="42-42"];
m96_7 [cluster="CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitions.cs", label="Exit CommandLine.Core.TokenPartitions.Create(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="37-37"];
m96_8 [file="TokenPartitions.cs", label="CommandLine.Core.TokenPartitions", span=""];
m97_0 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="TokenTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="10-10"];
m97_1 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="TokenTests.cs", label="Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="12-12"];
m97_2 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="TokenTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="10-10"];
m97_4 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TokenTests.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m97_3 [cluster="CommandLine.Core.Token.Name(string)", file="TokenTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m97_5 [cluster="Unk.True", file="TokenTests.cs", label="Entry Unk.True", span=""];
m98_4 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36"];
m98_31 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture)", span="38-38"];
m98_32 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="result.Match(_ => { }, e => e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="39-40"];
m98_33 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Maybe.OfEither(result);", span="41-41"];
m98_34 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36"];
m98_35 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44"];
m98_44 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Func<string, object> changeType = input =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                };\r\n\r\n                return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();\r\n            }", span="46-74"];
m98_45 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Func<string, object> makeType = input =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { input });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="76-87"];
m98_46 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Either.Protect(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType, value);", span="89-92"];
m98_47 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44"];
m98_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m98_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture);", span="15-17"];
m98_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m98_101 [cluster="System.Enum.IsDefined(System.Type, object)", file="TypeConverter.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m98_13 [cluster="System.ApplicationException.ApplicationException(string)", file="TypeConverter.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m98_76 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m98_16 [cluster="Unk.Any", file="TypeConverter.cs", label="Entry Unk.Any", span=""];
m98_70 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m98_71 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m98_99 [cluster="System.Enum.Parse(System.Type, string)", file="TypeConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m98_12 [cluster="T.ToMaybe<T>()", file="TypeConverter.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m98_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m98_58 [cluster="System.Func<TResult>.Invoke()", file="TypeConverter.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m98_81 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="76-87"];
m98_21 [cluster="lambda expression", file="TypeConverter.cs", label="ChangeTypeScalar(value, type, conversionCulture)", span="29-29"];
m98_20 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="29-29"];
m98_24 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="31-31"];
m98_28 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="33-33"];
m98_22 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="29-29"];
m98_25 [cluster="lambda expression", file="TypeConverter.cs", label="a.MatchNothing()", span="31-31"];
m98_26 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="31-31"];
m98_29 [cluster="lambda expression", file="TypeConverter.cs", label="((Just<object>)c).Value", span="33-33"];
m98_30 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="33-33"];
m98_38 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="39-39"];
m98_40 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="39-40"];
m98_39 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="39-39"];
m98_41 [cluster="lambda expression", file="TypeConverter.cs", label="e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="39-40"];
m98_42 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="39-40"];
m98_52 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                }", span="48-69"];
m98_60 [cluster="lambda expression", file="TypeConverter.cs", label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="50-50"];
m98_61 [cluster="lambda expression", file="TypeConverter.cs", label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="52-56"];
m98_68 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="54-56"];
m98_62 [cluster="lambda expression", file="TypeConverter.cs", label="var type = getUnderlyingType() ?? conversionType", span="58-58"];
m98_63 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="60-64"];
m98_73 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="62-64"];
m98_53 [cluster="lambda expression", file="TypeConverter.cs", label="return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();", span="71-73"];
m98_82 [cluster="lambda expression", file="TypeConverter.cs", label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="80-80"];
m98_65 [cluster="lambda expression", file="TypeConverter.cs", label="return (input == null) ? empty() : withValue();", span="68-68"];
m98_83 [cluster="lambda expression", file="TypeConverter.cs", label="return ctor.Invoke(new object[] { input });", span="81-81"];
m98_51 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="46-74"];
m98_54 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="46-74"];
m98_59 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="48-69"];
m98_64 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66"];
m98_78 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66"];
m98_66 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="48-69"];
m98_67 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="53-56"];
m98_69 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="53-56"];
m98_72 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="61-64"];
m98_74 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="61-64"];
m98_77 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="66-66"];
m98_79 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="66-66"];
m98_84 [cluster="lambda expression", file="TypeConverter.cs", label=Exception, span="83-83"];
m98_85 [cluster="lambda expression", file="TypeConverter.cs", label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="85-85"];
m98_86 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="76-87"];
m98_43 [cluster="Unk.RethrowWhenAbsentIn", file="TypeConverter.cs", label="Entry Unk.RethrowWhenAbsentIn", span=""];
m98_75 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="TypeConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m98_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m98_57 [cluster="string.ToEnum(System.Type)", file="TypeConverter.cs", label="Entry string.ToEnum(System.Type)", span="95-95"];
m98_49 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m98_48 [cluster="System.Type.IsPrimitiveEx()", file="TypeConverter.cs", label="Entry System.Type.IsPrimitiveEx()", span="209-209"];
m98_5 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20"];
m98_6 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="22-27"];
m98_7 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture))", span="29-29"];
m98_8 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="31-33"];
m98_9 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20"];
m98_15 [cluster="Unk.Select", file="TypeConverter.cs", label="Entry Unk.Select", span=""];
m98_23 [cluster="Unk.ChangeTypeScalar", file="TypeConverter.cs", label="Entry Unk.ChangeTypeScalar", span=""];
m98_37 [cluster="Unk.OfEither", file="TypeConverter.cs", label="Entry Unk.OfEither", span=""];
m98_36 [cluster="Unk.Match", file="TypeConverter.cs", label="Entry Unk.Match", span=""];
m98_10 [cluster="System.Type.GetGenericArguments()", file="TypeConverter.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m98_50 [cluster="Unk.Protect", file="TypeConverter.cs", label="Entry Unk.Protect", span=""];
m98_56 [cluster="string.ToBoolean()", file="TypeConverter.cs", label="Entry string.ToBoolean()", span="61-61"];
m98_89 [cluster="System.FormatException.FormatException(string)", file="TypeConverter.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m98_87 [cluster="System.Type.GetConstructor(System.Type[])", file="TypeConverter.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m98_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m98_14 [cluster="Unk.FromJust", file="TypeConverter.cs", label="Entry Unk.FromJust", span=""];
m98_90 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95"];
m98_91 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="object parsedValue", span="97-97"];
m98_92 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="parsedValue = Enum.Parse(conversionType, value)", span="100-100"];
m98_95 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="106-106"];
m98_93 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label=ArgumentException, span="102-102"];
m98_96 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="return parsedValue;", span="108-108"];
m98_94 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="104-104"];
m98_97 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="110-110"];
m98_98 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95"];
m98_55 [cluster="string.IsBooleanString()", file="TypeConverter.cs", label="Entry string.IsBooleanString()", span="55-55"];
m98_27 [cluster="Unk.MatchNothing", file="TypeConverter.cs", label="Entry Unk.MatchNothing", span=""];
m98_88 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="TypeConverter.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m98_18 [cluster="Unk.ToUntypedArray", file="TypeConverter.cs", label="Entry Unk.ToUntypedArray", span=""];
m98_100 [cluster="System.FormatException.FormatException()", file="TypeConverter.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m98_80 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m98_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m98_102 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m98_103 [file="TypeConverter.cs", label=type, span=""];
m98_104 [file="TypeConverter.cs", label="System.Type", span=""];
m98_105 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m98_106 [file="TypeConverter.cs", label=string, span=""];
m98_107 [file="TypeConverter.cs", label=isFsOption, span=""];
m98_108 [file="TypeConverter.cs", label=type, span=""];
m99_16 [cluster="Unk.Create", file="TypeDescriptor.cs", label="Entry Unk.Create", span=""];
m99_11 [cluster="T.ToMaybe<T>()", file="TypeDescriptor.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m99_0 [cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="Entry CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="13-13"];
m99_1 [cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="this.targetType = targetType", span="15-15"];
m99_2 [cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="this.maxItems = maxItems", span="16-16"];
m99_3 [cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="this.nextValue = nextValue", span="17-17"];
m99_4 [cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="Exit CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="13-13"];
m99_17 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="47-47"];
m99_18 [cluster="lambda expression", file="TypeDescriptor.cs", label=n, span="47-47"];
m99_19 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="47-47"];
m99_15 [cluster="Unk.Return", file="TypeDescriptor.cs", label="Entry Unk.Return", span=""];
m99_12 [cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="Entry CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45"];
m99_13 [cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="return TypeDescriptor.Create(descriptor.TargetType, descriptor.MaxItems, nextValue.Return(n => n, null));", span="47-47"];
m99_14 [cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="TypeDescriptor.cs", label="Exit CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45"];
m99_5 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TypeDescriptor.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35"];
m99_6 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TypeDescriptor.cs", label="maximumItems == null", span="37-37"];
m99_8 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TypeDescriptor.cs", label="return new TypeDescriptor(tag, maximumItems, next.ToMaybe());", span="39-39"];
m99_7 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TypeDescriptor.cs", label="throw new ArgumentNullException(''maximumItems'');", span="37-37"];
m99_9 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TypeDescriptor.cs", label="Exit CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35"];
m99_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m99_20 [file="TypeDescriptor.cs", label="CommandLine.Core.TypeDescriptor", span=""];
m100_14 [cluster="Unk.Create", file="TypeLookup.cs", label="Entry Unk.Create", span=""];
m100_4 [cluster="Unk.SingleOrDefault", file="TypeLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m100_29 [cluster="Unk.WithNextValue", file="TypeLookup.cs", label="Entry Unk.WithNextValue", span=""];
m100_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m100_6 [cluster="Unk.Map", file="TypeLookup.cs", label="Entry Unk.Map", span=""];
m100_5 [cluster="Unk.ToMaybe", file="TypeLookup.cs", label="Entry Unk.ToMaybe", span=""];
m100_33 [cluster="object.Equals(object)", file="TypeLookup.cs", label="Entry object.Equals(object)", span="0-0"];
m100_0 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m100_1 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="16-19"];
m100_2 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="return info;", span="20-20"];
m100_3 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m100_38 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="38-38"];
m100_8 [cluster="lambda expression", file="TypeLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16"];
m100_7 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="16-16"];
m100_11 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="19-19"];
m100_9 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="16-16"];
m100_12 [cluster="lambda expression", file="TypeLookup.cs", label="TypeDescriptor.Create(s.TargetType, s.Max)", span="19-19"];
m100_13 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="19-19"];
m100_20 [cluster="lambda expression", file="TypeLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="29-29"];
m100_24 [cluster="lambda expression", file="TypeLookup.cs", label="var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max))", span="35-38"];
m100_19 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="29-29"];
m100_22 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="32-40"];
m100_21 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="29-29"];
m100_23 [cluster="lambda expression", file="TypeLookup.cs", label="var descr = TypeDescriptor.Create(first.TargetType, first.Max)", span="34-34"];
m100_31 [cluster="lambda expression", file="TypeLookup.cs", label="s.Equals(first)", span="36-36"];
m100_25 [cluster="lambda expression", file="TypeLookup.cs", label="return descr.WithNextValue(next);", span="39-39"];
m100_30 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="36-36"];
m100_34 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="37-37"];
m100_26 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="32-40"];
m100_32 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="36-36"];
m100_35 [cluster="lambda expression", file="TypeLookup.cs", label="x.IsValue()", span="37-37"];
m100_36 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="37-37"];
m100_39 [cluster="lambda expression", file="TypeLookup.cs", label="TypeDescriptor.Create(second.TargetType, second.Max)", span="38-38"];
m100_40 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="38-38"];
m100_15 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m100_16 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="var info =\r\n                specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                    .ToMaybe()\r\n                    .Map(\r\n                        first =>\r\n                            {\r\n                                var descr = TypeDescriptor.Create(first.TargetType, first.Max);\r\n                                var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max));\r\n                                return descr.WithNextValue(next);\r\n                            })", span="28-40"];
m100_17 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="return info;", span="41-41"];
m100_18 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m100_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m100_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m100_37 [cluster="CommandLine.Core.Specification.IsValue()", file="TypeLookup.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m100_41 [file="TypeLookup.cs", label=string, span=""];
m100_42 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m100_43 [file="TypeLookup.cs", label=string, span=""];
m100_44 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m100_45 [file="TypeLookup.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m100_46 [file="TypeLookup.cs", label=T1, span=""];
m101_38 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m101_46 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m101_124 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m101_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m101_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m101_5 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { UseEqualToken = true };", span="63-63"];
m101_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m101_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m101_127 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="196-197"];
m101_128 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m101_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m101_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="164-164"];
m101_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="165-165"];
m101_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="168-168"];
m101_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="171-171"];
m101_96 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="174-174"];
m101_98 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="176-176"];
m101_99 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="177-177"];
m101_100 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="180-180"];
m101_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="167-167"];
m101_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="170-170"];
m101_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="172-173"];
m101_97 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="175-175"];
m101_101 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m101_35 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m101_105 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m101_45 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m101_41 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="233-233"];
m101_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m101_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m101_138 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="210-212"];
m101_139 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken && optionSpec.ConversionType != typeof(bool), ''='', '' '')\r\n                    .ToString();", span="214-219"];
m101_140 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m101_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m101_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="235-235"];
m101_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="236-236"];
m101_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="237-237"];
m101_158 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="238-238"];
m101_160 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="239-239"];
m101_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="235-235"];
m101_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="236-236"];
m101_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="237-237"];
m101_159 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="238-238"];
m101_161 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="239-239"];
m101_162 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="240-240"];
m101_163 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m101_43 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m101_142 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m101_52 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m101_120 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m101_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m101_72 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m101_115 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m101_119 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m101_36 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m101_129 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="197-197"];
m101_11 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="83-83"];
m101_12 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="83-83"];
m101_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="112-113"];
m101_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')", span="148-151"];
m101_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="107-107"];
m101_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="107-107"];
m101_60 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="112-113"];
m101_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="118-118"];
m101_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="132-132"];
m101_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="132-132"];
m101_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="135-135"];
m101_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="142-142"];
m101_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="156-156"];
m101_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="147-151"];
m101_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="156-156"];
m101_58 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="107-107"];
m101_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="112-113"];
m101_67 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="118-118"];
m101_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="118-118"];
m101_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="132-132"];
m101_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="135-135"];
m101_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="135-135"];
m101_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="142-142"];
m101_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="142-142"];
m101_81 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="147-151"];
m101_86 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="156-156"];
m101_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="173-173"];
m101_109 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="172-173"];
m101_111 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="172-173"];
m101_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="186-186"];
m101_122 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="190-191"];
m101_121 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="190-191"];
m101_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="185-186"];
m101_118 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="185-186"];
m101_123 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="190-191"];
m101_130 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="197-197"];
m101_131 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="197-197"];
m101_136 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m101_55 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m101_108 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m101_148 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m101_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m101_59 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m101_47 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m101_164 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m101_87 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m101_42 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m101_83 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m101_44 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m101_150 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m101_125 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m101_65 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="222-222"];
m101_39 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m101_54 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m101_104 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="194-194"];
m101_50 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m101_135 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="208-208"];
m101_102 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m101_112 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="185-186"];
m101_113 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="188-191"];
m101_114 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m101_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m101_1 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { GroupSwitches = true };", span="54-54"];
m101_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m101_53 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m101_103 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m101_49 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m101_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m101_141 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m101_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m101_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m101_165 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m101_106 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m101_82 [cluster="System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", span="94-94"];
m101_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m101_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="97-97"];
m101_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="100-100"];
m101_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="103-103"];
m101_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="109-116"];
m101_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="97-97"];
m101_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="99-99"];
m101_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="101-101"];
m101_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="131-133"];
m101_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="140-143"];
m101_29 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt =>\r\n                    builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')\r\n                )", span="146-152"];
m101_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="104-104"];
m101_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="106-107"];
m101_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="118-122"];
m101_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="135-138"];
m101_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="124-129"];
m101_28 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="144-145"];
m101_30 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="153-154"];
m101_31 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="155-156"];
m101_32 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="158-159"];
m101_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m101_48 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m101_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m101_133 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="202-205"];
m101_134 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m101_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m101_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m101_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m101_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return parser.FormatCommandLine(options, config => {});", span="83-83"];
m101_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m101_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m101_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m101_144 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="224-226"];
m101_145 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="228-228"];
m101_146 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="230-230"];
m101_147 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m101_166 [file="UnParserExtensions.cs", label=builder, span=""];
m101_167 [file="UnParserExtensions.cs", label=T, span=""];
m101_168 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m101_169 [file="UnParserExtensions.cs", label=settings, span=""];
m101_170 [file="UnParserExtensions.cs", label=sep, span=""];
m101_171 [file="UnParserExtensions.cs", label=doubQt, span=""];
m102_4 [cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="81-81"];
m102_20 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m102_28 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m102_3 [cluster="CommandLine.Parser.Parser()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m102_12 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", span="42-42"];
m102_13 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="44-46"];
m102_14 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption, string)", span="42-42"];
m102_15 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50"];
m102_16 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs", label="var options = new FakeOptionsWithSwitches { InputFile = ''input.bin'', HumanReadable = true, IgnoreWarnings = true }", span="52-52"];
m102_17 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options, config => config.GroupSwitches = true)\r\n                .ShouldBeEquivalentTo(''-hi --input input.bin'')", span="53-55"];
m102_18 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50"];
m102_9 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", span="33-33"];
m102_10 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="35-37"];
m102_11 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.FakeImmutableOptions, string)", span="33-33"];
m102_29 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="63-63"];
m102_21 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Entry lambda expression", span="54-54"];
m102_22 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="config.GroupSwitches = true", span="54-54"];
m102_23 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="54-54"];
m102_30 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="config.UseEqualToken = true", span="63-63"];
m102_31 [cluster="lambda expression", file="UnParserExtensionsTests.cs", label="Exit lambda expression", span="63-63"];
m102_19 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSwitches.FakeOptionsWithSwitches()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSwitches.FakeOptionsWithSwitches()", span="4-4"];
m102_6 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="24-24"];
m102_7 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="26-28"];
m102_8 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="24-24"];
m102_24 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59"];
m102_25 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="var options = new FakeOptions { BoolValue = true, IntSequence = new[] { 1, 2, 3 }, StringValue = ''nospaces'', LongValue = 123456789 }", span="61-61"];
m102_26 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options, config => config.UseEqualToken = true)\r\n                .ShouldBeEquivalentTo(''-i 1 2 3 --stringvalue=nospaces -x 123456789'')", span="62-64"];
m102_27 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59"];
m102_0 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="15-15"];
m102_1 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", color=green, community=0, file="UnParserExtensionsTests.cs", label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", prediction=7, span="17-19"];
m102_2 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="15-15"];
m102_5 [cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m104_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="18-18"];
m104_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.index = index", span="20-20"];
m104_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.metaName = string.Empty", span="21-21"];
m104_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="18-18"];
m104_4 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m105_62 [cluster="Unk.Just", file="ValueMapper.cs", label="Entry Unk.Just", span=""];
m105_38 [cluster="Unk.Empty", file="ValueMapper.cs", label="Entry Unk.Empty", span=""];
m105_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m105_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15"];
m105_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="20-20"];
m105_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="return Result.Succeed(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="22-26"];
m105_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15"];
m105_50 [cluster="Unk.converter", file="ValueMapper.cs", label="Entry Unk.converter", span=""];
m105_6 [cluster="Unk.>", file="ValueMapper.cs", label="Entry Unk.>", span=""];
m105_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29"];
m105_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="specProps.Empty()", span="34-34"];
m105_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="36-36"];
m105_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="42-43"];
m105_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="44-44"];
m105_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="52-54"];
m105_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="55-55"];
m105_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="58-63"];
m105_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="yield return value;", span="67-67"];
m105_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var pt = specProps.First()", span="38-38"];
m105_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="39-39"];
m105_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="47-47"];
m105_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="48-50"];
m105_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="65-65"];
m105_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="taken.Empty()", span="40-40"];
m105_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29"];
m105_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="71-71"];
m105_58 [cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m105_45 [cluster="Unk.IsNothing", file="ValueMapper.cs", label="Entry Unk.IsNothing", span=""];
m105_37 [cluster="Unk.Take", file="ValueMapper.cs", label="Entry Unk.Take", span=""];
m105_43 [cluster="Unk.ToMaybe", file="ValueMapper.cs", label="Entry Unk.ToMaybe", span=""];
m105_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m105_40 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m105_48 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m105_59 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="61-61"];
m105_8 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="23-23"];
m105_11 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="24-24"];
m105_14 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="25-25"];
m105_9 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item1", span="23-23"];
m105_10 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="23-23"];
m105_12 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item2", span="24-24"];
m105_13 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="24-24"];
m105_15 [cluster="lambda expression", file="ValueMapper.cs", label="e.Value", span="25-25"];
m105_16 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="25-25"];
m105_60 [cluster="lambda expression", file="ValueMapper.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="61-61"];
m105_52 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="39-39"];
m105_55 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="47-47"];
m105_53 [cluster="lambda expression", file="ValueMapper.cs", label=n, span="39-39"];
m105_54 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="39-39"];
m105_56 [cluster="lambda expression", file="ValueMapper.cs", label="s.Specification.IsValue()", span="47-47"];
m105_57 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="47-47"];
m105_61 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="61-61"];
m105_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m105_49 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m105_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m105_75 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87"];
m105_76 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="89-91"];
m105_77 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87"];
m105_5 [cluster="Unk.Select", file="ValueMapper.cs", label="Entry Unk.Select", span=""];
m105_51 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m105_39 [cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="87-87"];
m105_36 [cluster="Unk.Return", file="ValueMapper.cs", label="Entry Unk.Return", span=""];
m105_74 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m105_64 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m105_63 [cluster="Unk.WithValue", file="ValueMapper.cs", label="Entry Unk.WithValue", span=""];
m105_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m105_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m105_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.TargetType", span="73-73"];
m105_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.Max.IsJust()", span="78-78"];
m105_71 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(specification.Max.FromJust());", span="80-80"];
m105_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Scalar", span="75-75"];
m105_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Sequence", span="77-77"];
m105_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(1);", span="76-76"];
m105_72 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Nothing<int>();", span="84-84"];
m105_73 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m105_42 [cluster="Unk.FirstOrDefault", file="ValueMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m105_44 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ValueMapper.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m105_46 [cluster="Unk.Count", file="ValueMapper.cs", label="Entry Unk.Count", span=""];
m105_7 [cluster="Unk.Succeed", file="ValueMapper.cs", label="Entry Unk.Succeed", span=""];
m105_78 [file="ValueMapper.cs", label=pt, span=""];
m106_10 [cluster="System.Type.ToTargetType()", file="ValueSpecification.cs", label="Entry System.Type.ToTargetType()", span="71-71"];
m106_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="13-13"];
m106_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs", label="this.index = index", span="18-18"];
m106_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs", label="this.metaName = metaName", span="19-19"];
m106_3 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, string, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="13-13"];
m106_9 [cluster="T.ToMaybe<T>()", file="ValueSpecification.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m106_8 [cluster="CSharpx.Maybe.Just<T>(T)", file="ValueSpecification.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m106_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m106_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs", label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.MetaName,\r\n                attribute.Required,\r\n                attribute.Min == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Min),\r\n                attribute.Max == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Max),\r\n                attribute.Default.ToMaybe(),\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues,\r\n                conversionType,\r\n                conversionType.ToTargetType());", span="24-35"];
m106_6 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m106_7 [cluster="CSharpx.Maybe.Nothing<T>()", file="ValueSpecification.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m106_11 [file="ValueSpecification.cs", label="CommandLine.Core.ValueSpecification", span=""];
m107_17 [cluster="Unk.Create", file="Verb.cs", label="Entry Unk.Create", span=""];
m107_0 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m107_1 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="name == null", span="15-15"];
m107_3 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="helpText == null", span="16-16"];
m107_5 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="this.name = name", span="18-18"];
m107_6 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="this.helpText = helpText", span="19-19"];
m107_2 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="throw new ArgumentNullException(''name'');", span="15-15"];
m107_4 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="throw new ArgumentNullException(''helpText'');", span="16-16"];
m107_7 [cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs", label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13"];
m107_16 [cluster="Unk.Single", file="Verb.cs", label="Entry Unk.Single", span=""];
m107_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Verb.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m107_12 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m107_13 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47"];
m107_14 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs", label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m107_9 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m107_10 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37"];
m107_11 [cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs", label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32"];
m107_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Verb.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m107_18 [file="Verb.cs", label="CommandLine.Core.Verb", span=""];
m108_6 [cluster="System.ArgumentException.ArgumentException(string)", file="VerbAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m108_5 [cluster="string.IsNullOrWhiteSpace(string)", file="VerbAttribute.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m108_0 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m108_1 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="string.IsNullOrWhiteSpace(name)", span="22-22"];
m108_3 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="this.name = name", span="24-24"];
m108_2 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="throw new ArgumentException(''name'');", span="22-22"];
m108_4 [cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs", label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20"];
m108_7 [file="VerbAttribute.cs", label="CommandLine.VerbAttribute", span=""];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_1 -> m1_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_14 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_15 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", style=dashed];
m6_34 -> m6_37  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_34 -> m6_40  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_34 -> m6_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_34 -> m6_43  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_34 -> m6_44  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m6_38 -> m6_41  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m6_38 -> m6_44  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m6_38 -> m6_46  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m6_39 -> m6_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_39 -> m6_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_39 -> m6_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_42 -> m6_44  [color=darkseagreen4, key=1, label=next, style=dashed];
m6_45 -> m6_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_4 -> m6_7  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m6_49 -> m6_27  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m6_49 -> m6_28  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m6_49 -> m6_29  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label="System.Func<TSource, bool>", style=dashed];
m7_1 -> m7_3  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=item, style=dashed];
m7_3 -> m7_3  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_8 -> m7_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m7_9 -> m7_11  [color=darkseagreen4, key=1, label=array, style=dashed];
m8_3 -> m8_7  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_9 -> m8_17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_53 -> m8_59  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
m8_32 -> m8_39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
m8_26 -> m8_30  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_27 -> m8_29  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_47 -> m8_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_48 -> m8_50  [color=darkseagreen4, key=1, label=other, style=dashed];
m8_90 -> m8_6  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_90 -> m8_7  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_90 -> m8_12  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_90 -> m8_17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_91 -> m8_29  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
m8_91 -> m8_30  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
m8_91 -> m8_34  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
m8_91 -> m8_39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
m8_92 -> m8_50  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
m8_92 -> m8_51  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
m8_92 -> m8_55  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
m8_92 -> m8_59  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
m9_4 -> m9_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.OptionsBase", style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_24 -> m10_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m10_18 -> m10_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_19 -> m10_21  [color=darkseagreen4, key=1, label=other, style=dashed];
m10_41 -> m10_21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m10_41 -> m10_22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m10_41 -> m10_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m10_41 -> m10_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m41_12 -> m41_14  [color=darkseagreen4, key=1, label=expected, style=dashed];
m41_25 -> m41_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests", style=dashed];
m41_25 -> m41_7  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests", style=dashed];
m42_27 -> m42_30  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m42_27 -> m42_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m42_42 -> m42_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m42_42 -> m42_32  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m42_42 -> m42_37  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m42_42 -> m42_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m44_94 -> m44_112  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_94 -> m44_114  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_94 -> m44_115  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_94 -> m44_118  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_94 -> m44_119  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_116 -> m44_119  [color=darkseagreen4, key=1, label=errors, style=dashed];
m44_57 -> m44_168  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_421 -> m44_428  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m44_424 -> m44_431  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_424 -> m44_442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_425 -> m44_430  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m44_425 -> m44_440  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m44_426 -> m44_435  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m44_426 -> m44_440  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m44_431 -> m44_431  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_431 -> m44_433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_434 -> m44_442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_439 -> m44_442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_433 -> m44_433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m44_320 -> m44_320  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m44_265 -> m44_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_122 -> m44_198  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_198 -> m44_201  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m44_201 -> m44_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_335 -> m44_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_383  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_345  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_347  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m44_335 -> m44_350  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m44_335 -> m44_357  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_360  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_363  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_364  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_368  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_335 -> m44_369  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_344 -> m44_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_344 -> m44_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_349 -> m44_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_349 -> m44_352  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m44_349 -> m44_370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m44_351 -> m44_370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m44_354 -> m44_356  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_354 -> m44_357  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_354 -> m44_358  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_354 -> m44_360  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_354 -> m44_363  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_354 -> m44_364  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_367 -> m44_369  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m44_367 -> m44_370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m44_353 -> m44_357  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_353 -> m44_363  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_359 -> m44_362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_355 -> m44_357  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_355 -> m44_358  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_355 -> m44_360  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_355 -> m44_363  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_355 -> m44_364  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_355 -> m44_366  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_366 -> m44_366  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_362 -> m44_362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_417 -> m44_419  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_314 -> m44_316  [color=darkseagreen4, key=1, label=attr, style=dashed];
m44_381 -> m44_394  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m44_381 -> m44_400  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m44_390 -> m44_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_390 -> m44_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_68 -> m44_75  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_68 -> m44_92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_68 -> m44_78  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_68 -> m44_105  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_71 -> m44_74  [color=darkseagreen4, key=1, label=errors, style=dashed];
m44_75 -> m44_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_75 -> m44_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_78 -> m44_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_78 -> m44_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_78 -> m44_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_78 -> m44_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_72 -> m44_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_74 -> m44_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_76 -> m44_78  [color=darkseagreen4, key=1, label=err, style=dashed];
m44_77 -> m44_99  [color=darkseagreen4, key=1, label=pr, style=dashed];
m44_160 -> m44_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_56 -> m44_174  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m44_56 -> m44_176  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m44_308 -> m44_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_220 -> m44_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_25 -> m44_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_25 -> m44_38  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_25 -> m44_40  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_25 -> m44_41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_26 -> m44_32  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_59  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_33  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_41  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_26 -> m44_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_29 -> m44_38  [color=darkseagreen4, key=1, label=errors, style=dashed];
m44_31 -> m44_59  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_33  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_41  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_31 -> m44_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_34 -> m44_37  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
m44_38 -> m44_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_27 -> m44_38  [color=darkseagreen4, key=1, label=errors, style=dashed];
m44_32 -> m44_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_33 -> m44_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_171 -> m44_328  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m44_171 -> m44_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_325 -> m44_328  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m44_325 -> m44_333  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m44_327 -> m44_333  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m44_328 -> m44_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_296 -> m44_298  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m44_297 -> m44_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_270 -> m44_276  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_270 -> m44_277  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m44_270 -> m44_279  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_270 -> m44_280  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m44_270 -> m44_282  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_270 -> m44_283  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m44_270 -> m44_287  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m44_270 -> m44_288  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_270 -> m44_289  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m44_273 -> m44_275  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_273 -> m44_276  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_273 -> m44_277  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_273 -> m44_279  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_273 -> m44_282  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_273 -> m44_283  [color=darkseagreen4, key=1, label=words, style=dashed];
m44_286 -> m44_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_286 -> m44_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_272 -> m44_276  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_272 -> m44_282  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_278 -> m44_281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_274 -> m44_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_277  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_279  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_274 -> m44_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_285 -> m44_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_281 -> m44_281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m44_10 -> m44_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_10 -> m44_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_385 -> m44_405  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m44_385 -> m44_409  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m44_402 -> m44_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_402 -> m44_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_135 -> m44_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_414 -> m44_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_180 -> m44_183  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_422 -> m44_447  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m44_445 -> m44_449  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m44_185 -> m44_188  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m44_185 -> m44_190  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_143 -> m44_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_151 -> m44_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_234 -> m44_236  [color=darkseagreen4, key=1, label=examples, style=dashed];
m44_242 -> m44_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_456 -> m44_128  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_132  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_135  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_147  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_156  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_161  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_183  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_190  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_258  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_320  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_328  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_329  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_336  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_338  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_340  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_343  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_379  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_383  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_345  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_347  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_358  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_361  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_364  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_368  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_370  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_371  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_390  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_394  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_400  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_411  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_412  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_432  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_456 -> m44_437  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m44_457 -> m44_59  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_457 -> m44_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m44_458 -> m44_92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_458 -> m44_105  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m44_459 -> m44_99  [color=darkseagreen4, key=1, label=pr, style=dashed];
m44_461 -> m44_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_462 -> m44_333  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m44_463 -> m44_333  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m44_464 -> m44_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_464 -> m44_383  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_465 -> m44_379  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m44_465 -> m44_383  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m44_467 -> m44_394  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m44_467 -> m44_400  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m44_468 -> m44_405  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m44_468 -> m44_409  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m45_52 -> m45_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_52 -> m45_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_52 -> m45_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_52 -> m45_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_52 -> m45_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_24 -> m45_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_67 -> m45_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m45_70 -> m45_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_70 -> m45_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_70 -> m45_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_70 -> m45_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_79 -> m45_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m45_82 -> m45_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_82 -> m45_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_82 -> m45_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_82 -> m45_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_82 -> m45_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_152 -> m45_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_194 -> m45_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_41 -> m45_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_91 -> m45_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m45_94 -> m45_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_94 -> m45_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_94 -> m45_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_94 -> m45_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_94 -> m45_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_181 -> m45_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_208 -> m45_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_127 -> m45_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_127 -> m45_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_127 -> m45_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_127 -> m45_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_127 -> m45_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_127 -> m45_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_222 -> m45_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_222 -> m45_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_8 -> m45_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_8 -> m45_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_8 -> m45_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_8 -> m45_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_8 -> m45_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_104 -> m45_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_104 -> m45_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m45_107 -> m45_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_107 -> m45_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_107 -> m45_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_107 -> m45_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_107 -> m45_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_107 -> m45_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_169 -> m45_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_169 -> m45_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_169 -> m45_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_169 -> m45_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m45_169 -> m45_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m47_3 -> m47_93  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m47_3 -> m47_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m47_3 -> m47_101  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_3 -> m47_105  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m47_3 -> m47_109  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m47_3 -> m47_112  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_19 -> m47_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_19 -> m47_36  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m47_23 -> m47_27  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m47_25 -> m47_27  [color=darkseagreen4, key=1, label=preprocessorErrors, style=dashed];
m47_28 -> m47_43  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m47_30 -> m47_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_31 -> m47_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_31 -> m47_43  [color=darkseagreen4, key=1, label=optionSpecPropsResult, style=dashed];
m47_32 -> m47_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_32 -> m47_43  [color=darkseagreen4, key=1, label=valueSpecPropsResult, style=dashed];
m47_33 -> m47_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_33 -> m47_112  [color=darkseagreen4, key=1, label=token, style=dashed];
m47_33 -> m47_43  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m47_37 -> m47_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_20 -> m47_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_20 -> m47_93  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m47_22 -> m47_101  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m47_38 -> m47_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_38 -> m47_43  [color=darkseagreen4, key=1, label=instance, style=dashed];
m47_40 -> m47_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_40 -> m47_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_41 -> m47_43  [color=darkseagreen4, key=1, label=instance, style=dashed];
m47_5 -> m47_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_6 -> m47_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_4 -> m47_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m47_4 -> m47_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m47_93 -> m47_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_93 -> m47_93  [color=darkseagreen4, key=1, label=p, style=dashed];
m47_0 -> m47_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_0 -> m47_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_1 -> m47_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_149 -> m47_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_149 -> m47_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_150 -> m47_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m47_150 -> m47_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m47_151 -> m47_93  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m47_152 -> m47_93  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m47_153 -> m47_101  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_153 -> m47_112  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m47_154 -> m47_101  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m47_155 -> m47_105  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m47_155 -> m47_109  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m47_156 -> m47_112  [color=darkseagreen4, key=1, label=token, style=dashed];
m48_39 -> m48_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m48_40 -> m48_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_149 -> m48_151  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m48_150 -> m48_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_256 -> m48_258  [color=darkseagreen4, key=1, label=string, style=dashed];
m48_257 -> m48_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_296 -> m48_298  [color=darkseagreen4, key=1, label="long?", style=dashed];
m48_297 -> m48_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_165 -> m48_168  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_167 -> m48_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_167 -> m48_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_249 -> m48_251  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_250 -> m48_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_383 -> m48_385  [color=darkseagreen4, key=1, label=string, style=dashed];
m48_384 -> m48_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_73 -> m48_75  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_74 -> m48_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_91 -> m48_93  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_92 -> m48_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_303 -> m48_306  [color=darkseagreen4, key=1, label=string, style=dashed];
m48_303 -> m48_307  [color=darkseagreen4, key=1, label=bool, style=dashed];
m48_304 -> m48_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_304 -> m48_306  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_304 -> m48_307  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_428 -> m48_431  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_428 -> m48_439  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_429 -> m48_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_431 -> m48_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_241 -> m48_243  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_242 -> m48_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_108 -> m48_110  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_109 -> m48_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_412 -> m48_414  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m48_413 -> m48_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_141 -> m48_143  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m48_142 -> m48_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_54 -> m48_56  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m48_55 -> m48_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_357 -> m48_359  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m48_357 -> m48_360  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_357 -> m48_371  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_357 -> m48_361  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m48_358 -> m48_366  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_358 -> m48_360  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_358 -> m48_362  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_360 -> m48_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_31 -> m48_33  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m48_32 -> m48_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_174 -> m48_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m48_174 -> m48_183  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m48_175 -> m48_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_179 -> m48_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_329 -> m48_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_340 -> m48_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_351 -> m48_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_373 -> m48_375  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_373 -> m48_381  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_374 -> m48_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_375 -> m48_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_391 -> m48_393  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m48_391 -> m48_394  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_391 -> m48_403  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_391 -> m48_395  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m48_392 -> m48_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_392 -> m48_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_392 -> m48_396  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_394 -> m48_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_46 -> m48_48  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m48_47 -> m48_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_117 -> m48_119  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_118 -> m48_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_23 -> m48_25  [color=darkseagreen4, key=1, label=double, style=dashed];
m48_24 -> m48_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_264 -> m48_266  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_265 -> m48_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_224 -> m48_226  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_225 -> m48_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_1 -> m48_14  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m48_2 -> m48_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_3 -> m48_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_215 -> m48_217  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_216 -> m48_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_206 -> m48_208  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_207 -> m48_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_125 -> m48_127  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_126 -> m48_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_405 -> m48_407  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m48_406 -> m48_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_83 -> m48_85  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_84 -> m48_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_63 -> m48_65  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_64 -> m48_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_133 -> m48_135  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_134 -> m48_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_16 -> m48_18  [color=darkseagreen4, key=1, label=long, style=dashed];
m48_17 -> m48_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_314 -> m48_317  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_314 -> m48_318  [color=darkseagreen4, key=1, label=bool, style=dashed];
m48_315 -> m48_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_315 -> m48_317  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_315 -> m48_318  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_421 -> m48_423  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_422 -> m48_425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_157 -> m48_159  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m48_158 -> m48_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_288 -> m48_290  [color=darkseagreen4, key=1, label="int?", style=dashed];
m48_289 -> m48_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_232 -> m48_234  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_233 -> m48_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_197 -> m48_199  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_198 -> m48_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_280 -> m48_282  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_281 -> m48_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_99 -> m48_101  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m48_100 -> m48_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_101 -> m48_101  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m48_441 -> m48_443  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeImmutableOptions", style=dashed];
m48_272 -> m48_274  [color=darkseagreen4, key=1, label=string, style=dashed];
m48_273 -> m48_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_447 -> m48_449  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_448 -> m48_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_187 -> m48_189  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m48_188 -> m48_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_457 -> m48_14  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m48_458 -> m48_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m48_458 -> m48_183  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m48_459 -> m48_371  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_460 -> m48_381  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_461 -> m48_403  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_462 -> m48_439  [color=darkseagreen4, key=1, label=int, style=dashed];
m49_36 -> m49_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_36 -> m49_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m49_36 -> m49_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_42 -> m49_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_42 -> m49_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_42 -> m49_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_5 -> m49_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_6 -> m49_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_4 -> m49_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_4 -> m49_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_54 -> m49_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_34 -> m49_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_64 -> m49_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_64 -> m49_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_0 -> m49_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_0 -> m49_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_1 -> m49_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_3 -> m49_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m49_3 -> m49_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_3 -> m49_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m49_21 -> m49_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m49_22 -> m49_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_22 -> m49_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m49_81 -> m49_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_81 -> m49_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_82 -> m49_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_82 -> m49_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m49_83 -> m49_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_84 -> m49_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m49_85 -> m49_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_85 -> m49_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_85 -> m49_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m49_86 -> m49_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_86 -> m49_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_86 -> m49_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m49_87 -> m49_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m49_88 -> m49_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m49_89 -> m49_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m50_40 -> m50_43  [color=darkseagreen4, key=1, label=expected, style=dashed];
m50_41 -> m50_43  [color=darkseagreen4, key=1, label=result, style=dashed];
m50_15 -> m50_17  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m50_25 -> m50_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m50_26 -> m50_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m50_1 -> m50_3  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m50_9 -> m50_11  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m50_20 -> m50_22  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m50_47 -> m50_50  [color=darkseagreen4, key=1, label=expected, style=dashed];
m50_48 -> m50_50  [color=darkseagreen4, key=1, label=result, style=dashed];
m50_33 -> m50_36  [color=darkseagreen4, key=1, label=expected, style=dashed];
m50_34 -> m50_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m51_21 -> m51_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_21 -> m51_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_21 -> m51_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_21 -> m51_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_20 -> m51_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m51_20 -> m51_33  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m51_1 -> m51_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_9 -> m51_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_15 -> m51_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m51_16 -> m51_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_16 -> m51_16  [color=darkseagreen4, key=1, label=t, style=dashed];
m51_46 -> m51_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m51_47 -> m51_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m51_47 -> m51_33  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m52_1 -> m52_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m52_17 -> m52_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m52_8 -> m52_10  [color=darkseagreen4, key=1, label=expected, style=dashed];
m52_22 -> m52_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m52_22 -> m52_24  [color=darkseagreen4, key=1, label=value, style=dashed];
m53_39 -> m53_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_8 -> m53_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m53_8 -> m53_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m53_8 -> m53_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m53_8 -> m53_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m53_26 -> m53_28  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m53_26 -> m53_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m53_28 -> m53_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_47 -> m53_36  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m53_48 -> m53_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m54_8 -> m54_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m55_0 -> m55_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m55_15 -> m55_23  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m55_9 -> m55_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m55_10 -> m55_12  [color=darkseagreen4, key=1, label=other, style=dashed];
m55_26 -> m55_12  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m55_26 -> m55_13  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m55_26 -> m55_18  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m55_26 -> m55_23  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m56_0 -> m56_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_1 -> m56_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_8 -> m56_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_9 -> m56_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_9 -> m56_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_22 -> m56_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_23 -> m56_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m56_24 -> m56_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_25 -> m56_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m57_1 -> m57_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m59_0 -> m59_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_8 -> m60_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_8 -> m60_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_16 -> m60_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m60_20 -> m60_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_7 -> m60_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m60_7 -> m60_20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m60_7 -> m60_27  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m60_0 -> m60_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m60_0 -> m60_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m60_0 -> m60_20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m60_1 -> m60_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_2 -> m60_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_2 -> m60_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_2 -> m60_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_40 -> m60_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m60_41 -> m60_8  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m60_41 -> m60_20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m60_42 -> m60_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m60_42 -> m60_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m60_43 -> m60_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m60_43 -> m60_20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m60_43 -> m60_27  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m61_2 -> m61_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_3 -> m61_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_3 -> m61_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_4 -> m61_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_8 -> m63_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m63_58 -> m63_61  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m63_58 -> m63_63  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m63_58 -> m63_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_58 -> m63_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_65 -> m63_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_42 -> m63_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_42 -> m63_49  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m63_42 -> m63_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m63_49 -> m63_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_105 -> m63_117  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m63_105 -> m63_118  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m63_105 -> m63_125  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m63_105 -> m63_119  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m63_118 -> m63_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_35 -> m63_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_53 -> m63_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_69 -> m63_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_88 -> m63_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_110 -> m63_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_106 -> m63_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_24 -> m63_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_24 -> m63_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_28 -> m63_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_27 -> m63_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m63_41 -> m63_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_41 -> m63_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_41 -> m63_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_41 -> m63_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_80 -> m63_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_80 -> m63_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_81 -> m63_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m63_23 -> m63_131  [color=darkseagreen4, key=1, label=bool, style=dashed];
m63_137 -> m63_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_28  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_39  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_49  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_56  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_69  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_73  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_76  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_77  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_129  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_132  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_137 -> m63_133  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m63_138 -> m63_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_139 -> m63_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m63_140 -> m63_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m63_141 -> m63_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_142 -> m63_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m63_143 -> m63_69  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m63_144 -> m63_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_144 -> m63_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_144 -> m63_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_144 -> m63_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m63_145 -> m63_88  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m63_145 -> m63_91  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m63_145 -> m63_95  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m63_145 -> m63_98  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m63_146 -> m63_125  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m64_42 -> m64_45  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_52 -> m64_55  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_0 -> m64_3  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_22 -> m64_25  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_32 -> m64_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_57 -> m64_60  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_37 -> m64_40  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_47 -> m64_50  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_17 -> m64_20  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_12 -> m64_15  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_67 -> m64_70  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_7 -> m64_10  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_62 -> m64_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_72 -> m64_75  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m64_27 -> m64_30  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m65_55 -> m65_58  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>", style=dashed];
m65_55 -> m65_59  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m65_56 -> m65_58  [color=darkseagreen4, key=1, label=notParsed, style=dashed];
m65_20 -> m65_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m65_21 -> m65_23  [color=darkseagreen4, key=1, label=other, style=dashed];
m65_46 -> m65_52  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m65_26 -> m65_34  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m65_40 -> m65_44  [color=darkseagreen4, key=1, label=object, style=dashed];
m65_41 -> m65_43  [color=darkseagreen4, key=1, label=other, style=dashed];
m65_64 -> m65_23  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m65_64 -> m65_24  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m65_64 -> m65_29  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m65_64 -> m65_34  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m65_65 -> m65_43  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m65_65 -> m65_44  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m65_65 -> m65_48  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m65_65 -> m65_52  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m66_288 -> m66_292  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_288 -> m66_294  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_288 -> m66_296  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_288 -> m66_298  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_288 -> m66_300  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_288 -> m66_302  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_288 -> m66_304  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_288 -> m66_306  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_288 -> m66_308  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_288 -> m66_310  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_288 -> m66_312  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_288 -> m66_314  [color=darkseagreen4, key=1, label="System.Func<T12, TResult>", style=dashed];
m66_288 -> m66_316  [color=darkseagreen4, key=1, label="System.Func<T13, TResult>", style=dashed];
m66_288 -> m66_318  [color=darkseagreen4, key=1, label="System.Func<T14, TResult>", style=dashed];
m66_288 -> m66_320  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_289 -> m66_291  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_292  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_293  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_294  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_295  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_296  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_297  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_298  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_299  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_300  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_301  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_302  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_303  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_304  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_305  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_306  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_307  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_308  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_309  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_310  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_311  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_312  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_313  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_314  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_315  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_316  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_317  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_289 -> m66_318  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_256 -> m66_260  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_256 -> m66_262  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_256 -> m66_264  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_256 -> m66_266  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_256 -> m66_268  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_256 -> m66_270  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_256 -> m66_272  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_256 -> m66_274  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_256 -> m66_276  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_256 -> m66_278  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_256 -> m66_280  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_256 -> m66_282  [color=darkseagreen4, key=1, label="System.Func<T12, TResult>", style=dashed];
m66_256 -> m66_284  [color=darkseagreen4, key=1, label="System.Func<T13, TResult>", style=dashed];
m66_256 -> m66_286  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_257 -> m66_259  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_260  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_261  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_262  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_263  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_264  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_265  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_266  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_267  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_268  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_269  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_270  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_271  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_272  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_273  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_274  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_275  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_276  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_277  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_278  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_279  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_280  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_281  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_282  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_283  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_257 -> m66_284  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_172 -> m66_176  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_172 -> m66_178  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_172 -> m66_180  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_172 -> m66_182  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_172 -> m66_184  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_172 -> m66_186  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_172 -> m66_188  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_172 -> m66_190  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_172 -> m66_192  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_172 -> m66_194  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_172 -> m66_196  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_173 -> m66_175  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_176  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_177  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_178  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_179  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_180  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_181  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_182  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_183  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_184  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_185  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_186  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_187  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_188  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_189  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_190  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_191  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_192  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_193  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_173 -> m66_194  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_198 -> m66_202  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_198 -> m66_204  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_198 -> m66_206  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_198 -> m66_208  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_198 -> m66_210  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_198 -> m66_212  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_198 -> m66_214  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_198 -> m66_216  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_198 -> m66_218  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_198 -> m66_220  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_198 -> m66_222  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_198 -> m66_224  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_199 -> m66_201  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_202  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_203  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_204  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_205  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_206  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_207  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_208  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_209  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_210  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_211  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_212  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_213  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_214  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_215  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_216  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_217  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_218  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_219  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_220  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_221  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_199 -> m66_222  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_358 -> m66_362  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_358 -> m66_364  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_358 -> m66_366  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_358 -> m66_368  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_358 -> m66_370  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_358 -> m66_372  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_358 -> m66_374  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_358 -> m66_376  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_358 -> m66_378  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_358 -> m66_380  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_358 -> m66_382  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_358 -> m66_384  [color=darkseagreen4, key=1, label="System.Func<T12, TResult>", style=dashed];
m66_358 -> m66_386  [color=darkseagreen4, key=1, label="System.Func<T13, TResult>", style=dashed];
m66_358 -> m66_388  [color=darkseagreen4, key=1, label="System.Func<T14, TResult>", style=dashed];
m66_358 -> m66_390  [color=darkseagreen4, key=1, label="System.Func<T15, TResult>", style=dashed];
m66_358 -> m66_392  [color=darkseagreen4, key=1, label="System.Func<T16, TResult>", style=dashed];
m66_358 -> m66_394  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_359 -> m66_361  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_362  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_363  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_364  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_365  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_366  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_367  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_368  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_369  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_370  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_371  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_372  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_373  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_374  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_375  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_376  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_377  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_378  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_379  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_380  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_381  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_382  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_383  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_384  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_385  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_386  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_387  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_388  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_389  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_390  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_391  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_359 -> m66_392  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_46 -> m66_50  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_46 -> m66_52  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_46 -> m66_54  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_46 -> m66_56  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_47 -> m66_49  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_47 -> m66_50  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_47 -> m66_51  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_47 -> m66_52  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_47 -> m66_53  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_47 -> m66_54  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_72 -> m66_76  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_72 -> m66_78  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_72 -> m66_80  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_72 -> m66_82  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_72 -> m66_84  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_72 -> m66_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_73 -> m66_75  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_76  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_77  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_78  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_79  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_80  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_81  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_82  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_83  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_73 -> m66_84  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_322 -> m66_326  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_322 -> m66_328  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_322 -> m66_330  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_322 -> m66_332  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_322 -> m66_334  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_322 -> m66_336  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_322 -> m66_338  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_322 -> m66_340  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_322 -> m66_342  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_322 -> m66_344  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_322 -> m66_346  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_322 -> m66_348  [color=darkseagreen4, key=1, label="System.Func<T12, TResult>", style=dashed];
m66_322 -> m66_350  [color=darkseagreen4, key=1, label="System.Func<T13, TResult>", style=dashed];
m66_322 -> m66_352  [color=darkseagreen4, key=1, label="System.Func<T14, TResult>", style=dashed];
m66_322 -> m66_354  [color=darkseagreen4, key=1, label="System.Func<T15, TResult>", style=dashed];
m66_322 -> m66_356  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_323 -> m66_325  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_326  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_327  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_328  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_329  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_330  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_331  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_332  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_333  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_334  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_335  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_336  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_337  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_338  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_339  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_340  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_341  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_342  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_343  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_344  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_345  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_346  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_347  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_348  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_349  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_350  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_351  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_352  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_353  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_323 -> m66_354  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_88 -> m66_92  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_88 -> m66_94  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_88 -> m66_96  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_88 -> m66_98  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_88 -> m66_100  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_88 -> m66_102  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_88 -> m66_104  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_89 -> m66_91  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_92  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_93  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_94  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_95  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_96  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_97  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_98  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_99  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_100  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_101  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_89 -> m66_102  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_7 -> m66_11  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m66_7 -> m66_12  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_8 -> m66_10  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_8 -> m66_11  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_20 -> m66_23  [color=darkseagreen4, key=1, label="System.Func<TSource, TResult>", style=dashed];
m66_20 -> m66_24  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<TSource>", style=dashed];
m66_21 -> m66_23  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_58 -> m66_62  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_58 -> m66_64  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_58 -> m66_66  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_58 -> m66_68  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_58 -> m66_70  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_59 -> m66_61  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_62  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_63  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_64  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_65  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_66  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_67  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_59 -> m66_68  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_0 -> m66_3  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m66_0 -> m66_4  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m66_1 -> m66_3  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_148 -> m66_152  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_148 -> m66_154  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_148 -> m66_156  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_148 -> m66_158  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_148 -> m66_160  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_148 -> m66_162  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_148 -> m66_164  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_148 -> m66_166  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_148 -> m66_168  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_148 -> m66_170  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_149 -> m66_151  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_152  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_153  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_154  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_155  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_156  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_157  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_158  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_159  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_160  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_161  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_162  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_163  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_164  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_165  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_166  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_167  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_149 -> m66_168  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_106 -> m66_110  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_106 -> m66_112  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_106 -> m66_114  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_106 -> m66_116  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_106 -> m66_118  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_106 -> m66_120  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_106 -> m66_122  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_106 -> m66_124  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_107 -> m66_109  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_110  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_111  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_112  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_113  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_114  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_115  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_116  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_117  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_118  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_119  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_120  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_121  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_107 -> m66_122  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_36 -> m66_40  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_36 -> m66_42  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_36 -> m66_44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_37 -> m66_39  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_37 -> m66_40  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_37 -> m66_41  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_37 -> m66_42  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_126 -> m66_130  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_126 -> m66_132  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_126 -> m66_134  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_126 -> m66_136  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_126 -> m66_138  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_126 -> m66_140  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_126 -> m66_142  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_126 -> m66_144  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_126 -> m66_146  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_127 -> m66_129  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_130  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_131  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_132  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_133  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_134  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_135  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_136  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_137  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_138  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_139  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_140  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_141  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_142  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_143  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_127 -> m66_144  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_14 -> m66_17  [color=darkseagreen4, key=1, label="System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>", style=dashed];
m66_14 -> m66_18  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m66_15 -> m66_17  [color=darkseagreen4, key=1, label=notParsed, style=dashed];
m66_27 -> m66_31  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_27 -> m66_33  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_28 -> m66_30  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_28 -> m66_31  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_226 -> m66_230  [color=darkseagreen4, key=1, label="System.Func<T1, TResult>", style=dashed];
m66_226 -> m66_232  [color=darkseagreen4, key=1, label="System.Func<T2, TResult>", style=dashed];
m66_226 -> m66_234  [color=darkseagreen4, key=1, label="System.Func<T3, TResult>", style=dashed];
m66_226 -> m66_236  [color=darkseagreen4, key=1, label="System.Func<T4, TResult>", style=dashed];
m66_226 -> m66_238  [color=darkseagreen4, key=1, label="System.Func<T5, TResult>", style=dashed];
m66_226 -> m66_240  [color=darkseagreen4, key=1, label="System.Func<T6, TResult>", style=dashed];
m66_226 -> m66_242  [color=darkseagreen4, key=1, label="System.Func<T7, TResult>", style=dashed];
m66_226 -> m66_244  [color=darkseagreen4, key=1, label="System.Func<T8, TResult>", style=dashed];
m66_226 -> m66_246  [color=darkseagreen4, key=1, label="System.Func<T9, TResult>", style=dashed];
m66_226 -> m66_248  [color=darkseagreen4, key=1, label="System.Func<T10, TResult>", style=dashed];
m66_226 -> m66_250  [color=darkseagreen4, key=1, label="System.Func<T11, TResult>", style=dashed];
m66_226 -> m66_252  [color=darkseagreen4, key=1, label="System.Func<T12, TResult>", style=dashed];
m66_226 -> m66_254  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<object>", style=dashed];
m66_227 -> m66_229  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_230  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_231  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_232  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_233  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_234  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_235  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_236  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_237  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_238  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_239  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_240  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_241  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_242  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_243  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_244  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_245  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_246  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_247  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_248  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_249  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_250  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_251  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m66_227 -> m66_252  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m67_13 -> m67_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_13 -> m67_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_13 -> m67_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_67 -> m67_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_67 -> m67_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_105 -> m67_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_105 -> m67_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_56 -> m67_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_56 -> m67_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_30 -> m67_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_149 -> m67_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_149 -> m67_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_132 -> m67_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_132 -> m67_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_132 -> m67_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_132 -> m67_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_77 -> m67_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_77 -> m67_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_115 -> m67_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_115 -> m67_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_115 -> m67_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_115 -> m67_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_39 -> m67_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_39 -> m67_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_39 -> m67_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_39 -> m67_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_160 -> m67_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_2 -> m67_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_88 -> m67_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_88 -> m67_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_88 -> m67_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_88 -> m67_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_7 -> m68_15  [color=darkseagreen4, key=1, label=bool, style=dashed];
m68_22 -> m68_5  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m68_22 -> m68_9  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m68_22 -> m68_10  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m68_22 -> m68_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m68_22 -> m68_16  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m68_22 -> m68_17  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m69_103 -> m69_107  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m69_103 -> m69_116  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m69_107 -> m69_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_105 -> m69_107  [color=darkseagreen4, key=1, label=result, style=dashed];
m69_106 -> m69_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_169 -> m69_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_169 -> m69_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_253  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_254  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_255  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_256  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_257  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_258  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_259  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_260  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_261  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_262  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_263  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_264  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_265  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_251 -> m69_266  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_49 -> m69_52  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_86 -> m69_90  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_90 -> m69_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_88 -> m69_90  [color=darkseagreen4, key=1, label=result, style=dashed];
m69_59 -> m69_63  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_63 -> m69_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_61 -> m69_63  [color=darkseagreen4, key=1, label=result, style=dashed];
m69_131 -> m69_135  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m69_131 -> m69_142  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m69_135 -> m69_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_133 -> m69_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m69_134 -> m69_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_188 -> m69_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_188 -> m69_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_188 -> m69_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_188 -> m69_193  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_188 -> m69_194  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_188 -> m69_195  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_223  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_221 -> m69_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_40 -> m69_43  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_150 -> m69_152  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_151 -> m69_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_96 -> m69_99  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_75 -> m69_79  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m69_79 -> m69_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_77 -> m69_79  [color=darkseagreen4, key=1, label=result, style=dashed];
m69_200 -> m69_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_206 -> m69_208  [color=darkseagreen4, key=1, label=lines, style=dashed];
m69_207 -> m69_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m69_274 -> m69_116  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m69_276 -> m69_142  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m71_5 -> m71_18  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m71_15 -> m71_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m71_4 -> m71_9  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m71_6 -> m71_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m71_21 -> m71_9  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m71_22 -> m71_18  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m72_91 -> m72_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_59 -> m72_61  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m72_59 -> m72_70  [color=darkseagreen4, key=1, label=T, style=dashed];
m72_60 -> m72_75  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m72_60 -> m72_63  [color=darkseagreen4, key=1, label=fail, style=dashed];
m72_60 -> m72_65  [color=darkseagreen4, key=1, label=fail, style=dashed];
m72_60 -> m72_67  [color=darkseagreen4, key=1, label=fail, style=dashed];
m72_60 -> m72_69  [color=darkseagreen4, key=1, label=fail, style=dashed];
m72_15 -> m72_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_96 -> m72_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_96 -> m72_98  [color=darkseagreen4, key=1, label=props, style=dashed];
m72_106 -> m72_109  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_106 -> m72_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_106 -> m72_111  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_24 -> m72_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_1 -> m72_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_117 -> m72_119  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_117 -> m72_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_120 -> m72_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_49 -> m72_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m72_49 -> m72_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m72_50 -> m72_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_30 -> m72_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_30 -> m72_36  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m72_150 -> m72_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m72_151 -> m72_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m73_36 -> m73_38  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m73_26 -> m73_28  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m75_5 -> m75_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m75_4 -> m75_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m75_0 -> m75_5  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m75_1 -> m75_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m75_1 -> m75_1  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m75_14 -> m75_5  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m75_15 -> m75_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m75_16 -> m75_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m76_15 -> m76_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m76_16 -> m76_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m76_1 -> m76_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m76_2 -> m76_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m77_19 -> m77_22  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m77_19 -> m77_24  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m77_19 -> m77_26  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m77_19 -> m77_37  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m77_47 -> m77_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m77_55 -> m77_58  [color=darkseagreen4, key=1, label=names, style=dashed];
m77_56 -> m77_58  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m78_0 -> m78_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_0 -> m78_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_1 -> m78_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_1 -> m78_1  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m78_5 -> m78_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_4 -> m78_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m78_30 -> m78_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_30 -> m78_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_16 -> m78_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m78_16 -> m78_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_16 -> m78_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_16 -> m78_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_17 -> m78_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_17 -> m78_19  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m78_17 -> m78_30  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m78_17 -> m78_33  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m78_19 -> m78_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_19 -> m78_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_42 -> m78_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_42 -> m78_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_43 -> m78_5  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m78_44 -> m78_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m78_45 -> m78_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m78_46 -> m78_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_46 -> m78_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m78_47 -> m78_30  [color=darkseagreen4, key=1, label="CommandLine.Core.TypeDescriptor", style=dashed];
m78_48 -> m78_30  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m78_48 -> m78_33  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m79_15 -> m79_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m79_16 -> m79_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m79_1 -> m79_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m79_2 -> m79_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m79_34 -> m79_36  [color=darkseagreen4, key=1, label=expected, style=dashed];
m79_35 -> m79_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m79_26 -> m79_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m79_27 -> m79_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_12 -> m81_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m81_12 -> m81_22  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m81_16 -> m81_18  [color=darkseagreen4, key=1, label=spec, style=dashed];
m81_16 -> m81_19  [color=darkseagreen4, key=1, label=spec, style=dashed];
m81_20 -> m81_22  [color=darkseagreen4, key=1, label=va, style=dashed];
m82_13 -> m82_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m82_13 -> m82_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m82_14 -> m82_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m82_14 -> m82_16  [color=darkseagreen4, key=1, label=guard, style=dashed];
m82_15 -> m82_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m82_25 -> m82_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m82_25 -> m82_29  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m82_40 -> m82_42  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m82_40 -> m82_43  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m82_34 -> m82_36  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m82_34 -> m82_37  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m82_46 -> m82_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m83_8 -> m83_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m83_11 -> m83_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_28 -> m83_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_28 -> m83_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_18 -> m83_21  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m83_1 -> m83_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m83_25 -> m83_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m84_5 -> m84_8  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m85_7 -> m85_10  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m85_0 -> m85_3  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m85_12 -> m85_15  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m85_12 -> m85_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m85_23 -> m85_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m85_24 -> m85_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m85_31 -> m85_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m86_11 -> m86_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m86_14 -> m86_14  [color=darkseagreen4, key=1, label=o, style=dashed];
m86_30 -> m86_30  [color=darkseagreen4, key=1, label=sp, style=dashed];
m86_43 -> m86_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_43 -> m86_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_43 -> m86_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_43 -> m86_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m86_45 -> m86_45  [color=darkseagreen4, key=1, label=s, style=dashed];
m86_75 -> m86_77  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m87_1 -> m87_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_1 -> m87_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m87_4 -> m87_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m87_169 -> m87_171  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m87_169 -> m87_176  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m87_51 -> m87_53  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m87_51 -> m87_54  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m87_51 -> m87_55  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m87_62 -> m87_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_62 -> m87_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_62 -> m87_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_62 -> m87_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_62 -> m87_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_36 -> m87_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_87 -> m87_89  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_87 -> m87_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_87 -> m87_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_94 -> m87_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_94 -> m87_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_94 -> m87_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_94 -> m87_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_45 -> m87_47  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m87_49 -> m87_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_49 -> m87_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_49 -> m87_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_49 -> m87_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_72 -> m87_74  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_72 -> m87_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_72 -> m87_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_78 -> m87_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_78 -> m87_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_78 -> m87_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_78 -> m87_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_78 -> m87_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_28 -> m87_31  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m87_28 -> m87_32  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m87_29 -> m87_31  [color=darkseagreen4, key=1, label=value, style=dashed];
m87_29 -> m87_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_29 -> m87_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_29 -> m87_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_105 -> m87_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m87_106 -> m87_109  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_106 -> m87_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_106 -> m87_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m87_114 -> m87_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_114 -> m87_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_114 -> m87_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_114 -> m87_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m87_180 -> m87_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m87_181 -> m87_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m87_181 -> m87_47  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m87_181 -> m87_60  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m88_5 -> m88_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_1 -> m89_1  [color=darkseagreen4, key=1, label=t, style=dashed];
m89_1 -> m89_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m89_1 -> m89_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m89_9 -> m89_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m90_15 -> m90_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m90_16 -> m90_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m90_1 -> m90_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m90_2 -> m90_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_16 -> m91_24  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m91_10 -> m91_14  [color=darkseagreen4, key=1, label=object, style=dashed];
m91_11 -> m91_13  [color=darkseagreen4, key=1, label=other, style=dashed];
m91_34 -> m91_13  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m91_34 -> m91_14  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m91_34 -> m91_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m91_34 -> m91_24  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m92_23 -> m92_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m92_24 -> m92_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_25 -> m92_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_25 -> m92_27  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m92_26 -> m92_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_26 -> m92_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m92_27 -> m92_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_50 -> m92_62  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m92_50 -> m92_55  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>", style=dashed];
m92_52 -> m92_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_52 -> m92_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_52 -> m92_74  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m92_53 -> m92_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_54 -> m92_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_62 -> m92_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_61 -> m92_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m92_74 -> m92_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_74 -> m92_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_73 -> m92_81  [color=darkseagreen4, key=1, label=int, style=dashed];
m92_73 -> m92_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m92_10 -> m92_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m92_118 -> m92_121  [color=darkseagreen4, key=1, label=text, style=dashed];
m92_119 -> m92_123  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m92_126 -> m92_128  [color=darkseagreen4, key=1, label=parts, style=dashed];
m92_1 -> m92_5  [color=darkseagreen4, key=1, label=errors, style=dashed];
m92_3 -> m92_5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m92_4 -> m92_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m92_5 -> m92_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m92_5 -> m92_5  [color=darkseagreen4, key=1, label=t, style=dashed];
m92_11 -> m92_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m92_11 -> m92_103  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m92_91 -> m92_96  [color=darkseagreen4, key=1, label=text, style=dashed];
m92_91 -> m92_101  [color=darkseagreen4, key=1, label=text, style=dashed];
m92_91 -> m92_106  [color=darkseagreen4, key=1, label=text, style=dashed];
m92_91 -> m92_107  [color=darkseagreen4, key=1, label=text, style=dashed];
m92_101 -> m92_103  [color=darkseagreen4, key=1, label=c, style=dashed];
m92_101 -> m92_104  [color=darkseagreen4, key=1, label=c, style=dashed];
m92_100 -> m92_103  [color=darkseagreen4, key=1, label=seen, style=dashed];
m92_100 -> m92_104  [color=darkseagreen4, key=1, label=seen, style=dashed];
m92_100 -> m92_106  [color=darkseagreen4, key=1, label=seen, style=dashed];
m92_100 -> m92_107  [color=darkseagreen4, key=1, label=seen, style=dashed];
m92_102 -> m92_105  [color=darkseagreen4, key=1, label=n, style=dashed];
m92_134 -> m92_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m92_135 -> m92_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m92_136 -> m92_62  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m92_137 -> m92_67  [color=darkseagreen4, key=1, label=int, style=dashed];
m92_138 -> m92_74  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m92_139 -> m92_81  [color=darkseagreen4, key=1, label=int, style=dashed];
m92_140 -> m92_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m93_21 -> m93_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m93_22 -> m93_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m93_23 -> m93_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_1 -> m93_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m93_2 -> m93_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m93_3 -> m93_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_29 -> m93_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m93_30 -> m93_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m94_2 -> m94_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m94_2 -> m94_8  [color=darkseagreen4, key=1, label=switches, style=dashed];
m94_3 -> m94_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m94_3 -> m94_8  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m94_4 -> m94_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m94_4 -> m94_8  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m94_5 -> m94_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_5 -> m94_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_5 -> m94_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_8 -> m94_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_6 -> m94_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m94_6 -> m94_8  [color=darkseagreen4, key=1, label=values, style=dashed];
m94_41 -> m94_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m94_42 -> m94_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m94_43 -> m94_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m95_1 -> m95_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m95_2 -> m95_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m95_4 -> m95_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_3 -> m95_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_3 -> m95_21  [color=darkseagreen4, key=1, label=result, style=dashed];
m95_21 -> m95_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_21 -> m95_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m95_25 -> m95_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m95_39 -> m95_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_39 -> m95_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m95_42 -> m95_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m95_30 -> m95_33  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m95_31 -> m95_36  [color=darkseagreen4, key=1, label=specs, style=dashed];
m95_33 -> m95_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_32 -> m95_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m95_32 -> m95_39  [color=darkseagreen4, key=1, label=result, style=dashed];
m95_44 -> m95_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m95_45 -> m95_21  [color=darkseagreen4, key=1, label=result, style=dashed];
m95_46 -> m95_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m95_47 -> m95_36  [color=darkseagreen4, key=1, label=specs, style=dashed];
m95_48 -> m95_39  [color=darkseagreen4, key=1, label=result, style=dashed];
m95_49 -> m95_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m98_31 -> m98_33  [color=darkseagreen4, key=1, label=result, style=dashed];
m98_32 -> m98_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_32 -> m98_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_35 -> m98_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_35 -> m98_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_35 -> m98_63  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_35 -> m98_73  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_35 -> m98_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_35 -> m98_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_44 -> m98_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_44 -> m98_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_44 -> m98_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_44 -> m98_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_44 -> m98_46  [color=darkseagreen4, key=1, label=changeType, style=dashed];
m98_45 -> m98_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_81 -> m98_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_60 -> m98_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_60 -> m98_63  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_60 -> m98_73  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_60 -> m98_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_62 -> m98_73  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_62 -> m98_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_63 -> m98_65  [color=darkseagreen4, key=1, label=withValue, style=dashed];
m98_51 -> m98_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_51 -> m98_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_51 -> m98_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_51 -> m98_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_5 -> m98_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_6 -> m98_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_6 -> m98_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_7 -> m98_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_8 -> m98_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_8 -> m98_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m98_90 -> m98_95  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_92 -> m98_96  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m98_102 -> m98_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_103 -> m98_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_104 -> m98_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_104 -> m98_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_104 -> m98_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m98_105 -> m98_63  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_105 -> m98_73  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m98_106 -> m98_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_106 -> m98_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_106 -> m98_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m98_107 -> m98_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_107 -> m98_73  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_107 -> m98_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m98_108 -> m98_73  [color=darkseagreen4, key=1, label=type, style=dashed];
m98_108 -> m98_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m99_13 -> m99_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m99_5 -> m99_8  [color=darkseagreen4, key=1, label="CommandLine.Core.TargetType", style=dashed];
m100_0 -> m100_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m100_1 -> m100_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_1 -> m100_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_24 -> m100_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_24 -> m100_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_24 -> m100_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_22 -> m100_31  [color=darkseagreen4, key=1, label=T1, style=dashed];
m100_23 -> m100_25  [color=darkseagreen4, key=1, label=descr, style=dashed];
m100_15 -> m100_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m100_16 -> m100_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_16 -> m100_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m100_41 -> m100_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m100_42 -> m100_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m100_43 -> m100_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m100_44 -> m100_20  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m100_46 -> m100_31  [color=darkseagreen4, key=1, label=T1, style=dashed];
m101_127 -> m101_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_88 -> m101_90  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m101_88 -> m101_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_89 -> m101_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_89 -> m101_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_89 -> m101_99  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_89 -> m101_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_94 -> m101_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m101_94 -> m101_98  [color=darkseagreen4, key=1, label=sep, style=dashed];
m101_96 -> m101_98  [color=darkseagreen4, key=1, label=e, style=dashed];
m101_95 -> m101_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_95 -> m101_98  [color=darkseagreen4, key=1, label=format, style=dashed];
m101_137 -> m101_139  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m101_151 -> m101_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_151 -> m101_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_151 -> m101_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_151 -> m101_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_102 -> m101_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_112 -> m101_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m101_112 -> m101_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m101_113 -> m101_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_13 -> m101_17  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m101_19 -> m101_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m101_22 -> m101_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_16 -> m101_29  [color=darkseagreen4, key=1, label=settings, style=dashed];
m101_16 -> m101_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m101_25 -> m101_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_25 -> m101_28  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m101_25 -> m101_29  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m101_27 -> m101_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_27 -> m101_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_27 -> m101_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_27 -> m101_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_27 -> m101_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_27 -> m101_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_27 -> m101_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_29 -> m101_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_20 -> m101_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_21 -> m101_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_23 -> m101_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_26 -> m101_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_26 -> m101_30  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m101_26 -> m101_31  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m101_24 -> m101_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m101_31 -> m101_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_8 -> m101_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m101_143 -> m101_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_143 -> m101_146  [color=darkseagreen4, key=1, label=object, style=dashed];
m101_166 -> m101_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_166 -> m101_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_166 -> m101_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m101_168 -> m101_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m101_169 -> m101_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m101_170 -> m101_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m101_171 -> m101_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m102_17 -> m102_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m102_26 -> m102_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_2 -> m105_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_2 -> m105_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_2 -> m105_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_4 -> m105_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m105_4 -> m105_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m105_28 -> m105_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_19 -> m105_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m105_19 -> m105_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m105_19 -> m105_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m105_19 -> m105_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m105_19 -> m105_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m105_20 -> m105_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_20 -> m105_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m105_20 -> m105_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m105_20 -> m105_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m105_24 -> m105_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m105_65 -> m105_70  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m105_65 -> m105_71  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m105_78 -> m105_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m107_0 -> m107_3  [color=darkseagreen4, key=1, label=string, style=dashed];
}
