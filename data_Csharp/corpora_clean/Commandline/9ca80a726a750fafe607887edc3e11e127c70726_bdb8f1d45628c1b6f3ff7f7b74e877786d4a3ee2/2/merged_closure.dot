digraph  {
n13 [label="System.Globalization.CultureInfo", span=""];
n14 [label=currentCulutre, span=""];
n0 [cluster="CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", label="Entry CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", span="20-20"];
n1 [cluster="CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", label="var currentCulutre = Thread.CurrentThread.CurrentCulture", span="22-22"];
n2 [cluster="CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", label="Action changer = () => Thread.CurrentThread.CurrentCulture = newCulture", span="24-24"];
n8 [cluster="lambda expression", label="Thread.CurrentThread.CurrentCulture = newCulture", span="24-24"];
n3 [cluster="CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", label="Action resetter = () => Thread.CurrentThread.CurrentCulture = currentCulutre", span="26-26"];
n11 [cluster="lambda expression", label="Thread.CurrentThread.CurrentCulture = currentCulutre", span="26-26"];
n5 [cluster="CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", label="Exit CommandLine.Tests.CultureHelper.MakeCultureHandlers(System.Globalization.CultureInfo)", span="20-20"];
n6 [cluster="CommandLine.Tests.CultureHandlers.CultureHandlers()", label="Entry CommandLine.Tests.CultureHandlers.CultureHandlers()", span="12-12"];
n7 [cluster="lambda expression", label="Entry lambda expression", span="24-24"];
n9 [cluster="lambda expression", label="Exit lambda expression", span="24-24"];
n10 [cluster="lambda expression", label="Entry lambda expression", span="26-26"];
n12 [cluster="lambda expression", label="Exit lambda expression", span="26-26"];
m0_257 [cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="parserResult == null", span="287-287"];
m0_120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="current == null", span="288-288"];
m0_122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="290-290"];
m0_123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="291-291"];
m0_124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
m0_126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="298-298"];
m0_127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
m0_119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="287-287"];
m0_121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''current'');", span="288-288"];
m0_125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="errors.Empty()", span="297-297"];
m0_128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m0_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m0_58 [cluster="Unk.Any", file="HelpText.cs", label="Entry Unk.Any", span=""];
m0_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m0_382 [cluster="string.PadRight(int)", file="HelpText.cs", label="Entry string.PadRight(int)", span="0-0"];
m0_463 [cluster="T.ToStringInvariant<T>()", file="HelpText.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m0_327 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="391-391"];
m0_176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
m0_175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="391-391"];
m0_177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m0_272 [cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m0_271 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m0_92 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m0_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_405 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m0_135 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_265 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="int ExtraLength = 10", span="582-582"];
m0_266 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
m0_267 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
m0_268 [cluster="string.SafeLength()", file="HelpText.cs", label="Entry string.SafeLength()", span="45-45"];
m0_139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="return AddLine(postOptionsHelp, value);", span="335-335"];
m0_141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m0_270 [cluster="string.IsNullOrEmpty(string)", file="HelpText.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_255 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m0_477 [cluster="string.ToLowerInvariant()", file="HelpText.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845"];
m0_432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var specLength = 0", span="847-847"];
m0_433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasShort = spec.ShortName.Length > 0", span="849-849"];
m0_434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasLong = spec.LongName.Length > 0", span="850-850"];
m0_436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="853-853"];
m0_437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="854-854"];
m0_444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += spec.LongName.Length", span="867-867"];
m0_439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="858-858"];
m0_449 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="875-875"];
m0_450 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return specLength;", span="877-877"];
m0_438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasShort, span="856-856"];
m0_448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="hasShort && hasLong", span="874-874"];
m0_435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var metaLength = 0", span="852-852"];
m0_443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasLong, span="865-865"];
m0_442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="862-862"];
m0_447 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="871-871"];
m0_440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="859-859"];
m0_441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="860-860"];
m0_445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="868-868"];
m0_446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="869-869"];
m0_451 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845"];
m0_258 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m0_328 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="670-677"];
m0_187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668"];
m0_329 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668"];
m0_384 [cluster="string.Trim()", file="HelpText.cs", label="Entry string.Trim()", span="0-0"];
m0_269 [cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m0_330 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m0_383 [cluster="string.FormatInvariant(params object[])", file="HelpText.cs", label="Entry string.FormatInvariant(params object[])", span="25-25"];
m0_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_302 [cluster="string.Substring(int)", file="HelpText.cs", label="Entry string.Substring(int)", span="0-0"];
m0_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
m0_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m0_48 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598"];
m0_273 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="600-600"];
m0_274 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598"];
m0_318 [cluster="System.Type.GetUsageData()", file="HelpText.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m0_404 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m0_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m0_51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m0_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="parserResult == null", span="483-483"];
m0_208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield break;", span="488-488"];
m0_211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line.ToString();", span="495-495"];
m0_216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line;", span="506-506"];
m0_206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="485-486"];
m0_210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
m0_212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
m0_205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="483-483"];
m0_207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors.Empty()", span="487-487"];
m0_209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
m0_213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="mutuallyErrs.Length > 0", span="501-501"];
m0_214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
m0_215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label=lines, span="505-505"];
m0_217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m0_343 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725"];
m0_351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(''  '')", span="727-727"];
m0_352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="728-732"];
m0_353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="734-736"];
m0_354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var optionHelpText = specification.HelpText", span="738-738"];
m0_355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="740-740"];
m0_356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="741-741"];
m0_357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="743-744"];
m0_358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.Required", span="746-746"];
m0_359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="747-747"];
m0_365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="757-757"];
m0_368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="761-761"];
m0_371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="767-767"];
m0_372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="769-769"];
m0_373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer = widthOfHelpText", span="770-770"];
m0_376 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="778-779"];
m0_377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText.Length > widthOfHelpText", span="781-781"];
m0_360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="749-749"];
m0_362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var words = optionHelpText.Split(' ')", span="754-754"];
m0_375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="777-777"];
m0_378 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="784-787"];
m0_361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var wordBuffer = 0", span="753-753"];
m0_367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="760-760"];
m0_363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var i = 0", span="755-755"];
m0_364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i < words.Length", span="755-755"];
m0_366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i])", span="759-759"];
m0_374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i++", span="755-755"];
m0_370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer++", span="764-764"];
m0_369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append('' '')", span="763-763"];
m0_379 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="return this;", span="789-789"];
m0_380 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725"];
m0_347 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708"];
m0_310 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708"];
m0_346 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="710-715"];
m0_406 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m0_131 [cluster="string.Concat(string, string)", file="HelpText.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_425 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="834-841"];
m0_63 [cluster="lambda expression", file="HelpText.cs", label="license.AddToHelpText(auto, true)", span="220-220"];
m0_67 [cluster="lambda expression", file="HelpText.cs", label="usage.AddToHelpText(auto, true)", span="233-233"];
m0_70 [cluster="lambda expression", file="HelpText.cs", label="auto.AddPreOptionsLines(lines)", span="236-236"];
m0_62 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="220-220"];
m0_66 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="233-233"];
m0_69 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="236-236"];
m0_73 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="239-239"];
m0_64 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="220-220"];
m0_68 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="233-233"];
m0_71 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="236-236"];
m0_74 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
m0_75 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="239-239"];
m0_100 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
m0_113 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
m0_93 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="267-267"];
m0_96 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="270-270"];
m0_107 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(pr, current)", span="276-276"];
m0_99 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m0_103 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m0_106 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m0_109 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m0_112 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m0_115 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m0_94 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
m0_95 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="267-267"];
m0_97 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
m0_98 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="270-270"];
m0_101 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m0_104 [cluster="lambda expression", file="HelpText.cs", label=e, span="271-271"];
m0_105 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m0_108 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m0_110 [cluster="lambda expression", file="HelpText.cs", label=e, span="276-276"];
m0_111 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m0_114 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m0_116 [cluster="lambda expression", file="HelpText.cs", label=e, span="277-277"];
m0_117 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m0_147 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="345-345"];
m0_148 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="345-345"];
m0_149 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="345-345"];
m0_154 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="356-356"];
m0_155 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="356-356"];
m0_156 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="356-356"];
m0_163 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="368-368"];
m0_164 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="368-368"];
m0_165 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="368-368"];
m0_171 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="380-380"];
m0_172 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="380-380"];
m0_173 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="380-380"];
m0_224 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="491-491"];
m0_225 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
m0_226 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="491-491"];
m0_231 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="518-518"];
m0_232 [cluster="lambda expression", file="HelpText.cs", label=example, span="518-518"];
m0_233 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="518-518"];
m0_261 [cluster="lambda expression", file="HelpText.cs", label="config.PreferShortName = s.PreferShortName", span="567-567"];
m0_262 [cluster="lambda expression", file="HelpText.cs", label="config.GroupSwitches = s.GroupSwitches", span="568-568"];
m0_263 [cluster="lambda expression", file="HelpText.cs", label="config.UseEqualToken = s.UseEqualToken", span="569-569"];
m0_260 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="565-570"];
m0_264 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="565-570"];
m0_275 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="600-600"];
m0_276 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="600-600"];
m0_277 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="600-600"];
m0_313 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="647-647"];
m0_314 [cluster="lambda expression", file="HelpText.cs", label="v.Index", span="647-647"];
m0_315 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="647-647"];
m0_320 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="656-665"];
m0_321 [cluster="lambda expression", file="HelpText.cs", label="var prop = tuple.Item1", span="658-658"];
m0_322 [cluster="lambda expression", file="HelpText.cs", label="var attr = tuple.Item2", span="659-659"];
m0_323 [cluster="lambda expression", file="HelpText.cs", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="661-662"];
m0_324 [cluster="lambda expression", file="HelpText.cs", label="return Tuple.Create(attr, examples);", span="664-664"];
m0_325 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="656-665"];
m0_341 [cluster="lambda expression", file="HelpText.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="693-693"];
m0_340 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="692-693"];
m0_342 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="692-693"];
m0_387 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="731-731"];
m0_391 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="732-732"];
m0_386 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="731-731"];
m0_390 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="732-732"];
m0_394 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="744-744"];
m0_395 [cluster="lambda expression", file="HelpText.cs", label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="744-744"];
m0_388 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="731-731"];
m0_392 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="732-732"];
m0_396 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="744-744"];
m0_402 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="798-802"];
m0_408 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="805-808"];
m0_401 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="798-802"];
m0_407 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="805-808"];
m0_403 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="798-802"];
m0_409 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="805-808"];
m0_413 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="817-817"];
m0_417 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="818-818"];
m0_412 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="817-817"];
m0_416 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="818-818"];
m0_414 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="817-817"];
m0_418 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="818-818"];
m0_426 [cluster="lambda expression", file="HelpText.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="836-838"];
m0_427 [cluster="lambda expression", file="HelpText.cs", label="return Math.Max(length, specLength);", span="840-840"];
m0_428 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="834-841"];
m0_400 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m0_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_389 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792"];
m0_398 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="794-809"];
m0_399 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792"];
m0_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m0_476 [cluster="T.ToStringLocal<T>()", file="HelpText.cs", label="Entry T.ToStringLocal<T>()", span="20-20"];
m0_332 [cluster="Unk.Concat", file="HelpText.cs", label="Entry Unk.Concat", span=""];
m0_479 [cluster="System.Text.StringBuilder.ToString(int, int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
m0_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
m0_79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
m0_83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
m0_86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
m0_78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
m0_80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
m0_82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
m0_84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
m0_81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
m0_85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
m0_87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m0_220 [cluster="int.Spaces()", file="HelpText.cs", label="Entry int.Spaces()", span="35-35"];
m0_65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m0_223 [cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_254 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m0_478 [cluster="System.Text.StringBuilder.StringBuilder()", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
m0_168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
m0_169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="return this;", span="381-381"];
m0_170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m0_60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types == null", span="407-407"];
m0_182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="408-408"];
m0_184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
m0_181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="407-407"];
m0_183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
m0_185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m0_253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653"];
m0_316 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="655-665"];
m0_317 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653"];
m0_162 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m0_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m0_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return RenderUsageText(parserResult, example => example);", span="518-518"];
m0_229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m0_146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m0_299 [cluster="string.Split(params char[])", file="HelpText.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_331 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m0_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
m0_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
m0_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
m0_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto = onError(auto)", span="216-216"];
m0_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
m0_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
m0_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
m0_44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddOptions(parserResult)", span="245-245"];
m0_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
m0_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
m0_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
m0_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddPreOptionsLine(heading)", span="229-229"];
m0_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
m0_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
m0_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddDashesToOption = false", span="241-241"];
m0_45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="return auto;", span="247-247"];
m0_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="FilterMeaningfulErrors(errors).Any()", span="215-215"];
m0_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
m0_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
m0_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="heading.Length > 0", span="228-228"];
m0_46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m0_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_47 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_218 [cluster="Unk.Where", file="HelpText.cs", label="Entry Unk.Where", span=""];
m0_91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_385 [cluster="string.String(char, int)", file="HelpText.cs", label="Entry string.String(char, int)", span="0-0"];
m0_301 [cluster="System.Math.Min(int, int)", file="HelpText.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m0_312 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m0_415 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m0_397 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.FormatDefaultValue(object)", span="900-900"];
m0_464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="value is bool", span="902-902"];
m0_465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="return value.ToStringLocal().ToLowerInvariant();", span="903-903"];
m0_466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="value is string", span="905-905"];
m0_467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="return value.ToStringLocal();", span="906-906"];
m0_468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="var asEnumerable = value as IEnumerable", span="908-908"];
m0_475 [cluster="CommandLine.Text.HelpText.FormatDefaultValue(object)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.FormatDefaultValue(object)", span="900-900"];
m0_54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
m0_179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680"];
m0_333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var maxLength = GetMaxLength(specifications)", span="685-685"];
m0_335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="689-689"];
m0_336 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="691-693"];
m0_334 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="687-687"];
m0_337 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="return this;", span="695-695"];
m0_338 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680"];
m0_222 [cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="return info.ToString();", span="313-313"];
m0_134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m0_138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718"];
m0_348 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="720-720"];
m0_349 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="return this;", span="722-722"];
m0_350 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718"];
m0_326 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="HelpText.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m0_142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824"];
m0_419 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="826-826"];
m0_420 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="return this;", span="828-828"];
m0_421 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824"];
m0_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m0_304 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="642-644"];
m0_178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639"];
m0_303 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="641-641"];
m0_305 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="645-647"];
m0_306 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="648-650"];
m0_307 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639"];
m0_278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603"];
m0_279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="605-605"];
m0_281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var words = value.Split(' ')", span="609-609"];
m0_284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="612-612"];
m0_285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i])", span="614-614"];
m0_287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="616-616"];
m0_288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append('' '')", span="618-618"];
m0_290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="622-622"];
m0_291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="624-624"];
m0_292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer = maximumLength", span="625-625"];
m0_294 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="631-631"];
m0_295 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="632-632"];
m0_296 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value.Length > maximumLength", span="634-634"];
m0_297 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(value)", span="636-636"];
m0_280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var wordBuffer = 0", span="608-608"];
m0_286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="615-615"];
m0_282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var i = 0", span="610-610"];
m0_283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i < words.Length", span="610-610"];
m0_293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i++", span="610-610"];
m0_289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer++", span="619-619"];
m0_298 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603"];
m0_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="sentenceBuilder == null", span="97-97"];
m0_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="heading == null", span="98-98"];
m0_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="copyright == null", span="99-99"];
m0_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
m0_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.heading = heading", span="105-105"];
m0_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.copyright = copyright", span="106-106"];
m0_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
m0_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''heading'');", span="98-98"];
m0_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
m0_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m0_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
m0_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m0_393 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812"];
m0_410 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="814-821"];
m0_411 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812"];
m0_72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
m0_144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="346-346"];
m0_145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m0_431 [cluster="System.Math.Max(int, int)", file="HelpText.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m0_221 [cluster="Unk.formatError", file="HelpText.cs", label="Entry Unk.formatError", span=""];
m0_339 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831"];
m0_422 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="833-841"];
m0_423 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831"];
m0_381 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m0_186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_345 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698"];
m0_309 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698"];
m0_344 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="700-705"];
m0_300 [cluster="string.Substring(int, int)", file="HelpText.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="424-424"];
m0_191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
m0_190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="424-424"];
m0_192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m0_430 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880"];
m0_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var specLength = 0", span="882-882"];
m0_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var hasMeta = spec.MetaName.Length > 0", span="884-884"];
m0_455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="887-887"];
m0_456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="888-888"];
m0_458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="891-891"];
m0_459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="893-893"];
m0_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var metaLength = 0", span="886-886"];
m0_457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label=hasMeta, span="890-890"];
m0_460 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += metaLength", span="895-895"];
m0_461 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return specLength;", span="897-897"];
m0_462 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880"];
m0_57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
m0_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m0_319 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m0_308 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m0_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_56 [cluster="System.Func<TResult>.Invoke()", file="HelpText.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types == null", span="441-441"];
m0_196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="442-442"];
m0_198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
m0_195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="441-441"];
m0_197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
m0_199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m0_150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
m0_152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="357-357"];
m0_153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m0_52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m0_157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
m0_159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
m0_160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="return this;", span="369-369"];
m0_161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m0_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m0_230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
m0_235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m0_53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="parserResult == null", span="542-542"];
m0_240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield break;", span="546-546"];
m0_247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return exampleText.ToString();", span="557-557"];
m0_251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return commandLine.ToString();", span="571-571"];
m0_238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
m0_245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var example = mapperFunc(e)", span="554-554"];
m0_237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="542-542"];
m0_239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="usage.MatchNothing()", span="545-545"];
m0_241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usageTuple = usage.FromJust()", span="548-548"];
m0_242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var examples = usageTuple.Item2", span="549-549"];
m0_243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
m0_244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=examples, span="552-552"];
m0_250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
m0_246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
m0_248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var styles = example.GetFormatStylesOrDefault()", span="558-558"];
m0_249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=styles, span="559-559"];
m0_252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m0_424 [cluster="Unk.Aggregate", file="HelpText.cs", label="Entry Unk.Aggregate", span=""];
m0_259 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m0_219 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m0_311 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_480 [file="HelpText.cs", label="CommandLine.Text.HelpText", span=""];
m0_481 [file="HelpText.cs", label=auto, span=""];
m0_482 [file="HelpText.cs", label="CommandLine.ParserResult<T>", span=""];
m0_483 [file="HelpText.cs", label=pr, span=""];
m0_484 [file="HelpText.cs", label=s, span=""];
m0_485 [file="HelpText.cs", label=string, span=""];
m0_486 [file="HelpText.cs", label=maxLength, span=""];
m0_487 [file="HelpText.cs", label=remainingSpace, span=""];
m0_488 [file="HelpText.cs", label=int, span=""];
m0_489 [file="HelpText.cs", label="CommandLine.Core.Specification", span=""];
m0_490 [file="HelpText.cs", label=optionHelpText, span=""];
m0_491 [file="HelpText.cs", label="CommandLine.Core.OptionSpecification", span=""];
m0_492 [file="HelpText.cs", label="CommandLine.Core.ValueSpecification", span=""];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="100-103"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="107-107"];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="108-108"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="109-109"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="110-110"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="111-111"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="112-112"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="113-113"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="96-96"];
m1_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m1_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m1_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56"];
m1_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="61-61"];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="62-62"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="63-63"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="64-64"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="65-65"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="66-66"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="67-67"];
m1_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="68-68"];
m1_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="138-138"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="139-139"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="140-143"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="146-146"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="147-147"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="149-149"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="150-150"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="151-151"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="152-152"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="134-134"];
m1_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m1_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m1_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="161-161"];
m1_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="162-162"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="163-166"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="169-169"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="170-170"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="172-172"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="173-173"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="174-174"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="175-175"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="157-157"];
m1_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m1_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m1_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="265-271"];
m1_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="274-274"];
m1_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="277-277"];
m1_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="278-278"];
m1_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="279-279"];
m1_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="280-280"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="281-281"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="282-282"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="283-283"];
m1_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="284-284"];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="285-285"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="286-286"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="262-262"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="348-351"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="355-355"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="356-356"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="357-357"];
m1_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="358-358"];
m1_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="359-359"];
m1_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="360-360"];
m1_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="361-361"];
m1_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="362-362"];
m1_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="363-363"];
m1_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="364-364"];
m1_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="344-344"];
m1_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m1_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="77-80"];
m1_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="84-84"];
m1_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="85-85"];
m1_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="86-86"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="87-87"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="88-88"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="89-89"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="90-90"];
m1_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="91-91"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="73-73"];
m1_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="184-184"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="185-185"];
m1_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="186-188"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="191-191"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="194-194"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="195-195"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="196-196"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="197-197"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="180-180"];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="320-321"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="322-325"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="328-328"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="331-331"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="333-333"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="334-334"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="335-335"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="336-336"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="337-337"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="338-338"];
m1_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="339-339"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="317-317"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="21-21"];
m1_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="19-19"];
m1_253 [cluster="System.Type.ToTypeInfo()", file="HelpTextTests.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m1_254 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="HelpTextTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m1_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m1_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="122-124"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="127-127"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="129-129"];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="118-118"];
m1_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m1_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m1_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369"];
m1_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="372-374"];
m1_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var text = HelpText.RenderUsageText(result)", span="377-377"];
m1_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines()", span="380-380"];
m1_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="383-383"];
m1_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="384-384"];
m1_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="385-385"];
m1_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386"];
m1_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="387-387"];
m1_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="388-388"];
m1_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="389-389"];
m1_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="369-369"];
m1_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m1_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m1_146 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="243-243"];
m1_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="222-222"];
m1_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="225-225"];
m1_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="227-227"];
m1_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="229-229"];
m1_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="231-231"];
m1_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="233-233"];
m1_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="237-237"];
m1_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="220-241"];
m1_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="224-224"];
m1_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="226-226"];
m1_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="228-228"];
m1_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="230-230"];
m1_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="232-232"];
m1_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="234-234"];
m1_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="236-236"];
m1_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="239-239"];
m1_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="235-235"];
m1_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="220-241"];
m1_147 [cluster="lambda expression", file="HelpTextTests.cs", label="string.Empty", span="243-243"];
m1_148 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="243-243"];
m1_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m1_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433"];
m1_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs", label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", prediction=0, span="436-439"];
m1_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs", label="var text = helpText.ToString()", prediction=1, span="445-445"];
m1_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="446-446"];
m1_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="447-447"];
m1_249 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="449-449"];
m1_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="450-450"];
m1_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="451-451"];
m1_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433"];
m1_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m1_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m1_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m1_255 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m1_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m1_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m1_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m1_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m1_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m1_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393"];
m1_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="396-401"];
m1_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="404-404"];
m1_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var text = helpText.ToString()", span="407-407"];
m1_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="408-408"];
m1_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="409-409"];
m1_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="410-410"];
m1_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="411-411"];
m1_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="412-412"];
m1_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="413-413"];
m1_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="414-414"];
m1_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="415-415"];
m1_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="416-416"];
m1_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="417-417"];
m1_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="418-418"];
m1_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="419-419"];
m1_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="420-420"];
m1_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="421-421"];
m1_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="422-422"];
m1_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="423-423"];
m1_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="424-424"];
m1_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="425-425"];
m1_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="426-426"];
m1_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="427-427"];
m1_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="393-393"];
m1_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="37-37"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="39-39"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="40-40"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="41-41"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43"];
m1_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44"];
m1_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="206-219"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="220-241"];
m1_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="246-246"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="242-243"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="249-249"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="251-251"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="252-252"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="253-253"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="254-254"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="255-255"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="256-256"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="257-257"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="203-203"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="294-299"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="302-302"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="305-305"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="307-307"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="308-308"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="309-309"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="310-310"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="311-311"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="312-312"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="291-291"];
m1_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m1_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m0_102 -> m0_120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_122  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_102 -> m0_123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_102 -> m0_127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label=errors, style=dashed];
m0_61 -> m0_176  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_429 -> m0_436  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_432 -> m0_439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_432 -> m0_450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_433 -> m0_438  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m0_433 -> m0_448  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m0_434 -> m0_443  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m0_434 -> m0_448  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m0_439 -> m0_439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_439 -> m0_441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_442 -> m0_450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_447 -> m0_450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_441 -> m0_441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m0_328 -> m0_328  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m0_273 -> m0_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_130 -> m0_206  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_206 -> m0_209  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m0_209 -> m0_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_343 -> m0_387  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_391  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_353  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_355  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_343 -> m0_358  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_343 -> m0_365  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_368  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_371  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_372  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_376  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_343 -> m0_377  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_352 -> m0_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_352 -> m0_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_357 -> m0_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_357 -> m0_360  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m0_357 -> m0_378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m0_359 -> m0_378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m0_362 -> m0_364  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_362 -> m0_365  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_362 -> m0_366  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_362 -> m0_368  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_362 -> m0_371  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_362 -> m0_372  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_375 -> m0_377  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m0_375 -> m0_378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m0_361 -> m0_365  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_361 -> m0_371  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_367 -> m0_370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_363 -> m0_365  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_363 -> m0_366  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_363 -> m0_368  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_363 -> m0_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_363 -> m0_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_363 -> m0_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_374 -> m0_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_370 -> m0_370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_425 -> m0_427  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_322 -> m0_324  [color=darkseagreen4, key=1, label=attr, style=dashed];
m0_389 -> m0_402  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_389 -> m0_408  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_398 -> m0_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_398 -> m0_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_83  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_76 -> m0_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_79 -> m0_82  [color=darkseagreen4, key=1, label=errors, style=dashed];
m0_83 -> m0_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_83 -> m0_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_80 -> m0_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_82 -> m0_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label=err, style=dashed];
m0_85 -> m0_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m0_168 -> m0_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_60 -> m0_182  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m0_60 -> m0_184  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m0_316 -> m0_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_228 -> m0_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_43  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_25 -> m0_44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_26 -> m0_32  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_26 -> m0_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_29 -> m0_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m0_31 -> m0_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_31 -> m0_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_34 -> m0_40  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
m0_41 -> m0_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m0_32 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=heading, style=dashed];
m0_39 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_40 -> m0_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m0_33 -> m0_39  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m0_397 -> m0_465  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_397 -> m0_466  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_397 -> m0_467  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_179 -> m0_336  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_179 -> m0_341  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_333 -> m0_336  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m0_333 -> m0_341  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m0_335 -> m0_341  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m0_336 -> m0_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_304 -> m0_306  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_305 -> m0_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_278 -> m0_284  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_278 -> m0_285  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_278 -> m0_287  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_278 -> m0_288  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_278 -> m0_290  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_278 -> m0_291  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_278 -> m0_295  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_278 -> m0_296  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_278 -> m0_297  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_281 -> m0_283  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_281 -> m0_284  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_281 -> m0_285  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_281 -> m0_287  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_281 -> m0_290  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_281 -> m0_291  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_294 -> m0_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_294 -> m0_297  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_280 -> m0_284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_280 -> m0_290  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_286 -> m0_289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_282 -> m0_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_290  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_291  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_293  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_293 -> m0_293  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_289 -> m0_289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_10 -> m0_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_393 -> m0_413  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_393 -> m0_417  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_410 -> m0_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_410 -> m0_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_143 -> m0_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_422 -> m0_425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_188 -> m0_191  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_430 -> m0_455  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_453 -> m0_457  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m0_193 -> m0_196  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m0_193 -> m0_198  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_151 -> m0_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_159 -> m0_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_242 -> m0_244  [color=darkseagreen4, key=1, label=examples, style=dashed];
m0_250 -> m0_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_480 -> m0_136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_159  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_172  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_184  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_191  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_198  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_266  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_328  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_336  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_337  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_344  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_348  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_349  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_351  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_387  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_391  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_353  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_355  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_366  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_369  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_372  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_376  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_378  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_379  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_398  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_402  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_408  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_419  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_420  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_440  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_480 -> m0_445  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m0_481 -> m0_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_481 -> m0_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_481 -> m0_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m0_482 -> m0_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_482 -> m0_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_483 -> m0_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m0_485 -> m0_341  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_486 -> m0_341  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m0_487 -> m0_341  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m0_488 -> m0_387  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_488 -> m0_391  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_489 -> m0_387  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_489 -> m0_391  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_491 -> m0_402  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_491 -> m0_408  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m0_492 -> m0_413  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m0_492 -> m0_417  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_247 -> m1_250  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_247 -> m1_251  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_248 -> m1_250  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_248 -> m1_251  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_222 -> m1_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_104 -> m1_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
}
