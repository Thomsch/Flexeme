digraph  {
n14 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n15 [label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", span=""];
n0 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", label="Entry CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
n7 [cluster="lambda expression", label="var errors = func(arguments)", span="20-20"];
n8 [cluster="lambda expression", label="return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());", span="21-23"];
n2 [cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", label="Exit CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
n3 [cluster="System.Collections.Generic.IEnumerable<T>.TryHead<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.TryHead<T>()", span="318-318"];
n4 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n5 [cluster="Unk.MapMaybe", label="Entry Unk.MapMaybe", span=""];
n6 [cluster="lambda expression", label="Entry lambda expression", span="18-24"];
n10 [cluster="Unk.func", label="Entry Unk.func", span=""];
n9 [cluster="lambda expression", label="Exit lambda expression", span="18-24"];
n11 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n12 [cluster="System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", span="361-361"];
n13 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m0_34 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m0_36 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="years.Length == 1", span="164-164"];
m0_37 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166"];
m0_38 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169"];
m0_40 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i < years.Length", span="170-170"];
m0_41 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172"];
m0_43 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="next < years.Length", span="174-174"];
m0_44 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176"];
m0_39 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var i = 0", span="170-170"];
m0_46 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return yearsPart.ToString();", span="180-180"];
m0_42 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var next = i + 1", span="173-173"];
m0_45 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i++", span="170-170"];
m0_47 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m0_33 [cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m0_19 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m0_32 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_20 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m0_21 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="this.attribute = attribute", span="86-86"];
m0_22 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m0_31 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m0_5 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="string.IsNullOrWhiteSpace(author)", span="62-62"];
m0_7 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="copyrightYears.Length == 0", span="63-63"];
m0_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.isSymbolUpper = isSymbolUpper", span="66-66"];
m0_11 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.author = author", span="67-67"];
m0_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.copyrightYears = copyrightYears", span="68-68"];
m0_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69"];
m0_6 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentException(''author'');", span="62-62"];
m0_8 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63"];
m0_9 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="int ExtraLength = 10", span="65-65"];
m0_14 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m0_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m0_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m0_48 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m0_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m0_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="attribute != null", span="140-140"];
m0_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return attribute.Copyright;", span="142-142"];
m0_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return new StringBuilder(builderSize)\r\n                .Append(CopyrightWord)\r\n                .Append(' ')\r\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\r\n                .Append(' ')\r\n                .Append(FormatYears(copyrightYears))\r\n                .Append(' ')\r\n                .Append(author)\r\n                .ToString();", span="145-153"];
m0_30 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m0_23 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m0_24 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="return info.ToString();", span="131-131"];
m0_25 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m0_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m0_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m0_35 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_17 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_16 [cluster="System.ArgumentException.ArgumentException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_15 [cluster="string.IsNullOrWhiteSpace(string)", file="CopyrightInfo.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m0_49 [file="CopyrightInfo.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m2_258 [cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m2_118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="parserResult == null", span="287-287"];
m2_120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="current == null", span="288-288"];
m2_122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes().Empty()", span="290-290"];
m2_123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="291-291"];
m2_124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
m2_126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="298-298"];
m2_127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
m2_119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="287-287"];
m2_121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''current'');", span="288-288"];
m2_125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="errors.Empty()", span="297-297"];
m2_128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m2_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m2_48 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18"];
m2_255 [cluster="Unk.FromJustStrict", file="HelpText.cs", label="Entry Unk.FromJustStrict", span=""];
m2_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m2_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m2_379 [cluster="string.PadRight(int)", file="HelpText.cs", label="Entry string.PadRight(int)", span="0-0"];
m2_460 [cluster="T.ToStringInvariant<T>()", file="HelpText.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m2_324 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m2_61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m2_174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="391-391"];
m2_176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
m2_175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="391-391"];
m2_177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m2_274 [cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m2_273 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_92 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m2_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m2_402 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m2_135 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m2_267 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="int ExtraLength = 10", span="582-582"];
m2_268 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
m2_269 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
m2_270 [cluster="string.SafeLength()", file="HelpText.cs", label="Entry string.SafeLength()", span="50-50"];
m2_139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m2_140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="return AddLine(postOptionsHelp, value);", span="335-335"];
m2_141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m2_272 [cluster="string.IsNullOrEmpty(string)", file="HelpText.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_474 [cluster="string.ToLowerInvariant()", file="HelpText.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m2_426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m2_429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var specLength = 0", span="842-842"];
m2_430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasShort = spec.ShortName.Length > 0", span="844-844"];
m2_431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasLong = spec.LongName.Length > 0", span="845-845"];
m2_433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="848-848"];
m2_434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="849-849"];
m2_441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += spec.LongName.Length", span="862-862"];
m2_436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="853-853"];
m2_446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="870-870"];
m2_447 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return specLength;", span="872-872"];
m2_435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasShort, span="851-851"];
m2_445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="hasShort && hasLong", span="869-869"];
m2_432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var metaLength = 0", span="847-847"];
m2_440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasLong, span="860-860"];
m2_439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="857-857"];
m2_444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="866-866"];
m2_437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="854-854"];
m2_438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="855-855"];
m2_442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="863-863"];
m2_443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="864-864"];
m2_448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840"];
m2_259 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m2_325 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="665-672"];
m2_187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m2_326 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663"];
m2_381 [cluster="string.Trim()", file="HelpText.cs", label="Entry string.Trim()", span="0-0"];
m2_271 [cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m2_327 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m2_380 [cluster="string.FormatInvariant(params object[])", file="HelpText.cs", label="Entry string.FormatInvariant(params object[])", span="25-25"];
m2_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_299 [cluster="string.Substring(int)", file="HelpText.cs", label="Entry string.Substring(int)", span="0-0"];
m2_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m2_201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
m2_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m2_315 [cluster="System.Type.GetUsageData()", file="HelpText.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m2_401 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m2_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m2_51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m2_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m2_204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="parserResult == null", span="483-483"];
m2_208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield break;", span="488-488"];
m2_211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line.ToString();", span="495-495"];
m2_216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line;", span="506-506"];
m2_206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var meaningfulErrors =\r\n                ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes()", span="485-486"];
m2_210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
m2_212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
m2_205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="483-483"];
m2_207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors.Empty()", span="487-487"];
m2_209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
m2_213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="mutuallyErrs.Length > 0", span="501-501"];
m2_214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
m2_215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label=lines, span="505-505"];
m2_217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m2_340 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m2_348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(''  '')", span="722-722"];
m2_349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="723-727"];
m2_350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="729-731"];
m2_351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var optionHelpText = specification.HelpText", span="733-733"];
m2_352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="735-735"];
m2_353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="736-736"];
m2_354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="738-739"];
m2_355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.Required", span="741-741"];
m2_356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="742-742"];
m2_362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="752-752"];
m2_365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="756-756"];
m2_368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="762-762"];
m2_369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="764-764"];
m2_370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer = widthOfHelpText", span="765-765"];
m2_373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="773-774"];
m2_374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText.Length > widthOfHelpText", span="776-776"];
m2_357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="744-744"];
m2_359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var words = optionHelpText.Split(' ')", span="749-749"];
m2_372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="772-772"];
m2_375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="779-782"];
m2_358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var wordBuffer = 0", span="748-748"];
m2_364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="755-755"];
m2_360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var i = 0", span="750-750"];
m2_361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i < words.Length", span="750-750"];
m2_363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i])", span="754-754"];
m2_371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i++", span="750-750"];
m2_367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer++", span="759-759"];
m2_366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append('' '')", span="758-758"];
m2_376 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="return this;", span="784-784"];
m2_377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720"];
m2_344 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m2_307 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703"];
m2_343 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="705-710"];
m2_403 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m2_131 [cluster="string.Concat(string, string)", file="HelpText.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_422 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="829-836"];
m2_63 [cluster="lambda expression", file="HelpText.cs", label="license.AddToHelpText(auto, true)", span="220-220"];
m2_67 [cluster="lambda expression", file="HelpText.cs", label="usage.AddToHelpText(auto, true)", span="233-233"];
m2_70 [cluster="lambda expression", file="HelpText.cs", label="auto.AddPreOptionsLines(lines)", span="236-236"];
m2_62 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="220-220"];
m2_66 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="233-233"];
m2_69 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="236-236"];
m2_73 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="239-239"];
m2_64 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="220-220"];
m2_68 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="233-233"];
m2_71 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="236-236"];
m2_74 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
m2_75 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="239-239"];
m2_100 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
m2_113 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
m2_93 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="267-267"];
m2_96 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="270-270"];
m2_107 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(pr, current)", span="276-276"];
m2_99 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m2_103 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m2_106 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m2_109 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m2_112 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m2_115 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m2_94 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
m2_95 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="267-267"];
m2_97 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
m2_98 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="270-270"];
m2_101 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m2_104 [cluster="lambda expression", file="HelpText.cs", label=e, span="271-271"];
m2_105 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m2_108 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m2_110 [cluster="lambda expression", file="HelpText.cs", label=e, span="276-276"];
m2_111 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m2_114 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m2_116 [cluster="lambda expression", file="HelpText.cs", label=e, span="277-277"];
m2_117 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m2_147 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="345-345"];
m2_148 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="345-345"];
m2_149 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="345-345"];
m2_154 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="356-356"];
m2_155 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="356-356"];
m2_156 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="356-356"];
m2_163 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="368-368"];
m2_164 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="368-368"];
m2_165 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="368-368"];
m2_171 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="380-380"];
m2_172 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="380-380"];
m2_173 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="380-380"];
m2_224 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="491-491"];
m2_225 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
m2_226 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="491-491"];
m2_231 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="518-518"];
m2_232 [cluster="lambda expression", file="HelpText.cs", label=example, span="518-518"];
m2_233 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="518-518"];
m2_263 [cluster="lambda expression", file="HelpText.cs", label="config.PreferShortName = s.PreferShortName", span="567-567"];
m2_264 [cluster="lambda expression", file="HelpText.cs", label="config.GroupSwitches = s.GroupSwitches", span="568-568"];
m2_265 [cluster="lambda expression", file="HelpText.cs", label="config.UseEqualToken = s.UseEqualToken", span="569-569"];
m2_262 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="565-570"];
m2_266 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="565-570"];
m2_310 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="642-642"];
m2_311 [cluster="lambda expression", file="HelpText.cs", label="v.Index", span="642-642"];
m2_312 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="642-642"];
m2_317 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="651-660"];
m2_318 [cluster="lambda expression", file="HelpText.cs", label="var prop = tuple.Item1", span="653-653"];
m2_319 [cluster="lambda expression", file="HelpText.cs", label="var attr = tuple.Item2", span="654-654"];
m2_320 [cluster="lambda expression", file="HelpText.cs", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="656-657"];
m2_321 [cluster="lambda expression", file="HelpText.cs", label="return Tuple.Create(attr, examples);", span="659-659"];
m2_322 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="651-660"];
m2_338 [cluster="lambda expression", file="HelpText.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="688-688"];
m2_337 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="687-688"];
m2_339 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="687-688"];
m2_384 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="726-726"];
m2_388 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="727-727"];
m2_383 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="726-726"];
m2_387 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="727-727"];
m2_391 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="739-739"];
m2_392 [cluster="lambda expression", file="HelpText.cs", label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="739-739"];
m2_385 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="726-726"];
m2_389 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="727-727"];
m2_393 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="739-739"];
m2_399 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="793-797"];
m2_405 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="800-803"];
m2_398 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="793-797"];
m2_404 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="800-803"];
m2_400 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="793-797"];
m2_406 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="800-803"];
m2_410 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="812-812"];
m2_414 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="813-813"];
m2_409 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="812-812"];
m2_413 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="813-813"];
m2_411 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="812-812"];
m2_415 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="813-813"];
m2_423 [cluster="lambda expression", file="HelpText.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="831-833"];
m2_424 [cluster="lambda expression", file="HelpText.cs", label="return Math.Max(length, specLength);", span="835-835"];
m2_425 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="829-836"];
m2_397 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m2_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_386 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m2_395 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="789-804"];
m2_396 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787"];
m2_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m2_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m2_473 [cluster="T.ToStringLocal<T>()", file="HelpText.cs", label="Entry T.ToStringLocal<T>()", span="20-20"];
m2_329 [cluster="Unk.Concat", file="HelpText.cs", label="Entry Unk.Concat", span=""];
m2_476 [cluster="System.Text.StringBuilder.ToString(int, int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
m2_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m2_77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
m2_79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
m2_83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
m2_86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
m2_78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
m2_80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
m2_82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
m2_84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
m2_81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
m2_85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
m2_87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m2_220 [cluster="int.Spaces()", file="HelpText.cs", label="Entry int.Spaces()", span="35-35"];
m2_65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m2_223 [cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_254 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m2_475 [cluster="System.Text.StringBuilder.StringBuilder()", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m2_167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
m2_168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
m2_169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="return this;", span="381-381"];
m2_170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m2_60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m2_180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types == null", span="407-407"];
m2_182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="408-408"];
m2_184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
m2_181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="407-407"];
m2_183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
m2_185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m2_253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m2_313 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="650-660"];
m2_314 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m2_162 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m2_8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m2_9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
m2_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m2_228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return RenderUsageText(parserResult, example => example);", span="518-518"];
m2_229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m2_146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m2_296 [cluster="string.Split(params char[])", file="HelpText.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m2_328 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m2_394 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m2_461 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="value is bool", span="897-897"];
m2_462 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal().ToLowerInvariant();", span="898-898"];
m2_463 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="value is string", span="900-900"];
m2_464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal();", span="901-901"];
m2_465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="var asEnumerable = value as IEnumerable", span="903-903"];
m2_467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal();", span="905-905"];
m2_466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="asEnumerable == null", span="904-904"];
m2_469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label=asEnumerable, span="908-908"];
m2_468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="var builder = new StringBuilder()", span="907-907"];
m2_470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="909-911"];
m2_471 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="913-915"];
m2_472 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895"];
m2_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m2_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
m2_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
m2_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
m2_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto = onError(auto)", span="216-216"];
m2_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
m2_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
m2_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
m2_44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddOptions(parserResult)", span="245-245"];
m2_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
m2_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
m2_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
m2_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddPreOptionsLine(heading)", span="229-229"];
m2_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
m2_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
m2_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddDashesToOption = false", span="241-241"];
m2_45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="return auto;", span="247-247"];
m2_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors.OnlyMeaningfulOnes().Any()", span="215-215"];
m2_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
m2_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
m2_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="heading.Length > 0", span="228-228"];
m2_46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m2_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_47 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_218 [cluster="Unk.Where", file="HelpText.cs", label="Entry Unk.Where", span=""];
m2_91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m2_382 [cluster="string.String(char, int)", file="HelpText.cs", label="Entry string.String(char, int)", span="0-0"];
m2_298 [cluster="System.Math.Min(int, int)", file="HelpText.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m2_309 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_412 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m2_257 [cluster="Unk.mapperFunc", file="HelpText.cs", label="Entry Unk.mapperFunc", span=""];
m2_260 [cluster="Unk.Append", file="HelpText.cs", label="Entry Unk.Append", span=""];
m2_54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
m2_179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m2_330 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var maxLength = GetMaxLength(specifications)", span="680-680"];
m2_332 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="684-684"];
m2_333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="686-688"];
m2_331 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="682-682"];
m2_334 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="return this;", span="690-690"];
m2_335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675"];
m2_222 [cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m2_133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="return info.ToString();", span="313-313"];
m2_134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m2_138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m2_345 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="715-715"];
m2_346 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="return this;", span="717-717"];
m2_347 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713"];
m2_323 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="HelpText.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
m2_142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m2_416 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="821-821"];
m2_417 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="return this;", span="823-823"];
m2_418 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819"];
m2_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m2_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
m2_301 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="637-639"];
m2_178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m2_300 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="636-636"];
m2_302 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="640-642"];
m2_303 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="643-645"];
m2_304 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m2_275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m2_276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="600-600"];
m2_278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var words = value.Split(' ')", span="604-604"];
m2_281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="607-607"];
m2_282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i])", span="609-609"];
m2_284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="611-611"];
m2_285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append('' '')", span="613-613"];
m2_287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="617-617"];
m2_288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="619-619"];
m2_289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer = maximumLength", span="620-620"];
m2_291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="626-626"];
m2_292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="627-627"];
m2_293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value.Length > maximumLength", span="629-629"];
m2_294 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(value)", span="631-631"];
m2_277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var wordBuffer = 0", span="603-603"];
m2_283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="610-610"];
m2_279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var i = 0", span="605-605"];
m2_280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i < words.Length", span="605-605"];
m2_290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i++", span="605-605"];
m2_286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer++", span="614-614"];
m2_295 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m2_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m2_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="sentenceBuilder == null", span="97-97"];
m2_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="heading == null", span="98-98"];
m2_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="copyright == null", span="99-99"];
m2_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
m2_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.heading = heading", span="105-105"];
m2_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.copyright = copyright", span="106-106"];
m2_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
m2_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''heading'');", span="98-98"];
m2_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
m2_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m2_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
m2_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m2_390 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m2_407 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="809-816"];
m2_408 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807"];
m2_72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m2_143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
m2_144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="346-346"];
m2_145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m2_428 [cluster="System.Math.Max(int, int)", file="HelpText.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m2_221 [cluster="Unk.formatError", file="HelpText.cs", label="Entry Unk.formatError", span=""];
m2_336 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m2_419 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="828-836"];
m2_420 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826"];
m2_378 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m2_186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m2_342 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m2_306 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693"];
m2_341 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="695-700"];
m2_297 [cluster="string.Substring(int, int)", file="HelpText.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m2_189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="424-424"];
m2_191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
m2_190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="424-424"];
m2_192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m2_427 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m2_449 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var specLength = 0", span="877-877"];
m2_450 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var hasMeta = spec.MetaName.Length > 0", span="879-879"];
m2_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="882-882"];
m2_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="883-883"];
m2_455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="886-886"];
m2_456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="888-888"];
m2_451 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var metaLength = 0", span="881-881"];
m2_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label=hasMeta, span="885-885"];
m2_457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += metaLength", span="890-890"];
m2_458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return specLength;", span="892-892"];
m2_459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875"];
m2_57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m2_136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
m2_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m2_316 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m2_305 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m2_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_56 [cluster="System.Func<TResult>.Invoke()", file="HelpText.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m2_194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types == null", span="441-441"];
m2_196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="442-442"];
m2_198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
m2_195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="441-441"];
m2_197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
m2_199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m2_150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m2_151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
m2_152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="357-357"];
m2_153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m2_52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m2_157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m2_158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
m2_159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
m2_160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="return this;", span="369-369"];
m2_161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m2_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m2_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
m2_230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m2_234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
m2_235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m2_53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m2_236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="parserResult == null", span="542-542"];
m2_240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield break;", span="546-546"];
m2_247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return exampleText.ToString();", span="557-557"];
m2_251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return commandLine.ToString();", span="571-571"];
m2_238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
m2_245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var example = mapperFunc(e)", span="554-554"];
m2_237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="542-542"];
m2_239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="usage.MatchNothing()", span="545-545"];
m2_242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var examples = usageTuple.Item2", span="549-549"];
m2_243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
m2_244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=examples, span="552-552"];
m2_250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
m2_246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
m2_248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var styles = example.GetFormatStylesOrDefault()", span="558-558"];
m2_249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=styles, span="559-559"];
m2_252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m2_421 [cluster="Unk.Aggregate", file="HelpText.cs", label="Entry Unk.Aggregate", span=""];
m2_261 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m2_219 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m2_308 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_477 [file="HelpText.cs", label="CommandLine.Text.HelpText", span=""];
m2_478 [file="HelpText.cs", label=auto, span=""];
m2_479 [file="HelpText.cs", label="CommandLine.ParserResult<T>", span=""];
m2_480 [file="HelpText.cs", label=pr, span=""];
m2_481 [file="HelpText.cs", label=s, span=""];
m2_482 [file="HelpText.cs", label=string, span=""];
m2_483 [file="HelpText.cs", label=maxLength, span=""];
m2_484 [file="HelpText.cs", label=remainingSpace, span=""];
m2_485 [file="HelpText.cs", label=int, span=""];
m2_486 [file="HelpText.cs", label="CommandLine.Core.Specification", span=""];
m2_487 [file="HelpText.cs", label=optionHelpText, span=""];
m2_488 [file="HelpText.cs", label="CommandLine.Core.OptionSpecification", span=""];
m2_489 [file="HelpText.cs", label="CommandLine.Core.ValueSpecification", span=""];
m3_7 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="InstanceBuilder.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m3_0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m3_1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42"];
m3_2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="ae.MoveNext()", span="44-44"];
m3_3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46"];
m3_5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="ae.Current.Should().Equal(''two'')", span="49-49"];
m3_4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48"];
m3_6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m3_10 [cluster="Unk.ElementsShouldBeEqual", file="InstanceBuilder.cs", label="Entry Unk.ElementsShouldBeEqual", span=""];
m3_9 [cluster="Unk.PublicWrapperOfGetNextInputValues", file="InstanceBuilder.cs", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
m3_12 [cluster="Unk.Equal", file="InstanceBuilder.cs", label="Entry Unk.Equal", span=""];
m3_8 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="InstanceBuilder.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
m3_11 [cluster="Unk.Should", file="InstanceBuilder.cs", label="Entry Unk.Should", span=""];
m3_13 [file="InstanceBuilder.cs", label="CommandLine.Tests.ArgumentParserFixture", span=""];
m5_30 [cluster="Unk.WithValue", file="OptionMapper.cs", label="Entry Unk.WithValue", span=""];
m5_4 [cluster="Unk.Select", file="OptionMapper.cs", label="Entry Unk.Select", span=""];
m5_24 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapper.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m5_18 [cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapper.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m5_23 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m5_11 [cluster="Unk.ToMaybe", file="OptionMapper.cs", label="Entry Unk.ToMaybe", span=""];
m5_10 [cluster="Unk.FirstOrDefault", file="OptionMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m5_25 [cluster="CSharpx.Maybe.Just<T>(T)", file="OptionMapper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m5_13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m5_29 [cluster="Unk.Just", file="OptionMapper.cs", label="Entry Unk.Just", span=""];
m5_37 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="39-39"];
m5_7 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="21-35"];
m5_8 [cluster="lambda expression", color=green, community=0, file="OptionMapper.cs", label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .MapMaybeOrDefault(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", prediction=0, span="22-35"];
m5_9 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="21-35"];
m5_15 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="23-24"];
m5_19 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="26-34"];
m5_20 [cluster="lambda expression", color=green, community=0, file="OptionMapper.cs", label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", prediction=0, span="27-34"];
m5_21 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="26-34"];
m5_26 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="28-31"];
m5_16 [cluster="lambda expression", file="OptionMapper.cs", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24"];
m5_31 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="38-38"];
m5_34 [cluster="lambda expression", file="OptionMapper.cs", label="Entry lambda expression", span="39-39"];
m5_27 [cluster="lambda expression", file="OptionMapper.cs", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31"];
m5_17 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="23-24"];
m5_28 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="28-31"];
m5_33 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="38-38"];
m5_32 [cluster="lambda expression", file="OptionMapper.cs", label="se.Item1", span="38-38"];
m5_36 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="39-39"];
m5_35 [cluster="lambda expression", file="OptionMapper.cs", label="se.Item2", span="39-39"];
m5_38 [cluster="lambda expression", file="OptionMapper.cs", label="se.Value", span="39-39"];
m5_39 [cluster="lambda expression", file="OptionMapper.cs", label="Exit lambda expression", span="39-39"];
m5_22 [cluster="Unk.converter", file="OptionMapper.cs", label="Entry Unk.converter", span=""];
m5_5 [cluster="Unk.>", file="OptionMapper.cs", label="Entry Unk.>", span=""];
m5_12 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m5_6 [cluster="Unk.Succeed", file="OptionMapper.cs", label="Entry Unk.Succeed", span=""];
m5_14 [cluster="Unk.MapMaybeOrDefault", file="OptionMapper.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m5_0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m5_1 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", color=green, community=0, file="OptionMapper.cs", label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .MapMaybeOrDefault(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", prediction=2, span="20-36"];
m5_2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39"];
m5_3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m5_40 [file="OptionMapper.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
m5_41 [file="OptionMapper.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span=""];
m5_42 [file="OptionMapper.cs", label="System.StringComparer", span=""];
m5_43 [file="OptionMapper.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m6_13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76"];
m6_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m6_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
m6_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m6_18 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="29-29"];
m6_4 [cluster="lambda expression", file="Parser.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18"];
m6_3 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="18-18"];
m6_5 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="18-18"];
m6_11 [cluster="lambda expression", file="Parser.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24"];
m6_10 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="23-24"];
m6_12 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="23-24"];
m6_19 [cluster="lambda expression", file="Parser.cs", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29"];
m6_20 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="29-29"];
m6_6 [cluster="System.Type.ToDescriptor()", file="Parser.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m6_15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m6_16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
m6_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m6_21 [cluster="CommandLine.Core.Specification.IsOption()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m6_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m6_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
m6_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m6_14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81"];
m8_22 [cluster="System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", span="10-10"];
m8_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m8_10 [cluster="Unk.MapMaybeOrDefault", file="Sequence.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m8_0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m8_1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, file="Sequence.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybeOrDefault(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", prediction=3, span="16-25"];
m8_2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m8_35 [cluster="Unk.Take", file="Sequence.cs", label="Entry Unk.Take", span=""];
m8_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m8_28 [cluster="object.Equals(object)", file="Sequence.cs", label="Entry object.Equals(object)", span="0-0"];
m8_36 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="36-36"];
m8_5 [cluster="lambda expression", color=green, community=0, file="Sequence.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybeOrDefault(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { }", prediction=4, span="18-23"];
m8_12 [cluster="lambda expression", file="Sequence.cs", label="info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }", span="20-22"];
m8_4 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="17-23"];
m8_6 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="17-23"];
m8_11 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="19-22"];
m8_13 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="19-22"];
m8_26 [cluster="lambda expression", file="Sequence.cs", label="t.Equals(nameToken)", span="30-30"];
m8_30 [cluster="lambda expression", color=green, community=0, file="Sequence.cs", label="info.MaxItems.MapMaybeOrDefault(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()))", prediction=5, span="34-36"];
m8_33 [cluster="lambda expression", file="Sequence.cs", label="tokens.Skip(nameIndex + 1).Take(n)", span="35-35"];
m8_25 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="30-30"];
m8_29 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="34-36"];
m8_39 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="37-37"];
m8_27 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="30-30"];
m8_31 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="34-36"];
m8_32 [cluster="lambda expression", file="Sequence.cs", label="Entry lambda expression", span="35-35"];
m8_34 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="35-35"];
m8_37 [cluster="lambda expression", file="Sequence.cs", label="v.IsValue()", span="36-36"];
m8_38 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="36-36"];
m8_40 [cluster="lambda expression", file="Sequence.cs", label="v.IsValue()", span="37-37"];
m8_41 [cluster="lambda expression", file="Sequence.cs", label="Exit lambda expression", span="37-37"];
m8_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Sequence.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m8_16 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="Entry CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28"];
m8_17 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="var nameIndex = tokens.IndexOf(t => t.Equals(nameToken))", span="30-30"];
m8_19 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", color=green, community=0, file="Sequence.cs", label="return info.NextValue.MapMaybeOrDefault(\r\n                    _ => info.MaxItems.MapMaybeOrDefault(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue())),\r\n                    tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()));", prediction=5, span="33-37"];
m8_18 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="nameIndex >= 0", span="31-31"];
m8_20 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="return new Token[] { };", span="39-39"];
m8_21 [cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs", label="Exit CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28"];
m8_7 [cluster="CommandLine.Core.Token.IsName()", file="Sequence.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m8_14 [cluster="Unk.OfSequence", file="Sequence.cs", label="Entry Unk.OfSequence", span=""];
m8_8 [cluster="CommandLine.Core.Token.IsValue()", file="Sequence.cs", label="Entry CommandLine.Core.Token.IsValue()", span="133-133"];
m8_9 [cluster="System.Func<T, TResult>.Invoke(T)", file="Sequence.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m8_3 [cluster="Unk.Pairwise", file="Sequence.cs", label="Entry Unk.Pairwise", span=""];
m8_42 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m8_43 [file="Sequence.cs", label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span=""];
m8_44 [file="Sequence.cs", label="CommandLine.Core.Token", span=""];
m8_45 [file="Sequence.cs", label="CommandLine.Core.Token", span=""];
m8_46 [file="Sequence.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m8_47 [file="Sequence.cs", label="CommandLine.Core.TypeDescriptor", span=""];
m8_48 [file="Sequence.cs", label=nameIndex, span=""];
m10_56 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111"];
m10_52 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m10_58 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m10_51 [cluster="CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", span="38-38"];
m10_47 [cluster="CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="38-38"];
m10_3 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38"];
m10_4 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="40-40"];
m10_6 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="var option = map[group.Current]", span="43-43"];
m10_12 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="argumentEnumerator.IsLast && group.IsLast", span="55-55"];
m10_17 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="65-65"];
m10_22 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="76-76"];
m10_24 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="valueSetting = option.SetValue(items, options)", span="79-79"];
m10_28 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="88-88"];
m10_31 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="96-96"];
m10_36 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="107-107"];
m10_37 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="valueSetting = option.SetValue(items, options)", span="109-109"];
m10_41 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!@group.IsLast && map[@group.Next] == null", span="119-119"];
m10_43 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!option.SetValue(true, options)", span="124-124"];
m10_5 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="group.MoveNext()", span="41-41"];
m10_15 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!group.IsLast", span="61-61"];
m10_23 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="items.Insert(0, @group.GetRemainingFromNext())", span="77-77"];
m10_45 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return PresentParserState.Success;", span="130-130"];
m10_7 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="option == null", span="44-44"];
m10_9 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="option.IsDefined = true", span="49-49"];
m10_10 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="51-51"];
m10_11 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!option.IsBoolean", span="53-53"];
m10_16 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!option.IsArray", span="63-63"];
m10_19 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="DefineOptionThatViolatesFormat(option)", span="68-68"];
m10_21 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="74-74"];
m10_26 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="DefineOptionThatViolatesFormat(option)", span="82-82"];
m10_30 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!option.IsArray", span="94-94"];
m10_33 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="DefineOptionThatViolatesFormat(option)", span="99-99"];
m10_35 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="105-105"];
m10_39 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="DefineOptionThatViolatesFormat(option)", span="112-112"];
m10_8 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return _ignoreUnkwnownArguments ? PresentParserState.MoveOnNextElement : PresentParserState.Failure;", span="46-46"];
m10_13 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return PresentParserState.Failure;", span="57-57"];
m10_14 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="bool valueSetting", span="60-60"];
m10_18 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!valueSetting", span="66-66"];
m10_20 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="71-71"];
m10_25 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!valueSetting", span="80-80"];
m10_27 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="85-85"];
m10_29 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return PresentParserState.Failure;", span="90-90"];
m10_32 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!valueSetting", span="97-97"];
m10_34 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="102-102"];
m10_38 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="!valueSetting", span="110-110"];
m10_40 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="115-115"];
m10_42 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return PresentParserState.Failure;", span="121-121"];
m10_44 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="return PresentParserState.Failure;", span="126-126"];
m10_46 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38"];
m10_53 [cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171"];
m10_59 [cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140"];
m10_50 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163"];
m10_61 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m10_0 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33"];
m10_1 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="35-35"];
m10_2 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33"];
m10_57 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m10_60 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84"];
m10_49 [cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34"];
m10_55 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155"];
m10_54 [cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135"];
m10_48 [cluster="string.Substring(int)", file="SpecificationPropertyExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m10_62 [file="SpecificationPropertyExtensions.cs", label="CommandLine.Parsing.OptionGroupParser", span=""];
m11_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m11_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97"];
m11_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101"];
m11_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''pre-options'', lines[0])", span="102-102"];
m11_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103"];
m11_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''post-options'', lines[4])", span="106-106"];
m11_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m11_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79"];
m11_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m11_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m11_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m11_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m11_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m11_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m11_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m11_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m11_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''post-options'', lines[5])", span="63-63"];
m11_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m11_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m11_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130"];
m11_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="sut.MaximumDisplayWidth = 40", span="131-131"];
m11_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132"];
m11_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135"];
m11_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136"];
m11_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138"];
m11_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139"];
m11_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="140-140"];
m11_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="lines[6].Should().Be(''                Help Text.'')", span="141-141"];
m11_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m11_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m11_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150"];
m11_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="sut.MaximumDisplayWidth = 40", span="151-151"];
m11_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
m11_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
m11_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
m11_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
m11_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[4].Should().Be(''                After'')", span="158-158"];
m11_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m11_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160"];
m11_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[7].Should().Be(''                456789 After'')", span="161-161"];
m11_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m11_194 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m11_169 [cluster="Unk.True", file="SpecificationPropertyRules.cs", label="Entry Unk.True", span=""];
m11_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m11_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m11_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263"];
m11_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266"];
m11_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269"];
m11_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271"];
m11_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272"];
m11_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273"];
m11_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274"];
m11_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275"];
m11_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276"];
m11_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277"];
m11_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278"];
m11_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279"];
m11_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m11_168 [cluster="string.StartsWith(string, System.StringComparison)", file="SpecificationPropertyRules.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m11_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m11_36 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75"];
m11_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79"];
m11_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''pre-options'', lines[0])", span="80-80"];
m11_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81"];
m11_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82"];
m11_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''Triangle'', lines[3])", span="83-83"];
m11_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84"];
m11_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''post-options'', lines[5])", span="85-85"];
m11_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m11_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m11_45 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="13-13"];
m11_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m11_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText(''Heading Info.'')", span="170-170"];
m11_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="sut.MaximumDisplayWidth = 40", span="171-171"];
m11_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174"];
m11_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177"];
m11_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[1].Should().Be(''Before '')", span="178-178"];
m11_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179"];
m11_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[3].Should().Be(''012 After'')", span="180-180"];
m11_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181"];
m11_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182"];
m11_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183"];
m11_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m11_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m11_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m11_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m11_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m11_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316"];
m11_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324"];
m11_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327"];
m11_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330"];
m11_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332"];
m11_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333"];
m11_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334"];
m11_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335"];
m11_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336"];
m11_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337"];
m11_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m11_131 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="399-399"];
m11_152 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SpecificationPropertyRules.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m11_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m11_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
m11_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m11_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
m11_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
m11_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
m11_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m11_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323"];
m11_117 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m11_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m11_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m11_125 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m11_132 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="209-232"];
m11_133 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="err.Tag", span="211-211"];
m11_135 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214"];
m11_137 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216"];
m11_139 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218"];
m11_141 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220"];
m11_143 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222"];
m11_145 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224"];
m11_149 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228"];
m11_134 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.BadFormatTokenError", span="213-213"];
m11_136 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.MissingValueOptionError", span="215-215"];
m11_138 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.UnknownOptionError", span="217-217"];
m11_140 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.MissingRequiredOptionError", span="219-219"];
m11_142 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.MutuallyExclusiveSetError", span="221-221"];
m11_144 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.SequenceOutOfRangeError", span="223-223"];
m11_146 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.NoVerbSelectedError", span="225-225"];
m11_148 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="ErrorType.BadVerbSelectedError", span="227-227"];
m11_150 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="throw new InvalidOperationException();", span="230-230"];
m11_147 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return ''ERR no-verb-selected'';", span="226-226"];
m11_151 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="209-232"];
m11_60 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56"];
m11_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m11_75 [cluster="Unk.Should", file="SpecificationPropertyRules.cs", label="Entry Unk.Should", span=""];
m11_76 [cluster="Unk.Be", file="SpecificationPropertyRules.cs", label="Entry Unk.Be", span=""];
m11_4 [cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="427-427"];
m11_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="343-343"];
m11_195 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m11_102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m11_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m11_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m11_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m11_122 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m11_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m11_167 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252"];
m11_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m11_124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m11_21 [cluster="string.ToNotEmptyLines()", file="SpecificationPropertyRules.cs", label="Entry string.ToNotEmptyLines()", span="9-9"];
m11_118 [cluster="CommandLine.NullInstance.NullInstance()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m11_130 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m11_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m11_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m11_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m11_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m11_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m11_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m11_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m11_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m11_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m11_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m11_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m11_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m11_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m11_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208"];
m11_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232"];
m11_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235"];
m11_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var lines = errorsText.ToNotEmptyLines()", span="238-238"];
m11_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240"];
m11_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241"];
m11_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242"];
m11_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243"];
m11_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="244-244"];
m11_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245"];
m11_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246"];
m11_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247"];
m11_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m11_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m11_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294"];
m11_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297"];
m11_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300"];
m11_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302"];
m11_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303"];
m11_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304"];
m11_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305"];
m11_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306"];
m11_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307"];
m11_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m11_34 [cluster="string[].TrimStringArray()", file="SpecificationPropertyRules.cs", label="Entry string[].TrimStringArray()", span="14-14"];
m11_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m11_5 [cluster="Unk.Equal", file="SpecificationPropertyRules.cs", label="Entry Unk.Equal", span=""];
m11_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="SpecificationPropertyRules.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m12_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m12_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, file="Switch.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybeOrDefault(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", prediction=7, span="15-17"];
m12_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m12_5 [cluster="lambda expression", file="Switch.cs", label="Entry lambda expression", span="16-16"];
m12_6 [cluster="lambda expression", color=green, community=0, file="Switch.cs", label="t.IsName() && info.TargetType == TargetType.Switch", prediction=7, span="16-16"];
m12_7 [cluster="lambda expression", file="Switch.cs", label="Exit lambda expression", span="16-16"];
m12_8 [cluster="CommandLine.Core.Token.IsName()", file="Switch.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m12_4 [cluster="Unk.MapMaybeOrDefault", file="Switch.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m12_3 [cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m12_9 [file="Switch.cs", label=t, span=""];
m13_34 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m13_36 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="years.Length == 1", span="164-164"];
m13_37 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166"];
m13_38 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169"];
m13_40 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="i < years.Length", span="170-170"];
m13_41 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172"];
m13_43 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="next < years.Length", span="174-174"];
m13_44 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176"];
m13_39 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="var i = 0", span="170-170"];
m13_46 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="return yearsPart.ToString();", span="180-180"];
m13_42 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="var next = i + 1", span="173-173"];
m13_45 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="i++", span="170-170"];
m13_47 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m13_33 [cluster="System.Text.StringBuilder.Append(char)", file="TypeConverter.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m13_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m13_19 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m13_32 [cluster="System.Text.StringBuilder.Append(string)", file="TypeConverter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m13_20 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m13_21 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs", label="this.attribute = attribute", span="86-86"];
m13_22 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m13_31 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="TypeConverter.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m13_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m13_5 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="string.IsNullOrWhiteSpace(author)", span="62-62"];
m13_7 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="copyrightYears.Length == 0", span="63-63"];
m13_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="this.isSymbolUpper = isSymbolUpper", span="66-66"];
m13_11 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="this.author = author", span="67-67"];
m13_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="this.copyrightYears = copyrightYears", span="68-68"];
m13_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69"];
m13_6 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="throw new ArgumentException(''author'');", span="62-62"];
m13_8 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63"];
m13_9 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="int ExtraLength = 10", span="65-65"];
m13_14 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m13_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m13_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m13_48 [cluster="int.ToString(System.IFormatProvider)", file="TypeConverter.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m13_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m13_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs", label="attribute != null", span="140-140"];
m13_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs", label="return attribute.Copyright;", span="142-142"];
m13_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs", label="return new StringBuilder(builderSize)\r\n                .Append(CopyrightWord)\r\n                .Append(' ')\r\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\r\n                .Append(' ')\r\n                .Append(FormatYears(copyrightYears))\r\n                .Append(' ')\r\n                .Append(author)\r\n                .ToString();", span="145-153"];
m13_30 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m13_23 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m13_24 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs", label="return info.ToString();", span="131-131"];
m13_25 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m13_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="TypeConverter.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m13_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="TypeConverter.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m13_35 [cluster="System.Text.StringBuilder.ToString()", file="TypeConverter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m13_17 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="TypeConverter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m13_16 [cluster="System.ArgumentException.ArgumentException(string)", file="TypeConverter.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_15 [cluster="string.IsNullOrWhiteSpace(string)", file="TypeConverter.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m13_49 [file="TypeConverter.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m14_86 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="TypeDescriptor.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m14_17 [cluster="System.Type.GetVerbSpecification()", file="TypeDescriptor.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m14_31 [cluster="System.Text.StringBuilder.Append(char)", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m14_18 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TypeDescriptor.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m14_88 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90"];
m14_89 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93"];
m14_90 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90"];
m14_51 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58"];
m14_52 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="var builder = new StringBuilder()", span="60-60"];
m14_53 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="spec.TargetType", span="61-61"];
m14_55 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="64-64"];
m14_57 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="var sep = spec.SeperatorOrSpace()", span="67-67"];
m14_59 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70"];
m14_61 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72"];
m14_62 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="builder.TrimEndIfMatch(' ')", span="73-73"];
m14_63 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="return builder.ToString();", span="76-76"];
m14_54 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="TargetType.Scalar", span="63-63"];
m14_56 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="TargetType.Sequence", span="66-66"];
m14_58 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69"];
m14_60 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="e.MoveNext()", span="71-71"];
m14_64 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58"];
m14_68 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="TypeDescriptor.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m14_20 [cluster="object.IsEmpty()", file="TypeDescriptor.cs", label="Entry object.IsEmpty()", span="111-111"];
m14_70 [cluster="System.Func<T, TResult>.Invoke(T)", file="TypeDescriptor.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m14_102 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111"];
m14_103 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="value == null", span="113-113"];
m14_105 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114"];
m14_107 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="value is string && ((string)value).Length == 0", span="115-115"];
m14_109 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116"];
m14_104 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="return true;", span="113-113"];
m14_106 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="return true;", span="114-114"];
m14_108 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="return true;", span="115-115"];
m14_110 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="return true;", span="116-116"];
m14_111 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="return false;", span="117-117"];
m14_112 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111"];
m14_21 [cluster="Unk.Where", file="TypeDescriptor.cs", label="Entry Unk.Where", span=""];
m14_82 [cluster="string.Replace(string, string)", file="TypeDescriptor.cs", label="Entry string.Replace(string, string)", span="0-0"];
m14_94 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96"];
m14_95 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102"];
m14_96 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96"];
m14_19 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="TypeDescriptor.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m14_77 [cluster="T.ToMaybe<T>()", file="TypeDescriptor.cs", label="Entry T.ToMaybe<T>()", span="105-105"];
m14_81 [cluster="string.Contains(string)", file="TypeDescriptor.cs", label="Entry string.Contains(string)", span="0-0"];
m14_15 [cluster="object.GetType()", file="TypeDescriptor.cs", label="Entry object.GetType()", span="0-0"];
m14_91 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="93-93"];
m14_33 [cluster="lambda expression", file="TypeDescriptor.cs", label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37"];
m14_28 [cluster="lambda expression", file="TypeDescriptor.cs", label="builder.Append(verb.Name).Append(' ')", span="32-32"];
m14_44 [cluster="lambda expression", file="TypeDescriptor.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50"];
m14_48 [cluster="lambda expression", file="TypeDescriptor.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="52-52"];
m14_27 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="32-32"];
m14_32 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="37-37"];
m14_37 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="40-40"];
m14_40 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="45-45"];
m14_43 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="50-50"];
m14_47 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="52-52"];
m14_29 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="32-32"];
m14_34 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="37-37"];
m14_38 [cluster="lambda expression", file="TypeDescriptor.cs", label="i.Specification.Tag == SpecificationType.Option", span="40-40"];
m14_39 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="40-40"];
m14_41 [cluster="lambda expression", file="TypeDescriptor.cs", label="i.Specification.Tag == SpecificationType.Value", span="45-45"];
m14_42 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="45-45"];
m14_45 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="50-50"];
m14_49 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="52-52"];
m14_72 [cluster="lambda expression", file="TypeDescriptor.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69"];
m14_71 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="68-69"];
m14_73 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="68-69"];
m14_79 [cluster="lambda expression", file="TypeDescriptor.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82"];
m14_84 [cluster="lambda expression", file="TypeDescriptor.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87"];
m14_83 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="86-87"];
m14_78 [cluster="lambda expression", file="TypeDescriptor.cs", label="Entry lambda expression", span="81-82"];
m14_80 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="81-82"];
m14_85 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="86-87"];
m14_92 [cluster="lambda expression", file="TypeDescriptor.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="93-93"];
m14_93 [cluster="lambda expression", file="TypeDescriptor.cs", label="Exit lambda expression", span="93-93"];
m14_98 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m14_26 [cluster="string.TrimEnd(params char[])", file="TypeDescriptor.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m14_24 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
m14_113 [cluster="System.Type.GetDefaultValue()", file="TypeDescriptor.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m14_50 [cluster="Unk.FormatValue", file="TypeDescriptor.cs", label="Entry Unk.FormatValue", span=""];
m14_46 [cluster="Unk.FormatOption", file="TypeDescriptor.cs", label="Entry Unk.FormatOption", span=""];
m14_22 [cluster="Unk.UniqueName", file="TypeDescriptor.cs", label="Entry Unk.UniqueName", span=""];
m14_87 [cluster="string.JoinTo(params string[])", file="TypeDescriptor.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m14_25 [cluster="System.Text.StringBuilder.ToString()", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m14_67 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="TypeDescriptor.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90"];
m14_30 [cluster="System.Text.StringBuilder.Append(string)", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m14_97 [cluster="CommandLine.Core.OptionSpecification.FormatName()", file="TypeDescriptor.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105"];
m14_65 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79"];
m14_74 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82"];
m14_75 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87"];
m14_76 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79"];
m14_23 [cluster="Unk.ForEach", file="TypeDescriptor.cs", label="Entry Unk.ForEach", span=""];
m14_66 [cluster="System.Text.StringBuilder.Append(object)", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m14_16 [cluster="System.Text.StringBuilder.StringBuilder()", file="TypeDescriptor.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m14_114 [cluster="object.Equals(object)", file="TypeDescriptor.cs", label="Entry object.Equals(object)", span="0-0"];
m14_69 [cluster="System.Collections.IEnumerator.MoveNext()", file="TypeDescriptor.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m14_99 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105"];
m14_100 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs", label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108"];
m14_101 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105"];
m14_35 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="TypeDescriptor.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m14_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeDescriptor.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m14_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="options == null", span="26-26"];
m14_3 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="var type = options.GetType()", span="28-28"];
m14_6 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39"];
m14_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="throw new ArgumentNullException(''options'');", span="26-26"];
m14_4 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="var builder = new StringBuilder()", span="29-29"];
m14_5 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32"];
m14_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50"];
m14_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="builder.TrimEndIfMatch(' ')", span="51-51"];
m14_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52"];
m14_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55"];
m14_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="40-44"];
m14_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m14_36 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="TypeDescriptor.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m14_115 [file="TypeDescriptor.cs", label=builder, span=""];
m14_116 [file="TypeDescriptor.cs", label=T, span=""];
m14_117 [file="TypeDescriptor.cs", label=sep, span=""];
m14_118 [file="TypeDescriptor.cs", label=doubQt, span=""];
m15_33 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="28-28"];
m15_41 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m15_118 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m15_143 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m15_120 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="186-186"];
m15_121 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="188-189"];
m15_122 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="186-186"];
m15_82 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="154-154"];
m15_83 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="156-156"];
m15_84 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="157-157"];
m15_86 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="160-160"];
m15_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="163-163"];
m15_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="166-166"];
m15_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="172-172"];
m15_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="168-168"];
m15_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="169-169"];
m15_85 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="159-159"];
m15_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="162-162"];
m15_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="164-165"];
m15_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="167-167"];
m15_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="154-154"];
m15_30 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m15_99 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m15_36 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="224-224"];
m15_131 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="200-200"];
m15_133 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="205-210"];
m15_132 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && settings.NameStyleFormat == NameStyleFormat.PreferLongName", span="202-204"];
m15_134 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="200-200"];
m15_101 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_145 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="224-224"];
m15_148 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="227-227"];
m15_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="228-228"];
m15_146 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="226-226"];
m15_149 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="227-227"];
m15_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="228-228"];
m15_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="229-229"];
m15_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="230-230"];
m15_147 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="226-226"];
m15_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="229-229"];
m15_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="230-230"];
m15_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="231-231"];
m15_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="224-224"];
m15_38 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m15_136 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m15_47 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m15_114 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m15_35 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m15_67 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m15_109 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m15_113 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m15_31 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m15_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="177-178"];
m15_55 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="109-110"];
m15_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="109-110"];
m15_51 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="104-104"];
m15_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="115-115"];
m15_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="109-110"];
m15_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="132-132"];
m15_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="144-144"];
m15_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="148-148"];
m15_52 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="104-104"];
m15_53 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="104-104"];
m15_65 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="129-129"];
m15_63 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="115-115"];
m15_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="115-115"];
m15_64 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="129-129"];
m15_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="139-139"];
m15_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="132-132"];
m15_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="132-132"];
m15_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="148-148"];
m15_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="144-144"];
m15_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="144-144"];
m15_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="148-148"];
m15_104 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="165-165"];
m15_115 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="182-183"];
m15_123 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="189-189"];
m15_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="129-129"];
m15_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="139-139"];
m15_72 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="139-139"];
m15_103 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="164-165"];
m15_105 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="164-165"];
m15_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="182-183"];
m15_111 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="178-178"];
m15_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="182-183"];
m15_125 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="189-189"];
m15_124 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="189-189"];
m15_112 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="177-178"];
m15_130 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m15_50 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m15_102 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m15_142 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m15_46 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m15_54 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m15_42 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m15_158 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="131-131"];
m15_81 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m15_37 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m15_77 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m15_39 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m15_144 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m15_119 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m15_60 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="213-213"];
m15_34 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m15_49 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m15_129 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="200-200"];
m15_45 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m15_98 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="186-186"];
m15_96 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="175-175"];
m15_107 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="180-183"];
m15_106 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="177-178"];
m15_108 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="175-175"];
m15_48 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m15_97 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m15_44 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m15_135 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m15_32 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m15_29 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="30-30"];
m15_159 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m15_100 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m15_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="92-92"];
m15_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", prediction=9, span="106-113"];
m15_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="100-100"];
m15_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="103-104"];
m15_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="115-119"];
m15_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="132-135"];
m15_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="94-94"];
m15_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="97-97"];
m15_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="98-98"];
m15_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="101-101"];
m15_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="121-126"];
m15_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="128-130"];
m15_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="137-140"];
m15_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="145-146"];
m15_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="147-148"];
m15_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="150-151"];
m15_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="94-94"];
m15_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="96-96"];
m15_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="141-142"];
m15_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="143-144"];
m15_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="92-92"];
m15_126 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="192-192"];
m15_127 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", color=green, community=0, file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", prediction=10, span="194-197"];
m15_128 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="192-192"];
m15_43 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m15_58 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m15_28 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_59 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m15_137 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="213-213"];
m15_138 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="215-217"];
m15_139 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="219-219"];
m15_140 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="221-221"];
m15_141 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="213-213"];
m15_161 [file="UnParserExtensions.cs", label=T, span=""];
m15_160 [file="UnParserExtensions.cs", label=builder, span=""];
m15_163 [file="UnParserExtensions.cs", label=settings, span=""];
m15_162 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m15_164 [file="UnParserExtensions.cs", label=sep, span=""];
m15_165 [file="UnParserExtensions.cs", label=doubQt, span=""];
m16_0 [cluster="CommandLine.Tests.MyClass.MyClass()", file="ValueMapper.cs", label="Entry CommandLine.Tests.MyClass.MyClass()", span="5-5"];
m16_1 [cluster="CommandLine.Tests.MyClass.MyClass()", file="ValueMapper.cs", label="Exit CommandLine.Tests.MyClass.MyClass()", span="5-5"];
n14 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
n15 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", style=dashed];
n0 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_34 -> m0_40  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_34 -> m0_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_34 -> m0_43  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_34 -> m0_44  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_38 -> m0_44  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_38 -> m0_46  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_39 -> m0_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_39 -> m0_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=next, style=dashed];
m0_45 -> m0_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m0_49 -> m0_27  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_49 -> m0_28  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m0_49 -> m0_29  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m2_102 -> m2_120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_102 -> m2_122  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_102 -> m2_123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_102 -> m2_126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_102 -> m2_127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_124 -> m2_127  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_61 -> m2_176  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_426 -> m2_433  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_429 -> m2_436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_429 -> m2_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_430 -> m2_435  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m2_430 -> m2_445  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m2_431 -> m2_440  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m2_431 -> m2_445  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m2_436 -> m2_436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_436 -> m2_438  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_439 -> m2_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_444 -> m2_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_438 -> m2_438  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m2_325 -> m2_325  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m2_130 -> m2_206  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_206 -> m2_209  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m2_209 -> m2_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_340 -> m2_384  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_350  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_352  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_340 -> m2_355  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_340 -> m2_362  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_365  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_368  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_369  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_373  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_340 -> m2_374  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_349 -> m2_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_349 -> m2_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_354 -> m2_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_354 -> m2_357  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m2_354 -> m2_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m2_356 -> m2_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m2_359 -> m2_361  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_359 -> m2_362  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_359 -> m2_363  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_359 -> m2_365  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_359 -> m2_368  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_359 -> m2_369  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_372 -> m2_374  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m2_372 -> m2_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m2_358 -> m2_362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_358 -> m2_368  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_364 -> m2_367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_360 -> m2_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_360 -> m2_363  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_360 -> m2_365  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_360 -> m2_368  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_360 -> m2_369  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_360 -> m2_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_371 -> m2_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_367 -> m2_367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_422 -> m2_424  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_319 -> m2_321  [color=darkseagreen4, key=1, label=attr, style=dashed];
m2_386 -> m2_399  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_386 -> m2_405  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_395 -> m2_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_395 -> m2_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_76 -> m2_83  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_76 -> m2_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_76 -> m2_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_76 -> m2_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_83 -> m2_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_83 -> m2_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_86 -> m2_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_80 -> m2_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_82 -> m2_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_84 -> m2_86  [color=darkseagreen4, key=1, label=err, style=dashed];
m2_85 -> m2_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m2_168 -> m2_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_60 -> m2_182  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m2_60 -> m2_184  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m2_313 -> m2_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_228 -> m2_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_394 -> m2_462  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_394 -> m2_463  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_394 -> m2_464  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_394 -> m2_467  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_465 -> m2_469  [color=darkseagreen4, key=1, label=asEnumerable, style=dashed];
m2_468 -> m2_470  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_468 -> m2_471  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_25 -> m2_41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_25 -> m2_43  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_25 -> m2_44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_26 -> m2_32  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_26 -> m2_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_29 -> m2_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_31 -> m2_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_31 -> m2_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_34 -> m2_40  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
m2_41 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_32 -> m2_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label=heading, style=dashed];
m2_39 -> m2_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_40 -> m2_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m2_33 -> m2_39  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m2_179 -> m2_333  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m2_179 -> m2_338  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_330 -> m2_333  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m2_330 -> m2_338  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m2_332 -> m2_338  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m2_333 -> m2_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_301 -> m2_303  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_302 -> m2_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_275 -> m2_281  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_275 -> m2_282  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m2_275 -> m2_284  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_275 -> m2_285  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m2_275 -> m2_287  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_275 -> m2_288  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m2_275 -> m2_292  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m2_275 -> m2_293  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_275 -> m2_294  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m2_278 -> m2_280  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_278 -> m2_281  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_278 -> m2_282  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_278 -> m2_284  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_278 -> m2_287  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_278 -> m2_288  [color=darkseagreen4, key=1, label=words, style=dashed];
m2_291 -> m2_293  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_291 -> m2_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_277 -> m2_281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_277 -> m2_287  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_283 -> m2_286  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_279 -> m2_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_279 -> m2_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_279 -> m2_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_279 -> m2_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_279 -> m2_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_279 -> m2_290  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_290 -> m2_290  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_286 -> m2_286  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m2_10 -> m2_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_10 -> m2_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_390 -> m2_410  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m2_390 -> m2_414  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m2_407 -> m2_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_407 -> m2_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_143 -> m2_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_419 -> m2_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_188 -> m2_191  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_427 -> m2_452  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m2_450 -> m2_454  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m2_193 -> m2_196  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m2_193 -> m2_198  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_151 -> m2_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_159 -> m2_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_242 -> m2_244  [color=darkseagreen4, key=1, label=examples, style=dashed];
m2_250 -> m2_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_477 -> m2_136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_159  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_172  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_184  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_191  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_198  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_268  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_325  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_338  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_334  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_343  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_345  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_348  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_384  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_388  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_350  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_352  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_363  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_366  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_369  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_373  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_375  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_376  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_395  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_399  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_405  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_416  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_417  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_437  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_477 -> m2_442  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_478 -> m2_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_478 -> m2_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_478 -> m2_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m2_479 -> m2_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_479 -> m2_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m2_480 -> m2_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m2_482 -> m2_338  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_483 -> m2_338  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m2_484 -> m2_338  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m2_485 -> m2_384  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_485 -> m2_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_486 -> m2_384  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_486 -> m2_388  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_488 -> m2_399  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_488 -> m2_405  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_489 -> m2_410  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m2_489 -> m2_414  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=ae, style=dashed];
m3_13 -> m3_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
m5_7 -> m5_20  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_7 -> m5_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_7 -> m5_27  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_8 -> m5_15  [color=green, key=1, label="lambda expression", style=dashed];
m5_8 -> m5_19  [color=green, key=1, label="lambda expression", style=dashed];
m5_20 -> m5_26  [color=green, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m5_0 -> m5_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m5_0 -> m5_20  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m5_0 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_1 -> m5_7  [color=green, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_40 -> m5_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m5_41 -> m5_8  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m5_41 -> m5_20  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m5_42 -> m5_8  [color=green, key=1, label="System.StringComparer", style=dashed];
m5_42 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_43 -> m5_20  [color=green, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_43 -> m5_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m5_43 -> m5_27  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m8_0 -> m8_5  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_0 -> m8_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_1 -> m8_4  [color=green, key=1, label="lambda expression", style=dashed];
m8_1 -> m8_1  [color=green, key=1, label=tseq, style=dashed];
m8_5 -> m8_11  [color=green, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_30 -> m8_30  [color=green, key=1, label="CommandLine.Core.TypeDescriptor", style=dashed];
m8_30 -> m8_32  [color=green, key=1, label="lambda expression", style=dashed];
m8_30 -> m8_36  [color=green, key=1, label="lambda expression", style=dashed];
m8_16 -> m8_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_16 -> m8_19  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_16 -> m8_30  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_16 -> m8_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_17 -> m8_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_17 -> m8_19  [color=green, key=1, label=nameIndex, style=dashed];
m8_17 -> m8_30  [color=green, key=1, label=nameIndex, style=dashed];
m8_17 -> m8_33  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m8_19 -> m8_19  [color=green, key=1, label="CommandLine.Core.TypeDescriptor", style=dashed];
m8_19 -> m8_29  [color=green, key=1, label="lambda expression", style=dashed];
m8_19 -> m8_30  [color=green, key=1, label="CommandLine.Core.TypeDescriptor", style=dashed];
m8_19 -> m8_39  [color=green, key=1, label="lambda expression", style=dashed];
m8_42 -> m8_5  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_42 -> m8_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_43 -> m8_5  [color=green, key=1, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m8_44 -> m8_12  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_45 -> m8_26  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_46 -> m8_30  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_46 -> m8_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_47 -> m8_30  [color=green, key=1, label="CommandLine.Core.TypeDescriptor", style=dashed];
m8_48 -> m8_30  [color=green, key=1, label=nameIndex, style=dashed];
m8_48 -> m8_33  [color=darkseagreen4, key=1, label=nameIndex, style=dashed];
m10_3 -> m10_12  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m10_3 -> m10_28  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m10_3 -> m10_41  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionMap", style=dashed];
m10_3 -> m10_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_4 -> m10_12  [color=darkseagreen4, key=1, label=group, style=dashed];
m10_4 -> m10_15  [color=darkseagreen4, key=1, label=group, style=dashed];
m10_4 -> m10_23  [color=darkseagreen4, key=1, label=group, style=dashed];
m10_4 -> m10_41  [color=darkseagreen4, key=1, label=group, style=dashed];
m10_6 -> m10_10  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_11  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_16  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_19  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_21  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_26  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_30  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_33  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_35  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_39  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_6 -> m10_43  [color=darkseagreen4, key=1, label=option, style=dashed];
m10_17 -> m10_20  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m10_24 -> m10_27  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m10_31 -> m10_34  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m10_37 -> m10_40  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m10_62 -> m10_8  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m10_62 -> m10_19  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m10_62 -> m10_26  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m10_62 -> m10_33  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m10_62 -> m10_39  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m11_48 -> m11_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_48 -> m11_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_24 -> m11_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_24 -> m11_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_24 -> m11_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_24 -> m11_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_24 -> m11_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_63 -> m11_65  [color=darkseagreen4, key=1, label=sut, style=dashed];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_66 -> m11_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_66 -> m11_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_66 -> m11_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_78 -> m11_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m11_81 -> m11_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_81 -> m11_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_81 -> m11_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_81 -> m11_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_81 -> m11_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_156 -> m11_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_37 -> m11_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_37 -> m11_40  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_37 -> m11_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_37 -> m11_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_37 -> m11_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_91 -> m11_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m11_94 -> m11_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_94 -> m11_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_94 -> m11_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_94 -> m11_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_94 -> m11_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_185 -> m11_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_185 -> m11_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_185 -> m11_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_185 -> m11_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_185 -> m11_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_132 -> m11_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_132 -> m11_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_8 -> m11_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_8 -> m11_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_8 -> m11_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_8 -> m11_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_105 -> m11_133  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_105 -> m11_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_107 -> m11_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_173 -> m11_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_173 -> m11_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_173 -> m11_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_173 -> m11_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m11_173 -> m11_179  [color=darkseagreen4, key=1, label=lines, style=dashed];
m12_1 -> m12_1  [color=green, key=1, label=t, style=dashed];
m12_1 -> m12_5  [color=green, key=1, label="lambda expression", style=dashed];
m12_1 -> m12_6  [color=green, key=1, label=t, style=dashed];
m12_9 -> m12_6  [color=green, key=1, label=t, style=dashed];
m13_34 -> m13_37  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m13_34 -> m13_40  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m13_34 -> m13_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m13_34 -> m13_43  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m13_34 -> m13_44  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m13_38 -> m13_41  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m13_38 -> m13_44  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m13_38 -> m13_46  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m13_39 -> m13_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_39 -> m13_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_39 -> m13_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_42 -> m13_44  [color=darkseagreen4, key=1, label=next, style=dashed];
m13_45 -> m13_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_4 -> m13_7  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m13_49 -> m13_27  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m13_49 -> m13_28  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m13_49 -> m13_29  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m14_89 -> m14_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_51 -> m14_53  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m14_51 -> m14_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_52 -> m14_55  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_52 -> m14_61  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_52 -> m14_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_52 -> m14_63  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_57 -> m14_72  [color=darkseagreen4, key=1, label=sep, style=dashed];
m14_57 -> m14_61  [color=darkseagreen4, key=1, label=sep, style=dashed];
m14_59 -> m14_61  [color=darkseagreen4, key=1, label=e, style=dashed];
m14_58 -> m14_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_58 -> m14_61  [color=darkseagreen4, key=1, label=fmtWithQuotesIfStr, style=dashed];
m14_102 -> m14_105  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_102 -> m14_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_102 -> m14_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_65 -> m14_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_74 -> m14_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_74 -> m14_84  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m14_75 -> m14_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3 -> m14_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m14_6 -> m14_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_4 -> m14_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_10  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_11  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_4 -> m14_12  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_5 -> m14_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_9 -> m14_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_11 -> m14_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_7 -> m14_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_7 -> m14_9  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m14_115 -> m14_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_115 -> m14_44  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_115 -> m14_48  [color=darkseagreen4, key=1, label=builder, style=dashed];
m14_117 -> m14_72  [color=darkseagreen4, key=1, label=sep, style=dashed];
m14_118 -> m14_84  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m15_121 -> m15_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_82 -> m15_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_82 -> m15_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_83 -> m15_86  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_83 -> m15_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_83 -> m15_93  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_83 -> m15_94  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_88 -> m15_104  [color=darkseagreen4, key=1, label=sep, style=dashed];
m15_88 -> m15_92  [color=darkseagreen4, key=1, label=sep, style=dashed];
m15_90 -> m15_92  [color=darkseagreen4, key=1, label=e, style=dashed];
m15_89 -> m15_92  [color=darkseagreen4, key=1, label=format, style=dashed];
m15_89 -> m15_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_131 -> m15_133  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m15_145 -> m15_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_145 -> m15_150  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_145 -> m15_152  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_145 -> m15_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_96 -> m15_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_107 -> m15_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_106 -> m15_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_106 -> m15_116  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m15_7 -> m15_11  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m15_16 -> m15_55  [color=green, key=1, label="lambda expression", style=dashed];
m15_13 -> m15_15  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_15 -> m15_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_17 -> m15_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_20 -> m15_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_20 -> m15_24  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m15_20 -> m15_25  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m15_14 -> m15_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_18 -> m15_65  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m15_19 -> m15_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_19 -> m15_22  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m15_19 -> m15_23  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m15_21 -> m15_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_21 -> m15_23  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_21 -> m15_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_21 -> m15_24  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_21 -> m15_25  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_21 -> m15_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_21 -> m15_26  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_25 -> m15_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_10 -> m15_75  [color=darkseagreen4, key=1, label=settings, style=dashed];
m15_10 -> m15_23  [color=darkseagreen4, key=1, label=settings, style=dashed];
m15_23 -> m15_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_137 -> m15_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_137 -> m15_140  [color=darkseagreen4, key=1, label=object, style=dashed];
m15_160 -> m15_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_160 -> m15_79  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_160 -> m15_52  [color=darkseagreen4, key=1, label=builder, style=dashed];
m15_163 -> m15_75  [color=darkseagreen4, key=1, label=settings, style=dashed];
m15_162 -> m15_65  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m15_164 -> m15_104  [color=darkseagreen4, key=1, label=sep, style=dashed];
m15_165 -> m15_116  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
