digraph  {
m3_0 [label="Entry CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", span="30-30", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="InstanceChooser.cs"];
m3_1 [label="overrides != null", span="32-32", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="InstanceChooser.cs"];
m3_2 [label="_overrides = overrides.ToDictionary(attr => attr.GetType(), attr => attr)", span="34-34", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="InstanceChooser.cs"];
m3_3 [label="_overrides = null", span="38-38", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="InstanceChooser.cs"];
m3_4 [label="Exit CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", span="30-30", cluster="CommandLine.Infrastructure.ReflectionHelper.SetAttributeOverride(System.Collections.Generic.IEnumerable<System.Attribute>)", file="InstanceChooser.cs"];
m3_25 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InstanceChooser.cs"];
m3_60 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", span="102-102", cluster="CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", file="InstanceChooser.cs"];
m3_23 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", span="102-102", cluster="CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", file="InstanceChooser.cs"];
m3_57 [label="var assembly = Assembly.GetEntryAssembly()", span="104-104", cluster="CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", file="InstanceChooser.cs"];
m3_58 [label="assembly = assembly ?? Assembly.GetExecutingAssembly()", span="107-107", cluster="CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", file="InstanceChooser.cs"];
m3_59 [label="return assembly;", span="110-110", cluster="CommandLine.Infrastructure.ReflectionHelper.GetExecutingOrEntryAssembly()", file="InstanceChooser.cs"];
m3_39 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="InstanceChooser.cs"];
m3_27 [label="var assembly = GetExecutingOrEntryAssembly()", span="69-69", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="InstanceChooser.cs"];
m3_26 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="67-67", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="InstanceChooser.cs"];
m3_28 [label="return assembly.GetName().Name;", span="70-70", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="InstanceChooser.cs"];
m3_29 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="67-67", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="InstanceChooser.cs"];
m3_49 [label="Entry System.Type.CreateDefaultForImmutable()", span="153-153", cluster="System.Type.CreateDefaultForImmutable()", file="InstanceChooser.cs"];
m3_48 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="InstanceChooser.cs"];
m3_16 [label="var assembly = GetExecutingOrEntryAssembly()", span="54-54", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_13 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="42-42", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_14 [label="_overrides != null", span="46-46", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_15 [label="return \r\n                    _overrides.ContainsKey(typeof(TAttribute)) ?\r\n                        Maybe.Just((TAttribute)_overrides[typeof(TAttribute)]) :\r\n                        Maybe.Nothing< TAttribute>();", span="48-51", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_17 [label="var attributes = assembly.GetCustomAttributes<TAttribute>().ToArray()", span="59-59", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_18 [label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="62-64", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=red, community=0, file="InstanceChooser.cs"];
m3_19 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="42-42", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooser.cs"];
m3_35 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="InstanceChooser.cs"];
m3_46 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="InstanceChooser.cs"];
m3_51 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="InstanceChooser.cs"];
m3_21 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceChooser.cs"];
m3_9 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="InstanceChooser.cs"];
m3_10 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_6 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_7 [label="attr.GetType()", span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_8 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_11 [label=attr, span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_12 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooser.cs"];
m3_52 [label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="94-94", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="InstanceChooser.cs"];
m3_53 [label="var ctor = type.GetTypeInfo().GetConstructor(constructorTypes)", span="96-96", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="InstanceChooser.cs"];
m3_54 [label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="97-98", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="InstanceChooser.cs"];
m3_55 [label="return ctor.Invoke(values);", span="99-99", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="InstanceChooser.cs"];
m3_56 [label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="94-94", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="InstanceChooser.cs"];
m3_40 [label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="85-85", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_41 [label="var t = typeof(T)", span="87-87", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_42 [label="var ctor = t.GetTypeInfo().GetConstructor(constructorTypes)", span="88-88", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_43 [label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="89-90", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_44 [label="return (T)ctor.Invoke(values);", span="91-91", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_45 [label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="85-85", cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="InstanceChooser.cs"];
m3_36 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="79-79", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="InstanceChooser.cs"];
m3_37 [label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="81-82", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="InstanceChooser.cs"];
m3_38 [label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="79-79", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="InstanceChooser.cs"];
m3_20 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="InstanceChooser.cs"];
m3_62 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="InstanceChooser.cs"];
m3_61 [label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetEntryAssembly()", file="InstanceChooser.cs"];
m3_47 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="InstanceChooser.cs"];
m3_22 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceChooser.cs"];
m3_30 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="InstanceChooser.cs"];
m3_24 [label="Entry System.Reflection.Assembly.GetCustomAttributes<T>()", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes<T>()", file="InstanceChooser.cs"];
m3_32 [label="var assembly = GetExecutingOrEntryAssembly()", span="75-75", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="InstanceChooser.cs"];
m3_31 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="73-73", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="InstanceChooser.cs"];
m3_33 [label="return assembly.GetName().Version.ToStringInvariant();", span="76-76", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="InstanceChooser.cs"];
m3_34 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="73-73", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="InstanceChooser.cs"];
m3_50 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="InstanceChooser.cs"];
m3_5 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="InstanceChooser.cs"];
m4_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooserTests.cs"];
m4_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooserTests.cs"];
m4_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="21-25", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooserTests.cs"];
m4_4 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooserTests.cs"];
m4_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=red, community=0, file="InstanceChooserTests.cs"];
m4_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="InstanceChooserTests.cs"];
m4_8 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceChooserTests.cs"];
m4_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="InstanceChooserTests.cs"];
m4_10 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="InstanceChooserTests.cs"];
m4_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooserTests.cs"];
m4_13 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceChooserTests.cs"];
m4_15 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceChooserTests.cs"];
m4_14 [label="Entry Unk.All", span="", cluster="Unk.All", file="InstanceChooserTests.cs"];
m4_41 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_17 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="30-30", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_16 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_21 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_20 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_18 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_24 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_25 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_26 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_36 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="56-56", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_35 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_39 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_38 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_37 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_40 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_42 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_43 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="InstanceChooserTests.cs"];
m4_19 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceChooserTests.cs"];
m4_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="InstanceChooserTests.cs"];
m4_11 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="InstanceChooserTests.cs"];
m4_28 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="InstanceChooserTests.cs"];
m4_23 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="InstanceChooserTests.cs"];
m4_12 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="InstanceChooserTests.cs"];
m4_29 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooserTests.cs"];
m4_30 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="43-46", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooserTests.cs"];
m4_31 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="47-51", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=red, community=0, file="InstanceChooserTests.cs"];
m4_33 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="60-60", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooserTests.cs"];
m4_32 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="54-57", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooserTests.cs"];
m4_34 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="InstanceChooserTests.cs"];
m4_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="InstanceChooserTests.cs"];
m4_44 [label=specs, span="", file="InstanceChooserTests.cs"];
m4_45 [label=result, span="", file="InstanceChooserTests.cs"];
m4_46 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="InstanceChooserTests.cs"];
m4_47 [label=specs, span="", file="InstanceChooserTests.cs"];
m4_48 [label=result, span="", file="InstanceChooserTests.cs"];
m4_49 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="InstanceChooserTests.cs"];
m5_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_9 [label="configuration == null", span="38-38", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_12 [label="configuration(settings)", span="41-41", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_10 [label="throw new ArgumentNullException(''configuration'');", span="38-38", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_11 [label="settings = new ParserSettings()", span="40-40", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_13 [label="settings.Consumed = true", span="42-42", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_14 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m5_20 [label="Entry CommandLine.Parser.~Parser()", span="54-54", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m5_21 [label="Dispose(false)", span="56-56", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m5_22 [label="Exit CommandLine.Parser.~Parser()", span="54-54", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m5_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Parser.cs"];
m5_58 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_59 [label="args == null", span="143-143", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_61 [label="types == null", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_63 [label="types.Length == 0", span="145-145", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_65 [label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="147-154", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_60 [label="throw new ArgumentNullException(''args'');", span="143-143", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_62 [label="throw new ArgumentNullException(''types'');", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_64 [label="throw new ArgumentOutOfRangeException(''types'');", span="145-145", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_66 [label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m5_3 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m5_17 [label="this.settings = settings", span="47-47", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m5_18 [label="this.settings.Consumed = true", span="48-48", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m5_19 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m5_67 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs"];
m5_42 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_43 [label="factory == null", span="115-115", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_47 [label="args == null", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_49 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="119-126", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_44 [label="throw new ArgumentNullException(''factory'');", span="115-115", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_45 [label="!typeof(T).IsMutable()", span="116-116", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_46 [label="throw new ArgumentException(''factory'');", span="116-116", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_48 [label="throw new ArgumentNullException(''args'');", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_50 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_51 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs"];
m5_105 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Parser.cs"];
m5_4 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs"];
m5_71 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs"];
m5_90 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m5_5 [label="Entry CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m5_6 [label="settings = new ParserSettings { Consumed = true }", span="27-27", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m5_7 [label="Exit CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m5_96 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Parser.cs"];
m5_98 [label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="196-196", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m5_109 [label="parserResult.Errors.Any()", span="198-198", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=red, community=0, file="Parser.cs"];
m5_110 [label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="200-200", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", color=red, community=0, file="Parser.cs"];
m5_111 [label="return parserResult;", span="203-203", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m5_112 [label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="196-196", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m5_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs"];
m5_116 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="Parser.cs"];
m5_0 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Parser.cs"];
m5_1 [label="new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="20-20", cluster="lambda expression", file="Parser.cs"];
m5_2 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Parser.cs"];
m5_35 [label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="93-98", cluster="lambda expression", file="Parser.cs"];
m5_34 [label="Entry lambda expression", span="93-98", cluster="lambda expression", file="Parser.cs"];
m5_36 [label="Exit lambda expression", span="93-98", cluster="lambda expression", file="Parser.cs"];
m5_38 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="Parser.cs"];
m5_39 [label="Tokenize(arguments, optionSpecs, settings)", span="95-95", cluster="lambda expression", file="Parser.cs"];
m5_40 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="Parser.cs"];
m5_53 [label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="120-125", cluster="lambda expression", file="Parser.cs"];
m5_52 [label="Entry lambda expression", span="120-125", cluster="lambda expression", file="Parser.cs"];
m5_54 [label="Exit lambda expression", span="120-125", cluster="lambda expression", file="Parser.cs"];
m5_55 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="Parser.cs"];
m5_56 [label="Tokenize(arguments, optionSpecs, settings)", span="122-122", cluster="lambda expression", file="Parser.cs"];
m5_57 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="Parser.cs"];
m5_69 [label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="148-153", cluster="lambda expression", file="Parser.cs"];
m5_68 [label="Entry lambda expression", span="148-153", cluster="lambda expression", file="Parser.cs"];
m5_70 [label="Exit lambda expression", span="148-153", cluster="lambda expression", file="Parser.cs"];
m5_72 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="Parser.cs"];
m5_73 [label="Tokenize(arguments, optionSpecs, settings)", span="149-149", cluster="lambda expression", file="Parser.cs"];
m5_74 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="Parser.cs"];
m5_85 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="176-176", cluster="lambda expression", file="Parser.cs"];
m5_88 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="176-176", cluster="lambda expression", file="Parser.cs"];
m5_92 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="177-177", cluster="lambda expression", file="Parser.cs"];
m5_84 [label="Entry lambda expression", span="175-176", cluster="lambda expression", file="Parser.cs"];
m5_91 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="Parser.cs"];
m5_86 [label="Exit lambda expression", span="175-176", cluster="lambda expression", file="Parser.cs"];
m5_87 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="Parser.cs"];
m5_89 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="Parser.cs"];
m5_93 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="Parser.cs"];
m5_102 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="Parser.cs"];
m5_103 [label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="192-192", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m5_104 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="Parser.cs"];
m5_106 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="Parser.cs"];
m5_107 [label="e.Tag != ErrorType.UnknownOptionError", span="192-192", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m5_108 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="Parser.cs"];
m5_117 [label="writer.Write(HelpText.AutoBuild(parserResult))", span="200-200", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m5_118 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="Parser.cs"];
m5_114 [label="Entry T.ToMaybe<T>()", span="79-79", cluster="T.ToMaybe<T>()", file="Parser.cs"];
m5_97 [label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="189-189", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs"];
m5_99 [label="return ignoreUnknownArguments\r\n                       ? parserResult.MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                       : parserResult;", span="191-193", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", color=red, community=0, file="Parser.cs"];
m5_100 [label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="189-189", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs"];
m5_101 [label="Entry Unk.MapErrors", span="", cluster="Unk.MapErrors", file="Parser.cs"];
m5_31 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Parser.cs"];
m5_119 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs"];
m5_115 [label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="108-108", cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs"];
m5_83 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Parser.cs"];
m5_82 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Parser.cs"];
m5_79 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="Parser.cs"];
m5_128 [label="Entry CommandLine.ParserSettings.Dispose()", span="119-119", cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs"];
m5_30 [label="Entry System.Type.IsMutable()", span="115-115", cluster="System.Type.IsMutable()", file="Parser.cs"];
m5_33 [label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="180-180", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_94 [label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="182-186", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_95 [label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="180-180", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_32 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Parser.cs"];
m5_75 [label="Entry CommandLine.Parser.Dispose()", span="160-160", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m5_76 [label="Dispose(true)", span="162-162", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m5_77 [label="GC.SuppressFinalize(this)", span="164-164", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m5_78 [label="Exit CommandLine.Parser.Dispose()", span="160-160", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m5_24 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_25 [label="args == null", span="86-86", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_28 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="92-99", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_26 [label="throw new ArgumentNullException(''args'');", span="86-86", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_27 [label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="88-90", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_29 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m5_41 [label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_80 [label="return settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer));", span="172-177", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_81 [label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m5_37 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs"];
m5_23 [label="Entry CommandLine.Parser.Dispose(bool)", span="206-206", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_121 [label=disposed, span="208-208", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_123 [label=disposing, span="213-213", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_122 [label="return;", span="210-210", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_124 [label="settings != null", span="215-215", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_125 [label="settings.Dispose()", span="217-217", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_126 [label="disposed = true", span="220-220", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_127 [label="Exit CommandLine.Parser.Dispose(bool)", span="206-206", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m5_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m5_120 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="Parser.cs"];
m5_129 [label="CommandLine.Parser", span="", file="Parser.cs"];
m5_130 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m5_131 [label=factory, span="", file="Parser.cs"];
m5_132 [label="System.Func<T>", span="", file="Parser.cs"];
m5_133 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m5_134 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m5_135 [label="params System.Type[]", span="", file="Parser.cs"];
m5_136 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="Parser.cs"];
m5_137 [label="CommandLine.ParserSettings", span="", file="Parser.cs"];
m5_138 [label="CommandLine.ParserResult<T>", span="", file="Parser.cs"];
m6_49 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="ParserResult.cs"];
m6_6 [label="return ExpectingCountYieldingImpl(source, count, errorSelector);", span="41-41", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_29 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ParserResult.cs"];
m6_57 [label="Entry CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="357-357", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_58 [label="var e = source.GetEnumerator()", span="359-359", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_61 [label="yield return e.Current;", span="363-363", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_59 [label="e.MoveNext()", span="361-361", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_60 [label="e.MoveNext()", span="362-362", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_62 [label="throw new ArgumentException(''Source sequence cannot be empty.'', ''source'');", span="365-365", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_63 [label="Exit CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="357-357", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_5 [label="return source;", span="38-38", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_55 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="ParserResult.cs"];
m6_10 [label="Entry int.ToOrdinalWords(Humanizer.GrammaticalGender)", span="79-79", cluster="int.ToOrdinalWords(Humanizer.GrammaticalGender)", file="ParserResult.cs"];
m6_11 [label="var iterations = 0", span="47-47", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=red, community=0, file="ParserResult.cs"];
m6_16 [label="yield return element;", span="55-55", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_12 [label=source, span="48-48", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_14 [label="iterations > count", span="51-51", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_15 [label="throw errorSelector(1, count);", span="53-53", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_17 [label="iterations != count", span="57-57", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_18 [label="throw errorSelector(-1, count);", span="59-59", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_13 [label="iterations++", span="50-50", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_19 [label="Exit CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="44-44", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_65 [label="Entry CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="372-372", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_66 [label="var e = source.GetEnumerator()", span="374-374", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_69 [label="yield return e.Current;", span="378-378", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_67 [label="e.MoveNext()", span="376-376", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_68 [label="e.MoveNext()", span="377-377", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_70 [label="Exit CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="372-372", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_2 [label="collection != null", span="34-34", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_3 [label="collection.Count != count", span="36-36", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_4 [label="throw errorSelector(collection.Count.CompareTo(count), count);", span="37-37", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_64 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="ParserResult.cs"];
m6_0 [label="Entry CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="30-30", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_1 [label="var collection = source as ICollection<TSource>", span="33-33", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", file="ParserResult.cs"];
m6_7 [label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="56-56", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="ParserResult.cs"];
m6_30 [label="Entry CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="270-270", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_31 [label="source == null", span="272-272", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_33 [label="resultSelector == null", span="273-273", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_35 [label="return PairwiseImpl(source, resultSelector);", span="275-275", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_32 [label="throw new ArgumentNullException(''source'');", span="272-272", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_34 [label="throw new ArgumentNullException(''resultSelector'');", span="273-273", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_36 [label="Exit CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="270-270", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_8 [label="Entry int.CompareTo(int)", span="0-0", cluster="int.CompareTo(int)", color=green, community=0, file="ParserResult.cs"];
m6_9 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ParserResult.cs"];
m6_20 [label="Entry CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="251-251", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_21 [label="source == null", span="253-253", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_23 [label="action == null", span="254-254", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_25 [label=source, span="256-256", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_26 [label="action(element)", span="258-258", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_22 [label="throw new ArgumentNullException(''source'');", span="253-253", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_24 [label="throw new ArgumentNullException(''action'');", span="254-254", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_27 [label="Exit CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="251-251", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", file="ParserResult.cs"];
m6_56 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="ParserResult.cs"];
m6_37 [label="Entry CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="278-278", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_38 [label="Debug.Assert(source != null)", span="280-280", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_42 [label="yield break;", span="286-286", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_45 [label="yield return resultSelector(previous, e.Current);", span="291-291", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_39 [label="Debug.Assert(resultSelector != null)", span="281-281", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_40 [label="var e = source.GetEnumerator()", span="283-283", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_41 [label="!e.MoveNext()", span="285-285", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_43 [label="var previous = e.Current", span="288-288", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_44 [label="e.MoveNext()", span="289-289", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_46 [label="previous = e.Current", span="292-292", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_47 [label="Exit CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="278-278", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="ParserResult.cs"];
m6_50 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="ParserResult.cs"];
m6_48 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)", file="ParserResult.cs"];
m6_51 [label="Entry CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="342-342", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_52 [label="var e = source.GetEnumerator()", span="344-344", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_53 [label="return e.MoveNext()\r\n                    ? Maybe.Just(e.Current)\r\n                    : Maybe.Nothing<T>();", span="346-348", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_54 [label="Exit CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="342-342", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", file="ParserResult.cs"];
m6_28 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ParserResult.cs"];
m8_21 [label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15", cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="ReflectionExtensions.cs"];
m8_135 [label="Entry NameInfo.cstr", span="", cluster="NameInfo.cstr", file="ReflectionExtensions.cs"];
m8_4 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ReflectionExtensions.cs"];
m8_8 [label="return specProps =>\r\n            {\r\n                var options = specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0);\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="26-41", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ReflectionExtensions.cs"];
m8_9 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ReflectionExtensions.cs"];
m8_131 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="ReflectionExtensions.cs"];
m8_6 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="87-87", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ReflectionExtensions.cs"];
m8_102 [label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        );\r\n                    if (options.Any())\r\n                    {\r\n                        return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="89-105", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ReflectionExtensions.cs"];
m8_103 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="87-87", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ReflectionExtensions.cs"];
m8_49 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m8_139 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()", file="ReflectionExtensions.cs"];
m8_110 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ReflectionExtensions.cs"];
m8_95 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="ReflectionExtensions.cs"];
m8_17 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ReflectionExtensions.cs"];
m8_22 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs"];
m8_75 [label="Entry Unk.IsNothing", span="", cluster="Unk.IsNothing", file="ReflectionExtensions.cs"];
m8_50 [label="Entry Unk.FromSpecification", span="", cluster="Unk.FromSpecification", file="ReflectionExtensions.cs"];
m8_7 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="108-108", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_122 [label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="110-128", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_123 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="108-108", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_91 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ReflectionExtensions.cs"];
m8_111 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m8_0 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_1 [label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_2 [label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionExtensions.cs"];
m8_136 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_11 [label="var options = specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0)", span="28-31", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_10 [label="Entry lambda expression", span="26-41", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_12 [label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="32-32", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_23 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_27 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_31 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_14 [label="return\r\n                            from s in options\r\n                            select new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification());", span="35-38", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_13 [label="groups.Count() > 1", span="33-33", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_34 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_15 [label="return Enumerable.Empty<Error>();", span="40-40", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_16 [label="Exit lambda expression", span="26-41", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_24 [label="sp.Specification.IsOption()", span="29-29", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_25 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_28 [label="sp.Value.IsJust()", span="30-30", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_29 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_32 [label="((OptionSpecification)sp.Specification).SetName.Length > 0", span="31-31", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_33 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_35 [label="((OptionSpecification)g.Specification).SetName", span="32-32", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_36 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_40 [label="var setCount =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()\r\n                        .Count()", span="48-53", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_41 [label="var setWithRequired =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()", span="55-60", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_42 [label="var missing =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Where(sp => sp.Value.IsNothing())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length == 0)\r\n                        .Concat(\r\n                            specProps.Where(sp => sp.Specification.IsOption())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())\r\n                                .Where(\r\n                                    sp =>\r\n                                        ((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))))\r\n                        .Concat(\r\n                            specProps\r\n                                .Where(sp => sp.Specification.IsValue())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())).ToList()", span="62-81", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_39 [label="Entry lambda expression", span="46-84", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_51 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_54 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_89 [label="((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))", span="73-76", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_57 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_60 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_63 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_43 [label="return from sp in missing select new MissingRequiredOptionError(sp.Specification.FromSpecification());", span="83-83", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_66 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_69 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_72 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_76 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_79 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_82 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_85 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_88 [label="Entry lambda expression", span="72-76", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_92 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_96 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_99 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_44 [label="Exit lambda expression", span="46-84", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_52 [label="sp.Specification.IsOption()", span="49-49", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_53 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_55 [label="((OptionSpecification)sp.Specification).SetName", span="50-50", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_56 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_58 [label="sp.Specification.IsOption()", span="56-56", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_59 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_61 [label="sp.Specification.Required", span="57-57", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_62 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_64 [label="((OptionSpecification)sp.Specification).SetName", span="58-58", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_65 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_67 [label="sp.Specification.IsOption()", span="63-63", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_68 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_70 [label="sp.Specification.Required", span="64-64", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_71 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_73 [label="sp.Value.IsNothing()", span="65-65", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_74 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_77 [label="((OptionSpecification)sp.Specification).SetName.Length == 0", span="66-66", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_78 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_80 [label="sp.Specification.IsOption()", span="68-68", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_81 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_83 [label="sp.Specification.Required", span="69-69", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_84 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_86 [label="sp.Value.IsNothing()", span="70-70", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_87 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_90 [label="Exit lambda expression", span="72-76", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_93 [label="sp.Specification.IsValue()", span="79-79", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_94 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_97 [label="sp.Specification.Required", span="80-80", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_98 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_100 [label="sp.Value.IsNothing()", span="81-81", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_101 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_105 [label="var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="91-97", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_104 [label="Entry lambda expression", span="89-105", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_106 [label="options.Any()", span="98-98", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_112 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_115 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_118 [label="Entry lambda expression", span="94-96", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_107 [label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="100-102", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_108 [label="return Enumerable.Empty<Error>();", span="104-104", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_109 [label="Exit lambda expression", span="89-105", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_113 [label="sp.Specification.TargetType == TargetType.Sequence", span="92-92", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_114 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_116 [label="sp.Value.IsJust()", span="93-93", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_117 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_119 [label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="95-96", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_120 [label="Exit lambda expression", span="94-96", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_126 [label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="115-119", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_125 [label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="112-114", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_124 [label="Entry lambda expression", span="110-128", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_127 [label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="120-123", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_128 [label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="124-126", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_129 [label="return errors;", span="127-127", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_130 [label="Exit lambda expression", span="110-128", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_137 [label="t.IsName()", span="115-115", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_138 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="ReflectionExtensions.cs"];
m8_134 [label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m8_48 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="ReflectionExtensions.cs"];
m8_5 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="44-44", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ReflectionExtensions.cs"];
m8_37 [label="return specProps =>\r\n            {\r\n                var setCount =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList()\r\n                        .Count();\r\n\r\n                var setWithRequired =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Select(sp => ((OptionSpecification)sp.Specification).SetName)\r\n                        .Distinct()\r\n                        .ToList();\r\n\r\n                var missing =\r\n                    specProps.Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Specification.Required)\r\n                        .Where(sp => sp.Value.IsNothing())\r\n                        .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length == 0)\r\n                        .Concat(\r\n                            specProps.Where(sp => sp.Specification.IsOption())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())\r\n                                .Where(\r\n                                    sp =>\r\n                                        ((OptionSpecification)sp.Specification).SetName.Length > 0 && setCount == 1\r\n                                        || (setCount > 1\r\n                                            && !setWithRequired.Contains(\r\n                                                ((OptionSpecification)sp.Specification).SetName))))\r\n                        .Concat(\r\n                            specProps\r\n                                .Where(sp => sp.Specification.IsValue())\r\n                                .Where(sp => sp.Specification.Required)\r\n                                .Where(sp => sp.Value.IsNothing())).ToList();\r\n\r\n                return from sp in missing select new MissingRequiredOptionError(sp.Specification.FromSpecification());\r\n            };", span="46-84", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ReflectionExtensions.cs"];
m8_38 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="44-44", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ReflectionExtensions.cs"];
m8_45 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ReflectionExtensions.cs"];
m8_30 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="ReflectionExtensions.cs"];
m8_132 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="ReflectionExtensions.cs"];
m8_47 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ReflectionExtensions.cs"];
m8_20 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="ReflectionExtensions.cs"];
m8_133 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="ReflectionExtensions.cs"];
m8_26 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="ReflectionExtensions.cs"];
m8_121 [label="Entry Unk.FromJust", span="", cluster="Unk.FromJust", file="ReflectionExtensions.cs"];
m8_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ReflectionExtensions.cs"];
m8_46 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="ReflectionExtensions.cs"];
m8_18 [label="Entry Unk.GroupBy", span="", cluster="Unk.GroupBy", file="ReflectionExtensions.cs"];
m8_19 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="ReflectionExtensions.cs"];
m8_140 [label=setCount, span="", file="ReflectionExtensions.cs"];
m8_141 [label=setWithRequired, span="", file="ReflectionExtensions.cs"];
m8_142 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="ReflectionExtensions.cs"];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Attribute>"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_60 -> m3_23  [key=0, style=bold, color=blue];
m3_23 -> m3_57  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_61  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_62  [key=2, style=dotted];
m3_58 -> m3_58  [key=1, style=dashed, color=darkseagreen4, label=assembly];
m3_59 -> m3_60  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_23  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_29 -> m3_26  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_23  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_15 -> m3_21  [key=2, style=dotted];
m3_15 -> m3_22  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid, color=red];
m3_17 -> m3_24  [key=2, style=dotted];
m3_17 -> m3_25  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid, color=red];
m3_18 -> m3_21  [key=2, style=dotted, color=red];
m3_18 -> m3_22  [key=2, style=dotted, color=red];
m3_19 -> m3_13  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=2, style=dotted];
m3_8 -> m3_6  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_46  [key=2, style=dotted];
m3_53 -> m3_47  [key=2, style=dotted];
m3_53 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_48  [key=2, style=dotted];
m3_54 -> m3_49  [key=2, style=dotted];
m3_54 -> m3_50  [key=2, style=dotted];
m3_54 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=prms];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_51  [key=2, style=dotted];
m3_56 -> m3_52  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="System.Type[]"];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_46  [key=2, style=dotted];
m3_42 -> m3_47  [key=2, style=dotted];
m3_42 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_48  [key=2, style=dotted];
m3_43 -> m3_49  [key=2, style=dotted];
m3_43 -> m3_50  [key=2, style=dotted];
m3_43 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=prms];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_51  [key=2, style=dotted];
m3_45 -> m3_40  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [key=2, style=dotted];
m3_38 -> m3_36  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_23  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_30  [key=2, style=dotted];
m3_33 -> m3_35  [key=2, style=dotted];
m3_34 -> m3_31  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_14  [key=2, style=dotted];
m4_4 -> m4_15  [key=2, style=dotted];
m4_4 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_3 -> m4_11  [key=2, style=dotted, color=red];
m4_3 -> m4_12  [key=2, style=dotted, color=red];
m4_3 -> m4_13  [key=2, style=dotted, color=red];
m4_3 -> m4_16  [key=1, style=dashed, color=red, label="lambda expression"];
m4_3 -> m4_21  [key=1, style=dashed, color=red, label=result];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_21 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_20 -> m4_21  [key=0, style=solid];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_22 -> m4_20  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_25 -> m4_28  [key=2, style=dotted];
m4_25 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_19  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_23  [key=2, style=dotted];
m4_39 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_39 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_38 -> m4_39  [key=0, style=solid];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_27  [key=2, style=dotted];
m4_42 -> m4_28  [key=2, style=dotted];
m4_42 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid, color=red];
m4_30 -> m4_6  [key=2, style=dotted];
m4_30 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m4_31 -> m4_32  [key=0, style=solid, color=red];
m4_31 -> m4_7  [key=2, style=dotted, color=red];
m4_31 -> m4_8  [key=2, style=dotted, color=red];
m4_31 -> m4_9  [key=2, style=dotted, color=red];
m4_31 -> m4_10  [key=2, style=dotted, color=red];
m4_31 -> m4_36  [key=1, style=dashed, color=red, label=specs];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_14  [key=2, style=dotted];
m4_33 -> m4_15  [key=2, style=dotted];
m4_33 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_11  [key=2, style=dotted];
m4_32 -> m4_12  [key=2, style=dotted];
m4_32 -> m4_13  [key=2, style=dotted];
m4_32 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_32 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_34 -> m4_29  [key=0, style=bold, color=blue];
m4_44 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_45 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_46 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_47 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_48 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_49 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [key=2, style=dotted];
m5_10 -> m5_14  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_4  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_8  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=2, style=dotted];
m5_22 -> m5_20  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m5_58 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m5_58 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_58 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_58 -> m5_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<object> ParseArguments"];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_33  [key=2, style=dotted];
m5_65 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_60 -> m5_66  [key=0, style=solid];
m5_60 -> m5_15  [key=2, style=dotted];
m5_62 -> m5_66  [key=0, style=solid];
m5_62 -> m5_15  [key=2, style=dotted];
m5_64 -> m5_66  [key=0, style=solid];
m5_64 -> m5_67  [key=2, style=dotted];
m5_66 -> m5_58  [key=0, style=bold, color=blue];
m5_3 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_3  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_42 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m5_42 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m5_42 -> m5_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_45  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_33  [key=2, style=dotted];
m5_49 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_44 -> m5_50  [key=0, style=solid];
m5_44 -> m5_15  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_47  [key=0, style=solid];
m5_45 -> m5_30  [key=2, style=dotted];
m5_46 -> m5_50  [key=0, style=solid];
m5_46 -> m5_51  [key=2, style=dotted];
m5_48 -> m5_50  [key=0, style=solid];
m5_48 -> m5_15  [key=2, style=dotted];
m5_50 -> m5_42  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_4  [key=2, style=dotted];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_98 -> m5_109  [key=0, style=solid, color=red];
m5_98 -> m5_110  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
m5_98 -> m5_117  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
m5_98 -> m5_111  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m5_98 -> m5_97  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m5_98 -> m5_98  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp"];
m5_109 -> m5_110  [key=0, style=solid, color=red];
m5_109 -> m5_111  [key=0, style=solid, color=red];
m5_109 -> m5_113  [key=2, style=dotted, color=red];
m5_110 -> m5_111  [key=0, style=solid, color=red];
m5_110 -> m5_114  [key=2, style=dotted, color=red];
m5_110 -> m5_115  [key=2, style=dotted, color=red];
m5_110 -> m5_116  [key=1, style=dashed, color=red, label="lambda expression"];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_98  [key=0, style=bold, color=blue];
m5_116 -> m5_117  [key=0, style=solid, color=red];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=2, style=dotted];
m5_35 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_34 -> m5_35  [key=0, style=solid];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=2, style=dotted];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_31  [key=2, style=dotted];
m5_53 -> m5_37  [key=2, style=dotted];
m5_53 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_52 -> m5_53  [key=0, style=solid];
m5_54 -> m5_52  [key=0, style=bold, color=blue];
m5_55 -> m5_56  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_41  [key=2, style=dotted];
m5_57 -> m5_55  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=2, style=dotted];
m5_69 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_68 -> m5_69  [key=0, style=solid];
m5_70 -> m5_68  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_41  [key=2, style=dotted];
m5_74 -> m5_72  [key=0, style=bold, color=blue];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_83  [key=2, style=dotted];
m5_85 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_90  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_86 -> m5_84  [key=0, style=bold, color=blue];
m5_87 -> m5_88  [key=0, style=solid];
m5_89 -> m5_87  [key=0, style=bold, color=blue];
m5_93 -> m5_91  [key=0, style=bold, color=blue];
m5_102 -> m5_103  [key=0, style=solid, color=red];
m5_103 -> m5_104  [key=0, style=solid, color=red];
m5_103 -> m5_105  [key=2, style=dotted, color=red];
m5_103 -> m5_106  [key=1, style=dashed, color=red, label="lambda expression"];
m5_104 -> m5_102  [key=0, style=bold, color=blue];
m5_106 -> m5_107  [key=0, style=solid, color=red];
m5_107 -> m5_108  [key=0, style=solid, color=red];
m5_108 -> m5_106  [key=0, style=bold, color=blue];
m5_117 -> m5_118  [key=0, style=solid, color=red];
m5_117 -> m5_119  [key=2, style=dotted, color=red];
m5_117 -> m5_120  [key=2, style=dotted, color=red];
m5_118 -> m5_116  [key=0, style=bold, color=blue];
m5_97 -> m5_99  [key=0, style=solid, color=red];
m5_99 -> m5_100  [key=0, style=solid, color=red];
m5_99 -> m5_101  [key=2, style=dotted, color=red];
m5_99 -> m5_102  [key=1, style=dashed, color=red, label="lambda expression"];
m5_100 -> m5_97  [key=0, style=bold, color=blue];
m5_33 -> m5_94  [key=0, style=solid];
m5_33 -> m5_28  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m5_33 -> m5_49  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m5_33 -> m5_65  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m5_33 -> m5_98  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult"];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_96  [key=2, style=dotted];
m5_94 -> m5_97  [key=2, style=dotted];
m5_94 -> m5_98  [key=2, style=dotted];
m5_95 -> m5_33  [key=0, style=bold, color=blue];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_23  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_78 -> m5_75  [key=0, style=bold, color=blue];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_24 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_24 -> m5_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_33  [key=2, style=dotted];
m5_28 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_26 -> m5_29  [key=0, style=solid];
m5_26 -> m5_15  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_30  [key=2, style=dotted];
m5_27 -> m5_31  [key=2, style=dotted];
m5_27 -> m5_32  [key=2, style=dotted];
m5_27 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m5_29 -> m5_24  [key=0, style=bold, color=blue];
m5_41 -> m5_80  [key=0, style=solid];
m5_41 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_41 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_41 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=2, style=dotted];
m5_80 -> m5_83  [key=2, style=dotted];
m5_80 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_80 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_81 -> m5_41  [key=0, style=bold, color=blue];
m5_23 -> m5_121  [key=0, style=solid];
m5_23 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_23 -> m5_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m5_23 -> m5_76  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_127  [key=0, style=solid];
m5_122 -> m5_127  [key=0, style=solid];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_126  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_128  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_23  [key=0, style=bold, color=blue];
m5_129 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_129 -> m5_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m5_130 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_131 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m5_132 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m5_133 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_134 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_135 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m5_136 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_136 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_136 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_137 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_137 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_137 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m5_138 -> m5_117  [key=1, style=dashed, color=red, label="CommandLine.ParserResult<T>"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_61  [key=0, style=bold, color=crimson];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_49  [key=2, style=dotted];
m6_58 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_58 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_61 -> m6_60  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_62  [key=0, style=solid];
m6_59 -> m6_50  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_63  [key=0, style=solid];
m6_60 -> m6_50  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=2, style=dotted];
m6_63 -> m6_57  [key=0, style=bold, color=blue];
m6_5 -> m6_7  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid, color=red];
m6_10 -> m6_16  [key=0, style=bold, color=crimson];
m6_10 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m6_10 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_10 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_10 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_10 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_11 -> m6_13  [key=1, style=dashed, color=red, label=iterations];
m6_11 -> m6_17  [key=1, style=dashed, color=red, label=iterations];
m6_16 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_17  [key=0, style=solid];
m6_12 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=element];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=0, style=solid];
m6_15 -> m6_19  [key=0, style=solid];
m6_15 -> m6_9  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_9  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m6_13 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=iterations];
m6_19 -> m6_10  [key=0, style=bold, color=blue];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_69  [key=0, style=bold, color=crimson];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_49  [key=2, style=dotted];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_66 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_69 -> m6_68  [key=0, style=solid];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_70  [key=0, style=solid];
m6_67 -> m6_50  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=0, style=solid];
m6_68 -> m6_50  [key=2, style=dotted];
m6_70 -> m6_65  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=0, style=solid];
m6_3 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_2  [key=0, style=bold, color=blue];
m6_4 -> m6_7  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_9  [key=2, style=dotted];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=collection];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=collection];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
m6_30 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=2, style=dotted];
m6_32 -> m6_36  [key=0, style=solid];
m6_32 -> m6_28  [key=2, style=dotted];
m6_34 -> m6_36  [key=0, style=solid];
m6_34 -> m6_28  [key=2, style=dotted];
m6_36 -> m6_30  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_10  [key=2, style=dotted, color=green];
m6_8 -> m6_6  [key=2, style=dotted, color=green];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m6_20 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
m6_20 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_26 -> m6_25  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_22 -> m6_27  [key=0, style=solid];
m6_22 -> m6_28  [key=2, style=dotted];
m6_24 -> m6_27  [key=0, style=solid];
m6_24 -> m6_28  [key=2, style=dotted];
m6_27 -> m6_20  [key=0, style=bold, color=blue];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_42  [key=0, style=bold, color=crimson];
m6_37 -> m6_45  [key=0, style=bold, color=crimson];
m6_37 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
m6_37 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_48  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_9  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_48  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_49  [key=2, style=dotted];
m6_40 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_40 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_40 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_40 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_43  [key=0, style=solid];
m6_41 -> m6_50  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label=previous];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_47  [key=0, style=solid];
m6_44 -> m6_50  [key=2, style=dotted];
m6_46 -> m6_44  [key=0, style=solid];
m6_47 -> m6_37  [key=0, style=bold, color=blue];
m6_51 -> m6_52  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_49  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_50  [key=2, style=dotted];
m6_53 -> m6_55  [key=2, style=dotted];
m6_53 -> m6_56  [key=2, style=dotted];
m6_54 -> m6_51  [key=0, style=bold, color=blue];
m8_4 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_9 -> m8_4  [key=0, style=bold, color=blue];
m8_6 -> m8_102  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_105  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_103 -> m8_6  [key=0, style=bold, color=blue];
m8_7 -> m8_122  [key=0, style=solid];
m8_7 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_122 -> m8_102  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateDefaultForImmutable"];
m8_123 -> m8_7  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_1 -> m8_5  [key=2, style=dotted];
m8_1 -> m8_6  [key=2, style=dotted];
m8_1 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_136 -> m8_137  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_17  [key=2, style=dotted];
m8_11 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_11 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_11 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m8_10 -> m8_11  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_18  [key=2, style=dotted];
m8_12 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_23 -> m8_24  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_14 -> m8_20  [key=2, style=dotted];
m8_14 -> m8_21  [key=2, style=dotted];
m8_14 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=s];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_19  [key=2, style=dotted];
m8_34 -> m8_35  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_10  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=2, style=dotted];
m8_25 -> m8_23  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [key=2, style=dotted];
m8_29 -> m8_27  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_31  [key=0, style=bold, color=blue];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_34  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_17  [key=2, style=dotted];
m8_40 -> m8_45  [key=2, style=dotted];
m8_40 -> m8_46  [key=2, style=dotted];
m8_40 -> m8_47  [key=2, style=dotted];
m8_40 -> m8_19  [key=2, style=dotted];
m8_40 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_40 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_40 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label=setCount];
m8_40 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=setCount];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_17  [key=2, style=dotted];
m8_41 -> m8_45  [key=2, style=dotted];
m8_41 -> m8_46  [key=2, style=dotted];
m8_41 -> m8_47  [key=2, style=dotted];
m8_41 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_41 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_41 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_41 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=setWithRequired];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_17  [key=2, style=dotted];
m8_42 -> m8_48  [key=2, style=dotted];
m8_42 -> m8_47  [key=2, style=dotted];
m8_42 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_42 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_39 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_51 -> m8_52  [key=0, style=solid];
m8_54 -> m8_55  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_91  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_60 -> m8_61  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_49  [key=2, style=dotted];
m8_43 -> m8_50  [key=2, style=dotted];
m8_43 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=sp];
m8_66 -> m8_67  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_79 -> m8_80  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_85 -> m8_86  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_92 -> m8_93  [key=0, style=solid];
m8_96 -> m8_97  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_44 -> m8_39  [key=0, style=bold, color=blue];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_26  [key=2, style=dotted];
m8_53 -> m8_51  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_56 -> m8_54  [key=0, style=bold, color=blue];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_26  [key=2, style=dotted];
m8_59 -> m8_57  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_60  [key=0, style=bold, color=blue];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_63  [key=0, style=bold, color=blue];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_26  [key=2, style=dotted];
m8_68 -> m8_66  [key=0, style=bold, color=blue];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_69  [key=0, style=bold, color=blue];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_75  [key=2, style=dotted];
m8_74 -> m8_72  [key=0, style=bold, color=blue];
m8_77 -> m8_78  [key=0, style=solid];
m8_78 -> m8_76  [key=0, style=bold, color=blue];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_26  [key=2, style=dotted];
m8_81 -> m8_79  [key=0, style=bold, color=blue];
m8_83 -> m8_84  [key=0, style=solid];
m8_84 -> m8_82  [key=0, style=bold, color=blue];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_75  [key=2, style=dotted];
m8_87 -> m8_85  [key=0, style=bold, color=blue];
m8_90 -> m8_88  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_95  [key=2, style=dotted];
m8_94 -> m8_92  [key=0, style=bold, color=blue];
m8_97 -> m8_98  [key=0, style=solid];
m8_98 -> m8_96  [key=0, style=bold, color=blue];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_75  [key=2, style=dotted];
m8_101 -> m8_99  [key=0, style=bold, color=blue];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_17  [key=2, style=dotted];
m8_105 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_105 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_105 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_105 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=options];
m8_104 -> m8_105  [key=0, style=solid];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_108  [key=0, style=solid];
m8_106 -> m8_110  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_118 -> m8_119  [key=0, style=solid];
m8_107 -> m8_109  [key=0, style=solid];
m8_107 -> m8_111  [key=2, style=dotted];
m8_107 -> m8_50  [key=2, style=dotted];
m8_107 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label=s];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_22  [key=2, style=dotted];
m8_109 -> m8_104  [key=0, style=bold, color=blue];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_112  [key=0, style=bold, color=blue];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_30  [key=2, style=dotted];
m8_117 -> m8_115  [key=0, style=bold, color=blue];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_30  [key=2, style=dotted];
m8_119 -> m8_121  [key=2, style=dotted];
m8_120 -> m8_118  [key=0, style=bold, color=blue];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_17  [key=2, style=dotted];
m8_126 -> m8_132  [key=2, style=dotted];
m8_126 -> m8_133  [key=2, style=dotted];
m8_126 -> m8_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_126 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_26  [key=2, style=dotted];
m8_125 -> m8_131  [key=2, style=dotted];
m8_125 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label=sp];
m8_124 -> m8_125  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_19  [key=2, style=dotted];
m8_127 -> m8_127  [key=1, style=dashed, color=darkseagreen4, label=x];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_134  [key=2, style=dotted];
m8_128 -> m8_135  [key=2, style=dotted];
m8_128 -> m8_128  [key=1, style=dashed, color=darkseagreen4, label=y];
m8_129 -> m8_130  [key=0, style=solid];
m8_130 -> m8_124  [key=0, style=bold, color=blue];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_139  [key=2, style=dotted];
m8_138 -> m8_136  [key=0, style=bold, color=blue];
m8_5 -> m8_37  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_37 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_37 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m8_37 -> m8_37  [key=3, color=darkorchid, style=bold, label="method methodReturn T SetValue"];
m8_38 -> m8_5  [key=0, style=bold, color=blue];
m8_140 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=setCount];
m8_141 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=setWithRequired];
m8_142 -> m8_126  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
}
