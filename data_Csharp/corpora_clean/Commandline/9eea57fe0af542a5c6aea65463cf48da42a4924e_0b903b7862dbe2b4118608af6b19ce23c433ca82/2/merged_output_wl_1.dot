digraph  {
m0_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m0_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label=guardsLookup, span="40-40"];
m0_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m0_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label="return specifications;", span="48-48"];
m0_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label="throw new ApplicationException(guard.Item2);", span="44-44"];
m0_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m0_30 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, CommandLine.Core.TargetType, string, string, System.Collections.Generic.IEnumerable<string>)", span="18-18"];
m0_22 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="51-51"];
m0_23 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="int min", span="53-53"];
m0_25 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="55-55"];
m0_26 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="return predicate(min, max);", span="57-57"];
m0_24 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="int max", span="54-54"];
m0_27 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="return false;", span="59-59"];
m0_28 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="51-51"];
m0_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m0_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="return specification.Tag == SpecificationType.Option;", span="12-12"];
m0_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m0_29 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m0_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m0_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="return specification.Tag == SpecificationType.Value;", span="17-17"];
m0_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m0_18 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="42-42"];
m0_19 [cluster="lambda expression", file="InstanceBuilder.cs", label="guard.Item1(spec)", span="42-42"];
m0_20 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="42-42"];
m0_37 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="72-72"];
m0_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="int max", span="74-74"];
m0_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="specification.Max.MatchJust(out max)", span="75-75"];
m0_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="return predicate(max);", span="77-77"];
m0_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="return false;", span="79-79"];
m0_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="72-72"];
m0_31 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="62-62"];
m0_32 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="int min", span="64-64"];
m0_33 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="specification.Min.MatchJust(out min)", span="65-65"];
m0_34 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="return predicate(min);", span="67-67"];
m0_35 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="return false;", span="69-69"];
m0_36 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="62-62"];
m0_17 [cluster="System.ApplicationException.ApplicationException(string)", file="InstanceBuilder.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m0_16 [cluster="Unk.Any", file="InstanceBuilder.cs", label="Entry Unk.Any", span=""];
m0_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m0_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="InstanceBuilder.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.TargetType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues);", span="22-35"];
m0_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m0_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilder.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_43 [file="InstanceBuilder.cs", label=guard, span=""];
m1_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Specification.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="Specification.cs", label="0: Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_10 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", color=green, community=0, file="Specification.cs", label="0: Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_11 [cluster="Unk.ShouldBeEquivalentTo", file="Specification.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Specification.cs", label="configuration(settings)", span="41-41"];
m1_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Specification.cs", label="settings.Consumed = true", span="42-42"];
m1_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Specification.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36"];
m1_84 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="34-34"];
m1_20 [cluster="CommandLine.Parser.~Parser()", file="Specification.cs", label="Entry CommandLine.Parser.~Parser()", span="54-54"];
m1_21 [cluster="CommandLine.Parser.~Parser()", file="Specification.cs", label="Dispose(false)", span="56-56"];
m1_22 [cluster="CommandLine.Parser.~Parser()", file="Specification.cs", label="Exit CommandLine.Parser.~Parser()", span="54-54"];
m1_86 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="47-47"];
m1_58 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Specification.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m1_59 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: args == null", span="143-143"];
m1_60 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: throw new ArgumentNullException(''args'');", span="143-143"];
m1_61 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: types == null", span="144-144"];
m1_62 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: throw new ArgumentNullException(''types'');", span="144-144"];
m1_63 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: types.Length == 0", span="145-145"];
m1_64 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: throw new ArgumentOutOfRangeException(''types'');", span="145-145"];
m1_65 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", color=green, community=0, file="Specification.cs", label="0: return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="147-154"];
m1_66 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Specification.cs", label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m1_16 [cluster="System.Action<T>.Invoke(T)", file="Specification.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_33 [cluster="Unk.MakeParserResult", file="Specification.cs", label="Entry Unk.MakeParserResult", span=""];
m1_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="var result = NameLookup.WithSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22"];
m1_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Specification.cs", label="this.settings = settings", span="47-47"];
m1_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Specification.cs", label="this.settings.Consumed = true", span="48-48"];
m1_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Specification.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45"];
m1_67 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Specification.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_42 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112"];
m1_44 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="throw new ArgumentNullException(''factory'');", span="115-115"];
m1_48 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="throw new ArgumentNullException(''args'');", span="117-117"];
m1_49 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="119-126"];
m1_43 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="factory == null", span="115-115"];
m1_47 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="args == null", span="117-117"];
m1_45 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="!typeof(T).IsMutable()", span="116-116"];
m1_46 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="throw new ArgumentException(''factory'');", span="116-116"];
m1_50 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="112-112"];
m1_100 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_51 [cluster="System.ArgumentException.ArgumentException(string)", file="Specification.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="expected.ShouldBeEquivalentTo(result)", span="25-25"];
m1_93 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Specification.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_6 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Specification.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m1_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_31 [cluster="CSharpx.Maybe.Just<T>(T)", file="Specification.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m1_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_68 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="148-153"];
m1_69 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="0: InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="148-153"];
m1_70 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="148-153"];
m1_72 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="149-149"];
m1_73 [cluster="lambda expression", color=green, community=0, file="Specification.cs", label="0: Tokenize(arguments, optionSpecs, settings)", span="149-149"];
m1_74 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="149-149"];
m1_35 [cluster="lambda expression", file="Specification.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="93-98"];
m1_39 [cluster="lambda expression", file="Specification.cs", label="Tokenize(arguments, optionSpecs, settings)", span="95-95"];
m1_53 [cluster="lambda expression", file="Specification.cs", label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="120-125"];
m1_56 [cluster="lambda expression", file="Specification.cs", label="Tokenize(arguments, optionSpecs, settings)", span="122-122"];
m1_88 [cluster="lambda expression", file="Specification.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="176-176"];
m1_91 [cluster="lambda expression", file="Specification.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="176-176"];
m1_95 [cluster="lambda expression", file="Specification.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="177-177"];
m1_98 [cluster="lambda expression", file="Specification.cs", label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="178-178"];
m1_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="var expected = Maybe.Just(''.'')", span="17-17"];
m1_34 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="93-98"];
m1_36 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="93-98"];
m1_38 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="95-95"];
m1_40 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="95-95"];
m1_52 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="120-125"];
m1_54 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="120-125"];
m1_55 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="122-122"];
m1_57 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="122-122"];
m1_87 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="175-176"];
m1_94 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="177-177"];
m1_89 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="175-176"];
m1_90 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="176-176"];
m1_92 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="176-176"];
m1_96 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="177-177"];
m1_97 [cluster="lambda expression", file="Specification.cs", label="Entry lambda expression", span="178-178"];
m1_99 [cluster="lambda expression", file="Specification.cs", label="Exit lambda expression", span="178-178"];
m1_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="Specification.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="18-19"];
m1_85 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Specification.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="14-14"];
m1_79 [cluster="System.GC.SuppressFinalize(object)", file="Specification.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m1_32 [cluster="CSharpx.Maybe.Nothing<T>()", file="Specification.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m1_137 [cluster="CommandLine.ParserSettings.Dispose()", file="Specification.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m1_30 [cluster="System.Type.IsMutable()", file="Specification.cs", label="Entry System.Type.IsMutable()", span="115-115"];
m1_75 [cluster="CommandLine.Parser.Dispose()", file="Specification.cs", label="Entry CommandLine.Parser.Dispose()", span="160-160"];
m1_76 [cluster="CommandLine.Parser.Dispose()", file="Specification.cs", label="Dispose(true)", span="162-162"];
m1_77 [cluster="CommandLine.Parser.Dispose()", file="Specification.cs", label="GC.SuppressFinalize(this)", span="164-164"];
m1_78 [cluster="CommandLine.Parser.Dispose()", file="Specification.cs", label="Exit CommandLine.Parser.Dispose()", span="160-160"];
m1_71 [cluster="Unk.Choose", file="Specification.cs", label="Entry Unk.Choose", span=""];
m1_24 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m1_26 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="throw new ArgumentNullException(''args'');", span="86-86"];
m1_28 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="92-99"];
m1_25 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="args == null", span="86-86"];
m1_27 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="88-90"];
m1_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m1_41 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Specification.cs", label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167"];
m1_80 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Specification.cs", label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="172-177"];
m1_81 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Specification.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="178-178"];
m1_82 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Specification.cs", label="return explodedTokens;", span="179-179"];
m1_83 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Specification.cs", label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="167-167"];
m1_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="213-213"];
m1_130 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label=disposed, span="215-215"];
m1_133 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="settings != null", span="222-222"];
m1_134 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="settings.Dispose()", span="224-224"];
m1_135 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="disposed = true", span="227-227"];
m1_131 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="return;", span="217-217"];
m1_132 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label=disposing, span="220-220"];
m1_136 [cluster="CommandLine.Parser.Dispose(bool)", file="Specification.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="213-213"];
m1_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Specification.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_37 [cluster="Unk.Build", file="Specification.cs", label="Entry Unk.Build", span=""];
m1_138 [file="Specification.cs", label="CommandLine.Parser", span=""];
m1_143 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_144 [file="Specification.cs", label="params System.Type[]", span=""];
m1_139 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_140 [file="Specification.cs", label=factory, span=""];
m1_141 [file="Specification.cs", label="System.Func<T>", span=""];
m1_142 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m1_145 [file="Specification.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m1_146 [file="Specification.cs", label="CommandLine.ParserSettings", span=""];
m2_18 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m2_35 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_93 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m2_115 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="52-52"];
m2_95 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="95-95"];
m2_96 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="97-98"];
m2_97 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="95-95"];
m2_57 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="63-63"];
m2_58 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="65-65"];
m2_59 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="66-66"];
m2_61 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="69-69"];
m2_63 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="72-72"];
m2_65 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="75-75"];
m2_67 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="77-77"];
m2_68 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="78-78"];
m2_69 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="81-81"];
m2_60 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="68-68"];
m2_62 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="71-71"];
m2_64 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="73-74"];
m2_66 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="76-76"];
m2_70 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="63-63"];
m2_74 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m2_26 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m2_21 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="127-127"];
m2_76 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_117 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="127-127"];
m2_118 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="129-129"];
m2_120 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="130-130"];
m2_122 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="131-131"];
m2_124 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="132-132"];
m2_126 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="133-133"];
m2_119 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="129-129"];
m2_121 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="130-130"];
m2_123 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="131-131"];
m2_125 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="132-132"];
m2_127 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="133-133"];
m2_128 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="134-134"];
m2_129 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="127-127"];
m2_23 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m2_88 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_101 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="101-101"];
m2_102 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", color=red, community=0, file="UnParserExtensions.cs", label="0: return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="103-107"];
m2_103 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="101-101"];
m2_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m2_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="UnParserExtensions.cs", label="0: options == null", span="26-26"];
m2_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="UnParserExtensions.cs", label="0: throw new ArgumentNullException(''options'');", span="26-26"];
m2_3 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="UnParserExtensions.cs", label="0: var type = options.GetType()", span="28-28"];
m2_4 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="UnParserExtensions.cs", label="0: var builder = new StringBuilder()", span="29-29"];
m2_5 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32"];
m2_20 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m2_92 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m2_83 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m2_87 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m2_16 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m2_98 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="98-98"];
m2_37 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="37-38"];
m2_32 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="32-32"];
m2_49 [cluster="lambda expression", color=red, community=0, file="UnParserExtensions.cs", label="0: builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="53-53"];
m2_54 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="57-57"];
m2_31 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="32-32"];
m2_36 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="37-38"];
m2_42 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="42-42"];
m2_45 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="47-47"];
m2_48 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="53-53"];
m2_53 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="57-57"];
m2_33 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="32-32"];
m2_38 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="37-38"];
m2_43 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="42-42"];
m2_44 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="42-42"];
m2_46 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="47-47"];
m2_47 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="47-47"];
m2_50 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="53-53"];
m2_55 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="57-57"];
m2_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="74-74"];
m2_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="73-74"];
m2_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="73-74"];
m2_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="87-87"];
m2_90 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="91-92"];
m2_89 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="91-92"];
m2_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="86-87"];
m2_86 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="86-87"];
m2_91 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="91-92"];
m2_99 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="98-98"];
m2_100 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="98-98"];
m2_105 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_30 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m2_28 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
m2_114 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m2_27 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="95-95"];
m2_34 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m2_130 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m2_56 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m2_22 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m2_51 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m2_24 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m2_116 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="39-39"];
m2_94 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m2_41 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="116-116"];
m2_19 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m2_29 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_73 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="95-95"];
m2_52 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_104 [cluster="CommandLine.Core.OptionSpecification.FormatName()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="110-110"];
m2_71 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="84-84"];
m2_80 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="86-87"];
m2_81 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="89-92"];
m2_82 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="84-84"];
m2_25 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m2_72 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m2_17 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_131 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m2_75 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_106 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="110-110"];
m2_107 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", color=red, community=1, file="UnParserExtensions.cs", label="0: return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="112-113"];
m2_108 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="110-110"];
m2_39 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m2_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_6 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="CommandLine.BaseAttribute", span=""];
m2_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=red, community=0, file="UnParserExtensions.cs", label="0: optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="52-53"];
m2_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="!valSpecs.Any() || builder.TrailingSpaces() > 1", span="54-54"];
m2_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="55-55"];
m2_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="56-57"];
m2_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="59-60"];
m2_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="42-46"];
m2_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="47-50"];
m2_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24"];
m2_40 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_109 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="116-116"];
m2_110 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="118-120"];
m2_111 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="122-122"];
m2_112 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="124-124"];
m2_113 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="116-116"];
m2_132 [file="UnParserExtensions.cs", label=builder, span=""];
m2_133 [file="UnParserExtensions.cs", label=T, span=""];
m2_134 [file="UnParserExtensions.cs", label=sep, span=""];
m2_135 [file="UnParserExtensions.cs", label=doubQt, span=""];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=0, style=solid];
m0_11 -> m0_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m0_11 -> m0_9  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo parsingCulture", style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_11  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_12 -> m0_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_15  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_10  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_23  [color=darkorchid, key=3, label="Local variable System.Func<T> makeDefault", style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_25 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_28  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_22  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_3  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=0, style=solid];
m0_39 -> m0_29  [key=2, style=dotted];
m0_40 -> m0_42  [key=0, style=solid];
m0_40 -> m0_21  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_37  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_33 -> m0_29  [key=2, style=dotted];
m0_34 -> m0_36  [key=0, style=solid];
m0_34 -> m0_21  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_31  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=2, style=dotted];
m0_7 -> m0_7  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> ", style=bold];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_43 -> m0_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_14  [color=green, key=0, style=solid];
m1_10 -> m1_15  [color=green, key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_4  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_8  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [color=green, key=0, style=solid];
m1_58 -> m1_61  [color=green, key=1, label="params System.Type[]", style=dashed];
m1_58 -> m1_63  [color=green, key=1, label="params System.Type[]", style=dashed];
m1_58 -> m1_65  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_58 -> m1_69  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_59 -> m1_60  [color=green, key=0, style=solid];
m1_59 -> m1_61  [color=green, key=0, style=solid];
m1_60 -> m1_66  [color=green, key=0, style=solid];
m1_60 -> m1_15  [color=green, key=2, style=dotted];
m1_61 -> m1_62  [color=green, key=0, style=solid];
m1_61 -> m1_63  [color=green, key=0, style=solid];
m1_62 -> m1_66  [color=green, key=0, style=solid];
m1_62 -> m1_15  [color=green, key=2, style=dotted];
m1_63 -> m1_64  [color=green, key=0, style=solid];
m1_63 -> m1_65  [color=green, key=0, style=solid];
m1_64 -> m1_66  [color=green, key=0, style=solid];
m1_64 -> m1_67  [color=green, key=2, style=dotted];
m1_65 -> m1_66  [color=green, key=0, style=solid];
m1_65 -> m1_33  [color=green, key=2, style=dotted];
m1_65 -> m1_68  [color=green, key=1, label="lambda expression", style=dashed];
m1_66 -> m1_58  [color=blue, key=0, style=bold];
m1_3 -> m1_17  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_3  [color=blue, key=0, style=bold];
m1_42 -> m1_49  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_42 -> m1_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_44 -> m1_15  [key=2, style=dotted];
m1_44 -> m1_50  [key=0, style=solid];
m1_48 -> m1_15  [key=2, style=dotted];
m1_48 -> m1_50  [key=0, style=solid];
m1_49 -> m1_33  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_30  [key=2, style=dotted];
m1_46 -> m1_50  [key=0, style=solid];
m1_46 -> m1_51  [key=2, style=dotted];
m1_50 -> m1_42  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_6 -> m1_4  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_68 -> m1_69  [color=green, key=0, style=solid];
m1_69 -> m1_70  [color=green, key=0, style=solid];
m1_69 -> m1_71  [color=green, key=2, style=dotted];
m1_69 -> m1_72  [color=green, key=1, label="lambda expression", style=dashed];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [color=green, key=0, style=solid];
m1_73 -> m1_74  [color=green, key=0, style=solid];
m1_73 -> m1_41  [color=green, key=2, style=dotted];
m1_74 -> m1_72  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_39 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_31  [key=2, style=dotted];
m1_53 -> m1_37  [key=2, style=dotted];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_56 -> m1_41  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_85  [key=2, style=dotted];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_93  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_93  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_40 -> m1_38  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_54 -> m1_52  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_57 -> m1_55  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_89 -> m1_87  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_96 -> m1_94  [color=blue, key=0, style=bold];
m1_97 -> m1_98  [key=0, style=solid];
m1_99 -> m1_97  [color=blue, key=0, style=bold];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_23  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_78 -> m1_75  [color=blue, key=0, style=bold];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_24 -> m1_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_26 -> m1_15  [key=2, style=dotted];
m1_26 -> m1_29  [key=0, style=solid];
m1_28 -> m1_33  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_31  [key=2, style=dotted];
m1_27 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_24  [color=blue, key=0, style=bold];
m1_41 -> m1_80  [key=0, style=solid];
m1_41 -> m1_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_41 -> m1_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_84  [key=2, style=dotted];
m1_80 -> m1_85  [key=2, style=dotted];
m1_80 -> m1_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_80 -> m1_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_86  [key=2, style=dotted];
m1_81 -> m1_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_41  [color=blue, key=0, style=bold];
m1_23 -> m1_130  [key=0, style=solid];
m1_23 -> m1_132  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_135  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_137  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_131 -> m1_136  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_136  [key=0, style=solid];
m1_136 -> m1_23  [color=blue, key=0, style=bold];
m1_138 -> m1_65  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_69  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_73  [color=green, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_6  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_39  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_49  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_56  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_76  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_77  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_133  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_138 -> m1_135  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_143 -> m1_69  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_144 -> m1_69  [color=green, key=1, label="params System.Type[]", style=dashed];
m1_139 -> m1_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_140 -> m1_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m1_141 -> m1_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m1_142 -> m1_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_145 -> m1_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_145 -> m1_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_145 -> m1_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_145 -> m1_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_146 -> m1_88  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_146 -> m1_91  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_146 -> m1_95  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_146 -> m1_98  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_83  [key=2, style=dotted];
m2_96 -> m2_19  [key=2, style=dotted];
m2_96 -> m2_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_97 -> m2_95  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_57 -> m2_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_57 -> m2_63  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_57 -> m2_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_57 -> m2_101  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_17  [key=2, style=dotted];
m2_58 -> m2_61  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_58 -> m2_67  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_58 -> m2_68  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_58 -> m2_69  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_62  [key=0, style=solid];
m2_61 -> m2_69  [key=0, style=solid];
m2_61 -> m2_71  [key=2, style=dotted];
m2_61 -> m2_72  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_73  [key=2, style=dotted];
m2_63 -> m2_78  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_63 -> m2_67  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_63 -> m2_27  [color=darkorchid, key=3, label="Local variable char sep", style=bold];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_74  [key=2, style=dotted];
m2_65 -> m2_67  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_67 -> m2_66  [key=0, style=solid];
m2_67 -> m2_76  [key=2, style=dotted];
m2_67 -> m2_72  [key=2, style=dotted];
m2_67 -> m2_35  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_28  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_29  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_64 -> m2_64  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=0, style=solid];
m2_66 -> m2_75  [key=2, style=dotted];
m2_70 -> m2_57  [color=blue, key=0, style=bold];
m2_21 -> m2_118  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_21 -> m2_128  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_117 -> m2_122  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_117 -> m2_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_117 -> m2_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_120 -> m2_16  [key=2, style=dotted];
m2_120 -> m2_114  [key=2, style=dotted];
m2_120 -> m2_115  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_124  [key=0, style=solid];
m2_122 -> m2_16  [key=2, style=dotted];
m2_122 -> m2_130  [key=2, style=dotted];
m2_122 -> m2_131  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_128  [key=0, style=solid];
m2_126 -> m2_74  [key=2, style=dotted];
m2_126 -> m2_75  [key=2, style=dotted];
m2_119 -> m2_129  [key=0, style=solid];
m2_121 -> m2_129  [key=0, style=solid];
m2_123 -> m2_129  [key=0, style=solid];
m2_125 -> m2_129  [key=0, style=solid];
m2_127 -> m2_129  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_117  [color=blue, key=0, style=bold];
m2_101 -> m2_102  [color=red, key=0, style=solid];
m2_102 -> m2_103  [color=red, key=0, style=solid];
m2_102 -> m2_17  [color=red, key=2, style=dotted];
m2_102 -> m2_104  [color=red, key=2, style=dotted];
m2_102 -> m2_52  [color=red, key=2, style=dotted];
m2_102 -> m2_35  [color=red, key=2, style=dotted];
m2_102 -> m2_57  [color=red, key=2, style=dotted];
m2_102 -> m2_105  [color=red, key=2, style=dotted];
m2_102 -> m2_29  [color=red, key=2, style=dotted];
m2_103 -> m2_101  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_0 -> m2_37  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_14  [key=0, style=solid];
m2_2 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_0  [color=green, key=3, label="Property variable CommandLine.NameStyleFormat NameStyleFormat", style=bold];
m2_3 -> m2_16  [key=2, style=dotted];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_3 -> m2_6  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_17  [key=2, style=dotted];
m2_4 -> m2_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_4 -> m2_9  [color=red, key=1, label=builder, style=dashed];
m2_4 -> m2_49  [color=red, key=1, label=builder, style=dashed];
m2_4 -> m2_10  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_4 -> m2_11  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_4 -> m2_54  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_4 -> m2_13  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_18  [key=2, style=dotted];
m2_5 -> m2_19  [key=2, style=dotted];
m2_5 -> m2_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_98 -> m2_99  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_40  [key=2, style=dotted];
m2_37 -> m2_41  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=2, style=dotted];
m2_32 -> m2_35  [key=2, style=dotted];
m2_49 -> m2_50  [color=red, key=0, style=solid];
m2_49 -> m2_51  [color=red, key=2, style=dotted];
m2_49 -> m2_52  [color=red, key=2, style=dotted];
m2_49 -> m2_35  [color=red, key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=2, style=dotted];
m2_54 -> m2_52  [key=2, style=dotted];
m2_54 -> m2_35  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_45  [color=blue, key=0, style=bold];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_71  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_87  [key=2, style=dotted];
m2_85 -> m2_88  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=2, style=dotted];
m2_90 -> m2_93  [key=2, style=dotted];
m2_90 -> m2_94  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_86 -> m2_84  [color=blue, key=0, style=bold];
m2_91 -> m2_89  [color=blue, key=0, style=bold];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_98  [color=blue, key=0, style=bold];
m2_41 -> m2_41  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m2_71 -> m2_80  [key=0, style=solid];
m2_71 -> m2_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_71 -> m2_57  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_71 -> m2_64  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_85  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_80 -> m2_90  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m2_80 -> m2_80  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=2, style=dotted];
m2_81 -> m2_19  [key=2, style=dotted];
m2_81 -> m2_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_82 -> m2_71  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [color=red, key=0, style=solid];
m2_107 -> m2_108  [color=red, key=0, style=solid];
m2_107 -> m2_94  [color=red, key=2, style=dotted];
m2_108 -> m2_106  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_20  [key=2, style=dotted];
m2_6 -> m2_21  [key=2, style=dotted];
m2_6 -> m2_22  [key=2, style=dotted];
m2_6 -> m2_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_6  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_6 -> m2_8  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_6 -> m2_1  [color=green, key=1, label="CommandLine.BaseAttribute", style=dashed];
m2_6 -> m2_2  [color=green, key=1, label="CommandLine.BaseAttribute", style=dashed];
m2_6 -> m2_3  [color=green, key=1, label="CommandLine.BaseAttribute", style=dashed];
m2_6 -> m2_4  [color=green, key=1, label="CommandLine.BaseAttribute", style=dashed];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_9 -> m2_25  [color=red, key=2, style=dotted];
m2_9 -> m2_48  [color=red, key=1, label="lambda expression", style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=0, style=solid];
m2_10 -> m2_26  [key=2, style=dotted];
m2_10 -> m2_27  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_28  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_25  [key=2, style=dotted];
m2_12 -> m2_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_29  [key=2, style=dotted];
m2_13 -> m2_30  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_23  [key=2, style=dotted];
m2_7 -> m2_24  [key=2, style=dotted];
m2_7 -> m2_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_7  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_7 -> m2_9  [color=red, key=1, label=optSpecs, style=dashed];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_8 -> m2_23  [key=2, style=dotted];
m2_8 -> m2_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_8 -> m2_8  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_8 -> m2_12  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_14 -> m2_0  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_111  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_109 -> m2_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=0, style=solid];
m2_110 -> m2_16  [key=2, style=dotted];
m2_110 -> m2_114  [key=2, style=dotted];
m2_110 -> m2_115  [key=2, style=dotted];
m2_111 -> m2_113  [key=0, style=solid];
m2_111 -> m2_116  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_109  [color=blue, key=0, style=bold];
m2_132 -> m2_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_132 -> m2_49  [color=red, key=1, label=builder, style=dashed];
m2_132 -> m2_54  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_133 -> m2_37  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_134 -> m2_78  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_135 -> m2_90  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
