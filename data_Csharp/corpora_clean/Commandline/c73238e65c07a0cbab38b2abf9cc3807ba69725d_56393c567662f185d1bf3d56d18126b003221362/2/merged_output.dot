digraph  {
m1_76 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7"];
m1_95 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="27-27"];
m1_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75"];
m1_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -.123D", span="78-78"];
m1_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''-0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="81-85"];
m1_36 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="88-88"];
m1_37 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75"];
m1_11 [cluster="Unk.True", file="InstanceBuilderTests.cs", label="Entry Unk.True", span=""];
m1_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="337-337"];
m1_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="340-340"];
m1_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="343-347"];
m1_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="350-350"];
m1_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="337-337"];
m1_144 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m1_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="356-356"];
m1_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="359-359"];
m1_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="362-366"];
m1_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="369-369"];
m1_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="356-356"];
m1_131 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="279-279"];
m1_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="281-284"];
m1_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="286-290"];
m1_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="293-293"];
m1_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="279-279"];
m1_57 [cluster="Unk.AllProperties", file="InstanceBuilderTests.cs", label="Entry Unk.AllProperties", span=""];
m1_110 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10"];
m1_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m1_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var fakeOptions = new FakeOptions()", span="18-18"];
m1_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="19-21"];
m1_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="24-28"];
m1_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.Equals(result))", span="31-31"];
m1_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m1_148 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="318-318"];
m1_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="321-321"];
m1_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="324-328"];
m1_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="331-331"];
m1_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="318-318"];
m1_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103"];
m1_162 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m1_188 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="401-401"];
m1_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label=fakeOptions, span="25-25"];
m1_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="25-25"];
m1_14 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="25-25"];
m1_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="44-44"];
m1_22 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="44-44"];
m1_23 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="44-44"];
m1_29 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="63-63"];
m1_30 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="63-63"];
m1_31 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="63-63"];
m1_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="82-82"];
m1_39 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithDouble()", span="82-82"];
m1_40 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="82-82"];
m1_47 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="101-101"];
m1_48 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="101-101"];
m1_49 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="101-101"];
m1_59 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="123-123"];
m1_60 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithEnum()", span="123-123"];
m1_61 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="123-123"];
m1_68 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="148-148"];
m1_69 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="148-148"];
m1_70 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="148-148"];
m1_77 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="170-170"];
m1_78 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="170-170"];
m1_79 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="170-170"];
m1_86 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="192-192"];
m1_87 [cluster="lambda expression", color=red, community=0, file="InstanceBuilderTests.cs", label="0: new FakeOptionsWithSequenceAndSeparator()", span="192-192"];
m1_88 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="192-192"];
m1_96 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="221-221"];
m1_99 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="222-224"];
m1_97 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithValues()", span="221-221"];
m1_98 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="221-221"];
m1_100 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="223-224"];
m1_104 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="224-224"];
m1_108 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="224-224"];
m1_101 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="222-224"];
m1_103 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="224-224"];
m1_105 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="224-224"];
m1_107 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="224-224"];
m1_109 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="224-224"];
m1_118 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="247-247"];
m1_119 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionsWithSets()", span="247-247"];
m1_120 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="247-247"];
m1_128 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="267-267"];
m1_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="267-267"];
m1_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="267-267"];
m1_136 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="287-287"];
m1_137 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="287-287"];
m1_138 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="287-287"];
m1_145 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="307-307"];
m1_146 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequiredAndSet()", span="307-307"];
m1_147 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="307-307"];
m1_153 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="325-325"];
m1_154 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptionWithRequired()", span="325-325"];
m1_155 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="325-325"];
m1_163 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="344-344"];
m1_164 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="344-344"];
m1_165 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="344-344"];
m1_172 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="363-363"];
m1_173 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="363-363"];
m1_174 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="363-363"];
m1_180 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="382-382"];
m1_181 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="382-382"];
m1_182 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="382-382"];
m1_189 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new FakeOptions()", span="401-401"];
m1_190 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="401-401"];
m1_139 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="298-298"];
m1_140 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="300-304"];
m1_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="306-310"];
m1_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="313-313"];
m1_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="298-298"];
m1_46 [cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs", label="Entry Unk.SequenceEqual", span=""];
m1_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="207-207"];
m1_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="210-216"];
m1_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="217-217"];
m1_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="230-230"];
m1_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="220-227"];
m1_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="207-207"];
m1_183 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="394-394"];
m1_184 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="397-397"];
m1_185 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="400-404"];
m1_186 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="407-407"];
m1_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="394-394"];
m1_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="90-90"];
m1_32 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7"];
m1_55 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14"];
m1_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135"];
m1_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="138-144"];
m1_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="147-151"];
m1_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="154-154"];
m1_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135"];
m1_127 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2"];
m1_171 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m1_85 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7"];
m1_106 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m1_102 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m1_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="259-259"];
m1_123 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="261-264"];
m1_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="266-270"];
m1_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="273-273"];
m1_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="259-259"];
m1_121 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m1_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="182-182"];
m1_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=1, file="InstanceBuilderTests.cs", label="0: var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    StringSequence = new[] { ''abc'',''1234'',''xyz@aaa.com'' }\r\n                }", span="185-188"];
m1_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=1, file="InstanceBuilderTests.cs", label="1: var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''abc;1234;xyz@aaa.com'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="191-195"];
m1_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=0, file="InstanceBuilderTests.cs", label="1: expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="198-198"];
m1_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="182-182"];
m1_116 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m1_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="236-236"];
m1_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="239-243"];
m1_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="246-250"];
m1_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="253-253"];
m1_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="236-236"];
m1_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m1_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var expectedResult = .123D", span="59-59"];
m1_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="62-66"];
m1_27 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="69-69"];
m1_28 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56"];
m1_156 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m1_58 [cluster="Unk.EqualTo", file="InstanceBuilderTests.cs", label="Entry Unk.EqualTo", span=""];
m1_117 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_56 [cluster="Unk.ShouldHave", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldHave", span=""];
m1_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m1_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m1_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var expectedResult = -123", span="40-40"];
m1_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47"];
m1_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Assert.Equal(expectedResult, result.Value.LongValue)", span="50-50"];
m1_19 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m1_175 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="375-375"];
m1_176 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="378-378"];
m1_177 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="381-385"];
m1_178 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="388-388"];
m1_179 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="375-375"];
m1_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113"];
m1_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="116-119"];
m1_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="122-126"];
m1_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="129-129"];
m1_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113"];
m1_67 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m1_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m1_20 [cluster="Unk.Equal", file="InstanceBuilderTests.cs", label="Entry Unk.Equal", span=""];
m1_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94"];
m1_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { 10, 20, 30, 40 }", span="97-97"];
m1_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104"];
m1_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="107-107"];
m1_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94"];
m1_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160"];
m1_72 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", color=green, community=0, file="InstanceBuilderTests.cs", label="1: var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="163-166"];
m1_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="169-173"];
m1_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="176-176"];
m1_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160"];
m1_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m1_191 [file="InstanceBuilderTests.cs", label=fakeOptions, span=""];
m1_192 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m2_15 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="42-42"];
m2_16 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="42-42"];
m2_21 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70"];
m2_22 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70"];
m2_19 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61"];
m2_20 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61"];
m2_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23"];
m2_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="shortName == null", span="25-25"];
m2_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="longName == null", span="26-26"];
m2_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.shortName = shortName", span="28-28"];
m2_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.longName = longName", span="29-29"];
m2_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''shortName'');", span="25-25"];
m2_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="throw new ArgumentNullException(''longName'');", span="26-26"];
m2_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.setName = string.Empty", span="30-30"];
m2_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.min = -1", span="31-31"];
m2_9 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.max = -1", span="32-32"];
m2_10 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs", label="1: this.separator = string.Empty", span="33-33"];
m2_11 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.helpText = string.Empty", span="34-34"];
m2_12 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="this.metaValue = string.Empty", span="35-35"];
m2_13 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23"];
m2_17 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51"];
m2_18 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51"];
m2_23 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m3_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m3_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m3_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m3_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m3_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m3_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m3_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m3_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m3_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m3_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m3_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="1: var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, string.Empty, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29"];
m3_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m3_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42"];
m3_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m3_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="40-42"];
m3_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-27"];
m3_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="33-33"];
m3_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="35-35"];
m3_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m3_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-27"];
m3_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="33-33"];
m3_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="33-33"];
m3_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m3_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="35-35"];
m3_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42"];
m3_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="40-42"];
m3_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m3_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m3_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m3_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m3_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m3_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_11 [cluster="T.ToMaybe<T>()", file="OptionSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m4_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m4_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.shortName = shortName", span="19-19"];
m4_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.longName = longName", span="20-20"];
m4_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.setName = setName", span="21-21"];
m4_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.helpText = helpText", span="22-22"];
m4_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.metaValue = metaValue", span="23-23"];
m4_6 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.enumValues = enumValues", span="24-24"];
m4_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m4_8 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m4_9 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="OptionSpecification.cs", label="0: return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="29-41"];
m4_10 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m4_12 [file="OptionSpecification.cs", label="CommandLine.Core.OptionSpecification", span=""];
m5_32 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m5_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_29 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m5_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28"];
m5_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.tag = tag", span="30-30"];
m5_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.required = required", span="31-31"];
m5_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.min = min", span="32-32"];
m5_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.max = max", span="33-33"];
m5_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=red, community=0, file="Specification.cs", label="1: this.separator = separator", span="34-34"];
m5_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.defaultValue = defaultValue", span="35-35"];
m5_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.conversionType = conversionType", span="36-36"];
m5_8 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28"];
m5_27 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Specification.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_34 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m5_33 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m5_26 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m5_35 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m5_9 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74"];
m5_10 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="System.Collections.Generic.List<string> enumList = new System.Collections.Generic.List<string>()", span="76-76"];
m5_11 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="property.PropertyType.IsEnum", span="77-77"];
m5_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="enumList.AddRange(Enum.GetNames(property.PropertyType))", span="79-79"];
m5_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", span="82-82"];
m5_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType, enumList)", span="86-86"];
m5_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec.WithLongName(property.Name.ToLowerInvariant(), enumList);", span="89-89"];
m5_22 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="97-97"];
m5_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", span="83-83"];
m5_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="94-94"];
m5_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="oa.Count() == 1", span="84-84"];
m5_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="87-87"];
m5_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="91-91"];
m5_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="95-95"];
m5_23 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="100-100"];
m5_24 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74"];
m5_36 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m5_28 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m5_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m5_25 [cluster="System.Collections.Generic.List<T>.List()", file="Specification.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_37 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m6_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m6_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m6_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="44-44"];
m6_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="46-46"];
m6_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="52-52"];
m6_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="48-48"];
m6_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42"];
m6_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m6_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m6_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m6_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="13-13"];
m6_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m6_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="13-13"];
m6_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m6_6 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m6_7 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="20-20"];
m6_9 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="22-22"];
m6_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m6_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m6_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="46-46"];
m6_24 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="46-46"];
m6_25 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="46-46"];
m6_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m6_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="57-57"];
m6_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptor()", span="59-59"];
m6_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="64-64"];
m6_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="65-65"];
m6_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="57-57"];
m6_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Scalar", span="61-61"];
m6_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Sequence", span="63-63"];
m6_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="62-62"];
m6_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="66-66"];
m6_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="68-68"];
m6_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="73-73"];
m6_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55"];
m6_22 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m6_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_40 [cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m6_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_21 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m6_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m6_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="SpecificationExtensions.cs", label="0: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39"];
m6_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m6_43 [file="SpecificationExtensions.cs", label=guard, span=""];
m7_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13"];
m7_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="16-19"];
m7_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs", label="1: var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, string.Empty, null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, string.Empty, null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="20-24"];
m7_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="33-33"];
m7_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="27-30"];
m7_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13"];
m7_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m7_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m7_13 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m7_17 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m7_12 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m7_39 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="59-59"];
m7_15 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="29-29"];
m7_14 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="29-29"];
m7_19 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33"];
m7_18 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="33-33"];
m7_16 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="29-29"];
m7_20 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="33-33"];
m7_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="33-33"];
m7_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33"];
m7_24 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="33-33"];
m7_34 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="55-55"];
m7_33 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="55-55"];
m7_37 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="59-59"];
m7_36 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="59-59"];
m7_35 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="55-55"];
m7_38 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="59-59"];
m7_40 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="59-59"];
m7_41 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="59-59"];
m7_25 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m7_9 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m7_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m7_26 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m7_21 [cluster="Unk.Any", file="TokenPartitionerTests.cs", label="Entry Unk.Any", span=""];
m7_10 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m7_27 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m7_28 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="42-45"];
m7_29 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="TokenPartitionerTests.cs", label="0: var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, string.Empty, null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, string.Empty, null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="46-50"];
m7_31 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="59-59"];
m7_30 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="53-56"];
m7_32 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m7_8 [cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_42 [file="TokenPartitionerTests.cs", label=specs, span=""];
m7_43 [file="TokenPartitionerTests.cs", label=result, span=""];
m7_44 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m7_45 [file="TokenPartitionerTests.cs", label=specs, span=""];
m7_46 [file="TokenPartitionerTests.cs", label=result, span=""];
m7_47 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m8_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m8_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.index = index", span="23-23"];
m8_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.min = -1", span="24-24"];
m8_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.max = -1", span="25-25"];
m8_4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=red, community=0, file="ValueAttribute.cs", label="0: this.separator = string.Empty", span="26-26"];
m8_5 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
m8_6 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m9_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m9_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="this.index = index", span="14-14"];
m9_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m9_3 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m9_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", color=red, community=0, file="ValueSpecification.cs", label="1: return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-26"];
m9_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m9_6 [cluster="T.ToMaybe<T>()", file="ValueSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m9_7 [file="ValueSpecification.cs", label="CommandLine.Core.ValueSpecification", span=""];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_34 -> m1_34  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_9  [key=2, style=dotted];
m1_35 -> m1_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_20  [key=2, style=dotted];
m1_37 -> m1_33  [color=blue, key=0, style=bold];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_162  [key=2, style=dotted];
m1_158 -> m1_117  [key=2, style=dotted];
m1_158 -> m1_160  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_9  [key=2, style=dotted];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_46  [key=2, style=dotted];
m1_160 -> m1_11  [key=2, style=dotted];
m1_161 -> m1_157  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_171  [key=2, style=dotted];
m1_167 -> m1_169  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_9  [key=2, style=dotted];
m1_168 -> m1_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_46  [key=2, style=dotted];
m1_169 -> m1_11  [key=2, style=dotted];
m1_170 -> m1_166  [color=blue, key=0, style=bold];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_127  [key=2, style=dotted];
m1_132 -> m1_134  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_9  [key=2, style=dotted];
m1_133 -> m1_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_56  [key=2, style=dotted];
m1_134 -> m1_57  [key=2, style=dotted];
m1_134 -> m1_58  [key=2, style=dotted];
m1_135 -> m1_131  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m1_1 -> m1_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_144  [key=2, style=dotted];
m1_149 -> m1_117  [key=2, style=dotted];
m1_149 -> m1_151  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_9  [key=2, style=dotted];
m1_150 -> m1_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_46  [key=2, style=dotted];
m1_151 -> m1_11  [key=2, style=dotted];
m1_152 -> m1_148  [color=blue, key=0, style=bold];
m1_188 -> m1_189  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_32  [key=2, style=dotted];
m1_40 -> m1_38  [color=blue, key=0, style=bold];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_6  [key=2, style=dotted];
m1_49 -> m1_47  [color=blue, key=0, style=bold];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_55  [key=2, style=dotted];
m1_61 -> m1_59  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_67  [key=2, style=dotted];
m1_70 -> m1_68  [color=blue, key=0, style=bold];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_76  [key=2, style=dotted];
m1_79 -> m1_77  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [color=red, key=0, style=solid];
m1_87 -> m1_88  [color=red, key=0, style=solid];
m1_87 -> m1_85  [color=red, key=2, style=dotted];
m1_88 -> m1_86  [color=blue, key=0, style=bold];
m1_96 -> m1_97  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_104  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_99 -> m1_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_67  [key=2, style=dotted];
m1_98 -> m1_96  [color=blue, key=0, style=bold];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=2, style=dotted];
m1_100 -> m1_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=2, style=dotted];
m1_104 -> m1_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=2, style=dotted];
m1_101 -> m1_99  [color=blue, key=0, style=bold];
m1_103 -> m1_104  [key=0, style=solid];
m1_105 -> m1_103  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_109 -> m1_107  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_121  [key=2, style=dotted];
m1_120 -> m1_118  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_127  [key=2, style=dotted];
m1_130 -> m1_128  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_127  [key=2, style=dotted];
m1_138 -> m1_136  [color=blue, key=0, style=bold];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_127  [key=2, style=dotted];
m1_147 -> m1_145  [color=blue, key=0, style=bold];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=2, style=dotted];
m1_155 -> m1_153  [color=blue, key=0, style=bold];
m1_163 -> m1_164  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_6  [key=2, style=dotted];
m1_165 -> m1_163  [color=blue, key=0, style=bold];
m1_172 -> m1_173  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_6  [key=2, style=dotted];
m1_174 -> m1_172  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_6  [key=2, style=dotted];
m1_182 -> m1_180  [color=blue, key=0, style=bold];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_6  [key=2, style=dotted];
m1_190 -> m1_188  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_144  [key=2, style=dotted];
m1_140 -> m1_117  [key=2, style=dotted];
m1_140 -> m1_142  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_9  [key=2, style=dotted];
m1_141 -> m1_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_46  [key=2, style=dotted];
m1_142 -> m1_11  [key=2, style=dotted];
m1_143 -> m1_139  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_67  [key=2, style=dotted];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_56  [key=2, style=dotted];
m1_93 -> m1_57  [key=2, style=dotted];
m1_93 -> m1_58  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [key=2, style=dotted];
m1_92 -> m1_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_92 -> m1_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_94 -> m1_89  [color=blue, key=0, style=bold];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_171  [key=2, style=dotted];
m1_184 -> m1_186  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_9  [key=2, style=dotted];
m1_185 -> m1_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_46  [key=2, style=dotted];
m1_186 -> m1_11  [key=2, style=dotted];
m1_187 -> m1_183  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_67  [key=2, style=dotted];
m1_63 -> m1_65  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_9  [key=2, style=dotted];
m1_64 -> m1_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_56  [key=2, style=dotted];
m1_65 -> m1_57  [key=2, style=dotted];
m1_65 -> m1_58  [key=2, style=dotted];
m1_66 -> m1_62  [color=blue, key=0, style=bold];
m1_122 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_127  [key=2, style=dotted];
m1_123 -> m1_125  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_9  [key=2, style=dotted];
m1_124 -> m1_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_56  [key=2, style=dotted];
m1_125 -> m1_57  [key=2, style=dotted];
m1_125 -> m1_58  [key=2, style=dotted];
m1_126 -> m1_122  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [color=red, key=0, style=solid];
m1_81 -> m1_82  [color=red, key=0, style=solid];
m1_81 -> m1_85  [color=red, key=2, style=dotted];
m1_81 -> m1_83  [color=red, key=1, label=expectedResult, style=dashed];
m1_82 -> m1_83  [color=red, key=0, style=solid];
m1_82 -> m1_9  [color=red, key=2, style=dotted];
m1_82 -> m1_86  [color=red, key=1, label="lambda expression", style=dashed];
m1_83 -> m1_84  [color=red, key=0, style=solid];
m1_83 -> m1_56  [color=red, key=2, style=dotted];
m1_83 -> m1_57  [color=red, key=2, style=dotted];
m1_83 -> m1_58  [color=red, key=2, style=dotted];
m1_84 -> m1_80  [color=blue, key=0, style=bold];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_116  [key=2, style=dotted];
m1_112 -> m1_117  [key=2, style=dotted];
m1_112 -> m1_114  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_9  [key=2, style=dotted];
m1_113 -> m1_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_46  [key=2, style=dotted];
m1_114 -> m1_11  [key=2, style=dotted];
m1_115 -> m1_111  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_25 -> m1_25  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_9  [key=2, style=dotted];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_20  [key=2, style=dotted];
m1_28 -> m1_24  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_16 -> m1_16  [color=darkorchid, key=3, label="Local variable int expectedResult", style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_9  [key=2, style=dotted];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=2, style=dotted];
m1_19 -> m1_15  [color=blue, key=0, style=bold];
m1_175 -> m1_176  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_171  [key=2, style=dotted];
m1_176 -> m1_178  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_9  [key=2, style=dotted];
m1_177 -> m1_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_46  [key=2, style=dotted];
m1_178 -> m1_11  [key=2, style=dotted];
m1_179 -> m1_175  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_53  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_9  [key=2, style=dotted];
m1_52 -> m1_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_56  [key=2, style=dotted];
m1_53 -> m1_57  [key=2, style=dotted];
m1_53 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_50  [color=blue, key=0, style=bold];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_9  [key=2, style=dotted];
m1_43 -> m1_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_44 -> m1_11  [key=2, style=dotted];
m1_45 -> m1_41  [color=blue, key=0, style=bold];
m1_71 -> m1_72  [color=green, key=0, style=solid];
m1_72 -> m1_73  [color=green, key=0, style=solid];
m1_72 -> m1_76  [color=green, key=2, style=dotted];
m1_72 -> m1_74  [color=green, key=1, label=expectedResult, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_9  [key=2, style=dotted];
m1_73 -> m1_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_56  [key=2, style=dotted];
m1_74 -> m1_57  [key=2, style=dotted];
m1_74 -> m1_58  [key=2, style=dotted];
m1_75 -> m1_71  [color=blue, key=0, style=bold];
m1_191 -> m1_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m1_192 -> m1_104  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_192 -> m1_108  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_15  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_21  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_19  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_2 -> m2_13  [key=0, style=solid];
m2_2 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_13  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_0  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_17  [color=blue, key=0, style=bold];
m2_23 -> m2_5  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_6  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_7  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_8  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_9  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_10  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_11  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m2_23 -> m2_12  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_7  [color=green, key=2, style=dotted];
m3_2 -> m3_8  [color=green, key=2, style=dotted];
m3_2 -> m3_9  [color=green, key=2, style=dotted];
m3_2 -> m3_10  [color=green, key=2, style=dotted];
m3_2 -> m3_11  [color=green, key=2, style=dotted];
m3_2 -> m3_12  [color=green, key=2, style=dotted];
m3_2 -> m3_16  [color=green, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_15  [key=2, style=dotted];
m3_4 -> m3_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_28 -> m3_29  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_22 -> m3_20  [color=blue, key=0, style=bold];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_26 -> m3_24  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_23  [key=2, style=dotted];
m3_29 -> m3_31  [key=2, style=dotted];
m3_30 -> m3_28  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=red, key=0, style=solid];
m4_9 -> m4_10  [color=red, key=0, style=solid];
m4_9 -> m4_0  [color=red, key=2, style=dotted];
m4_9 -> m4_11  [color=red, key=2, style=dotted];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_12 -> m4_1  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_12 -> m4_2  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_12 -> m4_3  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_12 -> m4_4  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_12 -> m4_5  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_12 -> m4_6  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_0 -> m5_5  [color=red, key=1, label=string, style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m5_0 -> m5_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_5 -> m5_6  [color=red, key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_0  [color=blue, key=0, style=bold];
m5_35 -> m5_0  [color=darkorchid, key=3, label="Field variable CommandLine.Core.SpecificationType tag", style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_12  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_13  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_16  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_22  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_25  [key=2, style=dotted];
m5_10 -> m5_12  [color=darkseagreen4, key=1, label=enumList, style=dashed];
m5_10 -> m5_16  [color=darkseagreen4, key=1, label=enumList, style=dashed];
m5_10 -> m5_18  [color=darkseagreen4, key=1, label=enumList, style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_26  [key=2, style=dotted];
m5_12 -> m5_27  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_28  [key=2, style=dotted];
m5_13 -> m5_20  [color=darkseagreen4, key=1, label=attrs, style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_31  [key=2, style=dotted];
m5_16 -> m5_32  [key=2, style=dotted];
m5_16 -> m5_18  [color=darkseagreen4, key=1, label=spec, style=dashed];
m5_16 -> m5_19  [color=darkseagreen4, key=1, label=spec, style=dashed];
m5_18 -> m5_24  [key=0, style=solid];
m5_18 -> m5_33  [key=2, style=dotted];
m5_18 -> m5_34  [key=2, style=dotted];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_31  [key=2, style=dotted];
m5_22 -> m5_35  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_29  [key=2, style=dotted];
m5_14 -> m5_16  [color=darkseagreen4, key=1, label=oa, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label=va, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=0, style=solid];
m5_15 -> m5_30  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_19 -> m5_24  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=0, style=solid];
m5_21 -> m5_30  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_36  [key=2, style=dotted];
m5_24 -> m5_9  [color=blue, key=0, style=bold];
m5_37 -> m5_1  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_5  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_37 -> m5_7  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m6_15 -> m6_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m6_15 -> m6_15  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=0, style=solid];
m6_16 -> m6_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m6_16 -> m6_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_16  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_18 -> m6_20  [key=0, style=solid];
m6_18 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_15  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_8 -> m6_5  [key=2, style=dotted];
m6_10 -> m6_6  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_27 -> m6_34  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_27 -> m6_35  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_33  [key=0, style=solid];
m6_30 -> m6_40  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m6_29 -> m6_39  [key=0, style=solid];
m6_29 -> m6_5  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_32 -> m6_39  [key=0, style=solid];
m6_32 -> m6_41  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=0, style=solid];
m6_37 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [key=2, style=dotted];
m6_39 -> m6_27  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_12 -> m6_14  [color=red, key=2, style=dotted];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_43 -> m6_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=2, style=dotted];
m7_2 -> m7_8  [color=green, key=2, style=dotted];
m7_2 -> m7_15  [color=green, key=1, label=specs, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_13  [key=2, style=dotted];
m7_4 -> m7_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_9  [key=2, style=dotted];
m7_3 -> m7_10  [key=2, style=dotted];
m7_3 -> m7_11  [key=2, style=dotted];
m7_3 -> m7_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=2, style=dotted];
m7_19 -> m7_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_19 -> m7_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_20 -> m7_18  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_26  [key=2, style=dotted];
m7_23 -> m7_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_24 -> m7_22  [color=blue, key=0, style=bold];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_17  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_21  [key=2, style=dotted];
m7_37 -> m7_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_37 -> m7_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_36 -> m7_37  [key=0, style=solid];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_25  [key=2, style=dotted];
m7_40 -> m7_26  [key=2, style=dotted];
m7_40 -> m7_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_41 -> m7_39  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_6  [key=2, style=dotted];
m7_28 -> m7_31  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_7  [color=green, key=2, style=dotted];
m7_29 -> m7_8  [color=green, key=2, style=dotted];
m7_29 -> m7_34  [color=green, key=1, label=specs, style=dashed];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_12  [key=2, style=dotted];
m7_31 -> m7_13  [key=2, style=dotted];
m7_31 -> m7_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_9  [key=2, style=dotted];
m7_30 -> m7_10  [key=2, style=dotted];
m7_30 -> m7_11  [key=2, style=dotted];
m7_30 -> m7_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_30 -> m7_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_32 -> m7_27  [color=blue, key=0, style=bold];
m7_42 -> m7_15  [color=darkseagreen4, key=1, label=specs, style=dashed];
m7_43 -> m7_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_44 -> m7_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_45 -> m7_34  [color=darkseagreen4, key=1, label=specs, style=dashed];
m7_46 -> m7_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_47 -> m7_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [color=red, key=0, style=solid];
m8_4 -> m8_5  [color=red, key=0, style=solid];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_6 -> m8_1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m8_6 -> m8_2  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m8_6 -> m8_3  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m8_6 -> m8_4  [color=red, key=1, label="CommandLine.ValueAttribute", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_3 -> m9_4  [color=red, key=0, style=solid];
m9_4 -> m9_5  [color=red, key=0, style=solid];
m9_4 -> m9_0  [color=red, key=2, style=dotted];
m9_4 -> m9_6  [color=red, key=2, style=dotted];
m9_5 -> m9_3  [color=blue, key=0, style=bold];
m9_7 -> m9_1  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
}
