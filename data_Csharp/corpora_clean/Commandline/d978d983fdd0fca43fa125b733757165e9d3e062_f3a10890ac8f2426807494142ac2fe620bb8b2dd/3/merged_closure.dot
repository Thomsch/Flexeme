digraph  {
n665 [label="CommandLine.HelpOptionAttribute", span=""];
n666 [label="CommandLine.OptionAttribute", span=""];
n667 [label="CommandLine.OptionListAttribute", span=""];
n668 [label="CommandLine.ValueListAttribute", span=""];
n669 [label="CommandLine.ArgumentParser", span=""];
n670 [label="CommandLine.BadOptionInfo", span=""];
n671 [label="CommandLine.LongOptionParser", span=""];
n672 [label="CommandLine.OneCharStringEnumerator", span=""];
n673 [label="CommandLine.OptionGroupParser", span=""];
n674 [label="CommandLine.OptionInfo", span=""];
n675 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n676 [label="CommandLine.OptionMap", span=""];
n677 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n678 [label="CommandLine.ParsingError", span=""];
n679 [label="CommandLine.PostParsingState", span=""];
n680 [label="CommandLine.StringArrayEnumerator", span=""];
n681 [label="CommandLine.TargetWrapper", span=""];
n682 [label="CommandLine.CommandLineOptionsBase", span=""];
n683 [label="CommandLine.CommandLineParserSettings", span=""];
n684 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n14 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n18 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n19 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n20 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n21 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n31 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n32 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n33 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="247-247"];
n38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="247-247"];
n39 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="271-271"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="271-271"];
n42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="281-281"];
n50 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="281-281"];
n49 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n51 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1470-1470"];
n52 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="305-305"];
n60 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="332-332"];
n61 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n62 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="305-305"];
n63 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n64 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="318-318"];
n73 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1760-1760"];
n72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="318-318"];
n83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="332-332"];
n84 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="362-362"];
n86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="362-362"];
n87 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n88 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="367-367"];
n89 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="367-367"];
n90 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="371-371"];
n92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="371-371"];
n93 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1219-1219"];
n94 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n95 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="378-378"];
n104 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n103 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="378-378"];
n105 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="517-517"];
n106 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="691-691"];
n107 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="392-392"];
n111 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="392-392"];
n112 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="407-407"];
n121 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="508-508"];
n122 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n123 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="510-510"];
n120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="407-407"];
n124 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1465-1465"];
n125 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="424-424"];
n127 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="424-424"];
n128 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n129 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="429-429"];
n131 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="429-429"];
n132 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="434-434"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="434-434"];
n135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="439-439"];
n141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="439-439"];
n142 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="449-449"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="449-449"];
n146 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="455-455"];
n149 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="455-455"];
n150 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="467-467"];
n151 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="467-467"];
n152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="471-471"];
n155 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="471-471"];
n156 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="503-503"];
n157 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="503-503"];
n158 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="508-508"];
n159 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="510-510"];
n160 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="517-517"];
n161 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="522-522"];
n203 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n204 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n205 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="839-839"];
n206 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n207 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="850-850"];
n208 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="930-930"];
n202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="522-522"];
n209 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="608-608"];
n214 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1745-1745"];
n213 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="608-608"];
n215 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="652-652"];
n217 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="652-652"];
n218 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="657-657"];
n226 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n225 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="657-657"];
n227 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="670-670"];
n233 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="670-670"];
n234 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="681-681"];
n236 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="681-681"];
n237 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n238 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="686-686"];
n239 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="686-686"];
n240 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="693-693"];
n283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="693-693"];
n284 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="790-790"];
n296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="790-790"];
n297 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n298 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="818-818"];
n309 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1043-1043"];
n308 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="818-818"];
n317 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1847-1847"];
n315 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="839-839"];
n316 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="940-940"];
n318 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="909-909"];
n319 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="874-874"];
n332 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n333 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n334 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n335 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n331 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="850-850"];
n349 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="874-874"];
n357 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n358 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n356 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="909-909"];
n362 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="930-930"];
n373 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n372 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="940-940"];
n374 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1023-1023"];
n376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1023-1023"];
n377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1032-1032"];
n379 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1032-1032"];
n390 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n389 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1043-1043"];
n391 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1094-1094"];
n393 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1094-1094"];
n394 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1112-1112"];
n395 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1099-1099"];
n402 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1151-1151"];
n401 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1099-1099"];
n414 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1137-1137"];
n413 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1112-1112"];
n420 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n421 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n419 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1137-1137"];
n431 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1151-1151"];
n432 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1214-1214"];
n433 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1174-1174"];
n436 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1174-1174"];
n437 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1190-1190"];
n442 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n441 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1190-1190"];
n443 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1198-1198"];
n448 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1198-1198"];
n449 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n451 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1214-1214"];
n454 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1219-1219"];
n455 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1267-1267"];
n457 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1267-1267"];
n458 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1287-1287"];
n464 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1738-1738"];
n463 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1287-1287"];
n465 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1337-1337"];
n467 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1337-1337"];
n468 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1342-1342"];
n473 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1342-1342"];
n474 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1352-1352"];
n476 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1352-1352"];
n477 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1357-1357"];
n484 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1357-1357"];
n485 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1371-1371"];
n486 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1371-1371"];
n487 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1382-1382"];
n492 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1382-1382"];
n493 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1392-1392"];
n499 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1392-1392"];
n500 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1423-1423"];
n501 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1423-1423"];
n502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1438-1438"];
n503 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1438-1438"];
n504 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1446-1446"];
n506 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1446-1446"];
n507 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1465-1465"];
n508 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1470-1470"];
n509 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1475-1475"];
n510 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1475-1475"];
n511 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1480-1480"];
n512 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1480-1480"];
n513 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1496-1496"];
n514 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1496-1496"];
n515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1506-1506"];
n517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1506-1506"];
n518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1517-1517"];
n520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1517-1517"];
n521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1530-1530"];
n524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1530-1530"];
n525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1542-1542"];
n528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1542-1542"];
n529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1556-1556"];
n533 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1556-1556"];
n534 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1593-1593"];
n536 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1593-1593"];
n537 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1604-1604"];
n540 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1604-1604"];
n541 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1621-1621"];
n543 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1621-1621"];
n544 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1639-1639"];
n557 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1786-1786"];
n558 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1704-1704"];
n559 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1661-1661"];
n560 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n556 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1639-1639"];
n582 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1727-1727"];
n581 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1661-1661"];
n594 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1704-1704"];
n597 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1727-1727"];
n598 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n601 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1738-1738"];
n604 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1745-1745"];
n605 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n606 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1751-1751"];
n609 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1751-1751"];
n610 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n623 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n624 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n625 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n626 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n622 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1760-1760"];
n635 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n634 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1786-1786"];
n636 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1805-1805"];
n644 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1805-1805"];
n645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1824-1824"];
n656 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1824-1824"];
n658 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1847-1847"];
n659 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n660 [cluster="System.Type.Equals(System.Type)", label="Entry System.Type.Equals(System.Type)", span="0-0"];
n661 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1877-1877"];
n663 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1877-1877"];
n664 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="base.ShortName = shortName", prediction=0, span="116-116"];
d4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="base.LongName = longName", prediction=1, span="117-117"];
d7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="text = null", prediction=2, span="134-134"];
d8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="var method = pair.Left", prediction=3, span="136-136"];
d9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="!CheckMethodSignature(method)", prediction=4, span="137-137"];
d11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="text = (string)method.Invoke(target, null)", prediction=5, span="140-140"];
d10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="throw new MemberAccessException();", prediction=6, span="138-138"];
d16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", prediction=7, span="145-145"];
d22 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="!string.IsNullOrEmpty(shortName)", prediction=8, span="183-183"];
d23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName = shortName", prediction=9, span="184-184"];
d24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="!string.IsNullOrEmpty(longName)", prediction=10, span="185-185"];
d26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName == null", prediction=11, span="188-188"];
d25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName = longName", prediction=12, span="186-186"];
d28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="base.ShortName = shortName", prediction=13, span="191-191"];
d29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="base.LongName = longName", prediction=14, span="192-192"];
d27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="throw new InvalidOperationException();", prediction=15, span="189-189"];
d34 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0, label="Separator = ':'", prediction=16, span="238-238"];
d37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, label="Separator = separator", prediction=17, span="250-250"];
d40 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, label="MaximumElements = -1", prediction=18, span="273-273"];
d43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="concreteType == null", prediction=19, span="284-284"];
d44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="throw new ArgumentNullException(''concreteType'');", prediction=20, span="285-285"];
d45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="!typeof(IList<string>).IsAssignableFrom(concreteType)", prediction=21, span="287-287"];
d46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="throw new CommandLineParserException(''The types are incompatible.'');", prediction=22, span="288-288"];
d47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="_concreteType = concreteType", prediction=23, span="290-290"];
d53 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="Type concreteType", prediction=24, span="307-307"];
d54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="var property = GetProperty(target, out concreteType)", prediction=25, span="308-308"];
d55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="property == null || concreteType == null", prediction=26, span="310-310"];
d57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", prediction=25, span="313-313"];
d58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="return (IList<string>)property.GetValue(target, null);", prediction=25, span="315-315"];
d56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="return null;", prediction=29, span="311-311"];
d65 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=30, span="320-320"];
d66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="list == null || list.Count == 0", prediction=31, span="321-321"];
d68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="list.Count > 1", prediction=30, span="324-324"];
d70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="var pairZero = list[0]", prediction=33, span="327-327"];
d67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="return null;", prediction=34, span="322-322"];
d69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="throw new InvalidOperationException();", prediction=35, span="325-325"];
d71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="return pairZero.Right;", prediction=36, span="329-329"];
d74 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="concreteType = null", prediction=37, span="334-334"];
d75 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=38, span="336-336"];
d76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="list == null || list.Count == 0", prediction=39, span="337-337"];
d78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="list.Count > 1", prediction=38, span="340-340"];
d80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="var pairZero = list[0]", prediction=41, span="343-343"];
d77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="return null;", prediction=42, span="338-338"];
d79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="throw new InvalidOperationException();", prediction=43, span="341-341"];
d81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="concreteType = pairZero.Right.ConcreteType", prediction=44, span="344-344"];
d82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="return pairZero.Left;", prediction=41, span="346-346"];
d85 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, label="this.PostParsingState = new List<ParsingError>()", prediction=46, span="364-364"];
d91 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", prediction=47, span="375-375"];
d96 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument.Equals(''-'', StringComparison.InvariantCulture)", prediction=48, span="380-380"];
d97 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return null;", prediction=49, span="381-381"];
d98 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument[0] == '-' && argument[1] == '-'", prediction=50, span="383-383"];
d99 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return new LongOptionParser();", prediction=51, span="384-384"];
d100 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument[0] == '-'", prediction=50, span="386-386"];
d101 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return new OptionGroupParser();", prediction=53, span="387-387"];
d102 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return null;", prediction=54, span="389-389"];
d108 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="argument.Length > 0", prediction=55, span="394-394"];
d109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", prediction=56, span="395-395"];
d110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="return true;", prediction=57, span="397-397"];
d113 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="IList<string> list = new List<string>()", prediction=58, span="409-409"];
d114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="ae.MoveNext()", prediction=58, span="411-411"];
d116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="list.Add(ae.Current)", prediction=58, span="414-414"];
d119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="return list;", prediction=58, span="421-421"];
d115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="IsInputValue(ae.Current)", prediction=58, span="413-413"];
d117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="!ae.MovePrevious()", prediction=58, span="418-418"];
d118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="throw new CommandLineParserException();", prediction=64, span="419-419"];
d126 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", prediction=65, span="426-426"];
d130 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", prediction=66, span="431-431"];
d133 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, label="return BooleanToParserState(value, false);", prediction=67, span="436-436"];
d136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="value && !addMoveNextIfTrue", prediction=68, span="441-441"];
d137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Success;", prediction=69, span="442-442"];
d138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="value && addMoveNextIfTrue", prediction=70, span="443-443"];
d139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Success | ParserState.MoveOnNextElement;", prediction=71, span="444-444"];
d140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Failure;", prediction=72, span="446-446"];
d143 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="!option.IsAttributeArrayCompatible", prediction=73, span="451-451"];
d144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="throw new CommandLineParserException();", prediction=74, span="452-452"];
d147 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="!option.IsArray && option.IsAttributeArrayCompatible", prediction=75, span="457-457"];
d148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="throw new CommandLineParserException();", prediction=76, span="458-458"];
d153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="ShortName = shortName", prediction=77, span="473-473"];
d154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="LongName = longName", prediction=78, span="474-474"];
d162 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", prediction=79, span="524-524"];
d163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var option = map[parts[0]]", prediction=80, span="525-525"];
d170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", prediction=79, span="537-537"];
d172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 2", prediction=79, span="540-540"];
d174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(parts[1], options)", prediction=83, span="544-544"];
d180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="items.Insert(0, parts[1])", prediction=79, span="555-555"];
d196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 2", prediction=79, span="590-590"];
d164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var valueSetting = false", prediction=86, span="526-526"];
d165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option == null", prediction=80, span="528-528"];
d167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option.IsDefined = true", prediction=88, span="531-531"];
d168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=80, span="533-533"];
d169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsBoolean", prediction=80, span="535-535"];
d173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=80, span="542-542"];
d176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=80, span="546-546"];
d178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=80, span="552-552"];
d181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=94, span="557-557"];
d183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=80, span="559-559"];
d185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=80, span="566-566"];
d186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=97, span="568-568"];
d188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=80, span="570-570"];
d190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=80, span="576-576"];
d192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=100, span="580-580"];
d194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=80, span="582-582"];
d198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(true, options)", prediction=102, span="593-593"];
d200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=80, span="595-595"];
d171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=104, span="538-538"];
d175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=105, span="545-545"];
d177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=83, span="548-548"];
d179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=107, span="554-554"];
d182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=108, span="558-558"];
d184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=94, span="561-561"];
d187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=110, span="569-569"];
d189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=97, span="572-572"];
d191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=112, span="578-578"];
d193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=113, span="581-581"];
d195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=100, span="584-584"];
d199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=115, span="594-594"];
d201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=102, span="597-597"];
d197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=117, span="591-591"];
d166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=118, span="529-529"];
d210 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="Assumes.NotNullOrEmpty(value, ''value'')", prediction=119, span="610-610"];
d211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="_data = value", prediction=120, span="612-612"];
d212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="_index = -1", prediction=121, span="613-613"];
d216 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, label="_index = -1", prediction=122, span="654-654"];
d219 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index < (_data.Length - 1)", prediction=123, span="659-659"];
d220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index++", prediction=123, span="661-661"];
d223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index = _data.Length", prediction=125, span="665-665"];
d221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_currentElement = _data.Substring(_index, 1)", prediction=126, span="662-662"];
d224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="return false;", prediction=127, span="667-667"];
d222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="return true;", prediction=128, span="663-663"];
d228 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="_index == -1", prediction=123, span="672-672"];
d229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new InvalidOperationException();", prediction=130, span="673-673"];
d230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="_index > _data.Length", prediction=123, span="675-675"];
d231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new InvalidOperationException();", prediction=132, span="676-676"];
d232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="return _data.Substring(_index + 1);", prediction=123, span="678-678"];
d235 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, label="throw new NotSupportedException();", prediction=134, span="683-683"];
d241 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var valueSetting = false", prediction=135, span="695-695"];
d242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", prediction=136, span="697-697"];
d243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="group.MoveNext()", prediction=137, span="698-698"];
d244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var option = map[group.Current]", prediction=136, span="700-700"];
d250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="argumentEnumerator.IsLast && group.IsLast", prediction=136, span="710-710"];
d252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!group.IsLast", prediction=136, span="713-713"];
d254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", prediction=141, span="717-717"];
d260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="items.Insert(0, group.GetRemainingFromNext())", prediction=136, span="728-728"];
d278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!group.IsLast && map[group.Next] == null", prediction=136, span="766-766"];
d245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option == null", prediction=144, span="701-701"];
d247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option.IsDefined = true", prediction=145, span="704-704"];
d248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=136, span="706-706"];
d249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsBoolean", prediction=136, span="708-708"];
d253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=136, span="715-715"];
d256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=136, span="719-719"];
d258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=136, span="725-725"];
d261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=151, span="730-730"];
d263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=136, span="732-732"];
d267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=136, span="742-742"];
d268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=154, span="744-744"];
d270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=136, span="746-746"];
d272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=136, span="752-752"];
d274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=157, span="756-756"];
d276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=136, span="758-758"];
d280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.SetValue(true, options)", prediction=136, span="769-769"];
d251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=160, span="711-711"];
d255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=161, span="718-718"];
d257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=141, span="721-721"];
d259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=163, span="727-727"];
d262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=164, span="731-731"];
d264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=151, span="734-734"];
d265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", prediction=136, span="738-738"];
d266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=167, span="739-739"];
d269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=168, span="745-745"];
d271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=154, span="748-748"];
d273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=170, span="754-754"];
d275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=171, span="757-757"];
d277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=157, span="760-760"];
d279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=173, span="767-767"];
d281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=174, span="770-770"];
d282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Success;", prediction=175, span="774-774"];
d246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=176, span="702-702"];
d285 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="attribute != null", prediction=177, span="792-792"];
d286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_required = attribute.Required", prediction=178, span="794-794"];
d292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", prediction=179, span="802-802"];
d287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_helpText = attribute.HelpText", prediction=180, span="795-795"];
d288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_shortName = attribute.ShortName", prediction=181, span="796-796"];
d289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_longName = attribute.LongName", prediction=182, span="797-797"];
d290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", prediction=183, span="798-798"];
d291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_attribute = attribute", prediction=184, span="799-799"];
d293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="property != null", prediction=185, span="804-804"];
d294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_property = property", prediction=186, span="805-805"];
d295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", prediction=187, span="807-807"];
d299 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", prediction=188, span="820-820"];
d300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="list != null", prediction=189, span="821-821"];
d301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="var map = new OptionMap(list.Count, settings)", prediction=190, span="823-823"];
d302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=1, label=list, prediction=188, span="825-825"];
d304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", prediction=192, span="828-828"];
d305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="map.RawOptions = target", prediction=193, span="831-831"];
d306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="return map;", prediction=190, span="833-833"];
d307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="return null;", prediction=195, span="836-836"];
d303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="pair != null && pair.Right != null", prediction=196, span="827-827"];
d310 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="_attribute is OptionListAttribute", prediction=197, span="841-841"];
d311 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetValueList(value, options);", prediction=197, span="842-842"];
d312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="ReflectionUtil.IsNullableType(_property.PropertyType)", prediction=197, span="844-844"];
d313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetNullableValue(value, options);", prediction=197, span="845-845"];
d314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetValueScalar(value, options);", prediction=197, span="847-847"];
d320 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="Type elementType = _property.PropertyType.GetElementType()", prediction=197, span="852-852"];
d321 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="Array array = Array.CreateInstance(elementType, values.Count)", prediction=197, span="853-853"];
d325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", prediction=197, span="861-861"];
d322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="int i = 0", prediction=197, span="855-855"];
d323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="i < array.Length", prediction=197, span="855-855"];
d326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="_property.SetValue(options, array, null)", prediction=197, span="862-862"];
d324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label=_setValueLock, prediction=197, span="859-859"];
d327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label=FormatException, prediction=209, span="865-865"];
d329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="i++", prediction=197, span="855-855"];
d367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="int i = 0", prediction=211, span="949-949"];
d585 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="i < args.Length", prediction=212, span="1708-1708"];
d330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="return true;", prediction=213, span="871-871"];
d328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="return false;", prediction=214, span="867-867"];
d336 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.PropertyType.IsEnum", prediction=197, span="878-878"];
d337 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=_setValueLock, prediction=197, span="880-880"];
d339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=_setValueLock, prediction=197, span="887-887"];
d338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", prediction=197, span="882-882"];
d341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=InvalidCastException, prediction=219, span="893-893"];
d343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=FormatException, prediction=220, span="897-897"];
d345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=ArgumentException, prediction=221, span="901-901"];
d347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return true;", prediction=222, span="906-906"];
d340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", prediction=197, span="889-889"];
d342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=224, span="895-895"];
d344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=225, span="899-899"];
d346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=226, span="903-903"];
d350 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="var nc = new NullableConverter(_property.PropertyType)", prediction=197, span="911-911"];
d351 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label=_setValueLock, prediction=197, span="915-915"];
d352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="_property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", prediction=197, span="917-917"];
d353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label=Exception, prediction=230, span="922-922"];
d355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="return true;", prediction=231, span="927-927"];
d354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="return false;", prediction=232, span="924-924"];
d359 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label=_setValueLock, prediction=197, span="932-932"];
d360 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="_property.SetValue(options, value, null)", prediction=197, span="934-934"];
d361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="return true;", prediction=235, span="936-936"];
d363 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label=_setValueLock, prediction=197, span="942-942"];
d364 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="_property.SetValue(options, new List<string>(), null)", prediction=197, span="944-944"];
d365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="var fieldRef = (IList<string>)_property.GetValue(options, null)", prediction=211, span="946-946"];
d366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", prediction=211, span="947-947"];
d369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="fieldRef.Add(values[i])", prediction=211, span="951-951"];
d368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="i < values.Length", prediction=211, span="949-949"];
d370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="i++", prediction=211, span="949-949"];
d371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="return true;", prediction=243, span="954-954"];
d375 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, label="BadOption = option", prediction=244, span="1026-1026"];
d378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, label="++count", prediction=245, span="1032-1032"];
d380 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings = settings", prediction=246, span="1045-1045"];
d381 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="IEqualityComparer<string> comparer", prediction=247, span="1047-1047"];
d385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_names = new Dictionary<string, string>(capacity, comparer)", prediction=248, span="1053-1053"];
d383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="comparer = StringComparer.Ordinal", prediction=249, span="1049-1049"];
d384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="comparer = StringComparer.OrdinalIgnoreCase", prediction=250, span="1051-1051"];
d386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", prediction=251, span="1054-1054"];
d387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings.MutuallyExclusive", prediction=252, span="1056-1056"];
d388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", prediction=253, span="1059-1059"];
d382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings.CaseSensitive", prediction=252, span="1048-1048"];
d392 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", prediction=252, span="1096-1096"];
d396 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="_map.Values", prediction=252, span="1101-1101"];
d397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="option.Required && !option.IsDefined", prediction=257, span="1103-1103"];
d400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="return true;", prediction=258, span="1109-1109"];
d398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", prediction=252, span="1105-1105"];
d399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="return false;", prediction=260, span="1106-1106"];
d403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="!_settings.MutuallyExclusive", prediction=252, span="1114-1114"];
d404 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return true;", prediction=262, span="1115-1115"];
d405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="_map.Values", prediction=252, span="1117-1117"];
d406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="option.IsDefined && option.MutuallyExclusiveSet != null", prediction=264, span="1119-1119"];
d407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="BuildMutuallyExclusiveMap(option)", prediction=252, span="1120-1120"];
d408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="_mutuallyExclusiveSetMap.Values", prediction=252, span="1124-1124"];
d409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="info.Occurrence > 1", prediction=267, span="1126-1126"];
d412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return true;", prediction=268, span="1134-1134"];
d410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", prediction=252, span="1129-1129"];
d411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return false;", prediction=270, span="1130-1130"];
d415 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="var setName = option.MutuallyExclusiveSet", prediction=252, span="1139-1139"];
d416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", prediction=252, span="1141-1141"];
d417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", prediction=252, span="1144-1144"];
d418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", prediction=252, span="1148-1148"];
d422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="options is CommandLineOptionsBase", prediction=275, span="1153-1153"];
d423 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="ParsingError error = new ParsingError()", prediction=276, span="1155-1155"];
d424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.BadOption.ShortName = option.ShortName", prediction=277, span="1158-1158"];
d425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.BadOption.LongName = option.LongName", prediction=278, span="1159-1159"];
d426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="required != null", prediction=276, span="1161-1161"];
d427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.ViolatesRequired = required.Value", prediction=280, span="1161-1161"];
d428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="mutualExclusiveness != null", prediction=276, span="1162-1162"];
d429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", prediction=282, span="1162-1162"];
d430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", prediction=276, span="1164-1164"];
d434 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="_left = left", prediction=284, span="1176-1176"];
d435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="_right = right", prediction=285, span="1177-1177"];
d438 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", prediction=286, span="1192-1192"];
d439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", prediction=287, span="1193-1193"];
d440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="return leftHash ^ rightHash;", prediction=286, span="1195-1195"];
d444 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="var other = obj as Pair<TLeft, TRight>", prediction=289, span="1200-1200"];
d445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="other == null", prediction=290, span="1202-1202"];
d447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="return Equals(_left, other._left) && Equals(_right, other._right);", prediction=289, span="1205-1205"];
d446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="return false;", prediction=292, span="1203-1203"];
d450 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, label="this.BadOption = new BadOptionInfo()", prediction=293, span="1216-1216"];
d452 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="this.BadOption = new BadOptionInfo(shortName, longName)", prediction=294, span="1223-1223"];
d453 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="this.ViolatesFormat = format", prediction=295, span="1225-1225"];
d456 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, label="Errors = new List<ParsingError>()", prediction=296, span="1269-1269"];
d459 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="Assumes.NotNull(value, ''value'')", prediction=297, span="1289-1289"];
d460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_data = value", prediction=298, span="1291-1291"];
d461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_index = -1", prediction=299, span="1292-1292"];
d462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_endIndex = value.Length", prediction=300, span="1293-1293"];
d466 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, label="_index = -1", prediction=301, span="1339-1339"];
d469 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="_index < _endIndex", prediction=302, span="1344-1344"];
d470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="_index++", prediction=302, span="1346-1346"];
d472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="return false;", prediction=304, span="1349-1349"];
d471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="return _index < _endIndex;", prediction=302, span="1347-1347"];
d475 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new NotSupportedException();", prediction=306, span="1354-1354"];
d478 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index <= 0", prediction=302, span="1359-1359"];
d479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="throw new InvalidOperationException();", prediction=308, span="1361-1361"];
d480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index <= _endIndex", prediction=302, span="1363-1363"];
d481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index--", prediction=302, span="1365-1365"];
d483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="return false;", prediction=311, span="1368-1368"];
d482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="return _index <= _endIndex;", prediction=302, span="1366-1366"];
d488 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_target = target", prediction=313, span="1384-1384"];
d489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_vla = ValueListAttribute.GetAttribute(_target)", prediction=314, span="1385-1385"];
d490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label=IsValueListDefined, prediction=315, span="1386-1386"];
d491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_valueList = ValueListAttribute.GetReference(_target)", prediction=316, span="1387-1387"];
d494 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", prediction=315, span="1394-1394"];
d495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="return false;", prediction=318, span="1395-1395"];
d496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label=this, prediction=315, span="1397-1397"];
d497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="_valueList.Add(item)", prediction=315, span="1399-1399"];
d498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="return true;", prediction=321, span="1402-1402"];
d505 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, label="LastPostParsingState = new PostParsingState()", prediction=322, span="1448-1448"];
d516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=323, span="1508-1508"];
d519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=324, span="1520-1520"];
d522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=325, span="1532-1532"];
d523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=326, span="1533-1533"];
d526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=327, span="1544-1544"];
d527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="MutuallyExclusive = mutuallyExclusive", prediction=328, span="1545-1545"];
d530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=329, span="1558-1558"];
d531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="MutuallyExclusive = mutuallyExclusive", prediction=330, span="1559-1559"];
d532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=331, span="1560-1560"];
d535 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, label="_settings = new CommandLineParserSettings()", prediction=332, span="1595-1595"];
d538 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="Assumes.NotNull(settings, ''settings'')", prediction=333, span="1606-1606"];
d539 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings = settings", prediction=334, span="1608-1608"];
d542 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, label="return ParseArguments(args, options, _settings.HelpWriter);", prediction=335, span="1623-1623"];
d545 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="Assumes.NotNull(args, ''args'')", prediction=336, span="1641-1641"];
d546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="Assumes.NotNull(options, ''options'')", prediction=335, span="1642-1642"];
d547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", prediction=335, span="1644-1644"];
d548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="pair != null && helpWriter != null", prediction=335, span="1646-1646"];
d549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", prediction=335, span="1648-1648"];
d551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", prediction=335, span="1651-1651"];
d555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return DoParseArguments(args, options);", prediction=335, span="1658-1658"];
d550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="string helpText", prediction=343, span="1650-1650"];
d554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return true;", prediction=344, span="1655-1655"];
d552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="helpWriter.Write(helpText)", prediction=335, span="1652-1652"];
d553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return false;", prediction=346, span="1653-1653"];
d561 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="bool hadError = false", prediction=347, span="1663-1663"];
d562 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="var optionMap = OptionInfo.CreateMap(options, _settings)", prediction=348, span="1664-1664"];
d579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError |= !optionMap.EnforceRules()", prediction=349, span="1699-1699"];
d563 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="var target = new TargetWrapper(options)", prediction=350, span="1665-1665"];
d570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="ParserState result = parser.Parse(arguments, optionMap, options)", prediction=351, span="1676-1676"];
d564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", prediction=352, span="1667-1667"];
d576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="target.IsValueListDefined", prediction=350, span="1687-1687"];
d577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="!target.AddValueItemIfAllowed(argument)", prediction=350, span="1689-1689"];
d565 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="arguments.MoveNext()", prediction=355, span="1668-1668"];
d566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="string argument = arguments.Current", prediction=350, span="1670-1670"];
d575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="arguments.MoveNext()", prediction=352, span="1685-1685"];
d568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="ArgumentParser parser = ArgumentParser.Create(argument)", prediction=358, span="1673-1673"];
d569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="parser != null", prediction=359, span="1674-1674"];
d571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="(result & ParserState.Failure) == ParserState.Failure", prediction=360, span="1677-1677"];
d574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", prediction=351, span="1684-1684"];
d572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", prediction=358, span="1679-1679"];
d573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError = true", prediction=363, span="1680-1680"];
d578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError = true", prediction=364, span="1691-1691"];
d580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="return !hadError;", prediction=365, span="1701-1701"];
d567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="argument != null && argument.Length > 0", prediction=366, span="1671-1671"];
d583 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="bool caseSensitive = _settings.CaseSensitive", prediction=212, span="1706-1706"];
d584 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="int i = 0", prediction=212, span="1708-1708"];
d587 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", prediction=212, span="1712-1712"];
d590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", prediction=212, span="1718-1718"];
d592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="i++", prediction=212, span="1708-1708"];
d586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="!string.IsNullOrEmpty(helpOption.ShortName)", prediction=212, span="1710-1710"];
d593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return false;", prediction=373, span="1723-1723"];
d589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="!string.IsNullOrEmpty(helpOption.LongName)", prediction=212, span="1716-1716"];
d588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return true;", prediction=375, span="1713-1713"];
d591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return true;", prediction=376, span="1719-1719"];
d595 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="options is CommandLineOptionsBase", prediction=377, span="1729-1729"];
d596 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", prediction=378, span="1730-1730"];
d599 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="value == null", prediction=379, span="1741-1741"];
d600 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="throw new ArgumentNullException(paramName);", prediction=380, span="1742-1742"];
d602 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="string.IsNullOrEmpty(value)", prediction=381, span="1747-1747"];
d603 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="throw new ArgumentException(paramName);", prediction=382, span="1748-1748"];
d607 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="array.Length == 0", prediction=383, span="1753-1753"];
d608 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="throw new ArgumentOutOfRangeException(paramName);", prediction=384, span="1754-1754"];
d611 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", prediction=385, span="1763-1763"];
d612 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="target != null", prediction=386, span="1764-1764"];
d620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", prediction=385, span="1777-1777"];
d621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="return list;", prediction=385, span="1783-1783"];
d613 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var propertiesInfo = target.GetType().GetProperties()", prediction=389, span="1766-1766"];
d614 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label=propertiesInfo, prediction=385, span="1768-1768"];
d618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=385, span="1775-1775"];
d619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=392, span="1776-1776"];
d615 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="property != null && (property.CanRead && property.CanWrite)", prediction=393, span="1770-1770"];
d617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="setMethod != null && !setMethod.IsStatic", prediction=394, span="1773-1773"];
d616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var setMethod = property.GetSetMethod()", prediction=395, span="1772-1772"];
d627 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetMethods()", prediction=396, span="1789-1789"];
d628 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label=info, prediction=397, span="1791-1791"];
d629 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="!method.IsStatic", prediction=398, span="1793-1793"];
d631 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=1, label="attribute != null", prediction=399, span="1797-1797"];
d633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="return null;", prediction=400, span="1802-1802"];
d630 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=397, span="1795-1796"];
d632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", prediction=397, span="1798-1798"];
d637 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetMethods()", prediction=403, span="1808-1808"];
d638 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=1, label=info, prediction=404, span="1810-1810"];
d639 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="!method.IsStatic", prediction=405, span="1812-1812"];
d641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=406, span="1816-1816"];
d643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="return null;", prediction=407, span="1821-1821"];
d640 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=404, span="1814-1815"];
d642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="return (TAttribute)attribute;", prediction=404, span="1817-1817"];
d646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="IList<TAttribute> list = new List<TAttribute>()", prediction=410, span="1827-1827"];
d647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetProperties()", prediction=411, span="1828-1828"];
d654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="list.Add((TAttribute)attribute)", prediction=410, span="1839-1839"];
d655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="return list;", prediction=410, span="1844-1844"];
d648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label=info, prediction=414, span="1830-1830"];
d652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=410, span="1837-1837"];
d653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=416, span="1838-1838"];
d649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="property != null && (property.CanRead && property.CanWrite)", prediction=417, span="1832-1832"];
d651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="setMethod != null && !setMethod.IsStatic", prediction=418, span="1835-1835"];
d650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var setMethod = property.GetSetMethod()", prediction=419, span="1834-1834"];
d657 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", prediction=420, span="1849-1849"];
d662 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, label="return new String(' ', count);", prediction=421, span="1879-1879"];
m1_126 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m1_25 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="338-338"];
m1_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="304-304"];
m1_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="306-306"];
m1_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="308-309"];
m1_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="311-311"];
m1_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="304-304"];
m1_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="326-326"];
m1_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="329-329"];
m1_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.ShortName", span="331-331"];
m1_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="342-342"];
m1_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="345-345"];
m1_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''v''", span="333-333"];
m1_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="''i''", span="337-337"];
m1_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="334-334"];
m1_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="338-338"];
m1_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="343-343"];
m1_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="326-326"];
m1_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="315-315"];
m1_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="317-317"];
m1_163 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="319-320"];
m1_164 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="322-322"];
m1_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="315-315"];
m1_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m1_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="174-174"];
m1_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="175-175"];
m1_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="176-176"];
m1_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="178-178"];
m1_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose    Before '', lines[2])", span="179-179"];
m1_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[3])", span="180-180"];
m1_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                After'', lines[4])", span="181-181"];
m1_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  input-file    Before '', lines[5])", span="182-182"];
m1_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                012345678901234567890123'', lines[6])", span="183-183"];
m1_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''                456789 After'', lines[7])", span="184-184"];
m1_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="172-172"];
m1_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="659-659"];
m1_122 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="460-460"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="634-634"];
m1_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="88-88"];
m1_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m1_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m1_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="210-210"];
m1_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="211-211"];
m1_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="212-212"];
m1_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="213-213"];
m1_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="214-214"];
m1_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="216-216"];
m1_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="218-218"];
m1_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="220-220"];
m1_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Customizing Test.'', lines[0])", span="221-221"];
m1_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[1])", span="222-222"];
m1_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  v, verbose       Kommentar umfassend Operationen.'', lines[3])", span="223-223"];
m1_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'', lines[4])", span="224-224"];
m1_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="225-225"];
m1_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="208-208"];
m1_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="293-293"];
m1_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="295-295"];
m1_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-i0'' }, options)", span="297-298"];
m1_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="300-300"];
m1_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="293-293"];
m1_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="490-490"];
m1_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="184-184"];
m1_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="64-64"];
m1_103 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="55-55"];
m1_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="271-271"];
m1_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", prediction=422, span="273-273"];
m1_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", color=green, community=0, file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", prediction=423, span="275-276"];
m1_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="278-278"];
m1_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="271-271"];
m1_43 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="857-857"];
m1_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m1_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="132-132"];
m1_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="130-130"];
m1_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="306-306"];
m1_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m1_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="158-158"];
m1_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="159-159"];
m1_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="160-160"];
m1_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="162-162"];
m1_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[2], ''  v, verbose    This is the description'', ''The first line should have the arguments and the start of the Help Text.'')", span="163-163"];
m1_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[3], ''                of the verbosity to '', formattingMessage)", span="165-165"];
m1_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[4], ''                test out the wrapping '', formattingMessage)", span="166-166"];
m1_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[5], ''                capabilities of the '', formattingMessage)", span="167-167"];
m1_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[6], ''                Help Text.'', formattingMessage)", span="168-168"];
m1_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string formattingMessage = ''Beyond the second line should be formatted as though it's in a column.''", span="164-164"];
m1_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="156-156"];
m1_124 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="171-171"];
m1_45 [cluster="Unk.AreEqual", file="HelpTextFixture.cs", label="Entry Unk.AreEqual", span=""];
m1_42 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="649-649"];
m1_123 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="294-294"];
m1_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_144 [cluster="Unk.IsFalse", file="HelpTextFixture.cs", label="Entry Unk.IsFalse", span=""];
m1_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m1_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\n				AddDashesToOption = true,\n		    	Heading = new HeadingInfo(''AddOptionsWithDashes''),\n	        	Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\n			}", span="254-258"];
m1_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="259-259"];
m1_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="261-261"];
m1_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="263-263"];
m1_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="265-265"];
m1_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  -s, --something    Input something here.'', lines[3])", span="266-266"];
m1_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="252-252"];
m1_142 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1517-1517"];
m1_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="723-723"];
m1_102 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m1_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="282-282"];
m1_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="284-284"];
m1_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\n                new string[] { ''-j0'' }, options)", span="286-287"];
m1_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Assert.IsFalse(result)", span="289-289"];
m1_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="282-282"];
m1_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m1_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="190-190"];
m1_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="191-191"];
m1_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="192-192"];
m1_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="193-193"];
m1_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="194-194"];
m1_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="196-196"];
m1_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="198-198"];
m1_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[1])", span="199-199"];
m1_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[2])", span="200-200"];
m1_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''012 After'', lines[3])", span="201-201"];
m1_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Before '', lines[lines.Length - 3])", span="202-202"];
m1_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual(''0123456789012345678901234567890123456789'', lines[lines.Length - 2])", span="203-203"];
m1_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Assert.AreEqual('' After'', lines[lines.Length - 1])", span="204-204"];
m1_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="188-188"];
m1_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m1_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="99-99"];
m1_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="100-100"];
m1_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="101-101"];
m1_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="104-104"];
m1_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="107-107"];
m1_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="108-108"];
m1_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="111-111"];
m1_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="112-112"];
m1_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="113-113"];
m1_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="114-114"];
m1_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="116-116"];
m1_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="105-105"];
m1_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="97-97"];
m1_104 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_41 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="46-46"];
m1_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="73-73"];
m1_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m1_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="141-141"];
m1_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="142-142"];
m1_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="143-143"];
m1_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="144-144"];
m1_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="145-145"];
m1_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="146-146"];
m1_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="148-148"];
m1_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="150-150"];
m1_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 2], ''This is a first post-options line.'')", span="151-151"];
m1_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Assert.AreEqual(lines[lines.Length - 1], ''This is a second post-options line.'')", span="152-152"];
m1_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="139-139"];
m1_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m1_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(ThisAssembly.Title, ThisAssembly.Version))", span="126-126"];
m1_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="124-124"];
m1_125 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="82-82"];
m1_160 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1556-1556"];
m1_44 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_143 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1621-1621"];
m1_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m1_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="231-231"];
m1_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="232-232"];
m1_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="234-234"];
m1_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year), lines[1])", span="245-245"];
m1_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="233-233"];
m1_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="235-235"];
m1_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="236-236"];
m1_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="237-237"];
m1_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="239-239"];
m1_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="241-241"];
m1_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="243-243"];
m1_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Parameterless Constructor Test.'', lines[0])", span="244-244"];
m1_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Pre-Options.'', lines[2])", span="246-246"];
m1_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''  s, something    Input something here.'', lines[4])", span="247-247"];
m1_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Assert.AreEqual(''Post-Options.'', lines[6])", span="248-248"];
m1_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="229-229"];
m1_177 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m1_178 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m2_67 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m2_69 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m2_68 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m2_40 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m2_77 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="369-369"];
m2_19 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="659-659"];
m2_14 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="460-460"];
m2_17 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="634-634"];
m2_28 [cluster="string.Concat(string, string)", file="Program.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_15 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="Program.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="184-184"];
m2_72 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m2_75 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m2_27 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_71 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m2_18 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_38 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1517-1517"];
m2_26 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="723-723"];
m2_3 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="101-101"];
m2_4 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="var help = new HelpText { Heading = Program._headingInfo,\n					Copyright = new CopyrightInfo(''Giacomo Stelluti Scala'', 2005, 2012),\n                	AdditionalNewLineAfterOption = true,\n					AddDashesToOption = true\n				}", span="103-107"];
m2_5 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="this.HandleParsingErrorsInHelp(help)", span="108-108"];
m2_6 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="109-109"];
m2_7 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="110-110"];
m2_8 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''Usage: SampleApp -rMyData.in -wMyData.out --calculate'')", span="111-111"];
m2_9 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(string.Format(''       SampleApp -rMyData.in -i -j{0} file0.def file1.def'', 9.7))", span="112-112"];
m2_10 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddPreOptionsLine(''       SampleApp -rMath.xml -wReport.bin -o *;/;+;-'')", span="113-113"];
m2_11 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="help.AddOptions(this)", span="114-114"];
m2_12 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return help;", span="116-116"];
m2_13 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="101-101"];
m2_74 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_76 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_66 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_70 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m2_0 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="57-57"];
m2_1 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="StartOffset = 0", span="63-63"];
m2_2 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Exit SampleApp.Program.Options.Options()", span="57-57"];
m2_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m2_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="155-155"];
m2_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="158-158"];
m2_46 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="160-160"];
m2_47 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="161-161"];
m2_49 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="165-165"];
m2_50 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="166-166"];
m2_51 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="167-167"];
m2_52 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="168-168"];
m2_53 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="169-169"];
m2_56 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="173-173"];
m2_61 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="181-181"];
m2_62 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="182-182"];
m2_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="156-156"];
m2_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="159-159"];
m2_48 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="163-163"];
m2_54 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="171-171"];
m2_60 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="180-180"];
m2_55 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="172-172"];
m2_57 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="175-175"];
m2_58 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="176-176"];
m2_59 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="178-178"];
m2_63 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="185-185"];
m2_64 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="186-186"];
m2_65 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="153-153"];
m2_73 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_16 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Entry SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m2_20 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="this.LastPostParsingState.Errors.Count > 0", span="121-121"];
m2_21 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="var errors = help.RenderParsingErrorsText(this, 2)", span="123-123"];
m2_23 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="126-126"];
m2_24 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="help.AddPreOptionsLine(errors)", span="127-127"];
m2_22 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="!string.IsNullOrEmpty(errors)", span="124-124"];
m2_25 [cluster="SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Exit SampleApp.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="119-119"];
m2_39 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1621-1621"];
m2_29 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="138-138"];
m2_30 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="143-143"];
m2_32 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="145-145"];
m2_31 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="144-144"];
m2_34 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="148-148"];
m2_33 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="146-146"];
m2_35 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="150-150"];
m2_36 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="138-138"];
m2_78 [file="Program.cs", label="SampleApp.Program.Options", span=""];
n666 -> d26  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n669 -> d91  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n671 -> d176  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> d183  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> d188  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> d194  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> d200  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n672 -> d219  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> d220  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> d228  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> d230  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> d232  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n673 -> d256  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n673 -> d263  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n673 -> d270  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n673 -> d276  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n674 -> d310  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d311  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d313  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d314  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d312  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d326  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d324  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d336  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d338  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d340  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d337  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d339  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d352  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d351  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d359  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d360  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d363  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d364  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n675 -> d378  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n676 -> d382  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d387  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d392  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d396  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d398  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d403  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d405  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d408  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d407  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d410  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d417  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d416  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d418  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n677 -> d447  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n680 -> d469  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d470  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d471  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d478  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d480  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d481  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d482  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n681 -> d490  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n681 -> d494  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n681 -> d497  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n681 -> d496  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n684 -> d542  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n684 -> d549  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n684 -> d555  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n21 -> d24  [color=green, key=1, label=string, style=dashed];
n42 -> d45  [color=green, key=1, label="System.Type", style=dashed];
n52 -> d57  [color=green, key=1, label=object, style=dashed];
n52 -> d58  [color=green, key=1, label=object, style=dashed];
n73 -> d612  [color=green, key=1, label=object, style=dashed];
n95 -> d98  [color=green, key=1, label=string, style=dashed];
n95 -> d100  [color=green, key=1, label=string, style=dashed];
n107 -> d109  [color=green, key=1, label=string, style=dashed];
n112 -> d114  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n112 -> d115  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n112 -> d116  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n112 -> d117  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n135 -> d138  [color=green, key=1, label=bool, style=dashed];
n161 -> d170  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n205 -> d311  [color=green, key=1, label=string, style=dashed];
n205 -> d313  [color=green, key=1, label=string, style=dashed];
n205 -> d314  [color=green, key=1, label=string, style=dashed];
n207 -> d325  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n207 -> d326  [color=green, key=1, label=object, style=dashed];
n208 -> d360  [color=green, key=1, label=bool, style=dashed];
n214 -> d603  [color=green, key=1, label=string, style=dashed];
n240 -> d250  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n240 -> d265  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n240 -> d278  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n240 -> d280  [color=green, key=1, label=object, style=dashed];
n284 -> d293  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n316 -> d364  [color=green, key=1, label=object, style=dashed];
n318 -> d352  [color=green, key=1, label=string, style=dashed];
n319 -> d338  [color=green, key=1, label=string, style=dashed];
n319 -> d340  [color=green, key=1, label=string, style=dashed];
n402 -> d426  [color=green, key=1, label="bool?", style=dashed];
n402 -> d428  [color=green, key=1, label="bool?", style=dashed];
n402 -> d430  [color=green, key=1, label=object, style=dashed];
n414 -> d417  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n464 -> d600  [color=green, key=1, label=string, style=dashed];
n493 -> d497  [color=green, key=1, label=string, style=dashed];
n544 -> d546  [color=green, key=1, label=object, style=dashed];
n544 -> d548  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n544 -> d549  [color=green, key=1, label="string[]", style=dashed];
n544 -> d551  [color=green, key=1, label=object, style=dashed];
n544 -> d552  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n544 -> d555  [color=green, key=1, label="string[]", style=dashed];
n558 -> d585  [color=green, key=1, label="string[]", style=dashed];
n558 -> d586  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n558 -> d587  [color=green, key=1, label="string[]", style=dashed];
n558 -> d589  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n558 -> d590  [color=green, key=1, label="string[]", style=dashed];
n559 -> d572  [color=green, key=1, label=object, style=dashed];
n582 -> d596  [color=green, key=1, label=object, style=dashed];
n606 -> d608  [color=green, key=1, label=string, style=dashed];
d54 -> d57  [color=green, key=1, label=concreteType, style=dashed];
d54 -> d58  [color=green, key=1, label=property, style=dashed];
d65 -> d68  [color=green, key=1, label=list, style=dashed];
d75 -> d78  [color=green, key=1, label=list, style=dashed];
d80 -> d82  [color=green, key=1, label=pairZero, style=dashed];
d81 -> n83  [color=green, key=1, label="out System.Type", style=dashed];
d113 -> d116  [color=green, key=1, label=list, style=dashed];
d113 -> d119  [color=green, key=1, label=list, style=dashed];
d162 -> d170  [color=green, key=1, label=parts, style=dashed];
d162 -> d172  [color=green, key=1, label=parts, style=dashed];
d162 -> d180  [color=green, key=1, label=parts, style=dashed];
d162 -> d196  [color=green, key=1, label=parts, style=dashed];
d163 -> d165  [color=green, key=1, label=option, style=dashed];
d163 -> d168  [color=green, key=1, label=option, style=dashed];
d163 -> d169  [color=green, key=1, label=option, style=dashed];
d163 -> d173  [color=green, key=1, label=option, style=dashed];
d163 -> d176  [color=green, key=1, label=option, style=dashed];
d163 -> d178  [color=green, key=1, label=option, style=dashed];
d163 -> d183  [color=green, key=1, label=option, style=dashed];
d163 -> d185  [color=green, key=1, label=option, style=dashed];
d163 -> d188  [color=green, key=1, label=option, style=dashed];
d163 -> d190  [color=green, key=1, label=option, style=dashed];
d163 -> d194  [color=green, key=1, label=option, style=dashed];
d163 -> d200  [color=green, key=1, label=option, style=dashed];
d174 -> d177  [color=green, key=1, label=valueSetting, style=dashed];
d181 -> d184  [color=green, key=1, label=valueSetting, style=dashed];
d186 -> d189  [color=green, key=1, label=valueSetting, style=dashed];
d192 -> d195  [color=green, key=1, label=valueSetting, style=dashed];
d198 -> d201  [color=green, key=1, label=valueSetting, style=dashed];
d242 -> d250  [color=green, key=1, label=group, style=dashed];
d242 -> d252  [color=green, key=1, label=group, style=dashed];
d242 -> d260  [color=green, key=1, label=group, style=dashed];
d242 -> d278  [color=green, key=1, label=group, style=dashed];
d244 -> d248  [color=green, key=1, label=option, style=dashed];
d244 -> d249  [color=green, key=1, label=option, style=dashed];
d244 -> d253  [color=green, key=1, label=option, style=dashed];
d244 -> d256  [color=green, key=1, label=option, style=dashed];
d244 -> d258  [color=green, key=1, label=option, style=dashed];
d244 -> d263  [color=green, key=1, label=option, style=dashed];
d244 -> d267  [color=green, key=1, label=option, style=dashed];
d244 -> d270  [color=green, key=1, label=option, style=dashed];
d244 -> d272  [color=green, key=1, label=option, style=dashed];
d244 -> d276  [color=green, key=1, label=option, style=dashed];
d244 -> d280  [color=green, key=1, label=option, style=dashed];
d254 -> d257  [color=green, key=1, label=valueSetting, style=dashed];
d261 -> d264  [color=green, key=1, label=valueSetting, style=dashed];
d268 -> d271  [color=green, key=1, label=valueSetting, style=dashed];
d274 -> d277  [color=green, key=1, label=valueSetting, style=dashed];
d299 -> d302  [color=green, key=1, label=list, style=dashed];
d301 -> d306  [color=green, key=1, label=map, style=dashed];
d320 -> d325  [color=green, key=1, label=elementType, style=dashed];
d321 -> d323  [color=green, key=1, label=array, style=dashed];
d321 -> d325  [color=green, key=1, label=array, style=dashed];
d321 -> d326  [color=green, key=1, label=array, style=dashed];
d322 -> d325  [color=green, key=1, label=i, style=dashed];
d322 -> d329  [color=green, key=1, label=i, style=dashed];
d329 -> d329  [color=green, key=1, label=i, style=dashed];
d367 -> d369  [color=green, key=1, label=i, style=dashed];
d367 -> d370  [color=green, key=1, label=i, style=dashed];
d350 -> d352  [color=green, key=1, label=nc, style=dashed];
d365 -> d369  [color=green, key=1, label=fieldRef, style=dashed];
d366 -> d368  [color=green, key=1, label=values, style=dashed];
d366 -> d369  [color=green, key=1, label=values, style=dashed];
d370 -> d370  [color=green, key=1, label=i, style=dashed];
d396 -> d398  [color=green, key=1, label=option, style=dashed];
d405 -> d407  [color=green, key=1, label=option, style=dashed];
d408 -> d410  [color=green, key=1, label=info, style=dashed];
d415 -> d417  [color=green, key=1, label=setName, style=dashed];
d415 -> d418  [color=green, key=1, label=setName, style=dashed];
d423 -> d430  [color=green, key=1, label=error, style=dashed];
d438 -> d440  [color=green, key=1, label=leftHash, style=dashed];
d444 -> d447  [color=green, key=1, label=other, style=dashed];
d547 -> d549  [color=green, key=1, label=pair, style=dashed];
d547 -> d551  [color=green, key=1, label=pair, style=dashed];
d563 -> d576  [color=green, key=1, label=target, style=dashed];
d563 -> d577  [color=green, key=1, label=target, style=dashed];
d570 -> d574  [color=green, key=1, label=result, style=dashed];
d564 -> d575  [color=green, key=1, label=arguments, style=dashed];
d566 -> d577  [color=green, key=1, label=argument, style=dashed];
d568 -> d572  [color=green, key=1, label=parser, style=dashed];
d583 -> d587  [color=green, key=1, label=caseSensitive, style=dashed];
d583 -> d590  [color=green, key=1, label=caseSensitive, style=dashed];
d584 -> d587  [color=green, key=1, label=i, style=dashed];
d584 -> d590  [color=green, key=1, label=i, style=dashed];
d584 -> d592  [color=green, key=1, label=i, style=dashed];
d592 -> d592  [color=green, key=1, label=i, style=dashed];
d611 -> d620  [color=green, key=1, label=list, style=dashed];
d611 -> d621  [color=green, key=1, label=list, style=dashed];
d614 -> d620  [color=green, key=1, label=property, style=dashed];
d618 -> d620  [color=green, key=1, label=attribute, style=dashed];
d628 -> d630  [color=green, key=1, label=method, style=dashed];
d628 -> d632  [color=green, key=1, label=method, style=dashed];
d630 -> d632  [color=green, key=1, label=attribute, style=dashed];
d638 -> d640  [color=green, key=1, label=method, style=dashed];
d640 -> d642  [color=green, key=1, label=attribute, style=dashed];
d646 -> d654  [color=green, key=1, label=list, style=dashed];
d646 -> d655  [color=green, key=1, label=list, style=dashed];
d652 -> d654  [color=green, key=1, label=attribute, style=dashed];
m1_166 -> m1_168  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m1_166 -> m1_173  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m1_63 -> m1_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_63 -> m1_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_63 -> m1_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_63 -> m1_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_63 -> m1_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_88 -> m1_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_88 -> m1_92  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_95 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_50 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_50 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_50 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=formattingMessage, style=dashed];
m1_73 -> m1_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_73 -> m1_77  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_1 -> m1_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_106 -> m1_117  [color=darkseagreen4, key=1, label=year, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_107 -> m1_112  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_115 -> m1_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_115 -> m1_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_115 -> m1_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_115 -> m1_120  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_177 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m1_178 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m1_178 -> m1_48  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m1_178 -> m1_61  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_46  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_47  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_49  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_50  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_51  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_52  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_53  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_56  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_61  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_41 -> m2_62  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_54 -> m2_58  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_54 -> m2_59  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_16 -> m2_23  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_16 -> m2_24  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_30 -> m2_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m2_78 -> m2_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_78 -> m2_11  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m2_78 -> m2_20  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
}
