digraph  {
m0_487 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1375-1375"];
m0_488 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1375-1375"];
m0_15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="147-147"];
m0_18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="149-149"];
m0_19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="147-147"];
m0_321 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="878-878"];
m0_338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="_property.PropertyType.IsEnum", span="882-882"];
m0_340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="886-886"];
m0_342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, file="CommandLine.cs", label="2: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="893-893"];
m0_339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label=_setValueLock, span="884-884"];
m0_341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label=_setValueLock, span="891-891"];
m0_343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label=InvalidCastException, span="897-897"];
m0_345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label=FormatException, span="901-901"];
m0_347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label=ArgumentException, span="905-905"];
m0_349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="return true;", span="910-910"];
m0_344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="return false;", span="899-899"];
m0_346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="return false;", span="903-903"];
m0_348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="return false;", span="907-907"];
m0_350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="878-878"];
m0_504 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1442-1442"];
m0_505 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1442-1442"];
m0_154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="475-475"];
m0_155 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="ShortName = shortName", span="477-477"];
m0_156 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="LongName = longName", span="478-478"];
m0_157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="475-475"];
m0_445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1202-1202"];
m0_446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="var other = obj as Pair<TLeft, TRight>", span="1204-1204"];
m0_447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="other == null", span="1206-1206"];
m0_449 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1209-1209"];
m0_448 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="return false;", span="1207-1207"];
m0_450 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1202-1202"];
m0_95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1223-1223"];
m0_454 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1227-1227"];
m0_455 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="this.ViolatesFormat = format", span="1229-1229"];
m0_456 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1223-1223"];
m0_549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1659-1659"];
m0_550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Assumes.NotNull(args, ''args'')", span="1661-1661"];
m0_551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Assumes.NotNull(options, ''options'')", span="1662-1662"];
m0_552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1664-1664"];
m0_553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="pair != null && helpWriter != null", span="1666-1666"];
m0_554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1668-1668"];
m0_556 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1671-1671"];
m0_557 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="helpWriter.Write(helpText)", span="1672-1672"];
m0_560 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="return DoParseArguments(args, options);", span="1678-1678"];
m0_555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="string helpText", span="1670-1670"];
m0_559 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="return true;", span="1675-1675"];
m0_558 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="return false;", span="1673-1673"];
m0_561 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1659-1659"];
m0_53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1474-1474"];
m0_510 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1474-1474"];
m0_108 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="695-695"];
m0_211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="612-612"];
m0_212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Assumes.NotNullOrEmpty(value, ''value'')", span="614-614"];
m0_213 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="_data = value", span="616-616"];
m0_214 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="_index = -1", span="617-617"];
m0_215 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="612-612"];
m0_86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="366-366"];
m0_87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="this.PostParsingState = new List<ParsingError>()", span="368-368"];
m0_88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="366-366"];
m0_640 [cluster="System.Type.GetMethods()", file="CommandLine.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m0_52 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_210 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="934-934"];
m0_361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label=_setValueLock, span="936-936"];
m0_362 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="_property.SetValue(options, value, null)", span="938-938"];
m0_363 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="return true;", span="940-940"];
m0_364 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="934-934"];
m0_217 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="656-656"];
m0_218 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="_index = -1", span="658-658"];
m0_219 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="656-656"];
m0_33 [cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1361-1361"];
m0_480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="_index <= 0", span="1363-1363"];
m0_481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="throw new InvalidOperationException();", span="1365-1365"];
m0_482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="_index <= _endIndex", span="1367-1367"];
m0_483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="_index--", span="1369-1369"];
m0_485 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="return false;", span="1372-1372"];
m0_484 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="return _index <= _endIndex;", span="1370-1370"];
m0_486 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1361-1361"];
m0_527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1546-1546"];
m0_528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1548-1548"];
m0_529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", span="1549-1549"];
m0_530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1546-1546"];
m0_416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1141-1141"];
m0_417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="var setName = option.MutuallyExclusiveSet", span="1143-1143"];
m0_419 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1148-1148"];
m0_418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1145-1145"];
m0_420 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1152-1152"];
m0_421 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1141-1141"];
m0_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="135-135"];
m0_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="text = null", span="138-138"];
m0_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="var method = pair.Left", span="140-140"];
m0_13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="text = (string)method.Invoke(target, null)", span="144-144"];
m0_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="!CheckMethodSignature(method)", span="141-141"];
m0_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="throw new MemberAccessException();", span="142-142"];
m0_14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="135-135"];
m0_439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1194-1194"];
m0_440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1196-1196"];
m0_441 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1197-1197"];
m0_442 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="return leftHash ^ rightHash;", span="1199-1199"];
m0_443 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1194-1194"];
m0_531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1560-1560"];
m0_532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1562-1562"];
m0_533 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="MutuallyExclusive = mutuallyExclusive", span="1563-1563"];
m0_534 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1564-1564"];
m0_535 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1560-1560"];
m0_239 [cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m0_137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="443-443"];
m0_138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="value && !addMoveNextIfTrue", span="445-445"];
m0_140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="value && addMoveNextIfTrue", span="447-447"];
m0_139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="return ParserState.Success;", span="446-446"];
m0_141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="return ParserState.Success | ParserState.MoveOnNextElement;", span="448-448"];
m0_142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="return ParserState.Failure;", span="450-450"];
m0_143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="443-443"];
m0_379 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1036-1036"];
m0_380 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="++count", span="1036-1036"];
m0_381 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1036-1036"];
m0_51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_319 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1867-1867"];
m0_662 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1869-1869"];
m0_663 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1867-1867"];
m0_23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="185-185"];
m0_24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="!string.IsNullOrEmpty(shortName)", span="187-187"];
m0_25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="_uniqueName = shortName", span="188-188"];
m0_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="!string.IsNullOrEmpty(longName)", span="189-189"];
m0_27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="_uniqueName = longName", span="190-190"];
m0_30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="base.ShortName = shortName", span="195-195"];
m0_31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="base.LongName = longName", span="196-196"];
m0_28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="_uniqueName == null", span="192-192"];
m0_29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="throw new InvalidOperationException();", span="193-193"];
m0_32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="185-185"];
m0_423 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1641-1641"];
m0_547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="return ParseArguments(args, options, _settings.HelpWriter);", span="1643-1643"];
m0_548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1641-1641"];
m0_205 [cluster="string.Substring(int)", file="CommandLine.cs", label="Entry string.Substring(int)", span="0-0"];
m0_392 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m0_641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1825-1825"];
m0_642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="var info = target.GetType().GetMethods()", span="1828-1828"];
m0_643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label=info, span="1830-1830"];
m0_644 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="!method.IsStatic", span="1832-1832"];
m0_648 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="return null;", span="1841-1841"];
m0_645 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1834-1835"];
m0_646 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="attribute != null", span="1836-1836"];
m0_647 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="return (TAttribute)attribute;", span="1837-1837"];
m0_649 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1825-1825"];
m0_66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="322-322"];
m0_67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="324-324"];
m0_68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="list == null || list.Count == 0", span="325-325"];
m0_70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="list.Count > 1", span="328-328"];
m0_72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="var pairZero = list[0]", span="331-331"];
m0_69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="return null;", span="326-326"];
m0_71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="throw new InvalidOperationException();", span="329-329"];
m0_73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="return pairZero.Right;", span="333-333"];
m0_74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="322-322"];
m0_666 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.Spaces(int)", span="1897-1897"];
m0_667 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="return new String(' ', count);", span="1899-1899"];
m0_668 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.Spaces(int)", span="1897-1897"];
m0_17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m0_515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1500-1500"];
m0_516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1500-1500"];
m0_489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1386-1386"];
m0_490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="_target = target", span="1388-1388"];
m0_491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="_vla = ValueListAttribute.GetAttribute(_target)", span="1389-1389"];
m0_492 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label=IsValueListDefined, span="1390-1390"];
m0_493 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="_valueList = ValueListAttribute.GetReference(_target)", span="1391-1391"];
m0_494 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1386-1386"];
m0_300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="822-822"];
m0_301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="824-824"];
m0_303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="var map = new OptionMap(list.Count, settings)", span="827-827"];
m0_307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="map.RawOptions = target", span="835-835"];
m0_302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="list != null", span="825-825"];
m0_304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label=list, span="829-829"];
m0_309 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="return null;", span="840-840"];
m0_306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="832-832"];
m0_308 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="return map;", span="837-837"];
m0_305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="pair != null && pair.Right != null", span="831-831"];
m0_310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="822-822"];
m0_152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="471-471"];
m0_153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="471-471"];
m0_376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1027-1027"];
m0_377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="BadOption = option", span="1030-1030"];
m0_378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1027-1027"];
m0_611 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1771-1771"];
m0_612 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="array.Length == 0", span="1773-1773"];
m0_613 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="throw new ArgumentOutOfRangeException(paramName);", span="1774-1774"];
m0_614 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1771-1771"];
m0_335 [cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m0_337 [cluster="System.Array.SetValue(object, int)", file="CommandLine.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m0_422 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_336 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m0_506 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1450-1450"];
m0_507 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="LastPostParsingState = new PostParsingState()", span="1452-1452"];
m0_508 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1450-1450"];
m0_131 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="433-433"];
m0_132 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="435-435"];
m0_133 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="433-433"];
m0_16 [cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m0_35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="239-239"];
m0_36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Separator = ':'", span="242-242"];
m0_37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="239-239"];
m0_123 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="512-512"];
m0_160 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="512-512"];
m0_126 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1469-1469"];
m0_509 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1469-1469"];
m0_650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1844-1844"];
m0_651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="IList<TAttribute> list = new List<TAttribute>()", span="1847-1847"];
m0_652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="var info = target.GetType().GetProperties()", span="1848-1848"];
m0_659 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="list.Add((TAttribute)attribute)", span="1859-1859"];
m0_660 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="return list;", span="1864-1864"];
m0_653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label=info, span="1850-1850"];
m0_654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", span="1852-1852"];
m0_655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", span="1854-1854"];
m0_657 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1857-1857"];
m0_656 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", span="1855-1855"];
m0_658 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="attribute != null", span="1858-1858"];
m0_661 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1844-1844"];
m0_236 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="685-685"];
m0_237 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="throw new NotSupportedException();", span="687-687"];
m0_238 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="685-685"];
m0_62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="336-336"];
m0_76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="concreteType = null", span="338-338"];
m0_77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="340-340"];
m0_78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="list == null || list.Count == 0", span="341-341"];
m0_80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="list.Count > 1", span="344-344"];
m0_82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="var pairZero = list[0]", span="347-347"];
m0_79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="return null;", span="342-342"];
m0_81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="throw new InvalidOperationException();", span="345-345"];
m0_83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="concreteType = pairZero.Right.ConcreteType", span="348-348"];
m0_84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="return pairZero.Left;", span="350-350"];
m0_85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="336-336"];
m0_63 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m0_206 [cluster="string.Split(char[], int)", file="CommandLine.cs", label="Entry string.Split(char[], int)", span="0-0"];
m0_216 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1765-1765"];
m0_607 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="string.IsNullOrEmpty(value)", span="1767-1767"];
m0_608 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="throw new ArgumentException(paramName);", span="1768-1768"];
m0_609 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1765-1765"];
m0_513 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1484-1484"];
m0_514 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1484-1484"];
m0_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="117-117"];
m0_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="ShortName = shortName", span="119-119"];
m0_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="LongName = longName", span="120-120"];
m0_6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="HelpText = _defaultHelpText", span="121-121"];
m0_7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="117-117"];
m0_393 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="1098-1098"];
m0_394 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1100-1100"];
m0_395 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRules()", span="1098-1098"];
m0_89 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="674-674"];
m0_230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="_index == -1", span="676-676"];
m0_231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="throw new InvalidOperationException();", span="677-677"];
m0_232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="_index > _data.Length", span="679-679"];
m0_233 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="throw new InvalidOperationException();", span="680-680"];
m0_234 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="return _data.Substring(_index + 1);", span="682-682"];
m0_235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="674-674"];
m0_631 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m0_109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="396-396"];
m0_110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="argument.Length > 0", span="398-398"];
m0_111 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="399-399"];
m0_112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="return true;", span="401-401"];
m0_113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="396-396"];
m0_54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="309-309"];
m0_55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Type concreteType", span="311-311"];
m0_56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="var property = GetProperty(target, out concreteType)", span="312-312"];
m0_59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="317-317"];
m0_60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="return (IList<string>)property.GetValue(target, null);", span="319-319"];
m0_57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="property == null || concreteType == null", span="314-314"];
m0_58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="return null;", span="315-315"];
m0_61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="309-309"];
m0_397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1103-1103"];
m0_398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="_map.Values", span="1105-1105"];
m0_399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="option.Required && !option.IsDefined", span="1107-1107"];
m0_402 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="return true;", span="1113-1113"];
m0_400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1109-1109"];
m0_401 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="return false;", span="1110-1110"];
m0_403 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1103-1103"];
m0_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="105-105"];
m0_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="HelpText = _defaultHelpText", span="108-108"];
m0_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="105-105"];
m0_564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1681-1681"];
m0_566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="bool hadError = false", span="1683-1683"];
m0_567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1684-1684"];
m0_568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="var target = new TargetWrapper(options)", span="1685-1685"];
m0_569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1687-1687"];
m0_575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1696-1696"];
m0_577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1699-1699"];
m0_584 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="hadError |= !optionMap.EnforceRules()", span="1719-1719"];
m0_581 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="target.IsValueListDefined", span="1707-1707"];
m0_582 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="!target.AddValueItemIfAllowed(argument)", span="1709-1709"];
m0_570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="arguments.MoveNext()", span="1688-1688"];
m0_571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="string argument = arguments.Current", span="1690-1690"];
m0_580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="arguments.MoveNext()", span="1705-1705"];
m0_572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="argument != null && argument.Length > 0", span="1691-1691"];
m0_573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="ArgumentParser parser = ArgumentParser.Create(argument)", span="1693-1693"];
m0_574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="parser != null", span="1694-1694"];
m0_576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="(result & ParserState.Failure) == ParserState.Failure", span="1697-1697"];
m0_579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1704-1704"];
m0_578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="hadError = true", span="1700-1700"];
m0_583 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="hadError = true", span="1711-1711"];
m0_585 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="return !hadError;", span="1721-1721"];
m0_586 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1681-1681"];
m0_565 [cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m0_158 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="507-507"];
m0_159 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="507-507"];
m0_511 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1479-1479"];
m0_512 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1479-1479"];
m0_396 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1116-1116"];
m0_405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="!_settings.MutuallyExclusive", span="1118-1118"];
m0_406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="return true;", span="1119-1119"];
m0_407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="_map.Values", span="1121-1121"];
m0_408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1123-1123"];
m0_410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="_mutuallyExclusiveSetMap.Values", span="1128-1128"];
m0_409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="BuildMutuallyExclusiveMap(option)", span="1124-1124"];
m0_411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="info.Occurrence > 1", span="1130-1130"];
m0_414 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="return true;", span="1138-1138"];
m0_412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1133-1133"];
m0_413 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="return false;", span="1134-1134"];
m0_415 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1116-1116"];
m0_375 [cluster="string.Split(params char[])", file="CommandLine.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_21 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="163-163"];
m0_22 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="163-163"];
m0_90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="371-371"];
m0_91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="371-371"];
m0_320 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="913-913"];
m0_352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="var nc = new NullableConverter(_property.PropertyType)", span="915-915"];
m0_354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, file="CommandLine.cs", label="2: _property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="921-921"];
m0_353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label=_setValueLock, span="919-919"];
m0_355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label=Exception, span="926-926"];
m0_357 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="return true;", span="931-931"];
m0_356 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="return false;", span="928-928"];
m0_358 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="913-913"];
m0_610 [cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="285-285"];
m0_45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="concreteType == null", span="288-288"];
m0_47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="291-291"];
m0_49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="_concreteType = concreteType", span="294-294"];
m0_46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="throw new ArgumentNullException(''concreteType'');", span="289-289"];
m0_48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="throw new CommandLineParserException(''The types are incompatible.'');", span="292-292"];
m0_50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="285-285"];
m0_92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="375-375"];
m0_93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="379-379"];
m0_94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="375-375"];
m0_125 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="514-514"];
m0_161 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="514-514"];
m0_476 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1356-1356"];
m0_477 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="throw new NotSupportedException();", span="1358-1358"];
m0_478 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1356-1356"];
m0_669 [cluster="string.String(char, int)", file="CommandLine.cs", label="Entry string.String(char, int)", span="0-0"];
m0_220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="661-661"];
m0_221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="_index < (_data.Length - 1)", span="663-663"];
m0_222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="_index++", span="665-665"];
m0_225 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="_index = _data.Length", span="669-669"];
m0_223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="_currentElement = _data.Substring(_index, 1)", span="666-666"];
m0_224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="return true;", span="667-667"];
m0_226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="return false;", span="671-671"];
m0_227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="661-661"];
m0_603 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="526-526"];
m0_164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="528-528"];
m0_165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var option = map[parts[0]]", span="529-529"];
m0_172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="541-541"];
m0_176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(parts[1], options)", span="548-548"];
m0_181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="558-558"];
m0_183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", span="561-561"];
m0_188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="572-572"];
m0_193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="582-582"];
m0_194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", span="584-584"];
m0_200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(true, options)", span="597-597"];
m0_174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="parts.Length == 2", span="544-544"];
m0_182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="items.Insert(0, parts[1])", span="559-559"];
m0_198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="parts.Length == 2", span="594-594"];
m0_166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var valueSetting = false", span="530-530"];
m0_167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="option == null", span="532-532"];
m0_169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="option.IsDefined = true", span="535-535"];
m0_170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="537-537"];
m0_171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsBoolean", span="539-539"];
m0_175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsArray", span="546-546"];
m0_178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="550-550"];
m0_180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="556-556"];
m0_185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="563-563"];
m0_187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsArray", span="570-570"];
m0_190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="574-574"];
m0_192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="580-580"];
m0_196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="586-586"];
m0_202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="599-599"];
m0_168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="533-533"];
m0_173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="542-542"];
m0_177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="549-549"];
m0_179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="552-552"];
m0_184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="562-562"];
m0_186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="565-565"];
m0_189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="573-573"];
m0_191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="576-576"];
m0_195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="585-585"];
m0_197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="588-588"];
m0_199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="595-595"];
m0_201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="598-598"];
m0_203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="601-601"];
m0_204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="526-526"];
m0_208 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m0_587 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1747-1747"];
m0_600 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="options is CommandLineOptionsBase", span="1749-1749"];
m0_601 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1750-1750"];
m0_602 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1747-1747"];
m0_523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1534-1534"];
m0_524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1536-1536"];
m0_525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1537-1537"];
m0_526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1534-1534"];
m0_444 [cluster="object.GetHashCode()", file="CommandLine.cs", label="Entry object.GetHashCode()", span="0-0"];
m0_311 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1047-1047"];
m0_382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_settings = settings", span="1049-1049"];
m0_387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_names = new Dictionary<string, string>(capacity, comparer)", span="1057-1057"];
m0_388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1058-1058"];
m0_390 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1063-1063"];
m0_383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="IEqualityComparer<string> comparer", span="1051-1051"];
m0_384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_settings.CaseSensitive", span="1052-1052"];
m0_385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="comparer = StringComparer.Ordinal", span="1053-1053"];
m0_386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="comparer = StringComparer.OrdinalIgnoreCase", span="1055-1055"];
m0_389 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_settings.MutuallyExclusive", span="1060-1060"];
m0_391 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1047-1047"];
m0_629 [cluster="System.Type.GetProperties()", file="CommandLine.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m0_539 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1605-1605"];
m0_540 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="_settings = new CommandLineParserSettings()", span="1607-1607"];
m0_541 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1605-1605"];
m0_144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="453-453"];
m0_145 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="!option.IsAttributeArrayCompatible", span="455-455"];
m0_146 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="throw new CommandLineParserException();", span="456-456"];
m0_147 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="453-453"];
m0_41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="275-275"];
m0_42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="MaximumElements = -1", span="277-277"];
m0_43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="275-275"];
m0_351 [cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m0_38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="251-251"];
m0_39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Separator = separator", span="254-254"];
m0_40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="251-251"];
m0_451 [cluster="object.Equals(object, object)", file="CommandLine.cs", label="Entry object.Equals(object, object)", span="0-0"];
m0_318 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="944-944"];
m0_365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label=_setValueLock, span="946-946"];
m0_366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="_property.SetValue(options, new List<string>(), null)", span="948-948"];
m0_367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="950-950"];
m0_368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="951-951"];
m0_371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="fieldRef.Add(values[i])", span="955-955"];
m0_369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="int i = 0", span="953-953"];
m0_370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="i < values.Length", span="953-953"];
m0_372 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="i++", span="953-953"];
m0_373 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="return true;", span="958-958"];
m0_374 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="944-944"];
m0_359 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m0_460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1291-1291"];
m0_461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Assumes.NotNull(value, ''value'')", span="1293-1293"];
m0_462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="_data = value", span="1295-1295"];
m0_464 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="_endIndex = value.Length", span="1297-1297"];
m0_463 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="_index = -1", span="1296-1296"];
m0_465 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1291-1291"];
m0_360 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m0_148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="459-459"];
m0_149 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="!option.IsArray && option.IsAttributeArrayCompatible", span="461-461"];
m0_150 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="throw new CommandLineParserException();", span="462-462"];
m0_151 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="459-459"];
m0_562 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1806-1806"];
m0_632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="var info = target.GetType().GetMethods()", span="1809-1809"];
m0_633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label=info, span="1811-1811"];
m0_634 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="!method.IsStatic", span="1813-1813"];
m0_638 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="return null;", span="1822-1822"];
m0_635 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1815-1816"];
m0_637 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1818-1818"];
m0_636 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="attribute != null", span="1817-1817"];
m0_639 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1806-1806"];
m0_134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="438-438"];
m0_135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="return BooleanToParserState(value, false);", span="440-440"];
m0_136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="438-438"];
m0_434 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="1218-1218"];
m0_452 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="this.BadOption = new BadOptionInfo()", span="1220-1220"];
m0_453 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="1218-1218"];
m0_75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1780-1780"];
m0_616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1783-1783"];
m0_617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="target != null", span="1784-1784"];
m0_618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="1786-1786"];
m0_625 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1797-1797"];
m0_626 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="return list;", span="1803-1803"];
m0_619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label=propertiesInfo, span="1788-1788"];
m0_620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="property != null && (property.CanRead && property.CanWrite)", span="1790-1790"];
m0_621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="var setMethod = property.GetSetMethod()", span="1792-1792"];
m0_623 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1795-1795"];
m0_622 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="setMethod != null && !setMethod.IsStatic", span="1793-1793"];
m0_624 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="attribute != null", span="1796-1796"];
m0_627 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1780-1780"];
m0_97 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Create(string)", span="382-382"];
m0_98 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="384-384"];
m0_100 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="argument[0] == '-' && argument[1] == '-'", span="387-387"];
m0_102 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="argument[0] == '-'", span="390-390"];
m0_99 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="return null;", span="385-385"];
m0_101 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="return new LongOptionParser();", span="388-388"];
m0_103 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="return new OptionGroupParser();", span="391-391"];
m0_104 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="return null;", span="393-393"];
m0_105 [cluster="CommandLine.ArgumentParser.Create(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Create(string)", span="382-382"];
m0_65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m0_209 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="854-854"];
m0_322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Type elementType = _property.PropertyType.GetElementType()", span="856-856"];
m0_323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Array array = Array.CreateInstance(elementType, values.Count)", span="857-857"];
m0_327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, file="CommandLine.cs", label="2: array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="865-865"];
m0_328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="CommandLine.cs", label="2: _property.SetValue(options, array, null)", span="866-866"];
m0_324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="int i = 0", span="859-859"];
m0_325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="i < array.Length", span="859-859"];
m0_331 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="i++", span="859-859"];
m0_326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label=_setValueLock, span="863-863"];
m0_332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="return true;", span="875-875"];
m0_329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label=FormatException, span="869-869"];
m0_330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="return false;", span="871-871"];
m0_333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="854-854"];
m0_495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1396-1396"];
m0_496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1398-1398"];
m0_499 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="_valueList.Add(item)", span="1403-1403"];
m0_497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="return false;", span="1399-1399"];
m0_498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label=this, span="1401-1401"];
m0_500 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="return true;", span="1406-1406"];
m0_501 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1396-1396"];
m0_536 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1596-1596"];
m0_537 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="_settings = new CommandLineParserSettings(\r\n                false, false, Console.Error)", span="1598-1599"];
m0_538 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1596-1596"];
m0_467 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1341-1341"];
m0_468 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="_index = -1", span="1343-1343"];
m0_469 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1341-1341"];
m0_240 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="690-690"];
m0_241 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="690-690"];
m0_127 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="428-428"];
m0_128 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="430-430"];
m0_129 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="428-428"];
m0_615 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_34 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_20 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m0_228 [cluster="string.Substring(int, int)", file="CommandLine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1510-1510"];
m0_518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="CaseSensitive = caseSensitive", span="1512-1512"];
m0_519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1510-1510"];
m0_563 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1724-1724"];
m0_588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="bool caseSensitive = _settings.CaseSensitive", span="1726-1726"];
m0_590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="i < args.Length", span="1728-1728"];
m0_591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1730-1730"];
m0_592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1732-1732"];
m0_594 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="!string.IsNullOrEmpty(helpOption.LongName)", span="1736-1736"];
m0_595 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1738-1738"];
m0_589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="int i = 0", span="1728-1728"];
m0_597 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="i++", span="1728-1728"];
m0_598 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return false;", span="1743-1743"];
m0_593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return true;", span="1733-1733"];
m0_596 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="return true;", span="1739-1739"];
m0_599 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1724-1724"];
m0_628 [cluster="object.GetType()", file="CommandLine.cs", label="Entry object.GetType()", span="0-0"];
m0_64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m0_106 [cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m0_470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1346-1346"];
m0_471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="_index < _endIndex", span="1348-1348"];
m0_472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="_index++", span="1350-1350"];
m0_474 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="return false;", span="1353-1353"];
m0_473 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="return _index < _endIndex;", span="1351-1351"];
m0_475 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1346-1346"];
m0_502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m0_503 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m0_664 [cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m0_107 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="521-521"];
m0_162 [cluster="CommandLine.LongOptionParser.LongOptionParser()", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="521-521"];
m0_124 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_466 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1758-1758"];
m0_604 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="value == null", span="1761-1761"];
m0_605 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="throw new ArgumentNullException(paramName);", span="1762-1762"];
m0_606 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1758-1758"];
m0_542 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1616-1616"];
m0_543 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Assumes.NotNull(settings, ''settings'')", span="1618-1618"];
m0_544 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="_settings = settings", span="1620-1620"];
m0_545 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1616-1616"];
m0_114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="411-411"];
m0_115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="IList<string> list = new List<string>()", span="413-413"];
m0_116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="ae.MoveNext()", span="415-415"];
m0_117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="IsInputValue(ae.Current)", span="417-417"];
m0_118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="list.Add(ae.Current)", span="418-418"];
m0_119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="!ae.MovePrevious()", span="422-422"];
m0_121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="return list;", span="425-425"];
m0_120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="throw new CommandLineParserException();", span="423-423"];
m0_122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="411-411"];
m0_630 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m0_96 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_334 [cluster="System.Type.GetElementType()", file="CommandLine.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m0_520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1521-1521"];
m0_521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="HelpWriter = helpWriter", span="1524-1524"];
m0_522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1521-1521"];
m0_665 [cluster="System.Type.Equals(System.Type)", file="CommandLine.cs", label="Entry System.Type.Equals(System.Type)", span="0-0"];
m0_242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="697-697"];
m0_243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var valueSetting = false", span="699-699"];
m0_244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="701-701"];
m0_246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var option = map[group.Current]", span="704-704"];
m0_252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="argumentEnumerator.IsLast && group.IsLast", span="714-714"];
m0_256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="721-721"];
m0_261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="731-731"];
m0_263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", span="734-734"];
m0_267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="742-742"];
m0_270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="748-748"];
m0_275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="758-758"];
m0_276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="valueSetting = option.SetValue(items, options)", span="760-760"];
m0_280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!group.IsLast && map[group.Next] == null", span="770-770"];
m0_282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.SetValue(true, options)", span="773-773"];
m0_245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="group.MoveNext()", span="702-702"];
m0_254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!group.IsLast", span="717-717"];
m0_262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="items.Insert(0, group.GetRemainingFromNext())", span="732-732"];
m0_284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Success;", span="778-778"];
m0_247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="option == null", span="705-705"];
m0_249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="option.IsDefined = true", span="708-708"];
m0_250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="710-710"];
m0_251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsBoolean", span="712-712"];
m0_255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsArray", span="719-719"];
m0_258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="723-723"];
m0_260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="729-729"];
m0_265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="736-736"];
m0_269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!option.IsArray", span="746-746"];
m0_272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="750-750"];
m0_274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="756-756"];
m0_278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="this.DefineOptionThatViolatesFormat(option)", span="762-762"];
m0_248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="706-706"];
m0_253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="715-715"];
m0_257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="722-722"];
m0_259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="725-725"];
m0_264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="735-735"];
m0_266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="738-738"];
m0_268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="743-743"];
m0_271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="749-749"];
m0_273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="752-752"];
m0_277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="!valueSetting", span="761-761"];
m0_279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="764-764"];
m0_281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="771-771"];
m0_283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="return ParserState.Failure;", span="774-774"];
m0_285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="697-697"];
m0_299 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m0_435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1178-1178"];
m0_436 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="_left = left", span="1180-1180"];
m0_437 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="_right = right", span="1181-1181"];
m0_438 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1178-1178"];
m0_404 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1155-1155"];
m0_424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="options is CommandLineOptionsBase", span="1157-1157"];
m0_426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="error.BadOption.ShortName = option.ShortName", span="1162-1162"];
m0_427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="error.BadOption.LongName = option.LongName", span="1163-1163"];
m0_428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="required != null", span="1165-1165"];
m0_429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="error.ViolatesRequired = required.Value", span="1165-1165"];
m0_430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="mutualExclusiveness != null", span="1166-1166"];
m0_431 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1166-1166"];
m0_432 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1168-1168"];
m0_425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="ParsingError error = new ParsingError()", span="1159-1159"];
m0_433 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1155-1155"];
m0_207 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="843-843"];
m0_312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="_attribute is OptionListAttribute", span="845-845"];
m0_313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="return SetValueList(value, options);", span="846-846"];
m0_315 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="return SetNullableValue(value, options);", span="849-849"];
m0_316 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="return SetValueScalar(value, options);", span="851-851"];
m0_314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="848-848"];
m0_317 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="843-843"];
m0_457 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1271-1271"];
m0_458 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Errors = new List<ParsingError>()", span="1273-1273"];
m0_459 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1271-1271"];
m0_130 [cluster="string.Compare(string, string, bool)", file="CommandLine.cs", label="Entry string.Compare(string, string, bool)", span="0-0"];
m0_286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="794-794"];
m0_287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="attribute != null", span="796-796"];
m0_288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_required = attribute.Required", span="798-798"];
m0_289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_helpText = attribute.HelpText", span="799-799"];
m0_290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_shortName = attribute.ShortName", span="800-800"];
m0_291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_longName = attribute.LongName", span="801-801"];
m0_292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="802-802"];
m0_293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_attribute = attribute", span="803-803"];
m0_295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="property != null", span="808-808"];
m0_296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="_property = property", span="809-809"];
m0_294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="806-806"];
m0_297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="811-811"];
m0_298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="794-794"];
m0_670 [file="CommandLine.cs", label="CommandLine.HelpOptionAttribute", span=""];
m0_671 [file="CommandLine.cs", label="CommandLine.OptionAttribute", span=""];
m0_672 [file="CommandLine.cs", label="CommandLine.OptionListAttribute", span=""];
m0_673 [file="CommandLine.cs", label="CommandLine.ValueListAttribute", span=""];
m0_674 [file="CommandLine.cs", label="CommandLine.ArgumentParser", span=""];
m0_675 [file="CommandLine.cs", label="CommandLine.BadOptionInfo", span=""];
m0_676 [file="CommandLine.cs", label="CommandLine.LongOptionParser", span=""];
m0_677 [file="CommandLine.cs", label="CommandLine.OneCharStringEnumerator", span=""];
m0_678 [file="CommandLine.cs", label="CommandLine.OptionGroupParser", span=""];
m0_679 [file="CommandLine.cs", label="CommandLine.OptionInfo", span=""];
m0_680 [file="CommandLine.cs", label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
m0_681 [file="CommandLine.cs", label="CommandLine.OptionMap", span=""];
m0_682 [file="CommandLine.cs", label="CommandLine.Pair<TLeft, TRight>", span=""];
m0_683 [file="CommandLine.cs", label="CommandLine.ParsingError", span=""];
m0_684 [file="CommandLine.cs", label="CommandLine.PostParsingState", span=""];
m0_685 [file="CommandLine.cs", label="CommandLine.StringArrayEnumerator", span=""];
m0_686 [file="CommandLine.cs", label="CommandLine.TargetWrapper", span=""];
m0_687 [file="CommandLine.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m0_688 [file="CommandLine.cs", label="CommandLine.CommandLineParserSettings", span=""];
m0_689 [file="CommandLine.cs", label="CommandLine.CommandLineParser", span=""];
m1_3 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1605-1605"];
m1_11 [cluster="Unk.IsFalse", file="CommandLineParserBaseFixture.cs", label="Entry Unk.IsFalse", span=""];
m1_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m1_9 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="0: Assert.IsFalse(result)", span="52-52"];
m1_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m1_7 [cluster="Unk.IsTrue", file="CommandLineParserBaseFixture.cs", label="Entry Unk.IsTrue", span=""];
m1_0 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", span="40-40"];
m1_1 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="2: return new CommandLineParser();", span="42-42"];
m1_2 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateCommandLineParser()", span="40-40"];
m1_4 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m1_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="2: Assert.IsTrue(result)", span="47-47"];
m1_6 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m2_8 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="55-55"];
m2_9 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new SimpleOptions()", span="57-57"];
m2_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="58-58"];
m2_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''something'', options.StringValue)", span="61-61"];
m2_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Console.WriteLine(options)", span="62-62"];
m2_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="60-60"];
m2_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="55-55"];
m2_132 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="235-235"];
m2_133 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NumberSetOptions()", span="237-237"];
m2_134 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="238-238"];
m2_135 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: base.AssertParserFailure(result)", span="240-240"];
m2_136 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="235-235"];
m2_78 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m2_126 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m2_5 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="49-49"];
m2_6 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: base.Parser.ParseArguments(new string[] { }, null)", span="51-51"];
m2_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="49-49"];
m2_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="138-138"];
m2_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new SimpleOptionsWithEnum()", span="140-140"];
m2_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="142-142"];
m2_74 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(''data.bin'', options.StringValue)", span="145-145"];
m2_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="146-146"];
m2_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options)", span="147-147"];
m2_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="144-144"];
m2_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="138-138"];
m2_115 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1510-1510"];
m2_116 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="208-208"];
m2_117 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new SimpleOptions()", span="210-210"];
m2_118 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="211-211"];
m2_119 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="213-213"];
m2_120 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="208-208"];
m2_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="80-80"];
m2_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: var options = new BooleanSetOptions()", span="82-82"];
m2_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="83-83"];
m2_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsTrue(options.BooleanThree)", span="86-86"];
m2_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.IsTrue(options.BooleanOne)", span="87-87"];
m2_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsFalse(options.BooleanTwo)", span="88-88"];
m2_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(65, options.NonBooleanValue)", span="89-89"];
m2_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Console.WriteLine(options)", span="90-90"];
m2_30 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="85-85"];
m2_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="80-80"];
m2_65 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="129-129"];
m2_66 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: var options = new SimpleOptions()", span="131-131"];
m2_67 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="133-133"];
m2_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options)", span="134-134"];
m2_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="129-129"];
m2_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="108-108"];
m2_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new SimpleOptionsWithOptionList()", span="110-110"];
m2_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="111-112"];
m2_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="115-115"];
m2_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options.SearchKeywords[0])", span="116-116"];
m2_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="117-117"];
m2_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options.SearchKeywords[1])", span="118-118"];
m2_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="119-119"];
m2_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options.SearchKeywords[2])", span="120-120"];
m2_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''test-file.txt'', options.StringValue)", span="121-121"];
m2_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Console.WriteLine(options.StringValue)", span="122-122"];
m2_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="114-114"];
m2_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="108-108"];
m2_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m2_147 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="262-262"];
m2_148 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", color=green, community=2, file="CommandLineParserFixture.cs", label="1: var options = new NumberSetOptions()", span="264-264"];
m2_149 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="265-265"];
m2_150 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", color=green, community=2, file="CommandLineParserFixture.cs", label="2: base.AssertParserFailure(result)", span="267-267"];
m2_151 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="262-262"];
m2_4 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m2_106 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="194-194"];
m2_107 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="196-196"];
m2_108 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new MixedCaseOptions()", span="197-197"];
m2_109 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="198-198"];
m2_111 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''alfa'', options.AlfaValue)", span="201-201"];
m2_112 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''beta'', options.BetaValue)", span="202-202"];
m2_110 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="200-200"];
m2_113 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="194-194"];
m2_17 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m2_37 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m2_63 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m2_90 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="172-172"];
m2_91 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: ICommandLineParser local = new CommandLineParser()", span="174-174"];
m2_92 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new MixedCaseOptions()", span="175-175"];
m2_93 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="176-176"];
m2_95 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''alfa'', options.AlfaValue)", span="179-179"];
m2_96 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''beta'', options.BetaValue)", span="180-180"];
m2_94 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="178-178"];
m2_97 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="172-172"];
m2_158 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="283-283"];
m2_159 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new SimpleOptionsWithValueList()", span="285-285"];
m2_160 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="286-286"];
m2_162 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(''parser.xml'', options.StringValue)", span="289-289"];
m2_163 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(true, options.BooleanValue)", span="290-290"];
m2_164 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(1, options.Items.Count)", span="291-291"];
m2_165 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''-'', options.Items[0])", span="292-292"];
m2_161 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="288-288"];
m2_166 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="283-283"];
m2_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="161-161"];
m2_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new SimpleOptions()", span="163-163"];
m2_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="164-164"];
m2_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="166-166"];
m2_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="161-161"];
m2_18 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="66-66"];
m2_19 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new SimpleOptions()", span="68-68"];
m2_20 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="69-70"];
m2_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(''another string'', options.StringValue)", span="73-73"];
m2_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(100, options.IntegerValue)", span="74-74"];
m2_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(true, options.BooleanValue)", span="75-75"];
m2_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Console.WriteLine(options)", span="76-76"];
m2_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="72-72"];
m2_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="66-66"];
m2_98 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1605-1605"];
m2_16 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m2_39 [cluster="Unk.IsFalse", file="CommandLineParserFixture.cs", label="Entry Unk.IsFalse", span=""];
m2_84 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m2_100 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="184-184"];
m2_101 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: ICommandLineParser local = new CommandLineParser()", span="186-186"];
m2_102 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new MixedCaseOptions()", span="187-187"];
m2_103 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="188-188"];
m2_104 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="190-190"];
m2_105 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="184-184"];
m2_114 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1616-1616"];
m2_0 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="42-42"];
m2_1 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: base.Parser.ParseArguments(null, new SimpleOptions())", span="44-44"];
m2_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="42-42"];
m2_167 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m2_152 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="273-273"];
m2_153 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: var options = new SimpleOptions()", span="275-275"];
m2_154 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="276-276"];
m2_156 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.AreEqual(''-'', options.StringValue)", span="279-279"];
m2_155 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="278-278"];
m2_157 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="273-273"];
m2_3 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="35-35"];
m2_64 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_40 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="94-94"];
m2_41 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: var options = new BooleanSetOptions()", span="96-96"];
m2_42 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="97-97"];
m2_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Assert.IsTrue(options.BooleanTwo)", span="100-100"];
m2_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.IsFalse(options.BooleanOne)", span="101-101"];
m2_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.IsFalse(options.BooleanThree)", span="102-102"];
m2_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Assert.AreEqual(9, options.NonBooleanValue)", span="103-103"];
m2_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: Console.WriteLine(options)", span="104-104"];
m2_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: base.AssertParserSuccess(result)", span="99-99"];
m2_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="94-94"];
m2_121 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="217-217"];
m2_122 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NumberSetOptions()", span="219-219"];
m2_123 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="220-220"];
m2_124 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: base.AssertParserFailure(result)", span="222-222"];
m2_125 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="217-217"];
m2_137 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="244-244"];
m2_138 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="246-246"];
m2_139 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="247-247"];
m2_140 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", color=green, community=2, file="CommandLineParserFixture.cs", label="2: base.AssertParserFailure(result)", span="249-249"];
m2_141 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="244-244"];
m2_99 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m2_142 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="253-253"];
m2_143 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", color=green, community=2, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="255-255"];
m2_144 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="256-256"];
m2_145 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", color=green, community=2, file="CommandLineParserFixture.cs", label="0: base.AssertParserFailure(result)", span="258-258"];
m2_146 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="253-253"];
m2_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="152-152"];
m2_80 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: var options = new SimpleOptions()", span="154-154"];
m2_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="155-155"];
m2_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="157-157"];
m2_83 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="152-152"];
m2_127 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="226-226"];
m2_128 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: var options = new NumberSetOptions()", span="228-228"];
m2_129 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="229-229"];
m2_130 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: base.AssertParserFailure(result)", span="231-231"];
m2_131 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="226-226"];
m2_38 [cluster="Unk.IsTrue", file="CommandLineParserFixture.cs", label="Entry Unk.IsTrue", span=""];
m2_168 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m4_41 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="94-94"];
m4_42 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithMultipleSetAndOneOption()", span="96-96"];
m4_43 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="97-97"];
m4_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: base.AssertParserFailure(result)", span="99-99"];
m4_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="94-94"];
m4_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m4_15 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="54-54"];
m4_16 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithDefaultSet()", span="56-56"];
m4_17 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="57-57"];
m4_18 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="59-59"];
m4_19 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="54-54"];
m4_46 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="35-35"];
m4_35 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m4_28 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="74-74"];
m4_29 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithMultipleSet()", span="76-76"];
m4_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="77-77"];
m4_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Assert.AreEqual(167, options.Green)", span="80-80"];
m4_33 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: Assert.AreEqual(205, options.Hue)", span="81-81"];
m4_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="79-79"];
m4_34 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="74-74"];
m4_4 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1500-1500"];
m4_11 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m4_3 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1616-1616"];
m4_13 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m4_14 [cluster="Unk.AreEqual", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.AreEqual", span=""];
m4_20 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m4_21 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="63-63"];
m4_22 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithDefaultSet()", span="65-65"];
m4_23 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="66-66"];
m4_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Assert.AreEqual(''mystuff.xml'', options.FileName)", span="69-69"];
m4_26 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: Assert.AreEqual(true, options.Verbose)", span="70-70"];
m4_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="68-68"];
m4_27 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="63-63"];
m4_36 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="85-85"];
m4_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithMultipleSet()", span="87-87"];
m4_38 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="88-88"];
m4_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: base.AssertParserFailure(result)", span="90-90"];
m4_40 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="85-85"];
m4_47 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="103-103"];
m4_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithMultipleSetAndOneOption()", span="105-105"];
m4_49 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="106-106"];
m4_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Assert.AreEqual(100, options.Green)", span="109-109"];
m4_52 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: Assert.AreEqual(200, options.Hue)", span="110-110"];
m4_53 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Assert.AreEqual(ColorSet.RgbColorSet, options.DefaultColorSet)", span="111-111"];
m4_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="108-108"];
m4_54 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="103-103"];
m4_5 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="44-44"];
m4_6 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: var options = new OptionsWithDefaultSet()", span="46-46"];
m4_7 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="47-47"];
m4_9 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="1: Assert.AreEqual(''mystuff.xml'', options.FileName)", span="50-50"];
m4_8 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="49-49"];
m4_10 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="44-44"];
m4_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateCommandLineParser()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateCommandLineParser()", span="38-38"];
m4_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateCommandLineParser()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="2: return new CommandLineParser(new CommandLineParserSettings {MutuallyExclusive = true});", span="40-40"];
m4_2 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateCommandLineParser()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateCommandLineParser()", span="38-38"];
m4_55 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m5_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m5_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="69-69"];
m5_23 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="70-70"];
m5_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="72-72"];
m5_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="67-67"];
m5_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m5_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m5_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="112-112"];
m5_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="113-113"];
m5_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(9.999, options.DoubleValue)", span="116-116"];
m5_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="115-115"];
m5_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options = new NullableTypesOptions()", span="118-118"];
m5_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { }, options)", span="119-119"];
m5_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.IsNull(options.DoubleValue)", span="122-122"];
m5_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="121-121"];
m5_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="110-110"];
m5_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m5_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="78-78"];
m5_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="79-79"];
m5_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(FileAccess.ReadWrite, options.EnumValue)", span="82-82"];
m5_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="81-81"];
m5_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options = new NullableTypesOptions()", span="84-84"];
m5_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m5_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: Assert.IsNull(options.EnumValue)", span="88-88"];
m5_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="87-87"];
m5_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="76-76"];
m5_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m5_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="94-94"];
m5_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="95-95"];
m5_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="97-97"];
m5_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="92-92"];
m5_14 [cluster="Unk.IsNull", file="NullableTypesParsingFixture.cs", label="Entry Unk.IsNull", span=""];
m5_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m5_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="44-44"];
m5_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="45-45"];
m5_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(99, options.IntegerValue)", span="48-48"];
m5_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="47-47"];
m5_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="50-50"];
m5_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { }, options)", span="51-51"];
m5_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.IsNull(options.IntegerValue)", span="54-54"];
m5_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="53-53"];
m5_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="42-42"];
m5_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m5_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="137-137"];
m5_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="138-138"];
m5_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="140-140"];
m5_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="135-135"];
m5_10 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m5_13 [cluster="Unk.AreEqual", file="NullableTypesParsingFixture.cs", label="Entry Unk.AreEqual", span=""];
m5_15 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m5_16 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="60-60"];
m5_17 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="61-61"];
m5_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="63-63"];
m5_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="58-58"];
m5_20 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m5_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m5_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="103-103"];
m5_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="104-104"];
m5_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="106-106"];
m5_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="101-101"];
m5_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m5_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: var options = new NullableTypesOptions()", span="128-128"];
m5_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="129-129"];
m5_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="131-131"];
m5_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="126-126"];
m5_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m5_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: var options = new NullableTypesOptions()", span="146-146"];
m5_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="147-147"];
m5_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(''alone'', options.StringValue)", span="150-150"];
m5_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="149-149"];
m5_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: options = new NullableTypesOptions()", span="152-152"];
m5_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="1: result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="153-154"];
m5_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(1.789, options.DoubleValue)", span="157-157"];
m5_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(10099, options.IntegerValue)", span="158-158"];
m5_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(''together'', options.StringValue)", span="159-159"];
m5_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: Assert.AreEqual(FileAccess.Read, options.EnumValue)", span="160-160"];
m5_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="156-156"];
m5_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="144-144"];
m5_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m5_79 [file="NullableTypesParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m6_0 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m6_1 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="2: ByteValue = 0", span="37-37"];
m6_2 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="1: ShortValue = 0", span="38-38"];
m6_3 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="1: IntegerValue = 0", span="39-39"];
m6_4 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="0: LongValue = 0", span="40-40"];
m6_5 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="1: FloatValue = 0", span="41-41"];
m6_6 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", color=green, community=0, file="NumberSetOptions.cs", label="0: DoubleValue = 0", span="42-42"];
m6_7 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Exit CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m6_8 [file="NumberSetOptions.cs", label="CommandLine.Tests.Mocks.NumberSetOptions", span=""];
m7_10 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="51-51"];
m7_11 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="53-53"];
m7_12 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="54-54"];
m7_14 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="57-57"];
m7_13 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="56-56"];
m7_15 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="51-51"];
m7_53 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="117-117"];
m7_54 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: var options = new SimpleOptionsWithArrayAndValueList()", span="119-119"];
m7_55 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="120-121"];
m7_57 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Assert.AreEqual(''here'', options.StringValue)", span="124-124"];
m7_58 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(999, options.IntegerValue)", span="125-125"];
m7_59 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="126-126"];
m7_60 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.IsTrue(options.BooleanValue)", span="127-127"];
m7_61 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="128-128"];
m7_56 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="123-123"];
m7_62 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="117-117"];
m7_63 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35"];
m7_80 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="158-158"];
m7_81 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="160-160"];
m7_82 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="161-161"];
m7_83 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertParserFailure(result)", span="163-163"];
m7_84 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="165-165"];
m7_85 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="166-166"];
m7_86 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertParserFailure(result)", span="168-168"];
m7_87 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="170-170"];
m7_88 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="171-171"];
m7_89 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="173-173"];
m7_90 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="175-175"];
m7_91 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="176-176"];
m7_92 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="178-178"];
m7_93 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="158-158"];
m7_16 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="61-61"];
m7_17 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="63-63"];
m7_18 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="64-64"];
m7_20 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="67-67"];
m7_19 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="66-66"];
m7_21 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="61-61"];
m7_94 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="183-183"];
m7_95 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="185-185"];
m7_96 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", span="186-186"];
m7_97 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.AssertParserFailure(result)", span="188-188"];
m7_98 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="190-190"];
m7_99 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="191-191"];
m7_100 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.AssertParserFailure(result)", span="193-193"];
m7_101 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="183-183"];
m7_167 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="332-332"];
m7_168 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.Parser.ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="334-334"];
m7_169 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="332-332"];
m7_43 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="103-103"];
m7_44 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="105-105"];
m7_45 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="106-107"];
m7_47 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(191919, options.IntegerValue)", span="110-110"];
m7_48 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="111-111"];
m7_49 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Assert.IsTrue(options.BooleanValue)", span="112-112"];
m7_50 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''near'', options.StringValue)", span="113-113"];
m7_46 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.AssertParserSuccess(result)", span="109-109"];
m7_51 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="103-103"];
m7_160 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="318-318"];
m7_161 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="320-320"];
m7_162 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="318-318"];
m7_22 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="71-71"];
m7_23 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="73-73"];
m7_24 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="74-74"];
m7_26 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="77-77"];
m7_25 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="76-76"];
m7_27 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="71-71"];
m7_128 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="251-251"];
m7_129 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="253-253"];
m7_130 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="254-259"];
m7_132 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="262-262"];
m7_133 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="263-263"];
m7_134 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="264-264"];
m7_135 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''after'', options.StringValue)", span="265-265"];
m7_131 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="261-261"];
m7_136 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="267-267"];
m7_137 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="268-273"];
m7_139 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''before'', options.StringValue)", span="276-276"];
m7_140 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="277-277"];
m7_141 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="278-278"];
m7_142 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="279-279"];
m7_138 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="275-275"];
m7_143 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="281-281"];
m7_144 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="282-287"];
m7_146 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="290-290"];
m7_147 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="291-291"];
m7_148 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''near-the-center'', options.StringValue)", span="292-292"];
m7_149 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="293-293"];
m7_145 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="289-289"];
m7_150 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="295-295"];
m7_151 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: result = base.Parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="296-303"];
m7_153 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: Assert.IsTrue(options.BooleanValue)", span="306-306"];
m7_154 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="307-307"];
m7_155 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="308-308"];
m7_156 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(1234, options.IntegerValue)", span="309-309"];
m7_157 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="310-310"];
m7_158 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''I'm really playing with the parser!'', options.StringValue)", span="311-311"];
m7_152 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="305-305"];
m7_159 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="251-251"];
m7_0 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="41-41"];
m7_1 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="43-43"];
m7_2 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="44-44"];
m7_4 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="47-47"];
m7_3 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="46-46"];
m7_5 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="41-41"];
m7_64 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.AssertArrayItemEqual(string[], System.Collections.Generic.IList<string>)", span="46-46"];
m7_163 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m7_36 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="92-92"];
m7_37 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="94-94"];
m7_38 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="95-95"];
m7_40 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''before'', options.StringValue)", span="98-98"];
m7_41 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="99-99"];
m7_39 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.AssertParserSuccess(result)", span="97-97"];
m7_42 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="92-92"];
m7_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m7_7 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m7_35 [cluster="Unk.AreEqual", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.AreEqual", span=""];
m7_73 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m7_108 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="211-211"];
m7_109 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="213-213"];
m7_110 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="214-218"];
m7_112 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="221-221"];
m7_113 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="222-222"];
m7_114 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="223-223"];
m7_111 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="220-220"];
m7_115 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="225-225"];
m7_116 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="226-230"];
m7_118 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="233-233"];
m7_119 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="234-234"];
m7_120 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="235-235"];
m7_117 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="232-232"];
m7_121 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: options = new SimpleOptionsWithArray()", span="237-237"];
m7_122 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="238-242"];
m7_124 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertArrayItemEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="245-245"];
m7_125 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="246-246"];
m7_126 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="247-247"];
m7_123 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="244-244"];
m7_127 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="211-211"];
m7_74 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="148-148"];
m7_75 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="150-150"];
m7_76 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="151-151"];
m7_78 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new int[] { 1, 2, 3 }, options.IntegerArrayValue)", span="154-154"];
m7_77 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="153-153"];
m7_79 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="148-148"];
m7_102 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="199-199"];
m7_103 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="201-201"];
m7_104 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="202-202"];
m7_106 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="205-205"];
m7_105 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="204-204"];
m7_107 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="199-199"];
m7_6 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m7_65 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="132-132"];
m7_66 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithArray()", span="134-134"];
m7_67 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''-z'' }, options)", span="135-135"];
m7_68 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="137-137"];
m7_69 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options = new SimpleOptionsWithArray()", span="139-139"];
m7_70 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: result = base.Parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="140-140"];
m7_71 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertParserFailure(result)", span="142-142"];
m7_72 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="132-132"];
m7_9 [cluster="CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.AssertArrayItemEqual<T>(T[], T[])", span="37-37"];
m7_164 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="325-325"];
m7_165 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="2: base.Parser.ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="327-327"];
m7_166 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="325-325"];
m7_170 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="339-339"];
m7_171 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="341-341"];
m7_172 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="339-339"];
m7_52 [cluster="Unk.IsTrue", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.IsTrue", span=""];
m7_28 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="81-81"];
m7_29 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: var options = new SimpleOptionsWithArray()", span="83-83"];
m7_30 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="84-84"];
m7_32 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: base.AssertArrayItemEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="87-87"];
m7_33 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: Assert.AreEqual(''after'', options.StringValue)", span="88-88"];
m7_31 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="86-86"];
m7_34 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="81-81"];
m7_173 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m8_34 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m8_31 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m8_13 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="659-659"];
m8_33 [cluster="double.ToString()", file="Program.cs", label="Entry double.ToString()", span="0-0"];
m8_8 [cluster="CommandLine.Text.HelpText.HelpText()", file="Program.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="460-460"];
m8_0 [cluster="CSharpTemplate.Program.Options.GetUsage()", file="Program.cs", label="Entry CSharpTemplate.Program.Options.GetUsage()", span="33-33"];
m8_1 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=1, file="Program.cs", label="1: var help = new HelpText {\r\n					Heading = new HeadingInfo(ThisAssembly.Title, ThisAssembly.InformationalVersion),\r\n					Copyright = new CopyrightInfo(ThisAssembly.Author, 2012),\r\n                	AdditionalNewLineAfterOption = true,\r\n					AddDashesToOption = true\r\n				}", span="35-40"];
m8_2 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=0, file="Program.cs", label="1: this.HandleParsingErrorsInHelp(help)", span="41-41"];
m8_3 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=0, file="Program.cs", label="0: help.AddPreOptionsLine(''<<license details here.>>'')", span="42-42"];
m8_4 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=0, file="Program.cs", label="1: help.AddPreOptionsLine(''Usage: CSharpTemplate -tSomeText --numeric 2012 -b'')", span="43-43"];
m8_5 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=0, file="Program.cs", label="0: help.AddOptions(this)", span="44-44"];
m8_6 [cluster="CSharpTemplate.Program.Options.GetUsage()", color=green, community=0, file="Program.cs", label="0: return help;", span="46-46"];
m8_7 [cluster="CSharpTemplate.Program.Options.GetUsage()", file="Program.cs", label="Exit CSharpTemplate.Program.Options.GetUsage()", span="33-33"];
m8_12 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="634-634"];
m8_35 [cluster="string.ToLower()", file="Program.cs", label="Entry string.ToLower()", span="0-0"];
m8_9 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="338-338"];
m8_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="Program.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="171-171"];
m8_23 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Entry CSharpTemplate.Program.Main(string[])", span="63-63"];
m8_24 [cluster="CSharpTemplate.Program.Main(string[])", color=green, community=0, file="Program.cs", label="0: var options = new Options()", span="65-65"];
m8_25 [cluster="CSharpTemplate.Program.Main(string[])", color=green, community=0, file="Program.cs", label="0: CommandLineParser.Default.ParseArguments(args, options)", span="66-66"];
m8_26 [cluster="CSharpTemplate.Program.Main(string[])", color=green, community=0, file="Program.cs", label="1: Console.WriteLine(''t|ext: '' + options.TextValue)", span="68-68"];
m8_27 [cluster="CSharpTemplate.Program.Main(string[])", color=green, community=0, file="Program.cs", label="0: Console.WriteLine(''n|umeric: '' + options.NumericValue.ToString())", span="69-69"];
m8_28 [cluster="CSharpTemplate.Program.Main(string[])", color=green, community=0, file="Program.cs", label="1: Console.WriteLine(''b|ool: '' + options.BooleanValue.ToString().ToLower())", span="70-70"];
m8_29 [cluster="CSharpTemplate.Program.Main(string[])", file="Program.cs", label="Exit CSharpTemplate.Program.Main(string[])", span="63-63"];
m8_22 [cluster="string.Concat(string, string)", file="Program.cs", label="Entry string.Concat(string, string)", span="0-0"];
m8_30 [cluster="CSharpTemplate.Program.Options.Options()", file="Program.cs", label="Entry CSharpTemplate.Program.Options.Options()", span="21-21"];
m8_21 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_20 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="Program.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="723-723"];
m8_32 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m8_11 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Entry CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="49-49"];
m8_14 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", color=green, community=0, file="Program.cs", label="0: this.LastPostParsingState.Errors.Count > 0", span="51-51"];
m8_15 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", color=green, community=0, file="Program.cs", label="1: var errors = help.RenderParsingErrorsText(this, 2)", span="53-53"];
m8_16 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", color=green, community=0, file="Program.cs", label="0: !string.IsNullOrEmpty(errors)", span="54-54"];
m8_18 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", color=green, community=0, file="Program.cs", label="2: help.AddPreOptionsLine(errors)", span="57-57"];
m8_17 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", color=green, community=0, file="Program.cs", label="1: help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="56-56"];
m8_19 [cluster="CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", file="Program.cs", label="Exit CSharpTemplate.Program.Options.HandleParsingErrorsInHelp(CommandLine.Text.HelpText)", span="49-49"];
m8_36 [file="Program.cs", label="CSharpTemplate.Program.Options", span=""];
m10_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1427-1427"];
m10_17 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="57-57"];
m10_18 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="2: var options = new OptionsWithValueListMaximumThree()", span="59-59"];
m10_19 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="60-60"];
m10_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(''file.a'', options.InputFilenames[0])", span="63-63"];
m10_22 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(''file.b'', options.InputFilenames[1])", span="64-64"];
m10_23 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(''file.c'', options.InputFilenames[2])", span="65-65"];
m10_24 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.IsNull(options.OutputFile)", span="66-66"];
m10_25 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Assert.IsFalse(options.Overwrite)", span="67-67"];
m10_26 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Console.WriteLine(options)", span="68-68"];
m10_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="62-62"];
m10_27 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="57-57"];
m10_16 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m10_29 [cluster="Unk.IsNull", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.IsNull", span=""];
m10_31 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="72-72"];
m10_32 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: var options = new OptionsWithValueListMaximumThree()", span="74-74"];
m10_33 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="75-76"];
m10_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: base.AssertParserFailure(result)", span="78-78"];
m10_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="72-72"];
m10_28 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m10_14 [cluster="Unk.AreEqual", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.AreEqual", span=""];
m10_30 [cluster="Unk.IsFalse", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.IsFalse", span=""];
m10_36 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="50-50"];
m10_15 [cluster="Unk.IsTrue", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.IsTrue", span=""];
m10_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m10_44 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m10_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="93-93"];
m10_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: var options = new OptionsWithValueListMaximumZero()", span="95-95"];
m10_47 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="2: Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options))", span="97-97"];
m10_48 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="93-93"];
m10_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="41-41"];
m10_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueList()", span="43-43"];
m10_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="2: bool result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="44-45"];
m10_4 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Assert.AreEqual(''file1.ext'', options.Items[0])", span="48-48"];
m10_5 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(''file2.ext'', options.Items[1])", span="49-49"];
m10_6 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Assert.AreEqual(''file3.ext'', options.Items[2])", span="50-50"];
m10_7 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(''out.ext'', options.StringValue)", span="51-51"];
m10_8 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Assert.IsTrue(options.BooleanValue)", span="52-52"];
m10_9 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="2: Console.WriteLine(options)", span="53-53"];
m10_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: base.AssertParserSuccess(result)", span="47-47"];
m10_10 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="41-41"];
m10_37 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="82-82"];
m10_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: var options = new OptionsWithValueListMaximumZero()", span="84-84"];
m10_39 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: bool result = base.Parser.ParseArguments(new string[] { }, options)", span="85-85"];
m10_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="1: Assert.AreEqual(0, options.Junk.Count)", span="88-88"];
m10_42 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Console.WriteLine(options)", span="89-89"];
m10_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: base.AssertParserSuccess(result)", span="87-87"];
m10_43 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="82-82"];
m10_13 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="45-45"];
m10_49 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
m0_487 -> m0_488  [key=0, style=solid];
m0_488 -> m0_487  [color=blue, key=0, style=bold];
m0_15 -> m0_18  [key=0, style=solid];
m0_15 -> m0_10  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_15  [color=blue, key=0, style=bold];
m0_321 -> m0_338  [key=0, style=solid];
m0_321 -> m0_340  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_321 -> m0_342  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_321 -> m0_207  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_321 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool SetValueScalar", style=bold];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_341  [key=0, style=solid];
m0_340 -> m0_343  [key=0, style=solid];
m0_340 -> m0_345  [key=0, style=solid];
m0_340 -> m0_347  [key=0, style=solid];
m0_340 -> m0_349  [key=0, style=solid];
m0_340 -> m0_351  [key=2, style=dotted];
m0_340 -> m0_64  [key=2, style=dotted];
m0_342 -> m0_343  [color=red, key=0, style=solid];
m0_342 -> m0_345  [color=red, key=0, style=solid];
m0_342 -> m0_347  [color=red, key=0, style=solid];
m0_342 -> m0_349  [color=red, key=0, style=solid];
m0_342 -> m0_336  [color=red, key=2, style=dotted];
m0_342 -> m0_64  [color=red, key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_341 -> m0_342  [color=red, key=0, style=solid];
m0_343 -> m0_344  [key=0, style=solid];
m0_345 -> m0_346  [key=0, style=solid];
m0_347 -> m0_348  [key=0, style=solid];
m0_349 -> m0_350  [key=0, style=solid];
m0_344 -> m0_350  [key=0, style=solid];
m0_346 -> m0_350  [key=0, style=solid];
m0_348 -> m0_350  [key=0, style=solid];
m0_350 -> m0_321  [color=blue, key=0, style=bold];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_549  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m0_505 -> m0_504  [color=blue, key=0, style=bold];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_157 -> m0_154  [color=blue, key=0, style=bold];
m0_445 -> m0_446  [key=0, style=solid];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_449  [color=darkseagreen4, key=1, label=other, style=dashed];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_449  [key=0, style=solid];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_451  [key=2, style=dotted];
m0_448 -> m0_450  [key=0, style=solid];
m0_450 -> m0_445  [color=blue, key=0, style=bold];
m0_95 -> m0_454  [key=0, style=solid];
m0_95 -> m0_455  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_154  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_456 -> m0_95  [color=blue, key=0, style=bold];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_551  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_549 -> m0_552  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_549 -> m0_553  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_549 -> m0_554  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_549 -> m0_556  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_549 -> m0_557  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_549 -> m0_560  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_549 -> m0_504  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter helpWriter", style=bold];
m0_549 -> m0_546  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_549 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m0_549 -> m0_564  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_466  [key=2, style=dotted];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_466  [key=2, style=dotted];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_562  [key=2, style=dotted];
m0_552 -> m0_554  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_552 -> m0_556  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_560  [key=0, style=solid];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_559  [key=0, style=solid];
m0_554 -> m0_563  [key=2, style=dotted];
m0_554 -> m0_564  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_556 -> m0_8  [key=2, style=dotted];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_565  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_564  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_559 -> m0_561  [key=0, style=solid];
m0_558 -> m0_561  [key=0, style=solid];
m0_561 -> m0_549  [color=blue, key=0, style=bold];
m0_53 -> m0_510  [key=0, style=solid];
m0_510 -> m0_53  [color=blue, key=0, style=bold];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_213  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_216  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_211  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_89  [key=2, style=dotted];
m0_88 -> m0_86  [color=blue, key=0, style=bold];
m0_210 -> m0_361  [key=0, style=solid];
m0_210 -> m0_362  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_210 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m0_210 -> m0_163  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_210 -> m0_242  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_361 -> m0_362  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_64  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_364 -> m0_210  [color=blue, key=0, style=bold];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_219  [key=0, style=solid];
m0_219 -> m0_217  [color=blue, key=0, style=bold];
m0_479 -> m0_480  [key=0, style=solid];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_482  [key=0, style=solid];
m0_481 -> m0_486  [key=0, style=solid];
m0_481 -> m0_34  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_485  [key=0, style=solid];
m0_483 -> m0_484  [key=0, style=solid];
m0_485 -> m0_486  [key=0, style=solid];
m0_484 -> m0_486  [key=0, style=solid];
m0_486 -> m0_479  [color=blue, key=0, style=bold];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_529  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_528 -> m0_529  [key=0, style=solid];
m0_529 -> m0_530  [key=0, style=solid];
m0_530 -> m0_527  [color=blue, key=0, style=bold];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_419  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_416 -> m0_407  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_419  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_417 -> m0_420  [color=darkseagreen4, key=1, label=setName, style=dashed];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_376  [key=2, style=dotted];
m0_419 -> m0_423  [key=2, style=dotted];
m0_418 -> m0_419  [key=0, style=solid];
m0_418 -> m0_420  [key=0, style=solid];
m0_418 -> m0_422  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_379  [key=2, style=dotted];
m0_421 -> m0_416  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
m0_8 -> m0_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_8 -> m0_549  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_14  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_8  [color=blue, key=0, style=bold];
m0_439 -> m0_440  [key=0, style=solid];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_444  [key=2, style=dotted];
m0_440 -> m0_442  [color=darkseagreen4, key=1, label=leftHash, style=dashed];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_444  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_443 -> m0_439  [color=blue, key=0, style=bold];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_533  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_531 -> m0_534  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_532 -> m0_533  [key=0, style=solid];
m0_533 -> m0_534  [key=0, style=solid];
m0_534 -> m0_535  [key=0, style=solid];
m0_535 -> m0_531  [color=blue, key=0, style=bold];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_140  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_137 -> m0_134  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m0_137 -> m0_166  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m0_137 -> m0_243  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m0_137 -> m0_112  [color=darkorchid, key=3, label="Parameter variable bool addMoveNextIfTrue", style=bold];
m0_137 -> m0_139  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
m0_137 -> m0_141  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
m0_137 -> m0_142  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_139 -> m0_143  [key=0, style=solid];
m0_141 -> m0_143  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_137  [color=blue, key=0, style=bold];
m0_379 -> m0_380  [key=0, style=solid];
m0_380 -> m0_381  [key=0, style=solid];
m0_381 -> m0_379  [color=blue, key=0, style=bold];
m0_319 -> m0_662  [key=0, style=solid];
m0_662 -> m0_663  [key=0, style=solid];
m0_662 -> m0_664  [key=2, style=dotted];
m0_662 -> m0_665  [key=2, style=dotted];
m0_663 -> m0_319  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_24 -> m0_33  [key=2, style=dotted];
m0_25 -> m0_28  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_29 -> m0_32  [key=0, style=solid];
m0_29 -> m0_34  [key=2, style=dotted];
m0_32 -> m0_23  [color=blue, key=0, style=bold];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_502  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_546 -> m0_549  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_549  [key=2, style=dotted];
m0_548 -> m0_546  [color=blue, key=0, style=bold];
m0_641 -> m0_642  [key=0, style=solid];
m0_641 -> m0_645  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m0_641 -> m0_58  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m0_642 -> m0_643  [key=0, style=solid];
m0_642 -> m0_628  [key=2, style=dotted];
m0_642 -> m0_640  [key=2, style=dotted];
m0_643 -> m0_644  [key=0, style=solid];
m0_643 -> m0_648  [key=0, style=solid];
m0_643 -> m0_645  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_644 -> m0_645  [key=0, style=solid];
m0_644 -> m0_643  [key=0, style=solid];
m0_648 -> m0_649  [key=0, style=solid];
m0_645 -> m0_646  [key=0, style=solid];
m0_645 -> m0_631  [key=2, style=dotted];
m0_645 -> m0_647  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_646 -> m0_647  [key=0, style=solid];
m0_646 -> m0_643  [key=0, style=solid];
m0_647 -> m0_649  [key=0, style=solid];
m0_649 -> m0_641  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_58  [color=darkorchid, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_75  [key=2, style=dotted];
m0_67 -> m0_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_67 -> m0_72  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_69 -> m0_74  [key=0, style=solid];
m0_71 -> m0_74  [key=0, style=solid];
m0_71 -> m0_34  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_66  [color=blue, key=0, style=bold];
m0_666 -> m0_667  [key=0, style=solid];
m0_667 -> m0_668  [key=0, style=solid];
m0_667 -> m0_669  [key=2, style=dotted];
m0_668 -> m0_666  [color=blue, key=0, style=bold];
m0_515 -> m0_516  [key=0, style=solid];
m0_516 -> m0_515  [color=blue, key=0, style=bold];
m0_489 -> m0_490  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_66  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_494  [key=0, style=solid];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_54  [key=2, style=dotted];
m0_494 -> m0_489  [color=blue, key=0, style=bold];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_303  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_300 -> m0_307  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_300 -> m0_58  [color=darkorchid, key=3, label="method methodReturn CommandLine.OptionMap CreateMap", style=bold];
m0_300 -> m0_564  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_75  [key=2, style=dotted];
m0_301 -> m0_303  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_301 -> m0_304  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_311  [key=2, style=dotted];
m0_303 -> m0_306  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_303 -> m0_307  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_303 -> m0_308  [color=darkseagreen4, key=1, label=map, style=dashed];
m0_307 -> m0_308  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_309  [key=0, style=solid];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_307  [key=0, style=solid];
m0_304 -> m0_306  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_309 -> m0_310  [key=0, style=solid];
m0_306 -> m0_304  [key=0, style=solid];
m0_306 -> m0_286  [key=2, style=dotted];
m0_308 -> m0_310  [key=0, style=solid];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_304  [key=0, style=solid];
m0_310 -> m0_300  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_152  [color=blue, key=0, style=bold];
m0_376 -> m0_377  [key=0, style=solid];
m0_377 -> m0_378  [key=0, style=solid];
m0_378 -> m0_376  [color=blue, key=0, style=bold];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_613  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_614  [key=0, style=solid];
m0_613 -> m0_614  [key=0, style=solid];
m0_613 -> m0_615  [key=2, style=dotted];
m0_614 -> m0_611  [color=blue, key=0, style=bold];
m0_506 -> m0_507  [key=0, style=solid];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_457  [key=2, style=dotted];
m0_508 -> m0_506  [color=blue, key=0, style=bold];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_588  [color=darkorchid, key=3, label="Parameter variable bool caseSensitive", style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_130  [key=2, style=dotted];
m0_133 -> m0_131  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_123 -> m0_160  [key=0, style=solid];
m0_123 -> m0_220  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
m0_123 -> m0_470  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
m0_160 -> m0_123  [color=blue, key=0, style=bold];
m0_126 -> m0_509  [key=0, style=solid];
m0_509 -> m0_126  [color=blue, key=0, style=bold];
m0_650 -> m0_651  [key=0, style=solid];
m0_650 -> m0_652  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_89  [key=2, style=dotted];
m0_651 -> m0_659  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_651 -> m0_660  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_628  [key=2, style=dotted];
m0_652 -> m0_629  [key=2, style=dotted];
m0_659 -> m0_653  [key=0, style=solid];
m0_659 -> m0_124  [key=2, style=dotted];
m0_660 -> m0_661  [key=0, style=solid];
m0_653 -> m0_654  [key=0, style=solid];
m0_653 -> m0_660  [key=0, style=solid];
m0_653 -> m0_655  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_653 -> m0_657  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_654 -> m0_655  [key=0, style=solid];
m0_654 -> m0_653  [key=0, style=solid];
m0_655 -> m0_656  [key=0, style=solid];
m0_655 -> m0_630  [key=2, style=dotted];
m0_657 -> m0_658  [key=0, style=solid];
m0_657 -> m0_631  [key=2, style=dotted];
m0_657 -> m0_659  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_653  [key=0, style=solid];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_653  [key=0, style=solid];
m0_661 -> m0_650  [color=blue, key=0, style=bold];
m0_236 -> m0_237  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [key=2, style=dotted];
m0_238 -> m0_236  [color=blue, key=0, style=bold];
m0_62 -> m0_76  [key=0, style=solid];
m0_62 -> m0_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_62 -> m0_54  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_62 -> m0_55  [color=darkorchid, key=3, label="Parameter variable System.Type concreteType", style=bold];
m0_62 -> m0_58  [color=darkorchid, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_75  [key=2, style=dotted];
m0_77 -> m0_80  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_77 -> m0_82  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
m0_79 -> m0_85  [key=0, style=solid];
m0_81 -> m0_85  [key=0, style=solid];
m0_81 -> m0_34  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_62  [color=blue, key=0, style=bold];
m0_216 -> m0_607  [key=0, style=solid];
m0_216 -> m0_608  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_216 -> m0_211  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m0_216 -> m0_212  [color=darkorchid, key=3, label="Parameter variable string paramName", style=bold];
m0_607 -> m0_608  [key=0, style=solid];
m0_607 -> m0_609  [key=0, style=solid];
m0_607 -> m0_33  [key=2, style=dotted];
m0_608 -> m0_609  [key=0, style=solid];
m0_608 -> m0_610  [key=2, style=dotted];
m0_609 -> m0_216  [color=blue, key=0, style=bold];
m0_513 -> m0_514  [key=0, style=solid];
m0_514 -> m0_513  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_3  [color=blue, key=0, style=bold];
m0_393 -> m0_394  [key=0, style=solid];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_396  [key=2, style=dotted];
m0_394 -> m0_397  [key=2, style=dotted];
m0_395 -> m0_393  [color=blue, key=0, style=bold];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [key=0, style=solid];
m0_231 -> m0_235  [key=0, style=solid];
m0_231 -> m0_34  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_234  [key=0, style=solid];
m0_233 -> m0_235  [key=0, style=solid];
m0_233 -> m0_34  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_205  [key=2, style=dotted];
m0_235 -> m0_229  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_109 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool IsInputValue", style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=0, style=solid];
m0_111 -> m0_113  [key=0, style=solid];
m0_111 -> m0_106  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_109  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_54 -> m0_59  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_54 -> m0_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_54 -> m0_58  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_62  [key=2, style=dotted];
m0_56 -> m0_59  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
m0_56 -> m0_60  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_64  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_65  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=0, style=solid];
m0_58 -> m0_61  [key=0, style=solid];
m0_61 -> m0_54  [color=blue, key=0, style=bold];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool EnforceRequiredRule", style=bold];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_402  [key=0, style=solid];
m0_398 -> m0_400  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_398  [key=0, style=solid];
m0_402 -> m0_403  [key=0, style=solid];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_404  [key=2, style=dotted];
m0_401 -> m0_403  [key=0, style=solid];
m0_403 -> m0_397  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_564 -> m0_566  [key=0, style=solid];
m0_564 -> m0_567  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_564 -> m0_568  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_564 -> m0_569  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_564 -> m0_575  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_564 -> m0_577  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_564 -> m0_549  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_584  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m0_567 -> m0_568  [key=0, style=solid];
m0_567 -> m0_300  [key=2, style=dotted];
m0_567 -> m0_575  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m0_567 -> m0_584  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_489  [key=2, style=dotted];
m0_568 -> m0_581  [color=darkseagreen4, key=1, label=target, style=dashed];
m0_568 -> m0_582  [color=darkseagreen4, key=1, label=target, style=dashed];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_460  [key=2, style=dotted];
m0_569 -> m0_571  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_569 -> m0_575  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_569 -> m0_580  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_90  [key=2, style=dotted];
m0_575 -> m0_579  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_587  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_393  [key=2, style=dotted];
m0_584 -> m0_584  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_570  [key=0, style=solid];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_570  [key=0, style=solid];
m0_582 -> m0_495  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_584  [key=0, style=solid];
m0_570 -> m0_123  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_573  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_571 -> m0_582  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_580 -> m0_570  [key=0, style=solid];
m0_580 -> m0_123  [key=2, style=dotted];
m0_572 -> m0_573  [key=0, style=solid];
m0_572 -> m0_570  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_573 -> m0_97  [key=2, style=dotted];
m0_573 -> m0_575  [color=darkseagreen4, key=1, label=parser, style=dashed];
m0_573 -> m0_577  [color=darkseagreen4, key=1, label=parser, style=dashed];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_581  [key=0, style=solid];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_579  [key=0, style=solid];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_570  [key=0, style=solid];
m0_578 -> m0_570  [key=0, style=solid];
m0_578 -> m0_584  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m0_583 -> m0_570  [key=0, style=solid];
m0_583 -> m0_584  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m0_585 -> m0_586  [key=0, style=solid];
m0_586 -> m0_564  [color=blue, key=0, style=bold];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_229  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
m0_158 -> m0_476  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
m0_159 -> m0_158  [color=blue, key=0, style=bold];
m0_511 -> m0_512  [key=0, style=solid];
m0_512 -> m0_511  [color=blue, key=0, style=bold];
m0_396 -> m0_405  [key=0, style=solid];
m0_396 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_407  [key=0, style=solid];
m0_406 -> m0_415  [key=0, style=solid];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_410  [key=0, style=solid];
m0_407 -> m0_409  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_407  [key=0, style=solid];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_414  [key=0, style=solid];
m0_410 -> m0_412  [color=darkseagreen4, key=1, label=info, style=dashed];
m0_409 -> m0_407  [key=0, style=solid];
m0_409 -> m0_416  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_410  [key=0, style=solid];
m0_414 -> m0_415  [key=0, style=solid];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_404  [key=2, style=dotted];
m0_413 -> m0_415  [key=0, style=solid];
m0_415 -> m0_396  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_21  [color=blue, key=0, style=bold];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_163  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_90 -> m0_242  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_90 -> m0_569  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator", style=bold];
m0_90 -> m0_567  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionMap map", style=bold];
m0_90 -> m0_564  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_91 -> m0_90  [color=blue, key=0, style=bold];
m0_320 -> m0_352  [key=0, style=solid];
m0_320 -> m0_354  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_320 -> m0_207  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_320 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool SetNullableValue", style=bold];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_359  [key=2, style=dotted];
m0_352 -> m0_354  [color=darkseagreen4, key=1, label=nc, style=dashed];
m0_354 -> m0_355  [color=red, key=0, style=solid];
m0_354 -> m0_357  [color=red, key=0, style=solid];
m0_354 -> m0_360  [color=red, key=2, style=dotted];
m0_354 -> m0_64  [color=red, key=2, style=dotted];
m0_353 -> m0_354  [color=red, key=0, style=solid];
m0_355 -> m0_356  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_356 -> m0_358  [key=0, style=solid];
m0_358 -> m0_320  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_44 -> m0_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=0, style=solid];
m0_47 -> m0_52  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_46 -> m0_50  [key=0, style=solid];
m0_46 -> m0_51  [key=2, style=dotted];
m0_48 -> m0_50  [key=0, style=solid];
m0_48 -> m0_53  [key=2, style=dotted];
m0_50 -> m0_44  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_165  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_92 -> m0_246  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_96  [key=2, style=dotted];
m0_94 -> m0_92  [color=blue, key=0, style=bold];
m0_125 -> m0_161  [key=0, style=solid];
m0_125 -> m0_236  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
m0_125 -> m0_479  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
m0_161 -> m0_125  [color=blue, key=0, style=bold];
m0_476 -> m0_477  [key=0, style=solid];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_239  [key=2, style=dotted];
m0_478 -> m0_476  [color=blue, key=0, style=bold];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_225  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_225 -> m0_226  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_228  [key=2, style=dotted];
m0_224 -> m0_227  [key=0, style=solid];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_220  [color=blue, key=0, style=bold];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_163 -> m0_172  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_163 -> m0_176  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_163 -> m0_181  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_163 -> m0_183  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_163 -> m0_188  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_163 -> m0_193  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_163 -> m0_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_163 -> m0_200  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_163 -> m0_90  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_163 -> m0_142  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_163 -> m0_134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_163 -> m0_137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_205  [key=2, style=dotted];
m0_164 -> m0_206  [key=2, style=dotted];
m0_164 -> m0_172  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_164 -> m0_174  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_164 -> m0_176  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_164 -> m0_182  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_164 -> m0_198  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_170  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_171  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_175  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_176  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_178  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_180  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_183  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_185  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_187  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_188  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_190  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_192  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_194  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_196  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_200  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_165 -> m0_202  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=0, style=solid];
m0_172 -> m0_109  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_207  [key=2, style=dotted];
m0_176 -> m0_179  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_114  [key=2, style=dotted];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label=items, style=dashed];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_209  [key=2, style=dotted];
m0_183 -> m0_186  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_207  [key=2, style=dotted];
m0_188 -> m0_191  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_114  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_209  [key=2, style=dotted];
m0_194 -> m0_197  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_210  [key=2, style=dotted];
m0_200 -> m0_203  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_187  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_208  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_207  [color=darkorchid, key=3, label="Local variable bool valueSetting", style=bold];
m0_166 -> m0_209  [color=darkorchid, key=3, label="Local variable bool valueSetting", style=bold];
m0_166 -> m0_210  [color=darkorchid, key=3, label="Local variable bool valueSetting", style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_169  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_148  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_198  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_180  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_92  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_144  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_92  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_192  [key=0, style=solid];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_92  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_144  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_92  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_92  [key=2, style=dotted];
m0_168 -> m0_204  [key=0, style=solid];
m0_173 -> m0_204  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_179  [key=0, style=solid];
m0_179 -> m0_204  [key=0, style=solid];
m0_179 -> m0_134  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_186  [key=0, style=solid];
m0_186 -> m0_204  [key=0, style=solid];
m0_186 -> m0_134  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_191  [key=0, style=solid];
m0_191 -> m0_204  [key=0, style=solid];
m0_191 -> m0_137  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [key=0, style=solid];
m0_197 -> m0_204  [key=0, style=solid];
m0_197 -> m0_137  [key=2, style=dotted];
m0_199 -> m0_204  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_134  [key=2, style=dotted];
m0_204 -> m0_163  [color=blue, key=0, style=bold];
m0_587 -> m0_600  [key=0, style=solid];
m0_587 -> m0_601  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_587 -> m0_564  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_600 -> m0_601  [key=0, style=solid];
m0_600 -> m0_602  [key=0, style=solid];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_603  [key=2, style=dotted];
m0_602 -> m0_587  [color=blue, key=0, style=bold];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_525  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m0_524 -> m0_525  [key=0, style=solid];
m0_525 -> m0_526  [key=0, style=solid];
m0_526 -> m0_523  [color=blue, key=0, style=bold];
m0_311 -> m0_382  [key=0, style=solid];
m0_311 -> m0_387  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_311 -> m0_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_311 -> m0_390  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_382 -> m0_383  [key=0, style=solid];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_392  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_392  [key=2, style=dotted];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_392  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_386  [key=0, style=solid];
m0_385 -> m0_387  [key=0, style=solid];
m0_385 -> m0_388  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_388  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_391  [key=0, style=solid];
m0_391 -> m0_311  [color=blue, key=0, style=bold];
m0_539 -> m0_540  [key=0, style=solid];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_515  [key=2, style=dotted];
m0_541 -> m0_539  [color=blue, key=0, style=bold];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_165  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_144 -> m0_246  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_126  [key=2, style=dotted];
m0_147 -> m0_144  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_318 -> m0_365  [key=0, style=solid];
m0_318 -> m0_366  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_318 -> m0_367  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_318 -> m0_368  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_318 -> m0_207  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_318 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool SetValueList", style=bold];
m0_365 -> m0_366  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_89  [key=2, style=dotted];
m0_366 -> m0_64  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_65  [key=2, style=dotted];
m0_367 -> m0_371  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_375  [key=2, style=dotted];
m0_368 -> m0_370  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_368 -> m0_371  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_124  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_369 -> m0_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_369 -> m0_324  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_373  [key=0, style=solid];
m0_372 -> m0_370  [key=0, style=solid];
m0_372 -> m0_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_373 -> m0_374  [key=0, style=solid];
m0_374 -> m0_318  [color=blue, key=0, style=bold];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_462  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_460 -> m0_464  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_466  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_464 -> m0_465  [key=0, style=solid];
m0_463 -> m0_464  [key=0, style=solid];
m0_465 -> m0_460  [color=blue, key=0, style=bold];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_165  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_148 -> m0_246  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_126  [key=2, style=dotted];
m0_151 -> m0_148  [color=blue, key=0, style=bold];
m0_562 -> m0_632  [key=0, style=solid];
m0_562 -> m0_549  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_562 -> m0_58  [color=darkorchid, key=3, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m0_632 -> m0_633  [key=0, style=solid];
m0_632 -> m0_628  [key=2, style=dotted];
m0_632 -> m0_640  [key=2, style=dotted];
m0_633 -> m0_634  [key=0, style=solid];
m0_633 -> m0_638  [key=0, style=solid];
m0_633 -> m0_635  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_633 -> m0_637  [color=darkseagreen4, key=1, label=method, style=dashed];
m0_634 -> m0_635  [key=0, style=solid];
m0_634 -> m0_633  [key=0, style=solid];
m0_638 -> m0_639  [key=0, style=solid];
m0_635 -> m0_636  [key=0, style=solid];
m0_635 -> m0_631  [key=2, style=dotted];
m0_635 -> m0_637  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_637 -> m0_639  [key=0, style=solid];
m0_637 -> m0_435  [key=2, style=dotted];
m0_636 -> m0_637  [key=0, style=solid];
m0_636 -> m0_633  [key=0, style=solid];
m0_639 -> m0_562  [color=blue, key=0, style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
m0_134 -> m0_166  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m0_134 -> m0_243  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=2, style=dotted];
m0_136 -> m0_134  [color=blue, key=0, style=bold];
m0_434 -> m0_452  [key=0, style=solid];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_152  [key=2, style=dotted];
m0_453 -> m0_434  [color=blue, key=0, style=bold];
m0_75 -> m0_616  [key=0, style=solid];
m0_75 -> m0_617  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_75 -> m0_618  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_75 -> m0_66  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_75 -> m0_62  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_75 -> m0_300  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m0_616 -> m0_617  [key=0, style=solid];
m0_616 -> m0_89  [key=2, style=dotted];
m0_616 -> m0_625  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_616 -> m0_626  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_617 -> m0_618  [key=0, style=solid];
m0_617 -> m0_626  [key=0, style=solid];
m0_618 -> m0_619  [key=0, style=solid];
m0_618 -> m0_628  [key=2, style=dotted];
m0_618 -> m0_629  [key=2, style=dotted];
m0_625 -> m0_619  [key=0, style=solid];
m0_625 -> m0_435  [key=2, style=dotted];
m0_625 -> m0_124  [key=2, style=dotted];
m0_626 -> m0_627  [key=0, style=solid];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_626  [key=0, style=solid];
m0_619 -> m0_621  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_619 -> m0_623  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_619 -> m0_625  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_619  [key=0, style=solid];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_630  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_623 -> m0_631  [key=2, style=dotted];
m0_623 -> m0_625  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_622 -> m0_623  [key=0, style=solid];
m0_622 -> m0_619  [key=0, style=solid];
m0_624 -> m0_625  [key=0, style=solid];
m0_624 -> m0_619  [key=0, style=solid];
m0_627 -> m0_75  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_97 -> m0_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_97 -> m0_58  [color=darkorchid, key=3, label="method methodReturn CommandLine.ArgumentParser Create", style=bold];
m0_97 -> m0_571  [color=darkorchid, key=3, label="Parameter variable string argument", style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=0, style=solid];
m0_98 -> m0_106  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=0, style=solid];
m0_99 -> m0_105  [key=0, style=solid];
m0_101 -> m0_105  [key=0, style=solid];
m0_101 -> m0_107  [key=2, style=dotted];
m0_103 -> m0_105  [key=0, style=solid];
m0_103 -> m0_108  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_97  [color=blue, key=0, style=bold];
m0_209 -> m0_328  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_209 -> m0_322  [key=0, style=solid];
m0_209 -> m0_323  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_209 -> m0_327  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m0_209 -> m0_181  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
m0_209 -> m0_193  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
m0_209 -> m0_261  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
m0_209 -> m0_275  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
m0_209 -> m0_163  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_209 -> m0_242  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_209 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_334  [key=2, style=dotted];
m0_322 -> m0_327  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_335  [key=2, style=dotted];
m0_323 -> m0_325  [color=darkseagreen4, key=1, label=array, style=dashed];
m0_323 -> m0_327  [color=darkseagreen4, key=1, label=array, style=dashed];
m0_323 -> m0_328  [color=green, key=1, label=array, style=dashed];
m0_327 -> m0_328  [color=green, key=0, style=solid];
m0_327 -> m0_336  [color=red, key=2, style=dotted];
m0_327 -> m0_337  [color=red, key=2, style=dotted];
m0_328 -> m0_329  [color=green, key=0, style=solid];
m0_328 -> m0_331  [color=green, key=0, style=solid];
m0_328 -> m0_64  [color=green, key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_324 -> m0_331  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_324 -> m0_324  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_332  [key=0, style=solid];
m0_331 -> m0_325  [key=0, style=solid];
m0_331 -> m0_331  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_326 -> m0_327  [color=red, key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_329 -> m0_330  [key=0, style=solid];
m0_330 -> m0_333  [key=0, style=solid];
m0_333 -> m0_209  [color=blue, key=0, style=bold];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_499  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_495 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m0_495 -> m0_571  [color=darkorchid, key=3, label="Parameter variable string item", style=bold];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_498  [key=0, style=solid];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_124  [key=2, style=dotted];
m0_497 -> m0_501  [key=0, style=solid];
m0_498 -> m0_499  [key=0, style=solid];
m0_500 -> m0_501  [key=0, style=solid];
m0_501 -> m0_495  [color=blue, key=0, style=bold];
m0_536 -> m0_537  [key=0, style=solid];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_531  [key=2, style=dotted];
m0_538 -> m0_536  [color=blue, key=0, style=bold];
m0_467 -> m0_468  [key=0, style=solid];
m0_468 -> m0_469  [key=0, style=solid];
m0_469 -> m0_467  [color=blue, key=0, style=bold];
m0_240 -> m0_241  [key=0, style=solid];
m0_241 -> m0_240  [color=blue, key=0, style=bold];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_588  [color=darkorchid, key=3, label="Parameter variable bool caseSensitive", style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=2, style=dotted];
m0_129 -> m0_127  [color=blue, key=0, style=bold];
m0_517 -> m0_518  [key=0, style=solid];
m0_518 -> m0_519  [key=0, style=solid];
m0_519 -> m0_517  [color=blue, key=0, style=bold];
m0_563 -> m0_588  [key=0, style=solid];
m0_563 -> m0_590  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_563 -> m0_591  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_563 -> m0_592  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_563 -> m0_594  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_563 -> m0_595  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_563 -> m0_549  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
m0_563 -> m0_112  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_592  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m0_588 -> m0_595  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_598  [key=0, style=solid];
m0_590 -> m0_324  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_591 -> m0_592  [key=0, style=solid];
m0_591 -> m0_594  [key=0, style=solid];
m0_591 -> m0_33  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_594  [key=0, style=solid];
m0_592 -> m0_127  [key=2, style=dotted];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_597  [key=0, style=solid];
m0_594 -> m0_33  [key=2, style=dotted];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_597  [key=0, style=solid];
m0_595 -> m0_131  [key=2, style=dotted];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_592  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_589 -> m0_595  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_589 -> m0_597  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_597 -> m0_590  [key=0, style=solid];
m0_597 -> m0_597  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_598 -> m0_599  [key=0, style=solid];
m0_593 -> m0_599  [key=0, style=solid];
m0_596 -> m0_599  [key=0, style=solid];
m0_599 -> m0_563  [color=blue, key=0, style=bold];
m0_470 -> m0_471  [key=0, style=solid];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_474  [key=0, style=solid];
m0_472 -> m0_473  [key=0, style=solid];
m0_474 -> m0_475  [key=0, style=solid];
m0_473 -> m0_475  [key=0, style=solid];
m0_475 -> m0_470  [color=blue, key=0, style=bold];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_546  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m0_503 -> m0_502  [color=blue, key=0, style=bold];
m0_107 -> m0_162  [key=0, style=solid];
m0_162 -> m0_107  [color=blue, key=0, style=bold];
m0_466 -> m0_604  [key=0, style=solid];
m0_466 -> m0_605  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_466 -> m0_460  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m0_466 -> m0_542  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m0_466 -> m0_549  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
m0_466 -> m0_212  [color=darkorchid, key=3, label="Parameter variable string paramName", style=bold];
m0_466 -> m0_543  [color=darkorchid, key=3, label="Parameter variable string paramName", style=bold];
m0_466 -> m0_550  [color=darkorchid, key=3, label="Parameter variable string paramName", style=bold];
m0_466 -> m0_551  [color=darkorchid, key=3, label="Parameter variable string paramName", style=bold];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_606  [key=0, style=solid];
m0_605 -> m0_606  [key=0, style=solid];
m0_605 -> m0_51  [key=2, style=dotted];
m0_606 -> m0_466  [color=blue, key=0, style=bold];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_544  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_466  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_545 -> m0_542  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_114 -> m0_117  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_114 -> m0_118  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_114 -> m0_119  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_114 -> m0_163  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
m0_114 -> m0_242  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_89  [key=2, style=dotted];
m0_115 -> m0_118  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_115 -> m0_121  [color=darkseagreen4, key=1, label=list, style=dashed];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_119  [key=0, style=solid];
m0_116 -> m0_123  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=0, style=solid];
m0_117 -> m0_109  [key=2, style=dotted];
m0_118 -> m0_116  [key=0, style=solid];
m0_118 -> m0_124  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_119 -> m0_125  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_120 -> m0_126  [key=2, style=dotted];
m0_122 -> m0_114  [color=blue, key=0, style=bold];
m0_520 -> m0_521  [key=0, style=solid];
m0_521 -> m0_522  [key=0, style=solid];
m0_522 -> m0_520  [color=blue, key=0, style=bold];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_246  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_242 -> m0_252  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_256  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_242 -> m0_261  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_263  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_242 -> m0_267  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_270  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_275  [color=darkseagreen4, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
m0_242 -> m0_276  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_242 -> m0_280  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_242 -> m0_282  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_242 -> m0_90  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_242 -> m0_142  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_242 -> m0_134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_242 -> m0_137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_242 -> m0_139  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_207  [color=darkorchid, key=3, label="Local variable bool valueSetting", style=bold];
m0_243 -> m0_209  [color=darkorchid, key=3, label="Local variable bool valueSetting", style=bold];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_211  [key=2, style=dotted];
m0_244 -> m0_205  [key=2, style=dotted];
m0_244 -> m0_246  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_244 -> m0_252  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_244 -> m0_254  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_244 -> m0_256  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_244 -> m0_262  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_244 -> m0_280  [color=darkseagreen4, key=1, label=group, style=dashed];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_249  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_250  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_251  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_255  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_256  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_258  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_260  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_263  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_265  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_269  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_270  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_272  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_274  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_276  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_278  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_246 -> m0_282  [color=darkseagreen4, key=1, label=option, style=dashed];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_254  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_158  [key=2, style=dotted];
m0_256 -> m0_207  [key=2, style=dotted];
m0_256 -> m0_259  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_114  [key=2, style=dotted];
m0_261 -> m0_263  [color=darkseagreen4, key=1, label=items, style=dashed];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_209  [key=2, style=dotted];
m0_263 -> m0_266  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_269  [key=0, style=solid];
m0_267 -> m0_109  [key=2, style=dotted];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_207  [key=2, style=dotted];
m0_270 -> m0_273  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_114  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_209  [key=2, style=dotted];
m0_276 -> m0_279  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_282  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_245  [key=0, style=solid];
m0_282 -> m0_210  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_284  [key=0, style=solid];
m0_245 -> m0_123  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_267  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_158  [key=2, style=dotted];
m0_262 -> m0_208  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=0, style=solid];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_148  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_280  [key=0, style=solid];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_260  [key=0, style=solid];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_92  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_144  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_92  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_274  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_92  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_144  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_92  [key=2, style=dotted];
m0_248 -> m0_285  [key=0, style=solid];
m0_253 -> m0_285  [key=0, style=solid];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_259  [key=0, style=solid];
m0_259 -> m0_285  [key=0, style=solid];
m0_259 -> m0_134  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_266  [key=0, style=solid];
m0_266 -> m0_285  [key=0, style=solid];
m0_266 -> m0_137  [key=2, style=dotted];
m0_268 -> m0_285  [key=0, style=solid];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_273  [key=0, style=solid];
m0_273 -> m0_285  [key=0, style=solid];
m0_273 -> m0_137  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_279  [key=0, style=solid];
m0_279 -> m0_285  [key=0, style=solid];
m0_279 -> m0_134  [key=2, style=dotted];
m0_281 -> m0_285  [key=0, style=solid];
m0_283 -> m0_285  [key=0, style=solid];
m0_285 -> m0_242  [color=blue, key=0, style=bold];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_437  [color=darkseagreen4, key=1, label=TRight, style=dashed];
m0_436 -> m0_437  [key=0, style=solid];
m0_437 -> m0_438  [key=0, style=solid];
m0_438 -> m0_435  [color=blue, key=0, style=bold];
m0_404 -> m0_424  [key=0, style=solid];
m0_404 -> m0_426  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_404 -> m0_427  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_404 -> m0_428  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_404 -> m0_429  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_404 -> m0_430  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_404 -> m0_431  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m0_404 -> m0_432  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_404 -> m0_398  [color=darkorchid, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
m0_404 -> m0_112  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m0_404 -> m0_58  [color=darkorchid, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_433  [key=0, style=solid];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_428  [key=0, style=solid];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_430  [key=0, style=solid];
m0_429 -> m0_430  [key=0, style=solid];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_432  [key=0, style=solid];
m0_431 -> m0_432  [key=0, style=solid];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_96  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_434  [key=2, style=dotted];
m0_425 -> m0_427  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_425 -> m0_429  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_425 -> m0_431  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_425 -> m0_432  [color=darkseagreen4, key=1, label=error, style=dashed];
m0_433 -> m0_404  [color=blue, key=0, style=bold];
m0_207 -> m0_312  [key=0, style=solid];
m0_207 -> m0_313  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_207 -> m0_315  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_207 -> m0_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_207 -> m0_163  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_207 -> m0_242  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m0_207 -> m0_158  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m0_207 -> m0_318  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m0_207 -> m0_320  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m0_207 -> m0_321  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_314  [key=0, style=solid];
m0_313 -> m0_317  [key=0, style=solid];
m0_313 -> m0_318  [key=2, style=dotted];
m0_315 -> m0_317  [key=0, style=solid];
m0_315 -> m0_320  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_321  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_316  [key=0, style=solid];
m0_314 -> m0_319  [key=2, style=dotted];
m0_317 -> m0_207  [color=blue, key=0, style=bold];
m0_457 -> m0_458  [key=0, style=solid];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_89  [key=2, style=dotted];
m0_459 -> m0_457  [color=blue, key=0, style=bold];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_288  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_289  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_290  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_291  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_292  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_293  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_286 -> m0_295  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m0_286 -> m0_296  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_294  [key=0, style=solid];
m0_288 -> m0_289  [key=0, style=solid];
m0_289 -> m0_290  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_292 -> m0_293  [key=0, style=solid];
m0_293 -> m0_295  [key=0, style=solid];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_297  [key=0, style=solid];
m0_296 -> m0_298  [key=0, style=solid];
m0_294 -> m0_298  [key=0, style=solid];
m0_294 -> m0_299  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_299  [key=2, style=dotted];
m0_298 -> m0_286  [color=blue, key=0, style=bold];
m0_670 -> m0_1  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_670 -> m0_4  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_670 -> m0_5  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_670 -> m0_6  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_671 -> m0_25  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_671 -> m0_27  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_671 -> m0_28  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_671 -> m0_30  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_671 -> m0_31  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m0_672 -> m0_36  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m0_672 -> m0_39  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m0_673 -> m0_42  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m0_673 -> m0_49  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m0_674 -> m0_87  [color=darkseagreen4, key=1, label="CommandLine.ArgumentParser", style=dashed];
m0_674 -> m0_93  [color=darkseagreen4, key=1, label="CommandLine.ArgumentParser", style=dashed];
m0_675 -> m0_155  [color=darkseagreen4, key=1, label="CommandLine.BadOptionInfo", style=dashed];
m0_675 -> m0_156  [color=darkseagreen4, key=1, label="CommandLine.BadOptionInfo", style=dashed];
m0_676 -> m0_178  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
m0_676 -> m0_185  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
m0_676 -> m0_190  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
m0_676 -> m0_196  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
m0_676 -> m0_202  [color=darkseagreen4, key=1, label="CommandLine.LongOptionParser", style=dashed];
m0_677 -> m0_213  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_214  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_218  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_221  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_222  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_223  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_225  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_230  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_232  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_677 -> m0_234  [color=darkseagreen4, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
m0_678 -> m0_258  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m0_678 -> m0_265  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m0_678 -> m0_272  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m0_678 -> m0_278  [color=darkseagreen4, key=1, label="CommandLine.OptionGroupParser", style=dashed];
m0_679 -> m0_288  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_289  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_290  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_291  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_292  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_293  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_296  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_312  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_313  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_314  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_315  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_316  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_322  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_326  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_328  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_338  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_339  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_340  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_341  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_342  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_352  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_353  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_354  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_361  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_362  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_365  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_366  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_367  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_679 -> m0_368  [color=darkseagreen4, key=1, label="CommandLine.OptionInfo", style=dashed];
m0_680 -> m0_377  [color=darkseagreen4, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
m0_680 -> m0_380  [color=darkseagreen4, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
m0_681 -> m0_382  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_384  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_387  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_388  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_389  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_390  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_394  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_398  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_400  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_405  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_407  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_409  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_410  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_412  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_418  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_419  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_681 -> m0_420  [color=darkseagreen4, key=1, label="CommandLine.OptionMap", style=dashed];
m0_682 -> m0_436  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m0_682 -> m0_437  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m0_682 -> m0_440  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m0_682 -> m0_441  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m0_682 -> m0_449  [color=darkseagreen4, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
m0_683 -> m0_452  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m0_683 -> m0_454  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m0_683 -> m0_455  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m0_684 -> m0_458  [color=darkseagreen4, key=1, label="CommandLine.PostParsingState", style=dashed];
m0_685 -> m0_462  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_463  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_464  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_468  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_471  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_472  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_473  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_480  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_482  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_483  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_685 -> m0_484  [color=darkseagreen4, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
m0_686 -> m0_490  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_491  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_492  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_493  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_496  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_498  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_686 -> m0_499  [color=darkseagreen4, key=1, label="CommandLine.TargetWrapper", style=dashed];
m0_687 -> m0_507  [color=darkseagreen4, key=1, label="CommandLine.CommandLineOptionsBase", style=dashed];
m0_688 -> m0_518  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_521  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_524  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_525  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_528  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_529  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_532  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_533  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_688 -> m0_534  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m0_689 -> m0_537  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_540  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_544  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_547  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_554  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_560  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_567  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m0_689 -> m0_588  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_11  [color=green, key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_7  [color=green, key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_9 -> m2_10  [color=green, key=0, style=solid];
m2_9 -> m2_3  [color=green, key=2, style=dotted];
m2_9 -> m2_12  [color=green, key=1, label=options, style=dashed];
m2_9 -> m2_13  [color=green, key=1, label=options, style=dashed];
m2_10 -> m2_11  [color=green, key=0, style=solid];
m2_10 -> m2_4  [color=green, key=2, style=dotted];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_16  [color=green, key=2, style=dotted];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_17  [color=green, key=2, style=dotted];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_15  [color=green, key=2, style=dotted];
m2_14 -> m2_8  [color=blue, key=0, style=bold];
m2_132 -> m2_133  [color=green, key=0, style=solid];
m2_133 -> m2_134  [color=green, key=0, style=solid];
m2_133 -> m2_126  [color=green, key=2, style=dotted];
m2_134 -> m2_135  [color=green, key=0, style=solid];
m2_134 -> m2_4  [color=green, key=2, style=dotted];
m2_135 -> m2_136  [color=green, key=0, style=solid];
m2_135 -> m2_84  [color=green, key=2, style=dotted];
m2_136 -> m2_132  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_4  [color=green, key=2, style=dotted];
m2_7 -> m2_5  [color=blue, key=0, style=bold];
m2_70 -> m2_71  [color=green, key=0, style=solid];
m2_71 -> m2_72  [color=green, key=0, style=solid];
m2_71 -> m2_78  [color=green, key=2, style=dotted];
m2_71 -> m2_74  [color=green, key=1, label=options, style=dashed];
m2_71 -> m2_75  [color=green, key=1, label=options, style=dashed];
m2_71 -> m2_76  [color=green, key=1, label=options, style=dashed];
m2_72 -> m2_73  [color=green, key=0, style=solid];
m2_72 -> m2_4  [color=green, key=2, style=dotted];
m2_74 -> m2_75  [color=green, key=0, style=solid];
m2_74 -> m2_16  [color=green, key=2, style=dotted];
m2_75 -> m2_76  [color=green, key=0, style=solid];
m2_75 -> m2_16  [color=green, key=2, style=dotted];
m2_76 -> m2_77  [color=green, key=0, style=solid];
m2_76 -> m2_17  [color=green, key=2, style=dotted];
m2_73 -> m2_74  [color=green, key=0, style=solid];
m2_73 -> m2_15  [color=green, key=2, style=dotted];
m2_77 -> m2_70  [color=blue, key=0, style=bold];
m2_116 -> m2_117  [color=green, key=0, style=solid];
m2_117 -> m2_118  [color=green, key=0, style=solid];
m2_117 -> m2_3  [color=green, key=2, style=dotted];
m2_118 -> m2_119  [color=green, key=0, style=solid];
m2_118 -> m2_4  [color=green, key=2, style=dotted];
m2_119 -> m2_120  [color=green, key=0, style=solid];
m2_119 -> m2_84  [color=green, key=2, style=dotted];
m2_120 -> m2_116  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [color=green, key=0, style=solid];
m2_28 -> m2_29  [color=green, key=0, style=solid];
m2_28 -> m2_37  [color=green, key=2, style=dotted];
m2_28 -> m2_31  [color=green, key=1, label=options, style=dashed];
m2_28 -> m2_32  [color=green, key=1, label=options, style=dashed];
m2_28 -> m2_33  [color=green, key=1, label=options, style=dashed];
m2_28 -> m2_34  [color=green, key=1, label=options, style=dashed];
m2_28 -> m2_35  [color=green, key=1, label=options, style=dashed];
m2_29 -> m2_30  [color=green, key=0, style=solid];
m2_29 -> m2_4  [color=green, key=2, style=dotted];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_38  [color=green, key=2, style=dotted];
m2_32 -> m2_33  [color=green, key=0, style=solid];
m2_32 -> m2_38  [color=green, key=2, style=dotted];
m2_33 -> m2_34  [color=green, key=0, style=solid];
m2_33 -> m2_39  [color=green, key=2, style=dotted];
m2_34 -> m2_35  [color=green, key=0, style=solid];
m2_34 -> m2_16  [color=green, key=2, style=dotted];
m2_35 -> m2_36  [color=green, key=0, style=solid];
m2_35 -> m2_17  [color=green, key=2, style=dotted];
m2_30 -> m2_31  [color=green, key=0, style=solid];
m2_30 -> m2_15  [color=green, key=2, style=dotted];
m2_36 -> m2_27  [color=blue, key=0, style=bold];
m2_65 -> m2_66  [color=green, key=0, style=solid];
m2_66 -> m2_67  [color=green, key=0, style=solid];
m2_66 -> m2_3  [color=green, key=2, style=dotted];
m2_66 -> m2_68  [color=green, key=1, label=options, style=dashed];
m2_67 -> m2_68  [color=green, key=0, style=solid];
m2_67 -> m2_4  [color=green, key=2, style=dotted];
m2_67 -> m2_39  [color=green, key=2, style=dotted];
m2_68 -> m2_69  [color=green, key=0, style=solid];
m2_68 -> m2_17  [color=green, key=2, style=dotted];
m2_69 -> m2_65  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [color=green, key=0, style=solid];
m2_51 -> m2_52  [color=green, key=0, style=solid];
m2_51 -> m2_63  [color=green, key=2, style=dotted];
m2_51 -> m2_54  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_55  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_56  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_57  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_58  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_59  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_60  [color=green, key=1, label=options, style=dashed];
m2_51 -> m2_61  [color=green, key=1, label=options, style=dashed];
m2_52 -> m2_53  [color=green, key=0, style=solid];
m2_52 -> m2_4  [color=green, key=2, style=dotted];
m2_54 -> m2_55  [color=green, key=0, style=solid];
m2_54 -> m2_16  [color=green, key=2, style=dotted];
m2_55 -> m2_56  [color=green, key=0, style=solid];
m2_55 -> m2_64  [color=green, key=2, style=dotted];
m2_56 -> m2_57  [color=green, key=0, style=solid];
m2_56 -> m2_16  [color=green, key=2, style=dotted];
m2_57 -> m2_58  [color=green, key=0, style=solid];
m2_57 -> m2_64  [color=green, key=2, style=dotted];
m2_58 -> m2_59  [color=green, key=0, style=solid];
m2_58 -> m2_16  [color=green, key=2, style=dotted];
m2_59 -> m2_60  [color=green, key=0, style=solid];
m2_59 -> m2_64  [color=green, key=2, style=dotted];
m2_60 -> m2_61  [color=green, key=0, style=solid];
m2_60 -> m2_16  [color=green, key=2, style=dotted];
m2_61 -> m2_62  [color=green, key=0, style=solid];
m2_61 -> m2_64  [color=green, key=2, style=dotted];
m2_53 -> m2_54  [color=green, key=0, style=solid];
m2_53 -> m2_15  [color=green, key=2, style=dotted];
m2_62 -> m2_50  [color=blue, key=0, style=bold];
m2_147 -> m2_148  [color=green, key=0, style=solid];
m2_148 -> m2_149  [color=green, key=0, style=solid];
m2_148 -> m2_126  [color=green, key=2, style=dotted];
m2_149 -> m2_150  [color=green, key=0, style=solid];
m2_149 -> m2_4  [color=green, key=2, style=dotted];
m2_150 -> m2_151  [color=green, key=0, style=solid];
m2_150 -> m2_84  [color=green, key=2, style=dotted];
m2_151 -> m2_147  [color=blue, key=0, style=bold];
m2_106 -> m2_107  [color=green, key=0, style=solid];
m2_107 -> m2_108  [color=green, key=0, style=solid];
m2_107 -> m2_114  [color=green, key=2, style=dotted];
m2_107 -> m2_115  [color=green, key=2, style=dotted];
m2_107 -> m2_109  [color=green, key=1, label=local, style=dashed];
m2_108 -> m2_109  [color=green, key=0, style=solid];
m2_108 -> m2_99  [color=green, key=2, style=dotted];
m2_108 -> m2_111  [color=green, key=1, label=options, style=dashed];
m2_108 -> m2_112  [color=green, key=1, label=options, style=dashed];
m2_109 -> m2_110  [color=green, key=0, style=solid];
m2_109 -> m2_4  [color=green, key=2, style=dotted];
m2_111 -> m2_112  [color=green, key=0, style=solid];
m2_111 -> m2_16  [color=green, key=2, style=dotted];
m2_112 -> m2_113  [color=green, key=0, style=solid];
m2_112 -> m2_16  [color=green, key=2, style=dotted];
m2_110 -> m2_111  [color=green, key=0, style=solid];
m2_110 -> m2_15  [color=green, key=2, style=dotted];
m2_113 -> m2_106  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [color=green, key=0, style=solid];
m2_91 -> m2_92  [color=green, key=0, style=solid];
m2_91 -> m2_98  [color=green, key=2, style=dotted];
m2_91 -> m2_93  [color=green, key=1, label=local, style=dashed];
m2_92 -> m2_93  [color=green, key=0, style=solid];
m2_92 -> m2_99  [color=green, key=2, style=dotted];
m2_92 -> m2_95  [color=green, key=1, label=options, style=dashed];
m2_92 -> m2_96  [color=green, key=1, label=options, style=dashed];
m2_93 -> m2_94  [color=green, key=0, style=solid];
m2_93 -> m2_4  [color=green, key=2, style=dotted];
m2_95 -> m2_96  [color=green, key=0, style=solid];
m2_95 -> m2_16  [color=green, key=2, style=dotted];
m2_96 -> m2_97  [color=green, key=0, style=solid];
m2_96 -> m2_16  [color=green, key=2, style=dotted];
m2_94 -> m2_95  [color=green, key=0, style=solid];
m2_94 -> m2_15  [color=green, key=2, style=dotted];
m2_97 -> m2_90  [color=blue, key=0, style=bold];
m2_158 -> m2_159  [color=green, key=0, style=solid];
m2_159 -> m2_160  [color=green, key=0, style=solid];
m2_159 -> m2_167  [color=green, key=2, style=dotted];
m2_159 -> m2_162  [color=green, key=1, label=options, style=dashed];
m2_159 -> m2_163  [color=green, key=1, label=options, style=dashed];
m2_159 -> m2_164  [color=green, key=1, label=options, style=dashed];
m2_159 -> m2_165  [color=green, key=1, label=options, style=dashed];
m2_160 -> m2_161  [color=green, key=0, style=solid];
m2_160 -> m2_4  [color=green, key=2, style=dotted];
m2_162 -> m2_163  [color=green, key=0, style=solid];
m2_162 -> m2_16  [color=green, key=2, style=dotted];
m2_163 -> m2_164  [color=green, key=0, style=solid];
m2_163 -> m2_16  [color=green, key=2, style=dotted];
m2_164 -> m2_165  [color=green, key=0, style=solid];
m2_164 -> m2_16  [color=green, key=2, style=dotted];
m2_165 -> m2_166  [color=green, key=0, style=solid];
m2_165 -> m2_16  [color=green, key=2, style=dotted];
m2_161 -> m2_162  [color=green, key=0, style=solid];
m2_161 -> m2_15  [color=green, key=2, style=dotted];
m2_166 -> m2_158  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [color=green, key=0, style=solid];
m2_86 -> m2_87  [color=green, key=0, style=solid];
m2_86 -> m2_3  [color=green, key=2, style=dotted];
m2_87 -> m2_88  [color=green, key=0, style=solid];
m2_87 -> m2_4  [color=green, key=2, style=dotted];
m2_88 -> m2_89  [color=green, key=0, style=solid];
m2_88 -> m2_84  [color=green, key=2, style=dotted];
m2_89 -> m2_85  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [color=green, key=0, style=solid];
m2_19 -> m2_20  [color=green, key=0, style=solid];
m2_19 -> m2_3  [color=green, key=2, style=dotted];
m2_19 -> m2_22  [color=green, key=1, label=options, style=dashed];
m2_19 -> m2_23  [color=green, key=1, label=options, style=dashed];
m2_19 -> m2_24  [color=green, key=1, label=options, style=dashed];
m2_19 -> m2_25  [color=green, key=1, label=options, style=dashed];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_4  [color=green, key=2, style=dotted];
m2_22 -> m2_23  [color=green, key=0, style=solid];
m2_22 -> m2_16  [color=green, key=2, style=dotted];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_23 -> m2_16  [color=green, key=2, style=dotted];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_16  [color=green, key=2, style=dotted];
m2_25 -> m2_26  [color=green, key=0, style=solid];
m2_25 -> m2_17  [color=green, key=2, style=dotted];
m2_21 -> m2_22  [color=green, key=0, style=solid];
m2_21 -> m2_15  [color=green, key=2, style=dotted];
m2_26 -> m2_18  [color=blue, key=0, style=bold];
m2_100 -> m2_101  [color=green, key=0, style=solid];
m2_101 -> m2_102  [color=green, key=0, style=solid];
m2_101 -> m2_98  [color=green, key=2, style=dotted];
m2_101 -> m2_103  [color=green, key=1, label=local, style=dashed];
m2_102 -> m2_103  [color=green, key=0, style=solid];
m2_102 -> m2_99  [color=green, key=2, style=dotted];
m2_103 -> m2_104  [color=green, key=0, style=solid];
m2_103 -> m2_4  [color=green, key=2, style=dotted];
m2_104 -> m2_105  [color=green, key=0, style=solid];
m2_104 -> m2_84  [color=green, key=2, style=dotted];
m2_105 -> m2_100  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=2, style=dotted];
m2_1 -> m2_4  [color=green, key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_152 -> m2_153  [color=green, key=0, style=solid];
m2_153 -> m2_154  [color=green, key=0, style=solid];
m2_153 -> m2_3  [color=green, key=2, style=dotted];
m2_153 -> m2_156  [color=green, key=1, label=options, style=dashed];
m2_154 -> m2_155  [color=green, key=0, style=solid];
m2_154 -> m2_4  [color=green, key=2, style=dotted];
m2_156 -> m2_157  [color=green, key=0, style=solid];
m2_156 -> m2_16  [color=green, key=2, style=dotted];
m2_155 -> m2_156  [color=green, key=0, style=solid];
m2_155 -> m2_15  [color=green, key=2, style=dotted];
m2_157 -> m2_152  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [color=green, key=0, style=solid];
m2_41 -> m2_42  [color=green, key=0, style=solid];
m2_41 -> m2_37  [color=green, key=2, style=dotted];
m2_41 -> m2_44  [color=green, key=1, label=options, style=dashed];
m2_41 -> m2_45  [color=green, key=1, label=options, style=dashed];
m2_41 -> m2_46  [color=green, key=1, label=options, style=dashed];
m2_41 -> m2_47  [color=green, key=1, label=options, style=dashed];
m2_41 -> m2_48  [color=green, key=1, label=options, style=dashed];
m2_42 -> m2_43  [color=green, key=0, style=solid];
m2_42 -> m2_4  [color=green, key=2, style=dotted];
m2_44 -> m2_45  [color=green, key=0, style=solid];
m2_44 -> m2_38  [color=green, key=2, style=dotted];
m2_45 -> m2_46  [color=green, key=0, style=solid];
m2_45 -> m2_39  [color=green, key=2, style=dotted];
m2_46 -> m2_47  [color=green, key=0, style=solid];
m2_46 -> m2_39  [color=green, key=2, style=dotted];
m2_47 -> m2_48  [color=green, key=0, style=solid];
m2_47 -> m2_16  [color=green, key=2, style=dotted];
m2_48 -> m2_49  [color=green, key=0, style=solid];
m2_48 -> m2_17  [color=green, key=2, style=dotted];
m2_43 -> m2_44  [color=green, key=0, style=solid];
m2_43 -> m2_15  [color=green, key=2, style=dotted];
m2_49 -> m2_40  [color=blue, key=0, style=bold];
m2_121 -> m2_122  [color=green, key=0, style=solid];
m2_122 -> m2_123  [color=green, key=0, style=solid];
m2_122 -> m2_126  [color=green, key=2, style=dotted];
m2_123 -> m2_124  [color=green, key=0, style=solid];
m2_123 -> m2_4  [color=green, key=2, style=dotted];
m2_124 -> m2_125  [color=green, key=0, style=solid];
m2_124 -> m2_84  [color=green, key=2, style=dotted];
m2_125 -> m2_121  [color=blue, key=0, style=bold];
m2_137 -> m2_138  [color=green, key=0, style=solid];
m2_138 -> m2_139  [color=green, key=0, style=solid];
m2_138 -> m2_126  [color=green, key=2, style=dotted];
m2_139 -> m2_140  [color=green, key=0, style=solid];
m2_139 -> m2_4  [color=green, key=2, style=dotted];
m2_140 -> m2_141  [color=green, key=0, style=solid];
m2_140 -> m2_84  [color=green, key=2, style=dotted];
m2_141 -> m2_137  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [color=green, key=0, style=solid];
m2_143 -> m2_144  [color=green, key=0, style=solid];
m2_143 -> m2_126  [color=green, key=2, style=dotted];
m2_144 -> m2_145  [color=green, key=0, style=solid];
m2_144 -> m2_4  [color=green, key=2, style=dotted];
m2_145 -> m2_146  [color=green, key=0, style=solid];
m2_145 -> m2_84  [color=green, key=2, style=dotted];
m2_146 -> m2_142  [color=blue, key=0, style=bold];
m2_79 -> m2_80  [color=green, key=0, style=solid];
m2_80 -> m2_81  [color=green, key=0, style=solid];
m2_80 -> m2_3  [color=green, key=2, style=dotted];
m2_81 -> m2_82  [color=green, key=0, style=solid];
m2_81 -> m2_4  [color=green, key=2, style=dotted];
m2_82 -> m2_83  [color=green, key=0, style=solid];
m2_82 -> m2_84  [color=green, key=2, style=dotted];
m2_83 -> m2_79  [color=blue, key=0, style=bold];
m2_127 -> m2_128  [color=green, key=0, style=solid];
m2_128 -> m2_129  [color=green, key=0, style=solid];
m2_128 -> m2_126  [color=green, key=2, style=dotted];
m2_129 -> m2_130  [color=green, key=0, style=solid];
m2_129 -> m2_4  [color=green, key=2, style=dotted];
m2_130 -> m2_131  [color=green, key=0, style=solid];
m2_130 -> m2_84  [color=green, key=2, style=dotted];
m2_131 -> m2_127  [color=blue, key=0, style=bold];
m2_168 -> m2_1  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_6  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_10  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_11  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_20  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_21  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_29  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_30  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_42  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_43  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_52  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_53  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_67  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_72  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_73  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_81  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_82  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_87  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_88  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_94  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_104  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_110  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_118  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_119  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_123  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_124  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_129  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_130  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_134  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_135  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_139  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_140  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_144  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_145  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_149  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_150  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_154  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_155  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_160  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m2_168 -> m2_161  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_41 -> m4_42  [color=green, key=0, style=solid];
m4_42 -> m4_43  [color=green, key=0, style=solid];
m4_42 -> m4_46  [color=green, key=2, style=dotted];
m4_43 -> m4_44  [color=green, key=0, style=solid];
m4_43 -> m4_12  [color=green, key=2, style=dotted];
m4_44 -> m4_45  [color=green, key=0, style=solid];
m4_44 -> m4_20  [color=green, key=2, style=dotted];
m4_45 -> m4_41  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_11  [color=green, key=2, style=dotted];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_17 -> m4_12  [color=green, key=2, style=dotted];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_18 -> m4_20  [color=green, key=2, style=dotted];
m4_19 -> m4_15  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_29 -> m4_30  [color=green, key=0, style=solid];
m4_29 -> m4_35  [color=green, key=2, style=dotted];
m4_29 -> m4_32  [color=green, key=1, label=options, style=dashed];
m4_29 -> m4_33  [color=green, key=1, label=options, style=dashed];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_30 -> m4_12  [color=green, key=2, style=dotted];
m4_32 -> m4_33  [color=green, key=0, style=solid];
m4_32 -> m4_14  [color=green, key=2, style=dotted];
m4_33 -> m4_34  [color=green, key=0, style=solid];
m4_33 -> m4_14  [color=green, key=2, style=dotted];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_13  [color=green, key=2, style=dotted];
m4_34 -> m4_28  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_11  [color=green, key=2, style=dotted];
m4_22 -> m4_25  [color=green, key=1, label=options, style=dashed];
m4_22 -> m4_26  [color=green, key=1, label=options, style=dashed];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_12  [color=green, key=2, style=dotted];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_14  [color=green, key=2, style=dotted];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_14  [color=green, key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_13  [color=green, key=2, style=dotted];
m4_27 -> m4_21  [color=blue, key=0, style=bold];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_37 -> m4_38  [color=green, key=0, style=solid];
m4_37 -> m4_35  [color=green, key=2, style=dotted];
m4_38 -> m4_39  [color=green, key=0, style=solid];
m4_38 -> m4_12  [color=green, key=2, style=dotted];
m4_39 -> m4_40  [color=green, key=0, style=solid];
m4_39 -> m4_20  [color=green, key=2, style=dotted];
m4_40 -> m4_36  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_48 -> m4_49  [color=green, key=0, style=solid];
m4_48 -> m4_46  [color=green, key=2, style=dotted];
m4_48 -> m4_51  [color=green, key=1, label=options, style=dashed];
m4_48 -> m4_52  [color=green, key=1, label=options, style=dashed];
m4_48 -> m4_53  [color=green, key=1, label=options, style=dashed];
m4_49 -> m4_50  [color=green, key=0, style=solid];
m4_49 -> m4_12  [color=green, key=2, style=dotted];
m4_51 -> m4_52  [color=green, key=0, style=solid];
m4_51 -> m4_14  [color=green, key=2, style=dotted];
m4_52 -> m4_53  [color=green, key=0, style=solid];
m4_52 -> m4_14  [color=green, key=2, style=dotted];
m4_53 -> m4_54  [color=green, key=0, style=solid];
m4_53 -> m4_14  [color=green, key=2, style=dotted];
m4_50 -> m4_51  [color=green, key=0, style=solid];
m4_50 -> m4_13  [color=green, key=2, style=dotted];
m4_54 -> m4_47  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_11  [color=green, key=2, style=dotted];
m4_6 -> m4_9  [color=green, key=1, label=options, style=dashed];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_12  [color=green, key=2, style=dotted];
m4_9 -> m4_10  [color=green, key=0, style=solid];
m4_9 -> m4_14  [color=green, key=2, style=dotted];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_13  [color=green, key=2, style=dotted];
m4_10 -> m4_5  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_1 -> m4_4  [color=green, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_55 -> m4_7  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_8  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_17  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_18  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_23  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_24  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_30  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_31  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_38  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_39  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_43  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_44  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_49  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m4_55 -> m4_50  [color=green, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m5_21 -> m5_22  [color=green, key=0, style=solid];
m5_22 -> m5_23  [color=green, key=0, style=solid];
m5_22 -> m5_10  [color=green, key=2, style=dotted];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_11  [color=green, key=2, style=dotted];
m5_24 -> m5_25  [color=green, key=0, style=solid];
m5_24 -> m5_20  [color=green, key=2, style=dotted];
m5_25 -> m5_21  [color=blue, key=0, style=bold];
m5_46 -> m5_47  [color=green, key=0, style=solid];
m5_47 -> m5_48  [color=green, key=0, style=solid];
m5_47 -> m5_10  [color=green, key=2, style=dotted];
m5_47 -> m5_50  [color=green, key=1, label=options, style=dashed];
m5_48 -> m5_49  [color=green, key=0, style=solid];
m5_48 -> m5_11  [color=green, key=2, style=dotted];
m5_50 -> m5_51  [color=green, key=0, style=solid];
m5_50 -> m5_13  [color=green, key=2, style=dotted];
m5_49 -> m5_50  [color=green, key=0, style=solid];
m5_49 -> m5_12  [color=green, key=2, style=dotted];
m5_51 -> m5_52  [color=green, key=0, style=solid];
m5_51 -> m5_10  [color=green, key=2, style=dotted];
m5_51 -> m5_54  [color=green, key=1, label=options, style=dashed];
m5_52 -> m5_53  [color=green, key=0, style=solid];
m5_52 -> m5_11  [color=green, key=2, style=dotted];
m5_54 -> m5_55  [color=green, key=0, style=solid];
m5_54 -> m5_14  [color=green, key=2, style=dotted];
m5_53 -> m5_54  [color=green, key=0, style=solid];
m5_53 -> m5_12  [color=green, key=2, style=dotted];
m5_55 -> m5_46  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_27 -> m5_28  [color=green, key=0, style=solid];
m5_27 -> m5_10  [color=green, key=2, style=dotted];
m5_27 -> m5_30  [color=green, key=1, label=options, style=dashed];
m5_28 -> m5_29  [color=green, key=0, style=solid];
m5_28 -> m5_11  [color=green, key=2, style=dotted];
m5_30 -> m5_31  [color=green, key=0, style=solid];
m5_30 -> m5_13  [color=green, key=2, style=dotted];
m5_29 -> m5_30  [color=green, key=0, style=solid];
m5_29 -> m5_12  [color=green, key=2, style=dotted];
m5_31 -> m5_32  [color=green, key=0, style=solid];
m5_31 -> m5_10  [color=green, key=2, style=dotted];
m5_31 -> m5_34  [color=green, key=1, label=options, style=dashed];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_11  [color=green, key=2, style=dotted];
m5_34 -> m5_35  [color=green, key=0, style=solid];
m5_34 -> m5_14  [color=green, key=2, style=dotted];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_33 -> m5_12  [color=green, key=2, style=dotted];
m5_35 -> m5_26  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [color=green, key=0, style=solid];
m5_37 -> m5_38  [color=green, key=0, style=solid];
m5_37 -> m5_10  [color=green, key=2, style=dotted];
m5_38 -> m5_39  [color=green, key=0, style=solid];
m5_38 -> m5_11  [color=green, key=2, style=dotted];
m5_39 -> m5_40  [color=green, key=0, style=solid];
m5_39 -> m5_20  [color=green, key=2, style=dotted];
m5_40 -> m5_36  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_10  [color=green, key=2, style=dotted];
m5_1 -> m5_4  [color=green, key=1, label=options, style=dashed];
m5_2 -> m5_3  [color=green, key=0, style=solid];
m5_2 -> m5_11  [color=green, key=2, style=dotted];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_13  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_3 -> m5_12  [color=green, key=2, style=dotted];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_10  [color=green, key=2, style=dotted];
m5_5 -> m5_8  [color=green, key=1, label=options, style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_11  [color=green, key=2, style=dotted];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_14  [color=green, key=2, style=dotted];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> m5_12  [color=green, key=2, style=dotted];
m5_9 -> m5_0  [color=blue, key=0, style=bold];
m5_61 -> m5_62  [color=green, key=0, style=solid];
m5_62 -> m5_63  [color=green, key=0, style=solid];
m5_62 -> m5_10  [color=green, key=2, style=dotted];
m5_63 -> m5_64  [color=green, key=0, style=solid];
m5_63 -> m5_11  [color=green, key=2, style=dotted];
m5_64 -> m5_65  [color=green, key=0, style=solid];
m5_64 -> m5_20  [color=green, key=2, style=dotted];
m5_65 -> m5_61  [color=blue, key=0, style=bold];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_10  [color=green, key=2, style=dotted];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_11  [color=green, key=2, style=dotted];
m5_18 -> m5_19  [color=green, key=0, style=solid];
m5_18 -> m5_20  [color=green, key=2, style=dotted];
m5_19 -> m5_15  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [color=green, key=0, style=solid];
m5_42 -> m5_43  [color=green, key=0, style=solid];
m5_42 -> m5_10  [color=green, key=2, style=dotted];
m5_43 -> m5_44  [color=green, key=0, style=solid];
m5_43 -> m5_11  [color=green, key=2, style=dotted];
m5_44 -> m5_45  [color=green, key=0, style=solid];
m5_44 -> m5_20  [color=green, key=2, style=dotted];
m5_45 -> m5_41  [color=blue, key=0, style=bold];
m5_56 -> m5_57  [color=green, key=0, style=solid];
m5_57 -> m5_58  [color=green, key=0, style=solid];
m5_57 -> m5_10  [color=green, key=2, style=dotted];
m5_58 -> m5_59  [color=green, key=0, style=solid];
m5_58 -> m5_11  [color=green, key=2, style=dotted];
m5_59 -> m5_60  [color=green, key=0, style=solid];
m5_59 -> m5_20  [color=green, key=2, style=dotted];
m5_60 -> m5_56  [color=blue, key=0, style=bold];
m5_66 -> m5_67  [color=green, key=0, style=solid];
m5_67 -> m5_68  [color=green, key=0, style=solid];
m5_67 -> m5_10  [color=green, key=2, style=dotted];
m5_67 -> m5_70  [color=green, key=1, label=options, style=dashed];
m5_68 -> m5_69  [color=green, key=0, style=solid];
m5_68 -> m5_11  [color=green, key=2, style=dotted];
m5_70 -> m5_71  [color=green, key=0, style=solid];
m5_70 -> m5_13  [color=green, key=2, style=dotted];
m5_69 -> m5_70  [color=green, key=0, style=solid];
m5_69 -> m5_12  [color=green, key=2, style=dotted];
m5_71 -> m5_72  [color=green, key=0, style=solid];
m5_71 -> m5_10  [color=green, key=2, style=dotted];
m5_71 -> m5_74  [color=green, key=1, label=options, style=dashed];
m5_71 -> m5_75  [color=green, key=1, label=options, style=dashed];
m5_71 -> m5_76  [color=green, key=1, label=options, style=dashed];
m5_71 -> m5_77  [color=green, key=1, label=options, style=dashed];
m5_72 -> m5_73  [color=green, key=0, style=solid];
m5_72 -> m5_11  [color=green, key=2, style=dotted];
m5_74 -> m5_75  [color=green, key=0, style=solid];
m5_74 -> m5_13  [color=green, key=2, style=dotted];
m5_75 -> m5_76  [color=green, key=0, style=solid];
m5_75 -> m5_13  [color=green, key=2, style=dotted];
m5_76 -> m5_77  [color=green, key=0, style=solid];
m5_76 -> m5_13  [color=green, key=2, style=dotted];
m5_77 -> m5_78  [color=green, key=0, style=solid];
m5_77 -> m5_13  [color=green, key=2, style=dotted];
m5_73 -> m5_74  [color=green, key=0, style=solid];
m5_73 -> m5_12  [color=green, key=2, style=dotted];
m5_78 -> m5_66  [color=blue, key=0, style=bold];
m5_79 -> m5_2  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_3  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_6  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_7  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_17  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_18  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_23  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_24  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_28  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_29  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_32  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_33  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_38  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_39  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_43  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_44  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_48  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_49  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_52  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_53  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_58  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_59  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_63  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_64  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_68  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_69  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_72  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m5_79 -> m5_73  [color=green, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_2 -> m6_3  [color=green, key=0, style=solid];
m6_3 -> m6_4  [color=green, key=0, style=solid];
m6_4 -> m6_5  [color=green, key=0, style=solid];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_6 -> m6_7  [color=green, key=0, style=solid];
m6_7 -> m6_0  [color=blue, key=0, style=bold];
m6_8 -> m6_1  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m6_8 -> m6_2  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m6_8 -> m6_3  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m6_8 -> m6_4  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m6_8 -> m6_5  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m6_8 -> m6_6  [color=green, key=1, label="CommandLine.Tests.Mocks.NumberSetOptions", style=dashed];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_6  [color=green, key=2, style=dotted];
m7_11 -> m7_14  [color=green, key=1, label=options, style=dashed];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_7  [color=green, key=2, style=dotted];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_9  [color=green, key=2, style=dotted];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_8  [color=green, key=2, style=dotted];
m7_15 -> m7_10  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_63  [color=green, key=2, style=dotted];
m7_54 -> m7_57  [color=green, key=1, label=options, style=dashed];
m7_54 -> m7_58  [color=green, key=1, label=options, style=dashed];
m7_54 -> m7_59  [color=green, key=1, label=options, style=dashed];
m7_54 -> m7_60  [color=green, key=1, label=options, style=dashed];
m7_54 -> m7_61  [color=green, key=1, label=options, style=dashed];
m7_55 -> m7_56  [color=green, key=0, style=solid];
m7_55 -> m7_7  [color=green, key=2, style=dotted];
m7_57 -> m7_58  [color=green, key=0, style=solid];
m7_57 -> m7_35  [color=green, key=2, style=dotted];
m7_58 -> m7_59  [color=green, key=0, style=solid];
m7_58 -> m7_35  [color=green, key=2, style=dotted];
m7_59 -> m7_60  [color=green, key=0, style=solid];
m7_59 -> m7_9  [color=green, key=2, style=dotted];
m7_60 -> m7_61  [color=green, key=0, style=solid];
m7_60 -> m7_52  [color=green, key=2, style=dotted];
m7_61 -> m7_62  [color=green, key=0, style=solid];
m7_61 -> m7_64  [color=green, key=2, style=dotted];
m7_56 -> m7_57  [color=green, key=0, style=solid];
m7_56 -> m7_8  [color=green, key=2, style=dotted];
m7_62 -> m7_53  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [color=green, key=0, style=solid];
m7_81 -> m7_82  [color=green, key=0, style=solid];
m7_81 -> m7_6  [color=green, key=2, style=dotted];
m7_82 -> m7_83  [color=green, key=0, style=solid];
m7_82 -> m7_7  [color=green, key=2, style=dotted];
m7_83 -> m7_84  [color=green, key=0, style=solid];
m7_83 -> m7_73  [color=green, key=2, style=dotted];
m7_84 -> m7_85  [color=green, key=0, style=solid];
m7_84 -> m7_6  [color=green, key=2, style=dotted];
m7_85 -> m7_86  [color=green, key=0, style=solid];
m7_85 -> m7_7  [color=green, key=2, style=dotted];
m7_86 -> m7_87  [color=green, key=0, style=solid];
m7_86 -> m7_73  [color=green, key=2, style=dotted];
m7_87 -> m7_88  [color=green, key=0, style=solid];
m7_87 -> m7_6  [color=green, key=2, style=dotted];
m7_88 -> m7_89  [color=green, key=0, style=solid];
m7_88 -> m7_7  [color=green, key=2, style=dotted];
m7_89 -> m7_90  [color=green, key=0, style=solid];
m7_89 -> m7_73  [color=green, key=2, style=dotted];
m7_90 -> m7_91  [color=green, key=0, style=solid];
m7_90 -> m7_6  [color=green, key=2, style=dotted];
m7_91 -> m7_92  [color=green, key=0, style=solid];
m7_91 -> m7_7  [color=green, key=2, style=dotted];
m7_92 -> m7_93  [color=green, key=0, style=solid];
m7_92 -> m7_73  [color=green, key=2, style=dotted];
m7_93 -> m7_80  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_17 -> m7_18  [color=green, key=0, style=solid];
m7_17 -> m7_6  [color=green, key=2, style=dotted];
m7_17 -> m7_20  [color=green, key=1, label=options, style=dashed];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_18 -> m7_7  [color=green, key=2, style=dotted];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_9  [color=green, key=2, style=dotted];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_8  [color=green, key=2, style=dotted];
m7_21 -> m7_16  [color=blue, key=0, style=bold];
m7_94 -> m7_95  [color=green, key=0, style=solid];
m7_95 -> m7_96  [color=green, key=0, style=solid];
m7_95 -> m7_6  [color=green, key=2, style=dotted];
m7_96 -> m7_97  [color=green, key=0, style=solid];
m7_96 -> m7_7  [color=green, key=2, style=dotted];
m7_97 -> m7_98  [color=green, key=0, style=solid];
m7_97 -> m7_73  [color=green, key=2, style=dotted];
m7_98 -> m7_99  [color=green, key=0, style=solid];
m7_98 -> m7_6  [color=green, key=2, style=dotted];
m7_99 -> m7_100  [color=green, key=0, style=solid];
m7_99 -> m7_7  [color=green, key=2, style=dotted];
m7_100 -> m7_101  [color=green, key=0, style=solid];
m7_100 -> m7_73  [color=green, key=2, style=dotted];
m7_101 -> m7_94  [color=blue, key=0, style=bold];
m7_167 -> m7_168  [color=green, key=0, style=solid];
m7_168 -> m7_169  [color=green, key=0, style=solid];
m7_168 -> m7_163  [color=green, key=2, style=dotted];
m7_168 -> m7_7  [color=green, key=2, style=dotted];
m7_169 -> m7_167  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_44 -> m7_6  [color=green, key=2, style=dotted];
m7_44 -> m7_47  [color=green, key=1, label=options, style=dashed];
m7_44 -> m7_48  [color=green, key=1, label=options, style=dashed];
m7_44 -> m7_49  [color=green, key=1, label=options, style=dashed];
m7_44 -> m7_50  [color=green, key=1, label=options, style=dashed];
m7_45 -> m7_46  [color=green, key=0, style=solid];
m7_45 -> m7_7  [color=green, key=2, style=dotted];
m7_47 -> m7_48  [color=green, key=0, style=solid];
m7_47 -> m7_35  [color=green, key=2, style=dotted];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_48 -> m7_9  [color=green, key=2, style=dotted];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_52  [color=green, key=2, style=dotted];
m7_50 -> m7_51  [color=green, key=0, style=solid];
m7_50 -> m7_35  [color=green, key=2, style=dotted];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_8  [color=green, key=2, style=dotted];
m7_51 -> m7_43  [color=blue, key=0, style=bold];
m7_160 -> m7_161  [color=green, key=0, style=solid];
m7_161 -> m7_162  [color=green, key=0, style=solid];
m7_161 -> m7_163  [color=green, key=2, style=dotted];
m7_161 -> m7_7  [color=green, key=2, style=dotted];
m7_162 -> m7_160  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [color=green, key=0, style=solid];
m7_23 -> m7_24  [color=green, key=0, style=solid];
m7_23 -> m7_6  [color=green, key=2, style=dotted];
m7_23 -> m7_26  [color=green, key=1, label=options, style=dashed];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_7  [color=green, key=2, style=dotted];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_9  [color=green, key=2, style=dotted];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_8  [color=green, key=2, style=dotted];
m7_27 -> m7_22  [color=blue, key=0, style=bold];
m7_128 -> m7_129  [color=green, key=0, style=solid];
m7_129 -> m7_130  [color=green, key=0, style=solid];
m7_129 -> m7_6  [color=green, key=2, style=dotted];
m7_129 -> m7_132  [color=green, key=1, label=options, style=dashed];
m7_129 -> m7_133  [color=green, key=1, label=options, style=dashed];
m7_129 -> m7_134  [color=green, key=1, label=options, style=dashed];
m7_129 -> m7_135  [color=green, key=1, label=options, style=dashed];
m7_130 -> m7_131  [color=green, key=0, style=solid];
m7_130 -> m7_7  [color=green, key=2, style=dotted];
m7_132 -> m7_133  [color=green, key=0, style=solid];
m7_132 -> m7_9  [color=green, key=2, style=dotted];
m7_133 -> m7_134  [color=green, key=0, style=solid];
m7_133 -> m7_9  [color=green, key=2, style=dotted];
m7_134 -> m7_135  [color=green, key=0, style=solid];
m7_134 -> m7_9  [color=green, key=2, style=dotted];
m7_135 -> m7_136  [color=green, key=0, style=solid];
m7_135 -> m7_35  [color=green, key=2, style=dotted];
m7_131 -> m7_132  [color=green, key=0, style=solid];
m7_131 -> m7_8  [color=green, key=2, style=dotted];
m7_136 -> m7_137  [color=green, key=0, style=solid];
m7_136 -> m7_6  [color=green, key=2, style=dotted];
m7_136 -> m7_139  [color=green, key=1, label=options, style=dashed];
m7_136 -> m7_140  [color=green, key=1, label=options, style=dashed];
m7_136 -> m7_141  [color=green, key=1, label=options, style=dashed];
m7_136 -> m7_142  [color=green, key=1, label=options, style=dashed];
m7_137 -> m7_138  [color=green, key=0, style=solid];
m7_137 -> m7_7  [color=green, key=2, style=dotted];
m7_139 -> m7_140  [color=green, key=0, style=solid];
m7_139 -> m7_35  [color=green, key=2, style=dotted];
m7_140 -> m7_141  [color=green, key=0, style=solid];
m7_140 -> m7_9  [color=green, key=2, style=dotted];
m7_141 -> m7_142  [color=green, key=0, style=solid];
m7_141 -> m7_9  [color=green, key=2, style=dotted];
m7_142 -> m7_143  [color=green, key=0, style=solid];
m7_142 -> m7_9  [color=green, key=2, style=dotted];
m7_138 -> m7_139  [color=green, key=0, style=solid];
m7_138 -> m7_8  [color=green, key=2, style=dotted];
m7_143 -> m7_144  [color=green, key=0, style=solid];
m7_143 -> m7_6  [color=green, key=2, style=dotted];
m7_143 -> m7_146  [color=green, key=1, label=options, style=dashed];
m7_143 -> m7_147  [color=green, key=1, label=options, style=dashed];
m7_143 -> m7_148  [color=green, key=1, label=options, style=dashed];
m7_143 -> m7_149  [color=green, key=1, label=options, style=dashed];
m7_144 -> m7_145  [color=green, key=0, style=solid];
m7_144 -> m7_7  [color=green, key=2, style=dotted];
m7_146 -> m7_147  [color=green, key=0, style=solid];
m7_146 -> m7_9  [color=green, key=2, style=dotted];
m7_147 -> m7_148  [color=green, key=0, style=solid];
m7_147 -> m7_9  [color=green, key=2, style=dotted];
m7_148 -> m7_149  [color=green, key=0, style=solid];
m7_148 -> m7_35  [color=green, key=2, style=dotted];
m7_149 -> m7_150  [color=green, key=0, style=solid];
m7_149 -> m7_9  [color=green, key=2, style=dotted];
m7_145 -> m7_146  [color=green, key=0, style=solid];
m7_145 -> m7_8  [color=green, key=2, style=dotted];
m7_150 -> m7_151  [color=green, key=0, style=solid];
m7_150 -> m7_6  [color=green, key=2, style=dotted];
m7_150 -> m7_153  [color=green, key=1, label=options, style=dashed];
m7_150 -> m7_154  [color=green, key=1, label=options, style=dashed];
m7_150 -> m7_155  [color=green, key=1, label=options, style=dashed];
m7_150 -> m7_156  [color=green, key=1, label=options, style=dashed];
m7_150 -> m7_157  [color=green, key=1, label=options, style=dashed];
m7_150 -> m7_158  [color=green, key=1, label=options, style=dashed];
m7_151 -> m7_152  [color=green, key=0, style=solid];
m7_151 -> m7_7  [color=green, key=2, style=dotted];
m7_153 -> m7_154  [color=green, key=0, style=solid];
m7_153 -> m7_52  [color=green, key=2, style=dotted];
m7_154 -> m7_155  [color=green, key=0, style=solid];
m7_154 -> m7_9  [color=green, key=2, style=dotted];
m7_155 -> m7_156  [color=green, key=0, style=solid];
m7_155 -> m7_9  [color=green, key=2, style=dotted];
m7_156 -> m7_157  [color=green, key=0, style=solid];
m7_156 -> m7_35  [color=green, key=2, style=dotted];
m7_157 -> m7_158  [color=green, key=0, style=solid];
m7_157 -> m7_9  [color=green, key=2, style=dotted];
m7_158 -> m7_159  [color=green, key=0, style=solid];
m7_158 -> m7_35  [color=green, key=2, style=dotted];
m7_152 -> m7_153  [color=green, key=0, style=solid];
m7_152 -> m7_8  [color=green, key=2, style=dotted];
m7_159 -> m7_128  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_6  [color=green, key=2, style=dotted];
m7_1 -> m7_4  [color=green, key=1, label=options, style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=2, style=dotted];
m7_4 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_9  [color=green, key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_8  [color=green, key=2, style=dotted];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [color=green, key=0, style=solid];
m7_37 -> m7_38  [color=green, key=0, style=solid];
m7_37 -> m7_6  [color=green, key=2, style=dotted];
m7_37 -> m7_40  [color=green, key=1, label=options, style=dashed];
m7_37 -> m7_41  [color=green, key=1, label=options, style=dashed];
m7_38 -> m7_39  [color=green, key=0, style=solid];
m7_38 -> m7_7  [color=green, key=2, style=dotted];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_40 -> m7_35  [color=green, key=2, style=dotted];
m7_41 -> m7_42  [color=green, key=0, style=solid];
m7_41 -> m7_9  [color=green, key=2, style=dotted];
m7_39 -> m7_40  [color=green, key=0, style=solid];
m7_39 -> m7_8  [color=green, key=2, style=dotted];
m7_42 -> m7_36  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [color=green, key=0, style=solid];
m7_109 -> m7_110  [color=green, key=0, style=solid];
m7_109 -> m7_6  [color=green, key=2, style=dotted];
m7_109 -> m7_112  [color=green, key=1, label=options, style=dashed];
m7_109 -> m7_113  [color=green, key=1, label=options, style=dashed];
m7_109 -> m7_114  [color=green, key=1, label=options, style=dashed];
m7_110 -> m7_111  [color=green, key=0, style=solid];
m7_110 -> m7_7  [color=green, key=2, style=dotted];
m7_112 -> m7_113  [color=green, key=0, style=solid];
m7_112 -> m7_9  [color=green, key=2, style=dotted];
m7_113 -> m7_114  [color=green, key=0, style=solid];
m7_113 -> m7_9  [color=green, key=2, style=dotted];
m7_114 -> m7_115  [color=green, key=0, style=solid];
m7_114 -> m7_9  [color=green, key=2, style=dotted];
m7_111 -> m7_112  [color=green, key=0, style=solid];
m7_111 -> m7_8  [color=green, key=2, style=dotted];
m7_115 -> m7_116  [color=green, key=0, style=solid];
m7_115 -> m7_6  [color=green, key=2, style=dotted];
m7_115 -> m7_118  [color=green, key=1, label=options, style=dashed];
m7_115 -> m7_119  [color=green, key=1, label=options, style=dashed];
m7_115 -> m7_120  [color=green, key=1, label=options, style=dashed];
m7_116 -> m7_117  [color=green, key=0, style=solid];
m7_116 -> m7_7  [color=green, key=2, style=dotted];
m7_118 -> m7_119  [color=green, key=0, style=solid];
m7_118 -> m7_9  [color=green, key=2, style=dotted];
m7_119 -> m7_120  [color=green, key=0, style=solid];
m7_119 -> m7_9  [color=green, key=2, style=dotted];
m7_120 -> m7_121  [color=green, key=0, style=solid];
m7_120 -> m7_9  [color=green, key=2, style=dotted];
m7_117 -> m7_118  [color=green, key=0, style=solid];
m7_117 -> m7_8  [color=green, key=2, style=dotted];
m7_121 -> m7_122  [color=green, key=0, style=solid];
m7_121 -> m7_6  [color=green, key=2, style=dotted];
m7_121 -> m7_124  [color=green, key=1, label=options, style=dashed];
m7_121 -> m7_125  [color=green, key=1, label=options, style=dashed];
m7_121 -> m7_126  [color=green, key=1, label=options, style=dashed];
m7_122 -> m7_123  [color=green, key=0, style=solid];
m7_122 -> m7_7  [color=green, key=2, style=dotted];
m7_124 -> m7_125  [color=green, key=0, style=solid];
m7_124 -> m7_9  [color=green, key=2, style=dotted];
m7_125 -> m7_126  [color=green, key=0, style=solid];
m7_125 -> m7_9  [color=green, key=2, style=dotted];
m7_126 -> m7_127  [color=green, key=0, style=solid];
m7_126 -> m7_9  [color=green, key=2, style=dotted];
m7_123 -> m7_124  [color=green, key=0, style=solid];
m7_123 -> m7_8  [color=green, key=2, style=dotted];
m7_127 -> m7_108  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [color=green, key=0, style=solid];
m7_75 -> m7_76  [color=green, key=0, style=solid];
m7_75 -> m7_6  [color=green, key=2, style=dotted];
m7_75 -> m7_78  [color=green, key=1, label=options, style=dashed];
m7_76 -> m7_77  [color=green, key=0, style=solid];
m7_76 -> m7_7  [color=green, key=2, style=dotted];
m7_78 -> m7_79  [color=green, key=0, style=solid];
m7_78 -> m7_9  [color=green, key=2, style=dotted];
m7_77 -> m7_78  [color=green, key=0, style=solid];
m7_77 -> m7_8  [color=green, key=2, style=dotted];
m7_79 -> m7_74  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [color=green, key=0, style=solid];
m7_103 -> m7_104  [color=green, key=0, style=solid];
m7_103 -> m7_6  [color=green, key=2, style=dotted];
m7_103 -> m7_106  [color=green, key=1, label=options, style=dashed];
m7_104 -> m7_105  [color=green, key=0, style=solid];
m7_104 -> m7_7  [color=green, key=2, style=dotted];
m7_106 -> m7_107  [color=green, key=0, style=solid];
m7_106 -> m7_9  [color=green, key=2, style=dotted];
m7_105 -> m7_106  [color=green, key=0, style=solid];
m7_105 -> m7_8  [color=green, key=2, style=dotted];
m7_107 -> m7_102  [color=blue, key=0, style=bold];
m7_65 -> m7_66  [color=green, key=0, style=solid];
m7_66 -> m7_67  [color=green, key=0, style=solid];
m7_66 -> m7_6  [color=green, key=2, style=dotted];
m7_67 -> m7_68  [color=green, key=0, style=solid];
m7_67 -> m7_7  [color=green, key=2, style=dotted];
m7_68 -> m7_69  [color=green, key=0, style=solid];
m7_68 -> m7_73  [color=green, key=2, style=dotted];
m7_69 -> m7_70  [color=green, key=0, style=solid];
m7_69 -> m7_6  [color=green, key=2, style=dotted];
m7_70 -> m7_71  [color=green, key=0, style=solid];
m7_70 -> m7_7  [color=green, key=2, style=dotted];
m7_71 -> m7_72  [color=green, key=0, style=solid];
m7_71 -> m7_73  [color=green, key=2, style=dotted];
m7_72 -> m7_65  [color=blue, key=0, style=bold];
m7_164 -> m7_165  [color=green, key=0, style=solid];
m7_165 -> m7_166  [color=green, key=0, style=solid];
m7_165 -> m7_163  [color=green, key=2, style=dotted];
m7_165 -> m7_7  [color=green, key=2, style=dotted];
m7_166 -> m7_164  [color=blue, key=0, style=bold];
m7_170 -> m7_171  [color=green, key=0, style=solid];
m7_171 -> m7_172  [color=green, key=0, style=solid];
m7_171 -> m7_163  [color=green, key=2, style=dotted];
m7_171 -> m7_7  [color=green, key=2, style=dotted];
m7_172 -> m7_170  [color=blue, key=0, style=bold];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_6  [color=green, key=2, style=dotted];
m7_29 -> m7_32  [color=green, key=1, label=options, style=dashed];
m7_29 -> m7_33  [color=green, key=1, label=options, style=dashed];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_7  [color=green, key=2, style=dotted];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_9  [color=green, key=2, style=dotted];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_35  [color=green, key=2, style=dotted];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_31 -> m7_8  [color=green, key=2, style=dotted];
m7_34 -> m7_28  [color=blue, key=0, style=bold];
m7_173 -> m7_2  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_3  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_4  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_12  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_13  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_14  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_18  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_19  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_20  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_24  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_25  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_26  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_30  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_31  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_32  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_38  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_39  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_41  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_45  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_46  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_48  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_55  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_56  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_59  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_61  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_67  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_68  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_70  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_71  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_76  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_77  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_78  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_82  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_83  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_85  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_86  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_88  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_89  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_91  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_92  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_96  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_97  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_99  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_100  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_104  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_105  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_106  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_110  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_111  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_112  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_113  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_114  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_116  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_117  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_118  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_119  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_120  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_122  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_123  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_124  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_125  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_126  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_130  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_131  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_132  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_133  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_134  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_137  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_138  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_140  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_141  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_142  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_144  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_145  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_146  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_147  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_149  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_151  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_152  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_154  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_155  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_157  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_161  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_165  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_168  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m7_173 -> m7_171  [color=green, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_8  [color=green, key=2, style=dotted];
m8_1 -> m8_9  [color=green, key=2, style=dotted];
m8_1 -> m8_10  [color=green, key=2, style=dotted];
m8_1 -> m8_3  [color=green, key=1, label=help, style=dashed];
m8_1 -> m8_4  [color=green, key=1, label=help, style=dashed];
m8_1 -> m8_5  [color=green, key=1, label=help, style=dashed];
m8_1 -> m8_6  [color=green, key=1, label=help, style=dashed];
m8_2 -> m8_3  [color=green, key=0, style=solid];
m8_2 -> m8_11  [color=green, key=2, style=dotted];
m8_3 -> m8_4  [color=green, key=0, style=solid];
m8_3 -> m8_12  [color=green, key=2, style=dotted];
m8_4 -> m8_5  [color=green, key=0, style=solid];
m8_4 -> m8_12  [color=green, key=2, style=dotted];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_5 -> m8_13  [color=green, key=2, style=dotted];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_7 -> m8_0  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=green, key=0, style=solid];
m8_23 -> m8_25  [color=green, key=1, label="string[]", style=dashed];
m8_24 -> m8_25  [color=green, key=0, style=solid];
m8_24 -> m8_30  [color=green, key=2, style=dotted];
m8_24 -> m8_26  [color=green, key=1, label=options, style=dashed];
m8_24 -> m8_27  [color=green, key=1, label=options, style=dashed];
m8_24 -> m8_28  [color=green, key=1, label=options, style=dashed];
m8_25 -> m8_26  [color=green, key=0, style=solid];
m8_25 -> m8_29  [color=green, key=0, style=solid];
m8_25 -> m8_31  [color=green, key=2, style=dotted];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_26 -> m8_32  [color=green, key=2, style=dotted];
m8_27 -> m8_28  [color=green, key=0, style=solid];
m8_27 -> m8_33  [color=green, key=2, style=dotted];
m8_27 -> m8_32  [color=green, key=2, style=dotted];
m8_28 -> m8_29  [color=green, key=0, style=solid];
m8_28 -> m8_34  [color=green, key=2, style=dotted];
m8_28 -> m8_35  [color=green, key=2, style=dotted];
m8_28 -> m8_32  [color=green, key=2, style=dotted];
m8_29 -> m8_23  [color=blue, key=0, style=bold];
m8_11 -> m8_1  [color=green, key=3, label="Parameter variable CommandLine.Text.HelpText help", style=bold];
m8_11 -> m8_14  [color=green, key=0, style=solid];
m8_11 -> m8_15  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m8_11 -> m8_17  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m8_11 -> m8_18  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_14 -> m8_19  [color=green, key=0, style=solid];
m8_15 -> m8_16  [color=green, key=0, style=solid];
m8_15 -> m8_20  [color=green, key=2, style=dotted];
m8_15 -> m8_18  [color=green, key=1, label=errors, style=dashed];
m8_16 -> m8_17  [color=green, key=0, style=solid];
m8_16 -> m8_19  [color=green, key=0, style=solid];
m8_16 -> m8_21  [color=green, key=2, style=dotted];
m8_18 -> m8_19  [color=green, key=0, style=solid];
m8_18 -> m8_12  [color=green, key=2, style=dotted];
m8_17 -> m8_18  [color=green, key=0, style=solid];
m8_17 -> m8_22  [color=green, key=2, style=dotted];
m8_17 -> m8_12  [color=green, key=2, style=dotted];
m8_19 -> m8_11  [color=blue, key=0, style=bold];
m8_36 -> m8_2  [color=green, key=1, label="CSharpTemplate.Program.Options", style=dashed];
m8_36 -> m8_5  [color=green, key=1, label="CSharpTemplate.Program.Options", style=dashed];
m8_36 -> m8_14  [color=green, key=1, label="CSharpTemplate.Program.Options", style=dashed];
m8_36 -> m8_15  [color=green, key=1, label="CSharpTemplate.Program.Options", style=dashed];
m10_17 -> m10_18  [color=green, key=0, style=solid];
m10_18 -> m10_19  [color=green, key=0, style=solid];
m10_18 -> m10_28  [color=green, key=2, style=dotted];
m10_18 -> m10_21  [color=green, key=1, label=options, style=dashed];
m10_18 -> m10_22  [color=green, key=1, label=options, style=dashed];
m10_18 -> m10_23  [color=green, key=1, label=options, style=dashed];
m10_18 -> m10_24  [color=green, key=1, label=options, style=dashed];
m10_18 -> m10_25  [color=green, key=1, label=options, style=dashed];
m10_18 -> m10_26  [color=green, key=1, label=options, style=dashed];
m10_19 -> m10_20  [color=green, key=0, style=solid];
m10_19 -> m10_12  [color=green, key=2, style=dotted];
m10_21 -> m10_22  [color=green, key=0, style=solid];
m10_21 -> m10_14  [color=green, key=2, style=dotted];
m10_22 -> m10_23  [color=green, key=0, style=solid];
m10_22 -> m10_14  [color=green, key=2, style=dotted];
m10_23 -> m10_24  [color=green, key=0, style=solid];
m10_23 -> m10_14  [color=green, key=2, style=dotted];
m10_24 -> m10_25  [color=green, key=0, style=solid];
m10_24 -> m10_29  [color=green, key=2, style=dotted];
m10_25 -> m10_26  [color=green, key=0, style=solid];
m10_25 -> m10_30  [color=green, key=2, style=dotted];
m10_26 -> m10_27  [color=green, key=0, style=solid];
m10_26 -> m10_16  [color=green, key=2, style=dotted];
m10_20 -> m10_21  [color=green, key=0, style=solid];
m10_20 -> m10_13  [color=green, key=2, style=dotted];
m10_27 -> m10_17  [color=blue, key=0, style=bold];
m10_31 -> m10_32  [color=green, key=0, style=solid];
m10_32 -> m10_33  [color=green, key=0, style=solid];
m10_32 -> m10_28  [color=green, key=2, style=dotted];
m10_33 -> m10_34  [color=green, key=0, style=solid];
m10_33 -> m10_12  [color=green, key=2, style=dotted];
m10_34 -> m10_35  [color=green, key=0, style=solid];
m10_34 -> m10_36  [color=green, key=2, style=dotted];
m10_35 -> m10_31  [color=blue, key=0, style=bold];
m10_45 -> m10_46  [color=green, key=0, style=solid];
m10_46 -> m10_47  [color=green, key=0, style=solid];
m10_46 -> m10_44  [color=green, key=2, style=dotted];
m10_47 -> m10_48  [color=green, key=0, style=solid];
m10_47 -> m10_12  [color=green, key=2, style=dotted];
m10_47 -> m10_30  [color=green, key=2, style=dotted];
m10_48 -> m10_45  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_11  [color=green, key=2, style=dotted];
m10_1 -> m10_4  [color=green, key=1, label=options, style=dashed];
m10_1 -> m10_5  [color=green, key=1, label=options, style=dashed];
m10_1 -> m10_6  [color=green, key=1, label=options, style=dashed];
m10_1 -> m10_7  [color=green, key=1, label=options, style=dashed];
m10_1 -> m10_8  [color=green, key=1, label=options, style=dashed];
m10_1 -> m10_9  [color=green, key=1, label=options, style=dashed];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_12  [color=green, key=2, style=dotted];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_14  [color=green, key=2, style=dotted];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_5 -> m10_14  [color=green, key=2, style=dotted];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_6 -> m10_14  [color=green, key=2, style=dotted];
m10_7 -> m10_8  [color=green, key=0, style=solid];
m10_7 -> m10_14  [color=green, key=2, style=dotted];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_15  [color=green, key=2, style=dotted];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_16  [color=green, key=2, style=dotted];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> m10_13  [color=green, key=2, style=dotted];
m10_10 -> m10_0  [color=blue, key=0, style=bold];
m10_37 -> m10_38  [color=green, key=0, style=solid];
m10_38 -> m10_39  [color=green, key=0, style=solid];
m10_38 -> m10_44  [color=green, key=2, style=dotted];
m10_38 -> m10_41  [color=green, key=1, label=options, style=dashed];
m10_38 -> m10_42  [color=green, key=1, label=options, style=dashed];
m10_39 -> m10_40  [color=green, key=0, style=solid];
m10_39 -> m10_12  [color=green, key=2, style=dotted];
m10_41 -> m10_42  [color=green, key=0, style=solid];
m10_41 -> m10_14  [color=green, key=2, style=dotted];
m10_42 -> m10_43  [color=green, key=0, style=solid];
m10_42 -> m10_16  [color=green, key=2, style=dotted];
m10_40 -> m10_41  [color=green, key=0, style=solid];
m10_40 -> m10_13  [color=green, key=2, style=dotted];
m10_43 -> m10_37  [color=blue, key=0, style=bold];
m10_49 -> m10_2  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_3  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_19  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_20  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_33  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_34  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_39  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_40  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m10_49 -> m10_47  [color=green, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
}
