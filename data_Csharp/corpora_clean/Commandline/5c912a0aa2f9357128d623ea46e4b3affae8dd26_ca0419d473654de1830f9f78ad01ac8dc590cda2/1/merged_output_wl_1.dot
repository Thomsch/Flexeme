digraph  {
n0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
n1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", label="Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
n2 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
n3 [cluster="int.ToOrdinalWords()", label="Entry int.ToOrdinalWords()", span="14-14"];
n4 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
m1_102 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="Sequence.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57"];
m1_94 [cluster="string.Split(params char[])", file="Sequence.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_27 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="Sequence.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
m1_16 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="74-74"];
m1_17 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="76-76"];
m1_20 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="var map = new OptionMap(list.Count, settings)", span="81-81"];
m1_24 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="map.RawOptions = target", span="89-89"];
m1_18 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="list == null", span="77-77"];
m1_21 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label=list, span="82-82"];
m1_19 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="return null;", span="79-79"];
m1_23 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="86-86"];
m1_25 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="return map;", span="90-90"];
m1_22 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="pair.Left != null && pair.Right != null", span="84-84"];
m1_26 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="74-74"];
m1_39 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="126-126"];
m1_57 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="_property.PropertyType.IsEnum", span="130-130"];
m1_58 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="132-132"];
m1_59 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="136-136"];
m1_60 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label=InvalidCastException, span="139-139"];
m1_62 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label=FormatException, span="140-140"];
m1_64 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label=ArgumentException, span="141-141"];
m1_66 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label=OverflowException, span="142-142"];
m1_68 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="return true;", span="143-143"];
m1_61 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="return false;", span="139-139"];
m1_63 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="return false;", span="140-140"];
m1_65 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="return false;", span="141-141"];
m1_67 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="return false;", span="142-142"];
m1_69 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="126-126"];
m1_53 [cluster="System.Array.CreateInstance(System.Type, int)", file="Sequence.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m1_28 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
m1_56 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="Sequence.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m1_55 [cluster="System.Array.SetValue(object, int)", file="Sequence.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m1_54 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="Sequence.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m1_29 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="93-93"];
m1_30 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="_attribute is OptionListAttribute", span="95-95"];
m1_31 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="return SetValueList(value, options);", span="97-97"];
m1_33 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="return SetNullableValue(value, options);", span="101-101"];
m1_34 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="return SetValueScalar(value, options);", span="103-103"];
m1_32 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="99-99"];
m1_35 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="93-93"];
m1_38 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="146-146"];
m1_71 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="var nc = new NullableConverter(_property.PropertyType)", span="148-148"];
m1_72 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="151-151"];
m1_73 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label=Exception, span="155-155"];
m1_75 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="return true;", span="159-159"];
m1_74 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="return false;", span="157-157"];
m1_76 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="146-146"];
m1_79 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="162-162"];
m1_80 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="Sequence.cs", label="_property.SetValue(options, value, null)", span="164-164"];
m1_81 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="Sequence.cs", label="return true;", span="165-165"];
m1_82 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="162-162"];
m1_95 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Sequence.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m1_1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: attribute == null", span="47-47"];
m1_3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="Sequence.cs", label="property == null", span="51-51"];
m1_5 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _required = attribute.Required", span="55-55"];
m1_6 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _helpText = attribute.HelpText", span="56-56"];
m1_7 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _shortName = attribute.ShortName", span="57-57"];
m1_8 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _longName = attribute.LongName", span="58-58"];
m1_9 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="Sequence.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59"];
m1_10 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _defaultValue = attribute.DefaultValue", span="60-60"];
m1_11 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _hasDefaultValue = attribute.HasDefaultValue", span="61-61"];
m1_12 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _attribute = attribute", span="62-62"];
m1_13 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: _property = property", span="63-63"];
m1_2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, file="Sequence.cs", label="0: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="49-49"];
m1_4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="Sequence.cs", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="53-53"];
m1_14 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m1_37 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="Sequence.cs", label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178"];
m1_70 [cluster="System.Enum.Parse(System.Type, string, bool)", file="Sequence.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m1_52 [cluster="System.Type.GetElementType()", file="Sequence.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m1_77 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="Sequence.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m1_92 [cluster="System.Collections.Generic.List<T>.List()", file="Sequence.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_15 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="Sequence.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m1_78 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="Sequence.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m1_96 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="180-180"];
m1_97 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label=_hasDefaultValue, span="182-182"];
m1_98 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label="_property.SetValue(options, _defaultValue, null)", span="186-186"];
m1_99 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label=Exception, span="188-188"];
m1_100 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", span="190-190"];
m1_101 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="180-180"];
m1_36 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="168-168"];
m1_83 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="_property.SetValue(options, new List<string>(), null)", span="170-170"];
m1_84 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="171-171"];
m1_85 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="172-172"];
m1_88 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="fieldRef.Add(values[i])", span="175-175"];
m1_86 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="int i = 0", span="173-173"];
m1_87 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="i < values.Length", span="173-173"];
m1_89 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="i++", span="173-173"];
m1_90 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="return true;", span="177-177"];
m1_91 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="168-168"];
m1_40 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="106-106"];
m1_41 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="Type elementType = _property.PropertyType.GetElementType()", span="108-108"];
m1_42 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="Array array = Array.CreateInstance(elementType, values.Count)", span="109-109"];
m1_45 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="115-115"];
m1_46 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="_property.SetValue(options, array, null)", span="116-116"];
m1_43 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="int i = 0", span="111-111"];
m1_44 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="i < array.Length", span="111-111"];
m1_49 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="i++", span="111-111"];
m1_50 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="return true;", span="123-123"];
m1_47 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label=FormatException, span="118-118"];
m1_48 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="return false;", span="120-120"];
m1_51 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="Sequence.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="106-106"];
m1_93 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Sequence.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m1_103 [file="Sequence.cs", label="CommandLine.Internal.OptionInfo", span=""];
m2_72 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m2_73 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="SequenceTests.cs", label="return Bits.GetHashCode();", span="204-204"];
m2_74 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m2_83 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m2_84 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="SequenceTests.cs", label="return new ByteSize(Bits + value);", span="219-219"];
m2_85 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m2_98 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m2_99 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="SequenceTests.cs", label="return this + FromTerabytes(value);", span="244-244"];
m2_100 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m2_89 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m2_90 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="SequenceTests.cs", label="return this + FromKilobytes(value);", span="229-229"];
m2_91 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m2_173 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="30-30"];
m2_122 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m2_123 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits < b2.Bits;", span="284-284"];
m2_124 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m2_51 [cluster="System.Func<T, TResult>.Invoke(T)", file="SequenceTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_174 [cluster="string.TrimStart(params char[])", file="SequenceTests.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m2_178 [cluster="double.TryParse(string, out double)", file="SequenceTests.cs", label="Entry double.TryParse(string, out double)", span="0-0"];
m2_176 [cluster="string.Substring(int, int)", file="SequenceTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_116 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m2_117 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits == b2.Bits;", span="274-274"];
m2_118 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m2_79 [cluster="long.CompareTo(long)", file="SequenceTests.cs", label="Entry long.CompareTo(long)", span="0-0"];
m2_131 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m2_132 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits >= b2.Bits;", span="299-299"];
m2_133 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m2_8 [cluster="System.Math.Ceiling(double)", file="SequenceTests.cs", label="Entry System.Math.Ceiling(double)", span="0-0"];
m2_50 [cluster="string.Contains(string)", file="SequenceTests.cs", label="Entry string.Contains(string)", span="0-0"];
m2_57 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="162-162"];
m2_55 [cluster="lambda expression", file="SequenceTests.cs", label="format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m2_58 [cluster="lambda expression", file="SequenceTests.cs", label="n.ToString(format)", span="162-162"];
m2_54 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="161-161"];
m2_56 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="161-161"];
m2_59 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="162-162"];
m2_75 [cluster="long.GetHashCode()", file="SequenceTests.cs", label="Entry long.GetHashCode()", span="0-0"];
m2_80 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m2_81 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(Bits + bs.Bits);", span="214-214"];
m2_82 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m2_60 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m2_61 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="value == null", span="185-185"];
m2_64 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="value is ByteSize", span="189-189"];
m2_65 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="other = (ByteSize)value", span="190-190"];
m2_62 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="return false;", span="186-186"];
m2_63 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="ByteSize other", span="188-188"];
m2_67 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="return Equals(other);", span="194-194"];
m2_66 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="return false;", span="192-192"];
m2_68 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m2_30 [cluster="string.Format(string, object, object)", file="SequenceTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_110 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m2_111 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(-b.Bits);", span="264-264"];
m2_112 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m2_18 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m2_19 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="SequenceTests.cs", label="return new ByteSize(value * BytesInMegabyte);", span="132-132"];
m2_20 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m2_125 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m2_126 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits <= b2.Bits;", span="289-289"];
m2_127 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m2_69 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m2_70 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return Bits == value.Bits;", span="199-199"];
m2_71 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m2_104 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m2_105 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(b1.Bits + b2.Bits);", span="254-254"];
m2_106 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m2_119 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m2_120 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits != b2.Bits;", span="279-279"];
m2_121 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m2_15 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m2_16 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="SequenceTests.cs", label="return new ByteSize(value * BytesInKilobyte);", span="127-127"];
m2_17 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m2_186 [cluster="System.FormatException.FormatException(string)", file="SequenceTests.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m2_180 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m2_181 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="ByteSize result", span="378-378"];
m2_182 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="TryParse(s, out result)", span="380-380"];
m2_183 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="return result;", span="381-381"];
m2_184 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="throw new FormatException(''Value is not in the correct format'');", span="383-383"];
m2_185 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m2_101 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m2_102 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(Bits - bs.Bits);", span="249-249"];
m2_103 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m2_128 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m2_129 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return b1.Bits > b2.Bits;", span="294-294"];
m2_130 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m2_113 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m2_114 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(b.Bits--);", span="269-269"];
m2_115 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m2_134 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m2_135 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="string.IsNullOrWhiteSpace(s)", span="305-305"];
m2_138 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="s = s.TrimStart()", span="312-312"];
m2_136 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="throw new ArgumentNullException(''s'', ''String is null or whitespace'');", span="306-306"];
m2_137 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = new ByteSize()", span="309-309"];
m2_139 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="int num", span="314-314"];
m2_142 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="num < s.Length", span="318-318"];
m2_143 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="!(char.IsDigit(s[num]) || s[num] == '.')", span="319-319"];
m2_149 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="string numberPart = s.Substring(0, lastNumber).Trim()", span="331-331"];
m2_150 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="string sizePart = s.Substring(lastNumber, s.Length - lastNumber).Trim()", span="332-332"];
m2_140 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="var found = false", span="315-315"];
m2_141 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="num = 0", span="318-318"];
m2_146 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="found == false", span="325-325"];
m2_145 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="num++", span="318-318"];
m2_148 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="int lastNumber = num", span="328-328"];
m2_144 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="found = true", span="321-321"];
m2_147 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return false;", span="326-326"];
m2_152 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="!double.TryParse(numberPart, out number)", span="336-336"];
m2_151 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="double number", span="335-335"];
m2_154 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="sizePart.ToUpper()", span="340-340"];
m2_156 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="sizePart == BitSymbol", span="343-343"];
m2_153 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return false;", span="337-337"];
m2_157 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="number % 1 != 0", span="345-345"];
m2_159 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromBits((long)number)", span="348-348"];
m2_160 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromBytes(number)", span="352-352"];
m2_162 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromKilobytes(number)", span="357-357"];
m2_164 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromMegabytes(number)", span="361-361"];
m2_166 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromGigabytes(number)", span="365-365"];
m2_168 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="result = FromTerabytes(number)", span="369-369"];
m2_155 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label=ByteSymbol, span="342-342"];
m2_161 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label=KilobyteSymbol, span="356-356"];
m2_163 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label=MegabyteSymbol, span="360-360"];
m2_165 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label=GigabyteSymbol, span="364-364"];
m2_167 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label=TerabyteSymbol, span="368-368"];
m2_158 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return false;", span="346-346"];
m2_169 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return true;", span="373-373"];
m2_170 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m2_0 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m2_1 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Bits = (long)Math.Ceiling(byteSize * BitsInByte)", span="106-106"];
m2_2 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Bytes = byteSize", span="108-108"];
m2_3 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Kilobytes = byteSize / BytesInKilobyte", span="109-109"];
m2_4 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Megabytes = byteSize / BytesInMegabyte", span="110-110"];
m2_5 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Gigabytes = byteSize / BytesInGigabyte", span="111-111"];
m2_6 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Terabytes = byteSize / BytesInTerabyte", span="112-112"];
m2_7 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m2_175 [cluster="char.IsDigit(char)", file="SequenceTests.cs", label="Entry char.IsDigit(char)", span="0-0"];
m2_171 [cluster="string.IsNullOrWhiteSpace(string)", file="SequenceTests.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m2_172 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SequenceTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m2_21 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m2_22 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="SequenceTests.cs", label="return new ByteSize(value * BytesInGigabyte);", span="137-137"];
m2_23 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m2_31 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m2_32 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="!format.Contains(''#'') && !format.Contains(''0'')", span="158-158"];
m2_33 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="format = ''#.## '' + format", span="159-159"];
m2_34 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="Func<string, bool> has = s => format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m2_35 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="Func<double, string> output = n => n.ToString(format)", span="162-162"];
m2_44 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="format.IndexOf(ByteSymbol, StringComparison.Ordinal) != -1", span="174-174"];
m2_46 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="format.IndexOf(BitSymbol, StringComparison.Ordinal) != -1", span="177-177"];
m2_48 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue.ToString(format), LargestWholeNumberSymbol);", span="180-180"];
m2_36 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="has(TerabyteSymbol)", span="164-164"];
m2_38 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="has(GigabyteSymbol)", span="166-166"];
m2_40 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="has(MegabyteSymbol)", span="168-168"];
m2_42 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="has(KilobyteSymbol)", span="170-170"];
m2_37 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Terabytes);", span="165-165"];
m2_39 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Gigabytes);", span="167-167"];
m2_41 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Megabytes);", span="169-169"];
m2_43 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Kilobytes);", span="171-171"];
m2_45 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Bytes);", span="175-175"];
m2_47 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="return output(Bits);", span="178-178"];
m2_49 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m2_9 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m2_10 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="SequenceTests.cs", label="return new ByteSize(value / (double)BitsInByte);", span="117-117"];
m2_11 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m2_24 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m2_25 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="SequenceTests.cs", label="return new ByteSize(value * BytesInTerabyte);", span="142-142"];
m2_26 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m2_53 [cluster="double.ToString(string)", file="SequenceTests.cs", label="Entry double.ToString(string)", span="0-0"];
m2_177 [cluster="string.Trim()", file="SequenceTests.cs", label="Entry string.Trim()", span="0-0"];
m2_92 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m2_93 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="SequenceTests.cs", label="return this + FromMegabytes(value);", span="234-234"];
m2_94 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m2_76 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m2_77 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return Bits.CompareTo(other.Bits);", span="209-209"];
m2_78 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m2_95 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m2_96 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="SequenceTests.cs", label="return this + FromGigabytes(value);", span="239-239"];
m2_97 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m2_179 [cluster="string.ToUpper()", file="SequenceTests.cs", label="Entry string.ToUpper()", span="0-0"];
m2_12 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m2_13 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="SequenceTests.cs", label="return new ByteSize(value);", span="122-122"];
m2_14 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m2_86 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m2_87 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="SequenceTests.cs", label="return this + FromBytes(value);", span="224-224"];
m2_88 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m2_52 [cluster="string.IndexOf(string, System.StringComparison)", file="SequenceTests.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m2_107 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m2_108 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="return new ByteSize(b.Bits++);", span="259-259"];
m2_109 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m2_27 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="SequenceTests.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m2_28 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="SequenceTests.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue, LargestWholeNumberSymbol);", span="153-153"];
m2_29 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="SequenceTests.cs", label="Exit Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m2_187 [file="SequenceTests.cs", label="Humanizer.Bytes.ByteSize", span=""];
m2_188 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_189 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_190 [file="SequenceTests.cs", label=string, span=""];
m2_191 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_192 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_193 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_194 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_195 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_196 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_197 [file="SequenceTests.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m4_0 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="TokenTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16"];
m4_1 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", color=green, community=0, file="TokenTests.cs", label="0: Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="18-18"];
m4_2 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="TokenTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16"];
m4_4 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TokenTests.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59"];
m4_3 [cluster="CommandLine.Core.Token.Name(string)", file="TokenTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m4_5 [cluster="Unk.True", file="TokenTests.cs", label="Entry Unk.True", span=""];
m1_16 -> m1_19  [color=darkorchid, key=3, label="method methodReturn CommandLine.Internal.OptionMap CreateMap", style=bold];
m1_39 -> m1_29  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m1_39 -> m1_48  [color=darkorchid, key=3, label="method methodReturn bool SetValueScalar", style=bold];
m1_39 -> m1_50  [color=darkorchid, key=3, label="method methodReturn bool SetValueScalar", style=bold];
m1_29 -> m1_36  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_29 -> m1_38  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_29 -> m1_39  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_38 -> m1_29  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m1_38 -> m1_48  [color=darkorchid, key=3, label="method methodReturn bool SetNullableValue", style=bold];
m1_38 -> m1_50  [color=darkorchid, key=3, label="method methodReturn bool SetNullableValue", style=bold];
m1_79 -> m1_50  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_36 -> m1_29  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m1_36 -> m1_50  [color=darkorchid, key=3, label="method methodReturn bool SetValueList", style=bold];
m1_86 -> m1_43  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_40 -> m1_48  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_40 -> m1_50  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m1_43 -> m1_43  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m2_98 -> m2_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddTerabytes", style=bold];
m2_89 -> m2_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddKilobytes", style=bold];
m2_60 -> m2_62  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_60 -> m2_69  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_18 -> m2_92  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_18 -> m2_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_69 -> m2_63  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize value", style=bold];
m2_104 -> m2_12  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m2_104 -> m2_15  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m2_104 -> m2_18  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m2_104 -> m2_21  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m2_104 -> m2_24  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m2_15 -> m2_89  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_15 -> m2_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_134 -> m2_62  [color=darkorchid, key=3, label="method methodReturn bool TryParse", style=bold];
m2_134 -> m2_169  [color=darkorchid, key=3, label="method methodReturn bool TryParse", style=bold];
m2_134 -> m2_9  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_12  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_15  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_18  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_21  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_24  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_181  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m2_134 -> m2_180  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m2_140 -> m2_62  [color=darkorchid, key=3, label="Local variable bool found", style=bold];
m2_148 -> m2_139  [color=darkorchid, key=3, label="Local variable int lastNumber", style=bold];
m2_21 -> m2_95  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_21 -> m2_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_34 -> m2_34  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> has", style=bold];
m2_35 -> m2_35  [color=darkorchid, key=3, label="Local variable System.Func<double, string> output", style=bold];
m2_9 -> m2_151  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
m2_24 -> m2_98  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_24 -> m2_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_92 -> m2_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddMegabytes", style=bold];
m2_95 -> m2_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddGigabytes", style=bold];
m2_12 -> m2_86  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_12 -> m2_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m2_86 -> m2_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddBytes", style=bold];
}
