digraph  {
m1_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="UnParserExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m1_32 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_26 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="UnParserExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="253-253"];
m1_19 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="UnParserExtensions.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m1_98 [cluster="CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", span="81-81"];
m1_101 [cluster="CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", color=green, community=0, file="UnParserExtensions.cs", label="var builder = new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, ' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                    .TrimEndIfMatch(' ')\r\n                .ToString()", prediction=0, span="85-90"];
m1_99 [cluster="CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", file="UnParserExtensions.cs", label="var spec = optionSpec.Item1", span="83-83"];
m1_100 [cluster="CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", file="UnParserExtensions.cs", label="var value = optionSpec.Item2", span="84-84"];
m1_102 [cluster="CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(System.Tuple<CommandLine.Core.OptionSpecification, object>)", span="81-81"];
m1_104 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="21-21"];
m1_92 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="75-75"];
m1_93 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="77-78"];
m1_94 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="75-75"];
m1_52 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="42-42"];
m1_53 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="UnParserExtensions.cs", label="var builder = new StringBuilder()", prediction=1, span="44-44"];
m1_54 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="45-45"];
m1_56 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(UnParseValue(value))", span="48-48"];
m1_57 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(' ')", span="49-49"];
m1_63 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(unParse(e.Current)).Append(sep)", span="57-57"];
m1_64 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder[builder.Length] == ' '", span="58-58"];
m1_65 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Remove(0, builder.Length - 1)", span="59-59"];
m1_66 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="UnParserExtensions.cs", label="return builder.ToString();", prediction=1, span="62-62"];
m1_62 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="UnParserExtensions.cs", label="e.MoveNext()", prediction=3, span="56-56"];
m1_61 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="55-55"];
m1_59 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="52-52"];
m1_55 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="47-47"];
m1_58 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="51-51"];
m1_60 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> unParse = v\r\n                        => sep == ' ' ? UnParseValue(v) : v", span="53-54"];
m1_67 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="42-42"];
m1_71 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m1_73 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", span="17-17"];
m1_6 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="var specs = type.GetSpecifications(pi =>\r\n                Tuple.Create(Specification.FromProperty(pi),\r\n                pi.GetValue(options, null)))", prediction=4, span="27-29"];
m1_3 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="21-21"];
m1_5 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="ReflectionHelper.GetAttribute<VerbAttribute>()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="24-25"];
m1_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="var optSpecs = specs.OfType<Tuple<OptionSpecification, object>>()\r\n                .Where(tuple => tuple.Item1.TargetType != TargetType.Switch && !((bool)tuple.Item2))", prediction=5, span="30-31"];
m1_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="var valSpecs = specs.OfType<Tuple<ValueSpecification, object>>().OrderBy(v => v.Item1.Index)", prediction=5, span="32-32"];
m1_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="optSpecs.ForEach(opt => builder.Append(FormatOption(opt)).Append(' '))", prediction=5, span="34-34"];
m1_4 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="22-22"];
m1_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", prediction=5, span="35-35"];
m1_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Item1, val.Item2)).Append(' '))", prediction=5, span="36-36"];
m1_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", prediction=5, span="37-37"];
m1_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", color=green, community=0, file="UnParserExtensions.cs", label="return builder.ToString();", prediction=5, span="39-39"];
m1_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="options == null", span="19-19"];
m1_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="19-19"];
m1_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(T)", span="17-17"];
m1_22 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m1_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m1_86 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_20 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m1_81 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="105-105"];
m1_38 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="UnParserExtensions.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_16 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m1_95 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="78-78"];
m1_33 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="27-29"];
m1_34 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="Tuple.Create(Specification.FromProperty(pi),\r\n                pi.GetValue(options, null))", prediction=12, span="28-29"];
m1_35 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="27-29"];
m1_45 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="34-34"];
m1_46 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="builder.Append(FormatOption(opt)).Append(' ')", prediction=5, span="34-34"];
m1_47 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="34-34"];
m1_49 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="36-36"];
m1_50 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Item1, val.Item2)).Append(' ')", prediction=5, span="36-36"];
m1_51 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="36-36"];
m1_39 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="31-31"];
m1_42 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="32-32"];
m1_40 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="tuple.Item1.TargetType != TargetType.Switch && !((bool)tuple.Item2)", prediction=15, span="31-31"];
m1_41 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="31-31"];
m1_43 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="v.Item1.Index", prediction=16, span="32-32"];
m1_44 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="32-32"];
m1_87 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="72-72"];
m1_88 [cluster="lambda expression", color=green, community=0, file="UnParserExtensions.cs", label="v.Contains(' ') ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", prediction=17, span="72-72"];
m1_89 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="72-72"];
m1_28 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="25-25"];
m1_29 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="25-25"];
m1_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? UnParseValue(v) : v", span="54-54"];
m1_83 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="68-68"];
m1_30 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="25-25"];
m1_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="53-54"];
m1_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="53-54"];
m1_82 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="67-68"];
m1_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="67-68"];
m1_96 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="78-78"];
m1_97 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="78-78"];
m1_85 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m1_105 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_68 [cluster="CommandLine.UnParserExtensions.UnParseValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.UnParseValue(object)", span="65-65"];
m1_79 [cluster="CommandLine.UnParserExtensions.UnParseValue(object)", color=green, community=0, file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", prediction=18, span="70-72"];
m1_78 [cluster="CommandLine.UnParserExtensions.UnParseValue(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="67-68"];
m1_80 [cluster="CommandLine.UnParserExtensions.UnParseValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.UnParseValue(object)", span="65-65"];
m1_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="UnParserExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_25 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="86-86"];
m1_74 [cluster="System.Text.StringBuilder.Remove(int, int)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m1_48 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m1_91 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m1_27 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_70 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="75-75"];
m1_31 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_103 [cluster="CommandLine.Core.OptionSpecification.FormatName()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="93-93"];
m1_24 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m1_69 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m1_21 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_17 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m1_72 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m1_106 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="93-93"];
m1_107 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", color=green, community=0, file="UnParserExtensions.cs", label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", prediction=19, span="95-96"];
m1_108 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="93-93"];
m1_36 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m1_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_37 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m1_110 [file="UnParserExtensions.cs", label=T, span=""];
m1_109 [file="UnParserExtensions.cs", label=builder, span=""];
m1_112 [file="UnParserExtensions.cs", label=doubQt, span=""];
m1_111 [file="UnParserExtensions.cs", label=sep, span=""];
m2_0 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(FakeOptions, string)", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(FakeOptions, string)", span="16-16"];
m2_1 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(FakeOptions, string)", color=green, community=1, file="UnParserExtensionsTests.cs", label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", prediction=20, span="18-20"];
m2_2 [cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(FakeOptions, string)", file="UnParserExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(FakeOptions, string)", span="16-16"];
m2_4 [cluster="Unk.FormatCommandLine", file="UnParserExtensionsTests.cs", label="Entry Unk.FormatCommandLine", span=""];
m2_5 [cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m2_3 [cluster="CommandLine.Parser.Parser()", file="UnParserExtensionsTests.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m1_93 -> m1_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_53 -> m1_56  [color=green, key=1, label=builder, style=dashed];
m1_53 -> m1_57  [color=green, key=1, label=builder, style=dashed];
m1_53 -> m1_63  [color=green, key=1, label=builder, style=dashed];
m1_53 -> m1_64  [color=green, key=1, label=builder, style=dashed];
m1_53 -> m1_65  [color=green, key=1, label=builder, style=dashed];
m1_53 -> m1_66  [color=green, key=1, label=builder, style=dashed];
m1_61 -> m1_63  [color=darkseagreen4, key=1, label=e, style=dashed];
m1_59 -> m1_63  [color=darkseagreen4, key=1, label=sep, style=dashed];
m1_59 -> m1_76  [color=darkseagreen4, key=1, label=sep, style=dashed];
m1_60 -> m1_63  [color=darkseagreen4, key=1, label=unParse, style=dashed];
m1_60 -> m1_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_0 -> m1_34  [color=green, key=1, label=T, style=dashed];
m1_6 -> m1_33  [color=green, key=1, label="lambda expression", style=dashed];
m1_5 -> m1_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_9  [color=green, key=1, label=optSpecs, style=dashed];
m1_7 -> m1_39  [color=green, key=1, label="lambda expression", style=dashed];
m1_8 -> m1_11  [color=green, key=1, label=valSpecs, style=dashed];
m1_8 -> m1_42  [color=green, key=1, label="lambda expression", style=dashed];
m1_9 -> m1_45  [color=green, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_9  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_46  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_10  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_11  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_50  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_12  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_13  [color=green, key=1, label=builder, style=dashed];
m1_4 -> m1_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_11 -> m1_49  [color=green, key=1, label="lambda expression", style=dashed];
m1_68 -> m1_79  [color=green, key=1, label=object, style=dashed];
m1_79 -> m1_87  [color=green, key=1, label="lambda expression", style=dashed];
m1_78 -> m1_88  [color=green, key=1, label=doubQt, style=dashed];
m1_78 -> m1_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_110 -> m1_34  [color=green, key=1, label=T, style=dashed];
m1_109 -> m1_46  [color=green, key=1, label=builder, style=dashed];
m1_109 -> m1_50  [color=green, key=1, label=builder, style=dashed];
m1_109 -> m1_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_112 -> m1_88  [color=green, key=1, label=doubQt, style=dashed];
m1_111 -> m1_76  [color=darkseagreen4, key=1, label=sep, style=dashed];
}
