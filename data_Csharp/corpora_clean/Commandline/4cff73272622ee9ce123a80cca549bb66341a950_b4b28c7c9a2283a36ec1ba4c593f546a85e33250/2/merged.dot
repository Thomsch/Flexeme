digraph  {
m1_76 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs"];
m1_95 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="27-27", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m1_33 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m1_34 [label="var expectedResult = -.123D", span="78-78", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m1_35 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''-0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="81-85", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m1_36 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="88-88", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m1_37 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m1_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceBuilderTests.cs"];
m1_157 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="337-337", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m1_158 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="340-340", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m1_159 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="343-347", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m1_160 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="350-350", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m1_161 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="337-337", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m1_144 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m1_166 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="356-356", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_167 [label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="359-359", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_168 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="362-366", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_169 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="369-369", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_170 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="356-356", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_131 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="279-279", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m1_132 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="281-284", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m1_133 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="286-290", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m1_134 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="293-293", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m1_135 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="279-279", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m1_57 [label="Entry Unk.AllProperties", span="", cluster="Unk.AllProperties", file="InstanceBuilderTests.cs"];
m1_110 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_1 [label="var fakeOptions = new FakeOptions()", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_2 [label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="19-21", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_3 [label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="24-28", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_4 [label="Assert.True(expectedResult.Equals(result))", span="31-31", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_5 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m1_148 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="318-318", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m1_149 [label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="321-321", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m1_150 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="324-328", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m1_151 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="331-331", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m1_152 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="318-318", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m1_8 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs"];
m1_162 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m1_188 [label="Entry lambda expression", span="401-401", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_13 [label=fakeOptions, span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_12 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_14 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_21 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_22 [label="new FakeOptions()", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_23 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_29 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_30 [label="new FakeOptionsWithDouble()", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_31 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_38 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_39 [label="new FakeOptionsWithDouble()", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_40 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_47 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_48 [label="new FakeOptions()", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_49 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_59 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_60 [label="new FakeOptionsWithEnum()", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_61 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_68 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_69 [label="new FakeOptionsWithValues()", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_70 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_77 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_78 [label="new FakeOptionsWithSequenceWithoutRange()", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_79 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_86 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_87 [label="new FakeOptionsWithSequenceAndSeparator()", span="192-192", cluster="lambda expression", color=red, community=0, file="InstanceBuilderTests.cs"];
m1_88 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_96 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_99 [label="Entry lambda expression", span="222-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_97 [label="new FakeOptionsWithValues()", span="221-221", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_98 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_100 [label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="223-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_104 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_108 [label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_101 [label="Exit lambda expression", span="222-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_103 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_105 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_107 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_109 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_118 [label="Entry lambda expression", span="247-247", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_119 [label="new FakeOptionsWithSets()", span="247-247", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_120 [label="Exit lambda expression", span="247-247", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_128 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_129 [label="new FakeOptionWithRequiredAndSet()", span="267-267", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_130 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_136 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_137 [label="new FakeOptionWithRequiredAndSet()", span="287-287", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_138 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_145 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_146 [label="new FakeOptionWithRequiredAndSet()", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_147 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_153 [label="Entry lambda expression", span="325-325", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_154 [label="new FakeOptionWithRequired()", span="325-325", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_155 [label="Exit lambda expression", span="325-325", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_163 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_164 [label="new FakeOptions()", span="344-344", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_165 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_172 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_173 [label="new FakeOptions()", span="363-363", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_174 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_180 [label="Entry lambda expression", span="382-382", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_181 [label="new FakeOptions()", span="382-382", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_182 [label="Exit lambda expression", span="382-382", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_189 [label="new FakeOptions()", span="401-401", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_190 [label="Exit lambda expression", span="401-401", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m1_139 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="298-298", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m1_140 [label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="300-304", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m1_141 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="306-310", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m1_142 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="313-313", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m1_143 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="298-298", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m1_46 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs"];
m1_89 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="207-207", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_90 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="210-216", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_91 [label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="217-217", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_93 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="230-230", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_92 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="220-227", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_94 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="207-207", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m1_183 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="394-394", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_184 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="397-397", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_185 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="400-404", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_186 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="407-407", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_187 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="394-394", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_10 [label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="90-90", cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="InstanceBuilderTests.cs"];
m1_32 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs"];
m1_55 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14", cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs"];
m1_62 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m1_63 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="138-144", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m1_64 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="147-151", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m1_65 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="154-154", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m1_66 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m1_127 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="InstanceBuilderTests.cs"];
m1_171 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs"];
m1_85 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs"];
m1_106 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs"];
m1_102 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs"];
m1_122 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="259-259", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m1_123 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="261-264", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m1_124 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="266-270", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m1_125 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="273-273", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m1_126 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="259-259", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m1_121 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs"];
m1_80 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="182-182", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m1_81 [label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    StringSequence = new[] { ''abc'',''1234'',''xyz@aaa.com'' }\r\n                }", span="185-188", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=1, file="InstanceBuilderTests.cs"];
m1_82 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''abc;1234;xyz@aaa.com'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="191-195", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=1, file="InstanceBuilderTests.cs"];
m1_83 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="198-198", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", color=red, community=0, file="InstanceBuilderTests.cs"];
m1_84 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="182-182", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m1_116 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m1_111 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="236-236", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m1_112 [label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="239-243", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m1_113 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="246-250", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m1_114 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="253-253", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m1_115 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="236-236", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m1_24 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m1_25 [label="var expectedResult = .123D", span="59-59", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m1_26 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="62-66", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m1_27 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="69-69", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m1_28 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m1_156 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs"];
m1_58 [label="Entry Unk.EqualTo", span="", cluster="Unk.EqualTo", file="InstanceBuilderTests.cs"];
m1_117 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs"];
m1_56 [label="Entry Unk.ShouldHave", span="", cluster="Unk.ShouldHave", file="InstanceBuilderTests.cs"];
m1_6 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs"];
m1_15 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m1_16 [label="var expectedResult = -123", span="40-40", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m1_17 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m1_18 [label="Assert.Equal(expectedResult, result.Value.LongValue)", span="50-50", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m1_19 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m1_175 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="375-375", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_176 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="378-378", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_177 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="381-385", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_178 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="388-388", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_179 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="375-375", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m1_50 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m1_51 [label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="116-119", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m1_52 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="122-126", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m1_53 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m1_54 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m1_67 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs"];
m1_7 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs"];
m1_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InstanceBuilderTests.cs"];
m1_41 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m1_42 [label="var expectedResult = new[] { 10, 20, 30, 40 }", span="97-97", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m1_43 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m1_44 [label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="107-107", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m1_45 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m1_71 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m1_72 [label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="163-166", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", color=green, community=0, file="InstanceBuilderTests.cs"];
m1_73 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="169-173", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m1_74 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="176-176", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m1_75 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m1_9 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m1_191 [label=fakeOptions, span="", file="InstanceBuilderTests.cs"];
m1_192 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="InstanceBuilderTests.cs"];
m2_15 [label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="42-42", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m2_16 [label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="42-42", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m2_21 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m2_22 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m2_19 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m2_20 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m2_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs"];
m2_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_1 [label="shortName == null", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_3 [label="longName == null", span="26-26", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_5 [label="this.shortName = shortName", span="28-28", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_6 [label="this.longName = longName", span="29-29", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_2 [label="throw new ArgumentNullException(''shortName'');", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_4 [label="throw new ArgumentNullException(''longName'');", span="26-26", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_7 [label="this.setName = string.Empty", span="30-30", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_8 [label="this.min = -1", span="31-31", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_9 [label="this.max = -1", span="32-32", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_10 [label="this.separator = string.Empty", span="33-33", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, file="OptionAttribute.cs"];
m2_11 [label="this.helpText = string.Empty", span="34-34", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_12 [label="this.metaValue = string.Empty", span="35-35", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_13 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m2_17 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m2_18 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m2_23 [label="CommandLine.OptionAttribute", span="", file="OptionAttribute.cs"];
m3_8 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs"];
m3_12 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionMapperTests.cs"];
m3_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapperTests.cs"];
m3_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs"];
m3_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionMapperTests.cs"];
m3_11 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionMapperTests.cs"];
m3_15 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="OptionMapperTests.cs"];
m3_27 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs"];
m3_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m3_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m3_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, string.Empty, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs"];
m3_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m3_4 [label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m3_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m3_28 [label="Entry lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_16 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_20 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_24 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_17 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_18 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_21 [label="pt.Specification.IsOption()", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_22 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_25 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_26 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_29 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_30 [label="Exit lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m3_31 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="OptionMapperTests.cs"];
m3_19 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs"];
m3_23 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs"];
m3_14 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionMapperTests.cs"];
m3_10 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="OptionMapperTests.cs"];
m3_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs"];
m4_11 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="OptionSpecification.cs"];
m4_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_1 [label="this.shortName = shortName", span="19-19", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_2 [label="this.longName = longName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_3 [label="this.setName = setName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_4 [label="this.helpText = helpText", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_5 [label="this.metaValue = metaValue", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_6 [label="this.enumValues = enumValues", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_7 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_8 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_9 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="29-41", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="OptionSpecification.cs"];
m4_10 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m4_12 [label="CommandLine.Core.OptionSpecification", span="", file="OptionSpecification.cs"];
m5_32 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs"];
m5_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs"];
m5_29 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs"];
m5_0 [label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_1 [label="this.tag = tag", span="30-30", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_2 [label="this.required = required", span="31-31", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_3 [label="this.min = min", span="32-32", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_4 [label="this.max = max", span="33-33", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_5 [label="this.separator = separator", span="34-34", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=red, community=0, file="Specification.cs"];
m5_6 [label="this.defaultValue = defaultValue", span="35-35", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_7 [label="this.conversionType = conversionType", span="36-36", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_8 [label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="28-28", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m5_27 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Specification.cs"];
m5_34 [label="Entry CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs"];
m5_33 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="Specification.cs"];
m5_26 [label="Entry System.Enum.GetNames(System.Type)", span="0-0", cluster="System.Enum.GetNames(System.Type)", file="Specification.cs"];
m5_35 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs"];
m5_9 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_10 [label="System.Collections.Generic.List<string> enumList = new System.Collections.Generic.List<string>()", span="76-76", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_11 [label="property.PropertyType.IsEnum", span="77-77", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_12 [label="enumList.AddRange(Enum.GetNames(property.PropertyType))", span="79-79", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_13 [label="var attrs = property.GetCustomAttributes(true)", span="82-82", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_16 [label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType, enumList)", span="86-86", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_18 [label="return spec.WithLongName(property.Name.ToLowerInvariant(), enumList);", span="89-89", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_22 [label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="97-97", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_14 [label="var oa = attrs.OfType<OptionAttribute>()", span="83-83", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_20 [label="var va = attrs.OfType<ValueAttribute>()", span="94-94", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_15 [label="oa.Count() == 1", span="84-84", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_17 [label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="87-87", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_19 [label="return spec;", span="91-91", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_21 [label="va.Count() == 1", span="95-95", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_23 [label="throw new InvalidOperationException();", span="100-100", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_24 [label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m5_36 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs"];
m5_28 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs"];
m5_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs"];
m5_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Specification.cs"];
m5_37 [label="CommandLine.Core.Specification", span="", file="Specification.cs"];
m6_42 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs"];
m6_15 [label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_16 [label=guardsLookup, span="44-44", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_17 [label="specifications.Any(spec => guard.Item1(spec))", span="46-46", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_19 [label="return specifications;", span="52-52", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_18 [label="throw new ApplicationException(guard.Item2);", span="48-48", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_20 [label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m6_41 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs"];
m6_14 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m6_0 [label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_1 [label="specification == null", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_3 [label="return specification.Tag == SpecificationType.Option;", span="15-15", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_2 [label="throw new ArgumentNullException(''specification'');", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_4 [label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_6 [label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_7 [label="specification == null", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_9 [label="return specification.Tag == SpecificationType.Value;", span="22-22", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_8 [label="throw new ArgumentNullException(''specification'');", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_10 [label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_23 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m6_24 [label="guard.Item1(spec)", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m6_25 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="SpecificationExtensions.cs"];
m6_27 [label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_28 [label="specification == null", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_30 [label="specification.ConversionType.ToDescriptor()", span="59-59", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_34 [label="var min = specification.Min", span="64-64", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_35 [label="var max = specification.Max", span="65-65", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_29 [label="throw new ArgumentNullException(''specification'');", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_31 [label="DescriptorType.Scalar", span="61-61", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_33 [label="DescriptorType.Sequence", span="63-63", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_32 [label="return  Maybe.Just(1);", span="62-62", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_36 [label="min >= 0 && max >= 0", span="66-66", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_37 [label="return Maybe.Just(max);", span="68-68", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_38 [label="return Maybe.Nothing<int>();", span="73-73", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_39 [label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m6_22 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs"];
m6_26 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs"];
m6_40 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs"];
m6_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs"];
m6_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SpecificationExtensions.cs"];
m6_11 [label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m6_12 [label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="27-39", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="SpecificationExtensions.cs"];
m6_13 [label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m6_43 [label=guard, span="", file="SpecificationExtensions.cs"];
m7_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m7_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="16-19", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m7_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, string.Empty, null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, string.Empty, null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="20-24", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs"];
m7_4 [label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="33-33", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m7_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="27-30", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m7_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m7_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs"];
m7_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TokenPartitionerTests.cs"];
m7_13 [label="Entry Unk.True", span="", cluster="Unk.True", file="TokenPartitionerTests.cs"];
m7_17 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs"];
m7_12 [label="Entry Unk.All", span="", cluster="Unk.All", file="TokenPartitionerTests.cs"];
m7_39 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_15 [label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="29-29", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_14 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_19 [label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_18 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_16 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_20 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_22 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_23 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_24 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_34 [label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="55-55", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_33 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_37 [label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_36 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_35 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_38 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_40 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_41 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m7_25 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="TokenPartitionerTests.cs"];
m7_9 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs"];
m7_11 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs"];
m7_26 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs"];
m7_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TokenPartitionerTests.cs"];
m7_10 [label="Entry CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs"];
m7_27 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m7_28 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="42-45", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m7_29 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, string.Empty, null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, string.Empty, null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="46-50", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="TokenPartitionerTests.cs"];
m7_31 [label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="59-59", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m7_30 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="53-56", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m7_32 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m7_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs"];
m7_42 [label=specs, span="", file="TokenPartitionerTests.cs"];
m7_43 [label=result, span="", file="TokenPartitionerTests.cs"];
m7_44 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m7_45 [label=specs, span="", file="TokenPartitionerTests.cs"];
m7_46 [label=result, span="", file="TokenPartitionerTests.cs"];
m7_47 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m8_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m8_1 [label="this.index = index", span="23-23", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m8_2 [label="this.min = -1", span="24-24", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m8_3 [label="this.max = -1", span="25-25", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m8_4 [label="this.separator = string.Empty", span="26-26", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=red, community=0, file="ValueAttribute.cs"];
m8_5 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m8_6 [label="CommandLine.ValueAttribute", span="", file="ValueAttribute.cs"];
m9_0 [label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m9_1 [label="this.index = index", span="14-14", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m9_2 [label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m9_3 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs"];
m9_4 [label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-26", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", color=red, community=0, file="ValueSpecification.cs"];
m9_5 [label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs"];
m9_6 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="ValueSpecification.cs"];
m9_7 [label="CommandLine.Core.ValueSpecification", span="", file="ValueSpecification.cs"];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_34 -> m1_34  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_9  [key=2, style=dotted];
m1_35 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_20  [key=2, style=dotted];
m1_37 -> m1_33  [key=0, style=bold, color=blue];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_162  [key=2, style=dotted];
m1_158 -> m1_117  [key=2, style=dotted];
m1_158 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_9  [key=2, style=dotted];
m1_159 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_46  [key=2, style=dotted];
m1_160 -> m1_11  [key=2, style=dotted];
m1_161 -> m1_157  [key=0, style=bold, color=blue];
m1_166 -> m1_167  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_171  [key=2, style=dotted];
m1_167 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_9  [key=2, style=dotted];
m1_168 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_46  [key=2, style=dotted];
m1_169 -> m1_11  [key=2, style=dotted];
m1_170 -> m1_166  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_127  [key=2, style=dotted];
m1_132 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_9  [key=2, style=dotted];
m1_133 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_56  [key=2, style=dotted];
m1_134 -> m1_57  [key=2, style=dotted];
m1_134 -> m1_58  [key=2, style=dotted];
m1_135 -> m1_131  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m1_1 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_144  [key=2, style=dotted];
m1_149 -> m1_117  [key=2, style=dotted];
m1_149 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_9  [key=2, style=dotted];
m1_150 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_46  [key=2, style=dotted];
m1_151 -> m1_11  [key=2, style=dotted];
m1_152 -> m1_148  [key=0, style=bold, color=blue];
m1_188 -> m1_189  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_21  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_31 -> m1_29  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_32  [key=2, style=dotted];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_6  [key=2, style=dotted];
m1_49 -> m1_47  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_55  [key=2, style=dotted];
m1_61 -> m1_59  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_67  [key=2, style=dotted];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_76  [key=2, style=dotted];
m1_79 -> m1_77  [key=0, style=bold, color=blue];
m1_86 -> m1_87  [key=0, style=solid, color=red];
m1_87 -> m1_88  [key=0, style=solid, color=red];
m1_87 -> m1_85  [key=2, style=dotted, color=red];
m1_88 -> m1_86  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_99 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_67  [key=2, style=dotted];
m1_98 -> m1_96  [key=0, style=bold, color=blue];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=2, style=dotted];
m1_100 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_106  [key=2, style=dotted];
m1_104 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=2, style=dotted];
m1_101 -> m1_99  [key=0, style=bold, color=blue];
m1_103 -> m1_104  [key=0, style=solid];
m1_105 -> m1_103  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_121  [key=2, style=dotted];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_128 -> m1_129  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_127  [key=2, style=dotted];
m1_130 -> m1_128  [key=0, style=bold, color=blue];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_127  [key=2, style=dotted];
m1_138 -> m1_136  [key=0, style=bold, color=blue];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_127  [key=2, style=dotted];
m1_147 -> m1_145  [key=0, style=bold, color=blue];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=2, style=dotted];
m1_155 -> m1_153  [key=0, style=bold, color=blue];
m1_163 -> m1_164  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_6  [key=2, style=dotted];
m1_165 -> m1_163  [key=0, style=bold, color=blue];
m1_172 -> m1_173  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_6  [key=2, style=dotted];
m1_174 -> m1_172  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_6  [key=2, style=dotted];
m1_182 -> m1_180  [key=0, style=bold, color=blue];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_6  [key=2, style=dotted];
m1_190 -> m1_188  [key=0, style=bold, color=blue];
m1_139 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_144  [key=2, style=dotted];
m1_140 -> m1_117  [key=2, style=dotted];
m1_140 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_9  [key=2, style=dotted];
m1_141 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_46  [key=2, style=dotted];
m1_142 -> m1_11  [key=2, style=dotted];
m1_143 -> m1_139  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_67  [key=2, style=dotted];
m1_90 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_91 -> m1_92  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_56  [key=2, style=dotted];
m1_93 -> m1_57  [key=2, style=dotted];
m1_93 -> m1_58  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_95  [key=2, style=dotted];
m1_92 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_92 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_94 -> m1_89  [key=0, style=bold, color=blue];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_171  [key=2, style=dotted];
m1_184 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_9  [key=2, style=dotted];
m1_185 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_46  [key=2, style=dotted];
m1_186 -> m1_11  [key=2, style=dotted];
m1_187 -> m1_183  [key=0, style=bold, color=blue];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_67  [key=2, style=dotted];
m1_63 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_9  [key=2, style=dotted];
m1_64 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_56  [key=2, style=dotted];
m1_65 -> m1_57  [key=2, style=dotted];
m1_65 -> m1_58  [key=2, style=dotted];
m1_66 -> m1_62  [key=0, style=bold, color=blue];
m1_122 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_127  [key=2, style=dotted];
m1_123 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_9  [key=2, style=dotted];
m1_124 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_56  [key=2, style=dotted];
m1_125 -> m1_57  [key=2, style=dotted];
m1_125 -> m1_58  [key=2, style=dotted];
m1_126 -> m1_122  [key=0, style=bold, color=blue];
m1_80 -> m1_81  [key=0, style=solid, color=red];
m1_81 -> m1_82  [key=0, style=solid, color=red];
m1_81 -> m1_85  [key=2, style=dotted, color=red];
m1_81 -> m1_83  [key=1, style=dashed, color=red, label=expectedResult];
m1_82 -> m1_83  [key=0, style=solid, color=red];
m1_82 -> m1_9  [key=2, style=dotted, color=red];
m1_82 -> m1_86  [key=1, style=dashed, color=red, label="lambda expression"];
m1_83 -> m1_84  [key=0, style=solid, color=red];
m1_83 -> m1_56  [key=2, style=dotted, color=red];
m1_83 -> m1_57  [key=2, style=dotted, color=red];
m1_83 -> m1_58  [key=2, style=dotted, color=red];
m1_84 -> m1_80  [key=0, style=bold, color=blue];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_116  [key=2, style=dotted];
m1_112 -> m1_117  [key=2, style=dotted];
m1_112 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_9  [key=2, style=dotted];
m1_113 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_46  [key=2, style=dotted];
m1_114 -> m1_11  [key=2, style=dotted];
m1_115 -> m1_111  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_25 -> m1_25  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_9  [key=2, style=dotted];
m1_26 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_20  [key=2, style=dotted];
m1_28 -> m1_24  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_16 -> m1_16  [key=3, color=darkorchid, style=bold, label="Local variable int expectedResult"];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_9  [key=2, style=dotted];
m1_17 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=2, style=dotted];
m1_19 -> m1_15  [key=0, style=bold, color=blue];
m1_175 -> m1_176  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_171  [key=2, style=dotted];
m1_176 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_9  [key=2, style=dotted];
m1_177 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_46  [key=2, style=dotted];
m1_178 -> m1_11  [key=2, style=dotted];
m1_179 -> m1_175  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_9  [key=2, style=dotted];
m1_52 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_56  [key=2, style=dotted];
m1_53 -> m1_57  [key=2, style=dotted];
m1_53 -> m1_58  [key=2, style=dotted];
m1_54 -> m1_50  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_9  [key=2, style=dotted];
m1_43 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_44 -> m1_11  [key=2, style=dotted];
m1_45 -> m1_41  [key=0, style=bold, color=blue];
m1_71 -> m1_72  [key=0, style=solid, color=green];
m1_72 -> m1_73  [key=0, style=solid, color=green];
m1_72 -> m1_76  [key=2, style=dotted, color=green];
m1_72 -> m1_74  [key=1, style=dashed, color=green, label=expectedResult];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_9  [key=2, style=dotted];
m1_73 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_56  [key=2, style=dotted];
m1_74 -> m1_57  [key=2, style=dotted];
m1_74 -> m1_58  [key=2, style=dotted];
m1_75 -> m1_71  [key=0, style=bold, color=blue];
m1_191 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m1_192 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_192 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_15  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_21  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_19  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_2 -> m2_13  [key=0, style=solid];
m2_2 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_13  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_17  [key=0, style=bold, color=blue];
m2_23 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_10  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m2_23 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m2_23 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=tokenPartitions];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_7  [key=2, style=dotted, color=green];
m3_2 -> m3_8  [key=2, style=dotted, color=green];
m3_2 -> m3_9  [key=2, style=dotted, color=green];
m3_2 -> m3_10  [key=2, style=dotted, color=green];
m3_2 -> m3_11  [key=2, style=dotted, color=green];
m3_2 -> m3_12  [key=2, style=dotted, color=green];
m3_2 -> m3_16  [key=1, style=dashed, color=green, label="lambda expression"];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_15  [key=2, style=dotted];
m3_4 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_28 -> m3_29  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_23  [key=2, style=dotted];
m3_29 -> m3_31  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_9 -> m4_0  [key=2, style=dotted, color=red];
m4_9 -> m4_11  [key=2, style=dotted, color=red];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m4_12 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_12 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_12 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_12 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_12 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m4_12 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_5  [key=1, style=dashed, color=red, label=string];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<object>"];
m5_0 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_0  [key=0, style=bold, color=blue];
m5_35 -> m5_0  [key=3, color=darkorchid, style=bold, label="Field variable CommandLine.Core.SpecificationType tag"];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_9 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_9 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_9 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_9 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_9 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_25  [key=2, style=dotted];
m5_10 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=enumList];
m5_10 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=enumList];
m5_10 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=enumList];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_26  [key=2, style=dotted];
m5_12 -> m5_27  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_28  [key=2, style=dotted];
m5_13 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=attrs];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_31  [key=2, style=dotted];
m5_16 -> m5_32  [key=2, style=dotted];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=spec];
m5_16 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=spec];
m5_18 -> m5_24  [key=0, style=solid];
m5_18 -> m5_33  [key=2, style=dotted];
m5_18 -> m5_34  [key=2, style=dotted];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_31  [key=2, style=dotted];
m5_22 -> m5_35  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_29  [key=2, style=dotted];
m5_14 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=oa];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=va];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=0, style=solid];
m5_15 -> m5_30  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_19 -> m5_24  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=0, style=solid];
m5_21 -> m5_30  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_36  [key=2, style=dotted];
m5_24 -> m5_9  [key=0, style=bold, color=blue];
m5_37 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_37 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_37 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_37 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_37 -> m5_5  [key=1, style=dashed, color=red, label="CommandLine.Core.Specification"];
m5_37 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_37 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m6_15 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m6_15 -> m6_15  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate"];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=0, style=solid];
m6_16 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m6_16 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=guard];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_16  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_19 -> m6_20  [key=0, style=solid];
m6_18 -> m6_20  [key=0, style=solid];
m6_18 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_15  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_8 -> m6_5  [key=2, style=dotted];
m6_10 -> m6_6  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_27 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_27 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_33  [key=0, style=solid];
m6_30 -> m6_40  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=min];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=max];
m6_29 -> m6_39  [key=0, style=solid];
m6_29 -> m6_5  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_32 -> m6_39  [key=0, style=solid];
m6_32 -> m6_41  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=0, style=solid];
m6_37 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [key=2, style=dotted];
m6_39 -> m6_27  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_12 -> m6_13  [key=0, style=solid, color=red];
m6_12 -> m6_14  [key=2, style=dotted, color=red];
m6_13 -> m6_11  [key=0, style=bold, color=blue];
m6_43 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m7_2 -> m7_3  [key=0, style=solid, color=green];
m7_2 -> m7_7  [key=2, style=dotted, color=green];
m7_2 -> m7_8  [key=2, style=dotted, color=green];
m7_2 -> m7_15  [key=1, style=dashed, color=green, label=specs];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_13  [key=2, style=dotted];
m7_4 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_9  [key=2, style=dotted];
m7_3 -> m7_10  [key=2, style=dotted];
m7_3 -> m7_11  [key=2, style=dotted];
m7_3 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_3 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_5 -> m7_0  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=2, style=dotted];
m7_19 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_19 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m7_18 -> m7_19  [key=0, style=solid];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_26  [key=2, style=dotted];
m7_23 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m7_24 -> m7_22  [key=0, style=bold, color=blue];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_17  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_21  [key=2, style=dotted];
m7_37 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_37 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m7_36 -> m7_37  [key=0, style=solid];
m7_35 -> m7_33  [key=0, style=bold, color=blue];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_25  [key=2, style=dotted];
m7_40 -> m7_26  [key=2, style=dotted];
m7_40 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m7_41 -> m7_39  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid, color=green];
m7_28 -> m7_6  [key=2, style=dotted];
m7_28 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m7_29 -> m7_30  [key=0, style=solid, color=green];
m7_29 -> m7_7  [key=2, style=dotted, color=green];
m7_29 -> m7_8  [key=2, style=dotted, color=green];
m7_29 -> m7_34  [key=1, style=dashed, color=green, label=specs];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_12  [key=2, style=dotted];
m7_31 -> m7_13  [key=2, style=dotted];
m7_31 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_9  [key=2, style=dotted];
m7_30 -> m7_10  [key=2, style=dotted];
m7_30 -> m7_11  [key=2, style=dotted];
m7_30 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_30 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_32 -> m7_27  [key=0, style=bold, color=blue];
m7_42 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=specs];
m7_43 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_44 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m7_45 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=specs];
m7_46 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_47 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_6 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m8_6 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m8_6 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m8_6 -> m8_4  [key=1, style=dashed, color=red, label="CommandLine.ValueAttribute"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_4 -> m9_5  [key=0, style=solid, color=red];
m9_4 -> m9_0  [key=2, style=dotted, color=red];
m9_4 -> m9_6  [key=2, style=dotted, color=red];
m9_5 -> m9_3  [key=0, style=bold, color=blue];
m9_7 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
}
