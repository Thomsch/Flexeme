digraph  {
m1_25 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="EnumerableExtensionsExtra.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m1_42 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", span="92-92"];
m1_43 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="var previous = default(T)", span="94-94"];
m1_46 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="yield return new ItemWithContext<T>(current, previous, next);", span="99-99"];
m1_44 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="var current = source.FirstOrDefault()", span="95-95"];
m1_45 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="source.Union(new[] { default(T) }).Skip(1)", span="97-97"];
m1_47 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="previous = current", span="100-100"];
m1_48 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="current = next", span="101-101"];
m1_49 [cluster="CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.WithContext<T>(System.Collections.Generic.IEnumerable<T>)", span="92-92"];
m1_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m1_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m1_29 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="80-80"];
m1_30 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs", label="var array = Array.CreateInstance(type, value.Count())", span="82-82"];
m1_31 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs", label="value.ToArray().CopyTo(array, 0)", span="83-83"];
m1_32 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs", label="return array;", span="84-84"];
m1_33 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="80-80"];
m1_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="32-32"];
m1_24 [cluster="System.Collections.IEnumerator.MoveNext()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m1_35 [cluster="System.Array.CreateInstance(System.Type, int)", file="EnumerableExtensionsExtra.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m1_0 [cluster="CommandLine.Infrastructure.ItemWithContext<T>.ItemWithContext(T, T, T)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.ItemWithContext<T>.ItemWithContext(T, T, T)", span="14-14"];
m1_4 [cluster="CommandLine.Infrastructure.ItemWithContext<T>.ItemWithContext(T, T, T)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.ItemWithContext<T>.ItemWithContext(T, T, T)", span="14-14"];
m1_23 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m1_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_37 [cluster="System.Array.CopyTo(System.Array, int)", file="EnumerableExtensionsExtra.cs", label="Entry System.Array.CopyTo(System.Array, int)", span="0-0"];
m1_38 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="87-87"];
m1_39 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs", label="return !source.Any();", span="89-89"];
m1_40 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="87-87"];
m1_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumerableExtensionsExtra.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_26 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="75-75"];
m1_27 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumerableExtensionsExtra.cs", label="return value;", span="77-77"];
m1_28 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="75-75"];
m1_14 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="32-32"];
m1_20 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="yield return selector(left, right);", span="43-43"];
m1_16 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="enumerator.MoveNext()", span="36-36"];
m1_17 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="var left = enumerator.Current", span="38-38"];
m1_18 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="enumerator.MoveNext()", span="40-40"];
m1_19 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="var right = enumerator.Current", span="42-42"];
m1_21 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="left = right", span="44-44"];
m1_22 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="32-32"];
m1_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="EnumerableExtensionsExtra.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m1_5 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="24-24"];
m1_11 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumerableExtensionsExtra.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="24-24"];
m1_53 [file="EnumerableExtensionsExtra.cs", label="CommandLine.Infrastructure.ItemWithContext<T>", span=""];
m2_48 [cluster="System.Action<T>.Invoke(T)", file="Maybe.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_12 [cluster="CSharpx.Just<T>.Just(T)", file="Maybe.cs", label="Entry CSharpx.Just<T>.Just(T)", span="58-58"];
m2_13 [cluster="CSharpx.Just<T>.Just(T)", file="Maybe.cs", label="this.value = value", span="61-61"];
m2_14 [cluster="CSharpx.Just<T>.Just(T)", file="Maybe.cs", label="Exit CSharpx.Just<T>.Just(T)", span="58-58"];
m2_34 [cluster="System.Func<T, TResult>.Invoke(T)", file="Maybe.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_70 [cluster="System.ArgumentException.ArgumentException(string)", file="Maybe.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_56 [cluster="CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", file="Maybe.cs", label="Entry CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m2_49 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143"];
m2_50 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="Maybe.cs", label="return maybe.Map(selector);", span="146-146"];
m2_51 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="143-143"];
m2_52 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="Maybe.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="118-118"];
m2_39 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126"];
m2_40 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="Maybe.cs", label="T1 value1", span="128-128"];
m2_41 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="Maybe.cs", label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : noneValue;", span="129-131"];
m2_42 [cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126"];
m2_64 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160"];
m2_65 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="T value", span="162-162"];
m2_66 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="maybe.MatchJust(out value)", span="163-163"];
m2_68 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="167-167"];
m2_67 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="return value;", span="165-165"];
m2_69 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160"];
m2_18 [cluster="CSharpx.Maybe.Just<T>(T)", file="Maybe.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m2_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="Maybe.cs", label="return new Just<T>(value);", span="82-82"];
m2_20 [cluster="CSharpx.Maybe.Just<T>(T)", file="Maybe.cs", label="Exit CSharpx.Maybe.Just<T>(T)", span="80-80"];
m2_60 [cluster="lambda expression", file="Maybe.cs", label="Entry lambda expression", span="157-157"];
m2_58 [cluster="lambda expression", file="Maybe.cs", label="valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue))", span="155-157"];
m2_61 [cluster="lambda expression", file="Maybe.cs", label="resultSelector(sourceValue, resultValue)", span="157-157"];
m2_57 [cluster="lambda expression", file="Maybe.cs", label="Entry lambda expression", span="155-157"];
m2_59 [cluster="lambda expression", file="Maybe.cs", label="Exit lambda expression", span="155-157"];
m2_62 [cluster="lambda expression", file="Maybe.cs", label="Exit lambda expression", span="157-157"];
m2_74 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175"];
m2_75 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="return maybe.Tag == MaybeType.Just;", span="177-177"];
m2_76 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175"];
m2_30 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m2_31 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="Maybe.cs", label="T1 value1", span="112-112"];
m2_32 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="Maybe.cs", label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : Maybe.Nothing<T2>();", span="113-115"];
m2_33 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110"];
m2_71 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170"];
m2_72 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="return maybe.Tag == MaybeType.Nothing;", span="172-172"];
m2_73 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170"];
m2_21 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="Maybe.cs", label="Entry CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89"];
m2_22 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="Maybe.cs", label="either.Tag == Either2Type.Either1Of2", span="91-91"];
m2_23 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="Maybe.cs", label="return new Just<T1>(((Either1Of2<T1, T2>)either).Value);", span="93-93"];
m2_24 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="Maybe.cs", label="return new Nothing<T1>();", span="95-95"];
m2_25 [cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="Maybe.cs", label="Exit CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89"];
m2_15 [cluster="CSharpx.Maybe.Nothing<T>()", file="Maybe.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m2_16 [cluster="CSharpx.Maybe.Nothing<T>()", file="Maybe.cs", label="return new Nothing<T>();", span="77-77"];
m2_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="Maybe.cs", label="Exit CSharpx.Maybe.Nothing<T>()", span="75-75"];
m2_3 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="Maybe.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m2_4 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="Maybe.cs", label="return Tag == MaybeType.Nothing;", span="31-31"];
m2_5 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="Maybe.cs", label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m2_29 [cluster="object.Equals(object, object)", file="Maybe.cs", label="Entry object.Equals(object, object)", span="0-0"];
m2_10 [cluster="CSharpx.Nothing<T>.Nothing()", file="Maybe.cs", label="Entry CSharpx.Nothing<T>.Nothing()", span="48-48"];
m2_11 [cluster="CSharpx.Nothing<T>.Nothing()", file="Maybe.cs", label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48"];
m2_43 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m2_44 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="Maybe.cs", label="T value", span="136-136"];
m2_45 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="Maybe.cs", label="maybe.MatchJust(out value)", span="137-137"];
m2_46 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="Maybe.cs", label="action(value)", span="139-139"];
m2_47 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134"];
m2_53 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m2_54 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="Maybe.cs", label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157"];
m2_55 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149"];
m2_0 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="Maybe.cs", label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19"];
m2_1 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="Maybe.cs", label="this.tag = tag", span="21-21"];
m2_2 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="Maybe.cs", label="Exit CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19"];
m2_26 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m2_27 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="Maybe.cs", label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="107-107"];
m2_28 [cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105"];
m2_63 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="Maybe.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_35 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="Maybe.cs", label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m2_36 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="Maybe.cs", label="T1 value1", span="120-120"];
m2_37 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="Maybe.cs", label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", span="121-123"];
m2_38 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="Maybe.cs", label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118"];
m2_6 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="Maybe.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m2_7 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="Maybe.cs", label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", span="36-38"];
m2_8 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="Maybe.cs", label="return Tag == MaybeType.Just;", span="39-39"];
m2_9 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="Maybe.cs", label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34"];
m2_77 [file="Maybe.cs", label="CSharpx.Maybe<T>", span=""];
m2_78 [file="Maybe.cs", label="CSharpx.Just<T>", span=""];
m2_79 [file="Maybe.cs", label="System.Func<TSource, CSharpx.Maybe<TValue>>", span=""];
m2_80 [file="Maybe.cs", label="System.Func<TSource, TValue, TResult>", span=""];
m2_81 [file="Maybe.cs", label=TSource, span=""];
m1_42 -> m1_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=previous, style=dashed];
m1_44 -> m1_46  [color=darkseagreen4, key=1, label=current, style=dashed];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=array, style=dashed];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label=left, style=dashed];
m2_39 -> m2_41  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m2_41 -> m2_41  [color=darkseagreen4, key=1, label=value1, style=dashed];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m2_64 -> m2_68  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m2_58 -> m2_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_57 -> m2_61  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m2_32 -> m2_32  [color=darkseagreen4, key=1, label=value1, style=dashed];
m2_21 -> m2_23  [color=darkseagreen4, key=1, label="CSharpx.Either<T1, T2>", style=dashed];
m2_43 -> m2_45  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m2_43 -> m2_46  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m2_53 -> m2_58  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m2_53 -> m2_61  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m2_54 -> m2_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m2_37 -> m2_37  [color=darkseagreen4, key=1, label=value1, style=dashed];
m2_7 -> m2_9  [color=darkseagreen4, key=1, label="out T", style=dashed];
m2_77 -> m2_4  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m2_77 -> m2_8  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m2_79 -> m2_58  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m2_80 -> m2_58  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m2_80 -> m2_61  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m2_81 -> m2_61  [color=darkseagreen4, key=1, label=TSource, style=dashed];
}
