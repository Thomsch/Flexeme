digraph  {
m0_0 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
m0_1 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="number == 2", span="10-10"];
m0_2 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="return resourceKey + DualPostfix;", span="11-11"];
m0_3 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="number >= 3 && number <= 10", span="14-14"];
m0_4 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="return resourceKey + PluralPostfix;", span="15-15"];
m0_5 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="return resourceKey;", span="17-17"];
m0_6 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", file="HelpTextTests.cs", label="Exit Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
m1_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="101-101"];
m1_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="string.IsNullOrWhiteSpace(''message'')", span="103-103"];
m1_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="writer == null", span="104-104"];
m1_32 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="writer.WriteLine(\r\n                new StringBuilder(programName.Length + message.Length + 2)\r\n                    .Append(programName)\r\n                    .Append('': '')\r\n                    .Append(message)\r\n                    .ToString())", span="106-111"];
m1_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="throw new ArgumentException(''message'');", span="103-103"];
m1_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="throw new ArgumentNullException(''writer'');", span="104-104"];
m1_33 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="101-101"];
m1_35 [cluster="System.IO.TextWriter.WriteLine(string)", file="Identity.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m1_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="120-120"];
m1_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Identity.cs", label="WriteMessage(message, Console.Out)", span="122-122"];
m1_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="120-120"];
m1_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m1_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m1_23 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="Identity.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_15 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="74-74"];
m1_16 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="Identity.cs", label="return info.ToString();", span="76-76"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="74-74"];
m1_18 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="83-83"];
m1_19 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="Identity.cs", label="var isVersionNull = string.IsNullOrEmpty(version)", span="85-85"];
m1_20 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="Identity.cs", label="return new StringBuilder(programName.Length +\r\n                    (!isVersionNull ? version.Length + 1 : 0))\r\n                .Append(programName)\r\n                .AppendWhen(!isVersionNull, '' '', version)\r\n                .ToString();", span="86-90"];
m1_21 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="83-83"];
m1_12 [cluster="lambda expression", file="Identity.cs", label="Entry lambda expression", span="63-63"];
m1_8 [cluster="lambda expression", file="Identity.cs", label="Entry lambda expression", span="59-59"];
m1_9 [cluster="lambda expression", file="Identity.cs", label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="59-59"];
m1_10 [cluster="lambda expression", file="Identity.cs", label="Exit lambda expression", span="59-59"];
m1_13 [cluster="lambda expression", file="Identity.cs", label="versionAttribute.InformationalVersion", span="63-63"];
m1_14 [cluster="lambda expression", file="Identity.cs", label="Exit lambda expression", span="63-63"];
m1_22 [cluster="string.IsNullOrEmpty(string)", file="Identity.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_25 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Identity.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_11 [cluster="System.IO.Path.GetFileNameWithoutExtension(string)", file="Identity.cs", label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0"];
m1_26 [cluster="System.Text.StringBuilder.ToString()", file="Identity.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Identity.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_24 [cluster="System.Text.StringBuilder.Append(string)", file="Identity.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_39 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="Identity.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="131-131"];
m1_40 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="Identity.cs", label="WriteMessage(message, Console.Error)", span="133-133"];
m1_41 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="Identity.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="131-131"];
m1_7 [cluster="System.ArgumentException.ArgumentException(string)", file="Identity.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_6 [cluster="string.IsNullOrWhiteSpace(string)", file="Identity.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_42 [file="Identity.cs", label="CommandLine.Text.HeadingInfo", span=""];
m2_51 [cluster="Unk.SingleOrDefault", file="InstanceBuilderTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m2_7 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="81-81"];
m2_62 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceBuilderTests.cs", label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="83-83"];
m2_63 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="81-81"];
m2_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m2_30 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m2_34 [cluster="Unk.MakeNotParsed", file="InstanceBuilderTests.cs", label="Entry Unk.MakeNotParsed", span=""];
m2_29 [cluster="Unk.Any", file="InstanceBuilderTests.cs", label="Entry Unk.Any", span=""];
m2_16 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilderTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_64 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m2_33 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m2_53 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m2_20 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
m2_25 [cluster="System.StringComparer.Equals(string, string)", file="InstanceBuilderTests.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m2_41 [cluster="Unk.Single", file="InstanceBuilderTests.cs", label="Entry Unk.Single", span=""];
m2_52 [cluster="Unk.ToMaybe", file="InstanceBuilderTests.cs", label="Entry Unk.ToMaybe", span=""];
m2_5 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilderTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_26 [cluster="string.Concat(string, string)", file="InstanceBuilderTests.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_58 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="76-76"];
m2_9 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="var firstArg = arguments.First()", span="24-24"];
m2_10 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Func<string, bool> preprocCompare = command =>\r\n                        nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="26-28"];
m2_23 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="27-28"];
m2_11 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="var verbs = Verb.SelectFromTypes(types)", span="30-30"];
m2_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="return preprocCompare(''help'')\r\n                    ? MakeNotParsed(types,\r\n                        MakeHelpVerbRequestedError(verbs,\r\n                            arguments.Skip(1).FirstOrDefault() ?? string.Empty, nameComparer))\r\n                    : preprocCompare(''version'')\r\n                        ? MakeNotParsed(types, new VersionRequestedError())\r\n                        : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", span="32-38"];
m2_8 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="22-39"];
m2_13 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="22-39"];
m2_22 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="26-28"];
m2_24 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="26-28"];
m2_39 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="58-58"];
m2_44 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="58-58"];
m2_35 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="54-54"];
m2_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="57-58"];
m2_46 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="64-64"];
m2_37 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="54-54"];
m2_40 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="57-58"];
m2_43 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="58-58"];
m2_45 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="58-58"];
m2_47 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="v.Item2", span="64-64"];
m2_48 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="64-64"];
m2_56 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="73-73"];
m2_55 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="73-73"];
m2_57 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="73-73"];
m2_59 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="76-76"];
m2_60 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="76-76"];
m2_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_65 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m2_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m2_21 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46"];
m2_28 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46"];
m2_19 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67"];
m2_50 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67"];
m2_32 [cluster="Unk.Select", file="InstanceBuilderTests.cs", label="Entry Unk.Select", span=""];
m2_6 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m2_54 [cluster="Unk.Return", file="InstanceBuilderTests.cs", label="Entry Unk.Return", span=""];
m2_42 [cluster="Unk.AutoDefault", file="InstanceBuilderTests.cs", label="Entry Unk.AutoDefault", span=""];
m2_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m2_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m2_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="return arguments.Any()\r\n                ? choose()\r\n                : MakeNotParsed(types, new NoVerbSelectedError());", span="41-43"];
m2_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m2_15 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m2_61 [cluster="HelpVerbRequestedError.cstr", file="InstanceBuilderTests.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m2_66 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m2_67 [file="InstanceBuilderTests.cs", label="System.StringComparer", span=""];
m2_68 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<System.Type>", span=""];
m2_69 [file="InstanceBuilderTests.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span=""];
m2_70 [file="InstanceBuilderTests.cs", label="System.Globalization.CultureInfo", span=""];
m2_71 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span=""];
m2_72 [file="InstanceBuilderTests.cs", label=firstArg, span=""];
m2_73 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m2_74 [file="InstanceBuilderTests.cs", label="System.StringComparer", span=""];
m2_75 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m2_76 [file="InstanceBuilderTests.cs", label=string, span=""];
m2_77 [file="InstanceBuilderTests.cs", label="System.StringComparer", span=""];
m4_45 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129"];
m4_49 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(result.Value)", prediction=0, span="143-143"];
m4_46 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="132-132"];
m4_47 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="135-139"];
m4_48 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(result.Value)", prediction=1, span="142-142"];
m4_50 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129"];
m4_17 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooserTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m4_18 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m4_21 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=2, span="66-66"];
m4_20 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="59-63"];
m4_22 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(((NotParsed<object>)result).Errors))", span="67-67"];
m4_19 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="56-56"];
m4_23 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53"];
m4_44 [cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13"];
m4_6 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m4_7 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m4_10 [cluster="Unk.True", file="InstanceChooserTests.cs", label="Entry Unk.True", span=""];
m4_30 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m4_34 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(result.Value)", prediction=3, span="105-105"];
m4_31 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94"];
m4_32 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101"];
m4_33 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<AddOptions>(result.Value)", prediction=4, span="104-104"];
m4_35 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91"];
m4_36 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m4_0 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m4_3 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=5, span="28-28"];
m4_2 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25"];
m4_4 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(((NotParsed<object>)result).Errors))", span="29-29"];
m4_1 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18"];
m4_5 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15"];
m4_11 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m4_14 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=6, span="47-47"];
m4_13 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="40-44"];
m4_15 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(((NotParsed<object>)result).Errors))", span="48-48"];
m4_12 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="37-37"];
m4_16 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34"];
m4_8 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m4_24 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m4_27 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<NullInstance>(result.Value)", prediction=7, span="85-85"];
m4_26 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82"];
m4_28 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Assert.True(expectedErrors.SequenceEqual(((NotParsed<object>)result).Errors))", span="86-86"];
m4_25 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75"];
m4_29 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72"];
m4_52 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152"];
m4_56 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=green, community=0, file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(result.Value)", prediction=8, span="166-166"];
m4_53 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="155-155"];
m4_54 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="158-162"];
m4_55 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<SequenceOptions>(result.Value)", prediction=9, span="165-165"];
m4_57 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152"];
m4_38 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110"];
m4_42 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="expected.ShouldBeEquivalentTo(result.Value)", prediction=10, span="124-124"];
m4_39 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="var expected = new ImmutableAddOptions(true, default(bool), ''dummy.bin'')", span="113-113"];
m4_40 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(ImmutableAddOptions), typeof(ImmutableCommitOptions), typeof(ImmutableCloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m4_41 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", color=green, community=0, file="InstanceChooserTests.cs", label="Assert.IsType<ImmutableAddOptions>(result.Value)", prediction=11, span="123-123"];
m4_43 [cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="InstanceChooserTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110"];
m4_51 [cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="InstanceChooserTests.cs", label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="48-48"];
m4_37 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceChooserTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m4_9 [cluster="Unk.SequenceEqual", file="InstanceChooserTests.cs", label="Entry Unk.SequenceEqual", span=""];
m7_0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m7_1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="result.Tag == ResultType.Ok", span="14-14"];
m7_2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16"];
m7_4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return Enumerable.Empty<TMessage>();", span="19-19"];
m7_3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return ok.Value.Messages;", span="17-17"];
m7_5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m7_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ResultExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_42 -> m1_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m1_42 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m1_42 -> m1_37  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m1_42 -> m1_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m2_9 -> m2_23  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m2_10 -> m2_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m2_39 -> m2_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_21 -> m2_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m2_21 -> m2_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_19 -> m2_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_23  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_12  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m2_66 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_67 -> m2_23  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_67 -> m2_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_68 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m2_69 -> m2_12  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m2_70 -> m2_12  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_71 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m2_72 -> m2_23  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m2_73 -> m2_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_73 -> m2_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_74 -> m2_39  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_74 -> m2_44  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_75 -> m2_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m2_76 -> m2_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_77 -> m2_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m4_46 -> m4_49  [color=green, key=1, label=expected, style=dashed];
m4_47 -> m4_49  [color=green, key=1, label=result, style=dashed];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_19 -> m4_22  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m4_31 -> m4_34  [color=green, key=1, label=expected, style=dashed];
m4_32 -> m4_34  [color=green, key=1, label=result, style=dashed];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m4_26 -> m4_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label=expectedErrors, style=dashed];
m4_53 -> m4_56  [color=green, key=1, label=expected, style=dashed];
m4_54 -> m4_56  [color=green, key=1, label=result, style=dashed];
m4_39 -> m4_42  [color=green, key=1, label=expected, style=dashed];
m4_40 -> m4_42  [color=green, key=1, label=result, style=dashed];
}
