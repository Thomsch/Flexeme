digraph  {
n341 [label=options, span=""];
n0 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n2 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n3 [cluster="Unk.>", label="Entry Unk.>", span=""];
n4 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
n5 [cluster="lambda expression", label="new Parser().ParseArguments(null, new SimpleOptions())", span="46-46"];
n6 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
n7 [cluster="CommandLine.Parser.Parser()", label="Entry CommandLine.Parser.Parser()", span="55-55"];
n8 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
n9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141"];
n10 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n11 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(new string[] {}, null))", span="52-53"];
n12 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n13 [cluster="lambda expression", label="Entry lambda expression", span="53-53"];
n14 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, null)", span="53-53"];
n15 [cluster="lambda expression", label="Exit lambda expression", span="53-53"];
n16 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n17 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var options = new SimpleOptions()", span="59-59"];
n18 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var parser = new Parser()", span="60-60"];
n21 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="options.StringValue.Should().Be(''something'')", span="64-64"];
n22 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Console.WriteLine(options)", span="65-65"];
n20 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="result.Should().BeTrue()", span="63-63"];
n24 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n25 [cluster="Unk.BeTrue", label="Entry Unk.BeTrue", span=""];
n26 [cluster="Unk.Be", label="Entry Unk.Be", span=""];
n23 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n27 [cluster="System.Console.WriteLine(object)", label="Entry System.Console.WriteLine(object)", span="0-0"];
n28 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n29 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="var options = new SimpleOptions()", span="71-71"];
n34 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.IntegerValue.Should().Be(100)", span="78-78"];
n35 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.BooleanValue.Should().BeTrue()", span="79-79"];
n36 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Console.WriteLine(options)", span="80-80"];
n32 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="result.Should().BeTrue()", span="76-76"];
n37 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n38 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n39 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var options = new BooleanSetOptions()", span="86-86"];
n40 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var parser = new Parser()", span="87-87"];
n49 [cluster="CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", label="Entry CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
n41 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var result = parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="88-88"];
n43 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanThree.Should().BeTrue()", span="91-91"];
n44 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanOne.Should().BeTrue()", span="92-92"];
n45 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanTwo.Should().BeFalse()", span="93-93"];
n46 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.NonBooleanValue.Should().Be(65D)", span="94-94"];
n47 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Console.WriteLine(options)", span="95-95"];
n42 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="result.Should().BeTrue()", span="90-90"];
n50 [cluster="Unk.BeFalse", label="Entry Unk.BeFalse", span=""];
n48 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n51 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n52 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var options = new BooleanSetOptions()", span="101-101"];
n53 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var parser = new Parser()", span="102-102"];
n54 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var result = parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="103-103"];
n56 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanTwo.Should().BeTrue()", span="106-106"];
n57 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanOne.Should().BeFalse()", span="107-107"];
n58 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanThree.Should().BeFalse()", span="108-108"];
n59 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.NonBooleanValue.Should().Be(9D)", span="109-109"];
n60 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Console.WriteLine(options)", span="110-110"];
n55 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="result.Should().BeTrue()", span="105-105"];
n61 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n62 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n63 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var options = new SimpleOptionsWithOptionList()", span="116-116"];
n64 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var parser = new Parser()", span="117-117"];
n76 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
n65 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var result = parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
n67 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[0].Should().Be(''string1'')", span="122-122"];
n68 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
n69 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[1].Should().Be(''stringTwo'')", span="124-124"];
n70 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
n71 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[2].Should().Be(''stringIII'')", span="126-126"];
n72 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
n73 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.StringValue.Should().Be(''test-file.txt'')", span="128-128"];
n74 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.StringValue)", span="129-129"];
n66 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="result.Should().BeTrue()", span="121-121"];
n77 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n75 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n78 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Entry CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n79 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var options = new SimpleOptions()", span="136-136"];
n80 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var parser = new Parser()", span="137-137"];
n81 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var result = parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
n83 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Console.WriteLine(options)", span="140-140"];
n82 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="result.Should().BeFalse()", span="139-139"];
n84 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Exit CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n85 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n86 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
n87 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var parser = new Parser()", span="148-148"];
n94 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
n88 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var result = parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
n90 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.StringValue.Should().Be(''data.bin'')", span="152-152"];
n91 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.FileAccess.Should().Be(FileAccess.ReadWrite)", span="153-153"];
n92 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Console.WriteLine(options)", span="154-154"];
n89 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="result.Should().BeTrue()", span="151-151"];
n93 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n95 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n96 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var options = new NumberSetOptions()", span="162-162"];
n97 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var parser = new Parser(new ParserSettings { ParsingCulture = new CultureInfo(''it-IT'') })", span="163-163"];
n102 [cluster="CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", label="Entry CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", span="34-34"];
n98 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="164-164"];
n100 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="options.DoubleValue.Should().Be(10.986D)", span="167-167"];
n103 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
n104 [cluster="CommandLine.ParserSettings.ParserSettings()", label="Entry CommandLine.ParserSettings.ParserSettings()", span="43-43"];
n105 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n99 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="result.Should().BeTrue()", span="166-166"];
n101 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n106 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n107 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="175-175"];
n108 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="176-176"];
n114 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="184-184"];
n109 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var options = new NumberSetOptions()", span="177-177"];
n110 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var parser = new Parser()", span="178-178"];
n111 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var result = parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="179-179"];
n113 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="options.NullableDoubleValue.Should().Be(12.32982D)", span="182-182"];
n112 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="result.Should().BeTrue()", span="181-181"];
n115 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n116 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n117 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var options = new SimpleOptionsWithDefaults()", span="190-190"];
n118 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var parser = new Parser()", span="191-191"];
n125 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="32-32"];
n119 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var result = parser.ParseArguments(new string[] {}, options)", span="192-192"];
n121 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.StringValue.Should().Be(''str'')", span="195-195"];
n122 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.IntegerValue.Should().Be(9)", span="196-196"];
n123 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.BooleanValue.Should().BeTrue()", span="197-197"];
n120 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="result.Should().BeTrue()", span="194-194"];
n124 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n126 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n127 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var options = new SimpleOptionsWithDefaultArray()", span="203-203"];
n128 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var parser = new Parser()", span="204-204"];
n135 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
n129 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var result = parser.ParseArguments(new [] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="205-205"];
n131 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.StringArrayValue.Should().Equal(new [] { ''a'', ''b'', ''c'' })", span="208-208"];
n132 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.IntegerArrayValue.Should().Equal(new [] { 4, 5, 6 })", span="209-209"];
n133 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.DoubleArrayValue.Should().Equal(new [] { 1.1, 2.2, 3.3 })", span="210-210"];
n130 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="result.Should().BeTrue()", span="207-207"];
n136 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n134 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n137 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n138 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="var options = new SimpleOptionsWithBadDefaults()", span="216-216"];
n139 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Assert.Throws<ParserException>(\r\n                () => new Parser().ParseArguments(new string[] {}, options))", span="217-218"];
n141 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="32-32"];
n143 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, options)", span="218-218"];
n140 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n142 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
n144 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
n145 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n146 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="225-225"];
n147 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="226-226"];
n148 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''-x'' }, options)", span="227-227"];
n149 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="229-229"];
n150 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n151 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n152 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="235-235"];
n153 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="236-236"];
n154 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''--extend'' }, options)", span="237-237"];
n155 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="239-239"];
n156 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n157 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n158 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var parser = new Parser()", span="247-247"];
n159 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var options = new MixedCaseOptions()", span="248-248"];
n160 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="249-249"];
n165 [cluster="CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", label="Entry CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", span="31-31"];
n162 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="252-252"];
n163 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="253-253"];
n161 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="result.Should().BeTrue()", span="251-251"];
n164 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n166 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n167 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var parser = new Parser()", span="259-259"];
n168 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var options = new MixedCaseOptions()", span="260-260"];
n169 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="261-261"];
n170 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="result.Should().BeFalse()", span="263-263"];
n171 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n172 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n173 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var parser = new Parser(new ParserSettings(false))", span="269-269"];
n174 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var options = new MixedCaseOptions()", span="270-270"];
n180 [cluster="CommandLine.ParserSettings.ParserSettings(bool)", label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="53-53"];
n175 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="271-271"];
n177 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="274-274"];
n178 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="275-275"];
n176 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="result.Should().BeTrue()", span="273-273"];
n179 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n181 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n182 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var options = new SimpleOptions()", span="283-283"];
n183 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var parser = new Parser()", span="284-284"];
n184 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--string'' }, options)", span="285-285"];
n185 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="result.Should().BeFalse()", span="287-287"];
n186 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n187 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n188 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var options = new NumberSetOptions()", span="293-293"];
n189 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var parser = new Parser()", span="294-294"];
n190 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--byte'' }, options)", span="295-295"];
n191 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="result.Should().BeFalse()", span="297-297"];
n192 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n193 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n194 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var options = new NumberSetOptions()", span="303-303"];
n195 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var parser = new Parser()", span="304-304"];
n196 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--short'' }, options)", span="305-305"];
n197 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="result.Should().BeFalse()", span="307-307"];
n198 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n199 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n200 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var options = new NumberSetOptions()", span="313-313"];
n201 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var parser = new Parser()", span="314-314"];
n202 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--int'' }, options)", span="315-315"];
n203 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="result.Should().BeFalse()", span="317-317"];
n204 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n205 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n206 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var options = new NumberSetOptions()", span="323-323"];
n207 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var parser = new Parser()", span="324-324"];
n208 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--long'' }, options)", span="325-325"];
n209 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="result.Should().BeFalse()", span="327-327"];
n210 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n211 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n212 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var options = new NumberSetOptions()", span="333-333"];
n213 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var parser = new Parser()", span="334-334"];
n214 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--float'' }, options)", span="335-335"];
n215 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="result.Should().BeFalse()", span="337-337"];
n216 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n217 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n218 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var options = new NumberSetOptions()", span="343-343"];
n219 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var parser = new Parser()", span="344-344"];
n220 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--double'' }, options)", span="345-345"];
n221 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="result.Should().BeFalse()", span="347-347"];
n222 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n223 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n224 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var options = new SimpleOptions()", span="355-355"];
n225 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var parser = new Parser()", span="356-356"];
n226 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var result = parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="357-357"];
n228 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="options.StringValue.Should().Be(''-'')", span="360-360"];
n227 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="result.Should().BeTrue()", span="359-359"];
n229 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n230 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n231 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var options = new SimpleOptionsWithValueList()", span="366-366"];
n232 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var parser = new Parser()", span="367-367"];
n240 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
n233 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var result = parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="368-368"];
n235 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.StringValue.Should().Be(''parser.xml'')", span="371-371"];
n236 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.BooleanValue.Should().BeTrue()", span="372-372"];
n237 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items.Count.Should().Be(1)", span="373-373"];
n238 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items[0].Should().Be(''-'')", span="374-374"];
n234 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="result.Should().BeTrue()", span="370-370"];
n239 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n241 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n242 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var options = new SimpleOptions()", span="382-382"];
n243 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var parser = new Parser()", span="383-383"];
n244 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var result = parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="384-384"];
n246 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="options.IntegerValue.Should().Be(-4096)", span="387-387"];
n245 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="result.Should().BeTrue()", span="386-386"];
n247 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n248 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n249 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var options = new NumberSetOptions()", span="392-392"];
n250 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var parser = new Parser()", span="393-393"];
n251 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var result = parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="394-394"];
n253 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="options.IntegerValue.Should().Be(-4096)", span="397-397"];
n252 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="result.Should().BeTrue()", span="396-396"];
n254 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n255 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n256 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var options = new NumberSetOptions()", span="402-402"];
n257 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var parser = new Parser()", span="403-403"];
n258 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var result = parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="404-404"];
n260 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="options.IntegerValue.Should().Be(-4096)", span="407-407"];
n259 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="result.Should().BeTrue()", span="406-406"];
n261 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n262 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n263 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var options = new NumberSetOptions()", span="412-412"];
n264 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var parser = new Parser()", span="413-413"];
n265 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var result = parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="414-414"];
n267 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="options.IntegerValue.Should().Be(-4096)", span="417-417"];
n266 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="result.Should().BeTrue()", span="416-416"];
n268 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n269 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n270 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var options = new NumberSetOptions()", span="424-424"];
n271 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var parser = new Parser()", span="425-425"];
n272 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="426-426"];
n274 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="429-429"];
n273 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="result.Should().BeTrue()", span="428-428"];
n275 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n276 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n277 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var options = new NumberSetOptions()", span="435-435"];
n278 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var parser = new Parser()", span="436-436"];
n279 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var result = parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="437-437"];
n281 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="440-440"];
n280 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="result.Should().BeTrue()", span="439-439"];
n282 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n283 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n284 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var options = new NumberSetOptions()", span="446-446"];
n285 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var parser = new Parser()", span="447-447"];
n286 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var result = parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="448-448"];
n288 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="451-451"];
n287 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="result.Should().BeTrue()", span="450-450"];
n289 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n290 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n291 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var options = new NumberSetOptions()", span="457-457"];
n292 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var parser = new Parser()", span="458-458"];
n293 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var result = parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="459-459"];
n295 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="462-462"];
n294 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="result.Should().BeTrue()", span="461-461"];
n296 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n297 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n298 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="470-470"];
n299 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var parser = new Parser()", span="471-471"];
n300 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="472-472"];
n301 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="474-474"];
n303 [cluster="short.ToString(System.IFormatProvider)", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
n302 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n304 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n305 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="480-480"];
n306 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var parser = new Parser()", span="481-481"];
n307 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="482-482"];
n308 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="484-484"];
n310 [cluster="int.ToString(System.IFormatProvider)", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
n309 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n311 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n312 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="490-490"];
n313 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var parser = new Parser()", span="491-491"];
n314 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="492-492"];
n315 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="494-494"];
n317 [cluster="long.ToString(System.IFormatProvider)", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
n316 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n318 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n319 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="500-500"];
n320 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var parser = new Parser()", span="501-501"];
n321 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="502-502"];
n322 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="504-504"];
n324 [cluster="float.ToString(System.IFormatProvider)", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
n323 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n325 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n326 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="510-510"];
n327 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var parser = new Parser()", span="511-511"];
n328 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="512-512"];
n329 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="514-514"];
n331 [cluster="double.ToString(System.IFormatProvider)", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
n330 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n332 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n333 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var options = new ComplexOptions()", span="525-525"];
n334 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var parser = new Parser()", span="526-526"];
n339 [cluster="CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", label="Entry CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", span="37-37"];
n335 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var result = parser.ParseArguments(new[] { ''-i'', ''-o'' }, options)", span="527-527"];
n337 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="options.LastParserState.Errors.Count.Should().BeGreaterThan(0)", span="531-531"];
n336 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="result.Should().BeFalse()", span="529-529"];
n338 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n340 [cluster="Unk.BeGreaterThan", label="Entry Unk.BeGreaterThan", span=""];
n341 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n11 -> n13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=options, style=dashed];
n17 -> n22  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n34  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n35  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n36  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n43  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n44  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n45  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n46  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n47  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n56  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n57  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n58  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n59  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n60  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n67  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n69  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n70  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n71  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n72  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n73  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n74  [color=darkseagreen4, key=1, label=options, style=dashed];
n79 -> n83  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n90  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n92  [color=darkseagreen4, key=1, label=options, style=dashed];
n96 -> n100  [color=darkseagreen4, key=1, label=options, style=dashed];
n109 -> n113  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n121  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n122  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n123  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n131  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n132  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n133  [color=darkseagreen4, key=1, label=options, style=dashed];
n138 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n139 -> n142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n159 -> n162  [color=darkseagreen4, key=1, label=options, style=dashed];
n159 -> n163  [color=darkseagreen4, key=1, label=options, style=dashed];
n174 -> n177  [color=darkseagreen4, key=1, label=options, style=dashed];
n174 -> n178  [color=darkseagreen4, key=1, label=options, style=dashed];
n224 -> n228  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n235  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n236  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n237  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n238  [color=darkseagreen4, key=1, label=options, style=dashed];
n242 -> n246  [color=darkseagreen4, key=1, label=options, style=dashed];
n249 -> n253  [color=darkseagreen4, key=1, label=options, style=dashed];
n256 -> n260  [color=darkseagreen4, key=1, label=options, style=dashed];
n263 -> n267  [color=darkseagreen4, key=1, label=options, style=dashed];
n270 -> n274  [color=darkseagreen4, key=1, label=options, style=dashed];
n277 -> n281  [color=darkseagreen4, key=1, label=options, style=dashed];
n284 -> n288  [color=darkseagreen4, key=1, label=options, style=dashed];
n291 -> n295  [color=darkseagreen4, key=1, label=options, style=dashed];
n333 -> n337  [color=darkseagreen4, key=1, label=options, style=dashed];
}
