digraph  {
m2_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m2_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m2_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79"];
m2_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m2_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m2_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m2_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m2_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m2_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m2_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m2_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m2_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="HelpTextTests.cs", label="Assert.Equal(''post-options'', lines[5])", prediction=0, span="63-63"];
m2_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m2_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m2_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130"];
m2_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="131-131"];
m2_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132"];
m2_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135"];
m2_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136"];
m2_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138"];
m2_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139"];
m2_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="140-140"];
m2_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                Help Text.'')", span="141-141"];
m2_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126"];
m2_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m2_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150"];
m2_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="151-151"];
m2_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
m2_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
m2_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
m2_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
m2_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                After'')", span="158-158"];
m2_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m2_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160"];
m2_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[7].Should().Be(''                456789 After'')", span="161-161"];
m2_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m2_194 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_169 [cluster="Unk.True", file="HelpTextTests.cs", label="Entry Unk.True", span=""];
m2_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m2_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m2_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263"];
m2_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266"];
m2_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269"];
m2_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271"];
m2_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272"];
m2_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273"];
m2_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274"];
m2_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275"];
m2_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276"];
m2_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277"];
m2_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278"];
m2_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279"];
m2_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m2_168 [cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m2_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m2_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68"];
m2_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m2_45 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="13-13"];
m2_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m2_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="170-170"];
m2_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="171-171"];
m2_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174"];
m2_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177"];
m2_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].Should().Be(''Before '')", span="178-178"];
m2_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179"];
m2_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''012 After'')", span="180-180"];
m2_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181"];
m2_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182"];
m2_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183"];
m2_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m2_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m2_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m2_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m2_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m2_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316"];
m2_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324"];
m2_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327"];
m2_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330"];
m2_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332"];
m2_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333"];
m2_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334"];
m2_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335"];
m2_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336"];
m2_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337"];
m2_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m2_131 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="399-399"];
m2_152 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m2_193 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m2_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
m2_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m2_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
m2_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
m2_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
m2_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m2_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323"];
m2_117 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="HelpTextTests.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m2_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m2_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m2_125 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m2_132 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="209-232"];
m2_133 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="211-211"];
m2_135 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214"];
m2_137 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216"];
m2_139 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218"];
m2_141 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220"];
m2_143 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222"];
m2_145 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224"];
m2_149 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228"];
m2_134 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="213-213"];
m2_136 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="215-215"];
m2_138 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="217-217"];
m2_140 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="219-219"];
m2_142 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MutuallyExclusiveSetError", span="221-221"];
m2_144 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="223-223"];
m2_146 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="225-225"];
m2_148 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="227-227"];
m2_150 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="230-230"];
m2_147 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="226-226"];
m2_151 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="209-232"];
m2_60 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56"];
m2_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m2_75 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m2_76 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m2_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="427-427"];
m2_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="343-343"];
m2_195 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m2_102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m2_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m2_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m2_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m2_122 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m2_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m2_167 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252"];
m2_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m2_124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m2_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="9-9"];
m2_118 [cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m2_130 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m2_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m2_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m2_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m2_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m2_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m2_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m2_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m2_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m2_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m2_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m2_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m2_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m2_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m2_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208"];
m2_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232"];
m2_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235"];
m2_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="238-238"];
m2_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240"];
m2_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241"];
m2_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242"];
m2_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243"];
m2_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="244-244"];
m2_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245"];
m2_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246"];
m2_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247"];
m2_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m2_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m2_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294"];
m2_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297"];
m2_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300"];
m2_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302"];
m2_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303"];
m2_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304"];
m2_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305"];
m2_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306"];
m2_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307"];
m2_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m2_34 [cluster="string[].TrimStringArray()", file="HelpTextTests.cs", label="Entry string[].TrimStringArray()", span="14-14"];
m2_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m2_5 [cluster="Unk.Equal", file="HelpTextTests.cs", label="Entry Unk.Equal", span=""];
m2_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m3_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m3_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m3_13 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m3_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m3_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m3_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m3_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m3_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m3_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m3_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m3_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", prediction=1, span="23-29"];
m3_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m3_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42"];
m3_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m3_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="40-42"];
m3_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-27"];
m3_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="33-33"];
m3_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="35-35"];
m3_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m3_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-27"];
m3_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="33-33"];
m3_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="33-33"];
m3_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m3_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="35-35"];
m3_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42"];
m3_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="40-42"];
m3_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m3_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m3_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m3_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m3_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m3_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m4_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.shortName = shortName", span="19-19"];
m4_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.longName = longName", span="20-20"];
m4_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.setName = setName", span="21-21"];
m4_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.helpText = helpText", span="22-22"];
m4_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="this.metaValue = metaValue", span="23-23"];
m4_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m4_11 [cluster="T.ToMaybe<T>()", file="OptionSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m4_8 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m4_9 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="OptionSpecification.cs", label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", prediction=2, span="29-40"];
m4_10 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m4_12 [file="OptionSpecification.cs", label="CommandLine.Core.OptionSpecification", span=""];
m5_4 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m5_5 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Dispose(false)", span="36-36"];
m5_6 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m5_0 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m5_1 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.caseSensitive = true", span="27-27"];
m5_2 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.parsingCulture = CultureInfo.InvariantCulture", span="28-28"];
m5_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m5_7 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m5_13 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed", span="128-128"];
m5_15 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label=disposing, span="133-133"];
m5_14 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="return;", span="130-130"];
m5_16 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="HelpWriter != null", span="135-135"];
m5_17 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter.Dispose()", span="137-137"];
m5_19 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed = true", span="141-141"];
m5_18 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter = null", span="138-138"];
m5_20 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose(bool)", span="126-126"];
m5_12 [cluster="System.GC.SuppressFinalize(object)", file="ParserSettings.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m5_21 [cluster="System.IO.TextWriter.Dispose()", file="ParserSettings.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m5_8 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m5_9 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Dispose(true)", span="121-121"];
m5_10 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="GC.SuppressFinalize(this)", span="123-123"];
m5_11 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose()", span="119-119"];
m5_22 [file="ParserSettings.cs", label="CommandLine.ParserSettings", span=""];
m6_31 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m6_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m6_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.tag = tag", span="29-29"];
m6_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.required = required", span="30-30"];
m6_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.min = min", span="31-31"];
m6_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.max = max", span="32-32"];
m6_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.defaultValue = defaultValue", span="33-33"];
m6_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.conversionType = conversionType", span="34-34"];
m6_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m6_28 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m6_26 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Specification.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_33 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m6_32 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m6_25 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m6_34 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m6_8 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m6_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", span="75-75"];
m6_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="90-90"];
m6_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", prediction=3, span="76-76"];
m6_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="87-87"];
m6_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="oa.Count() == 1", span="77-77"];
m6_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="80-80"];
m6_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="84-84"];
m6_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="88-88"];
m6_22 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="93-93"];
m6_23 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m6_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m6_27 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m6_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m6_24 [cluster="System.Collections.Generic.List<T>.List()", file="Specification.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_36 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m7_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m7_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="41-41"];
m7_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="43-43"];
m7_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="45-45"];
m7_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="51-51"];
m7_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="47-47"];
m7_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="41-41"];
m7_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m7_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m7_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m7_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="13-13"];
m7_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m7_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="13-13"];
m7_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m7_6 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m7_7 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="20-20"];
m7_9 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="22-22"];
m7_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m7_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m7_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="45-45"];
m7_24 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="45-45"];
m7_25 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="45-45"];
m7_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="54-54"];
m7_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="56-56"];
m7_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptor()", span="58-58"];
m7_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="63-63"];
m7_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="64-64"];
m7_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="56-56"];
m7_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Scalar", span="60-60"];
m7_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Sequence", span="62-62"];
m7_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="61-61"];
m7_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="65-65"];
m7_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="67-67"];
m7_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="72-72"];
m7_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="54-54"];
m7_22 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m7_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_40 [cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m7_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_21 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m7_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m7_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", prediction=4, span="27-38"];
m7_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m7_43 [file="SpecificationExtensions.cs", label=guard, span=""];
m8_166 [cluster="System.Text.StringBuilder.Append(char)", file="SpecificationPropertyRules.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m8_81 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104"];
m8_82 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="return make_inlines(InlineTag.Strong, contents);", span="104-104"];
m8_83 [cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104"];
m8_49 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="41-43"];
m8_50 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147"];
m8_51 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m8_52 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="45-46"];
m8_53 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="45-46"];
m8_54 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="45-46"];
m8_169 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280"];
m8_170 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int ticklength = 0", span="282-282"];
m8_171 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var bl = subj.Buffer.Length", span="283-283"];
m8_172 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position < bl && (subj.Buffer[subj.Position] == '`')", span="284-284"];
m8_174 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="287-287"];
m8_175 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int startpos = subj.Position", span="290-290"];
m8_176 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int endpos = scan_to_closing_backticks(subj, ticklength)", span="291-291"];
m8_178 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = startpos", span="295-295"];
m8_180 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_code(NormalizeWhitespace(subj.Buffer, startpos, endpos - startpos - ticklength));", span="300-300"];
m8_173 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="ticklength++", span="286-286"];
m8_179 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(new string('`', ticklength));", span="296-296"];
m8_177 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endpos == 0", span="292-292"];
m8_181 [cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280"];
m8_0 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16"];
m8_1 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="s.Length == 0", span="18-18"];
m8_2 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="return string.Empty;", span="19-19"];
m8_40 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="return e;", span="68-68"];
m8_318 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818"];
m8_474 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int n", span="820-820"];
m8_478 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endlabel = subj.Position", span="824-824"];
m8_479 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var c = peek_char(subj)", span="826-826"];
m8_480 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == '(' &&\r\n                    ((sps = Scanner.scan_spacechars(subj.Buffer, subj.Position + 1)) > -1) &&\r\n                    ((n = Scanner.scan_link_url(subj.Buffer, subj.Position + 1 + sps)) > -1)", span="828-830"];
m8_481 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="starturl = subj.Position + 1 + sps", span="833-833"];
m8_483 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="starttitle = endurl + Scanner.scan_spacechars(subj.Buffer, endurl)", span="835-835"];
m8_484 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endtitle = (starttitle == endurl) ? starttitle :\r\n                               starttitle + Scanner.scan_link_title(subj.Buffer, starttitle)", span="837-838"];
m8_485 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endall = endtitle + Scanner.scan_spacechars(subj.Buffer, endtitle)", span="839-839"];
m8_486 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endall < subj.Buffer.Length && subj.Buffer[endall] == ')'", span="840-840"];
m8_487 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = endall + 1", span="842-842"];
m8_488 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="url = subj.Buffer.Substring(starturl, endurl - starturl)", span="843-843"];
m8_490 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="title = subj.Buffer.Substring(starttitle, endtitle - starttitle)", span="845-845"];
m8_494 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var label = ParseReferenceLabel(subj)", span="853-853"];
m8_498 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var details = lookup_reference(subj.ReferenceMap, label.Value)", span="859-859"];
m8_501 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = endlabel", span="865-865"];
m8_503 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = endlabel", span="871-871"];
m8_475 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int sps", span="821-821"];
m8_476 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int endlabel, starturl, endurl, starttitle, endtitle, endall", span="822-822"];
m8_477 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="string url, title", span="823-823"];
m8_493 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == '[' || c == ' ' || c == '\n'", span="851-851"];
m8_482 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endurl = starturl + n", span="834-834"];
m8_489 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="url = CleanUrl(url)", span="844-844"];
m8_492 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return new Reference() { Title = title, Url = url };", span="848-848"];
m8_491 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="title = CleanTitle(title)", span="846-846"];
m8_495 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="label != null", span="854-854"];
m8_496 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="label.Value.Length == 0", span="856-856"];
m8_497 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return Reference.SelfReference;", span="857-857"];
m8_499 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="details != null", span="860-860"];
m8_500 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return details;", span="861-861"];
m8_502 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return Reference.InvalidReference;", span="866-866"];
m8_504 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return null;", span="872-872"];
m8_505 [cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818"];
m8_5 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="23-23"];
m8_124 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="char c", span="197-197"];
m8_125 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="count = startIndex + count - 1", span="200-200"];
m8_126 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="startIndex < count", span="203-203"];
m8_127 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c = s[startIndex]", span="205-205"];
m8_129 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="startIndex++", span="207-207"];
m8_130 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="count >= startIndex", span="210-210"];
m8_131 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c = s[count]", span="212-212"];
m8_134 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="count < startIndex", span="217-217"];
m8_137 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="int pos = startIndex", span="223-223"];
m8_138 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="int lastPos = startIndex", span="224-224"];
m8_139 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="-1 != (pos = s.IndexOfAny(WhiteSpaceCharacters, pos, count - pos))", span="225-225"];
m8_140 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="s[pos] == '\n'", span="227-227"];
m8_142 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(s.Length)", span="230-230"];
m8_143 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb.Append(s, lastPos, pos - lastPos)", span="233-233"];
m8_145 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c = s[++pos]", span="239-239"];
m8_149 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c = s[++pos]", span="248-248"];
m8_152 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(s.Length)", span="254-254"];
m8_153 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb.Append(s, lastPos, pos - lastPos)", span="256-256"];
m8_154 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c = s[++pos]", span="261-261"];
m8_159 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="return s.Substring(startIndex, count - startIndex + 1);", span="272-272"];
m8_160 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb.Append(s, lastPos, count - lastPos + 1)", span="274-274"];
m8_133 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="count--", span="214-214"];
m8_147 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="pos < count", span="242-242"];
m8_156 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="pos < count", span="264-264"];
m8_128 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c != ' ' && c != '\n'", span="206-206"];
m8_132 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c != ' ' && c != '\n'", span="213-213"];
m8_135 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="return string.Empty;", span="218-218"];
m8_136 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="StringBuilder sb = null", span="222-222"];
m8_141 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb == null", span="229-229"];
m8_144 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb.Append(' ')", span="234-234"];
m8_151 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb == null", span="253-253"];
m8_158 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="sb == null", span="271-271"];
m8_161 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="return sb.ToString();", span="275-275"];
m8_146 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c != ' ' && c != '\n'", span="240-240"];
m8_148 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="lastPos = pos", span="244-244"];
m8_150 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c == ' ' || c == '\n'", span="250-250"];
m8_155 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="c != ' ' && c != '\n'", span="262-262"];
m8_157 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="lastPos = pos", span="266-266"];
m8_162 [cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", span="195-195"];
m8_70 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", file="SpecificationPropertyRules.cs", label="return make_simple(InlineTag.LineBreak);", span="100-100"];
m8_163 [cluster="string.IndexOfAny(char[], int, int)", file="SpecificationPropertyRules.cs", label="Entry string.IndexOfAny(char[], int, int)", span="0-0"];
m8_222 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="374-374"];
m8_205 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341"];
m8_206 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="int useDelims", span="347-347"];
m8_207 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="var openerDelims = opener.DelimeterCount", span="348-348"];
m8_208 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="closingDelimeterCount < 3 || openerDelims < 3", span="349-349"];
m8_209 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="useDelims = closingDelimeterCount <= openerDelims ? closingDelimeterCount : openerDelims", span="350-350"];
m8_210 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="useDelims = closingDelimeterCount % 2 == 0 ? 2 : 1", span="352-352"];
m8_212 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="var inl = opener.StartingInline", span="357-357"];
m8_215 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="closer != null", span="361-361"];
m8_217 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.NextSibling = closer.StartingInline.NextSibling", span="364-364"];
m8_218 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="closer.StartingInline.NextSibling = null", span="365-365"];
m8_219 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="closer.StartingInline.LiteralContent = null", span="366-366"];
m8_223 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="subj != null", span="376-376"];
m8_224 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="subj.LastInline = inl", span="377-377"];
m8_225 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="var inl = opener.StartingInline", span="382-382"];
m8_226 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="opener.DelimeterCount -= useDelims", span="383-383"];
m8_227 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.LiteralContent = opener.StartingInline.LiteralContent.Substring(0, opener.DelimeterCount)", span="384-384"];
m8_230 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="subj != null", span="389-389"];
m8_231 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="subj.LastInline = emph", span="390-390"];
m8_211 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="openerDelims == useDelims", span="354-354"];
m8_213 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.Tag = useDelims == 1 ? InlineTag.Emphasis : InlineTag.Strong", span="358-358"];
m8_228 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="var emph = useDelims == 1 ? make_emph(inl.NextSibling) : make_strong(inl.NextSibling)", span="386-386"];
m8_232 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="return useDelims;", span="393-393"];
m8_214 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.LiteralContent = null", span="359-359"];
m8_216 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.FirstChild = inl.NextSibling", span="363-363"];
m8_220 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.FirstChild = inl.NextSibling", span="370-370"];
m8_221 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.NextSibling = null", span="371-371"];
m8_229 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="inl.NextSibling = emph", span="387-387"];
m8_233 [cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341"];
m8_74 [cluster="CommonMark.Parser.InlineMethods.make_softbreak()", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_softbreak()", span="101-101"];
m8_29 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="return;", span="55-55"];
m8_30 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", color=green, community=0, file="SpecificationPropertyRules.cs", label="refmap.Add(refer.Label, refer)", prediction=5, span="57-57"];
m8_31 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", span="52-52"];
m8_28 [cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="refmap.ContainsKey(refer.Label)", span="54-54"];
m8_90 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123"];
m8_91 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return new Subject(s.TrimEnd(), refmap);", span="125-125"];
m8_92 [cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123"];
m8_18 [cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m8_321 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560"];
m8_322 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="562-562"];
m8_323 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position >= subj.Buffer.Length", span="564-564"];
m8_325 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var nextChar = subj.Buffer[subj.Position]", span="567-567"];
m8_327 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="573-573"];
m8_330 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="578-578"];
m8_324 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(''\\'');", span="565-565"];
m8_326 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Utilities.IsEscapableSymbol(nextChar)", span="569-569"];
m8_328 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(nextChar.ToString());", span="574-574"];
m8_329 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="nextChar == '\n'", span="576-576"];
m8_332 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(''\\'');", span="583-583"];
m8_331 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_linebreak();", span="579-579"];
m8_333 [cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560"];
m8_66 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Entry lambda expression", span="57-59"];
m8_67 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min", span="57-59"];
m8_68 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="57-59"];
m8_27 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m8_436 [cluster="string.Trim()", file="SpecificationPropertyRules.cs", label="Entry string.Trim()", span="0-0"];
m8_259 [cluster="CommonMark.Parser.InlineStack.InlineStack()", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineStack.InlineStack()", span="10-10"];
m8_357 [cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(string)", span="13-13"];
m8_508 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int)", span="236-236"];
m8_334 [cluster="CommonMark.Utilities.IsEscapableSymbol(char)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Utilities.IsEscapableSymbol(char)", span="28-28"];
m8_234 [cluster="CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)", span="118-118"];
m8_33 [cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs", label="List<string> setsWithTrue =\r\n                    specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(x => ((OptionSpecification)x.Specification).SetName).ToList()", prediction=5, span="36-38"];
m8_564 [cluster="string.Substring(int)", file="SpecificationPropertyRules.cs", label="Entry string.Substring(int)", span="0-0"];
m8_63 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="62-63"];
m8_64 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="65-65"];
m8_65 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="54-66"];
m8_270 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="InlineStack.AppendStackEntry(istack, subj)", span="455-455"];
m8_261 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441"];
m8_262 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="444-444"];
m8_263 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="var inlText = make_str(isImage ? ''!['' : ''['')", span="446-446"];
m8_267 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="istack.StartPosition = subj.Position", span="451-451"];
m8_269 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="istack.Flags = InlineStack.InlineStackFlags.Opener | (isImage ? InlineStack.InlineStackFlags.ImageLink : InlineStack.InlineStackFlags.None)", span="453-453"];
m8_264 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="var istack = new InlineStack()", span="448-448"];
m8_266 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="istack.StartingInline = inlText", span="450-450"];
m8_271 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="return inlText;", span="457-457"];
m8_265 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="istack.Delimeter = '['", span="449-449"];
m8_268 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="istack.Priority = InlineStack.InlineStackPriority.Links", span="452-452"];
m8_272 [cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441"];
m8_260 [cluster="CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)", span="98-98"];
m8_72 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="62-63"];
m8_73 [cluster="lambda expression", file="SpecificationPropertyRules.cs", label="Exit lambda expression", span="62-63"];
m8_437 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761"];
m8_438 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="int titlelength = title.Length", span="764-764"];
m8_440 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="return title;", span="766-766"];
m8_441 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="var a = title[0]", span="768-768"];
m8_442 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="var b = title[titlelength - 1]", span="769-769"];
m8_444 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="title = title.Substring(1, titlelength - 2)", span="771-771"];
m8_445 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="return Unescape(title);", span="773-773"];
m8_439 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="titlelength == 0", span="765-765"];
m8_443 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="(a == '\'' && b == '\'') || (a == '(' && b == ')') || (a == '''' && b == '''')", span="770-770"];
m8_446 [cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761"];
m8_426 [cluster="string.IndexOfAny(char[], int)", file="SpecificationPropertyRules.cs", label="Entry string.IndexOfAny(char[], int)", span="0-0"];
m8_34 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61"];
m8_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SpecificationPropertyRules.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_41 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61"];
m8_44 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Inline e = new Inline()", span="73-73"];
m8_48 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71"];
m8_42 [cluster="CommonMark.Syntax.Inline.Inline()", color=green, community=0, file="SpecificationPropertyRules.cs", label="Entry CommonMark.Syntax.Inline.Inline()", prediction=7, span="6-6"];
m8_43 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71"];
m8_45 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", color=green, community=0, file="SpecificationPropertyRules.cs", label="e.Tag = t", prediction=8, span="74-74"];
m8_46 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="e.FirstChild = contents", span="75-75"];
m8_35 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="Inline e = new Inline()", span="63-63"];
m8_47 [cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="return e;", span="76-76"];
m8_36 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="e.Tag = t", span="64-64"];
m8_38 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="e.Linkable.Url = url", span="66-66"];
m8_4 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16"];
m8_61 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", file="SpecificationPropertyRules.cs", label="return make_literal(InlineTag.String, s);", span="97-97"];
m8_7 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26"];
m8_37 [cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="e.FirstChild = label", span="65-65"];
m8_3 [cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="return NormalizeWhitespace(s.Source, s.StartIndex, s.Length).ToUpperInvariant();", span="21-21"];
m8_60 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_str(string)", span="97-97"];
m8_62 [cluster="CommonMark.Parser.InlineMethods.make_str(string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_str(string)", span="97-97"];
m8_6 [cluster="string.ToUpperInvariant()", file="SpecificationPropertyRules.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m8_9 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="return null;", span="29-29"];
m8_23 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="r.Title = title", span="48-48"];
m8_71 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100"];
m8_17 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26"];
m8_8 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="refmap == null", span="28-28"];
m8_25 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43"];
m8_24 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="return r;", span="49-49"];
m8_21 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="r.Label = NormalizeReference(label)", span="46-46"];
m8_22 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="r.Url = url", span="47-47"];
m8_183 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307"];
m8_184 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="int numdelims = 0", span="309-309"];
m8_186 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="int startpos = subj.Position", span="311-311"];
m8_187 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="int len = subj.Buffer.Length", span="312-312"];
m8_188 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="char_before = startpos == 0 ? '\n' : subj.Buffer[startpos - 1]", span="314-314"];
m8_189 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="startpos + numdelims < len && subj.Buffer[startpos + numdelims] == c", span="315-315"];
m8_191 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="subj.Position = (startpos += numdelims)", span="318-318"];
m8_196 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="char_after = len == startpos ? '\n' : subj.Buffer[startpos]", span="327-327"];
m8_199 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="c == '_'", span="332-332"];
m8_185 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="char char_before, char_after", span="310-310"];
m8_190 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="numdelims++", span="316-316"];
m8_192 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="numdelims == 0", span="320-320"];
m8_195 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="return numdelims;", span="324-324"];
m8_202 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="return numdelims;", span="338-338"];
m8_198 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_close = char_before != ' ' && char_before != '\n'", span="330-330"];
m8_200 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_open = can_open && !Utilities.IsAsciiLetterOrDigit(char_before)", span="334-334"];
m8_193 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_open = false", span="322-322"];
m8_194 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_close = false", span="323-323"];
m8_197 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_open = char_after != ' ' && char_after != '\n'", span="329-329"];
m8_201 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="can_close = can_close && !Utilities.IsAsciiLetterOrDigit(char_after)", span="335-335"];
m8_203 [cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307"];
m8_258 [cluster="CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)", span="69-69"];
m8_55 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m8_56 [cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs", label="Entry Unk.FromSpecification", span=""];
m8_57 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="52-52"];
m8_58 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="54-66"];
m8_59 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="52-52"];
m8_94 [cluster="string.TrimEnd(params char[])", file="SpecificationPropertyRules.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m8_123 [cluster="string.IndexOf(char, int)", file="SpecificationPropertyRules.cs", label="Entry string.IndexOf(char, int)", span="0-0"];
m8_506 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int)", span="271-271"];
m8_356 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="517-517"];
m8_39 [cluster="Unk.ToList", file="SpecificationPropertyRules.cs", label="Entry Unk.ToList", span=""];
m8_69 [cluster="CommonMark.Parser.InlineMethods.make_linebreak()", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100"];
m8_26 [cluster="CommonMark.Syntax.Reference.Reference()", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Syntax.Reference.Reference()", span="9-9"];
m8_168 [cluster="System.Text.StringBuilder.ToString()", file="SpecificationPropertyRules.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_358 [cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(int)", span="26-26"];
m8_95 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133"];
m8_96 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return subj.Buffer.Length <= subj.Position ? '\0' : subj.Buffer[subj.Position];", span="135-135"];
m8_97 [cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133"];
m8_75 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label=setsWithTrue, span=""];
m8_76 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="return make_linkable(InlineTag.Link, label, url, title);", span="102-102"];
m8_77 [cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", span="102-102"];
m8_359 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624"];
m8_360 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="Inline result = null", span="626-626"];
m8_364 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="Subject subj = make_subject(s, null)", span="630-630"];
m8_361 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="Inline inew", span="627-627"];
m8_373 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="result = append_inlines(result, inew)", span="648-648"];
m8_374 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="return result;", span="651-651"];
m8_362 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="int searchpos", span="628-628"];
m8_363 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="char c", span="629-629"];
m8_365 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="'\0' != (c = peek_char(subj))", span="632-632"];
m8_367 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="inew = handle_entity(subj)", span="636-636"];
m8_368 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="searchpos = subj.Buffer.IndexOf('&', subj.Position)", span="640-640"];
m8_370 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="searchpos = subj.Buffer.Length", span="642-642"];
m8_371 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="inew = make_str(subj.Buffer.Substring(subj.Position, searchpos - subj.Position))", span="644-644"];
m8_372 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="subj.Position = searchpos", span="645-645"];
m8_366 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="c == '&'", span="634-634"];
m8_369 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="searchpos == -1", span="641-641"];
m8_375 [cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624"];
m8_661 [cluster="CommonMark.Syntax.StringContent.ToString()", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Syntax.StringContent.ToString()", span="50-50"];
m8_428 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743"];
m8_429 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="url.Length == 0", span="745-745"];
m8_430 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="return url;", span="746-746"];
m8_431 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="url = url.Trim()", span="749-749"];
m8_432 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="url[0] == '<' && url[url.Length - 1] == '>'", span="751-751"];
m8_433 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="url = url.Substring(1, url.Length - 2)", span="752-752"];
m8_434 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="return Unescape(url);", span="754-754"];
m8_435 [cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743"];
m8_164 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="SpecificationPropertyRules.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m8_204 [cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Utilities.IsAsciiLetterOrDigit(char)", span="37-37"];
m8_19 [cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43"];
m8_319 [cluster="CommonMark.Syntax.StringPart.StringPart(string, int, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Syntax.StringPart.StringPart(string, int, int)", span="11-11"];
m8_93 [cluster="CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="8-8"];
m8_10 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="lab.Length > Reference.MaximumReferenceLabelLength", span="31-31"];
m8_336 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589"];
m8_337 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int match", span="591-591"];
m8_340 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="match = Scanner.scan_entity(subj.Buffer, subj.Position, subj.Buffer.Length - subj.Position, out namedEntity, out numericEntity)", span="594-594"];
m8_342 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += match", span="597-597"];
m8_352 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(subj.Buffer.Substring(subj.Position - match, match));", span="613-613"];
m8_353 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="617-617"];
m8_338 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="string namedEntity", span="592-592"];
m8_339 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int numericEntity", span="593-593"];
m8_341 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="match > 0", span="595-595"];
m8_343 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="namedEntity != null", span="599-599"];
m8_344 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="601-601"];
m8_347 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="numericEntity > 0", span="605-605"];
m8_348 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="607-607"];
m8_345 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="decoded != null", span="602-602"];
m8_346 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(decoded);", span="603-603"];
m8_349 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="decoded != null", span="608-608"];
m8_350 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(decoded);", span="609-609"];
m8_351 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(''\uFFFD'');", span="610-610"];
m8_354 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(''&'');", span="618-618"];
m8_355 [cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589"];
m8_182 [cluster="string.String(char, int)", file="SpecificationPropertyRules.cs", label="Entry string.String(char, int)", span="0-0"];
m8_520 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898"];
m8_521 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Inline inew = null", span="900-900"];
m8_524 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var c = subj.Buffer[subj.Position]", span="904-904"];
m8_527 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = handle_newline(subj)", span="909-909"];
m8_529 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = handle_backticks(subj)", span="912-912"];
m8_531 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = handle_backslash(subj)", span="915-915"];
m8_533 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = handle_entity(subj)", span="918-918"];
m8_535 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = handle_pointy_brace(subj)", span="921-921"];
m8_537 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = HandleEmphasis(subj, '_')", span="924-924"];
m8_539 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = HandleEmphasis(subj, '*')", span="927-927"];
m8_541 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = HandleLeftSquareBracket(subj, false)", span="930-930"];
m8_543 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = HandleRightSquareBracket(subj)", span="933-933"];
m8_545 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="936-936"];
m8_546 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="peek_char(subj) == '['", span="937-937"];
m8_547 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = HandleLeftSquareBracket(subj, true)", span="938-938"];
m8_549 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endpos = subj.Buffer.IndexOfAny(SpecialCharacters, subj.Position)", span="945-945"];
m8_550 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endpos == subj.Position", span="947-947"];
m8_551 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer[endpos].ToString()", span="950-950"];
m8_552 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="951-951"];
m8_554 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endpos = subj.Buffer.Length", span="956-956"];
m8_555 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer.Substring(subj.Position)", span="957-957"];
m8_556 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = endpos", span="958-958"];
m8_557 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer.Substring(subj.Position, endpos - subj.Position)", span="963-963"];
m8_558 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = endpos", span="965-965"];
m8_559 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="peek_char(subj) == '\n'", span="967-967"];
m8_522 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="string contents", span="901-901"];
m8_523 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int endpos", span="902-902"];
m8_525 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label=c, span="906-906"];
m8_526 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'\n'", span="908-908"];
m8_528 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'`'", span="911-911"];
m8_530 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'\\'", span="914-914"];
m8_532 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'&'", span="917-917"];
m8_534 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'<'", span="920-920"];
m8_536 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'_'", span="923-923"];
m8_538 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'*'", span="926-926"];
m8_540 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'['", span="929-929"];
m8_542 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="']'", span="932-932"];
m8_544 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="'!'", span="935-935"];
m8_548 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = make_str(''!'')", span="940-940"];
m8_553 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="endpos == -1", span="953-953"];
m8_561 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="inew = make_str(contents)", span="971-971"];
m8_560 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = contents.TrimEnd()", span="968-968"];
m8_562 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return inew;", span="975-975"];
m8_563 [cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898"];
m8_472 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int)", span="62-62"];
m8_98 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142"];
m8_99 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += 1", span="144-144"];
m8_100 [cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142"];
m8_447 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778"];
m8_448 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int matchlen = 0", span="780-780"];
m8_451 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="784-784"];
m8_452 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen = Scanner.scan_autolink_uri(subj.Buffer, subj.Position)", span="786-786"];
m8_454 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="789-789"];
m8_455 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += matchlen", span="790-790"];
m8_458 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen = Scanner.scan_autolink_email(subj.Buffer, subj.Position)", span="795-795"];
m8_460 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="798-798"];
m8_461 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += matchlen", span="799-799"];
m8_464 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen = Scanner.scan_html_tag(subj.Buffer, subj.Position)", span="804-804"];
m8_466 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="contents = subj.Buffer.Substring(subj.Position - 1, matchlen + 1)", span="807-807"];
m8_467 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += matchlen", span="808-808"];
m8_449 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="string contents", span="781-781"];
m8_450 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Inline result", span="782-782"];
m8_453 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen > 0", span="787-787"];
m8_456 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="result = make_link(make_str_with_entities(contents), contents, '''')", span="791-791"];
m8_457 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return result;", span="792-792"];
m8_459 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen > 0", span="796-796"];
m8_462 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="result = make_link(make_str_with_entities(contents), ''mailto:'' + contents, '''')", span="800-800"];
m8_463 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return result;", span="801-801"];
m8_465 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="matchlen > 0", span="805-805"];
m8_469 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_str(''<'');", span="813-813"];
m8_468 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_raw_html(contents);", span="809-809"];
m8_470 [cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778"];
m8_473 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_html_tag(string, int)", span="246-246"];
m8_78 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103"];
m8_79 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="return make_inlines(InlineTag.Emphasis, contents);", span="103-103"];
m8_80 [cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103"];
m8_255 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="InlineStack.AppendStackEntry(istack, subj)", span="435-435"];
m8_235 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396"];
m8_236 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="bool can_open, can_close", span="398-398"];
m8_237 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="var numdelims = scan_delims(subj, c, out can_open, out can_close)", span="399-399"];
m8_239 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Emphasis, c, out can_close)", span="404-404"];
m8_241 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="var useDelims = MatchEmphasisStack(istack, subj, numdelims, null)", span="407-407"];
m8_243 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="subj.Position = subj.Position - numdelims + useDelims", span="412-412"];
m8_245 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="return HandleEmphasis(subj, c);", span="416-416"];
m8_247 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="var inlText = make_str(subj.Buffer.Substring(subj.Position - numdelims, numdelims))", span="423-423"];
m8_251 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack.Delimeter = c", span="429-429"];
m8_238 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label=can_close, span="401-401"];
m8_242 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="useDelims < numdelims", span="410-410"];
m8_244 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="numdelims < 10", span="415-415"];
m8_248 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="can_open || can_close", span="425-425"];
m8_250 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack.DelimeterCount = numdelims", span="428-428"];
m8_254 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack.Flags = (can_open ? InlineStack.InlineStackFlags.Opener : 0)\r\n                             | (can_close ? InlineStack.InlineStackFlags.Closer : 0)", span="432-433"];
m8_240 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack != null", span="405-405"];
m8_246 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="return null;", span="419-419"];
m8_252 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack.StartingInline = inlText", span="430-430"];
m8_256 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="return inlText;", span="438-438"];
m8_249 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="var istack = new InlineStack()", span="427-427"];
m8_253 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="istack.Priority = InlineStack.InlineStackPriority.Emphasis", span="431-431"];
m8_257 [cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396"];
m8_509 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037"];
m8_594 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var startPos = subj.Position", span="1039-1039"];
m8_595 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var source = subj.Buffer", span="1040-1040"];
m8_598 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position < len", span="1044-1044"];
m8_599 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c = subj.Buffer[subj.Position]", span="1046-1046"];
m8_601 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="1049-1049"];
m8_603 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="1054-1054"];
m8_604 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = startPos", span="1059-1059"];
m8_606 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var labelStartPos = subj.Position", span="1064-1064"];
m8_607 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="len = subj.Position + Reference.MaximumReferenceLabelLength", span="1066-1066"];
m8_610 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1070-1070"];
m8_611 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position > -1", span="1071-1071"];
m8_612 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c = source[subj.Position]", span="1073-1073"];
m8_614 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position += 2", span="1076-1076"];
m8_615 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position >= len", span="1077-1077"];
m8_616 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1080-1080"];
m8_618 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var label = new StringPart(source, labelStartPos, subj.Position - labelStartPos)", span="1088-1088"];
m8_619 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="1089-1089"];
m8_621 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position = startPos", span="1094-1094"];
m8_596 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var len = source.Length", span="1041-1041"];
m8_608 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="len > source.Length", span="1067-1067"];
m8_609 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="len = source.Length", span="1068-1068"];
m8_597 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="char c = '\0'", span="1043-1043"];
m8_600 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == ' ' || c == '\n'", span="1047-1047"];
m8_602 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == '['", span="1052-1052"];
m8_605 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return null;", span="1060-1060"];
m8_613 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == '\\'", span="1074-1074"];
m8_617 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == '['", span="1082-1082"];
m8_620 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return label;", span="1090-1090"];
m8_622 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return null;", span="1095-1095"];
m8_623 [cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037"];
m8_471 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", span="21-21"];
m8_286 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="InlineStack.RemoveStackEntry(temp, null, temp)", span="480-480"];
m8_273 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460"];
m8_274 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="details != null", span="462-462"];
m8_275 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="var inl = opener.StartingInline", span="464-464"];
m8_276 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.Tag = 0 != (opener.Flags & InlineStack.InlineStackFlags.ImageLink)\r\n                            ? InlineTag.Image : InlineTag.Link", span="465-466"];
m8_280 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.Linkable.Url = details.Url", span="471-471"];
m8_281 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.Linkable.Title = details.Title", span="472-472"];
m8_282 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="var temp = opener.Previous", span="475-475"];
m8_285 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="temp.Delimeter == '[' && temp.Flags == opener.Flags", span="479-479"];
m8_288 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="484-484"];
m8_289 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="subj != null", span="486-486"];
m8_290 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="subj.LastInline = inl", span="487-487"];
m8_291 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="InlineStack.RemoveStackEntry(opener, subj, opener)", span="493-493"];
m8_292 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="closer != null", span="495-495"];
m8_293 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="InlineStack.RemoveStackEntry(closer, subj, closer)", span="496-496"];
m8_295 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="subj.LastInline.LastSibling.NextSibling = inl", span="500-500"];
m8_296 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="subj.LastInline = inl", span="501-501"];
m8_277 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.LiteralContent = null", span="467-467"];
m8_278 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.FirstChild = inl.NextSibling", span="468-468"];
m8_279 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="inl.NextSibling = null", span="469-469"];
m8_283 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="temp != null && temp.Priority <= InlineStack.InlineStackPriority.Links", span="476-476"];
m8_284 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="var xtemp = temp.Previous", span="478-478"];
m8_287 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="temp = xtemp", span="481-481"];
m8_294 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="var inl = make_str('']'')", span="499-499"];
m8_297 [cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460"];
m8_376 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658"];
m8_377 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="int searchPos = 0", span="661-661"];
m8_383 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="(searchPos = url.IndexOfAny(search, searchPos)) != -1", span="668-668"];
m8_384 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="c = url[searchPos]", span="670-670"];
m8_387 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="url.Length == searchPos", span="675-675"];
m8_388 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="c = url[searchPos]", span="678-678"];
m8_391 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(url.Length)", span="681-681"];
m8_392 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(url, lastPos, searchPos - lastPos - 1)", span="682-682"];
m8_397 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="match = Scanner.scan_entity(url, searchPos, url.Length - searchPos, out namedEntity, out numericEntity)", span="690-690"];
m8_405 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(url.Length)", span="704-704"];
m8_406 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="705-705"];
m8_413 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(url.Length)", span="715-715"];
m8_414 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="716-716"];
m8_417 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb = new StringBuilder(url.Length)", span="721-721"];
m8_418 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="722-722"];
m8_422 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="return url;", span="733-733"];
m8_423 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(url, lastPos, url.Length - lastPos)", span="735-735"];
m8_378 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="int lastPos = 0", span="662-662"];
m8_379 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="int match", span="663-663"];
m8_380 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="char c", span="664-664"];
m8_381 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="char[] search = new[] { '\\', '&' }", span="665-665"];
m8_382 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="StringBuilder sb = null", span="666-666"];
m8_390 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb == null", span="681-681"];
m8_404 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb == null", span="704-704"];
m8_407 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(decoded)", span="706-706"];
m8_412 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb == null", span="715-715"];
m8_415 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append(decoded)", span="717-717"];
m8_416 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb == null", span="721-721"];
m8_419 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb.Append('\uFFFD')", span="723-723"];
m8_421 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="sb == null", span="732-732"];
m8_424 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="return sb.ToString();", span="736-736"];
m8_386 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="searchPos++", span="673-673"];
m8_399 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="searchPos++", span="693-693"];
m8_400 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="searchPos += match", span="697-697"];
m8_385 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="c == '\\'", span="671-671"];
m8_394 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="c == '&'", span="686-686"];
m8_393 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="lastPos = searchPos", span="683-683"];
m8_389 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="Utilities.IsEscapableSymbol(c)", span="679-679"];
m8_395 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="string namedEntity", span="688-688"];
m8_396 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="int numericEntity", span="689-689"];
m8_398 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="match == 0", span="691-691"];
m8_401 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="namedEntity != null", span="699-699"];
m8_402 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="701-701"];
m8_409 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="numericEntity > 0", span="710-710"];
m8_410 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="712-712"];
m8_408 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="lastPos = searchPos", span="707-707"];
m8_420 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="lastPos = searchPos", span="726-726"];
m8_403 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="decoded != null", span="702-702"];
m8_411 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="decoded != null", span="713-713"];
m8_425 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658"];
m8_427 [cluster="System.Text.StringBuilder.Append(string)", file="SpecificationPropertyRules.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m8_624 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102"];
m8_625 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Subject subj = make_subject(input.ToString(), null)", span="1104-1104"];
m8_658 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="add_reference(refmap, make_reference(lab.Value, url, title))", span="1157-1157"];
m8_626 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="string url = null", span="1105-1105"];
m8_630 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="var lab = ParseReferenceLabel(subj)", span="1111-1111"];
m8_633 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="peek_char(subj) == ':'", span="1116-1116"];
m8_634 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="1117-1117"];
m8_636 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="spnl(subj)", span="1122-1122"];
m8_637 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="matchlen = Scanner.scan_link_url(subj.Buffer, subj.Position)", span="1123-1123"];
m8_640 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="url = subj.Buffer.Substring(subj.Position, matchlen)", span="1127-1127"];
m8_642 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.Position += matchlen", span="1129-1129"];
m8_643 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="beforetitle = subj.Position", span="1132-1132"];
m8_644 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="spnl(subj)", span="1133-1133"];
m8_645 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="matchlen = Scanner.scan_link_title(subj.Buffer, subj.Position)", span="1134-1134"];
m8_647 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="title = subj.Buffer.Substring(subj.Position, matchlen)", span="1137-1137"];
m8_649 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.Position += matchlen", span="1139-1139"];
m8_650 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.Position = beforetitle", span="1143-1143"];
m8_652 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="peek_char(subj) == ' '", span="1148-1148"];
m8_653 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="1149-1149"];
m8_654 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="peek_char(subj) == '\n'", span="1151-1151"];
m8_655 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="1152-1152"];
m8_656 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="peek_char(subj) != '\0'", span="1153-1153"];
m8_659 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return subj.Position;", span="1159-1159"];
m8_627 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="string title = null", span="1106-1106"];
m8_628 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="int matchlen = 0", span="1107-1107"];
m8_629 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="int beforetitle", span="1108-1108"];
m8_631 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="lab == null || lab.Value.Length > Reference.MaximumReferenceLabelLength", span="1112-1112"];
m8_632 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return 0;", span="1113-1113"];
m8_635 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return 0;", span="1119-1119"];
m8_638 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="matchlen == 0", span="1124-1124"];
m8_639 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return 0;", span="1125-1125"];
m8_641 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="url = CleanUrl(url)", span="1128-1128"];
m8_646 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="matchlen > 0", span="1135-1135"];
m8_648 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="title = CleanTitle(title)", span="1138-1138"];
m8_651 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="title = string.Empty", span="1144-1144"];
m8_657 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return 0;", span="1154-1154"];
m8_660 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102"];
m8_584 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010"];
m8_585 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="bool seen_newline = false", span="1012-1012"];
m8_586 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var len = subj.Buffer.Length", span="1013-1013"];
m8_588 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position < len", span="1015-1015"];
m8_589 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c = subj.Buffer[subj.Position]", span="1017-1017"];
m8_591 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="1019-1019"];
m8_590 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="c == ' ' || (!seen_newline && (seen_newline = c == '\n'))", span="1018-1018"];
m8_587 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="char c", span="1014-1014"];
m8_592 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return;", span="1021-1021"];
m8_593 [cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010"];
m8_335 [cluster="char.ToString()", file="SpecificationPropertyRules.cs", label="Entry char.ToString()", span="0-0"];
m8_510 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877"];
m8_511 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="int nlpos = subj.Position", span="879-879"];
m8_512 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="882-882"];
m8_513 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var len = subj.Buffer.Length", span="885-885"];
m8_514 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position < len && subj.Buffer[subj.Position] == ' '", span="886-886"];
m8_515 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="advance(subj)", span="887-887"];
m8_516 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="nlpos > 1 && subj.Buffer[nlpos - 1] == ' ' && subj.Buffer[nlpos - 2] == ' '", span="889-889"];
m8_517 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_linebreak();", span="890-890"];
m8_518 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return make_softbreak();", span="892-892"];
m8_519 [cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877"];
m8_11 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="return Reference.InvalidReference;", span="32-32"];
m8_101 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152"];
m8_102 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="var buf = subj.Buffer", span="155-155"];
m8_105 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="var pos = subj.Position", span="158-158"];
m8_106 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="var i = subj.Position", span="160-160"];
m8_110 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="cc == openticklength", span="168-168"];
m8_111 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="subj.Position = i", span="170-170"];
m8_118 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="cc == openticklength", span="182-182"];
m8_119 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="subj.Position = len", span="184-184"];
m8_103 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="var len = buf.Length", span="156-156"];
m8_108 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="buf[i] == '`'", span="162-162"];
m8_113 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="i = buf.IndexOf('`', i) - 1", span="174-174"];
m8_104 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="var cc = 0", span="157-157"];
m8_107 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="i < len", span="160-160"];
m8_120 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="return len;", span="185-185"];
m8_109 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="cc++", span="164-164"];
m8_112 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="return i;", span="171-171"];
m8_117 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="i++", span="160-160"];
m8_114 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="i == -2", span="175-175"];
m8_115 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="return 0;", span="176-176"];
m8_116 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="cc = 0", span="178-178"];
m8_121 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="return 0;", span="188-188"];
m8_122 [cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152"];
m8_12 [cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", file="SpecificationPropertyRules.cs", label="string label = NormalizeReference(lab)", span="34-34"];
m8_167 [cluster="string.Substring(int, int)", file="SpecificationPropertyRules.cs", label="Entry string.Substring(int, int)", span="0-0"];
m8_320 [cluster="System.NotSupportedException.NotSupportedException(string)", file="SpecificationPropertyRules.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m8_507 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int)", span="169-169"];
m8_84 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108"];
m8_85 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="a == null", span="110-110"];
m8_86 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="return b;", span="112-112"];
m8_87 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="a.LastSibling.NextSibling = b", span="115-115"];
m8_88 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="return a;", span="116-116"];
m8_89 [cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108"];
m8_565 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978"];
m8_566 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="input == null", span="980-980"];
m8_568 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Subject subj = make_subject(input, refmap)", span="983-983"];
m8_567 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return null;", span="981-981"];
m8_569 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="var len = subj.Buffer.Length", span="985-985"];
m8_572 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="var first = parse_inline(subj)", span="990-990"];
m8_573 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.LastInline = first.LastSibling", span="991-991"];
m8_575 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.Position < len", span="994-994"];
m8_576 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="cur = parse_inline(subj)", span="996-996"];
m8_578 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.LastInline.NextSibling = cur", span="999-999"];
m8_579 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="subj.LastInline = cur.LastSibling", span="1000-1000"];
m8_580 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="InlineStack.PostProcessInlineStack(subj, subj.FirstPendingInline, subj.LastPendingInline, InlineStack.InlineStackPriority.Maximum)", span="1004-1004"];
m8_570 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="len == 0", span="987-987"];
m8_571 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return null;", span="988-988"];
m8_581 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="return first;", span="1006-1006"];
m8_574 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Inline cur", span="993-993"];
m8_577 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="cur != null", span="997-997"];
m8_582 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978"];
m8_165 [cluster="System.Text.StringBuilder.Append(string, int, int)", file="SpecificationPropertyRules.cs", label="Entry System.Text.StringBuilder.Append(string, int, int)", span="0-0"];
m8_298 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506"];
m8_299 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="subj.Position++", span="509-509"];
m8_301 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Links, '[', out can_close)", span="512-512"];
m8_303 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var endpos = subj.Position", span="515-515"];
m8_304 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var details = ParseLinkDetails(subj)", span="518-518"];
m8_307 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var label = new StringPart(subj.Buffer, startpos, endpos - startpos - 1)", span="524-524"];
m8_308 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="details = lookup_reference(subj.ReferenceMap, label)", span="526-526"];
m8_311 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="MatchSquareBracketStack(istack, subj, null, details)", span="532-532"];
m8_300 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="bool can_close", span="511-511"];
m8_302 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="istack != null", span="513-513"];
m8_306 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var startpos = istack.StartPosition", span="523-523"];
m8_314 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label=can_close, span="538-538"];
m8_313 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="var inlText = make_str('']'')", span="536-536"];
m8_305 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="details == null || details == Reference.SelfReference", span="521-521"];
m8_309 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="details == Reference.InvalidReference", span="529-529"];
m8_310 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="details = null", span="530-530"];
m8_312 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return null;", span="533-533"];
m8_316 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="return inlText;", span="556-556"];
m8_315 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="throw new NotSupportedException(''It is not supported to have inline stack priority higher than Links.'');", span="544-544"];
m8_317 [cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", file="SpecificationPropertyRules.cs", label="Exit CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506"];
m8_583 [cluster="CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)", file="SpecificationPropertyRules.cs", label="Entry CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)", span="168-168"];
m9_108 [cluster="string.Split(params char[])", file="Tokenizer.cs", label="Entry string.Split(params char[])", span="0-0"];
m9_17 [cluster="Unk.nameLookup", file="Tokenizer.cs", label="Entry Unk.nameLookup", span=""];
m9_106 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m9_11 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m9_85 [cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m9_107 [cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m9_39 [cluster="Unk.Any", file="Tokenizer.cs", label="Entry Unk.Any", span=""];
m9_12 [cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m9_16 [cluster="Unk.IsName", file="Tokenizer.cs", label="Entry Unk.IsName", span=""];
m9_41 [cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_18 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m9_21 [cluster="Unk.Create", file="Tokenizer.cs", label="Entry Unk.Create", span=""];
m9_86 [cluster="string.Substring(int, int)", file="Tokenizer.cs", label="Entry string.Substring(int, int)", span="0-0"];
m9_87 [cluster="string.String(char, int)", file="Tokenizer.cs", label="Entry string.String(char, int)", span="0-0"];
m9_29 [cluster="Unk.Contains", file="Tokenizer.cs", label="Entry Unk.Contains", span=""];
m9_59 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="43-43"];
m9_23 [cluster="lambda expression", file="Tokenizer.cs", label="errors.Add(e)", span="18-18"];
m9_27 [cluster="lambda expression", color=green, community=0, file="Tokenizer.cs", label="!unkTokens.Contains(x)", prediction=9, span="30-30"];
m9_26 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="30-30"];
m9_22 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="18-18"];
m9_24 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="18-18"];
m9_28 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="30-30"];
m9_46 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="39-39"];
m9_50 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="41-41"];
m9_53 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m9_56 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="42-42"];
m9_60 [cluster="lambda expression", file="Tokenizer.cs", label="tokens.Concat(values)", span="43-43"];
m9_47 [cluster="lambda expression", file="Tokenizer.cs", label="arg.EqualsOrdinal(''--'')", span="39-39"];
m9_48 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="39-39"];
m9_51 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="41-41"];
m9_52 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="41-41"];
m9_54 [cluster="lambda expression", file="Tokenizer.cs", label="!arg.EqualsOrdinal(''--'')", span="42-42"];
m9_55 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m9_57 [cluster="lambda expression", file="Tokenizer.cs", label="Token.Value(t)", span="42-42"];
m9_58 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="42-42"];
m9_61 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="43-43"];
m9_43 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m9_13 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98"];
m9_90 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value == null", span="102-102"];
m9_96 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="113-113"];
m9_97 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="114-114"];
m9_100 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield break;", span="119-119"];
m9_102 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Name(parts[0]);", span="122-122"];
m9_103 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="yield return Token.Value(parts[1]);", span="123-123"];
m9_92 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="107-107"];
m9_93 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var text = value.Substring(2)", span="109-109"];
m9_99 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="onError(new BadFormatTokenError(value))", span="118-118"];
m9_91 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="104-104"];
m9_94 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var equalIndex = text.IndexOf('=')", span="110-110"];
m9_101 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="var parts = text.Split('=')", span="121-121"];
m9_95 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex <= 0", span="111-111"];
m9_98 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="equalIndex == 1", span="116-116"];
m9_104 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98"];
m9_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m9_20 [cluster="Unk.Concat", file="Tokenizer.cs", label="Entry Unk.Concat", span=""];
m9_49 [cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs", label="Entry string.EqualsOrdinal(string)", span="34-34"];
m9_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m9_105 [cluster="string.IndexOf(char)", file="Tokenizer.cs", label="Entry string.IndexOf(char)", span="0-0"];
m9_44 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m9_45 [cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="Tokenizer.cs", label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="69-69"];
m9_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m9_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="arguments == null", span="15-15"];
m9_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", prediction=10, span="20-26"];
m9_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", prediction=9, span="28-28"];
m9_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="15-15"];
m9_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="var errors = new List<Error>()", span="17-17"];
m9_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Action<Error> onError = e => errors.Add(e)", span="18-18"];
m9_7 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs", label="return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", prediction=10, span="30-30"];
m9_8 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m9_30 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m9_31 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments == null", span="37-37"];
m9_33 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39"];
m9_34 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41"];
m9_35 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42"];
m9_37 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizer(arguments);", span="45-45"];
m9_32 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''arguments'');", span="37-37"];
m9_36 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43"];
m9_38 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m9_15 [cluster="Unk.ToList", file="Tokenizer.cs", label="Entry Unk.ToList", span=""];
m9_25 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_84 [cluster="char.IsDigit(char)", file="Tokenizer.cs", label="Entry char.IsDigit(char)", span="0-0"];
m9_10 [cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_19 [cluster="UnknownOptionError.cstr", file="Tokenizer.cs", label="Entry UnknownOptionError.cstr", span=""];
m9_89 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m9_14 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48"];
m9_62 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value == null", span="52-52"];
m9_67 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(value);", span="63-63"];
m9_68 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="64-64"];
m9_70 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(text);", span="69-69"];
m9_71 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield break;", span="70-70"];
m9_73 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(first);", span="74-74"];
m9_79 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Name(n);", span="84-84"];
m9_81 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="93-93"];
m9_64 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="57-57"];
m9_65 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var text = value.Substring(1)", span="59-59"];
m9_69 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="value.Length == 2", span="67-67"];
m9_77 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="!seen.Contains(c) && nameLookup(n)", span="81-81"];
m9_63 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="throw new ArgumentNullException(''value'');", span="54-54"];
m9_66 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="char.IsDigit(text[0])", span="61-61"];
m9_72 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var first = text.Substring(0, 1)", span="73-73"];
m9_75 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="text.Substring(1)", span="78-78"];
m9_80 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Count() < text.Length", span="91-91"];
m9_74 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var seen = new List<char> { first[0] }", span="76-76"];
m9_78 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="seen.Add(c)", span="83-83"];
m9_76 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="var n = new string(c, 1)", span="80-80"];
m9_82 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48"];
m9_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Tokenizer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_88 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m9_83 [cluster="string.Substring(int)", file="Tokenizer.cs", label="Entry string.Substring(int)", span="0-0"];
m9_109 [file="Tokenizer.cs", label=errors, span=""];
m9_110 [file="Tokenizer.cs", label=unkTokens, span=""];
m9_111 [file="Tokenizer.cs", label=values, span=""];
m10_59 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47"];
m10_60 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                from t in tseq\r\n                select t;", span="51-58"];
m10_61 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47"];
m10_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="10-10"];
m10_17 [cluster="Unk.PartitionSequences", file="TokenPartitioner.cs", label="Entry Unk.PartitionSequences", span=""];
m10_86 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59"];
m10_37 [cluster="Unk.IsValue", file="TokenPartitioner.cs", label="Entry Unk.IsValue", span=""];
m10_58 [cluster="CommandLine.Core.Token.IsName()", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.IsName()", span="72-72"];
m10_13 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38"];
m10_51 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == DescriptorType.Boolean, false)\r\n                   select t;", span="42-44"];
m10_52 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38"];
m10_53 [cluster="System.Func<T, TResult>.Invoke(T)", file="TokenPartitioner.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m10_14 [cluster="Unk.Where", file="TokenPartitioner.cs", label="Entry Unk.Where", span=""];
m10_22 [cluster="Unk.Create", file="TokenPartitioner.cs", label="Entry Unk.Create", span=""];
m10_16 [cluster="Unk.PartitionScalars", file="TokenPartitioner.cs", label="Entry Unk.PartitionScalars", span=""];
m10_44 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89"];
m10_111 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="91-91"];
m10_112 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89"];
m10_30 [cluster="Unk.Contains", file="TokenPartitioner.cs", label="Entry Unk.Contains", span=""];
m10_96 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m10_108 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="83-83"];
m10_24 [cluster="lambda expression", color=green, community=0, file="TokenPartitioner.cs", label="!switches.Contains(x)", prediction=13, span="22-22"];
m10_23 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="22-22"];
m10_28 [cluster="lambda expression", color=green, community=0, file="TokenPartitioner.cs", label="!scalars.Contains(x)", prediction=14, span="24-24"];
m10_27 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="24-24"];
m10_32 [cluster="lambda expression", color=green, community=0, file="TokenPartitioner.cs", label="!sequences.Contains(x)", prediction=15, span="26-26"];
m10_31 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="26-26"];
m10_34 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="27-27"];
m10_38 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="28-28"];
m10_41 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="31-31"];
m10_45 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="32-32"];
m10_48 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="34-34"];
m10_25 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="22-22"];
m10_29 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="24-24"];
m10_33 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="26-26"];
m10_35 [cluster="lambda expression", color=green, community=1, file="TokenPartitioner.cs", label="v.IsValue()", prediction=16, span="27-27"];
m10_36 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="27-27"];
m10_40 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="28-28"];
m10_42 [cluster="lambda expression", file="TokenPartitioner.cs", label="CreateValue(t.Text,''true'')", span="31-31"];
m10_43 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="31-31"];
m10_46 [cluster="lambda expression", file="TokenPartitioner.cs", label="CreateValue(f.Text, s.Text)", span="32-32"];
m10_47 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="32-32"];
m10_49 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Text", span="34-34"];
m10_50 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="34-34"];
m10_55 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="43-43"];
m10_56 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="43-43"];
m10_57 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="43-43"];
m10_63 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="53-56"];
m10_62 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="52-56"];
m10_67 [cluster="lambda expression", file="TokenPartitioner.cs", label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="55-55"];
m10_64 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="52-56"];
m10_66 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="54-55"];
m10_68 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="54-55"];
m10_73 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {}", span="67-72"];
m10_76 [cluster="lambda expression", file="TokenPartitioner.cs", label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { }", span="69-71"];
m10_72 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="66-72"];
m10_84 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Equals(f)", span="70-70"];
m10_74 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="66-72"];
m10_75 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="68-71"];
m10_77 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="68-71"];
m10_83 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="70-70"];
m10_87 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="70-70"];
m10_90 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="70-70"];
m10_85 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="70-70"];
m10_88 [cluster="lambda expression", file="TokenPartitioner.cs", label="v.IsValue()", span="70-70"];
m10_89 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="70-70"];
m10_91 [cluster="lambda expression", file="TokenPartitioner.cs", label=items, span="70-70"];
m10_92 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="70-70"];
m10_98 [cluster="lambda expression", file="TokenPartitioner.cs", label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="82-84"];
m10_97 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="81-84"];
m10_103 [cluster="lambda expression", file="TokenPartitioner.cs", label="t.Equals(f)", span="83-83"];
m10_99 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="81-84"];
m10_102 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="83-83"];
m10_105 [cluster="lambda expression", file="TokenPartitioner.cs", label="Entry lambda expression", span="83-83"];
m10_104 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="83-83"];
m10_106 [cluster="lambda expression", file="TokenPartitioner.cs", label="v.IsValue()", span="83-83"];
m10_107 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="83-83"];
m10_109 [cluster="lambda expression", file="TokenPartitioner.cs", label="x.Text", span="83-83"];
m10_110 [cluster="lambda expression", file="TokenPartitioner.cs", label="Exit lambda expression", span="83-83"];
m10_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m10_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokenList = tokens.ToList()", prediction=17, span="20-20"];
m10_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var switches = PartitionSwitches(tokenList, typeLookup).ToList()", prediction=13, span="21-21"];
m10_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var scalars = PartitionScalars(tokensExceptSwitches, typeLookup).ToList()", prediction=14, span="23-23"];
m10_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var sequences = PartitionSequences(tokensExceptSwitchesAndScalars, typeLookup).ToList()", prediction=15, span="25-25"];
m10_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", prediction=21, span="22-22"];
m10_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return Tuple.Create(\r\n                    switches.Select(t => CreateValue(t.Text,''true''))\r\n                        .Concat(scalars.Pairwise((f, s) => CreateValue(f.Text, s.Text)))\r\n                        .Concat(SequenceTokensToKeyValuePairEnumerable(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="30-35"];
m10_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", prediction=22, span="24-24"];
m10_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", prediction=23, span="26-26"];
m10_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs", label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", prediction=24, span="27-27"];
m10_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m10_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m10_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m10_20 [cluster="Unk.Concat", file="TokenPartitioner.cs", label="Entry Unk.Concat", span=""];
m10_69 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61"];
m10_70 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>     \r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {})\r\n                from t in tseq\r\n                select t;", span="65-74"];
m10_71 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61"];
m10_95 [cluster="Unk.Pairwise", file="TokenPartitioner.cs", label="Entry Unk.Pairwise", span=""];
m10_79 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m10_21 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77"];
m10_93 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="80-86"];
m10_94 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs", label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77"];
m10_18 [cluster="Unk.Select", file="TokenPartitioner.cs", label="Entry Unk.Select", span=""];
m10_101 [cluster="Unk.CreateValue", file="TokenPartitioner.cs", label="Entry Unk.CreateValue", span=""];
m10_15 [cluster="Unk.ToList", file="TokenPartitioner.cs", label="Entry Unk.ToList", span=""];
m10_65 [cluster="CommandLine.Core.Token.IsValue()", file="TokenPartitioner.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m10_113 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m10_80 [cluster="CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", file="TokenPartitioner.cs", label="Entry CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", span="103-103"];
m10_100 [cluster="Unk.ToArray", file="TokenPartitioner.cs", label="Entry Unk.ToArray", span=""];
m10_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m10_54 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TokenPartitioner.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m10_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m10_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TokenPartitioner.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m10_114 [file="TokenPartitioner.cs", label=switches, span=""];
m10_115 [file="TokenPartitioner.cs", label=scalars, span=""];
m10_116 [file="TokenPartitioner.cs", label=sequences, span=""];
m10_117 [file="TokenPartitioner.cs", label=values, span=""];
m10_118 [file="TokenPartitioner.cs", label=t, span=""];
m10_119 [file="TokenPartitioner.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m10_120 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m10_121 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m10_122 [file="TokenPartitioner.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m10_123 [file="TokenPartitioner.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m10_124 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m10_125 [file="TokenPartitioner.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m10_126 [file="TokenPartitioner.cs", label="CommandLine.Core.Token", span=""];
m11_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13"];
m11_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="16-19"];
m11_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", prediction=25, span="20-24"];
m11_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="33-33"];
m11_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="27-30"];
m11_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13"];
m11_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m11_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="16-16"];
m11_13 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m11_17 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m11_12 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m11_39 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="59-59"];
m11_15 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="29-29"];
m11_14 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="29-29"];
m11_19 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33"];
m11_18 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="33-33"];
m11_16 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="29-29"];
m11_20 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="33-33"];
m11_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="33-33"];
m11_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33"];
m11_24 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="33-33"];
m11_33 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="55-55"];
m11_36 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="59-59"];
m11_35 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="55-55"];
m11_38 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="59-59"];
m11_41 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="59-59"];
m11_25 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m11_9 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m11_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m11_26 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m11_21 [cluster="Unk.Any", file="TokenPartitionerTests.cs", label="Entry Unk.Any", span=""];
m11_10 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m11_27 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m11_32 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m11_8 [cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_42 [file="TokenPartitionerTests.cs", label=specs, span=""];
m11_43 [file="TokenPartitionerTests.cs", label=result, span=""];
m11_44 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m11_45 [file="TokenPartitionerTests.cs", label=specs, span=""];
m11_46 [file="TokenPartitionerTests.cs", label=result, span=""];
m11_47 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_24 -> m2_30  [color=green, key=1, label=lines, style=dashed];
m2_63 -> m2_65  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_66 -> m2_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_66 -> m2_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_66 -> m2_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_66 -> m2_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_78 -> m2_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_81 -> m2_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_81 -> m2_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_81 -> m2_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_81 -> m2_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_156 -> m2_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_91 -> m2_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m2_94 -> m2_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_94 -> m2_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_185 -> m2_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_132 -> m2_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_132 -> m2_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_8 -> m2_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_105 -> m2_133  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_105 -> m2_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_107 -> m2_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_107 -> m2_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_173 -> m2_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_173 -> m2_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_173 -> m2_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_173 -> m2_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m2_173 -> m2_179  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_2 -> m3_16  [color=green, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_7 -> m5_15  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_22 -> m5_5  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_22 -> m5_9  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_22 -> m5_10  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_22 -> m5_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_22 -> m5_16  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_22 -> m5_17  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m6_8 -> m6_21  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m6_19 -> m6_21  [color=darkseagreen4, key=1, label=va, style=dashed];
m7_15 -> m7_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m7_15 -> m7_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m7_16 -> m7_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m7_16 -> m7_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m7_17 -> m7_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m7_6 -> m7_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m7_34 -> m7_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m7_35 -> m7_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m7_43 -> m7_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m8_49 -> m8_51  [color=darkseagreen4, key=1, label="CommonMark.Syntax.InlineTag", style=dashed];
m8_49 -> m8_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_50 -> m8_52  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_50 -> m8_53  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_169 -> m8_172  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_169 -> m8_174  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_169 -> m8_180  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_170 -> m8_173  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_170 -> m8_179  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_170 -> m8_180  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_175 -> m8_180  [color=darkseagreen4, key=1, label=startpos, style=dashed];
m8_176 -> m8_180  [color=darkseagreen4, key=1, label=endpos, style=dashed];
m8_173 -> m8_173  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_173 -> m8_179  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_173 -> m8_180  [color=darkseagreen4, key=1, label=ticklength, style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringPart", style=dashed];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_318 -> m8_486  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_479 -> m8_493  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_494 -> m8_496  [color=darkseagreen4, key=1, label=label, style=dashed];
m8_498 -> m8_500  [color=darkseagreen4, key=1, label=details, style=dashed];
m8_5 -> m8_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_5 -> m8_129  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_5 -> m8_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_5 -> m8_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_5 -> m8_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_5 -> m8_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_5 -> m8_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_5 -> m8_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_5 -> m8_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_125 -> m8_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_133  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_156  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_159  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_125 -> m8_160  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_129 -> m8_129  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_129 -> m8_130  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_129 -> m8_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_129 -> m8_159  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_138 -> m8_143  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_138 -> m8_153  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_138 -> m8_160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_139 -> m8_143  [color=darkseagreen4, key=1, label=pos, style=dashed];
m8_142 -> m8_144  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_142 -> m8_158  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_142 -> m8_160  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_142 -> m8_161  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_145 -> m8_147  [color=darkseagreen4, key=1, label=pos, style=dashed];
m8_149 -> m8_153  [color=darkseagreen4, key=1, label=pos, style=dashed];
m8_152 -> m8_158  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_152 -> m8_160  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_152 -> m8_161  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_154 -> m8_156  [color=darkseagreen4, key=1, label=pos, style=dashed];
m8_133 -> m8_133  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_133 -> m8_134  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_133 -> m8_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_133 -> m8_156  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_133 -> m8_159  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_133 -> m8_160  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_136 -> m8_141  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_143  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_144  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_151  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_153  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_158  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_160  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_136 -> m8_161  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_148 -> m8_160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_157 -> m8_160  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_205 -> m8_208  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_205 -> m8_215  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_205 -> m8_222  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_205 -> m8_223  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_205 -> m8_230  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_207 -> m8_211  [color=darkseagreen4, key=1, label=openerDelims, style=dashed];
m8_209 -> m8_232  [color=darkseagreen4, key=1, label=useDelims, style=dashed];
m8_210 -> m8_232  [color=darkseagreen4, key=1, label=useDelims, style=dashed];
m8_30 -> m8_33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_30 -> m8_34  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_321 -> m8_323  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_321 -> m8_327  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_321 -> m8_330  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_325 -> m8_328  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
m8_325 -> m8_329  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
m8_27 -> m8_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
m8_33 -> m8_41  [color=green, key=1, label="lambda expression", style=dashed];
m8_33 -> m8_48  [color=green, key=1, label=setsWithTrue, style=dashed];
m8_63 -> m8_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_261 -> m8_270  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_263 -> m8_271  [color=darkseagreen4, key=1, label=inlText, style=dashed];
m8_264 -> m8_270  [color=darkseagreen4, key=1, label=istack, style=dashed];
m8_437 -> m8_440  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_437 -> m8_445  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_441 -> m8_443  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_34 -> m8_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_32 -> m8_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_35 -> m8_39  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_36 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m8_61 -> m8_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_61 -> m8_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m8_7 -> m8_10  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringPart", style=dashed];
m8_183 -> m8_189  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_183 -> m8_199  [color=darkseagreen4, key=1, label=char, style=dashed];
m8_184 -> m8_189  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_184 -> m8_190  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_184 -> m8_192  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_184 -> m8_195  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_184 -> m8_202  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_186 -> m8_189  [color=darkseagreen4, key=1, label=startpos, style=dashed];
m8_187 -> m8_189  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_190 -> m8_190  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_190 -> m8_192  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_190 -> m8_195  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_190 -> m8_202  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_198 -> m8_203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_200 -> m8_203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_197 -> m8_203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_201 -> m8_203  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_55 -> m8_57  [color=darkseagreen4, key=1, label="CommonMark.Syntax.InlineTag", style=dashed];
m8_58 -> m8_61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m8_75 -> m8_48  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m8_360 -> m8_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_373 -> m8_374  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_428 -> m8_430  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_431 -> m8_434  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_336 -> m8_352  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_336 -> m8_353  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_340 -> m8_343  [color=darkseagreen4, key=1, label=namedEntity, style=dashed];
m8_340 -> m8_347  [color=darkseagreen4, key=1, label=numericEntity, style=dashed];
m8_340 -> m8_352  [color=darkseagreen4, key=1, label=match, style=dashed];
m8_344 -> m8_346  [color=darkseagreen4, key=1, label=decoded, style=dashed];
m8_348 -> m8_350  [color=darkseagreen4, key=1, label=decoded, style=dashed];
m8_520 -> m8_545  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_520 -> m8_546  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_520 -> m8_550  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_520 -> m8_552  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_520 -> m8_559  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_549 -> m8_553  [color=darkseagreen4, key=1, label=endpos, style=dashed];
m8_447 -> m8_451  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_466 -> m8_468  [color=darkseagreen4, key=1, label=contents, style=dashed];
m8_235 -> m8_245  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_235 -> m8_255  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_237 -> m8_242  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_237 -> m8_244  [color=darkseagreen4, key=1, label=numdelims, style=dashed];
m8_237 -> m8_248  [color=darkseagreen4, key=1, label=can_open, style=dashed];
m8_239 -> m8_248  [color=darkseagreen4, key=1, label=can_close, style=dashed];
m8_247 -> m8_256  [color=darkseagreen4, key=1, label=inlText, style=dashed];
m8_249 -> m8_255  [color=darkseagreen4, key=1, label=istack, style=dashed];
m8_509 -> m8_598  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_509 -> m8_601  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_509 -> m8_603  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_509 -> m8_611  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_509 -> m8_615  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_509 -> m8_619  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_595 -> m8_608  [color=darkseagreen4, key=1, label=source, style=dashed];
m8_599 -> m8_602  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_607 -> m8_615  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_612 -> m8_617  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_618 -> m8_620  [color=darkseagreen4, key=1, label=label, style=dashed];
m8_596 -> m8_598  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_609 -> m8_615  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_273 -> m8_285  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_273 -> m8_288  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_273 -> m8_289  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_273 -> m8_291  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_273 -> m8_292  [color=darkseagreen4, key=1, label="CommonMark.Parser.InlineStack", style=dashed];
m8_273 -> m8_293  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_282 -> m8_285  [color=darkseagreen4, key=1, label=temp, style=dashed];
m8_282 -> m8_286  [color=darkseagreen4, key=1, label=temp, style=dashed];
m8_376 -> m8_387  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_392  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_406  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_414  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_418  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_422  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_376 -> m8_423  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_383 -> m8_386  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_383 -> m8_399  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_384 -> m8_394  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_391 -> m8_421  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_391 -> m8_423  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_391 -> m8_424  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_397 -> m8_401  [color=darkseagreen4, key=1, label=namedEntity, style=dashed];
m8_397 -> m8_406  [color=darkseagreen4, key=1, label=match, style=dashed];
m8_397 -> m8_409  [color=darkseagreen4, key=1, label=numericEntity, style=dashed];
m8_397 -> m8_414  [color=darkseagreen4, key=1, label=match, style=dashed];
m8_397 -> m8_418  [color=darkseagreen4, key=1, label=match, style=dashed];
m8_405 -> m8_407  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_405 -> m8_421  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_405 -> m8_423  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_405 -> m8_424  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_413 -> m8_415  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_413 -> m8_421  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_413 -> m8_423  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_413 -> m8_424  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_417 -> m8_419  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_417 -> m8_421  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_417 -> m8_423  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_417 -> m8_424  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_378 -> m8_392  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_378 -> m8_406  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_378 -> m8_414  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_378 -> m8_418  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_378 -> m8_423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_382 -> m8_390  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_392  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_404  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_406  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_407  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_412  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_414  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_415  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_416  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_418  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_419  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_421  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_423  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_382 -> m8_424  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_386 -> m8_386  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_386 -> m8_392  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_399 -> m8_399  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_400 -> m8_406  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_400 -> m8_414  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_400 -> m8_418  [color=darkseagreen4, key=1, label=searchPos, style=dashed];
m8_393 -> m8_423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_402 -> m8_407  [color=darkseagreen4, key=1, label=decoded, style=dashed];
m8_410 -> m8_415  [color=darkseagreen4, key=1, label=decoded, style=dashed];
m8_408 -> m8_423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_420 -> m8_423  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m8_624 -> m8_658  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
m8_625 -> m8_633  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_634  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_636  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_644  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_652  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_653  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_654  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_655  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_656  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_625 -> m8_659  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_630 -> m8_658  [color=darkseagreen4, key=1, label=lab, style=dashed];
m8_641 -> m8_658  [color=darkseagreen4, key=1, label=url, style=dashed];
m8_648 -> m8_658  [color=darkseagreen4, key=1, label=title, style=dashed];
m8_651 -> m8_658  [color=darkseagreen4, key=1, label=title, style=dashed];
m8_584 -> m8_588  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_584 -> m8_591  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_586 -> m8_588  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_510 -> m8_512  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_510 -> m8_514  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_510 -> m8_515  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_510 -> m8_516  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_511 -> m8_516  [color=darkseagreen4, key=1, label=nlpos, style=dashed];
m8_101 -> m8_110  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_101 -> m8_118  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_102 -> m8_108  [color=darkseagreen4, key=1, label=buf, style=dashed];
m8_106 -> m8_108  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_106 -> m8_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_106 -> m8_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_103 -> m8_107  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_103 -> m8_120  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_113 -> m8_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_104 -> m8_109  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_104 -> m8_110  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_104 -> m8_118  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_109 -> m8_109  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_109 -> m8_118  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_117 -> m8_117  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_116 -> m8_118  [color=darkseagreen4, key=1, label=cc, style=dashed];
m8_84 -> m8_86  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
m8_84 -> m8_88  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
m8_568 -> m8_575  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_568 -> m8_580  [color=darkseagreen4, key=1, label=subj, style=dashed];
m8_569 -> m8_575  [color=darkseagreen4, key=1, label=len, style=dashed];
m8_572 -> m8_581  [color=darkseagreen4, key=1, label=first, style=dashed];
m8_298 -> m8_311  [color=darkseagreen4, key=1, label="CommonMark.Parser.Subject", style=dashed];
m8_301 -> m8_311  [color=darkseagreen4, key=1, label=istack, style=dashed];
m8_301 -> m8_314  [color=darkseagreen4, key=1, label=can_close, style=dashed];
m8_304 -> m8_309  [color=darkseagreen4, key=1, label=details, style=dashed];
m8_304 -> m8_311  [color=darkseagreen4, key=1, label=details, style=dashed];
m8_308 -> m8_311  [color=darkseagreen4, key=1, label=details, style=dashed];
m8_313 -> m8_316  [color=darkseagreen4, key=1, label=inlText, style=dashed];
m9_13 -> m9_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_13 -> m9_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_93 -> m9_96  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_94 -> m9_98  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m9_101 -> m9_103  [color=darkseagreen4, key=1, label=parts, style=dashed];
m9_5 -> m9_7  [color=green, key=1, label=tokens, style=dashed];
m9_6 -> m9_27  [color=green, key=1, label=unkTokens, style=dashed];
m9_3 -> m9_23  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_3 -> m9_7  [color=green, key=1, label=errors, style=dashed];
m9_4 -> m9_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m9_7 -> m9_26  [color=green, key=1, label="lambda expression", style=dashed];
m9_7 -> m9_7  [color=green, key=1, label=t, style=dashed];
m9_30 -> m9_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m9_30 -> m9_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m9_33 -> m9_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_36  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m9_35 -> m9_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m9_36 -> m9_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_14 -> m9_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_14 -> m9_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_14 -> m9_77  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m9_65 -> m9_70  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_65 -> m9_75  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_65 -> m9_80  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_65 -> m9_81  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_75 -> m9_77  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_75 -> m9_78  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_74 -> m9_77  [color=darkseagreen4, key=1, label=seen, style=dashed];
m9_74 -> m9_78  [color=darkseagreen4, key=1, label=seen, style=dashed];
m9_74 -> m9_80  [color=darkseagreen4, key=1, label=seen, style=dashed];
m9_74 -> m9_81  [color=darkseagreen4, key=1, label=seen, style=dashed];
m9_76 -> m9_79  [color=darkseagreen4, key=1, label=n, style=dashed];
m9_109 -> m9_23  [color=darkseagreen4, key=1, label=errors, style=dashed];
m9_110 -> m9_27  [color=green, key=1, label=unkTokens, style=dashed];
m9_111 -> m9_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_59 -> m10_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_60 -> m10_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_60 -> m10_60  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m10_51 -> m10_51  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_51 -> m10_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_51 -> m10_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_63 -> m10_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_62 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_73 -> m10_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_76 -> m10_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_76 -> m10_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_76 -> m10_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_72 -> m10_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_72 -> m10_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_98 -> m10_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_98 -> m10_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_98 -> m10_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_97 -> m10_103  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_2 -> m10_24  [color=green, key=1, label=switches, style=dashed];
m10_2 -> m10_10  [color=green, key=1, label=switches, style=dashed];
m10_4 -> m10_28  [color=green, key=1, label=scalars, style=dashed];
m10_4 -> m10_10  [color=green, key=1, label=scalars, style=dashed];
m10_6 -> m10_32  [color=green, key=1, label=sequences, style=dashed];
m10_6 -> m10_10  [color=green, key=1, label=sequences, style=dashed];
m10_3 -> m10_23  [color=green, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_5 -> m10_27  [color=green, key=1, label="lambda expression", style=dashed];
m10_7 -> m10_31  [color=green, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_34  [color=green, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_10  [color=green, key=1, label=values, style=dashed];
m10_69 -> m10_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_69 -> m10_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_70 -> m10_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_70 -> m10_70  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m10_21 -> m10_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_93 -> m10_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_93 -> m10_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_114 -> m10_24  [color=green, key=1, label=switches, style=dashed];
m10_115 -> m10_28  [color=green, key=1, label=scalars, style=dashed];
m10_116 -> m10_32  [color=green, key=1, label=sequences, style=dashed];
m10_118 -> m10_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_119 -> m10_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_120 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_121 -> m10_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_122 -> m10_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_122 -> m10_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_123 -> m10_73  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m10_124 -> m10_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_124 -> m10_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m10_125 -> m10_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_126 -> m10_103  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m11_2 -> m11_15  [color=green, key=1, label=specs, style=dashed];
m11_4 -> m11_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_19 -> m11_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_19 -> m11_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m11_23 -> m11_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m11_42 -> m11_15  [color=darkseagreen4, key=1, label=specs, style=dashed];
m11_43 -> m11_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_44 -> m11_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
}
