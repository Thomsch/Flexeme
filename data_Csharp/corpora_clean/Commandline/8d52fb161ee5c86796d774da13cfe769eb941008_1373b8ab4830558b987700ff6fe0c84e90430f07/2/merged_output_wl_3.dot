digraph  {
m1_66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="268-268"];
m1_71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="278-278"];
m1_72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252"];
m1_73 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_74 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="330-330"];
m1_75 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpTextTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="var pr = new NotParsed<object>(err.Type.AutoDefault(), Enumerable.Empty<Error>())", span="274-274"];
m1_70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="return AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current));", span="275-275"];
m1_67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="271-271"];
m1_68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="err.Matched", span="272-272"];
m1_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239"];
m1_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="247-247"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250"];
m1_149 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="383-383"];
m1_155 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="return AddOptionsImpl(this.AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="405-405"];
m1_156 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="400-400"];
m1_157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="parserResult == null", span="422-422"];
m1_158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="throw new ArgumentNullException(''parserResult'');", span="422-422"];
m1_159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="424-425"];
m1_160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="meaningfulErrors.Empty()", span="426-426"];
m1_161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="return string.Empty;", span="428-428"];
m1_150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="400-400"];
m1_151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="types == null", span="402-402"];
m1_152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="throw new ArgumentNullException(''types'');", span="402-402"];
m1_153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="types.Length == 0", span="403-403"];
m1_154 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpTextTests.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="403-403"];
m1_162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="var text = new StringBuilder()", span="431-431"];
m1_192 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="471-471"];
m1_195 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="473-473"];
m1_196 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="476-476"];
m1_197 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="478-478"];
m1_198 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="var wordBuffer = 0", span="481-481"];
m1_199 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="var words = value.Split(' ')", span="482-482"];
m1_200 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="var i = 0", span="483-483"];
m1_201 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="i < words.Length", span="483-483"];
m1_202 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="485-485"];
m1_203 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="builder.Append(words[i])", span="487-487"];
m1_193 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="473-473"];
m1_194 [cluster="lambda expression", file="HelpTextTests.cs", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="473-473"];
m1_204 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="wordBuffer += words[i].Length", span="488-488"];
m1_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="auto.AddDashesToOption = false", span="231-231"];
m1_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="return auto;", span="239-239"];
m1_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="193-193"];
m1_44 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="471-471"];
m1_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_47 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpTextTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m1_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="auto.AddVerbs(parserResult.VerbTypes.ToArray())", span="232-232"];
m1_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="auto.AddOptions(parserResult.Value)", span="236-236"];
m1_49 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="HelpTextTests.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m1_177 [cluster="lambda expression", file="HelpTextTests.cs", label="text.AppendLine(line.ToString())", span="439-439"];
m1_184 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="int ExtraLength = 10", span="455-455"];
m1_185 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="456-468"];
m1_186 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="453-453"];
m1_187 [cluster="string.SafeLength()", file="HelpTextTests.cs", label="Entry string.SafeLength()", span="40-40"];
m1_188 [cluster="System.Text.StringBuilder.SafeLength()", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="76-76"];
m1_179 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_180 [cluster="int.Spaces()", file="HelpTextTests.cs", label="Entry int.Spaces()", span="30-30"];
m1_181 [cluster="Unk.formatError", file="HelpTextTests.cs", label="Entry Unk.formatError", span=""];
m1_182 [cluster="System.Text.StringBuilder.Append(string)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_183 [cluster="System.Text.StringBuilder.AppendLine(string)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m1_178 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="435-440"];
m1_189 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
m1_3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18"];
m1_290 [cluster="string.PadRight(int)", file="HelpTextTests.cs", label="Entry string.PadRight(int)", span="0-0"];
m1_369 [cluster="T.ToStringInvariant<T>()", file="HelpTextTests.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m1_121 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="320-320"];
m1_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="usage.FromJust().AddToHelpText(auto, true)", span="226-226"];
m1_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="var usage = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="223-223"];
m1_311 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107"];
m1_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223"];
m1_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225"];
m1_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="224-224"];
m1_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="226-226"];
m1_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m1_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m1_119 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="320-320"];
m1_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="99-99"];
m1_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="this.heading = heading", span="103-103"];
m1_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="415-415"];
m1_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="218-239"];
m1_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="220-220"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_335 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="713-713"];
m1_338 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="var specLength = 0", span="715-715"];
m1_339 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="var hasShort = spec.ShortName.Length > 0", span="717-717"];
m1_340 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="var hasLong = spec.LongName.Length > 0", span="718-718"];
m1_342 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="spec.MetaValue.Length > 0", span="721-721"];
m1_343 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="metaLength = spec.MetaValue.Length + 1", span="723-723"];
m1_350 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="specLength += spec.LongName.Length", span="739-739"];
m1_345 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="++specLength", span="728-728"];
m1_355 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="specLength += 2", span="750-750"];
m1_356 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="return specLength;", span="753-753"];
m1_344 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label=hasShort, span="726-726"];
m1_354 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="hasShort && hasLong", span="748-748"];
m1_341 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="var metaLength = 0", span="720-720"];
m1_349 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label=hasLong, span="737-737"];
m1_348 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="specLength += metaLength", span="734-734"];
m1_353 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="specLength += metaLength", span="745-745"];
m1_346 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label=AddDashesToOption, span="729-729"];
m1_347 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="++specLength", span="731-731"];
m1_351 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label=AddDashesToOption, span="740-740"];
m1_352 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="specLength += 2", span="742-742"];
m1_357 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="713-713"];
m1_218 [cluster="string.Substring(int, int)", file="HelpTextTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_219 [cluster="System.Math.Min(int, int)", color=green, community=1, file="HelpTextTests.cs", label="0: Entry System.Math.Min(int, int)", span="0-0"];
m1_220 [cluster="string.Substring(int)", color=green, community=0, file="HelpTextTests.cs", label="0: Entry string.Substring(int)", span="0-0"];
m1_221 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, file="HelpTextTests.cs", label="0: var specs = options.GetType().GetSpecifications(Specification.FromProperty)", span="516-516"];
m1_222 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, file="HelpTextTests.cs", label="0: var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() })", span="517-519"];
m1_223 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, file="HelpTextTests.cs", label="0: var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="520-522"];
m1_224 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, file="HelpTextTests.cs", label="0: return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="523-525"];
m1_225 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, file="HelpTextTests.cs", label="0: Exit CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="514-514"];
m1_226 [cluster="object.GetType()", color=green, community=0, file="HelpTextTests.cs", label="0: Entry object.GetType()", span="0-0"];
m1_227 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", color=green, community=0, file="HelpTextTests.cs", label="0: Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m1_228 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", color=green, community=0, file="HelpTextTests.cs", label="0: Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="558-558"];
m1_229 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", color=green, community=0, file="HelpTextTests.cs", label="0: Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="568-568"];
m1_230 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0, file="HelpTextTests.cs", label="0: Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_231 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", color=green, community=0, file="HelpTextTests.cs", label="1: Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_232 [cluster="lambda expression", color=green, community=0, file="HelpTextTests.cs", label="1: Entry lambda expression", span="522-522"];
m1_233 [cluster="lambda expression", color=green, community=0, file="HelpTextTests.cs", label="0: v.Index", span="522-522"];
m1_234 [cluster="lambda expression", color=green, community=0, file="HelpTextTests.cs", label="0: Exit lambda expression", span="522-522"];
m1_235 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", color=green, community=0, file="HelpTextTests.cs", label="0: return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() });", span="530-537"];
m1_236 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", color=green, community=0, file="HelpTextTests.cs", label="0: Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="528-528"];
m1_237 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", color=green, community=0, file="HelpTextTests.cs", label="0: Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m1_238 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", color=green, community=0, file="HelpTextTests.cs", label="0: Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m1_239 [cluster="Unk.Concat", color=green, community=0, file="HelpTextTests.cs", label="0: Entry Unk.Concat", span=""];
m1_240 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=green, community=0, file="HelpTextTests.cs", label="0: var maxLength = GetMaxLength(specifications)", span="545-545"];
m1_241 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", color=green, community=0, file="HelpTextTests.cs", label="0: optionsHelp = new StringBuilder(BuilderCapacity)", span="547-547"];
m1_242 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpTextTests.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="549-549"];
m1_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="218-239"];
m1_294 [cluster="string.Trim()", file="HelpTextTests.cs", label="Entry string.Trim()", span="0-0"];
m1_293 [cluster="string.FormatInvariant(params object[])", file="HelpTextTests.cs", label="Entry string.FormatInvariant(params object[])", span="20-20"];
m1_124 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="330-330"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m1_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
m1_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_54 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="366-366"];
m1_56 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="229-229"];
m1_57 [cluster="lambda expression", file="HelpTextTests.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="229-229"];
m1_58 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="229-229"];
m1_51 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpTextTests.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m1_59 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251"];
m1_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="249-249"];
m1_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m1_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
m1_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="193-193"];
m1_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="198-203"];
m1_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="var errors = Enumerable.Empty<Error>()", span="205-205"];
m1_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="207-207"];
m1_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="209-209"];
m1_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="FilterMeaningfulErrors(errors).Any()", span="211-211"];
m1_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="auto = onError(auto)", span="213-213"];
m1_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="var license = ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()", span="217-217"];
m1_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="HelpTextTests.cs", label="license.IsJust()", span="218-218"];
m1_78 [cluster="System.Type.AutoDefault()", file="HelpTextTests.cs", label="Entry System.Type.AutoDefault()", span="151-151"];
m1_83 [cluster="lambda expression", file="HelpTextTests.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="266-266"];
m1_84 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="266-266"];
m1_85 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="268-268"];
m1_86 [cluster="lambda expression", file="HelpTextTests.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="268-268"];
m1_87 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="268-268"];
m1_81 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="261-261"];
m1_82 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="266-266"];
m1_79 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="261-261"];
m1_80 [cluster="lambda expression", file="HelpTextTests.cs", label="e.Tag == ErrorType.VersionRequestedError", span="261-261"];
m1_89 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="275-275"];
m1_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m1_310 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="21-21"];
m1_90 [cluster="lambda expression", file="HelpTextTests.cs", label="DefaultParsingErrorsHandler(pr, current)", span="275-275"];
m1_93 [cluster="lambda expression", file="HelpTextTests.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="278-278"];
m1_94 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="278-278"];
m1_91 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="275-275"];
m1_92 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="278-278"];
m1_250 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="585-585"];
m1_258 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp.Append(''  '')", span="587-587"];
m1_259 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="588-592"];
m1_260 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="594-596"];
m1_261 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="var optionHelpText = specification.HelpText", span="598-598"];
m1_262 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="600-600"];
m1_263 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="602-602"];
m1_264 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="specification.DefaultValue.IsJust()", span="605-605"];
m1_265 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(specification.DefaultValue.FromJust()) + optionHelpText", span="607-607"];
m1_266 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="specification.Required", span="610-610"];
m1_267 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="612-612"];
m1_273 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="623-623"];
m1_276 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="627-627"];
m1_279 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="633-633"];
m1_280 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="635-635"];
m1_281 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="wordBuffer = widthOfHelpText", span="636-636"];
m1_284 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="646-647"];
m1_285 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionHelpText.Length > widthOfHelpText", span="649-649"];
m1_268 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="615-615"];
m1_270 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="var words = optionHelpText.Split(new[] { ' ' })", span="620-620"];
m1_283 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="645-645"];
m1_286 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="652-655"];
m1_269 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="var wordBuffer = 0", span="619-619"];
m1_275 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="wordBuffer += words[i].Length", span="626-626"];
m1_271 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="var i = 0", span="621-621"];
m1_272 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="i < words.Length", span="621-621"];
m1_274 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp.Append(words[i])", span="625-625"];
m1_282 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="i++", span="621-621"];
m1_278 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="wordBuffer++", span="630-630"];
m1_277 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="optionsHelp.Append('' '')", span="629-629"];
m1_287 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="return this;", span="657-657"];
m1_288 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="585-585"];
m1_254 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="568-568"];
m1_253 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpTextTests.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="570-575"];
m1_312 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="33-33"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254"];
m1_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m1_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309"];
m1_248 [cluster="lambda expression", file="HelpTextTests.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="553-553"];
m1_247 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="552-553"];
m1_249 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="552-553"];
m1_297 [cluster="lambda expression", file="HelpTextTests.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="591-591"];
m1_301 [cluster="lambda expression", file="HelpTextTests.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="592-592"];
m1_296 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="591-591"];
m1_300 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="592-592"];
m1_298 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="591-591"];
m1_302 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="592-592"];
m1_308 [cluster="lambda expression", file="HelpTextTests.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="666-670"];
m1_314 [cluster="lambda expression", file="HelpTextTests.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="673-676"];
m1_307 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="666-670"];
m1_313 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="673-676"];
m1_309 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="666-670"];
m1_315 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="673-676"];
m1_319 [cluster="lambda expression", file="HelpTextTests.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="685-685"];
m1_323 [cluster="lambda expression", file="HelpTextTests.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="686-686"];
m1_318 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="685-685"];
m1_322 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="686-686"];
m1_320 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="685-685"];
m1_324 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="686-686"];
m1_331 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="702-709"];
m1_332 [cluster="lambda expression", file="HelpTextTests.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec)", span="704-706"];
m1_333 [cluster="lambda expression", file="HelpTextTests.cs", label="return Math.Max(length, specLength);", span="708-708"];
m1_334 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="702-709"];
m1_134 [cluster="object.Equals(object, object)", file="HelpTextTests.cs", label="Entry object.Equals(object, object)", span="0-0"];
m1_136 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="540-540"];
m1_138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="throw new ArgumentNullException(''types'');", span="368-368"];
m1_142 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="366-366"];
m1_129 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="692-692"];
m1_135 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="514-514"];
m1_137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="types == null", span="368-368"];
m1_139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="types.Length == 0", span="369-369"];
m1_141 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="return AddOptionsImpl(\r\n                this.AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="371-374"];
m1_143 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpTextTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_140 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpTextTests.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="369-369"];
m1_306 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="53-53"];
m1_299 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="660-660"];
m1_304 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="662-677"];
m1_305 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="660-660"];
m1_65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="266-266"];
m1_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m1_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306"];
m1_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="this.copyright = copyright", span="104-104"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297"];
m1_77 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255"];
m1_291 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpTextTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m1_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="throw new ArgumentNullException(''copyright'');", span="97-97"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
m1_217 [cluster="string.Split(params char[])", file="HelpTextTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300"];
m1_123 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="332-332"];
m1_295 [cluster="string.String(char, int)", file="HelpTextTests.cs", label="Entry string.String(char, int)", span="0-0"];
m1_125 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="578-578"];
m1_205 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="489-489"];
m1_214 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=green, community=0, file="HelpTextTests.cs", label="0: value.Length > maximumLength", span="509-509"];
m1_208 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="495-495"];
m1_213 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="507-507"];
m1_215 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=green, community=0, file="HelpTextTests.cs", label="0: builder.Append(value)", span="511-511"];
m1_207 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="wordBuffer++", span="492-492"];
m1_209 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="497-497"];
m1_210 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="wordBuffer = maximumLength", span="498-498"];
m1_211 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="i++", span="483-483"];
m1_212 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="506-506"];
m1_206 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="builder.Append('' '')", span="491-491"];
m1_216 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="476-476"];
m1_145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="383-383"];
m1_146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="HelpTextTests.cs", label="Equals(options, default(T))", span="385-385"];
m1_148 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", color=red, community=0, file="HelpTextTests.cs", label="0: return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="387-390"];
m1_147 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", file="HelpTextTests.cs", label="throw new ArgumentNullException(''options'');", span="385-385"];
m1_321 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m1_243 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpTextTests.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="551-553"];
m1_244 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpTextTests.cs", label="return this;", span="555-555"];
m1_245 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="540-540"];
m1_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_255 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpTextTests.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="580-580"];
m1_256 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpTextTests.cs", label="return this;", span="582-582"];
m1_257 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="578-578"];
m1_6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
m1_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
m1_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="sentenceBuilder == null", span="95-95"];
m1_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="95-95"];
m1_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="heading == null", span="96-96"];
m1_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="throw new ArgumentNullException(''heading'');", span="96-96"];
m1_7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
m1_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpTextTests.cs", label="copyright == null", span="97-97"];
m1_325 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpTextTests.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="694-694"];
m1_326 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpTextTests.cs", label="return this;", span="696-696"];
m1_327 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="692-692"];
m1_169 [cluster="Unk.ForEach", file="HelpTextTests.cs", label="Entry Unk.ForEach", span=""];
m1_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="314-314"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_303 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="680-680"];
m1_316 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="682-689"];
m1_317 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="680-680"];
m1_337 [cluster="System.Math.Max(int, int)", file="HelpTextTests.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m1_246 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="699-699"];
m1_328 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpTextTests.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="701-709"];
m1_329 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="699-699"];
m1_289 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpTextTests.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="47-47"];
m1_252 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="558-558"];
m1_251 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpTextTests.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="560-565"];
m1_292 [cluster="string.FormatLocal(params object[])", file="HelpTextTests.cs", label="Entry string.FormatLocal(params object[])", span="25-25"];
m1_336 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="756-756"];
m1_358 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="var specLength = 0", span="758-758"];
m1_359 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="var hasMeta = spec.MetaName.Length > 0", span="760-760"];
m1_361 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="spec.MetaValue.Length > 0", span="763-763"];
m1_362 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="metaLength = spec.MetaValue.Length + 1", span="765-765"];
m1_364 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="770-770"];
m1_365 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="774-774"];
m1_360 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="var metaLength = 0", span="762-762"];
m1_363 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label=hasMeta, span="768-768"];
m1_366 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="specLength += metaLength", span="777-777"];
m1_367 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="return specLength;", span="779-779"];
m1_368 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpTextTests.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="756-756"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253"];
m1_330 [cluster="Unk.Aggregate", file="HelpTextTests.cs", label="Entry Unk.Aggregate", span=""];
m1_370 [file="HelpTextTests.cs", label="CommandLine.Text.HelpText", span=""];
m1_371 [file="HelpTextTests.cs", label="CommandLine.ParserResult<T>", span=""];
m1_372 [file="HelpTextTests.cs", label=pr, span=""];
m1_373 [file="HelpTextTests.cs", label="CommandLine.Text.HelpText", span=""];
m1_374 [file="HelpTextTests.cs", label="System.Func<CommandLine.Error, string>", span=""];
m1_375 [file="HelpTextTests.cs", label=int, span=""];
m1_376 [file="HelpTextTests.cs", label=text, span=""];
m1_377 [file="HelpTextTests.cs", label=string, span=""];
m1_378 [file="HelpTextTests.cs", label=maxLength, span=""];
m1_379 [file="HelpTextTests.cs", label=remainingSpace, span=""];
m1_380 [file="HelpTextTests.cs", label=int, span=""];
m1_381 [file="HelpTextTests.cs", label="CommandLine.Core.Specification", span=""];
m1_382 [file="HelpTextTests.cs", label="CommandLine.Core.OptionSpecification", span=""];
m1_383 [file="HelpTextTests.cs", label="CommandLine.Core.ValueSpecification", span=""];
m2_65 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_41 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m2_66 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m2_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="56-56"];
m2_64 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m2_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="return new DefaultSentenceBuilder();", span="23-23"];
m2_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m2_51 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="135-160"];
m2_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="60-60"];
m2_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="60-60"];
m2_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="60-60"];
m2_7 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="65-65"];
m2_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="65-65"];
m2_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="65-65"];
m2_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="72-74"];
m2_11 [cluster="lambda expression", file="SentenceBuilder.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="72-74"];
m2_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="72-74"];
m2_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="80-80"];
m2_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Display version information.''", span="80-80"];
m2_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="80-80"];
m2_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="87-120"];
m2_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="89-89"];
m2_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="92-92"];
m2_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="94-95"];
m2_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="97-97"];
m2_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="99-99"];
m2_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="104-104"];
m2_31 [cluster="lambda expression", file="SentenceBuilder.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="109-109"];
m2_34 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="115-115"];
m2_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="91-91"];
m2_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="93-93"];
m2_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="96-96"];
m2_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="98-98"];
m2_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="103-103"];
m2_30 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.SequenceOutOfRangeError", span="108-108"];
m2_33 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadVerbSelectedError", span="114-114"];
m2_35 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.NoVerbSelectedError", span="116-116"];
m2_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="100-102"];
m2_29 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="105-107"];
m2_32 [cluster="lambda expression", file="SentenceBuilder.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with fewer or more items than required.'');", span="110-113"];
m2_36 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''No verb selected.'';", span="117-117"];
m2_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="87-120"];
m2_38 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="119-119"];
m2_42 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="128-162"];
m2_43 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132"];
m2_44 [cluster="lambda expression", file="SentenceBuilder.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="134-160"];
m2_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147"];
m2_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="161-161"];
m2_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="128-162"];
m2_52 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139"];
m2_53 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="140-140"];
m2_55 [cluster="lambda expression", file="SentenceBuilder.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="149-159"];
m2_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="135-160"];
m2_62 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_40 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m2_48 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m2_57 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m2_39 [cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m2_67 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_63 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_50 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m2_60 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m2_61 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_49 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m2_58 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m2_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_59 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m2_68 [file="SentenceBuilder.cs", label=bySet, span=""];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_72  [key=0, style=solid];
m1_66 -> m1_25  [key=2, style=dotted];
m1_66 -> m1_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_71 -> m1_5  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_25  [key=2, style=dotted];
m1_71 -> m1_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_72 -> m1_5  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_59  [color=blue, key=0, style=bold];
m1_73 -> m1_5  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_5  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_123  [key=0, style=solid];
m1_75 -> m1_5  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_69 -> m1_34  [key=2, style=dotted];
m1_69 -> m1_35  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_36  [key=2, style=dotted];
m1_69 -> m1_37  [key=2, style=dotted];
m1_69 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_78  [key=2, style=dotted];
m1_69 -> m1_44  [key=2, style=dotted];
m1_69 -> m1_90  [color=darkseagreen4, key=1, label=pr, style=dashed];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_77  [key=2, style=dotted];
m1_70 -> m1_25  [key=2, style=dotted];
m1_70 -> m1_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=err, style=dashed];
m1_67 -> m1_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_67 -> m1_65  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_17  [key=2, style=dotted];
m1_67 -> m1_75  [key=2, style=dotted];
m1_67 -> m1_76  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [key=0, style=solid];
m1_76 -> m1_66  [color=blue, key=0, style=bold];
m1_88 -> m1_95  [key=0, style=solid];
m1_88 -> m1_97  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_99  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_88 -> m1_100  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_101  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_88 -> m1_103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_104  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_106  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_117  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_107  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_88 -> m1_5  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=0, style=solid];
m1_95 -> m1_5  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_97 -> m1_5  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_99 -> m1_45  [key=2, style=dotted];
m1_99 -> m1_109  [key=2, style=dotted];
m1_99 -> m1_5  [key=2, style=dotted];
m1_100 -> m1_108  [key=0, style=solid];
m1_100 -> m1_5  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_110  [key=2, style=dotted];
m1_101 -> m1_105  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_101 -> m1_90  [color=blue, key=0, style=bold];
m1_103 -> m1_108  [key=0, style=solid];
m1_103 -> m1_34  [key=2, style=dotted];
m1_103 -> m1_35  [key=2, style=dotted];
m1_103 -> m1_116  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_117  [key=2, style=dotted];
m1_103 -> m1_118  [key=2, style=dotted];
m1_103 -> m1_119  [key=2, style=dotted];
m1_103 -> m1_120  [key=2, style=dotted];
m1_103 -> m1_121  [key=2, style=dotted];
m1_103 -> m1_122  [key=2, style=dotted];
m1_103 -> m1_123  [key=2, style=dotted];
m1_103 -> m1_124  [key=2, style=dotted];
m1_103 -> m1_125  [key=2, style=dotted];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_112  [key=2, style=dotted];
m1_104 -> m1_113  [key=2, style=dotted];
m1_104 -> m1_74  [key=2, style=dotted];
m1_104 -> m1_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m1_104 -> m1_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_115  [key=2, style=dotted];
m1_106 -> m1_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_106 -> m1_126  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_21  [key=2, style=dotted];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_96 -> m1_108  [key=0, style=solid];
m1_96 -> m1_23  [key=2, style=dotted];
m1_96 -> m1_5  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_98 -> m1_108  [key=0, style=solid];
m1_98 -> m1_23  [key=2, style=dotted];
m1_98 -> m1_5  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [key=0, style=solid];
m1_102 -> m1_111  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_114  [key=2, style=dotted];
m1_105 -> m1_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m1_108 -> m1_88  [color=blue, key=0, style=bold];
m1_108 -> m1_5  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_5  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_145  [color=blue, key=0, style=bold];
m1_155 -> m1_5  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_144  [key=2, style=dotted];
m1_155 -> m1_112  [key=2, style=dotted];
m1_155 -> m1_136  [key=2, style=dotted];
m1_156 -> m1_5  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_150  [color=blue, key=0, style=bold];
m1_157 -> m1_5  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_158 -> m1_5  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_166  [key=0, style=solid];
m1_158 -> m1_23  [key=2, style=dotted];
m1_159 -> m1_5  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_45  [key=2, style=dotted];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m1_159 -> m1_164  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m1_160 -> m1_5  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_162  [key=0, style=solid];
m1_160 -> m1_109  [key=2, style=dotted];
m1_161 -> m1_5  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_166  [key=0, style=solid];
m1_150 -> m1_34  [key=2, style=dotted];
m1_150 -> m1_35  [key=2, style=dotted];
m1_150 -> m1_116  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_121  [key=2, style=dotted];
m1_150 -> m1_118  [key=2, style=dotted];
m1_150 -> m1_153  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_150 -> m1_155  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_151 -> m1_163  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_153  [key=0, style=solid];
m1_152 -> m1_4  [key=2, style=dotted];
m1_152 -> m1_21  [key=2, style=dotted];
m1_152 -> m1_38  [key=2, style=dotted];
m1_152 -> m1_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_23  [key=2, style=dotted];
m1_153 -> m1_164  [key=2, style=dotted];
m1_153 -> m1_165  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=0, style=solid];
m1_154 -> m1_164  [key=2, style=dotted];
m1_154 -> m1_165  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=0, style=solid];
m1_154 -> m1_143  [key=2, style=dotted];
m1_162 -> m1_149  [color=blue, key=0, style=bold];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_167  [key=2, style=dotted];
m1_162 -> m1_177  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_162 -> m1_164  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_162 -> m1_165  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_45  [color=blue, key=0, style=bold];
m1_195 -> m1_5  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_193  [color=blue, key=0, style=bold];
m1_196 -> m1_5  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_196 -> m1_202  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_196 -> m1_203  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_196 -> m1_205  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_196 -> m1_206  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_196 -> m1_208  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_196 -> m1_209  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_196 -> m1_210  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_196 -> m1_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_196 -> m1_213  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_196 -> m1_214  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_196 -> m1_215  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_197 -> m1_5  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_189  [key=2, style=dotted];
m1_198 -> m1_5  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_202  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_198 -> m1_204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_198 -> m1_208  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_198 -> m1_212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_199 -> m1_5  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_217  [key=2, style=dotted];
m1_199 -> m1_201  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_202  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_203  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_204  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_205  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_208  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_199 -> m1_209  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_200 -> m1_5  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_203  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_204  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_205  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_208  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_200 -> m1_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_201 -> m1_5  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_212  [key=0, style=solid];
m1_202 -> m1_5  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_208  [key=0, style=solid];
m1_203 -> m1_5  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_182  [key=2, style=dotted];
m1_193 -> m1_34  [key=2, style=dotted];
m1_193 -> m1_35  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_3  [key=2, style=dotted];
m1_193 -> m1_19  [key=2, style=dotted];
m1_193 -> m1_36  [key=2, style=dotted];
m1_193 -> m1_37  [key=2, style=dotted];
m1_193 -> m1_20  [key=2, style=dotted];
m1_194 -> m1_4  [key=2, style=dotted];
m1_194 -> m1_21  [key=2, style=dotted];
m1_194 -> m1_38  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_204 -> m1_192  [color=blue, key=0, style=bold];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_204 -> m1_207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_204 -> m1_212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_42 -> m1_5  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_5  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_25  [color=blue, key=0, style=bold];
m1_44 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_191  [key=0, style=solid];
m1_46 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_5  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_5  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_40 -> m1_34  [key=2, style=dotted];
m1_40 -> m1_35  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_3  [key=2, style=dotted];
m1_40 -> m1_19  [key=2, style=dotted];
m1_40 -> m1_36  [key=2, style=dotted];
m1_40 -> m1_37  [key=2, style=dotted];
m1_40 -> m1_20  [key=2, style=dotted];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_53  [key=2, style=dotted];
m1_40 -> m1_54  [key=2, style=dotted];
m1_41 -> m1_4  [key=2, style=dotted];
m1_41 -> m1_21  [key=2, style=dotted];
m1_41 -> m1_38  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_55  [key=2, style=dotted];
m1_49 -> m1_39  [color=blue, key=0, style=bold];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_171  [key=2, style=dotted];
m1_177 -> m1_183  [key=2, style=dotted];
m1_184 -> m1_5  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_185 -> m1_5  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_24  [key=2, style=dotted];
m1_185 -> m1_187  [key=2, style=dotted];
m1_185 -> m1_188  [key=2, style=dotted];
m1_185 -> m1_182  [key=2, style=dotted];
m1_185 -> m1_111  [key=2, style=dotted];
m1_185 -> m1_189  [key=2, style=dotted];
m1_185 -> m1_171  [key=2, style=dotted];
m1_185 -> m1_190  [key=2, style=dotted];
m1_186 -> m1_5  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_122  [color=blue, key=0, style=bold];
m1_187 -> m1_5  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_188 -> m1_5  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_179 -> m1_34  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_191  [key=2, style=dotted];
m1_179 -> m1_125  [key=2, style=dotted];
m1_180 -> m1_163  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_181 -> m1_4  [key=2, style=dotted];
m1_181 -> m1_21  [key=2, style=dotted];
m1_181 -> m1_38  [key=2, style=dotted];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_182 -> m1_164  [key=2, style=dotted];
m1_182 -> m1_165  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_183 -> m1_164  [key=2, style=dotted];
m1_183 -> m1_165  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_36  [key=2, style=dotted];
m1_178 -> m1_190  [key=2, style=dotted];
m1_178 -> m1_175  [color=blue, key=0, style=bold];
m1_189 -> m1_177  [color=blue, key=0, style=bold];
m1_52 -> m1_4  [key=2, style=dotted];
m1_52 -> m1_21  [key=2, style=dotted];
m1_52 -> m1_38  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_121 -> m1_119  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_50  [key=2, style=dotted];
m1_37 -> m1_51  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_48  [key=2, style=dotted];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=usage, style=dashed];
m1_170 -> m1_164  [key=2, style=dotted];
m1_170 -> m1_165  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_55 -> m1_130  [key=0, style=solid];
m1_55 -> m1_132  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_55 -> m1_5  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=0, style=solid];
m1_130 -> m1_134  [key=2, style=dotted];
m1_130 -> m1_144  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_135  [key=2, style=dotted];
m1_132 -> m1_112  [key=2, style=dotted];
m1_132 -> m1_136  [key=2, style=dotted];
m1_132 -> m1_144  [key=0, style=solid];
m1_131 -> m1_133  [key=0, style=solid];
m1_131 -> m1_23  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_133 -> m1_55  [color=blue, key=0, style=bold];
m1_133 -> m1_134  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_122 -> m1_184  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_24  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [key=2, style=dotted];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_128 -> m1_126  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_131  [key=0, style=solid];
m1_128 -> m1_133  [key=0, style=solid];
m1_128 -> m1_135  [key=0, style=solid];
m1_128 -> m1_137  [key=0, style=solid];
m1_128 -> m1_139  [key=0, style=solid];
m1_128 -> m1_141  [key=0, style=solid];
m1_128 -> m1_143  [key=0, style=solid];
m1_111 -> m1_5  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_335 -> m1_338  [key=0, style=solid];
m1_335 -> m1_339  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_335 -> m1_340  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_335 -> m1_342  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_335 -> m1_343  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_335 -> m1_350  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_345  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_338 -> m1_350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_338 -> m1_355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_338 -> m1_356  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_344  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m1_339 -> m1_354  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_349  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m1_340 -> m1_354  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_344  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_348  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_343 -> m1_353  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_350 -> m1_352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_350 -> m1_353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_345  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_345 -> m1_347  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_345 -> m1_348  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_356 -> m1_357  [key=0, style=solid];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_349  [key=0, style=solid];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_356  [key=0, style=solid];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_348  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_341 -> m1_353  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_354  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_348  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_348 -> m1_350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_348 -> m1_355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_348 -> m1_356  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_353 -> m1_355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_353 -> m1_356  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_348  [key=0, style=solid];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_347  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_353  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_357 -> m1_335  [color=blue, key=0, style=bold];
m1_218 -> m1_219  [color=green, key=0, style=solid];
m1_219 -> m1_220  [color=green, key=0, style=solid];
m1_219 -> m1_34  [color=green, key=2, style=dotted];
m1_219 -> m1_35  [color=green, key=2, style=dotted];
m1_219 -> m1_116  [color=green, key=2, style=dotted];
m1_220 -> m1_221  [color=green, key=0, style=solid];
m1_220 -> m1_163  [color=green, key=2, style=dotted];
m1_221 -> m1_222  [color=green, key=0, style=solid];
m1_221 -> m1_4  [color=green, key=2, style=dotted];
m1_221 -> m1_226  [key=2, style=dotted];
m1_221 -> m1_227  [key=2, style=dotted];
m1_221 -> m1_223  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_222 -> m1_223  [color=green, key=0, style=solid];
m1_222 -> m1_21  [color=green, key=2, style=dotted];
m1_222 -> m1_38  [color=green, key=2, style=dotted];
m1_222 -> m1_224  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_222 -> m1_225  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_226  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_227  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_228  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_229  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_230  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_231  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_232  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_233  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_234  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_235  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_236  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_237  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_238  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_239  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_240  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_241  [color=green, key=1, label=lines, style=dashed];
m1_222 -> m1_75  [key=2, style=dotted];
m1_223 -> m1_224  [color=green, key=0, style=solid];
m1_223 -> m1_164  [color=green, key=2, style=dotted];
m1_223 -> m1_165  [color=green, key=2, style=dotted];
m1_223 -> m1_75  [key=2, style=dotted];
m1_223 -> m1_231  [key=2, style=dotted];
m1_223 -> m1_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_224 -> m1_225  [color=green, key=0, style=solid];
m1_224 -> m1_164  [color=green, key=2, style=dotted];
m1_224 -> m1_165  [color=green, key=2, style=dotted];
m1_224 -> m1_44  [key=2, style=dotted];
m1_224 -> m1_230  [key=2, style=dotted];
m1_225 -> m1_226  [color=green, key=0, style=solid];
m1_225 -> m1_5  [color=green, key=2, style=dotted];
m1_225 -> m1_135  [color=blue, key=0, style=bold];
m1_226 -> m1_227  [color=green, key=0, style=solid];
m1_226 -> m1_5  [color=green, key=2, style=dotted];
m1_227 -> m1_228  [color=green, key=0, style=solid];
m1_227 -> m1_5  [color=green, key=2, style=dotted];
m1_228 -> m1_229  [color=green, key=0, style=solid];
m1_228 -> m1_5  [color=green, key=2, style=dotted];
m1_228 -> m1_251  [key=0, style=solid];
m1_229 -> m1_230  [color=green, key=0, style=solid];
m1_229 -> m1_5  [color=green, key=2, style=dotted];
m1_229 -> m1_253  [key=0, style=solid];
m1_230 -> m1_231  [color=green, key=0, style=solid];
m1_230 -> m1_5  [color=green, key=2, style=dotted];
m1_231 -> m1_232  [color=green, key=0, style=solid];
m1_231 -> m1_5  [color=green, key=2, style=dotted];
m1_232 -> m1_233  [color=green, key=0, style=solid];
m1_232 -> m1_5  [color=green, key=2, style=dotted];
m1_233 -> m1_234  [color=green, key=0, style=solid];
m1_233 -> m1_5  [color=green, key=2, style=dotted];
m1_234 -> m1_235  [color=green, key=0, style=solid];
m1_234 -> m1_5  [color=green, key=2, style=dotted];
m1_234 -> m1_232  [color=blue, key=0, style=bold];
m1_235 -> m1_236  [color=green, key=0, style=solid];
m1_235 -> m1_5  [color=green, key=2, style=dotted];
m1_235 -> m1_237  [key=2, style=dotted];
m1_235 -> m1_238  [key=2, style=dotted];
m1_235 -> m1_228  [key=2, style=dotted];
m1_235 -> m1_229  [key=2, style=dotted];
m1_235 -> m1_239  [key=2, style=dotted];
m1_235 -> m1_235  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m1_236 -> m1_237  [color=green, key=0, style=solid];
m1_236 -> m1_5  [color=green, key=2, style=dotted];
m1_236 -> m1_144  [color=blue, key=0, style=bold];
m1_237 -> m1_238  [color=green, key=0, style=solid];
m1_237 -> m1_5  [color=green, key=2, style=dotted];
m1_238 -> m1_239  [color=green, key=0, style=solid];
m1_238 -> m1_5  [color=green, key=2, style=dotted];
m1_239 -> m1_240  [color=green, key=0, style=solid];
m1_239 -> m1_5  [color=green, key=2, style=dotted];
m1_240 -> m1_241  [color=green, key=0, style=solid];
m1_240 -> m1_5  [color=green, key=2, style=dotted];
m1_240 -> m1_246  [key=2, style=dotted];
m1_240 -> m1_242  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_240 -> m1_243  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_240 -> m1_248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_241 -> m1_242  [color=green, key=0, style=solid];
m1_241 -> m1_5  [color=green, key=2, style=dotted];
m1_241 -> m1_24  [key=2, style=dotted];
m1_242 -> m1_218  [color=blue, key=0, style=bold];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m1_144 -> m1_235  [key=0, style=solid];
m1_144 -> m1_127  [color=blue, key=0, style=bold];
m1_124 -> m1_74  [color=blue, key=0, style=bold];
m1_23 -> m1_34  [key=2, style=dotted];
m1_23 -> m1_35  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_36  [key=2, style=dotted];
m1_23 -> m1_37  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m1_53 -> m1_5  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_137  [key=0, style=solid];
m1_54 -> m1_139  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_54 -> m1_141  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_56 -> m1_5  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_5  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_56  [color=blue, key=0, style=bold];
m1_51 -> m1_34  [key=2, style=dotted];
m1_51 -> m1_35  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_3  [key=2, style=dotted];
m1_51 -> m1_19  [key=2, style=dotted];
m1_51 -> m1_36  [key=2, style=dotted];
m1_51 -> m1_37  [key=2, style=dotted];
m1_51 -> m1_20  [key=2, style=dotted];
m1_59 -> m1_50  [color=blue, key=0, style=bold];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_62  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_59 -> m1_66  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_59 -> m1_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_59 -> m1_71  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_59 -> m1_93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_110 -> m1_157  [key=0, style=solid];
m1_110 -> m1_159  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_110 -> m1_163  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
m1_110 -> m1_176  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
m1_110 -> m1_164  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
m1_110 -> m1_5  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_168  [key=2, style=dotted];
m1_163 -> m1_169  [key=2, style=dotted];
m1_163 -> m1_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_163 -> m1_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_75  [key=2, style=dotted];
m1_164 -> m1_47  [key=2, style=dotted];
m1_164 -> m1_170  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_171  [key=2, style=dotted];
m1_166 -> m1_110  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_10  [color=blue, key=0, style=bold];
m1_25 -> m1_5  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
m1_25 -> m1_38  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_40  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_26 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_0  [key=2, style=dotted];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_34  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_41  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_27 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_44  [key=2, style=dotted];
m1_27 -> m1_38  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_28 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_38  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_30 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_46  [key=2, style=dotted];
m1_31 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_47  [key=2, style=dotted];
m1_31 -> m1_31  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_37  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_41  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_32 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_48  [key=2, style=dotted];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=license, style=dashed];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_38  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_33 -> m1_22  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=0, style=solid];
m1_33 -> m1_49  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_83 -> m1_5  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_5  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_82  [color=blue, key=0, style=bold];
m1_85 -> m1_5  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_5  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=2, style=dotted];
m1_87 -> m1_5  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_85  [color=blue, key=0, style=bold];
m1_81 -> m1_34  [key=2, style=dotted];
m1_81 -> m1_35  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_36  [key=2, style=dotted];
m1_81 -> m1_37  [key=2, style=dotted];
m1_81 -> m1_79  [color=blue, key=0, style=bold];
m1_82 -> m1_4  [key=2, style=dotted];
m1_82 -> m1_21  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_79 -> m1_65  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_17  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_89 -> m1_78  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_168  [key=2, style=dotted];
m1_191 -> m1_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_88  [key=2, style=dotted];
m1_93 -> m1_34  [key=2, style=dotted];
m1_93 -> m1_35  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_19  [key=2, style=dotted];
m1_93 -> m1_36  [key=2, style=dotted];
m1_93 -> m1_37  [key=2, style=dotted];
m1_93 -> m1_20  [key=2, style=dotted];
m1_93 -> m1_88  [key=2, style=dotted];
m1_94 -> m1_4  [key=2, style=dotted];
m1_94 -> m1_21  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_92  [color=blue, key=0, style=bold];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_91 -> m1_65  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_89  [color=blue, key=0, style=bold];
m1_92 -> m1_93  [key=0, style=solid];
m1_250 -> m1_258  [key=0, style=solid];
m1_250 -> m1_259  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_297  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_301  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_260  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_261  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_262  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_263  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_264  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_265  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_266  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_250 -> m1_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_250 -> m1_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_276  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_279  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_281  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_284  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_250 -> m1_285  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_182  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_24  [key=2, style=dotted];
m1_259 -> m1_289  [key=2, style=dotted];
m1_259 -> m1_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_259 -> m1_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_171  [key=2, style=dotted];
m1_260 -> m1_290  [key=2, style=dotted];
m1_260 -> m1_182  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_265  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_267  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_283  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_261 -> m1_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_264  [key=0, style=solid];
m1_262 -> m1_46  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_291  [key=2, style=dotted];
m1_263 -> m1_263  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_265  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_267  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_283  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_263 -> m1_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_266  [key=0, style=solid];
m1_264 -> m1_49  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_50  [key=2, style=dotted];
m1_265 -> m1_292  [key=2, style=dotted];
m1_265 -> m1_265  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_265 -> m1_267  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_265 -> m1_268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_265 -> m1_270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_265 -> m1_283  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_265 -> m1_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_268  [key=0, style=solid];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_293  [key=2, style=dotted];
m1_267 -> m1_267  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_267 -> m1_270  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_267 -> m1_283  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_267 -> m1_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_279  [key=0, style=solid];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_282  [key=0, style=solid];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_283  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_218  [key=2, style=dotted];
m1_280 -> m1_182  [key=2, style=dotted];
m1_281 -> m1_283  [key=0, style=solid];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_295  [key=2, style=dotted];
m1_284 -> m1_189  [key=2, style=dotted];
m1_285 -> m1_268  [key=0, style=solid];
m1_285 -> m1_286  [key=0, style=solid];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_286  [key=0, style=solid];
m1_268 -> m1_111  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_217  [key=2, style=dotted];
m1_270 -> m1_272  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_273  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_274  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_275  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_276  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_279  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_270 -> m1_280  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_219  [key=2, style=dotted];
m1_283 -> m1_220  [key=2, style=dotted];
m1_283 -> m1_294  [key=2, style=dotted];
m1_283 -> m1_283  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_283 -> m1_285  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_283 -> m1_286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_182  [key=2, style=dotted];
m1_286 -> m1_189  [key=2, style=dotted];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_273  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_269 -> m1_275  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_269 -> m1_279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_269 -> m1_283  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_275  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_275 -> m1_278  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_275 -> m1_283  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_273  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_279  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_271 -> m1_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_283  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_182  [key=2, style=dotted];
m1_282 -> m1_272  [key=0, style=solid];
m1_282 -> m1_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_282  [key=0, style=solid];
m1_278 -> m1_278  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_278 -> m1_283  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_182  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_288 -> m1_250  [color=blue, key=0, style=bold];
m1_254 -> m1_229  [color=blue, key=0, style=bold];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_47  [key=2, style=dotted];
m1_253 -> m1_238  [key=2, style=dotted];
m1_113 -> m1_5  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_74  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_118 -> m1_116  [color=blue, key=0, style=bold];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_179  [key=2, style=dotted];
m1_176 -> m1_180  [key=2, style=dotted];
m1_176 -> m1_181  [key=2, style=dotted];
m1_176 -> m1_182  [key=2, style=dotted];
m1_176 -> m1_166  [color=blue, key=0, style=bold];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_5  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_5  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_5  [key=2, style=dotted];
m1_174 -> m1_172  [color=blue, key=0, style=bold];
m1_174 -> m1_5  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_249 -> m1_247  [color=blue, key=0, style=bold];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_299  [key=2, style=dotted];
m1_297 -> m1_182  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_303  [key=2, style=dotted];
m1_301 -> m1_182  [key=2, style=dotted];
m1_296 -> m1_297  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_298 -> m1_296  [color=blue, key=0, style=bold];
m1_302 -> m1_300  [color=blue, key=0, style=bold];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_310  [key=2, style=dotted];
m1_308 -> m1_311  [key=2, style=dotted];
m1_308 -> m1_312  [key=2, style=dotted];
m1_308 -> m1_189  [key=2, style=dotted];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_189  [key=2, style=dotted];
m1_314 -> m1_311  [key=2, style=dotted];
m1_314 -> m1_312  [key=2, style=dotted];
m1_307 -> m1_308  [key=0, style=solid];
m1_313 -> m1_314  [key=0, style=solid];
m1_309 -> m1_307  [color=blue, key=0, style=bold];
m1_315 -> m1_313  [color=blue, key=0, style=bold];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_321  [key=2, style=dotted];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_311  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_320 -> m1_318  [color=blue, key=0, style=bold];
m1_324 -> m1_322  [color=blue, key=0, style=bold];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_333  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_335  [key=2, style=dotted];
m1_332 -> m1_336  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_337  [key=2, style=dotted];
m1_334 -> m1_331  [color=blue, key=0, style=bold];
m1_134 -> m1_144  [key=0, style=solid];
m1_136 -> m1_144  [key=0, style=solid];
m1_136 -> m1_240  [key=0, style=solid];
m1_136 -> m1_242  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_136 -> m1_243  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_136 -> m1_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_138 -> m1_144  [key=0, style=solid];
m1_138 -> m1_142  [key=0, style=solid];
m1_138 -> m1_23  [key=2, style=dotted];
m1_142 -> m1_144  [key=0, style=solid];
m1_142 -> m1_54  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_325  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_221  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_144  [key=2, style=dotted];
m1_141 -> m1_112  [key=2, style=dotted];
m1_141 -> m1_136  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_73  [key=2, style=dotted];
m1_140 -> m1_144  [key=0, style=solid];
m1_140 -> m1_142  [key=0, style=solid];
m1_140 -> m1_143  [key=2, style=dotted];
m1_299 -> m1_304  [key=0, style=solid];
m1_299 -> m1_308  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_299 -> m1_314  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_24  [key=2, style=dotted];
m1_304 -> m1_306  [key=2, style=dotted];
m1_304 -> m1_171  [key=2, style=dotted];
m1_304 -> m1_307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_304 -> m1_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_305 -> m1_299  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=0, style=solid];
m1_65 -> m1_52  [key=2, style=dotted];
m1_65 -> m1_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=0, style=solid];
m1_38 -> m1_46  [key=2, style=dotted];
m1_38 -> m1_52  [key=2, style=dotted];
m1_38 -> m1_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_50  [key=2, style=dotted];
m1_34 -> m1_51  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_36 -> m1_49  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_65  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_62 -> m1_67  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_62 -> m1_4  [key=2, style=dotted];
m1_62 -> m1_21  [key=2, style=dotted];
m1_62 -> m1_38  [key=2, style=dotted];
m1_61 -> m1_72  [key=0, style=solid];
m1_61 -> m1_73  [key=2, style=dotted];
m1_61 -> m1_34  [key=2, style=dotted];
m1_61 -> m1_35  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_65  [key=2, style=dotted];
m1_61 -> m1_36  [key=2, style=dotted];
m1_61 -> m1_37  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=0, style=solid];
m1_63 -> m1_52  [key=2, style=dotted];
m1_63 -> m1_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_63 -> m1_5  [key=2, style=dotted];
m1_64 -> m1_72  [key=0, style=solid];
m1_64 -> m1_4  [key=2, style=dotted];
m1_64 -> m1_74  [key=2, style=dotted];
m1_64 -> m1_60  [color=blue, key=0, style=bold];
m1_171 -> m1_164  [key=2, style=dotted];
m1_171 -> m1_165  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_167 -> m1_34  [key=2, style=dotted];
m1_167 -> m1_35  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_125  [key=2, style=dotted];
m1_114 -> m1_5  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_16 -> m1_22  [key=0, style=solid];
m1_16 -> m1_23  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_9 -> m1_8  [color=blue, key=0, style=bold];
m1_9 -> m1_5  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_115 -> m1_102  [color=blue, key=0, style=bold];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_168 -> m1_163  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_125  [key=2, style=dotted];
m1_125 -> m1_255  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_211  [key=0, style=solid];
m1_214 -> m1_215  [color=green, key=0, style=solid];
m1_214 -> m1_5  [color=green, key=2, style=dotted];
m1_214 -> m1_197  [key=0, style=solid];
m1_208 -> m1_214  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_215  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_21  [key=2, style=dotted];
m1_208 -> m1_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_213 -> m1_214  [color=green, key=0, style=solid];
m1_213 -> m1_5  [key=2, style=dotted];
m1_213 -> m1_189  [key=2, style=dotted];
m1_215 -> m1_216  [color=green, key=0, style=solid];
m1_215 -> m1_5  [color=green, key=2, style=dotted];
m1_215 -> m1_182  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_217  [key=2, style=dotted];
m1_207 -> m1_211  [key=0, style=solid];
m1_207 -> m1_207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_207 -> m1_212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_209 -> m1_5  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_218  [key=2, style=dotted];
m1_209 -> m1_182  [key=2, style=dotted];
m1_210 -> m1_5  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_212  [key=0, style=solid];
m1_211 -> m1_5  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_201  [key=0, style=solid];
m1_211 -> m1_211  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_5  [key=2, style=dotted];
m1_212 -> m1_219  [key=2, style=dotted];
m1_212 -> m1_220  [key=2, style=dotted];
m1_212 -> m1_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_212 -> m1_215  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_206 -> m1_34  [key=2, style=dotted];
m1_206 -> m1_35  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_36  [key=2, style=dotted];
m1_206 -> m1_182  [key=2, style=dotted];
m1_216 -> m1_205  [color=blue, key=0, style=bold];
m1_216 -> m1_196  [color=blue, key=0, style=bold];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_148  [color=red, key=1, label=int, style=dashed];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_148  [color=red, key=0, style=solid];
m1_146 -> m1_134  [key=2, style=dotted];
m1_148 -> m1_149  [color=red, key=0, style=solid];
m1_148 -> m1_135  [color=red, key=2, style=dotted];
m1_148 -> m1_112  [color=red, key=2, style=dotted];
m1_148 -> m1_136  [color=red, key=2, style=dotted];
m1_147 -> m1_149  [key=0, style=solid];
m1_147 -> m1_23  [key=2, style=dotted];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_115  [key=2, style=dotted];
m1_243 -> m1_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_244 -> m1_245  [key=0, style=solid];
m1_245 -> m1_136  [color=blue, key=0, style=bold];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_196  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_257 -> m1_125  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
m1_10 -> m1_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_11 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_12 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_22  [key=0, style=solid];
m1_12 -> m1_23  [key=2, style=dotted];
m1_13 -> m1_5  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_14 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_22  [key=0, style=solid];
m1_14 -> m1_23  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_6  [color=blue, key=0, style=bold];
m1_15 -> m1_6  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_196  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_327 -> m1_129  [color=blue, key=0, style=bold];
m1_169 -> m1_4  [key=2, style=dotted];
m1_169 -> m1_21  [key=2, style=dotted];
m1_169 -> m1_38  [key=2, style=dotted];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_303 -> m1_316  [key=0, style=solid];
m1_303 -> m1_319  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_303 -> m1_323  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_24  [key=2, style=dotted];
m1_316 -> m1_289  [key=2, style=dotted];
m1_316 -> m1_312  [key=2, style=dotted];
m1_316 -> m1_171  [key=2, style=dotted];
m1_316 -> m1_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_316 -> m1_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_317 -> m1_303  [color=blue, key=0, style=bold];
m1_246 -> m1_328  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_330  [key=2, style=dotted];
m1_328 -> m1_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_329 -> m1_246  [color=blue, key=0, style=bold];
m1_252 -> m1_228  [color=blue, key=0, style=bold];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_47  [key=2, style=dotted];
m1_251 -> m1_238  [key=2, style=dotted];
m1_336 -> m1_358  [key=0, style=solid];
m1_336 -> m1_359  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_336 -> m1_361  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_336 -> m1_362  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_336 -> m1_364  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_336 -> m1_365  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_364  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_358 -> m1_365  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_363  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_363  [key=0, style=solid];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_366  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_364 -> m1_366  [key=0, style=solid];
m1_364 -> m1_369  [key=2, style=dotted];
m1_364 -> m1_364  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_369  [key=2, style=dotted];
m1_365 -> m1_365  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_366  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_365  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_366  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_367 -> m1_368  [key=0, style=solid];
m1_368 -> m1_336  [color=blue, key=0, style=bold];
m1_112 -> m1_5  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_370 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_141  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_148  [color=red, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_185  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_222  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_235  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_240  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_241  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_243  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_248  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_244  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_251  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_253  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_255  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_256  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_258  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_259  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_297  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_301  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_260  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_262  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_274  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_277  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_280  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_284  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_286  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_287  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_304  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_308  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_314  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_325  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_326  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_328  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_332  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_370 -> m1_351  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_371 -> m1_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_371 -> m1_93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_372 -> m1_90  [color=darkseagreen4, key=1, label=pr, style=dashed];
m1_373 -> m1_117  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_374 -> m1_176  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
m1_375 -> m1_176  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_376 -> m1_177  [color=darkseagreen4, key=1, label=text, style=dashed];
m1_377 -> m1_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_378 -> m1_248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_379 -> m1_248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m1_380 -> m1_297  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_380 -> m1_301  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_381 -> m1_297  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_381 -> m1_301  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_382 -> m1_308  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_382 -> m1_314  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_383 -> m1_319  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_383 -> m1_323  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_51 -> m2_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_7  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_10  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m2_16 -> m2_16  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_20  [key=0, style=solid];
m2_17 -> m2_22  [key=0, style=solid];
m2_17 -> m2_24  [key=0, style=solid];
m2_17 -> m2_27  [key=0, style=solid];
m2_17 -> m2_30  [key=0, style=solid];
m2_17 -> m2_33  [key=0, style=solid];
m2_17 -> m2_35  [key=0, style=solid];
m2_19 -> m2_37  [key=0, style=solid];
m2_19 -> m2_39  [key=2, style=dotted];
m2_21 -> m2_37  [key=0, style=solid];
m2_21 -> m2_39  [key=2, style=dotted];
m2_23 -> m2_37  [key=0, style=solid];
m2_23 -> m2_39  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_34 -> m2_37  [key=0, style=solid];
m2_34 -> m2_39  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_26 -> m2_37  [key=0, style=solid];
m2_26 -> m2_40  [key=2, style=dotted];
m2_26 -> m2_39  [key=2, style=dotted];
m2_29 -> m2_37  [key=0, style=solid];
m2_29 -> m2_40  [key=2, style=dotted];
m2_29 -> m2_39  [key=2, style=dotted];
m2_32 -> m2_37  [key=0, style=solid];
m2_32 -> m2_40  [key=2, style=dotted];
m2_32 -> m2_39  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_16  [color=blue, key=0, style=bold];
m2_38 -> m2_37  [key=0, style=solid];
m2_38 -> m2_41  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [key=2, style=dotted];
m2_43 -> m2_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_43 -> m2_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_48  [key=2, style=dotted];
m2_44 -> m2_49  [key=2, style=dotted];
m2_44 -> m2_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_59  [key=2, style=dotted];
m2_54 -> m2_60  [key=2, style=dotted];
m2_54 -> m2_57  [key=2, style=dotted];
m2_54 -> m2_49  [key=2, style=dotted];
m2_54 -> m2_50  [key=2, style=dotted];
m2_54 -> m2_54  [color=darkseagreen4, key=1, label=s, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_50  [key=2, style=dotted];
m2_46 -> m2_42  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_57  [key=2, style=dotted];
m2_52 -> m2_49  [key=2, style=dotted];
m2_52 -> m2_50  [key=2, style=dotted];
m2_52 -> m2_52  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_52 -> m2_55  [color=darkseagreen4, key=1, label=names, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_58  [key=2, style=dotted];
m2_53 -> m2_55  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_61  [key=2, style=dotted];
m2_55 -> m2_62  [key=2, style=dotted];
m2_55 -> m2_63  [key=2, style=dotted];
m2_55 -> m2_64  [key=2, style=dotted];
m2_55 -> m2_65  [key=2, style=dotted];
m2_55 -> m2_66  [key=2, style=dotted];
m2_55 -> m2_67  [key=2, style=dotted];
m2_56 -> m2_51  [color=blue, key=0, style=bold];
m2_68 -> m2_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
}
