digraph  {
m1_38 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="28-28"];
m1_46 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_123 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m1_148 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m1_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53"];
m1_5 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { UseEqualToken = true };", span="55-55"];
m1_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53"];
m1_125 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181"];
m1_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="183-184"];
m1_127 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181"];
m1_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149"];
m1_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="151-151"];
m1_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="152-152"];
m1_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="155-155"];
m1_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="158-158"];
m1_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="161-161"];
m1_97 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="163-163"];
m1_98 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="164-164"];
m1_99 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="167-167"];
m1_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="154-154"];
m1_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="157-157"];
m1_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="159-160"];
m1_96 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="162-162"];
m1_100 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149"];
m1_35 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_104 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m1_45 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m1_41 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="219-219"];
m1_106 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_136 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195"];
m1_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="197-199"];
m1_138 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", color=red, community=0, file="UnParserExtensions.cs", label="0: return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="200-205"];
m1_139 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195"];
m1_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="219-219"];
m1_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="221-221"];
m1_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="222-222"];
m1_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="223-223"];
m1_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="224-224"];
m1_159 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="225-225"];
m1_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="221-221"];
m1_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="222-222"];
m1_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="223-223"];
m1_158 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="224-224"];
m1_160 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="225-225"];
m1_161 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="226-226"];
m1_162 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="219-219"];
m1_43 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m1_141 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m1_52 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m1_119 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m1_72 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m1_114 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m1_118 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m1_36 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m1_128 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="184-184"];
m1_11 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="75-75"];
m1_12 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="75-75"];
m1_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="104-105"];
m1_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="139-139"];
m1_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="99-99"];
m1_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="99-99"];
m1_60 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="104-105"];
m1_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="110-110"];
m1_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="124-124"];
m1_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="124-124"];
m1_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="127-127"];
m1_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="134-134"];
m1_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="143-143"];
m1_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="139-139"];
m1_83 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="143-143"];
m1_58 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="99-99"];
m1_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="104-105"];
m1_67 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="110-110"];
m1_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="110-110"];
m1_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="124-124"];
m1_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="127-127"];
m1_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="127-127"];
m1_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="134-134"];
m1_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="134-134"];
m1_81 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="139-139"];
m1_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="143-143"];
m1_109 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="160-160"];
m1_108 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="159-160"];
m1_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="159-160"];
m1_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="173-173"];
m1_121 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="177-178"];
m1_120 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="177-178"];
m1_115 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="172-173"];
m1_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="172-173"];
m1_122 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="177-178"];
m1_129 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="184-184"];
m1_130 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="184-184"];
m1_135 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_55 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m1_107 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m1_147 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m1_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m1_59 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m1_47 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m1_163 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="131-131"];
m1_86 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m1_42 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m1_82 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m1_44 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m1_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m1_124 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m1_65 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="208-208"];
m1_39 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m1_54 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_103 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="181-181"];
m1_50 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_134 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="195-195"];
m1_101 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170"];
m1_111 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="172-173"];
m1_112 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="175-178"];
m1_113 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170"];
m1_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48"];
m1_1 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { GroupSwitches = true };", span="50-50"];
m1_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48"];
m1_53 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m1_102 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m1_49 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m1_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m1_140 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m1_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m1_164 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m1_105 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m1_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m1_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="89-89"];
m1_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="92-92"];
m1_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="95-95"];
m1_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="101-108"];
m1_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="89-89"];
m1_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="91-91"];
m1_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="93-93"];
m1_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="123-125"];
m1_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="132-135"];
m1_29 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="138-139"];
m1_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="96-96"];
m1_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="98-99"];
m1_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="110-114"];
m1_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="127-130"];
m1_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="116-121"];
m1_28 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="136-137"];
m1_30 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="140-141"];
m1_31 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="142-143"];
m1_32 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="145-146"];
m1_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m1_48 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m1_131 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187"];
m1_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="189-192"];
m1_133 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187"];
m1_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m1_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73"];
m1_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return parser.FormatCommandLine(options, config => {});", span="75-75"];
m1_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73"];
m1_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m1_142 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="208-208"];
m1_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="210-212"];
m1_144 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="214-214"];
m1_145 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="216-216"];
m1_146 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="208-208"];
m1_165 [file="UnParserExtensions.cs", label=builder, span=""];
m1_166 [file="UnParserExtensions.cs", label=T, span=""];
m1_167 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m1_168 [file="UnParserExtensions.cs", label=settings, span=""];
m1_169 [file="UnParserExtensions.cs", label=sep, span=""];
m1_170 [file="UnParserExtensions.cs", label=doubQt, span=""];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_125 -> m1_126  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_114  [key=2, style=dotted];
m1_126 -> m1_39  [key=2, style=dotted];
m1_126 -> m1_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_127 -> m1_125  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_87 -> m1_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_87 -> m1_93  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_87 -> m1_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_87 -> m1_131  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_37  [key=2, style=dotted];
m1_88 -> m1_91  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_88 -> m1_97  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_88 -> m1_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_88 -> m1_99  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_92  [key=0, style=solid];
m1_91 -> m1_99  [key=0, style=solid];
m1_91 -> m1_101  [key=2, style=dotted];
m1_91 -> m1_102  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_103  [key=2, style=dotted];
m1_93 -> m1_109  [color=darkseagreen4, key=1, label=sep, style=dashed];
m1_93 -> m1_97  [color=darkseagreen4, key=1, label=sep, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_104  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=e, style=dashed];
m1_97 -> m1_96  [key=0, style=solid];
m1_97 -> m1_106  [key=2, style=dotted];
m1_97 -> m1_102  [key=2, style=dotted];
m1_97 -> m1_46  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_107  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_54  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=format, style=dashed];
m1_94 -> m1_94  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=0, style=solid];
m1_96 -> m1_105  [key=2, style=dotted];
m1_100 -> m1_87  [color=blue, key=0, style=bold];
m1_41 -> m1_151  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m1_41 -> m1_161  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_138  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_137 -> m1_138  [color=red, key=0, style=solid];
m1_138 -> m1_139  [color=red, key=0, style=solid];
m1_138 -> m1_140  [color=red, key=2, style=dotted];
m1_138 -> m1_124  [color=red, key=2, style=dotted];
m1_138 -> m1_141  [color=red, key=2, style=dotted];
m1_138 -> m1_54  [color=red, key=2, style=dotted];
m1_139 -> m1_136  [color=blue, key=0, style=bold];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_150 -> m1_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_150 -> m1_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_150 -> m1_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_153  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_155  [key=0, style=solid];
m1_153 -> m1_36  [key=2, style=dotted];
m1_153 -> m1_147  [key=2, style=dotted];
m1_153 -> m1_148  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_157  [key=0, style=solid];
m1_155 -> m1_36  [key=2, style=dotted];
m1_155 -> m1_163  [key=2, style=dotted];
m1_155 -> m1_164  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=0, style=solid];
m1_159 -> m1_104  [key=2, style=dotted];
m1_159 -> m1_105  [key=2, style=dotted];
m1_152 -> m1_162  [key=0, style=solid];
m1_154 -> m1_162  [key=0, style=solid];
m1_156 -> m1_162  [key=0, style=solid];
m1_158 -> m1_162  [key=0, style=solid];
m1_160 -> m1_162  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid];
m1_162 -> m1_150  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_11  [color=blue, key=0, style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_61 -> m1_64  [key=2, style=dotted];
m1_61 -> m1_65  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=2, style=dotted];
m1_80 -> m1_50  [key=2, style=dotted];
m1_80 -> m1_46  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=2, style=dotted];
m1_57 -> m1_46  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_50  [key=2, style=dotted];
m1_84 -> m1_46  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_58 -> m1_56  [color=blue, key=0, style=bold];
m1_62 -> m1_60  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_66  [color=blue, key=0, style=bold];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_76  [color=blue, key=0, style=bold];
m1_81 -> m1_79  [color=blue, key=0, style=bold];
m1_85 -> m1_83  [color=blue, key=0, style=bold];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_101  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_110 -> m1_108  [color=blue, key=0, style=bold];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_118  [key=2, style=dotted];
m1_116 -> m1_119  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_72  [key=2, style=dotted];
m1_121 -> m1_123  [key=2, style=dotted];
m1_121 -> m1_124  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_117 -> m1_115  [color=blue, key=0, style=bold];
m1_122 -> m1_120  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_130 -> m1_128  [color=blue, key=0, style=bold];
m1_65 -> m1_65  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m1_134 -> m1_131  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m1_101 -> m1_111  [key=0, style=solid];
m1_101 -> m1_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_101 -> m1_87  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_101 -> m1_94  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_111 -> m1_121  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m1_111 -> m1_111  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_114  [key=2, style=dotted];
m1_112 -> m1_39  [key=2, style=dotted];
m1_112 -> m1_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_113 -> m1_101  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_10 -> m1_7  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
m1_10 -> m1_8  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration", style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m1_13 -> m1_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_13 -> m1_22  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_13 -> m1_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_36  [key=2, style=dotted];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_41  [key=2, style=dotted];
m1_22 -> m1_42  [key=2, style=dotted];
m1_22 -> m1_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_22 -> m1_22  [color=darkseagreen4, key=1, label=info, style=dashed];
m1_22 -> m1_26  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_15 -> m1_33  [key=0, style=solid];
m1_15 -> m1_34  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_3  [key=2, style=dotted];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_16 -> m1_25  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_16 -> m1_27  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_16 -> m1_29  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_16 -> m1_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_43  [key=2, style=dotted];
m1_25 -> m1_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_45  [key=2, style=dotted];
m1_27 -> m1_46  [key=2, style=dotted];
m1_27 -> m1_47  [key=2, style=dotted];
m1_27 -> m1_48  [key=2, style=dotted];
m1_27 -> m1_49  [key=2, style=dotted];
m1_27 -> m1_50  [key=2, style=dotted];
m1_27 -> m1_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_53  [key=2, style=dotted];
m1_29 -> m1_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_37  [key=2, style=dotted];
m1_20 -> m1_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_20 -> m1_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_38  [key=2, style=dotted];
m1_21 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_43  [key=2, style=dotted];
m1_23 -> m1_44  [key=2, style=dotted];
m1_23 -> m1_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label=info, style=dashed];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_43  [key=2, style=dotted];
m1_26 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_26 -> m1_26  [color=darkseagreen4, key=1, label=info, style=dashed];
m1_26 -> m1_30  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_44  [key=2, style=dotted];
m1_24 -> m1_24  [color=darkseagreen4, key=1, label=info, style=dashed];
m1_24 -> m1_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_45  [key=2, style=dotted];
m1_28 -> m1_51  [key=2, style=dotted];
m1_28 -> m1_52  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_51  [key=2, style=dotted];
m1_30 -> m1_52  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_53  [key=2, style=dotted];
m1_31 -> m1_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_54  [key=2, style=dotted];
m1_32 -> m1_55  [key=2, style=dotted];
m1_33 -> m1_13  [color=blue, key=0, style=bold];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_37  [key=2, style=dotted];
m1_132 -> m1_134  [key=2, style=dotted];
m1_132 -> m1_50  [key=2, style=dotted];
m1_132 -> m1_87  [key=2, style=dotted];
m1_132 -> m1_135  [key=2, style=dotted];
m1_132 -> m1_54  [key=2, style=dotted];
m1_133 -> m1_131  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [color=darkorchid, key=3, label="method methodReturn string FormatCommandLine", style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_144  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_142 -> m1_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_143 -> m1_36  [key=2, style=dotted];
m1_143 -> m1_147  [key=2, style=dotted];
m1_143 -> m1_148  [key=2, style=dotted];
m1_144 -> m1_146  [key=0, style=solid];
m1_144 -> m1_149  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_142  [color=blue, key=0, style=bold];
m1_165 -> m1_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_165 -> m1_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_165 -> m1_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_166 -> m1_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_167 -> m1_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m1_168 -> m1_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_169 -> m1_109  [color=darkseagreen4, key=1, label=sep, style=dashed];
m1_170 -> m1_121  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
