digraph  {
n22 [label=string, span=""];
n23 [label="System.StringComparer", span=""];
n24 [label=string, span=""];
n25 [label="System.StringComparer", span=""];
n0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
n1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="13-13"];
n5 [cluster="lambda expression", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="13-13"];
n2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
n3 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n4 [cluster="lambda expression", label="Entry lambda expression", span="13-13"];
n6 [cluster="lambda expression", label="Exit lambda expression", span="13-13"];
n7 [cluster="string.MatchName(string, string, System.StringComparer)", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
n8 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
n9 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="19-22"];
n16 [cluster="lambda expression", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="20-20"];
n10 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="Exit CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
n11 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
n12 [cluster="Unk.ToMaybe", label="Entry Unk.ToMaybe", span=""];
n13 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
n14 [cluster="Unk.Return", label="Entry Unk.Return", span=""];
n15 [cluster="lambda expression", label="Entry lambda expression", span="20-20"];
n18 [cluster="lambda expression", label="Entry lambda expression", span="22-22"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="20-20"];
n19 [cluster="lambda expression", label="Maybe.Just(spec.Separator)", span="22-22"];
n20 [cluster="lambda expression", label="Exit lambda expression", span="22-22"];
n21 [cluster="Unk.Just", label="Entry Unk.Just", span=""];
m0_62 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="this.Forget(cacheEntry)", span="156-156"];
m0_63 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="bindingEntry.Remove(cacheEntry)", span="157-157"];
m0_65 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="return instanceFound;", span="162-162"];
m0_71 [cluster="Unk.Remove", file="Tokenizer.cs", label="Entry Unk.Remove", span=""];
m0_66 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.Release(object)", span="148-148"];
m0_64 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="instanceFound = true", span="158-158"];
m0_70 [cluster="Unk.Forget", file="Tokenizer.cs", label="Entry Unk.Forget", span=""];
m0_67 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m0_68 [cluster="Unk.Where", file="Tokenizer.cs", label="Entry Unk.Where", span=""];
m0_69 [cluster="Unk.ToList", file="Tokenizer.cs", label="Entry Unk.ToList", span=""];
m0_72 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="151-151"];
m0_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m0_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="Tokenizer.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m0_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m0_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="Tokenizer.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
m0_4 [cluster="CommandLine.Text.HelpText.ToString()", file="Tokenizer.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="427-427"];
m0_5 [cluster="Unk.Equal", file="Tokenizer.cs", label="Entry Unk.Equal", span=""];
m0_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="Tokenizer.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m0_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m0_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263"];
m0_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269"];
m0_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266"];
m0_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273"];
m0_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274"];
m0_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275"];
m0_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276"];
m0_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277"];
m0_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278"];
m0_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279"];
m0_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271"];
m0_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272"];
m0_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252"];
m0_35 [cluster="lambda expression", color=red, community=0, file="Tokenizer.cs", label="0: this.Clear(weakScopeReference)", span="93-93"];
m0_36 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="93-93"];
m0_37 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.Clear(object)", span="186-186"];
m0_38 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="106-106"];
m0_39 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="108-108"];
m0_40 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="var scope = context.GetScope()", span="109-109"];
m0_41 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="scope == null", span="110-110"];
m0_42 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="return null;", span="112-112"];
m0_43 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="this.entries", span="115-115"];
m0_44 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="Multimap<IBinding, CacheEntry> bindings", span="117-117"];
m0_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m0_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330"];
m0_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334"];
m0_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335"];
m0_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336"];
m0_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337"];
m0_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327"];
m0_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332"];
m0_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333"];
m0_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324"];
m0_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316"];
m0_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312"];
m0_45 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="!this.entries.TryGetValue(scope, out bindings)", span="118-118"];
m0_131 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="Tokenizer.cs", label=weakScopeReference, span=""];
m0_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Tokenizer.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m0_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="Tokenizer.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m0_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m0_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="Tokenizer.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m0_117 [cluster="lambda expression", file="Tokenizer.cs", label="GetAllBindingEntries(scopeCache.Value)", span="228-228"];
m0_125 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", span="247-247"];
m0_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="Tokenizer.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m0_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m0_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208"];
m0_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232"];
m0_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235"];
m0_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=green, community=0, file="Tokenizer.cs", label="1: var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m0_33 [cluster="Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", file="Tokenizer.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Add(K, V)", span="64-64"];
m0_195 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="Tokenizer.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m0_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="sut.MaximumDisplayWidth = 40", span="151-151"];
m0_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
m0_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
m0_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
m0_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
m0_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="lines[4].Should().Be(''                After'')", span="158-158"];
m0_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="Tokenizer.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m0_17 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="var scope = context.GetScope()", span="81-81"];
m0_122 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", span="247-247"];
m0_20 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="var weakScopeReference = new ReferenceEqualWeakReference(scope)", span="86-86"];
m0_118 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="228-228"];
m0_32 [cluster="Ninject.Infrastructure.Multimap<K, V>.Multimap()", file="Tokenizer.cs", label="Entry Ninject.Infrastructure.Multimap<K, V>.Multimap()", span="22-22"];
m0_46 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="return null;", span="120-120"];
m0_47 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", color=green, community=0, file="Tokenizer.cs", label="0: bindings[context.Binding]", span="123-123"];
m0_48 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="context.HasInferredGenericArguments", span="125-125"];
m0_49 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="var cachedArguments = entry.Context.GenericArguments", span="127-127"];
m0_50 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="var arguments = context.GenericArguments", span="128-128"];
m0_51 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="!cachedArguments.SequenceEqual(arguments)", span="130-130"];
m0_52 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="return entry.Reference.Instance;", span="136-136"];
m0_53 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="return null;", span="139-139"];
m0_54 [cluster="Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.TryGet(Ninject.Activation.IContext)", span="106-106"];
m0_22 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="this.entries[weakScopeReference] = new Multimap<IBinding, CacheEntry>()", span="89-89"];
m0_23 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="var notifyScope = scope as INotifyWhenDisposed", span="90-90"];
m0_24 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="notifyScope != null", span="91-91"];
m0_25 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", color=red, community=0, file="Tokenizer.cs", label="1: notifyScope.Disposed += (o, e) => this.Clear(weakScopeReference)", span="93-93"];
m0_26 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="this.entries[weakScopeReference].Add(context.Binding, entry)", span="97-97"];
m0_27 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="77-77"];
m0_28 [cluster="Ninject.Activation.IContext.GetScope()", file="Tokenizer.cs", label="Entry Ninject.Activation.IContext.GetScope()", span="69-69"];
m0_30 [cluster="Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", file="Tokenizer.cs", label="Entry Ninject.Infrastructure.ReferenceEqualWeakReference.ReferenceEqualWeakReference(object)", span="26-26"];
m0_31 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_77 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="153-153"];
m0_78 [cluster="object.ReferenceEquals(object, object)", file="Tokenizer.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m0_86 [cluster="Unk.Select", file="Tokenizer.cs", label="Entry Unk.Select", span=""];
m0_87 [cluster="Unk.GetAllBindingEntries", file="Tokenizer.cs", label="Entry Unk.GetAllBindingEntries", span=""];
m0_88 [cluster="Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.Forget(System.Collections.Generic.IEnumerable<Ninject.Activation.Caching.Cache.CacheEntry>)", span="235-235"];
m0_168 [cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m0_90 [cluster="lambda expression", file="Tokenizer.cs", label="!((ReferenceEqualWeakReference)scope.Key).IsAlive", span="172-172"];
m0_93 [cluster="lambda expression", file="Tokenizer.cs", label=scope, span="172-172"];
m0_94 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="172-172"];
m0_91 [cluster="lambda expression", file="Tokenizer.cs", label="Exit lambda expression", span="172-172"];
m0_92 [cluster="lambda expression", file="Tokenizer.cs", label="Entry lambda expression", span="172-172"];
m0_95 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="this.entries", span="188-188"];
m0_96 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="Multimap<IBinding, CacheEntry> bindings", span="190-190"];
m0_97 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="this.entries.TryGetValue(scope, out bindings)", span="191-191"];
m0_98 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="this.Forget(GetAllBindingEntries(bindings))", span="193-193"];
m0_99 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="this.entries.Remove(scope)", span="196-196"];
m0_100 [cluster="Ninject.Activation.Caching.Cache.Clear(object)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.Clear(object)", span="186-186"];
m0_101 [cluster="Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBinding, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.GetAllBindingEntries(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBinding, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>>)", span="217-217"];
m0_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Tokenizer.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m0_61 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label=instanceEntries, span="154-154"];
m0_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m0_34 [cluster="string[].TrimStringArray()", file="Tokenizer.cs", label="Entry string[].TrimStringArray()", span="14-14"];
m0_76 [cluster="Unk.Be", file="Tokenizer.cs", label="Entry Unk.Be", span=""];
m0_75 [cluster="Unk.Should", file="Tokenizer.cs", label="Entry Unk.Should", span=""];
m0_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m0_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="Tokenizer.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m0_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243"];
m0_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="244-244"];
m0_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245"];
m0_133 [cluster="lambda expression", file="Tokenizer.cs", label="Ninject.Activation.Caching.Cache.CacheEntry", span=""];
m0_135 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214"];
m0_137 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216"];
m0_139 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218"];
m0_141 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220"];
m0_143 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222"];
m0_145 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224"];
m0_149 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228"];
m0_134 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.BadFormatTokenError", span="213-213"];
m0_136 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.MissingValueOptionError", span="215-215"];
m0_138 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.UnknownOptionError", span="217-217"];
m0_140 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.MissingRequiredOptionError", span="219-219"];
m0_142 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.MutuallyExclusiveSetError", span="221-221"];
m0_144 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.SequenceOutOfRangeError", span="223-223"];
m0_146 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.NoVerbSelectedError", span="225-225"];
m0_148 [cluster="lambda expression", file="Tokenizer.cs", label="ErrorType.BadVerbSelectedError", span="227-227"];
m0_150 [cluster="lambda expression", file="Tokenizer.cs", label="throw new InvalidOperationException();", span="230-230"];
m0_147 [cluster="lambda expression", file="Tokenizer.cs", label="return ''ERR no-verb-selected'';", span="226-226"];
m0_102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m0_60 [cluster="Ninject.Activation.Caching.Cache.Release(object)", file="Tokenizer.cs", label="var instanceEntries = bindingEntry.Where(cacheEntry => ReferenceEquals(instance, cacheEntry.Reference.Instance)).ToList()", span="153-153"];
m0_167 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Tokenizer.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252"];
m0_124 [cluster="Ninject.Activation.Caching.Cache.Forget(Ninject.Activation.Caching.Cache.CacheEntry)", file="Tokenizer.cs", label="this.Pipeline.Deactivate(entry.Context, entry.Reference)", span="250-250"];
m0_21 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="!this.entries.ContainsKey(weakScopeReference)", span="87-87"];
m0_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240"];
m0_16 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="Ensure.ArgumentNotNull(context, ''context'')", span="79-79"];
m0_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="Tokenizer.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
m0_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="Tokenizer.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
m0_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m0_169 [cluster="Unk.True", file="Tokenizer.cs", label="Entry Unk.True", span=""];
m0_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242"];
m0_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241"];
m0_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="Tokenizer.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m0_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m0_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="Tokenizer.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m0_193 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Tokenizer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m0_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m0_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="Tokenizer.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
m0_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var lines = errorsText.ToNotEmptyLines()", span="238-238"];
m0_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246"];
m0_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247"];
m0_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="Tokenizer.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m0_8 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.Dispose(bool)", span="62-62"];
m0_9 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="Tokenizer.cs", label="disposing && !IsDisposed", span="64-64"];
m0_10 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="Tokenizer.cs", label="this.Clear()", span="66-66"];
m0_11 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="Tokenizer.cs", label="base.Dispose(disposing)", span="69-69"];
m0_12 [cluster="Ninject.Activation.Caching.Cache.Dispose(bool)", file="Tokenizer.cs", label="Exit Ninject.Activation.Caching.Cache.Dispose(bool)", span="62-62"];
m0_15 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="Entry Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", span="77-77"];
m0_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m0_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300"];
m0_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304"];
m0_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305"];
m0_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306"];
m0_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307"];
m0_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297"];
m0_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302"];
m0_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303"];
m0_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294"];
m0_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284"];
m0_152 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Tokenizer.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_19 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="this.entries", span="84-84"];
m0_18 [cluster="Ninject.Activation.Caching.Cache.Remember(Ninject.Activation.IContext, Ninject.Activation.InstanceReference)", file="Tokenizer.cs", label="var entry = new CacheEntry(context, reference)", span="82-82"];
m0_194 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Tokenizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_130 [file="Tokenizer.cs", label="Ninject.Activation.Caching.Cache", span=""];
m0_132 [file="Tokenizer.cs", label=object, span=""];
m1_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="42-42"];
m1_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="44-47"];
m1_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="50-51"];
m1_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57"];
m1_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="53-55"];
m1_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="var tokens = tokenizerResult.Value", span="59-59"];
m1_54 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="TokenizerTests.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38"];
m1_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-35"];
m1_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=0, file="TokenizerTests.cs", label="0: Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="74-75"];
m1_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=green, community=0, file="TokenizerTests.cs", label="0: var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="71-73"];
m1_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=red, community=0, file="TokenizerTests.cs", label="0: var result =\r\n                Tokenizer.Normalize(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                    nameLookup)", span="78-87"];
m1_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", color=red, community=0, file="TokenizerTests.cs", label="0: ((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="90-90"];
m1_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="59-59"];
m1_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="59-59"];
m1_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m1_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="59-59"];
m1_34 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="68-68"];
m1_43 [cluster="Unk.ThrowingValidate", file="TokenizerTests.cs", label="Entry Unk.ThrowingValidate", span=""];
m1_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_46 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m1_8 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="20-27"];
m1_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m1_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30"];
m1_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m1_4 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="20-27"];
m1_5 [cluster="lambda expression", file="TokenizerTests.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m1_72 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TokenizerTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m1_83 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="TokenizerTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m1_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_6 [cluster="lambda expression", file="TokenizerTests.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25"];
m1_99 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="TokenizerTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m1_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_7 [cluster="lambda expression", file="TokenizerTests.cs", label="return explodedTokens;", span="26-26"];
m1_49 [cluster="CommandLine.Core.Specification.IsValue()", file="TokenizerTests.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="16-16"];
m1_11 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="22-22"];
m1_58 [cluster="Unk.Create", file="TokenizerTests.cs", label="Entry Unk.Create", span=""];
m1_87 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="TokenizerTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m1_64 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m1_91 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="TokenizerTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m1_51 [cluster="Unk.Single", file="TokenizerTests.cs", label="Entry Unk.Single", span=""];
m1_38 [cluster="lambda expression", file="TokenizerTests.cs", label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="75-75"];
m1_40 [cluster="string.Equals(string)", file="TokenizerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m1_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m1_41 [cluster="object.GetType()", file="TokenizerTests.cs", label=specs, span=""];
m1_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_17 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="25-25"];
m1_16 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25"];
m1_18 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_39 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="TokenizerTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m1_80 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="84-84"];
m1_84 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="85-85"];
m1_88 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="87-87"];
m1_92 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="88-88"];
m1_95 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="90-92"];
m1_100 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="93-93"];
m1_85 [cluster="lambda expression", color=green, community=0, file="TokenizerTests.cs", label="0: sp.Value.FromJust()", span="85-85"];
m1_86 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="85-85"];
m1_89 [cluster="lambda expression", color=green, community=0, file="TokenizerTests.cs", label="0: sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87"];
m1_90 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="87-87"];
m1_96 [cluster="lambda expression", color=green, community=0, file="TokenizerTests.cs", label="0: sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92"];
m1_97 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="90-92"];
m1_106 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="96-96"];
m1_82 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="84-84"];
m1_81 [cluster="lambda expression", file="TokenizerTests.cs", label="sp.Value.IsJust()", span="84-84"];
m1_94 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="88-88"];
m1_93 [cluster="lambda expression", file="TokenizerTests.cs", label="sp.Specification.DefaultValue.FromJust()", span="88-88"];
m1_102 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="93-93"];
m1_101 [cluster="lambda expression", file="TokenizerTests.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93"];
m1_69 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="68-68"];
m1_73 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="74-74"];
m1_76 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="78-78"];
m1_77 [cluster="lambda expression", file="TokenizerTests.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78"];
m1_66 [cluster="lambda expression", file="TokenizerTests.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63"];
m1_70 [cluster="lambda expression", file="TokenizerTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68"];
m1_74 [cluster="lambda expression", file="TokenizerTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74"];
m1_59 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="50-51"];
m1_108 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="96-96"];
m1_107 [cluster="lambda expression", file="TokenizerTests.cs", label="e.Value", span="96-96"];
m1_65 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="63-63"];
m1_71 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="68-68"];
m1_75 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="74-74"];
m1_78 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="78-78"];
m1_67 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="63-63"];
m1_61 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="50-51"];
m1_60 [cluster="lambda expression", file="TokenizerTests.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="50-51"];
m1_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m1_42 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="TokenizerTests.cs", label=specs, span=""];
m1_50 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="TokenizerTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m1_57 [cluster="Unk.Concat", file="TokenizerTests.cs", label="Entry Unk.Concat", span=""];
m1_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_98 [cluster="System.Type.ToDescriptorKind()", file="TokenizerTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m1_56 [cluster="Unk.Select", file="TokenizerTests.cs", label="Entry Unk.Select", span=""];
m1_105 [cluster="System.Type.CreateEmptyArray()", file="TokenizerTests.cs", label="Entry System.Type.CreateEmptyArray()", span="81-81"];
m1_103 [cluster="System.Type.GetGenericArguments()", file="TokenizerTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_62 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m1_47 [cluster="CommandLine.Core.Specification.IsOption()", file="TokenizerTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m1_55 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40"];
m1_63 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m1_44 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="TokenizerTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_68 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_52 [cluster="Unk.FromOptionSpecification", file="TokenizerTests.cs", label="Entry Unk.FromOptionSpecification", span=""];
m1_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="TokenizerTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m1_48 [cluster="Unk.MapValues", file="TokenizerTests.cs", label="Entry Unk.MapValues", span=""];
m1_111 [file="TokenizerTests.cs", label="System.StringComparer", span=""];
m1_114 [file="TokenizerTests.cs", label=token, span=""];
m1_112 [file="TokenizerTests.cs", label=optionSpecs, span=""];
m1_113 [file="TokenizerTests.cs", label="System.Globalization.CultureInfo", span=""];
m1_109 [file="TokenizerTests.cs", label="System.StringComparer", span=""];
m1_110 [file="TokenizerTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n22 -> n5  [color=darkseagreen4, key=1, label=string, style=dashed];
n23 -> n5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n24 -> n16  [color=darkseagreen4, key=1, label=string, style=dashed];
n25 -> n16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n5  [color=darkseagreen4, key=1, label=string, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n6 -> n4  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n16  [color=darkseagreen4, key=1, label=string, style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n9 -> n12  [key=2, style=dotted];
n9 -> n13  [key=2, style=dotted];
n9 -> n14  [key=2, style=dotted];
n9 -> n15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n7  [key=2, style=dotted];
n10 -> n8  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n17 -> n15  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_70  [key=2, style=dotted];
m0_63 -> m0_17  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_60  [key=2, style=dotted];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_63 -> m0_71  [key=2, style=dotted];
m0_65 -> m0_33  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_73  [key=2, style=dotted];
m0_71 -> m0_121  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_75  [key=2, style=dotted];
m0_71 -> m0_76  [key=2, style=dotted];
m0_66 -> m0_4  [key=2, style=dotted];
m0_66 -> m0_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_74  [key=2, style=dotted];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_57  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_61  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_75  [key=2, style=dotted];
m0_70 -> m0_76  [key=2, style=dotted];
m0_67 -> m0_75  [key=2, style=dotted];
m0_67 -> m0_76  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_75  [key=2, style=dotted];
m0_68 -> m0_76  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_75  [key=2, style=dotted];
m0_69 -> m0_76  [key=2, style=dotted];
m0_72 -> m0_62  [color=blue, key=0, style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ICachePruner", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Ninject.Activation.IPipeline", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.ICachePruner", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_5  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_154 -> m0_121  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_117  [key=2, style=dotted];
m0_154 -> m0_32  [key=2, style=dotted];
m0_154 -> m0_119  [key=2, style=dotted];
m0_154 -> m0_125  [key=2, style=dotted];
m0_154 -> n13  [key=2, style=dotted];
m0_156 -> m0_4  [key=2, style=dotted];
m0_156 -> m0_21  [key=2, style=dotted];
m0_156 -> m0_34  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_165  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_167  [key=2, style=dotted];
m0_159 -> m0_5  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_160 -> m0_5  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_5  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_164 -> m0_5  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_5  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_168  [key=2, style=dotted];
m0_157 -> m0_169  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_168  [key=2, style=dotted];
m0_158 -> m0_169  [key=2, style=dotted];
m0_166 -> m0_153  [color=blue, key=0, style=bold];
m0_35 -> m0_46  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Token> Normalize", style=bold];
m0_35 -> m0_36  [color=red, key=0, style=solid];
m0_35 -> m0_37  [color=red, key=2, style=dotted];
m0_36 -> m0_19  [key=2, style=dotted];
m0_36 -> m0_20  [key=2, style=dotted];
m0_36 -> m0_3  [key=2, style=dotted];
m0_36 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_33  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_37 -> m0_4  [key=2, style=dotted];
m0_37 -> m0_21  [key=2, style=dotted];
m0_37 -> m0_34  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_95  [key=0, style=solid];
m0_37 -> m0_97  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_37 -> m0_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_38 -> m0_5  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_38 -> m0_47  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_38 -> m0_48  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_38 -> m0_50  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_39 -> m0_5  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_6  [key=2, style=dotted];
m0_40 -> m0_5  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_28  [key=2, style=dotted];
m0_40 -> m0_45  [color=darkseagreen4, key=1, label=scope, style=dashed];
m0_41 -> m0_5  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=0, style=solid];
m0_42 -> m0_5  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_54  [key=0, style=solid];
m0_43 -> m0_5  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_35  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_185 -> m0_4  [key=2, style=dotted];
m0_185 -> m0_21  [key=2, style=dotted];
m0_185 -> m0_34  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_185 -> m0_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_185 -> m0_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_185 -> m0_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_188 -> m0_5  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_5  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_5  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_191 -> m0_5  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_167  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_168  [key=2, style=dotted];
m0_186 -> m0_169  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_168  [key=2, style=dotted];
m0_187 -> m0_169  [key=2, style=dotted];
m0_183 -> m0_117  [key=2, style=dotted];
m0_183 -> m0_118  [key=2, style=dotted];
m0_183 -> m0_129  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_195  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_193  [key=2, style=dotted];
m0_182 -> m0_194  [key=2, style=dotted];
m0_192 -> m0_181  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_45 -> m0_55  [key=2, style=dotted];
m0_131 -> m0_35  [color=red, key=1, label=weakScopeReference, style=dashed];
m0_129 -> m0_29  [color=blue, key=0, style=bold];
m0_29 -> m0_127  [key=0, style=solid];
m0_29 -> m0_128  [color=darkseagreen4, key=1, label="Ninject.Activation.InstanceReference", style=dashed];
m0_29 -> m0_5  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_101  [key=2, style=dotted];
m0_117 -> m0_117  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, Ninject.Infrastructure.Multimap<Ninject.Planning.Bindings.IBinding, Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m0_125 -> m0_122  [color=blue, key=0, style=bold];
m0_13 -> m0_103  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_5  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_107  [key=2, style=dotted];
m0_104 -> m0_88  [key=2, style=dotted];
m0_104 -> m0_121  [key=2, style=dotted];
m0_104 -> m0_117  [key=2, style=dotted];
m0_104 -> m0_118  [key=2, style=dotted];
m0_104 -> m0_119  [key=2, style=dotted];
m0_104 -> m0_120  [key=2, style=dotted];
m0_104 -> m0_122  [key=2, style=dotted];
m0_104 -> m0_123  [key=2, style=dotted];
m0_104 -> m0_124  [key=2, style=dotted];
m0_104 -> m0_125  [key=2, style=dotted];
m0_104 -> m0_126  [key=2, style=dotted];
m0_104 -> m0_127  [key=2, style=dotted];
m0_104 -> m0_128  [key=2, style=dotted];
m0_104 -> m0_129  [key=2, style=dotted];
m0_104 -> n13  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_108  [key=2, style=dotted];
m0_105 -> m0_133  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_106 -> m0_13  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_131  [key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_16  [color=green, key=2, style=dotted];
m0_7 -> m0_17  [color=green, key=2, style=dotted];
m0_7 -> m0_18  [color=green, key=2, style=dotted];
m0_7 -> m0_19  [color=green, key=2, style=dotted];
m0_7 -> m0_20  [color=green, key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_33  [key=2, style=dotted];
m0_80 -> m0_89  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_68  [key=2, style=dotted];
m0_81 -> m0_86  [key=2, style=dotted];
m0_81 -> m0_69  [key=2, style=dotted];
m0_81 -> m0_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_81 -> m0_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_81 -> m0_4  [key=2, style=dotted];
m0_81 -> m0_74  [key=2, style=dotted];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_85  [key=0, style=solid];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=disposedScope, style=dashed];
m0_82 -> m0_75  [key=2, style=dotted];
m0_82 -> m0_76  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_87  [key=2, style=dotted];
m0_83 -> m0_88  [key=2, style=dotted];
m0_83 -> m0_75  [key=2, style=dotted];
m0_83 -> m0_76  [key=2, style=dotted];
m0_84 -> m0_82  [key=0, style=solid];
m0_84 -> m0_71  [key=2, style=dotted];
m0_84 -> m0_75  [key=2, style=dotted];
m0_84 -> m0_76  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_79  [color=blue, key=0, style=bold];
m0_85 -> m0_75  [key=2, style=dotted];
m0_85 -> m0_76  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_28  [key=2, style=dotted];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label=scope, style=dashed];
m0_17 -> m0_23  [color=darkseagreen4, key=1, label=scope, style=dashed];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_30  [key=2, style=dotted];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m0_20 -> m0_25  [color=red, key=1, label=weakScopeReference, style=dashed];
m0_20 -> m0_35  [color=red, key=1, label=weakScopeReference, style=dashed];
m0_20 -> m0_26  [color=darkseagreen4, key=1, label=weakScopeReference, style=dashed];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_46 -> m0_54  [key=0, style=solid];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_47 -> m0_3  [color=green, key=2, style=dotted];
m0_47 -> m0_19  [color=green, key=2, style=dotted];
m0_47 -> m0_45  [color=green, key=2, style=dotted];
m0_47 -> m0_33  [color=green, key=2, style=dotted];
m0_47 -> m0_20  [color=green, key=2, style=dotted];
m0_47 -> m0_121  [color=green, key=3, label="Parameter variable string value", style=bold];
m0_47 -> m0_53  [key=0, style=solid];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_4  [key=2, style=dotted];
m0_48 -> m0_21  [key=2, style=dotted];
m0_48 -> m0_34  [key=2, style=dotted];
m0_48 -> m0_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_51  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_5  [key=2, style=dotted];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label=cachedArguments, style=dashed];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_5  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_5  [key=2, style=dotted];
m0_51 -> m0_47  [key=0, style=solid];
m0_51 -> m0_56  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_5  [key=2, style=dotted];
m0_52 -> m0_54  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_5  [key=2, style=dotted];
m0_54 -> m0_46  [color=blue, key=0, style=bold];
m0_54 -> m0_38  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_32  [key=2, style=dotted];
m0_23 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_20  [key=2, style=dotted];
m0_23 -> m0_3  [key=2, style=dotted];
m0_23 -> m0_33  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_32  [key=2, style=dotted];
m0_23 -> m0_25  [color=red, key=1, label=notifyScope, style=dashed];
m0_24 -> m0_4  [key=2, style=dotted];
m0_24 -> m0_21  [key=2, style=dotted];
m0_24 -> m0_34  [key=2, style=dotted];
m0_24 -> m0_25  [color=red, key=0, style=solid];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_25 -> m0_5  [key=2, style=dotted];
m0_25 -> m0_26  [color=red, key=0, style=solid];
m0_25 -> m0_10  [color=red, key=3, label="Property variable Ninject.Activation.IContext ParentContext", style=bold];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_5  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_15  [color=blue, key=0, style=bold];
m0_28 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_30 -> m0_5  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_22  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_75  [color=blue, key=0, style=bold];
m0_78 -> m0_17  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_60  [key=2, style=dotted];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_78 -> m0_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_86 -> m0_75  [key=2, style=dotted];
m0_86 -> m0_76  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_75  [key=2, style=dotted];
m0_87 -> m0_76  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_77  [color=blue, key=0, style=bold];
m0_88 -> m0_119  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_90  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<object, Ninject.Infrastructure.Multimap<Ninject.Planning.Bindings.IBinding, Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m0_93 -> m0_19  [key=2, style=dotted];
m0_93 -> m0_20  [key=2, style=dotted];
m0_93 -> m0_33  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_102  [key=2, style=dotted];
m0_94 -> m0_4  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_74  [key=2, style=dotted];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_92  [color=blue, key=0, style=bold];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_91 -> m0_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_91 -> m0_60  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_89  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_95 -> m0_75  [key=2, style=dotted];
m0_95 -> m0_76  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_75  [key=2, style=dotted];
m0_96 -> m0_76  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_75  [key=2, style=dotted];
m0_97 -> m0_76  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_99  [key=0, style=solid];
m0_97 -> m0_55  [key=2, style=dotted];
m0_98 -> m0_75  [key=2, style=dotted];
m0_98 -> m0_76  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=2, style=dotted];
m0_98 -> m0_88  [key=2, style=dotted];
m0_99 -> m0_75  [key=2, style=dotted];
m0_99 -> m0_76  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_102  [key=2, style=dotted];
m0_100 -> m0_75  [key=2, style=dotted];
m0_100 -> m0_76  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_37  [color=blue, key=0, style=bold];
m0_101 -> m0_90  [color=blue, key=0, style=bold];
m0_101 -> m0_109  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_59  [key=0, style=solid];
m0_61 -> m0_63  [color=darkseagreen4, key=1, label=cacheEntry, style=dashed];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_103  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [color=red, key=0, style=solid];
m0_34 -> m0_133  [key=0, style=solid];
m0_34 -> m0_135  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_137  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_139  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_141  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_34 -> m0_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_72  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_5  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_112  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Ninject.Planning.Bindings.IBinding, System.Collections.Generic.ICollection<Ninject.Activation.Caching.Cache.CacheEntry>>", style=dashed];
m0_112 -> m0_5  [key=2, style=dotted];
m0_113 -> m0_111  [color=blue, key=0, style=bold];
m0_113 -> m0_5  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_136  [key=0, style=solid];
m0_133 -> m0_138  [key=0, style=solid];
m0_133 -> m0_140  [key=0, style=solid];
m0_133 -> m0_142  [key=0, style=solid];
m0_133 -> m0_144  [key=0, style=solid];
m0_133 -> m0_146  [key=0, style=solid];
m0_133 -> m0_148  [key=0, style=solid];
m0_133 -> m0_150  [key=0, style=solid];
m0_133 -> m0_127  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m0_133 -> m0_128  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache.CacheEntry", style=dashed];
m0_135 -> m0_36  [key=0, style=solid];
m0_137 -> m0_36  [key=0, style=solid];
m0_139 -> m0_36  [key=0, style=solid];
m0_141 -> m0_36  [key=0, style=solid];
m0_143 -> m0_36  [key=0, style=solid];
m0_145 -> m0_36  [key=0, style=solid];
m0_149 -> m0_36  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_150 -> m0_36  [key=0, style=solid];
m0_150 -> m0_152  [key=2, style=dotted];
m0_147 -> m0_36  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_68  [key=2, style=dotted];
m0_60 -> m0_69  [key=2, style=dotted];
m0_60 -> m0_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_26  [key=0, style=solid];
m0_21 -> m0_31  [key=2, style=dotted];
m0_108 -> m0_5  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_6  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_57 -> m0_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_57 -> m0_4  [key=2, style=dotted];
m0_57 -> m0_21  [key=2, style=dotted];
m0_57 -> m0_34  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=instanceFound, style=dashed];
m0_58 -> m0_5  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_65  [key=0, style=solid];
m0_59 -> m0_67  [key=2, style=dotted];
m0_59 -> m0_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_63  [color=darkseagreen4, key=1, label=bindingEntry, style=dashed];
m0_59 -> m0_55  [color=blue, key=0, style=bold];
m0_110 -> m0_101  [color=blue, key=0, style=bold];
m0_110 -> m0_5  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_67  [key=2, style=dotted];
m0_109 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_109 -> m0_5  [key=2, style=dotted];
m0_121 -> m0_88  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_120 -> m0_119  [key=0, style=solid];
m0_120 -> m0_122  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_56 -> m0_33  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_61  [key=2, style=dotted];
m0_107 -> m0_114  [key=0, style=solid];
m0_107 -> m0_21  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_67  [key=2, style=dotted];
m0_114 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_114 -> m0_5  [key=2, style=dotted];
m0_115 -> m0_107  [color=blue, key=0, style=bold];
m0_115 -> m0_5  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_37  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_21  [key=2, style=dotted];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_5  [key=2, style=dotted];
m0_12 -> m0_8  [color=blue, key=0, style=bold];
m0_15 -> m0_6  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_15 -> m0_18  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_15 -> m0_26  [color=darkseagreen4, key=1, label="Ninject.Activation.IContext", style=dashed];
m0_170 -> m0_171  [key=0, style=solid];
m0_173 -> m0_4  [key=2, style=dotted];
m0_173 -> m0_21  [key=2, style=dotted];
m0_173 -> m0_34  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_173 -> m0_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_173 -> m0_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_173 -> m0_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_173 -> m0_179  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_176 -> m0_5  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_5  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_5  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_5  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_167  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_168  [key=2, style=dotted];
m0_174 -> m0_169  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_168  [key=2, style=dotted];
m0_175 -> m0_169  [key=2, style=dotted];
m0_171 -> m0_117  [key=2, style=dotted];
m0_171 -> m0_118  [key=2, style=dotted];
m0_171 -> m0_129  [key=2, style=dotted];
m0_171 -> n13  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_180 -> m0_170  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_29  [key=2, style=dotted];
m0_18 -> m0_26  [color=darkseagreen4, key=1, label=entry, style=dashed];
m0_130 -> m0_3  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_4  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_9  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_10  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_11  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_19  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_21  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_22  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_25  [color=red, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_35  [color=red, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_26  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_43  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_45  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_59  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_62  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_80  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_81  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_83  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_84  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_95  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_97  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_98  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_99  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_103  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_104  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_105  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_114  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_120  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_123  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_130 -> m0_124  [color=darkseagreen4, key=1, label="Ninject.Activation.Caching.Cache", style=dashed];
m0_132 -> m0_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_20 -> m1_36  [key=2, style=dotted];
m1_20 -> m1_37  [key=2, style=dotted];
m1_20 -> m1_38  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_6  [key=2, style=dotted];
m1_21 -> m1_7  [key=2, style=dotted];
m1_21 -> m1_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m1_21 -> m1_34  [key=0, style=solid];
m1_21 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_8  [key=2, style=dotted];
m1_22 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_10  [key=2, style=dotted];
m1_22 -> m1_27  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m1_22 -> m1_41  [key=2, style=dotted];
m1_22 -> m1_42  [key=2, style=dotted];
m1_22 -> m1_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_15  [key=2, style=dotted];
m1_24 -> m1_33  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m1_24 -> m1_45  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_11  [key=2, style=dotted];
m1_23 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_7  [key=2, style=dotted];
m1_23 -> m1_12  [key=2, style=dotted];
m1_23 -> m1_13  [key=2, style=dotted];
m1_23 -> m1_14  [key=2, style=dotted];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_23 -> m1_29  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_23 -> m1_44  [key=2, style=dotted];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_23 -> m1_43  [key=2, style=dotted];
m1_23 -> m1_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_25 -> m1_20  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_3 -> m1_19  [key=0, style=solid];
m1_3 -> m1_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_29  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3 -> m1_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m1_3 -> m1_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3 -> m1_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_31  [color=green, key=1, label=instance, style=dashed];
m1_31 -> m1_32  [color=red, key=0, style=solid];
m1_31 -> m1_54  [color=green, key=2, style=dotted];
m1_31 -> m1_80  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_84  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_88  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_92  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_95  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_100  [color=green, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_33  [color=green, key=1, label=instance, style=dashed];
m1_31 -> m1_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_31  [color=green, key=1, label=instance, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label=instance, style=dashed];
m1_30 -> m1_31  [color=green, key=0, style=solid];
m1_30 -> m1_12  [color=green, key=2, style=dotted];
m1_30 -> m1_32  [color=green, key=1, label=specPropsWithValue, style=dashed];
m1_30 -> m1_6  [key=2, style=dotted];
m1_30 -> m1_7  [key=2, style=dotted];
m1_30 -> m1_33  [color=red, key=1, label=expectedTokens, style=dashed];
m1_32 -> m1_33  [color=red, key=0, style=solid];
m1_32 -> m1_55  [key=2, style=dotted];
m1_32 -> m1_44  [key=2, style=dotted];
m1_32 -> m1_56  [key=2, style=dotted];
m1_32 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_11  [color=red, key=2, style=dotted];
m1_32 -> m1_6  [color=red, key=2, style=dotted];
m1_32 -> m1_7  [color=red, key=2, style=dotted];
m1_32 -> m1_35  [color=red, key=2, style=dotted];
m1_32 -> m1_12  [color=red, key=2, style=dotted];
m1_32 -> m1_13  [color=red, key=2, style=dotted];
m1_32 -> m1_36  [color=red, key=2, style=dotted];
m1_33 -> m1_34  [color=red, key=0, style=solid];
m1_33 -> m1_57  [key=2, style=dotted];
m1_33 -> m1_58  [key=2, style=dotted];
m1_33 -> m1_15  [color=red, key=2, style=dotted];
m1_27 -> m1_30  [color=green, key=1, label=optionSpecProps, style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m1_27 -> m1_27  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_47  [key=2, style=dotted];
m1_27 -> m1_48  [key=2, style=dotted];
m1_27 -> m1_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_27 -> m1_19  [key=2, style=dotted];
m1_28 -> m1_30  [color=green, key=1, label=valueSpecProps, style=dashed];
m1_28 -> m1_33  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m1_28 -> m1_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_49  [key=2, style=dotted];
m1_28 -> m1_48  [key=2, style=dotted];
m1_28 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_29 -> m1_33  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m1_29 -> m1_29  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_29 -> m1_50  [key=2, style=dotted];
m1_29 -> m1_51  [key=2, style=dotted];
m1_29 -> m1_52  [key=2, style=dotted];
m1_29 -> m1_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_29 -> m1_77  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m1_26 -> m1_46  [key=2, style=dotted];
m1_26 -> m1_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_34 -> m1_3  [color=blue, key=0, style=bold];
m1_34 -> m1_29  [color=blue, key=0, style=bold];
m1_8 -> m1_4  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_15  [key=2, style=dotted];
m1_4 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_4 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=2, style=dotted];
m1_41 -> m1_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_18 -> m1_16  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_39 -> m1_37  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_84 -> m1_85  [color=green, key=0, style=solid];
m1_88 -> m1_89  [color=green, key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_95 -> m1_96  [color=green, key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_85 -> m1_86  [color=green, key=0, style=solid];
m1_85 -> m1_87  [color=green, key=2, style=dotted];
m1_86 -> m1_84  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [color=green, key=0, style=solid];
m1_89 -> m1_91  [color=green, key=2, style=dotted];
m1_89 -> m1_83  [color=green, key=2, style=dotted];
m1_90 -> m1_88  [color=blue, key=0, style=bold];
m1_96 -> m1_97  [color=green, key=0, style=solid];
m1_96 -> m1_91  [color=green, key=2, style=dotted];
m1_96 -> m1_98  [color=green, key=2, style=dotted];
m1_96 -> m1_99  [color=green, key=2, style=dotted];
m1_97 -> m1_95  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_81 -> m1_83  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_94 -> m1_92  [color=blue, key=0, style=bold];
m1_93 -> m1_87  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_102 -> m1_100  [color=blue, key=0, style=bold];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [key=2, style=dotted];
m1_101 -> m1_104  [key=2, style=dotted];
m1_101 -> m1_105  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> n7  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_72  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_108 -> m1_106  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_78 -> m1_76  [color=blue, key=0, style=bold];
m1_67 -> m1_65  [color=blue, key=0, style=bold];
m1_61 -> m1_59  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=2, style=dotted];
m1_60 -> m1_63  [key=2, style=dotted];
m1_60 -> m1_64  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_42 -> m1_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_111 -> m1_77  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_111 -> m1_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_114 -> m1_77  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_112 -> m1_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_113 -> m1_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_113 -> m1_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_109 -> m1_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_109 -> m1_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_109 -> m1_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_109 -> m1_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m1_110 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m1_110 -> m1_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
}
