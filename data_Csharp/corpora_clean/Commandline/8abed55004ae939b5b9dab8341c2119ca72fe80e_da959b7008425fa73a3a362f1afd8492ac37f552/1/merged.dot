digraph  {
n0 [label="Entry CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16", cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)"];
n1 [label="s.Length == 0", span="18-18", cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)"];
n3 [label="return NormalizeWhitespace(s.Source, s.StartIndex, s.Length).ToUpperInvariant();", span="21-21", cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)"];
n2 [label="return string.Empty;", span="19-19", cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)"];
n4 [label="Exit CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)", span="16-16", cluster="CommonMark.Parser.InlineMethods.NormalizeReference(CommonMark.Syntax.StringPart)"];
n5 [label="Entry CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", span="195-195", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n6 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()"];
n7 [label="Entry CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n8 [label="refmap == null", span="28-28", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n10 [label="lab.Length > Reference.MaximumReferenceLabelLength", span="31-31", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n12 [label="string label = NormalizeReference(lab)", span="34-34", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n14 [label="refmap.TryGetValue(label, out r)", span="37-37", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n9 [label="return null;", span="29-29", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n11 [label="return Reference.InvalidReference;", span="32-32", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n13 [label="Reference r", span="36-36", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n15 [label="return r;", span="38-38", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n16 [label="return null;", span="40-40", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n18 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
n17 [label="Exit CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)", span="26-26", cluster="CommonMark.Parser.InlineMethods.lookup_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.StringPart)"];
n19 [label="Entry CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n20 [label="Reference r = new Reference()", span="45-45", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n21 [label="r.Label = NormalizeReference(label)", span="46-46", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n22 [label="r.Url = url", span="47-47", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n23 [label="r.Title = title", span="48-48", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n26 [label="Entry CommonMark.Syntax.Reference.Reference()", span="9-9", cluster="CommonMark.Syntax.Reference.Reference()"];
n24 [label="return r;", span="49-49", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n25 [label="Exit CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)", span="43-43", cluster="CommonMark.Parser.InlineMethods.make_reference(CommonMark.Syntax.StringPart, string, string)"];
n27 [label="Entry CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", span="52-52", cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)"];
n28 [label="refmap.ContainsKey(refer.Label)", span="54-54", cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)"];
n30 [label="refmap.Add(refer.Label, refer)", span="57-57", cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)"];
n29 [label="return;", span="55-55", cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)"];
n32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n31 [label="Exit CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)", span="52-52", cluster="CommonMark.Parser.InlineMethods.add_reference(System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.Syntax.Reference)"];
n33 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n34 [label="Entry CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n35 [label="Inline e = new Inline()", span="63-63", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n36 [label="e.Tag = t", span="64-64", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n37 [label="e.FirstChild = label", span="65-65", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n38 [label="e.Linkable.Url = url", span="66-66", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n39 [label="e.Linkable.Title = title", span="67-67", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n42 [label="Entry CommonMark.Syntax.Inline.Inline()", span="6-6", cluster="CommonMark.Syntax.Inline.Inline()"];
n40 [label="return e;", span="68-68", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n41 [label="Exit CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)", span="61-61", cluster="CommonMark.Parser.InlineMethods.make_linkable(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline, string, string)"];
n43 [label="Entry CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n44 [label="Inline e = new Inline()", span="73-73", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n45 [label="e.Tag = t", span="74-74", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n46 [label="e.FirstChild = contents", span="75-75", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n47 [label="return e;", span="76-76", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n48 [label="Exit CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="71-71", cluster="CommonMark.Parser.InlineMethods.make_inlines(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)"];
n49 [label="Entry CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", span="80-80", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n50 [label="Inline e = new Inline()", span="82-82", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n51 [label="e.Tag = t", span="83-83", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n52 [label="e.LiteralContent = s", span="84-84", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n53 [label="return e;", span="85-85", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n54 [label="Exit CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)", span="80-80", cluster="CommonMark.Parser.InlineMethods.make_literal(CommonMark.Syntax.InlineTag, string)"];
n55 [label="Entry CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", span="89-89", cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)"];
n56 [label="Inline e = new Inline()", span="91-91", cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)"];
n57 [label="e.Tag = t", span="92-92", cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)"];
n58 [label="return e;", span="93-93", cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)"];
n59 [label="Exit CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)", span="89-89", cluster="CommonMark.Parser.InlineMethods.make_simple(CommonMark.Syntax.InlineTag)"];
n60 [label="Entry CommonMark.Parser.InlineMethods.make_str(string)", span="97-97", cluster="CommonMark.Parser.InlineMethods.make_str(string)"];
n61 [label="return make_literal(InlineTag.String, s);", span="97-97", cluster="CommonMark.Parser.InlineMethods.make_str(string)"];
n62 [label="Exit CommonMark.Parser.InlineMethods.make_str(string)", span="97-97", cluster="CommonMark.Parser.InlineMethods.make_str(string)"];
n63 [label="Entry CommonMark.Parser.InlineMethods.make_code(string)", span="98-98", cluster="CommonMark.Parser.InlineMethods.make_code(string)"];
n64 [label="return make_literal(InlineTag.Code, s);", span="98-98", cluster="CommonMark.Parser.InlineMethods.make_code(string)"];
n65 [label="Exit CommonMark.Parser.InlineMethods.make_code(string)", span="98-98", cluster="CommonMark.Parser.InlineMethods.make_code(string)"];
n66 [label="Entry CommonMark.Parser.InlineMethods.make_raw_html(string)", span="99-99", cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)"];
n67 [label="return make_literal(InlineTag.RawHtml, s);", span="99-99", cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)"];
n68 [label="Exit CommonMark.Parser.InlineMethods.make_raw_html(string)", span="99-99", cluster="CommonMark.Parser.InlineMethods.make_raw_html(string)"];
n69 [label="Entry CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100", cluster="CommonMark.Parser.InlineMethods.make_linebreak()"];
n70 [label="return make_simple(InlineTag.LineBreak);", span="100-100", cluster="CommonMark.Parser.InlineMethods.make_linebreak()"];
n71 [label="Exit CommonMark.Parser.InlineMethods.make_linebreak()", span="100-100", cluster="CommonMark.Parser.InlineMethods.make_linebreak()"];
n72 [label="Entry CommonMark.Parser.InlineMethods.make_softbreak()", span="101-101", cluster="CommonMark.Parser.InlineMethods.make_softbreak()"];
n73 [label="return make_simple(InlineTag.SoftBreak);", span="101-101", cluster="CommonMark.Parser.InlineMethods.make_softbreak()"];
n74 [label="Exit CommonMark.Parser.InlineMethods.make_softbreak()", span="101-101", cluster="CommonMark.Parser.InlineMethods.make_softbreak()"];
n75 [label="Entry CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", span="102-102", cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)"];
n76 [label="return make_linkable(InlineTag.Link, label, url, title);", span="102-102", cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)"];
n77 [label="Exit CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)", span="102-102", cluster="CommonMark.Parser.InlineMethods.make_link(CommonMark.Syntax.Inline, string, string)"];
n78 [label="Entry CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103", cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)"];
n79 [label="return make_inlines(InlineTag.Emphasis, contents);", span="103-103", cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)"];
n80 [label="Exit CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)", span="103-103", cluster="CommonMark.Parser.InlineMethods.make_emph(CommonMark.Syntax.Inline)"];
n81 [label="Entry CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104", cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)"];
n82 [label="return make_inlines(InlineTag.Strong, contents);", span="104-104", cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)"];
n83 [label="Exit CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)", span="104-104", cluster="CommonMark.Parser.InlineMethods.make_strong(CommonMark.Syntax.Inline)"];
n84 [label="Entry CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n85 [label="a == null", span="110-110", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n86 [label="return b;", span="112-112", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n87 [label="a.LastSibling.NextSibling = b", span="115-115", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n88 [label="return a;", span="116-116", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n89 [label="Exit CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)", span="108-108", cluster="CommonMark.Parser.InlineMethods.append_inlines(CommonMark.Syntax.Inline, CommonMark.Syntax.Inline)"];
n90 [label="Entry CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123", cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n91 [label="return new Subject(s.TrimEnd(), refmap);", span="125-125", cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n92 [label="Exit CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="123-123", cluster="CommonMark.Parser.InlineMethods.make_subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n93 [label="Entry CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="8-8", cluster="CommonMark.Parser.Subject.Subject(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n94 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])"];
n95 [label="Entry CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133", cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)"];
n96 [label="return subj.Buffer.Length <= subj.Position ? '\0' : subj.Buffer[subj.Position];", span="135-135", cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)"];
n97 [label="Exit CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)", span="133-133", cluster="CommonMark.Parser.InlineMethods.peek_char(CommonMark.Parser.Subject)"];
n98 [label="Entry CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142", cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)"];
n99 [label="subj.Position += 1", span="144-144", cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)"];
n100 [label="Exit CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)", span="142-142", cluster="CommonMark.Parser.InlineMethods.advance(CommonMark.Parser.Subject)"];
n101 [label="Entry CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n102 [label="var buf = subj.Buffer", span="155-155", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n105 [label="var pos = subj.Position", span="158-158", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n106 [label="var i = subj.Position", span="160-160", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n110 [label="cc == openticklength", span="168-168", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n111 [label="subj.Position = i", span="170-170", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n118 [label="cc == openticklength", span="182-182", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n119 [label="subj.Position = len", span="184-184", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n103 [label="var len = buf.Length", span="156-156", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n108 [label="buf[i] == '`'", span="162-162", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n113 [label="i = buf.IndexOf('`', i) - 1", span="174-174", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n104 [label="var cc = 0", span="157-157", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n107 [label="i < len", span="160-160", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n120 [label="return len;", span="185-185", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n109 [label="cc++", span="164-164", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n112 [label="return i;", span="171-171", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n117 [label="i++", span="160-160", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n114 [label="i == -2", span="175-175", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n123 [label="Entry string.IndexOf(char, int)", span="0-0", cluster="string.IndexOf(char, int)"];
n115 [label="return 0;", span="176-176", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n116 [label="cc = 0", span="178-178", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n121 [label="return 0;", span="188-188", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n122 [label="Exit CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)", span="152-152", cluster="CommonMark.Parser.InlineMethods.scan_to_closing_backticks(CommonMark.Parser.Subject, int)"];
n124 [label="char c", span="197-197", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n125 [label="count = startIndex + count - 1", span="200-200", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n126 [label="startIndex < count", span="203-203", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n127 [label="c = s[startIndex]", span="205-205", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n129 [label="startIndex++", span="207-207", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n130 [label="count >= startIndex", span="210-210", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n131 [label="c = s[count]", span="212-212", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n134 [label="count < startIndex", span="217-217", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n137 [label="int pos = startIndex", span="223-223", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n138 [label="int lastPos = startIndex", span="224-224", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n139 [label="-1 != (pos = s.IndexOfAny(WhiteSpaceCharacters, pos, count - pos))", span="225-225", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n140 [label="s[pos] == '\n'", span="227-227", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n142 [label="sb = new StringBuilder(s.Length)", span="230-230", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n143 [label="sb.Append(s, lastPos, pos - lastPos)", span="233-233", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n145 [label="c = s[++pos]", span="239-239", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n149 [label="c = s[++pos]", span="248-248", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n152 [label="sb = new StringBuilder(s.Length)", span="254-254", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n153 [label="sb.Append(s, lastPos, pos - lastPos)", span="256-256", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n154 [label="c = s[++pos]", span="261-261", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n159 [label="return s.Substring(startIndex, count - startIndex + 1);", span="272-272", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n160 [label="sb.Append(s, lastPos, count - lastPos + 1)", span="274-274", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n133 [label="count--", span="214-214", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n147 [label="pos < count", span="242-242", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n156 [label="pos < count", span="264-264", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n128 [label="c != ' ' && c != '\n'", span="206-206", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n132 [label="c != ' ' && c != '\n'", span="213-213", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n135 [label="return string.Empty;", span="218-218", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n136 [label="StringBuilder sb = null", span="222-222", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n141 [label="sb == null", span="229-229", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n144 [label="sb.Append(' ')", span="234-234", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n151 [label="sb == null", span="253-253", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n158 [label="sb == null", span="271-271", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n161 [label="return sb.ToString();", span="275-275", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n163 [label="Entry string.IndexOfAny(char[], int, int)", span="0-0", cluster="string.IndexOfAny(char[], int, int)"];
n164 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
n165 [label="Entry System.Text.StringBuilder.Append(string, int, int)", span="0-0", cluster="System.Text.StringBuilder.Append(string, int, int)"];
n166 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)"];
n146 [label="c != ' ' && c != '\n'", span="240-240", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n148 [label="lastPos = pos", span="244-244", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n150 [label="c == ' ' || c == '\n'", span="250-250", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n155 [label="c != ' ' && c != '\n'", span="262-262", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n157 [label="lastPos = pos", span="266-266", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n162 [label="Exit CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)", span="195-195", cluster="CommonMark.Parser.InlineMethods.NormalizeWhitespace(string, int, int)"];
n167 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n168 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n169 [label="Entry CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n170 [label="int ticklength = 0", span="282-282", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n171 [label="var bl = subj.Buffer.Length", span="283-283", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n172 [label="subj.Position < bl && (subj.Buffer[subj.Position] == '`')", span="284-284", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n174 [label="subj.Position++", span="287-287", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n175 [label="int startpos = subj.Position", span="290-290", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n176 [label="int endpos = scan_to_closing_backticks(subj, ticklength)", span="291-291", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n178 [label="subj.Position = startpos", span="295-295", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n180 [label="return make_code(NormalizeWhitespace(subj.Buffer, startpos, endpos - startpos - ticklength));", span="300-300", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n173 [label="ticklength++", span="286-286", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n179 [label="return make_str(new string('`', ticklength));", span="296-296", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n177 [label="endpos == 0", span="292-292", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n181 [label="Exit CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)", span="280-280", cluster="CommonMark.Parser.InlineMethods.handle_backticks(CommonMark.Parser.Subject)"];
n182 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
n183 [label="Entry CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n184 [label="int numdelims = 0", span="309-309", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n186 [label="int startpos = subj.Position", span="311-311", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n187 [label="int len = subj.Buffer.Length", span="312-312", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n188 [label="char_before = startpos == 0 ? '\n' : subj.Buffer[startpos - 1]", span="314-314", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n189 [label="startpos + numdelims < len && subj.Buffer[startpos + numdelims] == c", span="315-315", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n191 [label="subj.Position = (startpos += numdelims)", span="318-318", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n196 [label="char_after = len == startpos ? '\n' : subj.Buffer[startpos]", span="327-327", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n199 [label="c == '_'", span="332-332", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n185 [label="char char_before, char_after", span="310-310", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n190 [label="numdelims++", span="316-316", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n192 [label="numdelims == 0", span="320-320", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n195 [label="return numdelims;", span="324-324", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n202 [label="return numdelims;", span="338-338", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n198 [label="can_close = char_before != ' ' && char_before != '\n'", span="330-330", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n200 [label="can_open = can_open && !Utilities.IsAsciiLetterOrDigit(char_before)", span="334-334", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n193 [label="can_open = false", span="322-322", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n194 [label="can_close = false", span="323-323", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n197 [label="can_open = char_after != ' ' && char_after != '\n'", span="329-329", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n201 [label="can_close = can_close && !Utilities.IsAsciiLetterOrDigit(char_after)", span="335-335", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n203 [label="Exit CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)", span="307-307", cluster="CommonMark.Parser.InlineMethods.scan_delims(CommonMark.Parser.Subject, char, out bool, out bool)"];
n204 [label="Entry CommonMark.Utilities.IsAsciiLetterOrDigit(char)", span="37-37", cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)"];
n205 [label="Entry CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n206 [label="int useDelims", span="347-347", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n207 [label="var openerDelims = opener.DelimeterCount", span="348-348", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n208 [label="closingDelimeterCount < 3 || openerDelims < 3", span="349-349", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n209 [label="useDelims = closingDelimeterCount <= openerDelims ? closingDelimeterCount : openerDelims", span="350-350", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n210 [label="useDelims = closingDelimeterCount % 2 == 0 ? 2 : 1", span="352-352", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n212 [label="var inl = opener.StartingInline", span="357-357", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n215 [label="closer != null", span="361-361", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n217 [label="inl.NextSibling = closer.StartingInline.NextSibling", span="364-364", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n218 [label="closer.StartingInline.NextSibling = null", span="365-365", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n219 [label="closer.StartingInline.LiteralContent = null", span="366-366", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n222 [label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="374-374", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n223 [label="subj != null", span="376-376", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n224 [label="subj.LastInline = inl", span="377-377", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n225 [label="var inl = opener.StartingInline", span="382-382", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n226 [label="opener.DelimeterCount -= useDelims", span="383-383", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n227 [label="inl.LiteralContent = opener.StartingInline.LiteralContent.Substring(0, opener.DelimeterCount)", span="384-384", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n230 [label="subj != null", span="389-389", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n231 [label="subj.LastInline = emph", span="390-390", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n211 [label="openerDelims == useDelims", span="354-354", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n213 [label="inl.Tag = useDelims == 1 ? InlineTag.Emphasis : InlineTag.Strong", span="358-358", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n228 [label="var emph = useDelims == 1 ? make_emph(inl.NextSibling) : make_strong(inl.NextSibling)", span="386-386", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n232 [label="return useDelims;", span="393-393", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n214 [label="inl.LiteralContent = null", span="359-359", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n216 [label="inl.FirstChild = inl.NextSibling", span="363-363", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n220 [label="inl.FirstChild = inl.NextSibling", span="370-370", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n221 [label="inl.NextSibling = null", span="371-371", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n234 [label="Entry CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)", span="118-118", cluster="CommonMark.Parser.InlineStack.RemoveStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack)"];
n229 [label="inl.NextSibling = emph", span="387-387", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n233 [label="Exit CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)", span="341-341", cluster="CommonMark.Parser.InlineMethods.MatchEmphasisStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, int, CommonMark.Parser.InlineStack)"];
n235 [label="Entry CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n236 [label="bool can_open, can_close", span="398-398", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n237 [label="var numdelims = scan_delims(subj, c, out can_open, out can_close)", span="399-399", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n239 [label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Emphasis, c, out can_close)", span="404-404", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n241 [label="var useDelims = MatchEmphasisStack(istack, subj, numdelims, null)", span="407-407", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n243 [label="subj.Position = subj.Position - numdelims + useDelims", span="412-412", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n245 [label="return HandleEmphasis(subj, c);", span="416-416", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n247 [label="var inlText = make_str(subj.Buffer.Substring(subj.Position - numdelims, numdelims))", span="423-423", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n251 [label="istack.Delimeter = c", span="429-429", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n255 [label="InlineStack.AppendStackEntry(istack, subj)", span="435-435", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n238 [label=can_close, span="401-401", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n242 [label="useDelims < numdelims", span="410-410", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n244 [label="numdelims < 10", span="415-415", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n248 [label="can_open || can_close", span="425-425", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n250 [label="istack.DelimeterCount = numdelims", span="428-428", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n254 [label="istack.Flags = (can_open ? InlineStack.InlineStackFlags.Opener : 0)\r\n                             | (can_close ? InlineStack.InlineStackFlags.Closer : 0)", span="432-433", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n240 [label="istack != null", span="405-405", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n258 [label="Entry CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)", span="69-69", cluster="CommonMark.Parser.InlineStack.FindMatchingOpener(CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority, char, out bool)"];
n246 [label="return null;", span="419-419", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n252 [label="istack.StartingInline = inlText", span="430-430", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n256 [label="return inlText;", span="438-438", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n249 [label="var istack = new InlineStack()", span="427-427", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n259 [label="Entry CommonMark.Parser.InlineStack.InlineStack()", span="10-10", cluster="CommonMark.Parser.InlineStack.InlineStack()"];
n253 [label="istack.Priority = InlineStack.InlineStackPriority.Emphasis", span="431-431", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n260 [label="Entry CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)", span="98-98", cluster="CommonMark.Parser.InlineStack.AppendStackEntry(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject)"];
n257 [label="Exit CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)", span="396-396", cluster="CommonMark.Parser.InlineMethods.HandleEmphasis(CommonMark.Parser.Subject, char)"];
n261 [label="Entry CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n262 [label="subj.Position++", span="444-444", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n263 [label="var inlText = make_str(isImage ? ''!['' : ''['')", span="446-446", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n267 [label="istack.StartPosition = subj.Position", span="451-451", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n269 [label="istack.Flags = InlineStack.InlineStackFlags.Opener | (isImage ? InlineStack.InlineStackFlags.ImageLink : InlineStack.InlineStackFlags.None)", span="453-453", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n270 [label="InlineStack.AppendStackEntry(istack, subj)", span="455-455", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n264 [label="var istack = new InlineStack()", span="448-448", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n266 [label="istack.StartingInline = inlText", span="450-450", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n271 [label="return inlText;", span="457-457", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n265 [label="istack.Delimeter = '['", span="449-449", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n268 [label="istack.Priority = InlineStack.InlineStackPriority.Links", span="452-452", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n272 [label="Exit CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)", span="441-441", cluster="CommonMark.Parser.InlineMethods.HandleLeftSquareBracket(CommonMark.Parser.Subject, bool)"];
n273 [label="Entry CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n274 [label="details != null", span="462-462", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n275 [label="var inl = opener.StartingInline", span="464-464", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n276 [label="inl.Tag = 0 != (opener.Flags & InlineStack.InlineStackFlags.ImageLink)\r\n                            ? InlineTag.Image : InlineTag.Link", span="465-466", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n280 [label="inl.Linkable.Url = details.Url", span="471-471", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n281 [label="inl.Linkable.Title = details.Title", span="472-472", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n282 [label="var temp = opener.Previous", span="475-475", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n285 [label="temp.Delimeter == '[' && temp.Flags == opener.Flags", span="479-479", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n288 [label="InlineStack.RemoveStackEntry(opener, subj, closer)", span="484-484", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n289 [label="subj != null", span="486-486", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n290 [label="subj.LastInline = inl", span="487-487", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n291 [label="InlineStack.RemoveStackEntry(opener, subj, opener)", span="493-493", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n292 [label="closer != null", span="495-495", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n293 [label="InlineStack.RemoveStackEntry(closer, subj, closer)", span="496-496", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n295 [label="subj.LastInline.LastSibling.NextSibling = inl", span="500-500", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n296 [label="subj.LastInline = inl", span="501-501", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n277 [label="inl.LiteralContent = null", span="467-467", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n278 [label="inl.FirstChild = inl.NextSibling", span="468-468", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n279 [label="inl.NextSibling = null", span="469-469", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n283 [label="temp != null && temp.Priority <= InlineStack.InlineStackPriority.Links", span="476-476", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n284 [label="var xtemp = temp.Previous", span="478-478", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n286 [label="InlineStack.RemoveStackEntry(temp, null, temp)", span="480-480", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n287 [label="temp = xtemp", span="481-481", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n297 [label="Exit CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)", span="460-460", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n294 [label="var inl = make_str('']'')", span="499-499", cluster="CommonMark.Parser.InlineMethods.MatchSquareBracketStack(CommonMark.Parser.InlineStack, CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Syntax.Reference)"];
n298 [label="Entry CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n299 [label="subj.Position++", span="509-509", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n301 [label="var istack = InlineStack.FindMatchingOpener(subj.LastPendingInline, InlineStack.InlineStackPriority.Links, '[', out can_close)", span="512-512", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n303 [label="var endpos = subj.Position", span="515-515", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n304 [label="var details = ParseLinkDetails(subj)", span="518-518", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n307 [label="var label = new StringPart(subj.Buffer, startpos, endpos - startpos - 1)", span="524-524", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n308 [label="details = lookup_reference(subj.ReferenceMap, label)", span="526-526", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n311 [label="MatchSquareBracketStack(istack, subj, null, details)", span="532-532", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n300 [label="bool can_close", span="511-511", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n302 [label="istack != null", span="513-513", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n306 [label="var startpos = istack.StartPosition", span="523-523", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n314 [label=can_close, span="538-538", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n313 [label="var inlText = make_str('']'')", span="536-536", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n305 [label="details == null || details == Reference.SelfReference", span="521-521", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n318 [label="Entry CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n309 [label="details == Reference.InvalidReference", span="529-529", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n319 [label="Entry CommonMark.Syntax.StringPart.StringPart(string, int, int)", span="11-11", cluster="CommonMark.Syntax.StringPart.StringPart(string, int, int)"];
n310 [label="details = null", span="530-530", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n312 [label="return null;", span="533-533", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n316 [label="return inlText;", span="556-556", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n315 [label="throw new NotSupportedException(''It is not supported to have inline stack priority higher than Links.'');", span="544-544", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n317 [label="Exit CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)", span="506-506", cluster="CommonMark.Parser.InlineMethods.HandleRightSquareBracket(CommonMark.Parser.Subject)"];
n320 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)"];
n321 [label="Entry CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n322 [label="advance(subj)", span="562-562", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n323 [label="subj.Position >= subj.Buffer.Length", span="564-564", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n325 [label="var nextChar = subj.Buffer[subj.Position]", span="567-567", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n327 [label="advance(subj)", span="573-573", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n330 [label="advance(subj)", span="578-578", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n324 [label="return make_str(''\\'');", span="565-565", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n326 [label="Utilities.IsEscapableSymbol(nextChar)", span="569-569", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n328 [label="return make_str(nextChar.ToString());", span="574-574", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n329 [label="nextChar == '\n'", span="576-576", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n334 [label="Entry CommonMark.Utilities.IsEscapableSymbol(char)", span="28-28", cluster="CommonMark.Utilities.IsEscapableSymbol(char)"];
n332 [label="return make_str(''\\'');", span="583-583", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n331 [label="return make_linebreak();", span="579-579", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n333 [label="Exit CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)", span="560-560", cluster="CommonMark.Parser.InlineMethods.handle_backslash(CommonMark.Parser.Subject)"];
n335 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()"];
n336 [label="Entry CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n337 [label="int match", span="591-591", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n340 [label="match = Scanner.scan_entity(subj.Buffer, subj.Position, subj.Buffer.Length - subj.Position, out namedEntity, out numericEntity)", span="594-594", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n342 [label="subj.Position += match", span="597-597", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n352 [label="return make_str(subj.Buffer.Substring(subj.Position - match, match));", span="613-613", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n353 [label="advance(subj)", span="617-617", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n338 [label="string namedEntity", span="592-592", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n339 [label="int numericEntity", span="593-593", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n341 [label="match > 0", span="595-595", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n356 [label="Entry CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="517-517", cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)"];
n343 [label="namedEntity != null", span="599-599", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n344 [label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="601-601", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n347 [label="numericEntity > 0", span="605-605", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n348 [label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="607-607", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n345 [label="decoded != null", span="602-602", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n357 [label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(string)", span="13-13", cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(string)"];
n346 [label="return make_str(decoded);", span="603-603", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n349 [label="decoded != null", span="608-608", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n358 [label="Entry CommonMark.Parser.EntityDecoder.DecodeEntity(int)", span="26-26", cluster="CommonMark.Parser.EntityDecoder.DecodeEntity(int)"];
n350 [label="return make_str(decoded);", span="609-609", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n351 [label="return make_str(''\uFFFD'');", span="610-610", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n354 [label="return make_str(''&'');", span="618-618", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n355 [label="Exit CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)", span="589-589", cluster="CommonMark.Parser.InlineMethods.handle_entity(CommonMark.Parser.Subject)"];
n359 [label="Entry CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n360 [label="Inline result = null", span="626-626", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n364 [label="Subject subj = make_subject(s, null)", span="630-630", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n361 [label="Inline inew", span="627-627", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n373 [label="result = append_inlines(result, inew)", span="648-648", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n374 [label="return result;", span="651-651", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n362 [label="int searchpos", span="628-628", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n363 [label="char c", span="629-629", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n365 [label="'\0' != (c = peek_char(subj))", span="632-632", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n367 [label="inew = handle_entity(subj)", span="636-636", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n368 [label="searchpos = subj.Buffer.IndexOf('&', subj.Position)", span="640-640", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n370 [label="searchpos = subj.Buffer.Length", span="642-642", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n371 [label="inew = make_str(subj.Buffer.Substring(subj.Position, searchpos - subj.Position))", span="644-644", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n372 [label="subj.Position = searchpos", span="645-645", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n366 [label="c == '&'", span="634-634", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n369 [label="searchpos == -1", span="641-641", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n375 [label="Exit CommonMark.Parser.InlineMethods.make_str_with_entities(string)", span="624-624", cluster="CommonMark.Parser.InlineMethods.make_str_with_entities(string)"];
n376 [label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n377 [label="int searchPos = 0", span="661-661", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n383 [label="(searchPos = url.IndexOfAny(search, searchPos)) != -1", span="668-668", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n384 [label="c = url[searchPos]", span="670-670", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n387 [label="url.Length == searchPos", span="675-675", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n388 [label="c = url[searchPos]", span="678-678", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n391 [label="sb = new StringBuilder(url.Length)", span="681-681", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n392 [label="sb.Append(url, lastPos, searchPos - lastPos - 1)", span="682-682", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n397 [label="match = Scanner.scan_entity(url, searchPos, url.Length - searchPos, out namedEntity, out numericEntity)", span="690-690", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n405 [label="sb = new StringBuilder(url.Length)", span="704-704", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n406 [label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="705-705", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n413 [label="sb = new StringBuilder(url.Length)", span="715-715", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n414 [label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="716-716", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n417 [label="sb = new StringBuilder(url.Length)", span="721-721", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n418 [label="sb.Append(url, lastPos, searchPos - match - lastPos)", span="722-722", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n422 [label="return url;", span="733-733", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n423 [label="sb.Append(url, lastPos, url.Length - lastPos)", span="735-735", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n378 [label="int lastPos = 0", span="662-662", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n379 [label="int match", span="663-663", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n380 [label="char c", span="664-664", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n381 [label="char[] search = new[] { '\\', '&' }", span="665-665", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n382 [label="StringBuilder sb = null", span="666-666", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n390 [label="sb == null", span="681-681", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n404 [label="sb == null", span="704-704", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n407 [label="sb.Append(decoded)", span="706-706", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n412 [label="sb == null", span="715-715", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n415 [label="sb.Append(decoded)", span="717-717", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n416 [label="sb == null", span="721-721", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n419 [label="sb.Append('\uFFFD')", span="723-723", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n421 [label="sb == null", span="732-732", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n424 [label="return sb.ToString();", span="736-736", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n426 [label="Entry string.IndexOfAny(char[], int)", span="0-0", cluster="string.IndexOfAny(char[], int)"];
n386 [label="searchPos++", span="673-673", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n399 [label="searchPos++", span="693-693", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n400 [label="searchPos += match", span="697-697", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n385 [label="c == '\\'", span="671-671", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n394 [label="c == '&'", span="686-686", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n393 [label="lastPos = searchPos", span="683-683", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n389 [label="Utilities.IsEscapableSymbol(c)", span="679-679", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n395 [label="string namedEntity", span="688-688", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n396 [label="int numericEntity", span="689-689", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n398 [label="match == 0", span="691-691", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n401 [label="namedEntity != null", span="699-699", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n402 [label="var decoded = EntityDecoder.DecodeEntity(namedEntity)", span="701-701", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n409 [label="numericEntity > 0", span="710-710", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n410 [label="var decoded = EntityDecoder.DecodeEntity(numericEntity)", span="712-712", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n408 [label="lastPos = searchPos", span="707-707", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n420 [label="lastPos = searchPos", span="726-726", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n403 [label="decoded != null", span="702-702", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n427 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n411 [label="decoded != null", span="713-713", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n425 [label="Exit CommonMark.Parser.InlineMethods.Unescape(string)", span="658-658", cluster="CommonMark.Parser.InlineMethods.Unescape(string)"];
n428 [label="Entry CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n429 [label="url.Length == 0", span="745-745", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n430 [label="return url;", span="746-746", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n431 [label="url = url.Trim()", span="749-749", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n432 [label="url[0] == '<' && url[url.Length - 1] == '>'", span="751-751", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n436 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n433 [label="url = url.Substring(1, url.Length - 2)", span="752-752", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n434 [label="return Unescape(url);", span="754-754", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n435 [label="Exit CommonMark.Parser.InlineMethods.CleanUrl(string)", span="743-743", cluster="CommonMark.Parser.InlineMethods.CleanUrl(string)"];
n437 [label="Entry CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n438 [label="int titlelength = title.Length", span="764-764", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n440 [label="return title;", span="766-766", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n441 [label="var a = title[0]", span="768-768", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n442 [label="var b = title[titlelength - 1]", span="769-769", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n444 [label="title = title.Substring(1, titlelength - 2)", span="771-771", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n445 [label="return Unescape(title);", span="773-773", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n439 [label="titlelength == 0", span="765-765", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n443 [label="(a == '\'' && b == '\'') || (a == '(' && b == ')') || (a == '''' && b == '''')", span="770-770", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n446 [label="Exit CommonMark.Parser.InlineMethods.CleanTitle(string)", span="761-761", cluster="CommonMark.Parser.InlineMethods.CleanTitle(string)"];
n447 [label="Entry CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n448 [label="int matchlen = 0", span="780-780", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n451 [label="advance(subj)", span="784-784", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n452 [label="matchlen = Scanner.scan_autolink_uri(subj.Buffer, subj.Position)", span="786-786", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n454 [label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="789-789", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n455 [label="subj.Position += matchlen", span="790-790", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n458 [label="matchlen = Scanner.scan_autolink_email(subj.Buffer, subj.Position)", span="795-795", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n460 [label="contents = subj.Buffer.Substring(subj.Position, matchlen - 1)", span="798-798", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n461 [label="subj.Position += matchlen", span="799-799", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n464 [label="matchlen = Scanner.scan_html_tag(subj.Buffer, subj.Position)", span="804-804", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n466 [label="contents = subj.Buffer.Substring(subj.Position - 1, matchlen + 1)", span="807-807", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n467 [label="subj.Position += matchlen", span="808-808", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n449 [label="string contents", span="781-781", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n450 [label="Inline result", span="782-782", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n453 [label="matchlen > 0", span="787-787", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n471 [label="Entry CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", span="21-21", cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)"];
n456 [label="result = make_link(make_str_with_entities(contents), contents, '''')", span="791-791", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n457 [label="return result;", span="792-792", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n459 [label="matchlen > 0", span="796-796", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n472 [label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int)", span="62-62", cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)"];
n462 [label="result = make_link(make_str_with_entities(contents), ''mailto:'' + contents, '''')", span="800-800", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n463 [label="return result;", span="801-801", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n465 [label="matchlen > 0", span="805-805", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n473 [label="Entry CommonMark.Parser.Scanner.scan_html_tag(string, int)", span="246-246", cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)"];
n469 [label="return make_str(''<'');", span="813-813", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n468 [label="return make_raw_html(contents);", span="809-809", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n470 [label="Exit CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)", span="778-778", cluster="CommonMark.Parser.InlineMethods.handle_pointy_brace(CommonMark.Parser.Subject)"];
n474 [label="int n", span="820-820", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n478 [label="endlabel = subj.Position", span="824-824", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n479 [label="var c = peek_char(subj)", span="826-826", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n480 [label="c == '(' &&\r\n                    ((sps = Scanner.scan_spacechars(subj.Buffer, subj.Position + 1)) > -1) &&\r\n                    ((n = Scanner.scan_link_url(subj.Buffer, subj.Position + 1 + sps)) > -1)", span="828-830", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n481 [label="starturl = subj.Position + 1 + sps", span="833-833", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n483 [label="starttitle = endurl + Scanner.scan_spacechars(subj.Buffer, endurl)", span="835-835", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n484 [label="endtitle = (starttitle == endurl) ? starttitle :\r\n                               starttitle + Scanner.scan_link_title(subj.Buffer, starttitle)", span="837-838", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n485 [label="endall = endtitle + Scanner.scan_spacechars(subj.Buffer, endtitle)", span="839-839", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n486 [label="endall < subj.Buffer.Length && subj.Buffer[endall] == ')'", span="840-840", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n487 [label="subj.Position = endall + 1", span="842-842", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n488 [label="url = subj.Buffer.Substring(starturl, endurl - starturl)", span="843-843", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n490 [label="title = subj.Buffer.Substring(starttitle, endtitle - starttitle)", span="845-845", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n494 [label="var label = ParseReferenceLabel(subj)", span="853-853", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n498 [label="var details = lookup_reference(subj.ReferenceMap, label.Value)", span="859-859", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n501 [label="subj.Position = endlabel", span="865-865", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n503 [label="subj.Position = endlabel", span="871-871", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n475 [label="int sps", span="821-821", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n476 [label="int endlabel, starturl, endurl, starttitle, endtitle, endall", span="822-822", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n477 [label="string url, title", span="823-823", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n493 [label="c == '[' || c == ' ' || c == '\n'", span="851-851", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n506 [label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int)", span="271-271", cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)"];
n507 [label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int)", span="169-169", cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)"];
n482 [label="endurl = starturl + n", span="834-834", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n508 [label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int)", span="236-236", cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)"];
n489 [label="url = CleanUrl(url)", span="844-844", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n492 [label="return new Reference() { Title = title, Url = url };", span="848-848", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n491 [label="title = CleanTitle(title)", span="846-846", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n495 [label="label != null", span="854-854", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n509 [label="Entry CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n496 [label="label.Value.Length == 0", span="856-856", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n497 [label="return Reference.SelfReference;", span="857-857", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n499 [label="details != null", span="860-860", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n500 [label="return details;", span="861-861", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n502 [label="return Reference.InvalidReference;", span="866-866", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n504 [label="return null;", span="872-872", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n505 [label="Exit CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)", span="818-818", cluster="CommonMark.Parser.InlineMethods.ParseLinkDetails(CommonMark.Parser.Subject)"];
n510 [label="Entry CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n511 [label="int nlpos = subj.Position", span="879-879", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n512 [label="advance(subj)", span="882-882", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n513 [label="var len = subj.Buffer.Length", span="885-885", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n514 [label="subj.Position < len && subj.Buffer[subj.Position] == ' '", span="886-886", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n515 [label="advance(subj)", span="887-887", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n516 [label="nlpos > 1 && subj.Buffer[nlpos - 1] == ' ' && subj.Buffer[nlpos - 2] == ' '", span="889-889", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n517 [label="return make_linebreak();", span="890-890", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n518 [label="return make_softbreak();", span="892-892", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n519 [label="Exit CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)", span="877-877", cluster="CommonMark.Parser.InlineMethods.handle_newline(CommonMark.Parser.Subject)"];
n520 [label="Entry CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n521 [label="Inline inew = null", span="900-900", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n524 [label="var c = subj.Buffer[subj.Position]", span="904-904", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n527 [label="inew = handle_newline(subj)", span="909-909", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n529 [label="inew = handle_backticks(subj)", span="912-912", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n531 [label="inew = handle_backslash(subj)", span="915-915", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n533 [label="inew = handle_entity(subj)", span="918-918", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n535 [label="inew = handle_pointy_brace(subj)", span="921-921", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n537 [label="inew = HandleEmphasis(subj, '_')", span="924-924", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n539 [label="inew = HandleEmphasis(subj, '*')", span="927-927", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n541 [label="inew = HandleLeftSquareBracket(subj, false)", span="930-930", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n543 [label="inew = HandleRightSquareBracket(subj)", span="933-933", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n545 [label="advance(subj)", span="936-936", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n546 [label="peek_char(subj) == '['", span="937-937", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n547 [label="inew = HandleLeftSquareBracket(subj, true)", span="938-938", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n549 [label="endpos = subj.Buffer.IndexOfAny(SpecialCharacters, subj.Position)", span="945-945", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n550 [label="endpos == subj.Position", span="947-947", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n551 [label="contents = subj.Buffer[endpos].ToString()", span="950-950", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n552 [label="advance(subj)", span="951-951", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n554 [label="endpos = subj.Buffer.Length", span="956-956", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n555 [label="contents = subj.Buffer.Substring(subj.Position)", span="957-957", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n556 [label="subj.Position = endpos", span="958-958", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n557 [label="contents = subj.Buffer.Substring(subj.Position, endpos - subj.Position)", span="963-963", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n558 [label="subj.Position = endpos", span="965-965", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n559 [label="peek_char(subj) == '\n'", span="967-967", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n522 [label="string contents", span="901-901", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n523 [label="int endpos", span="902-902", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n525 [label=c, span="906-906", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n526 [label="'\n'", span="908-908", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n528 [label="'`'", span="911-911", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n530 [label="'\\'", span="914-914", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n532 [label="'&'", span="917-917", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n534 [label="'<'", span="920-920", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n536 [label="'_'", span="923-923", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n538 [label="'*'", span="926-926", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n540 [label="'['", span="929-929", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n542 [label="']'", span="932-932", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n544 [label="'!'", span="935-935", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n548 [label="inew = make_str(''!'')", span="940-940", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n553 [label="endpos == -1", span="953-953", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n561 [label="inew = make_str(contents)", span="971-971", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n564 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n560 [label="contents = contents.TrimEnd()", span="968-968", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n562 [label="return inew;", span="975-975", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n563 [label="Exit CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)", span="898-898", cluster="CommonMark.Parser.InlineMethods.parse_inline(CommonMark.Parser.Subject)"];
n565 [label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n566 [label="input == null", span="980-980", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n568 [label="Subject subj = make_subject(input, refmap)", span="983-983", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n567 [label="return null;", span="981-981", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n569 [label="var len = subj.Buffer.Length", span="985-985", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n572 [label="var first = parse_inline(subj)", span="990-990", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n573 [label="subj.LastInline = first.LastSibling", span="991-991", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n575 [label="subj.Position < len", span="994-994", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n576 [label="cur = parse_inline(subj)", span="996-996", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n578 [label="subj.LastInline.NextSibling = cur", span="999-999", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n579 [label="subj.LastInline = cur.LastSibling", span="1000-1000", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n580 [label="InlineStack.PostProcessInlineStack(subj, subj.FirstPendingInline, subj.LastPendingInline, InlineStack.InlineStackPriority.Maximum)", span="1004-1004", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n570 [label="len == 0", span="987-987", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n571 [label="return null;", span="988-988", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n581 [label="return first;", span="1006-1006", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n574 [label="Inline cur", span="993-993", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n577 [label="cur != null", span="997-997", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n583 [label="Entry CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)", span="168-168", cluster="CommonMark.Parser.InlineStack.PostProcessInlineStack(CommonMark.Parser.Subject, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack, CommonMark.Parser.InlineStack.InlineStackPriority)"];
n582 [label="Exit CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="978-978", cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n584 [label="Entry CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n585 [label="bool seen_newline = false", span="1012-1012", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n586 [label="var len = subj.Buffer.Length", span="1013-1013", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n588 [label="subj.Position < len", span="1015-1015", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n589 [label="c = subj.Buffer[subj.Position]", span="1017-1017", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n591 [label="advance(subj)", span="1019-1019", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n590 [label="c == ' ' || (!seen_newline && (seen_newline = c == '\n'))", span="1018-1018", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n587 [label="char c", span="1014-1014", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n593 [label="Exit CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)", span="1010-1010", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n592 [label="return;", span="1021-1021", cluster="CommonMark.Parser.InlineMethods.spnl(CommonMark.Parser.Subject)"];
n594 [label="var startPos = subj.Position", span="1039-1039", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n595 [label="var source = subj.Buffer", span="1040-1040", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n598 [label="subj.Position < len", span="1044-1044", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n599 [label="c = subj.Buffer[subj.Position]", span="1046-1046", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n601 [label="subj.Position++", span="1049-1049", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n603 [label="subj.Position++", span="1054-1054", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n604 [label="subj.Position = startPos", span="1059-1059", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n606 [label="var labelStartPos = subj.Position", span="1064-1064", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n607 [label="len = subj.Position + Reference.MaximumReferenceLabelLength", span="1066-1066", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n610 [label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1070-1070", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n611 [label="subj.Position > -1", span="1071-1071", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n612 [label="c = source[subj.Position]", span="1073-1073", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n614 [label="subj.Position += 2", span="1076-1076", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n615 [label="subj.Position >= len", span="1077-1077", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n616 [label="subj.Position = source.IndexOfAny(BracketSpecialCharacters, subj.Position, len - subj.Position)", span="1080-1080", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n618 [label="var label = new StringPart(source, labelStartPos, subj.Position - labelStartPos)", span="1088-1088", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n619 [label="subj.Position++", span="1089-1089", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n621 [label="subj.Position = startPos", span="1094-1094", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n596 [label="var len = source.Length", span="1041-1041", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n608 [label="len > source.Length", span="1067-1067", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n609 [label="len = source.Length", span="1068-1068", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n597 [label="char c = '\0'", span="1043-1043", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n600 [label="c == ' ' || c == '\n'", span="1047-1047", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n602 [label="c == '['", span="1052-1052", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n605 [label="return null;", span="1060-1060", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n613 [label="c == '\\'", span="1074-1074", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n617 [label="c == '['", span="1082-1082", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n620 [label="return label;", span="1090-1090", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n622 [label="return null;", span="1095-1095", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n623 [label="Exit CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)", span="1037-1037", cluster="CommonMark.Parser.InlineMethods.ParseReferenceLabel(CommonMark.Parser.Subject)"];
n624 [label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n625 [label="Subject subj = make_subject(input.ToString(), null)", span="1104-1104", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n658 [label="add_reference(refmap, make_reference(lab.Value, url, title))", span="1157-1157", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n626 [label="string url = null", span="1105-1105", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n661 [label="Entry CommonMark.Syntax.StringContent.ToString()", span="50-50", cluster="CommonMark.Syntax.StringContent.ToString()"];
n630 [label="var lab = ParseReferenceLabel(subj)", span="1111-1111", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n633 [label="peek_char(subj) == ':'", span="1116-1116", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n634 [label="advance(subj)", span="1117-1117", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n636 [label="spnl(subj)", span="1122-1122", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n637 [label="matchlen = Scanner.scan_link_url(subj.Buffer, subj.Position)", span="1123-1123", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n640 [label="url = subj.Buffer.Substring(subj.Position, matchlen)", span="1127-1127", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n642 [label="subj.Position += matchlen", span="1129-1129", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n643 [label="beforetitle = subj.Position", span="1132-1132", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n644 [label="spnl(subj)", span="1133-1133", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n645 [label="matchlen = Scanner.scan_link_title(subj.Buffer, subj.Position)", span="1134-1134", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n647 [label="title = subj.Buffer.Substring(subj.Position, matchlen)", span="1137-1137", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n649 [label="subj.Position += matchlen", span="1139-1139", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n650 [label="subj.Position = beforetitle", span="1143-1143", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n652 [label="peek_char(subj) == ' '", span="1148-1148", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n653 [label="advance(subj)", span="1149-1149", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n654 [label="peek_char(subj) == '\n'", span="1151-1151", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n655 [label="advance(subj)", span="1152-1152", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n656 [label="peek_char(subj) != '\0'", span="1153-1153", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n659 [label="return subj.Position;", span="1159-1159", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n627 [label="string title = null", span="1106-1106", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n628 [label="int matchlen = 0", span="1107-1107", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n629 [label="int beforetitle", span="1108-1108", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n631 [label="lab == null || lab.Value.Length > Reference.MaximumReferenceLabelLength", span="1112-1112", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n632 [label="return 0;", span="1113-1113", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n635 [label="return 0;", span="1119-1119", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n638 [label="matchlen == 0", span="1124-1124", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n639 [label="return 0;", span="1125-1125", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n641 [label="url = CleanUrl(url)", span="1128-1128", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n646 [label="matchlen > 0", span="1135-1135", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n648 [label="title = CleanTitle(title)", span="1138-1138", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n651 [label="title = string.Empty", span="1144-1144", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n657 [label="return 0;", span="1154-1154", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
n660 [label="Exit CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1102-1102", cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)"];
m3_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="78-78", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs"];
m3_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_25 [label="Assert.Equal(''pre-options'', lines[0])", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_26 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_27 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_28 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_29 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_30 [label="Assert.Equal( ''post-options'', lines[5])", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="HelpTextTests.cs"];
m3_31 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m3_42 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m3_43 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_44 [label="sut.MaximumDisplayWidth = 40", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_45 [label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="89-89", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_46 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="92-92", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_47 [label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_48 [label="lines[3].Should().Be(''                of the verbosity to '')", span="95-95", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_49 [label="lines[4].Should().Be(''                test out the wrapping '')", span="96-96", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_50 [label="lines[5].Should().Be(''                capabilities of the '')", span="97-97", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_51 [label="lines[6].Should().Be(''                Help Text.'')", span="98-98", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", color=green, community=0];
m3_52 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m3_57 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_58 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_59 [label="sut.MaximumDisplayWidth = 40", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_60 [label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_61 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="112-112", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_62 [label="lines[2].Should().Be(''  v, verbose    Before '')", span="113-113", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_63 [label="lines[3].Should().Be(''                012345678901234567890123'')", span="114-114", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_64 [label="lines[4].Should().Be(''                After'')", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_65 [label="lines[5].Should().Be(''  input-file    Before '')", span="116-116", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_66 [label="lines[6].Should().Be(''                012345678901234567890123'')", span="117-117", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_67 [label="lines[7].Should().Be(''                456789 After'')", span="118-118", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_68 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m3_174 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m3_149 [label="Entry Unk.True", span="", cluster="Unk.True", file="HelpTextTests.cs"];
m3_99 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m3_133 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_134 [label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="212-220", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_135 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="223-223", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_136 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="226-226", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_137 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="228-228", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_138 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="229-229", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_139 [label="Assert.Equal(''ERROR(S):'', lines[2])", span="230-230", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_140 [label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="231-231", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_141 [label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="232-232", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_142 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="233-233", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_143 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="234-234", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_144 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="235-235", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_145 [label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="236-236", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_146 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_148 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs"];
m3_103 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m3_161 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_162 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="272-273", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_163 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="274-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_164 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_165 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="287-287", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_166 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="289-289", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_167 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="290-290", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_168 [label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="291-291", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_169 [label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="292-292", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_170 [label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="293-293", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_171 [label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="294-294", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_172 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_70 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_71 [label="var sut = new HelpText(''Heading Info.'')", span="127-127", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_72 [label="sut.MaximumDisplayWidth = 40", span="128-128", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_73 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="129-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_74 [label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="134-134", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_75 [label="lines[1].Should().Be(''Before '')", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_76 [label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_77 [label="lines[3].Should().Be(''012 After'')", span="137-137", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_78 [label="lines[lines.Length - 3].Should().Be(''Before '')", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_79 [label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_80 [label="lines[lines.Length - 1].Should().Be('' After'')", span="140-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_81 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m3_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m3_1 [label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m3_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m3_111 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="389-389", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpTextTests.cs"];
m3_132 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m3_173 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs"];
m3_107 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m3_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="32-32", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs"];
m3_35 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m3_36 [label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="72-73", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", color=green, community=0];
m3_37 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="76-76", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", color=green, community=0];
m3_38 [label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="78-78", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", color=green, community=0];
m3_39 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m3_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="313-313", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs"];
m3_97 [label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="HelpTextTests.cs"];
m3_109 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m3_41 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs"];
m3_105 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m3_112 [label="Entry lambda expression", span="166-189", cluster="lambda expression", file="HelpTextTests.cs"];
m3_113 [label="err.Tag", span="168-168", cluster="lambda expression", file="HelpTextTests.cs"];
m3_115 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="171-171", cluster="lambda expression", file="HelpTextTests.cs"];
m3_117 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="173-173", cluster="lambda expression", file="HelpTextTests.cs"];
m3_119 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="175-175", cluster="lambda expression", file="HelpTextTests.cs"];
m3_121 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="177-177", cluster="lambda expression", file="HelpTextTests.cs"];
m3_123 [label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="179-179", cluster="lambda expression", file="HelpTextTests.cs"];
m3_125 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="181-181", cluster="lambda expression", file="HelpTextTests.cs"];
m3_129 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="185-185", cluster="lambda expression", file="HelpTextTests.cs"];
m3_114 [label="ErrorType.BadFormatTokenError", span="170-170", cluster="lambda expression", file="HelpTextTests.cs"];
m3_116 [label="ErrorType.MissingValueOptionError", span="172-172", cluster="lambda expression", file="HelpTextTests.cs"];
m3_118 [label="ErrorType.UnknownOptionError", span="174-174", cluster="lambda expression", file="HelpTextTests.cs"];
m3_120 [label="ErrorType.MissingRequiredOptionError", span="176-176", cluster="lambda expression", file="HelpTextTests.cs"];
m3_122 [label="ErrorType.MutuallyExclusiveSetError", span="178-178", cluster="lambda expression", file="HelpTextTests.cs"];
m3_124 [label="ErrorType.SequenceOutOfRangeError", span="180-180", cluster="lambda expression", file="HelpTextTests.cs"];
m3_126 [label="ErrorType.NoVerbSelectedError", span="182-182", cluster="lambda expression", file="HelpTextTests.cs"];
m3_128 [label="ErrorType.BadVerbSelectedError", span="184-184", cluster="lambda expression", file="HelpTextTests.cs"];
m3_130 [label="throw new InvalidOperationException();", span="187-187", cluster="lambda expression", file="HelpTextTests.cs"];
m3_127 [label="return ''ERR no-verb-selected'';", span="183-183", cluster="lambda expression", file="HelpTextTests.cs"];
m3_131 [label="Exit lambda expression", span="166-189", cluster="lambda expression", file="HelpTextTests.cs"];
m3_40 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="55-55", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m3_100 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m3_55 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m3_56 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="HelpTextTests.cs"];
m3_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="417-417", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs"];
m3_33 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="333-333", cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs"];
m3_175 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs"];
m3_82 [label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs"];
m3_106 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m3_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m3_69 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs"];
m3_102 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m3_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m3_147 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="242-242", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m3_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="323-323", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs"];
m3_104 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m3_21 [label="Entry string.ToNotEmptyLines()", span="9-9", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m3_98 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs"];
m3_110 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs"];
m3_101 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m3_32 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs"];
m3_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_9 [label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_10 [label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_11 [label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_12 [label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_13 [label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_14 [label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m3_83 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_84 [label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="149-165", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_85 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="166-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_86 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_87 [label="var lines = errorsText.ToNotEmptyLines()", span="195-195", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_88 [label="Assert.Equal(''  ERR badtoken'', lines[0])", span="197-197", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_89 [label="Assert.Equal(''  ERR x, switch'', lines[1])", span="198-198", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_90 [label="Assert.Equal(''  ERR unknown'', lines[2])", span="199-199", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_91 [label="Assert.Equal(''  ERR missing'', lines[3])", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_92 [label="Assert.Equal(''  ERR z'', lines[4])", span="201-201", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_93 [label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="202-202", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_94 [label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="203-203", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_95 [label="Assert.Equal(''  ERR badverb'', lines[7])", span="204-204", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_96 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_150 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_151 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="244-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_152 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_153 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="257-257", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_154 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="259-259", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_155 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="260-260", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_156 [label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="261-261", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_157 [label="Assert.Equal(''changes to commit.'', lines[3])", span="262-262", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_158 [label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="263-263", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_159 [label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="264-264", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_160 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m3_34 [label="Entry string[].TrimStringArray()", span="14-14", cluster="string[].TrimStringArray()", file="HelpTextTests.cs"];
m3_108 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m3_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HelpTextTests.cs"];
m3_54 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m3_53 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs"];
m4_76 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs"];
m4_86 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="27-27", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m4_33 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m4_34 [label="var expectedResult = -.123D", span="78-78", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m4_35 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''-0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="81-85", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m4_36 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="88-88", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m4_37 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m4_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceBuilderTests.cs"];
m4_123 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="256-256", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m4_124 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="259-259", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m4_125 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m4_126 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="269-269", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m4_127 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="256-256", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m4_118 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m4_132 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="275-275", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_133 [label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="278-278", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_134 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_135 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_136 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="275-275", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_57 [label="Entry Unk.AllProperties", span="", cluster="Unk.AllProperties", file="InstanceBuilderTests.cs"];
m4_101 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="10-10", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m4_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_1 [label="var fakeOptions = new FakeOptions()", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_2 [label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="19-21", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_3 [label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="24-28", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_4 [label="Assert.True(expectedResult.Equals(result))", span="31-31", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_5 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m4_113 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="237-237", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m4_114 [label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="240-240", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m4_115 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="243-247", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m4_116 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="250-250", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m4_117 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="237-237", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m4_8 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs"];
m4_128 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m4_154 [label="Entry lambda expression", span="320-320", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_13 [label=fakeOptions, span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_12 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_14 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_21 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_22 [label="new FakeOptions()", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_23 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_29 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_30 [label="new FakeOptionsWithDouble()", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_31 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_38 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_39 [label="new FakeOptionsWithDouble()", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_40 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_47 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_48 [label="new FakeOptions()", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_49 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_59 [label="Entry lambda expression", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_60 [label="new FakeOptionsWithEnum()", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_61 [label="Exit lambda expression", span="123-123", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_68 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_69 [label="new FakeOptionsWithValues()", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_70 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_77 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_78 [label="new FakeOptionsWithSequenceWithoutRange()", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_79 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_87 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_90 [label="Entry lambda expression", span="200-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_88 [label="new FakeOptionsWithValues()", span="199-199", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_89 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_91 [label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="201-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_95 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_99 [label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_92 [label="Exit lambda expression", span="200-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_94 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_96 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_98 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_100 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_109 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_110 [label="new FakeOptionsWithSets()", span="225-225", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_111 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_119 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_120 [label="new FakeOptionWithRequired()", span="244-244", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_121 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_129 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_130 [label="new FakeOptions()", span="263-263", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_131 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_138 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_139 [label="new FakeOptions()", span="282-282", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_140 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_146 [label="Entry lambda expression", span="301-301", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_147 [label="new FakeOptions()", span="301-301", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_148 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_155 [label="new FakeOptions()", span="320-320", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_156 [label="Exit lambda expression", span="320-320", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m4_46 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs"];
m4_80 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="185-185", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_81 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="188-194", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_82 [label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="195-195", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_84 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="208-208", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_83 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="198-205", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_85 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="185-185", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m4_149 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="313-313", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_150 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="316-316", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_151 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_152 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_153 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="313-313", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_10 [label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="90-90", cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="InstanceBuilderTests.cs"];
m4_32 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs"];
m4_55 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14", cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs"];
m4_62 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m4_63 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="138-144", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m4_64 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="147-151", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m4_65 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="154-154", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m4_66 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="135-135", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m4_137 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs"];
m4_97 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs"];
m4_93 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs"];
m4_112 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs"];
m4_107 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m4_102 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="214-214", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m4_103 [label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="217-221", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m4_104 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="224-228", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m4_105 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="231-231", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m4_106 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="214-214", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m4_24 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m4_25 [label="var expectedResult = .123D", span="59-59", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m4_26 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="62-66", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m4_27 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="69-69", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m4_28 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m4_122 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs"];
m4_58 [label="Entry Unk.EqualTo", span="", cluster="Unk.EqualTo", file="InstanceBuilderTests.cs"];
m4_108 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs"];
m4_56 [label="Entry Unk.ShouldHave", span="", cluster="Unk.ShouldHave", file="InstanceBuilderTests.cs"];
m4_6 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceBuilderTests.cs"];
m4_15 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m4_16 [label="var expectedResult = -123", span="40-40", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m4_17 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m4_18 [label="Assert.Equal(expectedResult, result.Value.LongValue)", span="50-50", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m4_19 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m4_141 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="294-294", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_142 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="297-297", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_143 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_144 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_145 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="294-294", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m4_50 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m4_51 [label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="116-119", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m4_52 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="122-126", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m4_53 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m4_54 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="113-113", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m4_67 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs"];
m4_7 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs"];
m4_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InstanceBuilderTests.cs"];
m4_41 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m4_42 [label="var expectedResult = new[] { 10, 20, 30, 40 }", span="97-97", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m4_43 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m4_44 [label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="107-107", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m4_45 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m4_71 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m4_72 [label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n            {\r\n                LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n            }", span="163-166", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", color=red, community=0, file="InstanceBuilderTests.cs"];
m4_73 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="169-173", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m4_74 [label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="176-176", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m4_75 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="160-160", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m4_9 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m4_157 [label=fakeOptions, span="", file="InstanceBuilderTests.cs"];
m4_158 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="InstanceBuilderTests.cs"];
m5_14 [label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="40-40", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m5_15 [label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="40-40", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m5_20 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="68-68", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m5_21 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="68-68", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m5_18 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="59-59", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m5_19 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="59-59", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m5_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs"];
m5_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="22-22", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_1 [label="shortName == null", span="24-24", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_3 [label="longName == null", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_5 [label="this.shortName = shortName", span="27-27", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_6 [label="this.longName = longName", span="28-28", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_2 [label="throw new ArgumentNullException(''shortName'');", span="24-24", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_4 [label="throw new ArgumentNullException(''longName'');", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_7 [label="this.setName = string.Empty", span="29-29", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_8 [label="this.min = -1", span="30-30", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_9 [label="this.max = -1", span="31-31", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_10 [label="this.helpText = string.Empty", span="32-32", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_11 [label="this.metaValue = string.Empty", span="33-33", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_12 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="22-22", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m5_16 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="49-49", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m5_17 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="49-49", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m5_22 [label="CommandLine.OptionAttribute", span="", file="OptionAttribute.cs"];
m6_8 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs"];
m6_11 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionMapperTests.cs"];
m6_12 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapperTests.cs"];
m6_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs"];
m6_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionMapperTests.cs"];
m6_10 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionMapperTests.cs"];
m6_14 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="OptionMapperTests.cs"];
m6_26 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs"];
m6_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m6_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m6_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs"];
m6_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m6_4 [label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m6_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m6_27 [label="Entry lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_19 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_23 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_16 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_20 [label="pt.Specification.IsOption()", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_21 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_24 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_25 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_28 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_29 [label="Exit lambda expression", span="40-42", cluster="lambda expression", file="OptionMapperTests.cs"];
m6_30 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="OptionMapperTests.cs"];
m6_18 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs"];
m6_22 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs"];
m6_13 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionMapperTests.cs"];
m6_9 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="OptionMapperTests.cs"];
m7_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_1 [label="this.shortName = shortName", span="18-18", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_2 [label="this.longName = longName", span="19-19", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_3 [label="this.setName = setName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_4 [label="this.helpText = helpText", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_5 [label="this.metaValue = metaValue", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_6 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs"];
m7_7 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs"];
m7_8 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue);", span="27-37", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", color=green, community=0, file="OptionSpecification.cs"];
m7_9 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs"];
m7_10 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="OptionSpecification.cs"];
m7_11 [label="CommandLine.Core.OptionSpecification", span="", file="OptionSpecification.cs"];
m8_4 [label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34", cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs"];
m8_5 [label="Dispose(false)", span="36-36", cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs"];
m8_6 [label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34", cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs"];
m8_0 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs"];
m8_1 [label="this.caseSensitive = true", span="27-27", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs"];
m8_2 [label="this.parsingCulture = CultureInfo.InvariantCulture", span="28-28", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs"];
m8_3 [label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs"];
m8_7 [label="Entry CommandLine.ParserSettings.Dispose(bool)", span="124-124", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_13 [label="this.disposed", span="126-126", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_15 [label=disposing, span="131-131", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_14 [label="return;", span="128-128", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_16 [label="HelpWriter != null", span="133-133", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_17 [label="this.helpWriter.Dispose()", span="135-135", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_19 [label="this.disposed = true", span="139-139", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_18 [label="this.helpWriter = null", span="136-136", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_20 [label="Exit CommandLine.ParserSettings.Dispose(bool)", span="124-124", cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs"];
m8_12 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="ParserSettings.cs"];
m8_21 [label="Entry System.IO.TextWriter.Dispose()", span="0-0", cluster="System.IO.TextWriter.Dispose()", file="ParserSettings.cs"];
m8_8 [label="Entry CommandLine.ParserSettings.Dispose()", span="117-117", cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs"];
m8_9 [label="Dispose(true)", span="119-119", cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs"];
m8_10 [label="GC.SuppressFinalize(this)", span="121-121", cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs"];
m8_11 [label="Exit CommandLine.ParserSettings.Dispose()", span="117-117", cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs"];
m8_22 [label="CommandLine.ParserSettings", span="", file="ParserSettings.cs"];
m9_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs"];
m9_22 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs"];
m9_26 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="Specification.cs"];
m9_28 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs"];
m9_25 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="Specification.cs"];
m9_8 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_9 [label="var attrs = property.GetCustomAttributes(true)", span="69-69", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", color=green, community=0];
m9_12 [label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType)", span="73-73", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs"];
m9_14 [label="return spec.WithLongName(property.Name.ToLowerInvariant());", span="76-76", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=red, community=0, file="Specification.cs"];
m9_18 [label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="84-84", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_10 [label="var oa = attrs.OfType<OptionAttribute>()", span="70-70", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", color=green, community=0];
m9_16 [label="var va = attrs.OfType<ValueAttribute>()", span="81-81", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_11 [label="oa.Count() == 1", span="71-71", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", color=green, community=0];
m9_13 [label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", color=green, community=0];
m9_15 [label="return spec;", span="78-78", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_17 [label="va.Count() == 1", span="82-82", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", color=green, community=0];
m9_19 [label="throw new InvalidOperationException();", span="87-87", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_20 [label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs"];
m9_29 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs"];
m9_21 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs"];
m9_24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs"];
m9_27 [label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="25-25", cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs"];
m9_0 [label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_1 [label="this.tag = tag", span="29-29", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_2 [label="this.required = required", span="30-30", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_3 [label="this.min = min", span="31-31", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_4 [label="this.max = max", span="32-32", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_5 [label="this.defaultValue = defaultValue", span="33-33", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_6 [label="this.conversionType = conversionType", span="34-34", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_7 [label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27", cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs"];
m9_30 [label="CommandLine.Core.Specification", span="", file="Specification.cs"];
m10_42 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs"];
m10_15 [label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_16 [label=guardsLookup, span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_17 [label="specifications.Any(spec => guard.Item1(spec))", span="44-44", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_19 [label="return specifications;", span="50-50", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_18 [label="throw new ApplicationException(guard.Item2);", span="46-46", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_20 [label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs"];
m10_41 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs"];
m10_0 [label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_1 [label="specification == null", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_3 [label="return specification.Tag == SpecificationType.Option;", span="15-15", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_2 [label="throw new ArgumentNullException(''specification'');", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_4 [label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_14 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="SpecificationExtensions.cs"];
m10_6 [label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_7 [label="specification == null", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_9 [label="return specification.Tag == SpecificationType.Value;", span="22-22", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_8 [label="throw new ArgumentNullException(''specification'');", span="20-20", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_10 [label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_23 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="SpecificationExtensions.cs"];
m10_24 [label="guard.Item1(spec)", span="44-44", cluster="lambda expression", file="SpecificationExtensions.cs"];
m10_25 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="SpecificationExtensions.cs"];
m10_27 [label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_28 [label="specification == null", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_30 [label="specification.ConversionType.ToDescriptor()", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_34 [label="var min = specification.Min", span="62-62", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_35 [label="var max = specification.Max", span="63-63", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_29 [label="throw new ArgumentNullException(''specification'');", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_31 [label="DescriptorType.Scalar", span="59-59", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_33 [label="DescriptorType.Sequence", span="61-61", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_32 [label="return  Maybe.Just(1);", span="60-60", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_36 [label="min >= 0 && max >= 0", span="64-64", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_37 [label="return Maybe.Just(max);", span="66-66", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_38 [label="return Maybe.Nothing<int>();", span="71-71", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_39 [label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs"];
m10_26 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs"];
m10_40 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs"];
m10_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs"];
m10_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SpecificationExtensions.cs"];
m10_11 [label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs"];
m10_12 [label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue);", span="27-37", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", color=green, community=0, file="SpecificationExtensions.cs"];
m10_13 [label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs"];
m10_22 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs"];
m10_43 [label=guard, span="", file="SpecificationExtensions.cs"];
m11_0 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs"];
m11_1 [label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="20-29", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs"];
m11_2 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SpecificationPropertyRules.cs"];
m11_19 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SpecificationPropertyRules.cs"];
m11_48 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs"];
m11_49 [label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="48-60", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs"];
m11_50 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="46-46", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SpecificationPropertyRules.cs"];
m11_46 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_38 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SpecificationPropertyRules.cs"];
m11_10 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="SpecificationPropertyRules.cs"];
m11_14 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationPropertyRules.cs"];
m11_47 [label="Entry Unk.FromSpecification", span="", cluster="Unk.FromSpecification", file="SpecificationPropertyRules.cs"];
m11_61 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SpecificationPropertyRules.cs"];
m11_42 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SpecificationPropertyRules.cs"];
m11_65 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_62 [label="Entry lambda expression", span="56-57", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_4 [label="var options = specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust())", span="22-22", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_3 [label="Entry lambda expression", span="20-29", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_5 [label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="23-23", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_15 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_7 [label="return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));", span="26-26", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_6 [label="groups.Count() > 1", span="24-24", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_20 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_8 [label="return Enumerable.Empty<Nothing<Error>>();", span="28-28", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_9 [label="Exit lambda expression", span="20-29", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_23 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_16 [label="sp.Specification.IsOption() && sp.Value.IsJust()", span="22-22", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_17 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_21 [label="((OptionSpecification)g.Specification).SetName", span="23-23", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_22 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_24 [label="Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="26-26", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_25 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_33 [label="var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required)", span="36-36", cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_32 [label="Entry lambda expression", span="34-43", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_34 [label="options.Any()", span="37-37", cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_39 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_35 [label="return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="39-40", cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_36 [label="return Enumerable.Empty<Nothing<Error>>();", span="42-42", cluster="lambda expression", file="SpecificationPropertyRules.cs", color=green, community=0];
m11_37 [label="Exit lambda expression", span="34-43", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_43 [label="Entry lambda expression", span="39-40", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_40 [label="sp.Value.IsNothing() && sp.Specification.Required", span="36-36", cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_41 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_44 [label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="39-40", cluster="lambda expression", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_45 [label="Exit lambda expression", span="39-40", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_52 [label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)", span="50-53", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_51 [label="Entry lambda expression", span="48-60", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_53 [label="options.Any()", span="54-54", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_57 [label="Entry lambda expression", span="51-53", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_54 [label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="56-57", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_55 [label="return Enumerable.Empty<Nothing<Error>>();", span="59-59", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_56 [label="Exit lambda expression", span="48-60", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_58 [label="sp.Specification.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min", span="51-53", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_59 [label="Exit lambda expression", span="51-53", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_63 [label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="56-57", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_64 [label="Exit lambda expression", span="56-57", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_29 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs"];
m11_30 [label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Value.IsNothing() && sp.Specification.Required);\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="34-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="SpecificationPropertyRules.cs"];
m11_31 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="32-32", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SpecificationPropertyRules.cs"];
m11_28 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs"];
m11_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SpecificationPropertyRules.cs"];
m11_60 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="SpecificationPropertyRules.cs"];
m11_26 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_18 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="SpecificationPropertyRules.cs"];
m11_27 [label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60", cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SpecificationPropertyRules.cs"];
m11_11 [label="Entry Unk.GroupBy", span="", cluster="Unk.GroupBy", file="SpecificationPropertyRules.cs"];
m11_12 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="SpecificationPropertyRules.cs"];
m12_103 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="Tokenizer.cs"];
m12_16 [label="Entry Unk.nameLookup", span="", cluster="Unk.nameLookup", file="Tokenizer.cs"];
m12_101 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="Tokenizer.cs"];
m12_11 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="Tokenizer.cs"];
m12_80 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Tokenizer.cs"];
m12_102 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Tokenizer.cs"];
m12_34 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Tokenizer.cs"];
m12_12 [label="Entry CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="Tokenizer.cs"];
m12_15 [label="Entry Unk.IsName", span="", cluster="Unk.IsName", file="Tokenizer.cs"];
m12_36 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Tokenizer.cs"];
m12_20 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Tokenizer.cs"];
m12_82 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="Tokenizer.cs"];
m12_54 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="Tokenizer.cs"];
m12_22 [label="errors.Add(e)", span="18-18", cluster="lambda expression", file="Tokenizer.cs"];
m12_21 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Tokenizer.cs"];
m12_23 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Tokenizer.cs"];
m12_41 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="Tokenizer.cs"];
m12_45 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m12_48 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_51 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_55 [label="tokens.Concat(values)", span="43-43", cluster="lambda expression", file="Tokenizer.cs"];
m12_42 [label="arg.EqualsOrdinal(''--'')", span="39-39", cluster="lambda expression", file="Tokenizer.cs"];
m12_43 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="Tokenizer.cs"];
m12_46 [label="!arg.EqualsOrdinal(''--'')", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m12_47 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="Tokenizer.cs"];
m12_49 [label="!arg.EqualsOrdinal(''--'')", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_50 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_52 [label="Token.Value(t)", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_53 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="Tokenizer.cs"];
m12_56 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="Tokenizer.cs"];
m12_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Tokenizer.cs"];
m12_13 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_85 [label="value == null", span="102-102", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_91 [label="yield return Token.Name(text);", span="113-113", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_92 [label="yield break;", span="114-114", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_95 [label="yield break;", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_97 [label="yield return Token.Name(parts[0]);", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_98 [label="yield return Token.Value(parts[1]);", span="123-123", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_87 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="107-107", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_88 [label="var text = value.Substring(2)", span="109-109", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_94 [label="onError(new BadFormatTokenError(value))", span="118-118", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_86 [label="throw new ArgumentNullException(''value'');", span="104-104", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_89 [label="var equalIndex = text.IndexOf('=')", span="110-110", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_96 [label="var parts = text.Split('=')", span="121-121", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_90 [label="equalIndex <= 0", span="111-111", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_93 [label="equalIndex == 1", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_99 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="Tokenizer.cs"];
m12_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs"];
m12_19 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="Tokenizer.cs"];
m12_44 [label="Entry string.EqualsOrdinal(string)", span="34-34", cluster="string.EqualsOrdinal(string)", file="Tokenizer.cs"];
m12_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Tokenizer.cs"];
m12_100 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="Tokenizer.cs"];
m12_39 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Tokenizer.cs"];
m12_40 [label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="69-69", cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="Tokenizer.cs"];
m12_0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_1 [label="arguments == null", span="15-15", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_5 [label="var tokens = from arg in arguments\r\n                         from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                         select token", span="20-26", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs"];
m12_6 [label="var unkTokens = from t in tokens where t.IsName() && !nameLookup(t.Text) select t", span="28-28", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs"];
m12_2 [label="throw new ArgumentNullException(''arguments'');", span="15-15", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_3 [label="var errors = new List<Error>()", span="17-17", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_4 [label="Action<Error> onError = e => errors.Add(e)", span="18-18", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_7 [label="return StatePair.Create(tokens.Except(unkTokens), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="Tokenizer.cs"];
m12_8 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_17 [label="Entry Unk.Except", span="", cluster="Unk.Except", file="Tokenizer.cs"];
m12_25 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_26 [label="arguments == null", span="37-37", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_28 [label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_29 [label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_30 [label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_32 [label="return tokenizer(arguments);", span="45-45", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_27 [label="throw new ArgumentNullException(''arguments'');", span="37-37", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_31 [label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_33 [label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Tokenizer.cs"];
m12_24 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Tokenizer.cs"];
m12_79 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="Tokenizer.cs"];
m12_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Tokenizer.cs"];
m12_18 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="Tokenizer.cs"];
m12_84 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Tokenizer.cs"];
m12_14 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_57 [label="value == null", span="52-52", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_62 [label="yield return Token.Value(value);", span="63-63", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_63 [label="yield break;", span="64-64", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_65 [label="yield return Token.Name(text);", span="69-69", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_66 [label="yield break;", span="70-70", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_68 [label="yield return Token.Name(first);", span="74-74", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_74 [label="yield return Token.Name(n);", span="84-84", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_76 [label="yield return Token.Value(text.Substring(seen.Count()));", span="93-93", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_59 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="57-57", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_60 [label="var text = value.Substring(1)", span="59-59", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_64 [label="value.Length == 2", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_72 [label="!seen.Contains(c) && nameLookup(n)", span="81-81", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_58 [label="throw new ArgumentNullException(''value'');", span="54-54", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_61 [label="char.IsDigit(text[0])", span="61-61", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_67 [label="var first = text.Substring(0, 1)", span="73-73", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_70 [label="text.Substring(1)", span="78-78", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_75 [label="seen.Count() < text.Length", span="91-91", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_69 [label="var seen = new List<char> { first[0] }", span="76-76", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_73 [label="seen.Add(c)", span="83-83", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_71 [label="var n = new string(c, 1)", span="80-80", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_77 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="48-48", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="Tokenizer.cs"];
m12_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Tokenizer.cs"];
m12_83 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="Tokenizer.cs"];
m12_78 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Tokenizer.cs"];
m12_104 [label=errors, span="", file="Tokenizer.cs"];
m12_105 [label=values, span="", file="Tokenizer.cs"];
m13_13 [label="Entry CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="46-46", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_44 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                from t in tseq\r\n                select t;", span="50-57", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_45 [label="Exit CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="46-46", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="10-10", cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="TokenPartitioner.cs"];
m13_68 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TokenPartitioner.cs"];
m13_43 [label="Entry CommandLine.Core.Token.IsName()", span="72-72", cluster="CommandLine.Core.Token.IsName()", file="TokenPartitioner.cs"];
m13_11 [label="Entry CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="37-37", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_36 [label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == DescriptorType.Boolean, false)\r\n                   select t;", span="41-43", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_37 [label="Exit CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="37-37", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_38 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="TokenPartitioner.cs"];
m13_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="TokenPartitioner.cs"];
m13_21 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="TokenPartitioner.cs"];
m13_29 [label="Entry CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="88-88", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs"];
m13_93 [label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="90-90", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs"];
m13_94 [label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="88-88", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TokenPartitioner.cs"];
m13_78 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TokenPartitioner.cs"];
m13_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs"];
m13_90 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_22 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_26 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_30 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_33 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_23 [label="v.IsValue()", span="26-26", cluster="lambda expression", color=green, community=0, file="TokenPartitioner.cs"];
m13_24 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_27 [label="CreateValue(t.Text,''true'')", span="30-30", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_28 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_31 [label="CreateValue(f.Text, s.Text)", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_32 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_34 [label="t.Text", span="33-33", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_35 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_40 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_41 [label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="42-42", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_42 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_47 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="52-55", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_46 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_50 [label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="54-54", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_48 [label="Exit lambda expression", span="51-55", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_49 [label="Entry lambda expression", span="53-54", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_51 [label="Exit lambda expression", span="53-54", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_55 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {}", span="66-71", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_58 [label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { }", span="68-70", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_54 [label="Entry lambda expression", span="65-71", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_66 [label="t.Equals(f)", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_56 [label="Exit lambda expression", span="65-71", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_57 [label="Entry lambda expression", span="67-70", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_59 [label="Exit lambda expression", span="67-70", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_65 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_69 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_72 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_67 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_70 [label="v.IsValue()", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_71 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_73 [label=items, span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_74 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_80 [label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="81-83", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_79 [label="Entry lambda expression", span="80-83", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_85 [label="t.Equals(f)", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_81 [label="Exit lambda expression", span="80-83", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_84 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_87 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_86 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_88 [label="v.IsValue()", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_89 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_91 [label="x.Text", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_92 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="TokenPartitioner.cs"];
m13_0 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_1 [label="var switches = PartitionSwitches(tokens, typeLookup)", span="20-20", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_2 [label="var tokensExceptSwitches = tokens.Except(switches)", span="21-21", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_3 [label="var scalars = PartitionScalars(tokensExceptSwitches, typeLookup)", span="22-22", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_5 [label="var sequences = PartitionSequences(tokensExceptSwitchesAndScalars, typeLookup)", span="24-24", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_9 [label="return Tuple.Create(\r\n                    switches.Select(t => CreateValue(t.Text,''true''))\r\n                        .Concat(scalars.Pairwise((f, s) => CreateValue(f.Text, s.Text)))\r\n                        .Concat(SequenceTokensToKeyValuePairEnumerable(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="29-34", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_4 [label="var tokensExceptSwitchesAndScalars = tokensExceptSwitches.Except(scalars)", span="23-23", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_6 [label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Except(sequences)", span="25-25", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_7 [label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue())", span="26-26", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_8 [label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Except(values)", span="27-27", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=green, community=0, file="TokenPartitioner.cs"];
m13_10 [label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_63 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TokenPartitioner.cs"];
m13_60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs"];
m13_19 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="TokenPartitioner.cs"];
m13_14 [label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="60-60", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_52 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>     \r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {})\r\n                from t in tseq\r\n                select t;", span="64-73", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_53 [label="Exit CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="60-60", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitioner.cs"];
m13_77 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="TokenPartitioner.cs"];
m13_61 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="TokenPartitioner.cs"];
m13_20 [label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="76-76", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs"];
m13_75 [label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="79-85", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs"];
m13_76 [label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="76-76", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs"];
m13_17 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TokenPartitioner.cs"];
m13_83 [label="Entry Unk.CreateValue", span="", cluster="Unk.CreateValue", file="TokenPartitioner.cs"];
m13_16 [label="Entry Unk.Except", span="", cluster="Unk.Except", file="TokenPartitioner.cs"];
m13_25 [label="Entry CommandLine.Core.Token.IsValue()", span="77-77", cluster="CommandLine.Core.Token.IsValue()", file="TokenPartitioner.cs"];
m13_95 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitioner.cs"];
m13_62 [label="Entry CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", file="TokenPartitioner.cs"];
m13_82 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="TokenPartitioner.cs"];
m13_39 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TokenPartitioner.cs"];
m13_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs"];
m13_96 [label=t, span="", file="TokenPartitioner.cs"];
m13_97 [label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span="", file="TokenPartitioner.cs"];
m13_98 [label="CommandLine.Core.Token", span="", file="TokenPartitioner.cs"];
m13_99 [label="CommandLine.Core.Token", span="", file="TokenPartitioner.cs"];
m13_100 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="TokenPartitioner.cs"];
m13_101 [label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span="", file="TokenPartitioner.cs"];
m13_102 [label="CommandLine.Core.Token", span="", file="TokenPartitioner.cs"];
m13_103 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="TokenPartitioner.cs"];
m13_104 [label="CommandLine.Core.Token", span="", file="TokenPartitioner.cs"];
m14_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m14_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m14_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, null, typeof(string), string.Empty, string.Empty),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, null, typeof(IEnumerable<int>), string.Empty, string.Empty)\r\n                }", span="21-25", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs"];
m14_4 [label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m14_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m14_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m14_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs"];
m14_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="TokenPartitionerTests.cs"];
m14_12 [label="Entry Unk.True", span="", cluster="Unk.True", file="TokenPartitionerTests.cs"];
m14_16 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs"];
m14_11 [label="Entry Unk.All", span="", cluster="Unk.All", file="TokenPartitionerTests.cs"];
m14_21 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_14 [label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="30-30", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_13 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_18 [label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_17 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_15 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_19 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_22 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_23 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m14_24 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="TokenPartitionerTests.cs"];
m14_8 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs"];
m14_10 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs"];
m14_25 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs"];
m14_20 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TokenPartitionerTests.cs"];
m14_9 [label="Entry CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs"];
m14_26 [label=specs, span="", file="TokenPartitionerTests.cs"];
m14_27 [label=result, span="", file="TokenPartitionerTests.cs"];
m14_28 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.StringPart"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n3 -> n6  [key=2, style=dotted];
n2 -> n4  [key=0, style=solid];
n4 -> n0  [key=0, style=bold, color=blue];
n5 -> n124  [key=0, style=solid];
n5 -> n125  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n126  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n127  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n129  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n130  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n131  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n134  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n137  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n138  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n139  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n140  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n142  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n143  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n145  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n149  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n152  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n153  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n154  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n159  [key=1, style=dashed, color=darkseagreen4, label=string];
n5 -> n160  [key=1, style=dashed, color=darkseagreen4, label=string];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.StringPart"];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.StringPart"];
n7 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>"];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n0  [key=2, style=dotted];
n12 -> n14  [key=1, style=dashed, color=darkseagreen4, label=label];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n14 -> n18  [key=2, style=dotted];
n9 -> n17  [key=0, style=solid];
n11 -> n17  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n17 -> n7  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.StringPart"];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=string];
n19 -> n23  [key=1, style=dashed, color=darkseagreen4, label=string];
n20 -> n21  [key=0, style=solid];
n20 -> n26  [key=2, style=dotted];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=r];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label=r];
n20 -> n24  [key=1, style=dashed, color=darkseagreen4, label=r];
n21 -> n22  [key=0, style=solid];
n21 -> n0  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n25 -> n19  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>"];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n28 -> n32  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [key=2, style=dotted];
n29 -> n31  [key=0, style=solid];
n31 -> n27  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.InlineTag"];
n34 -> n37  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n34 -> n38  [key=1, style=dashed, color=darkseagreen4, label=string];
n34 -> n39  [key=1, style=dashed, color=darkseagreen4, label=string];
n35 -> n36  [key=0, style=solid];
n35 -> n42  [key=2, style=dotted];
n35 -> n37  [key=1, style=dashed, color=darkseagreen4, label=e];
n35 -> n38  [key=1, style=dashed, color=darkseagreen4, label=e];
n35 -> n39  [key=1, style=dashed, color=darkseagreen4, label=e];
n35 -> n40  [key=1, style=dashed, color=darkseagreen4, label=e];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n41 -> n34  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.InlineTag"];
n43 -> n46  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n44 -> n45  [key=0, style=solid];
n44 -> n42  [key=2, style=dotted];
n44 -> n46  [key=1, style=dashed, color=darkseagreen4, label=e];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label=e];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n48 -> n43  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.InlineTag"];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label=string];
n50 -> n51  [key=0, style=solid];
n50 -> n42  [key=2, style=dotted];
n50 -> n52  [key=1, style=dashed, color=darkseagreen4, label=e];
n50 -> n53  [key=1, style=dashed, color=darkseagreen4, label=e];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n54 -> n49  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.InlineTag"];
n56 -> n57  [key=0, style=solid];
n56 -> n42  [key=2, style=dotted];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=e];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n59 -> n55  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n49  [key=2, style=dotted];
n62 -> n60  [key=0, style=bold, color=blue];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n49  [key=2, style=dotted];
n65 -> n63  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n49  [key=2, style=dotted];
n68 -> n66  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n55  [key=2, style=dotted];
n71 -> n69  [key=0, style=bold, color=blue];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n55  [key=2, style=dotted];
n74 -> n72  [key=0, style=bold, color=blue];
n75 -> n76  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n76 -> n34  [key=2, style=dotted];
n77 -> n75  [key=0, style=bold, color=blue];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n43  [key=2, style=dotted];
n80 -> n78  [key=0, style=bold, color=blue];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n43  [key=2, style=dotted];
n83 -> n81  [key=0, style=bold, color=blue];
n84 -> n85  [key=0, style=solid];
n84 -> n86  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n84 -> n87  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n84 -> n88  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Inline"];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=0, style=solid];
n86 -> n89  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n89 -> n84  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=2, style=dotted];
n91 -> n94  [key=2, style=dotted];
n92 -> n90  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n97 -> n95  [key=0, style=bold, color=blue];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n100 -> n98  [key=0, style=bold, color=blue];
n101 -> n102  [key=0, style=solid];
n101 -> n105  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n101 -> n106  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n101 -> n110  [key=1, style=dashed, color=darkseagreen4, label=int];
n101 -> n111  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n101 -> n118  [key=1, style=dashed, color=darkseagreen4, label=int];
n101 -> n119  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n102 -> n103  [key=0, style=solid];
n102 -> n108  [key=1, style=dashed, color=darkseagreen4, label=buf];
n102 -> n113  [key=1, style=dashed, color=darkseagreen4, label=buf];
n105 -> n106  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=1, style=dashed, color=darkseagreen4, label=i];
n106 -> n111  [key=1, style=dashed, color=darkseagreen4, label=i];
n106 -> n112  [key=1, style=dashed, color=darkseagreen4, label=i];
n106 -> n113  [key=1, style=dashed, color=darkseagreen4, label=i];
n106 -> n117  [key=1, style=dashed, color=darkseagreen4, label=i];
n110 -> n111  [key=0, style=solid];
n110 -> n113  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n118 -> n121  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n107  [key=1, style=dashed, color=darkseagreen4, label=len];
n103 -> n119  [key=1, style=dashed, color=darkseagreen4, label=len];
n103 -> n120  [key=1, style=dashed, color=darkseagreen4, label=len];
n108 -> n109  [key=0, style=solid];
n108 -> n110  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n123  [key=2, style=dotted];
n113 -> n113  [key=1, style=dashed, color=darkseagreen4, label=i];
n113 -> n117  [key=1, style=dashed, color=darkseagreen4, label=i];
n104 -> n105  [key=0, style=solid];
n104 -> n109  [key=1, style=dashed, color=darkseagreen4, label=cc];
n104 -> n110  [key=1, style=dashed, color=darkseagreen4, label=cc];
n104 -> n118  [key=1, style=dashed, color=darkseagreen4, label=cc];
n107 -> n108  [key=0, style=solid];
n107 -> n118  [key=0, style=solid];
n120 -> n122  [key=0, style=solid];
n109 -> n117  [key=0, style=solid];
n109 -> n109  [key=1, style=dashed, color=darkseagreen4, label=cc];
n109 -> n118  [key=1, style=dashed, color=darkseagreen4, label=cc];
n112 -> n122  [key=0, style=solid];
n117 -> n107  [key=0, style=solid];
n117 -> n117  [key=1, style=dashed, color=darkseagreen4, label=i];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=0, style=solid];
n115 -> n122  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n116 -> n118  [key=1, style=dashed, color=darkseagreen4, label=cc];
n121 -> n122  [key=0, style=solid];
n122 -> n101  [key=0, style=bold, color=blue];
n124 -> n125  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n125  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n130  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n131  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n133  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n134  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n139  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n147  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n156  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n159  [key=1, style=dashed, color=darkseagreen4, label=int];
n125 -> n160  [key=1, style=dashed, color=darkseagreen4, label=int];
n126 -> n127  [key=0, style=solid];
n126 -> n130  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n129 -> n126  [key=0, style=solid];
n129 -> n129  [key=1, style=dashed, color=darkseagreen4, label=int];
n129 -> n130  [key=1, style=dashed, color=darkseagreen4, label=int];
n129 -> n134  [key=1, style=dashed, color=darkseagreen4, label=int];
n129 -> n137  [key=1, style=dashed, color=darkseagreen4, label=int];
n129 -> n138  [key=1, style=dashed, color=darkseagreen4, label=int];
n129 -> n159  [key=1, style=dashed, color=darkseagreen4, label=int];
n130 -> n131  [key=0, style=solid];
n130 -> n134  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=1, style=dashed, color=darkseagreen4, label=pos];
n138 -> n139  [key=0, style=solid];
n138 -> n143  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n138 -> n153  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n138 -> n160  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n139 -> n140  [key=0, style=solid];
n139 -> n158  [key=0, style=solid];
n139 -> n163  [key=2, style=dotted];
n139 -> n139  [key=1, style=dashed, color=darkseagreen4, label=pos];
n139 -> n143  [key=1, style=dashed, color=darkseagreen4, label=pos];
n139 -> n145  [key=1, style=dashed, color=darkseagreen4, label=pos];
n139 -> n149  [key=1, style=dashed, color=darkseagreen4, label=pos];
n140 -> n141  [key=0, style=solid];
n140 -> n149  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n164  [key=2, style=dotted];
n142 -> n144  [key=1, style=dashed, color=darkseagreen4, label=sb];
n142 -> n158  [key=1, style=dashed, color=darkseagreen4, label=sb];
n142 -> n160  [key=1, style=dashed, color=darkseagreen4, label=sb];
n142 -> n161  [key=1, style=dashed, color=darkseagreen4, label=sb];
n143 -> n144  [key=0, style=solid];
n143 -> n165  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n145  [key=1, style=dashed, color=darkseagreen4, label=pos];
n145 -> n147  [key=1, style=dashed, color=darkseagreen4, label=pos];
n145 -> n148  [key=1, style=dashed, color=darkseagreen4, label=pos];
n149 -> n150  [key=0, style=solid];
n149 -> n149  [key=1, style=dashed, color=darkseagreen4, label=pos];
n149 -> n153  [key=1, style=dashed, color=darkseagreen4, label=pos];
n149 -> n154  [key=1, style=dashed, color=darkseagreen4, label=pos];
n152 -> n153  [key=0, style=solid];
n152 -> n164  [key=2, style=dotted];
n152 -> n158  [key=1, style=dashed, color=darkseagreen4, label=sb];
n152 -> n160  [key=1, style=dashed, color=darkseagreen4, label=sb];
n152 -> n161  [key=1, style=dashed, color=darkseagreen4, label=sb];
n153 -> n154  [key=0, style=solid];
n153 -> n165  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n154  [key=1, style=dashed, color=darkseagreen4, label=pos];
n154 -> n156  [key=1, style=dashed, color=darkseagreen4, label=pos];
n154 -> n157  [key=1, style=dashed, color=darkseagreen4, label=pos];
n159 -> n162  [key=0, style=solid];
n159 -> n167  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n165  [key=2, style=dotted];
n133 -> n130  [key=0, style=solid];
n133 -> n133  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n134  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n139  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n147  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n156  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n159  [key=1, style=dashed, color=darkseagreen4, label=int];
n133 -> n160  [key=1, style=dashed, color=darkseagreen4, label=int];
n147 -> n144  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n156 -> n153  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=0, style=solid];
n135 -> n162  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n141  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n143  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n144  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n151  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n153  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n158  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n160  [key=1, style=dashed, color=darkseagreen4, label=sb];
n136 -> n161  [key=1, style=dashed, color=darkseagreen4, label=sb];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n144 -> n166  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n168  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n148  [key=0, style=solid];
n148 -> n139  [key=0, style=solid];
n148 -> n160  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n150 -> n151  [key=0, style=solid];
n150 -> n139  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n157 -> n139  [key=0, style=solid];
n157 -> n160  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n162 -> n5  [key=0, style=bold, color=blue];
n169 -> n170  [key=0, style=solid];
n169 -> n171  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n172  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n174  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n175  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n176  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n178  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n169 -> n180  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n170 -> n171  [key=0, style=solid];
n170 -> n173  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n170 -> n176  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n170 -> n179  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n170 -> n180  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n171 -> n172  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n172 -> n175  [key=0, style=solid];
n174 -> n172  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n175 -> n178  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n175 -> n180  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n176 -> n177  [key=0, style=solid];
n176 -> n101  [key=2, style=dotted];
n176 -> n180  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n178 -> n179  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n180 -> n5  [key=2, style=dotted];
n180 -> n63  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n173 -> n173  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n173 -> n176  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n173 -> n179  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n173 -> n180  [key=1, style=dashed, color=darkseagreen4, label=ticklength];
n179 -> n181  [key=0, style=solid];
n179 -> n182  [key=2, style=dotted];
n179 -> n60  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n177 -> n180  [key=0, style=solid];
n181 -> n169  [key=0, style=bold, color=blue];
n183 -> n184  [key=0, style=solid];
n183 -> n186  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n187  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n188  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n189  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n191  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n196  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n183 -> n199  [key=1, style=dashed, color=darkseagreen4, label=char];
n184 -> n185  [key=0, style=solid];
n184 -> n189  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n184 -> n190  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n184 -> n191  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n184 -> n192  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n184 -> n195  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n184 -> n202  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n186 -> n187  [key=0, style=solid];
n186 -> n188  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n186 -> n189  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n186 -> n191  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n187 -> n188  [key=0, style=solid];
n187 -> n189  [key=1, style=dashed, color=darkseagreen4, label=len];
n187 -> n196  [key=1, style=dashed, color=darkseagreen4, label=len];
n188 -> n189  [key=0, style=solid];
n188 -> n198  [key=1, style=dashed, color=darkseagreen4, label=char_before];
n188 -> n200  [key=1, style=dashed, color=darkseagreen4, label=char_before];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n191 -> n191  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n191 -> n196  [key=1, style=dashed, color=darkseagreen4, label=startpos];
n196 -> n197  [key=0, style=solid];
n196 -> n201  [key=1, style=dashed, color=darkseagreen4, label=char_after];
n199 -> n200  [key=0, style=solid];
n199 -> n202  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n190 -> n189  [key=0, style=solid];
n190 -> n190  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n190 -> n191  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n190 -> n192  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n190 -> n195  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n190 -> n202  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n192 -> n193  [key=0, style=solid];
n192 -> n196  [key=0, style=solid];
n195 -> n203  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n198 -> n201  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n198 -> n203  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n200 -> n201  [key=0, style=solid];
n200 -> n204  [key=2, style=dotted];
n200 -> n200  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n200 -> n203  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n197 -> n198  [key=0, style=solid];
n197 -> n200  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n197 -> n203  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n201 -> n202  [key=0, style=solid];
n201 -> n204  [key=2, style=dotted];
n201 -> n201  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n201 -> n203  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n203 -> n183  [key=0, style=bold, color=blue];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n208  [key=1, style=dashed, color=darkseagreen4, label=int];
n205 -> n209  [key=1, style=dashed, color=darkseagreen4, label=int];
n205 -> n210  [key=1, style=dashed, color=darkseagreen4, label=int];
n205 -> n212  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n215  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n217  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n218  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n219  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n222  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n223  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n205 -> n224  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n205 -> n225  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n226  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n227  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n205 -> n230  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n205 -> n231  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n206 -> n207  [key=0, style=solid];
n207 -> n208  [key=0, style=solid];
n207 -> n209  [key=1, style=dashed, color=darkseagreen4, label=openerDelims];
n207 -> n211  [key=1, style=dashed, color=darkseagreen4, label=openerDelims];
n208 -> n209  [key=0, style=solid];
n208 -> n210  [key=0, style=solid];
n209 -> n211  [key=0, style=solid];
n209 -> n213  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n209 -> n226  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n209 -> n228  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n209 -> n232  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n210 -> n211  [key=0, style=solid];
n210 -> n213  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n210 -> n226  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n210 -> n228  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n210 -> n232  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=1, style=dashed, color=darkseagreen4, label=inl];
n212 -> n216  [key=1, style=dashed, color=darkseagreen4, label=inl];
n212 -> n217  [key=1, style=dashed, color=darkseagreen4, label=inl];
n212 -> n220  [key=1, style=dashed, color=darkseagreen4, label=inl];
n212 -> n221  [key=1, style=dashed, color=darkseagreen4, label=inl];
n212 -> n224  [key=1, style=dashed, color=darkseagreen4, label=inl];
n215 -> n216  [key=0, style=solid];
n215 -> n220  [key=0, style=solid];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n219 -> n222  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n234  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n223 -> n232  [key=0, style=solid];
n224 -> n232  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n227  [key=1, style=dashed, color=darkseagreen4, label=inl];
n225 -> n228  [key=1, style=dashed, color=darkseagreen4, label=inl];
n225 -> n229  [key=1, style=dashed, color=darkseagreen4, label=inl];
n226 -> n227  [key=0, style=solid];
n227 -> n228  [key=0, style=solid];
n227 -> n167  [key=2, style=dotted];
n230 -> n231  [key=0, style=solid];
n230 -> n232  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n211 -> n225  [key=0, style=solid];
n213 -> n214  [key=0, style=solid];
n228 -> n229  [key=0, style=solid];
n228 -> n78  [key=2, style=dotted];
n228 -> n81  [key=2, style=dotted];
n228 -> n231  [key=1, style=dashed, color=darkseagreen4, label=emph];
n232 -> n233  [key=0, style=solid];
n214 -> n215  [key=0, style=solid];
n216 -> n217  [key=0, style=solid];
n220 -> n221  [key=0, style=solid];
n221 -> n222  [key=0, style=solid];
n229 -> n230  [key=0, style=solid];
n233 -> n205  [key=0, style=bold, color=blue];
n235 -> n236  [key=0, style=solid];
n235 -> n237  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n239  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n241  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n243  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n245  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n247  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n235 -> n251  [key=1, style=dashed, color=darkseagreen4, label=char];
n235 -> n255  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n236 -> n237  [key=0, style=solid];
n237 -> n238  [key=0, style=solid];
n237 -> n183  [key=2, style=dotted];
n237 -> n241  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n242  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n243  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n244  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n247  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n248  [key=1, style=dashed, color=darkseagreen4, label=can_open];
n237 -> n250  [key=1, style=dashed, color=darkseagreen4, label=numdelims];
n237 -> n254  [key=1, style=dashed, color=darkseagreen4, label=can_open];
n239 -> n240  [key=0, style=solid];
n239 -> n258  [key=2, style=dotted];
n239 -> n241  [key=1, style=dashed, color=darkseagreen4, label=istack];
n239 -> n248  [key=1, style=dashed, color=darkseagreen4, label=can_close];
n239 -> n254  [key=1, style=dashed, color=darkseagreen4, label=can_close];
n241 -> n242  [key=0, style=solid];
n241 -> n205  [key=2, style=dotted];
n241 -> n243  [key=1, style=dashed, color=darkseagreen4, label=useDelims];
n243 -> n244  [key=0, style=solid];
n245 -> n257  [key=0, style=solid];
n245 -> n235  [key=2, style=dotted];
n247 -> n248  [key=0, style=solid];
n247 -> n167  [key=2, style=dotted];
n247 -> n60  [key=2, style=dotted];
n247 -> n252  [key=1, style=dashed, color=darkseagreen4, label=inlText];
n247 -> n256  [key=1, style=dashed, color=darkseagreen4, label=inlText];
n251 -> n252  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n260  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n247  [key=0, style=solid];
n242 -> n243  [key=0, style=solid];
n242 -> n246  [key=0, style=solid];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n248 -> n256  [key=0, style=solid];
n250 -> n251  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n240 -> n241  [key=0, style=solid];
n240 -> n247  [key=0, style=solid];
n246 -> n257  [key=0, style=solid];
n252 -> n253  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n249 -> n259  [key=2, style=dotted];
n249 -> n251  [key=1, style=dashed, color=darkseagreen4, label=istack];
n249 -> n252  [key=1, style=dashed, color=darkseagreen4, label=istack];
n249 -> n253  [key=1, style=dashed, color=darkseagreen4, label=istack];
n249 -> n254  [key=1, style=dashed, color=darkseagreen4, label=istack];
n249 -> n255  [key=1, style=dashed, color=darkseagreen4, label=istack];
n253 -> n254  [key=0, style=solid];
n257 -> n235  [key=0, style=bold, color=blue];
n261 -> n262  [key=0, style=solid];
n261 -> n263  [key=1, style=dashed, color=darkseagreen4, label=bool];
n261 -> n267  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n261 -> n269  [key=1, style=dashed, color=darkseagreen4, label=bool];
n261 -> n270  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n262 -> n263  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n263 -> n60  [key=2, style=dotted];
n263 -> n266  [key=1, style=dashed, color=darkseagreen4, label=inlText];
n263 -> n271  [key=1, style=dashed, color=darkseagreen4, label=inlText];
n267 -> n268  [key=0, style=solid];
n269 -> n270  [key=0, style=solid];
n270 -> n271  [key=0, style=solid];
n270 -> n260  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n259  [key=2, style=dotted];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=istack];
n264 -> n267  [key=1, style=dashed, color=darkseagreen4, label=istack];
n264 -> n268  [key=1, style=dashed, color=darkseagreen4, label=istack];
n264 -> n269  [key=1, style=dashed, color=darkseagreen4, label=istack];
n264 -> n270  [key=1, style=dashed, color=darkseagreen4, label=istack];
n266 -> n267  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n265 -> n266  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n272 -> n261  [key=0, style=bold, color=blue];
n273 -> n274  [key=0, style=solid];
n273 -> n275  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n276  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n280  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Reference"];
n273 -> n281  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Syntax.Reference"];
n273 -> n282  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n285  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n288  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n289  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n273 -> n290  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n273 -> n291  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n292  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.InlineStack"];
n273 -> n293  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n273 -> n295  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n273 -> n296  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n274 -> n275  [key=0, style=solid];
n274 -> n291  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n277  [key=1, style=dashed, color=darkseagreen4, label=inl];
n275 -> n278  [key=1, style=dashed, color=darkseagreen4, label=inl];
n275 -> n279  [key=1, style=dashed, color=darkseagreen4, label=inl];
n275 -> n280  [key=1, style=dashed, color=darkseagreen4, label=inl];
n275 -> n281  [key=1, style=dashed, color=darkseagreen4, label=inl];
n275 -> n290  [key=1, style=dashed, color=darkseagreen4, label=inl];
n276 -> n277  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n282 -> n283  [key=0, style=solid];
n282 -> n284  [key=1, style=dashed, color=darkseagreen4, label=temp];
n282 -> n285  [key=1, style=dashed, color=darkseagreen4, label=temp];
n282 -> n286  [key=1, style=dashed, color=darkseagreen4, label=temp];
n285 -> n286  [key=0, style=solid];
n285 -> n287  [key=0, style=solid];
n288 -> n289  [key=0, style=solid];
n288 -> n234  [key=2, style=dotted];
n289 -> n290  [key=0, style=solid];
n289 -> n297  [key=0, style=solid];
n290 -> n297  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n291 -> n234  [key=2, style=dotted];
n292 -> n293  [key=0, style=solid];
n292 -> n294  [key=0, style=solid];
n293 -> n297  [key=0, style=solid];
n293 -> n234  [key=2, style=dotted];
n295 -> n296  [key=0, style=solid];
n296 -> n297  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n278 -> n279  [key=0, style=solid];
n279 -> n280  [key=0, style=solid];
n283 -> n284  [key=0, style=solid];
n283 -> n288  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n284 -> n287  [key=1, style=dashed, color=darkseagreen4, label=xtemp];
n286 -> n287  [key=0, style=solid];
n286 -> n234  [key=2, style=dotted];
n287 -> n283  [key=0, style=solid];
n297 -> n273  [key=0, style=bold, color=blue];
n294 -> n295  [key=0, style=solid];
n294 -> n60  [key=2, style=dotted];
n294 -> n296  [key=1, style=dashed, color=darkseagreen4, label=inl];
n298 -> n299  [key=0, style=solid];
n298 -> n301  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n298 -> n303  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n298 -> n304  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n298 -> n307  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n298 -> n308  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n298 -> n311  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n299 -> n300  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n301 -> n258  [key=2, style=dotted];
n301 -> n306  [key=1, style=dashed, color=darkseagreen4, label=istack];
n301 -> n311  [key=1, style=dashed, color=darkseagreen4, label=istack];
n301 -> n314  [key=1, style=dashed, color=darkseagreen4, label=can_close];
n303 -> n304  [key=0, style=solid];
n303 -> n307  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n304 -> n305  [key=0, style=solid];
n304 -> n318  [key=2, style=dotted];
n304 -> n309  [key=1, style=dashed, color=darkseagreen4, label=details];
n304 -> n311  [key=1, style=dashed, color=darkseagreen4, label=details];
n307 -> n308  [key=0, style=solid];
n307 -> n319  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n7  [key=2, style=dotted];
n308 -> n311  [key=1, style=dashed, color=darkseagreen4, label=details];
n311 -> n312  [key=0, style=solid];
n311 -> n273  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n302 -> n303  [key=0, style=solid];
n302 -> n313  [key=0, style=solid];
n306 -> n307  [key=0, style=solid];
n314 -> n315  [key=0, style=solid];
n314 -> n316  [key=0, style=solid];
n313 -> n314  [key=0, style=solid];
n313 -> n60  [key=2, style=dotted];
n313 -> n316  [key=1, style=dashed, color=darkseagreen4, label=inlText];
n305 -> n306  [key=0, style=solid];
n305 -> n309  [key=0, style=solid];
n318 -> n474  [key=0, style=solid];
n318 -> n478  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n479  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n480  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n481  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n483  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n484  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n485  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n486  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n487  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n488  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n490  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n494  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n498  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n501  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n318 -> n503  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n309 -> n310  [key=0, style=solid];
n309 -> n311  [key=0, style=solid];
n310 -> n311  [key=0, style=solid];
n312 -> n317  [key=0, style=solid];
n316 -> n317  [key=0, style=solid];
n315 -> n317  [key=0, style=solid];
n315 -> n320  [key=2, style=dotted];
n317 -> n298  [key=0, style=bold, color=blue];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n321 -> n325  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n321 -> n327  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n321 -> n330  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n322 -> n323  [key=0, style=solid];
n322 -> n98  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n325  [key=0, style=solid];
n325 -> n326  [key=0, style=solid];
n325 -> n328  [key=1, style=dashed, color=darkseagreen4, label=nextChar];
n325 -> n329  [key=1, style=dashed, color=darkseagreen4, label=nextChar];
n327 -> n328  [key=0, style=solid];
n327 -> n98  [key=2, style=dotted];
n330 -> n331  [key=0, style=solid];
n330 -> n98  [key=2, style=dotted];
n324 -> n333  [key=0, style=solid];
n324 -> n60  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n329  [key=0, style=solid];
n326 -> n334  [key=2, style=dotted];
n328 -> n333  [key=0, style=solid];
n328 -> n335  [key=2, style=dotted];
n328 -> n60  [key=2, style=dotted];
n329 -> n330  [key=0, style=solid];
n329 -> n332  [key=0, style=solid];
n332 -> n333  [key=0, style=solid];
n332 -> n60  [key=2, style=dotted];
n331 -> n333  [key=0, style=solid];
n331 -> n69  [key=2, style=dotted];
n333 -> n321  [key=0, style=bold, color=blue];
n336 -> n337  [key=0, style=solid];
n336 -> n340  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n336 -> n342  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n336 -> n352  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n336 -> n353  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n337 -> n338  [key=0, style=solid];
n340 -> n341  [key=0, style=solid];
n340 -> n356  [key=2, style=dotted];
n340 -> n342  [key=1, style=dashed, color=darkseagreen4, label=match];
n340 -> n343  [key=1, style=dashed, color=darkseagreen4, label=namedEntity];
n340 -> n344  [key=1, style=dashed, color=darkseagreen4, label=namedEntity];
n340 -> n347  [key=1, style=dashed, color=darkseagreen4, label=numericEntity];
n340 -> n348  [key=1, style=dashed, color=darkseagreen4, label=numericEntity];
n340 -> n352  [key=1, style=dashed, color=darkseagreen4, label=match];
n342 -> n343  [key=0, style=solid];
n352 -> n355  [key=0, style=solid];
n352 -> n167  [key=2, style=dotted];
n352 -> n60  [key=2, style=dotted];
n353 -> n354  [key=0, style=solid];
n353 -> n98  [key=2, style=dotted];
n338 -> n339  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n341 -> n342  [key=0, style=solid];
n341 -> n353  [key=0, style=solid];
n343 -> n344  [key=0, style=solid];
n343 -> n347  [key=0, style=solid];
n344 -> n345  [key=0, style=solid];
n344 -> n357  [key=2, style=dotted];
n344 -> n346  [key=1, style=dashed, color=darkseagreen4, label=decoded];
n347 -> n348  [key=0, style=solid];
n347 -> n352  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n358  [key=2, style=dotted];
n348 -> n350  [key=1, style=dashed, color=darkseagreen4, label=decoded];
n345 -> n346  [key=0, style=solid];
n345 -> n352  [key=0, style=solid];
n346 -> n355  [key=0, style=solid];
n346 -> n60  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n351  [key=0, style=solid];
n350 -> n355  [key=0, style=solid];
n350 -> n60  [key=2, style=dotted];
n351 -> n355  [key=0, style=solid];
n351 -> n60  [key=2, style=dotted];
n354 -> n355  [key=0, style=solid];
n354 -> n60  [key=2, style=dotted];
n355 -> n336  [key=0, style=bold, color=blue];
n359 -> n360  [key=0, style=solid];
n359 -> n364  [key=1, style=dashed, color=darkseagreen4, label=string];
n360 -> n361  [key=0, style=solid];
n360 -> n373  [key=1, style=dashed, color=darkseagreen4, label=result];
n360 -> n374  [key=1, style=dashed, color=darkseagreen4, label=result];
n364 -> n365  [key=0, style=solid];
n364 -> n90  [key=2, style=dotted];
n364 -> n367  [key=1, style=dashed, color=darkseagreen4, label=subj];
n364 -> n368  [key=1, style=dashed, color=darkseagreen4, label=subj];
n364 -> n370  [key=1, style=dashed, color=darkseagreen4, label=subj];
n364 -> n371  [key=1, style=dashed, color=darkseagreen4, label=subj];
n364 -> n372  [key=1, style=dashed, color=darkseagreen4, label=subj];
n361 -> n362  [key=0, style=solid];
n373 -> n365  [key=0, style=solid];
n373 -> n84  [key=2, style=dotted];
n373 -> n373  [key=1, style=dashed, color=darkseagreen4, label=result];
n373 -> n374  [key=1, style=dashed, color=darkseagreen4, label=result];
n374 -> n375  [key=0, style=solid];
n362 -> n363  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n365 -> n366  [key=0, style=solid];
n365 -> n374  [key=0, style=solid];
n365 -> n95  [key=2, style=dotted];
n367 -> n373  [key=0, style=solid];
n367 -> n336  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n368 -> n123  [key=2, style=dotted];
n368 -> n371  [key=1, style=dashed, color=darkseagreen4, label=searchpos];
n368 -> n372  [key=1, style=dashed, color=darkseagreen4, label=searchpos];
n370 -> n371  [key=0, style=solid];
n370 -> n372  [key=1, style=dashed, color=darkseagreen4, label=searchpos];
n371 -> n372  [key=0, style=solid];
n371 -> n167  [key=2, style=dotted];
n371 -> n60  [key=2, style=dotted];
n371 -> n373  [key=1, style=dashed, color=darkseagreen4, label=inew];
n372 -> n373  [key=0, style=solid];
n366 -> n367  [key=0, style=solid];
n366 -> n368  [key=0, style=solid];
n369 -> n370  [key=0, style=solid];
n369 -> n371  [key=0, style=solid];
n375 -> n359  [key=0, style=bold, color=blue];
n376 -> n377  [key=0, style=solid];
n376 -> n383  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n384  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n387  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n388  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n391  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n392  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n397  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n405  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n406  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n413  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n414  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n417  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n418  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n422  [key=1, style=dashed, color=darkseagreen4, label=string];
n376 -> n423  [key=1, style=dashed, color=darkseagreen4, label=string];
n377 -> n378  [key=0, style=solid];
n377 -> n383  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n383 -> n384  [key=0, style=solid];
n383 -> n421  [key=0, style=solid];
n383 -> n426  [key=2, style=dotted];
n383 -> n383  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n383 -> n386  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n383 -> n397  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n383 -> n399  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n383 -> n400  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n384 -> n385  [key=0, style=solid];
n384 -> n394  [key=1, style=dashed, color=darkseagreen4, label=c];
n387 -> n388  [key=0, style=solid];
n387 -> n421  [key=0, style=solid];
n388 -> n389  [key=0, style=solid];
n391 -> n392  [key=0, style=solid];
n391 -> n164  [key=2, style=dotted];
n391 -> n421  [key=1, style=dashed, color=darkseagreen4, label=sb];
n391 -> n423  [key=1, style=dashed, color=darkseagreen4, label=sb];
n391 -> n424  [key=1, style=dashed, color=darkseagreen4, label=sb];
n392 -> n393  [key=0, style=solid];
n392 -> n165  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n356  [key=2, style=dotted];
n397 -> n400  [key=1, style=dashed, color=darkseagreen4, label=match];
n397 -> n401  [key=1, style=dashed, color=darkseagreen4, label=namedEntity];
n397 -> n402  [key=1, style=dashed, color=darkseagreen4, label=namedEntity];
n397 -> n406  [key=1, style=dashed, color=darkseagreen4, label=match];
n397 -> n409  [key=1, style=dashed, color=darkseagreen4, label=numericEntity];
n397 -> n410  [key=1, style=dashed, color=darkseagreen4, label=numericEntity];
n397 -> n414  [key=1, style=dashed, color=darkseagreen4, label=match];
n397 -> n418  [key=1, style=dashed, color=darkseagreen4, label=match];
n405 -> n406  [key=0, style=solid];
n405 -> n164  [key=2, style=dotted];
n405 -> n407  [key=1, style=dashed, color=darkseagreen4, label=sb];
n405 -> n421  [key=1, style=dashed, color=darkseagreen4, label=sb];
n405 -> n423  [key=1, style=dashed, color=darkseagreen4, label=sb];
n405 -> n424  [key=1, style=dashed, color=darkseagreen4, label=sb];
n406 -> n407  [key=0, style=solid];
n406 -> n165  [key=2, style=dotted];
n413 -> n414  [key=0, style=solid];
n413 -> n164  [key=2, style=dotted];
n413 -> n415  [key=1, style=dashed, color=darkseagreen4, label=sb];
n413 -> n421  [key=1, style=dashed, color=darkseagreen4, label=sb];
n413 -> n423  [key=1, style=dashed, color=darkseagreen4, label=sb];
n413 -> n424  [key=1, style=dashed, color=darkseagreen4, label=sb];
n414 -> n415  [key=0, style=solid];
n414 -> n165  [key=2, style=dotted];
n417 -> n418  [key=0, style=solid];
n417 -> n164  [key=2, style=dotted];
n417 -> n419  [key=1, style=dashed, color=darkseagreen4, label=sb];
n417 -> n421  [key=1, style=dashed, color=darkseagreen4, label=sb];
n417 -> n423  [key=1, style=dashed, color=darkseagreen4, label=sb];
n417 -> n424  [key=1, style=dashed, color=darkseagreen4, label=sb];
n418 -> n419  [key=0, style=solid];
n418 -> n165  [key=2, style=dotted];
n422 -> n425  [key=0, style=solid];
n423 -> n424  [key=0, style=solid];
n423 -> n165  [key=2, style=dotted];
n378 -> n379  [key=0, style=solid];
n378 -> n392  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n378 -> n406  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n378 -> n414  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n378 -> n418  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n378 -> n423  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n379 -> n380  [key=0, style=solid];
n380 -> n381  [key=0, style=solid];
n381 -> n382  [key=0, style=solid];
n381 -> n383  [key=1, style=dashed, color=darkseagreen4, label=search];
n382 -> n383  [key=0, style=solid];
n382 -> n390  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n392  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n404  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n406  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n407  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n412  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n414  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n415  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n416  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n418  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n419  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n421  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n423  [key=1, style=dashed, color=darkseagreen4, label=sb];
n382 -> n424  [key=1, style=dashed, color=darkseagreen4, label=sb];
n390 -> n391  [key=0, style=solid];
n390 -> n392  [key=0, style=solid];
n404 -> n405  [key=0, style=solid];
n404 -> n406  [key=0, style=solid];
n407 -> n408  [key=0, style=solid];
n407 -> n427  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n414  [key=0, style=solid];
n415 -> n420  [key=0, style=solid];
n415 -> n427  [key=2, style=dotted];
n416 -> n417  [key=0, style=solid];
n416 -> n418  [key=0, style=solid];
n419 -> n420  [key=0, style=solid];
n419 -> n166  [key=2, style=dotted];
n421 -> n422  [key=0, style=solid];
n421 -> n423  [key=0, style=solid];
n424 -> n425  [key=0, style=solid];
n424 -> n168  [key=2, style=dotted];
n386 -> n387  [key=0, style=solid];
n386 -> n386  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n386 -> n388  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n386 -> n392  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n386 -> n393  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n399 -> n383  [key=0, style=solid];
n399 -> n399  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n401  [key=0, style=solid];
n400 -> n400  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n406  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n408  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n414  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n418  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n400 -> n420  [key=1, style=dashed, color=darkseagreen4, label=searchPos];
n385 -> n386  [key=0, style=solid];
n385 -> n394  [key=0, style=solid];
n394 -> n395  [key=0, style=solid];
n394 -> n383  [key=0, style=solid];
n393 -> n383  [key=0, style=solid];
n393 -> n423  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n389 -> n390  [key=0, style=solid];
n389 -> n383  [key=0, style=solid];
n389 -> n334  [key=2, style=dotted];
n395 -> n396  [key=0, style=solid];
n396 -> n397  [key=0, style=solid];
n398 -> n399  [key=0, style=solid];
n398 -> n400  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n409  [key=0, style=solid];
n402 -> n403  [key=0, style=solid];
n402 -> n357  [key=2, style=dotted];
n402 -> n407  [key=1, style=dashed, color=darkseagreen4, label=decoded];
n409 -> n410  [key=0, style=solid];
n409 -> n383  [key=0, style=solid];
n410 -> n411  [key=0, style=solid];
n410 -> n358  [key=2, style=dotted];
n410 -> n415  [key=1, style=dashed, color=darkseagreen4, label=decoded];
n408 -> n383  [key=0, style=solid];
n408 -> n423  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n420 -> n383  [key=0, style=solid];
n420 -> n423  [key=1, style=dashed, color=darkseagreen4, label=lastPos];
n403 -> n404  [key=0, style=solid];
n403 -> n383  [key=0, style=solid];
n411 -> n412  [key=0, style=solid];
n411 -> n416  [key=0, style=solid];
n425 -> n376  [key=0, style=bold, color=blue];
n428 -> n429  [key=0, style=solid];
n428 -> n430  [key=1, style=dashed, color=darkseagreen4, label=string];
n428 -> n431  [key=1, style=dashed, color=darkseagreen4, label=string];
n429 -> n430  [key=0, style=solid];
n429 -> n431  [key=0, style=solid];
n430 -> n435  [key=0, style=solid];
n431 -> n432  [key=0, style=solid];
n431 -> n436  [key=2, style=dotted];
n431 -> n431  [key=1, style=dashed, color=darkseagreen4, label=string];
n431 -> n433  [key=1, style=dashed, color=darkseagreen4, label=string];
n431 -> n434  [key=1, style=dashed, color=darkseagreen4, label=string];
n432 -> n433  [key=0, style=solid];
n432 -> n434  [key=0, style=solid];
n433 -> n434  [key=0, style=solid];
n433 -> n167  [key=2, style=dotted];
n433 -> n433  [key=1, style=dashed, color=darkseagreen4, label=string];
n434 -> n435  [key=0, style=solid];
n434 -> n376  [key=2, style=dotted];
n435 -> n428  [key=0, style=bold, color=blue];
n437 -> n438  [key=0, style=solid];
n437 -> n440  [key=1, style=dashed, color=darkseagreen4, label=string];
n437 -> n441  [key=1, style=dashed, color=darkseagreen4, label=string];
n437 -> n442  [key=1, style=dashed, color=darkseagreen4, label=string];
n437 -> n444  [key=1, style=dashed, color=darkseagreen4, label=string];
n437 -> n445  [key=1, style=dashed, color=darkseagreen4, label=string];
n438 -> n439  [key=0, style=solid];
n438 -> n442  [key=1, style=dashed, color=darkseagreen4, label=titlelength];
n438 -> n444  [key=1, style=dashed, color=darkseagreen4, label=titlelength];
n440 -> n446  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n441 -> n443  [key=1, style=dashed, color=darkseagreen4, label=a];
n442 -> n443  [key=0, style=solid];
n444 -> n445  [key=0, style=solid];
n444 -> n167  [key=2, style=dotted];
n444 -> n444  [key=1, style=dashed, color=darkseagreen4, label=string];
n445 -> n446  [key=0, style=solid];
n445 -> n376  [key=2, style=dotted];
n439 -> n440  [key=0, style=solid];
n439 -> n441  [key=0, style=solid];
n443 -> n444  [key=0, style=solid];
n443 -> n445  [key=0, style=solid];
n446 -> n437  [key=0, style=bold, color=blue];
n447 -> n448  [key=0, style=solid];
n447 -> n451  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n452  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n454  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n455  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n458  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n460  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n461  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n464  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n466  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n447 -> n467  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n448 -> n449  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n98  [key=2, style=dotted];
n452 -> n453  [key=0, style=solid];
n452 -> n471  [key=2, style=dotted];
n452 -> n454  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n452 -> n455  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n454 -> n455  [key=0, style=solid];
n454 -> n167  [key=2, style=dotted];
n454 -> n456  [key=1, style=dashed, color=darkseagreen4, label=contents];
n455 -> n456  [key=0, style=solid];
n458 -> n459  [key=0, style=solid];
n458 -> n472  [key=2, style=dotted];
n458 -> n460  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n458 -> n461  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n460 -> n461  [key=0, style=solid];
n460 -> n167  [key=2, style=dotted];
n460 -> n462  [key=1, style=dashed, color=darkseagreen4, label=contents];
n461 -> n462  [key=0, style=solid];
n464 -> n465  [key=0, style=solid];
n464 -> n473  [key=2, style=dotted];
n464 -> n466  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n464 -> n467  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n466 -> n467  [key=0, style=solid];
n466 -> n167  [key=2, style=dotted];
n466 -> n468  [key=1, style=dashed, color=darkseagreen4, label=contents];
n467 -> n468  [key=0, style=solid];
n449 -> n450  [key=0, style=solid];
n450 -> n451  [key=0, style=solid];
n453 -> n454  [key=0, style=solid];
n453 -> n458  [key=0, style=solid];
n456 -> n457  [key=0, style=solid];
n456 -> n359  [key=2, style=dotted];
n456 -> n75  [key=2, style=dotted];
n457 -> n470  [key=0, style=solid];
n459 -> n460  [key=0, style=solid];
n459 -> n464  [key=0, style=solid];
n462 -> n463  [key=0, style=solid];
n462 -> n359  [key=2, style=dotted];
n462 -> n75  [key=2, style=dotted];
n463 -> n470  [key=0, style=solid];
n465 -> n466  [key=0, style=solid];
n465 -> n469  [key=0, style=solid];
n469 -> n470  [key=0, style=solid];
n469 -> n60  [key=2, style=dotted];
n468 -> n470  [key=0, style=solid];
n468 -> n66  [key=2, style=dotted];
n470 -> n447  [key=0, style=bold, color=blue];
n474 -> n475  [key=0, style=solid];
n478 -> n479  [key=0, style=solid];
n478 -> n501  [key=1, style=dashed, color=darkseagreen4, label=endlabel];
n478 -> n503  [key=1, style=dashed, color=darkseagreen4, label=endlabel];
n479 -> n480  [key=0, style=solid];
n479 -> n95  [key=2, style=dotted];
n479 -> n493  [key=1, style=dashed, color=darkseagreen4, label=c];
n480 -> n481  [key=0, style=solid];
n480 -> n493  [key=0, style=solid];
n480 -> n506  [key=2, style=dotted];
n480 -> n507  [key=2, style=dotted];
n480 -> n480  [key=1, style=dashed, color=darkseagreen4, label=sps];
n480 -> n482  [key=1, style=dashed, color=darkseagreen4, label=n];
n481 -> n482  [key=0, style=solid];
n481 -> n488  [key=1, style=dashed, color=darkseagreen4, label=starturl];
n483 -> n484  [key=0, style=solid];
n483 -> n506  [key=2, style=dotted];
n483 -> n490  [key=1, style=dashed, color=darkseagreen4, label=starttitle];
n484 -> n485  [key=0, style=solid];
n484 -> n508  [key=2, style=dotted];
n484 -> n490  [key=1, style=dashed, color=darkseagreen4, label=endtitle];
n485 -> n486  [key=0, style=solid];
n485 -> n506  [key=2, style=dotted];
n485 -> n487  [key=1, style=dashed, color=darkseagreen4, label=endall];
n486 -> n487  [key=0, style=solid];
n486 -> n503  [key=0, style=solid];
n487 -> n488  [key=0, style=solid];
n488 -> n489  [key=0, style=solid];
n488 -> n167  [key=2, style=dotted];
n490 -> n491  [key=0, style=solid];
n490 -> n167  [key=2, style=dotted];
n494 -> n495  [key=0, style=solid];
n494 -> n509  [key=2, style=dotted];
n494 -> n496  [key=1, style=dashed, color=darkseagreen4, label=label];
n494 -> n498  [key=1, style=dashed, color=darkseagreen4, label=label];
n498 -> n499  [key=0, style=solid];
n498 -> n7  [key=2, style=dotted];
n498 -> n500  [key=1, style=dashed, color=darkseagreen4, label=details];
n501 -> n502  [key=0, style=solid];
n503 -> n504  [key=0, style=solid];
n475 -> n476  [key=0, style=solid];
n475 -> n480  [key=1, style=dashed, color=darkseagreen4, label=sps];
n476 -> n477  [key=0, style=solid];
n477 -> n478  [key=0, style=solid];
n493 -> n494  [key=0, style=solid];
n493 -> n503  [key=0, style=solid];
n482 -> n483  [key=0, style=solid];
n482 -> n484  [key=1, style=dashed, color=darkseagreen4, label=endurl];
n482 -> n488  [key=1, style=dashed, color=darkseagreen4, label=endurl];
n489 -> n490  [key=0, style=solid];
n489 -> n428  [key=2, style=dotted];
n489 -> n489  [key=1, style=dashed, color=darkseagreen4, label=url];
n489 -> n492  [key=1, style=dashed, color=darkseagreen4, label=url];
n492 -> n505  [key=0, style=solid];
n492 -> n26  [key=2, style=dotted];
n491 -> n492  [key=0, style=solid];
n491 -> n437  [key=2, style=dotted];
n491 -> n491  [key=1, style=dashed, color=darkseagreen4, label=title];
n495 -> n496  [key=0, style=solid];
n495 -> n503  [key=0, style=solid];
n509 -> n594  [key=0, style=solid];
n509 -> n595  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n598  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n599  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n601  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n603  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n604  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n606  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n607  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n610  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n611  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n612  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n614  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n615  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n616  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n618  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n619  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n509 -> n621  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n496 -> n497  [key=0, style=solid];
n496 -> n498  [key=0, style=solid];
n497 -> n505  [key=0, style=solid];
n499 -> n500  [key=0, style=solid];
n499 -> n501  [key=0, style=solid];
n500 -> n505  [key=0, style=solid];
n502 -> n505  [key=0, style=solid];
n504 -> n505  [key=0, style=solid];
n505 -> n318  [key=0, style=bold, color=blue];
n510 -> n511  [key=0, style=solid];
n510 -> n512  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n510 -> n513  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n510 -> n514  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n510 -> n515  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n510 -> n516  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n511 -> n512  [key=0, style=solid];
n511 -> n516  [key=1, style=dashed, color=darkseagreen4, label=nlpos];
n512 -> n513  [key=0, style=solid];
n512 -> n98  [key=2, style=dotted];
n513 -> n514  [key=0, style=solid];
n514 -> n515  [key=0, style=solid];
n514 -> n516  [key=0, style=solid];
n515 -> n514  [key=0, style=solid];
n515 -> n98  [key=2, style=dotted];
n516 -> n517  [key=0, style=solid];
n516 -> n518  [key=0, style=solid];
n517 -> n519  [key=0, style=solid];
n517 -> n69  [key=2, style=dotted];
n518 -> n519  [key=0, style=solid];
n518 -> n72  [key=2, style=dotted];
n519 -> n510  [key=0, style=bold, color=blue];
n520 -> n521  [key=0, style=solid];
n520 -> n524  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n527  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n529  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n531  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n533  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n535  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n537  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n539  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n541  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n543  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n545  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n546  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n547  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n549  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n550  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n551  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n552  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n554  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n555  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n556  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n557  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n558  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n520 -> n559  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n521 -> n522  [key=0, style=solid];
n524 -> n525  [key=0, style=solid];
n527 -> n562  [key=0, style=solid];
n527 -> n510  [key=2, style=dotted];
n529 -> n562  [key=0, style=solid];
n529 -> n169  [key=2, style=dotted];
n531 -> n562  [key=0, style=solid];
n531 -> n321  [key=2, style=dotted];
n533 -> n562  [key=0, style=solid];
n533 -> n336  [key=2, style=dotted];
n535 -> n562  [key=0, style=solid];
n535 -> n447  [key=2, style=dotted];
n537 -> n562  [key=0, style=solid];
n537 -> n235  [key=2, style=dotted];
n539 -> n562  [key=0, style=solid];
n539 -> n235  [key=2, style=dotted];
n541 -> n562  [key=0, style=solid];
n541 -> n261  [key=2, style=dotted];
n543 -> n562  [key=0, style=solid];
n543 -> n298  [key=2, style=dotted];
n545 -> n546  [key=0, style=solid];
n545 -> n98  [key=2, style=dotted];
n546 -> n547  [key=0, style=solid];
n546 -> n548  [key=0, style=solid];
n546 -> n95  [key=2, style=dotted];
n547 -> n562  [key=0, style=solid];
n547 -> n261  [key=2, style=dotted];
n549 -> n550  [key=0, style=solid];
n549 -> n426  [key=2, style=dotted];
n549 -> n551  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n549 -> n553  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n549 -> n557  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n549 -> n558  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n550 -> n551  [key=0, style=solid];
n550 -> n553  [key=0, style=solid];
n551 -> n552  [key=0, style=solid];
n551 -> n335  [key=2, style=dotted];
n551 -> n561  [key=1, style=dashed, color=darkseagreen4, label=contents];
n552 -> n561  [key=0, style=solid];
n552 -> n98  [key=2, style=dotted];
n554 -> n555  [key=0, style=solid];
n554 -> n556  [key=1, style=dashed, color=darkseagreen4, label=endpos];
n555 -> n556  [key=0, style=solid];
n555 -> n564  [key=2, style=dotted];
n555 -> n561  [key=1, style=dashed, color=darkseagreen4, label=contents];
n556 -> n561  [key=0, style=solid];
n557 -> n558  [key=0, style=solid];
n557 -> n167  [key=2, style=dotted];
n557 -> n560  [key=1, style=dashed, color=darkseagreen4, label=contents];
n557 -> n561  [key=1, style=dashed, color=darkseagreen4, label=contents];
n558 -> n559  [key=0, style=solid];
n559 -> n560  [key=0, style=solid];
n559 -> n561  [key=0, style=solid];
n559 -> n95  [key=2, style=dotted];
n522 -> n523  [key=0, style=solid];
n523 -> n524  [key=0, style=solid];
n525 -> n526  [key=0, style=solid];
n525 -> n528  [key=0, style=solid];
n525 -> n530  [key=0, style=solid];
n525 -> n532  [key=0, style=solid];
n525 -> n534  [key=0, style=solid];
n525 -> n536  [key=0, style=solid];
n525 -> n538  [key=0, style=solid];
n525 -> n540  [key=0, style=solid];
n525 -> n542  [key=0, style=solid];
n525 -> n544  [key=0, style=solid];
n525 -> n549  [key=0, style=solid];
n526 -> n527  [key=0, style=solid];
n528 -> n529  [key=0, style=solid];
n530 -> n531  [key=0, style=solid];
n532 -> n533  [key=0, style=solid];
n534 -> n535  [key=0, style=solid];
n536 -> n537  [key=0, style=solid];
n538 -> n539  [key=0, style=solid];
n540 -> n541  [key=0, style=solid];
n542 -> n543  [key=0, style=solid];
n544 -> n545  [key=0, style=solid];
n548 -> n562  [key=0, style=solid];
n548 -> n60  [key=2, style=dotted];
n553 -> n554  [key=0, style=solid];
n553 -> n557  [key=0, style=solid];
n561 -> n562  [key=0, style=solid];
n561 -> n60  [key=2, style=dotted];
n560 -> n561  [key=0, style=solid];
n560 -> n94  [key=2, style=dotted];
n560 -> n560  [key=1, style=dashed, color=darkseagreen4, label=contents];
n562 -> n563  [key=0, style=solid];
n563 -> n520  [key=0, style=bold, color=blue];
n565 -> n566  [key=0, style=solid];
n565 -> n568  [key=1, style=dashed, color=darkseagreen4, label=string];
n566 -> n567  [key=0, style=solid];
n566 -> n568  [key=0, style=solid];
n568 -> n569  [key=0, style=solid];
n568 -> n90  [key=2, style=dotted];
n568 -> n572  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n573  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n575  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n576  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n578  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n579  [key=1, style=dashed, color=darkseagreen4, label=subj];
n568 -> n580  [key=1, style=dashed, color=darkseagreen4, label=subj];
n567 -> n582  [key=0, style=solid];
n569 -> n570  [key=0, style=solid];
n569 -> n575  [key=1, style=dashed, color=darkseagreen4, label=len];
n572 -> n573  [key=0, style=solid];
n572 -> n520  [key=2, style=dotted];
n572 -> n581  [key=1, style=dashed, color=darkseagreen4, label=first];
n573 -> n574  [key=0, style=solid];
n575 -> n576  [key=0, style=solid];
n575 -> n580  [key=0, style=solid];
n576 -> n577  [key=0, style=solid];
n576 -> n520  [key=2, style=dotted];
n576 -> n578  [key=1, style=dashed, color=darkseagreen4, label=cur];
n576 -> n579  [key=1, style=dashed, color=darkseagreen4, label=cur];
n578 -> n579  [key=0, style=solid];
n579 -> n575  [key=0, style=solid];
n580 -> n581  [key=0, style=solid];
n580 -> n583  [key=2, style=dotted];
n570 -> n571  [key=0, style=solid];
n570 -> n572  [key=0, style=solid];
n571 -> n582  [key=0, style=solid];
n581 -> n582  [key=0, style=solid];
n574 -> n575  [key=0, style=solid];
n577 -> n578  [key=0, style=solid];
n577 -> n575  [key=0, style=solid];
n582 -> n565  [key=0, style=bold, color=blue];
n584 -> n585  [key=0, style=solid];
n584 -> n586  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n584 -> n588  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n584 -> n589  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n584 -> n591  [key=1, style=dashed, color=darkseagreen4, label="CommonMark.Parser.Subject"];
n585 -> n586  [key=0, style=solid];
n585 -> n590  [key=1, style=dashed, color=darkseagreen4, label=seen_newline];
n586 -> n587  [key=0, style=solid];
n586 -> n588  [key=1, style=dashed, color=darkseagreen4, label=len];
n588 -> n589  [key=0, style=solid];
n588 -> n593  [key=0, style=solid];
n589 -> n590  [key=0, style=solid];
n591 -> n588  [key=0, style=solid];
n591 -> n98  [key=2, style=dotted];
n590 -> n591  [key=0, style=solid];
n590 -> n592  [key=0, style=solid];
n590 -> n590  [key=1, style=dashed, color=darkseagreen4, label=seen_newline];
n587 -> n588  [key=0, style=solid];
n593 -> n584  [key=0, style=bold, color=blue];
n592 -> n593  [key=0, style=solid];
n594 -> n595  [key=0, style=solid];
n594 -> n604  [key=1, style=dashed, color=darkseagreen4, label=startPos];
n594 -> n621  [key=1, style=dashed, color=darkseagreen4, label=startPos];
n595 -> n596  [key=0, style=solid];
n595 -> n608  [key=1, style=dashed, color=darkseagreen4, label=source];
n595 -> n609  [key=1, style=dashed, color=darkseagreen4, label=source];
n595 -> n610  [key=1, style=dashed, color=darkseagreen4, label=source];
n595 -> n612  [key=1, style=dashed, color=darkseagreen4, label=source];
n595 -> n616  [key=1, style=dashed, color=darkseagreen4, label=source];
n595 -> n618  [key=1, style=dashed, color=darkseagreen4, label=source];
n598 -> n599  [key=0, style=solid];
n598 -> n606  [key=0, style=solid];
n599 -> n600  [key=0, style=solid];
n599 -> n602  [key=1, style=dashed, color=darkseagreen4, label=c];
n601 -> n598  [key=0, style=solid];
n603 -> n606  [key=0, style=solid];
n604 -> n605  [key=0, style=solid];
n606 -> n607  [key=0, style=solid];
n606 -> n618  [key=1, style=dashed, color=darkseagreen4, label=labelStartPos];
n607 -> n608  [key=0, style=solid];
n607 -> n610  [key=1, style=dashed, color=darkseagreen4, label=len];
n607 -> n615  [key=1, style=dashed, color=darkseagreen4, label=len];
n607 -> n616  [key=1, style=dashed, color=darkseagreen4, label=len];
n610 -> n611  [key=0, style=solid];
n610 -> n163  [key=2, style=dotted];
n611 -> n612  [key=0, style=solid];
n611 -> n621  [key=0, style=solid];
n612 -> n613  [key=0, style=solid];
n612 -> n617  [key=1, style=dashed, color=darkseagreen4, label=c];
n614 -> n615  [key=0, style=solid];
n615 -> n616  [key=0, style=solid];
n615 -> n621  [key=0, style=solid];
n616 -> n611  [key=0, style=solid];
n616 -> n163  [key=2, style=dotted];
n618 -> n619  [key=0, style=solid];
n618 -> n319  [key=2, style=dotted];
n618 -> n620  [key=1, style=dashed, color=darkseagreen4, label=label];
n619 -> n620  [key=0, style=solid];
n621 -> n622  [key=0, style=solid];
n596 -> n597  [key=0, style=solid];
n596 -> n598  [key=1, style=dashed, color=darkseagreen4, label=len];
n608 -> n609  [key=0, style=solid];
n608 -> n610  [key=0, style=solid];
n609 -> n610  [key=0, style=solid];
n609 -> n615  [key=1, style=dashed, color=darkseagreen4, label=len];
n609 -> n616  [key=1, style=dashed, color=darkseagreen4, label=len];
n597 -> n598  [key=0, style=solid];
n600 -> n601  [key=0, style=solid];
n600 -> n602  [key=0, style=solid];
n602 -> n603  [key=0, style=solid];
n602 -> n604  [key=0, style=solid];
n605 -> n623  [key=0, style=solid];
n613 -> n614  [key=0, style=solid];
n613 -> n617  [key=0, style=solid];
n617 -> n618  [key=0, style=solid];
n617 -> n621  [key=0, style=solid];
n620 -> n623  [key=0, style=solid];
n622 -> n623  [key=0, style=solid];
n623 -> n509  [key=0, style=bold, color=blue];
n624 -> n625  [key=0, style=solid];
n624 -> n658  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>"];
n625 -> n626  [key=0, style=solid];
n625 -> n661  [key=2, style=dotted];
n625 -> n90  [key=2, style=dotted];
n625 -> n630  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n633  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n634  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n636  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n637  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n640  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n642  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n643  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n644  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n645  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n647  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n649  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n650  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n652  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n653  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n654  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n655  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n656  [key=1, style=dashed, color=darkseagreen4, label=subj];
n625 -> n659  [key=1, style=dashed, color=darkseagreen4, label=subj];
n658 -> n659  [key=0, style=solid];
n658 -> n19  [key=2, style=dotted];
n658 -> n27  [key=2, style=dotted];
n626 -> n627  [key=0, style=solid];
n630 -> n631  [key=0, style=solid];
n630 -> n509  [key=2, style=dotted];
n630 -> n658  [key=1, style=dashed, color=darkseagreen4, label=lab];
n633 -> n634  [key=0, style=solid];
n633 -> n635  [key=0, style=solid];
n633 -> n95  [key=2, style=dotted];
n634 -> n636  [key=0, style=solid];
n634 -> n98  [key=2, style=dotted];
n636 -> n637  [key=0, style=solid];
n636 -> n584  [key=2, style=dotted];
n637 -> n638  [key=0, style=solid];
n637 -> n507  [key=2, style=dotted];
n637 -> n640  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n637 -> n642  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n640 -> n641  [key=0, style=solid];
n640 -> n167  [key=2, style=dotted];
n642 -> n643  [key=0, style=solid];
n643 -> n644  [key=0, style=solid];
n643 -> n650  [key=1, style=dashed, color=darkseagreen4, label=beforetitle];
n644 -> n645  [key=0, style=solid];
n644 -> n584  [key=2, style=dotted];
n645 -> n646  [key=0, style=solid];
n645 -> n508  [key=2, style=dotted];
n645 -> n647  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n645 -> n649  [key=1, style=dashed, color=darkseagreen4, label=matchlen];
n647 -> n648  [key=0, style=solid];
n647 -> n167  [key=2, style=dotted];
n649 -> n652  [key=0, style=solid];
n650 -> n651  [key=0, style=solid];
n652 -> n653  [key=0, style=solid];
n652 -> n654  [key=0, style=solid];
n652 -> n95  [key=2, style=dotted];
n653 -> n652  [key=0, style=solid];
n653 -> n98  [key=2, style=dotted];
n654 -> n655  [key=0, style=solid];
n654 -> n656  [key=0, style=solid];
n654 -> n95  [key=2, style=dotted];
n655 -> n658  [key=0, style=solid];
n655 -> n98  [key=2, style=dotted];
n656 -> n657  [key=0, style=solid];
n656 -> n658  [key=0, style=solid];
n656 -> n95  [key=2, style=dotted];
n659 -> n660  [key=0, style=solid];
n627 -> n628  [key=0, style=solid];
n628 -> n629  [key=0, style=solid];
n629 -> n630  [key=0, style=solid];
n631 -> n632  [key=0, style=solid];
n631 -> n633  [key=0, style=solid];
n632 -> n660  [key=0, style=solid];
n635 -> n660  [key=0, style=solid];
n638 -> n639  [key=0, style=solid];
n638 -> n640  [key=0, style=solid];
n639 -> n660  [key=0, style=solid];
n641 -> n642  [key=0, style=solid];
n641 -> n428  [key=2, style=dotted];
n641 -> n641  [key=1, style=dashed, color=darkseagreen4, label=url];
n641 -> n658  [key=1, style=dashed, color=darkseagreen4, label=url];
n646 -> n647  [key=0, style=solid];
n646 -> n650  [key=0, style=solid];
n648 -> n649  [key=0, style=solid];
n648 -> n437  [key=2, style=dotted];
n648 -> n648  [key=1, style=dashed, color=darkseagreen4, label=title];
n648 -> n658  [key=1, style=dashed, color=darkseagreen4, label=title];
n651 -> n652  [key=0, style=solid];
n651 -> n658  [key=1, style=dashed, color=darkseagreen4, label=title];
n657 -> n660  [key=0, style=solid];
n660 -> n624  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_3  [key=2, style=dotted];
m3_23 -> m3_19  [key=2, style=dotted];
m3_23 -> m3_32  [key=2, style=dotted];
m3_23 -> m3_33  [key=2, style=dotted];
m3_23 -> m3_20  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_4  [key=2, style=dotted];
m3_24 -> m3_21  [key=2, style=dotted];
m3_24 -> m3_34  [key=2, style=dotted];
m3_24 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_24 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_24 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_24 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_24 -> m3_30  [key=1, style=dashed, color=green, label=lines];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_5  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_5  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_5  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid, color=green];
m3_29 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid, color=green];
m3_30 -> m3_5  [key=2, style=dotted, color=green];
m3_31 -> m3_22  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid, color=green];
m3_43 -> m3_44  [key=0, style=solid, color=green];
m3_43 -> m3_40  [key=2, style=dotted, color=green];
m3_43 -> m3_17  [key=2, style=dotted, color=green];
m3_43 -> m3_45  [key=1, style=dashed, color=green, label=sut];
m3_43 -> m3_46  [key=1, style=dashed, color=green, label=sut];
m3_44 -> m3_45  [key=0, style=solid, color=green];
m3_45 -> m3_46  [key=0, style=solid, color=green];
m3_45 -> m3_53  [key=2, style=dotted, color=green];
m3_45 -> m3_33  [key=2, style=dotted, color=green];
m3_46 -> m3_47  [key=0, style=solid, color=green];
m3_46 -> m3_4  [key=2, style=dotted, color=green];
m3_46 -> m3_54  [key=2, style=dotted, color=green];
m3_46 -> m3_48  [key=1, style=dashed, color=green, label=lines];
m3_46 -> m3_49  [key=1, style=dashed, color=green, label=lines];
m3_46 -> m3_50  [key=1, style=dashed, color=green, label=lines];
m3_46 -> m3_51  [key=1, style=dashed, color=green, label=lines];
m3_47 -> m3_48  [key=0, style=solid, color=green];
m3_47 -> m3_55  [key=2, style=dotted, color=green];
m3_47 -> m3_56  [key=2, style=dotted, color=green];
m3_48 -> m3_49  [key=0, style=solid, color=green];
m3_48 -> m3_55  [key=2, style=dotted, color=green];
m3_48 -> m3_56  [key=2, style=dotted, color=green];
m3_49 -> m3_50  [key=0, style=solid, color=green];
m3_49 -> m3_55  [key=2, style=dotted, color=green];
m3_49 -> m3_56  [key=2, style=dotted, color=green];
m3_50 -> m3_51  [key=0, style=solid, color=green];
m3_50 -> m3_55  [key=2, style=dotted, color=green];
m3_50 -> m3_56  [key=2, style=dotted, color=green];
m3_51 -> m3_52  [key=0, style=solid, color=green];
m3_51 -> m3_55  [key=2, style=dotted, color=green];
m3_51 -> m3_56  [key=2, style=dotted, color=green];
m3_52 -> m3_42  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_40  [key=2, style=dotted];
m3_58 -> m3_17  [key=2, style=dotted];
m3_58 -> m3_60  [key=1, style=dashed, color=darkseagreen4, label=sut];
m3_58 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=sut];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_69  [key=2, style=dotted];
m3_60 -> m3_33  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_4  [key=2, style=dotted];
m3_61 -> m3_54  [key=2, style=dotted];
m3_61 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_61 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_61 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_61 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_61 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_55  [key=2, style=dotted];
m3_62 -> m3_56  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_55  [key=2, style=dotted];
m3_63 -> m3_56  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_55  [key=2, style=dotted];
m3_64 -> m3_56  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_55  [key=2, style=dotted];
m3_65 -> m3_56  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_55  [key=2, style=dotted];
m3_66 -> m3_56  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_55  [key=2, style=dotted];
m3_67 -> m3_56  [key=2, style=dotted];
m3_68 -> m3_57  [key=0, style=bold, color=blue];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_97  [key=2, style=dotted];
m3_134 -> m3_32  [key=2, style=dotted];
m3_134 -> m3_99  [key=2, style=dotted];
m3_134 -> m3_105  [key=2, style=dotted];
m3_134 -> m3_101  [key=2, style=dotted];
m3_134 -> m3_110  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_147  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_4  [key=2, style=dotted];
m3_136 -> m3_21  [key=2, style=dotted];
m3_136 -> m3_34  [key=2, style=dotted];
m3_136 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_141  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_144  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_136 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_148  [key=2, style=dotted];
m3_137 -> m3_149  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_148  [key=2, style=dotted];
m3_138 -> m3_149  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_5  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_5  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_5  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_5  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_5  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_5  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_5  [key=2, style=dotted];
m3_146 -> m3_133  [key=0, style=bold, color=blue];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_173  [key=2, style=dotted];
m3_162 -> m3_174  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_97  [key=2, style=dotted];
m3_163 -> m3_98  [key=2, style=dotted];
m3_163 -> m3_109  [key=2, style=dotted];
m3_163 -> m3_175  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_147  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_4  [key=2, style=dotted];
m3_165 -> m3_21  [key=2, style=dotted];
m3_165 -> m3_34  [key=2, style=dotted];
m3_165 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_165 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_165 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_165 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_165 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_148  [key=2, style=dotted];
m3_166 -> m3_149  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_148  [key=2, style=dotted];
m3_167 -> m3_149  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_5  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_5  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_5  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_5  [key=2, style=dotted];
m3_172 -> m3_161  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_40  [key=2, style=dotted];
m3_71 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=sut];
m3_71 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=sut];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_19  [key=2, style=dotted];
m3_73 -> m3_82  [key=2, style=dotted];
m3_73 -> m3_33  [key=2, style=dotted];
m3_73 -> m3_20  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_4  [key=2, style=dotted];
m3_74 -> m3_54  [key=2, style=dotted];
m3_74 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_74 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_74 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_74 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_74 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_55  [key=2, style=dotted];
m3_75 -> m3_56  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_55  [key=2, style=dotted];
m3_76 -> m3_56  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_55  [key=2, style=dotted];
m3_77 -> m3_56  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_55  [key=2, style=dotted];
m3_78 -> m3_56  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_55  [key=2, style=dotted];
m3_79 -> m3_56  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_55  [key=2, style=dotted];
m3_80 -> m3_56  [key=2, style=dotted];
m3_81 -> m3_70  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_40  [key=2, style=dotted, color=green];
m3_36 -> m3_41  [key=2, style=dotted, color=green];
m3_36 -> m3_33  [key=2, style=dotted, color=green];
m3_37 -> m3_38  [key=0, style=solid, color=green];
m3_37 -> m3_4  [key=2, style=dotted, color=green];
m3_37 -> m3_21  [key=2, style=dotted, color=green];
m3_37 -> m3_34  [key=2, style=dotted, color=green];
m3_38 -> m3_39  [key=0, style=solid, color=green];
m3_38 -> m3_5  [key=2, style=dotted, color=green];
m3_39 -> m3_35  [key=0, style=bold, color=blue];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_112 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_116  [key=0, style=solid];
m3_113 -> m3_118  [key=0, style=solid];
m3_113 -> m3_120  [key=0, style=solid];
m3_113 -> m3_122  [key=0, style=solid];
m3_113 -> m3_124  [key=0, style=solid];
m3_113 -> m3_126  [key=0, style=solid];
m3_113 -> m3_128  [key=0, style=solid];
m3_113 -> m3_130  [key=0, style=solid];
m3_115 -> m3_131  [key=0, style=solid];
m3_117 -> m3_131  [key=0, style=solid];
m3_119 -> m3_131  [key=0, style=solid];
m3_121 -> m3_131  [key=0, style=solid];
m3_123 -> m3_131  [key=0, style=solid];
m3_125 -> m3_131  [key=0, style=solid];
m3_129 -> m3_131  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_132  [key=2, style=dotted];
m3_127 -> m3_131  [key=0, style=solid];
m3_131 -> m3_112  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_17  [key=2, style=dotted];
m3_7 -> m3_18  [key=2, style=dotted];
m3_7 -> m3_19  [key=2, style=dotted];
m3_7 -> m3_20  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_4  [key=2, style=dotted];
m3_8 -> m3_21  [key=2, style=dotted];
m3_8 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_8 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_8 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_8 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_8 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_5  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_5  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_5  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_5  [key=2, style=dotted];
m3_15 -> m3_6  [key=0, style=bold, color=blue];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_97  [key=2, style=dotted];
m3_84 -> m3_98  [key=2, style=dotted];
m3_84 -> m3_99  [key=2, style=dotted];
m3_84 -> m3_100  [key=2, style=dotted];
m3_84 -> m3_101  [key=2, style=dotted];
m3_84 -> m3_102  [key=2, style=dotted];
m3_84 -> m3_103  [key=2, style=dotted];
m3_84 -> m3_104  [key=2, style=dotted];
m3_84 -> m3_105  [key=2, style=dotted];
m3_84 -> m3_106  [key=2, style=dotted];
m3_84 -> m3_107  [key=2, style=dotted];
m3_84 -> m3_108  [key=2, style=dotted];
m3_84 -> m3_109  [key=2, style=dotted];
m3_84 -> m3_110  [key=2, style=dotted];
m3_84 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m3_85 -> m3_85  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_111  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_21  [key=2, style=dotted];
m3_87 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_87 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_5  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_5  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_5  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_5  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_5  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_5  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_5  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_5  [key=2, style=dotted];
m3_96 -> m3_83  [key=0, style=bold, color=blue];
m3_150 -> m3_151  [key=0, style=solid];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_97  [key=2, style=dotted];
m3_151 -> m3_98  [key=2, style=dotted];
m3_151 -> m3_109  [key=2, style=dotted];
m3_151 -> m3_110  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_147  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_4  [key=2, style=dotted];
m3_153 -> m3_21  [key=2, style=dotted];
m3_153 -> m3_34  [key=2, style=dotted];
m3_153 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_153 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_153 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_153 -> m3_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_153 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_148  [key=2, style=dotted];
m3_154 -> m3_149  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_148  [key=2, style=dotted];
m3_155 -> m3_149  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_5  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_5  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_5  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_5  [key=2, style=dotted];
m3_160 -> m3_150  [key=0, style=bold, color=blue];
m4_33 -> m4_34  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_34 -> m4_34  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_9  [key=2, style=dotted];
m4_35 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_20  [key=2, style=dotted];
m4_37 -> m4_33  [key=0, style=bold, color=blue];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_128  [key=2, style=dotted];
m4_124 -> m4_108  [key=2, style=dotted];
m4_124 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_9  [key=2, style=dotted];
m4_125 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_46  [key=2, style=dotted];
m4_126 -> m4_11  [key=2, style=dotted];
m4_127 -> m4_123  [key=0, style=bold, color=blue];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_137  [key=2, style=dotted];
m4_133 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_9  [key=2, style=dotted];
m4_134 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_46  [key=2, style=dotted];
m4_135 -> m4_11  [key=2, style=dotted];
m4_136 -> m4_132  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m4_1 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_9  [key=2, style=dotted];
m4_3 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_4 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_113 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_118  [key=2, style=dotted];
m4_114 -> m4_108  [key=2, style=dotted];
m4_114 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_9  [key=2, style=dotted];
m4_115 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_46  [key=2, style=dotted];
m4_116 -> m4_11  [key=2, style=dotted];
m4_117 -> m4_113  [key=0, style=bold, color=blue];
m4_154 -> m4_155  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_6  [key=2, style=dotted];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_31 -> m4_29  [key=0, style=bold, color=blue];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_32  [key=2, style=dotted];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_47 -> m4_48  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_6  [key=2, style=dotted];
m4_49 -> m4_47  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_55  [key=2, style=dotted];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_67  [key=2, style=dotted];
m4_70 -> m4_68  [key=0, style=bold, color=blue];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_76  [key=2, style=dotted];
m4_79 -> m4_77  [key=0, style=bold, color=blue];
m4_87 -> m4_88  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m4_90 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_67  [key=2, style=dotted];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=2, style=dotted];
m4_91 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=2, style=dotted];
m4_95 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_101  [key=2, style=dotted];
m4_92 -> m4_90  [key=0, style=bold, color=blue];
m4_94 -> m4_95  [key=0, style=solid];
m4_96 -> m4_94  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_100 -> m4_98  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=2, style=dotted];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=2, style=dotted];
m4_121 -> m4_119  [key=0, style=bold, color=blue];
m4_129 -> m4_130  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_6  [key=2, style=dotted];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_138 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_6  [key=2, style=dotted];
m4_140 -> m4_138  [key=0, style=bold, color=blue];
m4_146 -> m4_147  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_6  [key=2, style=dotted];
m4_148 -> m4_146  [key=0, style=bold, color=blue];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_6  [key=2, style=dotted];
m4_156 -> m4_154  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_67  [key=2, style=dotted];
m4_81 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_82 -> m4_83  [key=0, style=solid];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_56  [key=2, style=dotted];
m4_84 -> m4_57  [key=2, style=dotted];
m4_84 -> m4_58  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_86  [key=2, style=dotted];
m4_83 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_83 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_85 -> m4_80  [key=0, style=bold, color=blue];
m4_149 -> m4_150  [key=0, style=solid];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_137  [key=2, style=dotted];
m4_150 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_9  [key=2, style=dotted];
m4_151 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_46  [key=2, style=dotted];
m4_152 -> m4_11  [key=2, style=dotted];
m4_153 -> m4_149  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_67  [key=2, style=dotted];
m4_63 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_9  [key=2, style=dotted];
m4_64 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_56  [key=2, style=dotted];
m4_65 -> m4_57  [key=2, style=dotted];
m4_65 -> m4_58  [key=2, style=dotted];
m4_66 -> m4_62  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_107  [key=2, style=dotted];
m4_103 -> m4_108  [key=2, style=dotted];
m4_103 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_9  [key=2, style=dotted];
m4_104 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_46  [key=2, style=dotted];
m4_105 -> m4_11  [key=2, style=dotted];
m4_106 -> m4_102  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_25 -> m4_25  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_9  [key=2, style=dotted];
m4_26 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_20  [key=2, style=dotted];
m4_28 -> m4_24  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_16 -> m4_16  [key=3, color=darkorchid, style=bold, label="Local variable int expectedResult"];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_9  [key=2, style=dotted];
m4_17 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_19 -> m4_15  [key=0, style=bold, color=blue];
m4_141 -> m4_142  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_137  [key=2, style=dotted];
m4_142 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_9  [key=2, style=dotted];
m4_143 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_46  [key=2, style=dotted];
m4_144 -> m4_11  [key=2, style=dotted];
m4_145 -> m4_141  [key=0, style=bold, color=blue];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_55  [key=2, style=dotted];
m4_51 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_9  [key=2, style=dotted];
m4_52 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_56  [key=2, style=dotted];
m4_53 -> m4_57  [key=2, style=dotted];
m4_53 -> m4_58  [key=2, style=dotted];
m4_54 -> m4_50  [key=0, style=bold, color=blue];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_9  [key=2, style=dotted];
m4_43 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=2, style=dotted];
m4_44 -> m4_11  [key=2, style=dotted];
m4_45 -> m4_41  [key=0, style=bold, color=blue];
m4_71 -> m4_72  [key=0, style=solid, color=red];
m4_72 -> m4_73  [key=0, style=solid, color=red];
m4_72 -> m4_76  [key=2, style=dotted, color=red];
m4_72 -> m4_74  [key=1, style=dashed, color=red, label=expectedResult];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_9  [key=2, style=dotted];
m4_73 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_56  [key=2, style=dotted];
m4_74 -> m4_57  [key=2, style=dotted];
m4_74 -> m4_58  [key=2, style=dotted];
m4_75 -> m4_71  [key=0, style=bold, color=blue];
m4_157 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m4_158 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m4_158 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_14  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_20  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_18  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_2 -> m5_12  [key=0, style=solid];
m5_2 -> m5_13  [key=2, style=dotted];
m5_4 -> m5_12  [key=0, style=solid];
m5_4 -> m5_13  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_0  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_16  [key=0, style=bold, color=blue];
m5_22 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m5_22 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_6  [key=2, style=dotted];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=tokenPartitions];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_7  [key=2, style=dotted, color=green];
m6_2 -> m6_8  [key=2, style=dotted, color=green];
m6_2 -> m6_9  [key=2, style=dotted, color=green];
m6_2 -> m6_10  [key=2, style=dotted, color=green];
m6_2 -> m6_11  [key=2, style=dotted, color=green];
m6_2 -> m6_15  [key=1, style=dashed, color=green, label="lambda expression"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_12  [key=2, style=dotted];
m6_3 -> m6_13  [key=2, style=dotted];
m6_3 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_3 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_14  [key=2, style=dotted];
m6_4 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=2, style=dotted];
m6_17 -> m6_15  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=2, style=dotted];
m6_21 -> m6_19  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_22  [key=2, style=dotted];
m6_28 -> m6_30  [key=2, style=dotted];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_0 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_0  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid, color=green];
m7_8 -> m7_9  [key=0, style=solid, color=green];
m7_8 -> m7_0  [key=2, style=dotted, color=green];
m7_8 -> m7_10  [key=2, style=dotted, color=green];
m7_9 -> m7_7  [key=0, style=bold, color=blue];
m7_11 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m7_11 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m7_11 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m7_11 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m7_11 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_7 -> m8_13  [key=0, style=solid];
m8_7 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_7 -> m8_5  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m8_7 -> m8_9  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_20  [key=0, style=solid];
m8_14 -> m8_20  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_21  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_20 -> m8_7  [key=0, style=bold, color=blue];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_7  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=2, style=dotted];
m8_11 -> m8_8  [key=0, style=bold, color=blue];
m8_22 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m8_22 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m9_28 -> m9_0  [key=3, color=darkorchid, style=bold, label="Field variable CommandLine.Core.SpecificationType tag"];
m9_25 -> m9_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Type conversionType"];
m9_8 -> m9_9  [key=0, style=solid, color=green];
m9_8 -> m9_12  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
m9_8 -> m9_14  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
m9_8 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m9_9 -> m9_10  [key=0, style=solid, color=green];
m9_9 -> m9_21  [key=2, style=dotted, color=green];
m9_9 -> m9_16  [key=1, style=dashed, color=green, label=attrs];
m9_12 -> m9_13  [key=0, style=solid, color=green];
m9_12 -> m9_24  [key=2, style=dotted, color=green];
m9_12 -> m9_25  [key=2, style=dotted, color=green];
m9_12 -> m9_14  [key=1, style=dashed, color=green, label=spec];
m9_12 -> m9_15  [key=1, style=dashed, color=green, label=spec];
m9_14 -> m9_20  [key=0, style=solid, color=red];
m9_14 -> m9_26  [key=2, style=dotted, color=red];
m9_14 -> m9_27  [key=2, style=dotted, color=red];
m9_18 -> m9_20  [key=0, style=solid];
m9_18 -> m9_24  [key=2, style=dotted];
m9_18 -> m9_28  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid, color=green];
m9_10 -> m9_22  [key=2, style=dotted, color=green];
m9_10 -> m9_12  [key=1, style=dashed, color=green, label=oa];
m9_16 -> m9_17  [key=0, style=solid, color=green];
m9_16 -> m9_22  [key=2, style=dotted];
m9_16 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label=va];
m9_11 -> m9_12  [key=0, style=solid, color=green];
m9_11 -> m9_16  [key=0, style=solid, color=green];
m9_11 -> m9_23  [key=2, style=dotted, color=green];
m9_13 -> m9_14  [key=0, style=solid, color=green];
m9_13 -> m9_15  [key=0, style=solid, color=green];
m9_15 -> m9_20  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid, color=green];
m9_17 -> m9_19  [key=0, style=solid, color=green];
m9_17 -> m9_23  [key=2, style=dotted, color=green];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_29  [key=2, style=dotted];
m9_20 -> m9_8  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=bool];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<object>"];
m9_0 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_30 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m9_30 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m9_30 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m9_30 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m9_30 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m9_30 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m10_15 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m10_15 -> m10_15  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate"];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_19  [key=0, style=solid];
m10_16 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m10_16 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label=guard];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_16  [key=0, style=solid];
m10_17 -> m10_21  [key=2, style=dotted];
m10_17 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_19 -> m10_20  [key=0, style=solid];
m10_18 -> m10_20  [key=0, style=solid];
m10_18 -> m10_22  [key=2, style=dotted];
m10_20 -> m10_15  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_8 -> m10_10  [key=0, style=solid];
m10_8 -> m10_5  [key=2, style=dotted];
m10_10 -> m10_6  [key=0, style=bold, color=blue];
m10_23 -> m10_24  [key=0, style=solid];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=2, style=dotted];
m10_25 -> m10_23  [key=0, style=bold, color=blue];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_27 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_27 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_33  [key=0, style=solid];
m10_30 -> m10_40  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label=min];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=max];
m10_29 -> m10_39  [key=0, style=solid];
m10_29 -> m10_5  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_32 -> m10_39  [key=0, style=solid];
m10_32 -> m10_41  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=0, style=solid];
m10_37 -> m10_39  [key=0, style=solid];
m10_37 -> m10_41  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_42  [key=2, style=dotted];
m10_39 -> m10_27  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_12 -> m10_14  [key=2, style=dotted, color=green];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_43 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=guard];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m11_50 -> m11_48  [key=0, style=bold, color=blue];
m11_62 -> m11_63  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_10  [key=2, style=dotted];
m11_4 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_4 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m11_3 -> m11_4  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_11  [key=2, style=dotted];
m11_5 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_15 -> m11_16  [key=0, style=solid];
m11_7 -> m11_9  [key=0, style=solid];
m11_7 -> m11_13  [key=2, style=dotted];
m11_7 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_8  [key=0, style=solid];
m11_6 -> m11_12  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_14  [key=2, style=dotted];
m11_9 -> m11_3  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=2, style=dotted];
m11_16 -> m11_19  [key=2, style=dotted];
m11_17 -> m11_15  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_20  [key=0, style=bold, color=blue];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=2, style=dotted];
m11_24 -> m11_27  [key=2, style=dotted];
m11_24 -> m11_28  [key=2, style=dotted];
m11_25 -> m11_23  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid, color=green];
m11_33 -> m11_10  [key=2, style=dotted, color=green];
m11_33 -> m11_39  [key=1, style=dashed, color=green, label="lambda expression"];
m11_33 -> m11_35  [key=1, style=dashed, color=green, label=options];
m11_32 -> m11_33  [key=0, style=solid, color=green];
m11_34 -> m11_35  [key=0, style=solid, color=green];
m11_34 -> m11_36  [key=0, style=solid, color=green];
m11_34 -> m11_38  [key=2, style=dotted, color=green];
m11_39 -> m11_40  [key=0, style=solid, color=green];
m11_35 -> m11_37  [key=0, style=solid, color=green];
m11_35 -> m11_13  [key=2, style=dotted, color=green];
m11_35 -> m11_43  [key=1, style=dashed, color=green, label="lambda expression"];
m11_36 -> m11_37  [key=0, style=solid, color=green];
m11_36 -> m11_14  [key=2, style=dotted, color=green];
m11_36 -> m11_56  [key=0, style=solid, color=green];
m11_37 -> m11_32  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid, color=green];
m11_40 -> m11_41  [key=0, style=solid, color=green];
m11_40 -> m11_42  [key=2, style=dotted, color=green];
m11_41 -> m11_39  [key=0, style=bold, color=blue];
m11_44 -> m11_45  [key=0, style=solid, color=green];
m11_44 -> m11_46  [key=2, style=dotted, color=green];
m11_44 -> m11_47  [key=2, style=dotted, color=green];
m11_44 -> m11_28  [key=2, style=dotted, color=green];
m11_45 -> m11_43  [key=0, style=bold, color=blue];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_10  [key=2, style=dotted];
m11_52 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_52 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=options];
m11_51 -> m11_52  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_55  [key=0, style=solid];
m11_53 -> m11_38  [key=2, style=dotted];
m11_53 -> m11_36  [key=0, style=solid, color=green];
m11_57 -> m11_58  [key=0, style=solid];
m11_54 -> m11_56  [key=0, style=solid];
m11_54 -> m11_13  [key=2, style=dotted];
m11_54 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_14  [key=2, style=dotted];
m11_56 -> m11_51  [key=0, style=bold, color=blue];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_60  [key=2, style=dotted];
m11_58 -> m11_19  [key=2, style=dotted];
m11_58 -> m11_61  [key=2, style=dotted];
m11_59 -> m11_57  [key=0, style=bold, color=blue];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_65  [key=2, style=dotted];
m11_63 -> m11_47  [key=2, style=dotted];
m11_63 -> m11_28  [key=2, style=dotted];
m11_64 -> m11_62  [key=0, style=bold, color=blue];
m11_29 -> m11_30  [key=0, style=solid, color=green];
m11_30 -> m11_31  [key=0, style=solid, color=green];
m11_30 -> m11_33  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m11_31 -> m11_29  [key=0, style=bold, color=blue];
m12_54 -> m12_55  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_23 -> m12_21  [key=0, style=bold, color=blue];
m12_41 -> m12_42  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_19  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_44  [key=2, style=dotted];
m12_43 -> m12_41  [key=0, style=bold, color=blue];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_44  [key=2, style=dotted];
m12_47 -> m12_45  [key=0, style=bold, color=blue];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_44  [key=2, style=dotted];
m12_50 -> m12_48  [key=0, style=bold, color=blue];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_12  [key=2, style=dotted];
m12_53 -> m12_51  [key=0, style=bold, color=blue];
m12_56 -> m12_54  [key=0, style=bold, color=blue];
m12_13 -> m12_85  [key=0, style=solid];
m12_13 -> m12_91  [key=0, style=bold, color=crimson];
m12_13 -> m12_92  [key=0, style=bold, color=crimson];
m12_13 -> m12_95  [key=0, style=bold, color=crimson];
m12_13 -> m12_97  [key=0, style=bold, color=crimson];
m12_13 -> m12_98  [key=0, style=bold, color=crimson];
m12_13 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_13 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_13 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_87  [key=0, style=solid];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_80  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_80  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_12  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_99  [key=0, style=solid];
m12_87 -> m12_11  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_78  [key=2, style=dotted];
m12_88 -> m12_91  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_88 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_101  [key=2, style=dotted];
m12_94 -> m12_102  [key=2, style=dotted];
m12_86 -> m12_99  [key=0, style=solid];
m12_86 -> m12_9  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_100  [key=2, style=dotted];
m12_89 -> m12_93  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_103  [key=2, style=dotted];
m12_96 -> m12_98  [key=1, style=dashed, color=darkseagreen4, label=parts];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_93  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_96  [key=0, style=solid];
m12_99 -> m12_13  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_5  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m12_0 -> m12_6  [key=1, style=dashed, color=green, label="System.Func<string, bool>"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_5 -> m12_11  [key=2, style=dotted, color=green];
m12_5 -> m12_12  [key=2, style=dotted, color=green];
m12_5 -> m12_13  [key=2, style=dotted, color=green];
m12_5 -> m12_14  [key=2, style=dotted, color=green];
m12_5 -> m12_5  [key=1, style=dashed, color=green, label=arg];
m12_5 -> m12_7  [key=1, style=dashed, color=green, label=tokens];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_6 -> m12_15  [key=2, style=dotted, color=green];
m12_6 -> m12_16  [key=2, style=dotted, color=green];
m12_6 -> m12_6  [key=1, style=dashed, color=green, label=t];
m12_2 -> m12_8  [key=0, style=solid];
m12_2 -> m12_9  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_10  [key=2, style=dotted];
m12_3 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=errors];
m12_3 -> m12_7  [key=1, style=dashed, color=green, label=errors];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_4 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m12_4 -> m12_4  [key=3, color=darkorchid, style=bold, label="Local variable System.Action<CommandLine.Error> onError"];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_17  [key=2, style=dotted, color=green];
m12_7 -> m12_18  [key=2, style=dotted, color=green];
m12_7 -> m12_19  [key=2, style=dotted, color=green];
m12_7 -> m12_20  [key=2, style=dotted, color=green];
m12_7 -> m12_7  [key=1, style=dashed, color=green, label=t];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m12_25 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m12_25 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m12_25 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_32  [key=0, style=solid];
m12_28 -> m12_34  [key=2, style=dotted];
m12_28 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_35  [key=2, style=dotted];
m12_29 -> m12_36  [key=2, style=dotted];
m12_29 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_29 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_37  [key=2, style=dotted];
m12_30 -> m12_38  [key=2, style=dotted];
m12_30 -> m12_39  [key=2, style=dotted];
m12_30 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_30 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_30 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=values];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_36  [key=2, style=dotted];
m12_27 -> m12_33  [key=0, style=solid];
m12_27 -> m12_9  [key=2, style=dotted];
m12_31 -> m12_33  [key=0, style=solid];
m12_31 -> m12_40  [key=2, style=dotted];
m12_31 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_33 -> m12_25  [key=0, style=bold, color=blue];
m12_14 -> m12_57  [key=0, style=solid];
m12_14 -> m12_62  [key=0, style=bold, color=crimson];
m12_14 -> m12_63  [key=0, style=bold, color=crimson];
m12_14 -> m12_65  [key=0, style=bold, color=crimson];
m12_14 -> m12_66  [key=0, style=bold, color=crimson];
m12_14 -> m12_68  [key=0, style=bold, color=crimson];
m12_14 -> m12_74  [key=0, style=bold, color=crimson];
m12_14 -> m12_76  [key=0, style=bold, color=crimson];
m12_14 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_14 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_14 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_14 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_59  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_12  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_80  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_80  [key=2, style=dotted];
m12_74 -> m12_70  [key=0, style=solid];
m12_74 -> m12_80  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_84  [key=2, style=dotted];
m12_76 -> m12_78  [key=2, style=dotted];
m12_76 -> m12_12  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_77  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_78  [key=2, style=dotted];
m12_60 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_60 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_60 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_60 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_60 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=text];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_67  [key=0, style=solid];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_75  [key=0, style=solid];
m12_72 -> m12_83  [key=2, style=dotted];
m12_72 -> m12_36  [key=2, style=dotted];
m12_58 -> m12_77  [key=0, style=solid];
m12_58 -> m12_9  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_64  [key=0, style=solid];
m12_61 -> m12_79  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> n167  [key=2, style=dotted];
m12_67 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=first];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_75  [key=0, style=solid];
m12_70 -> m12_78  [key=2, style=dotted];
m12_70 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=c];
m12_70 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=c];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_77  [key=0, style=solid];
m12_75 -> m12_84  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_10  [key=2, style=dotted];
m12_69 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label=seen];
m12_69 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=seen];
m12_69 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label=seen];
m12_69 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=seen];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_24  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_82  [key=2, style=dotted];
m12_71 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=n];
m12_77 -> m12_14  [key=0, style=bold, color=blue];
m12_104 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=errors];
m12_105 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_13 -> m13_44  [key=0, style=solid];
m13_13 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_18  [key=2, style=dotted];
m13_44 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_44 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m13_45 -> m13_13  [key=0, style=bold, color=blue];
m13_11 -> m13_36  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_38  [key=2, style=dotted];
m13_36 -> m13_39  [key=2, style=dotted];
m13_36 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_36 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_36 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_37 -> m13_11  [key=0, style=bold, color=blue];
m13_29 -> m13_93  [key=0, style=solid];
m13_29 -> m13_9  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] values"];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_95  [key=2, style=dotted];
m13_94 -> m13_29  [key=0, style=bold, color=blue];
m13_90 -> m13_91  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid, color=green];
m13_26 -> m13_27  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid, color=green];
m13_23 -> m13_25  [key=2, style=dotted, color=green];
m13_24 -> m13_22  [key=0, style=bold, color=blue];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=2, style=dotted];
m13_28 -> m13_26  [key=0, style=bold, color=blue];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_29  [key=2, style=dotted];
m13_32 -> m13_30  [key=0, style=bold, color=blue];
m13_34 -> m13_35  [key=0, style=solid];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_40 -> m13_41  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_43  [key=2, style=dotted];
m13_42 -> m13_40  [key=0, style=bold, color=blue];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_43  [key=2, style=dotted];
m13_47 -> m13_25  [key=2, style=dotted];
m13_47 -> m13_38  [key=2, style=dotted];
m13_47 -> m13_39  [key=2, style=dotted];
m13_47 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_50 -> m13_51  [key=0, style=solid];
m13_48 -> m13_46  [key=0, style=bold, color=blue];
m13_49 -> m13_50  [key=0, style=solid];
m13_51 -> m13_49  [key=0, style=bold, color=blue];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_43  [key=2, style=dotted];
m13_55 -> m13_25  [key=2, style=dotted];
m13_55 -> m13_38  [key=2, style=dotted];
m13_55 -> m13_39  [key=2, style=dotted];
m13_55 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_60  [key=2, style=dotted];
m13_58 -> m13_61  [key=2, style=dotted];
m13_58 -> m13_62  [key=2, style=dotted];
m13_58 -> m13_63  [key=2, style=dotted];
m13_58 -> m13_64  [key=2, style=dotted];
m13_58 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_58 -> m13_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_58 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_54 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_68  [key=2, style=dotted];
m13_56 -> m13_54  [key=0, style=bold, color=blue];
m13_57 -> m13_58  [key=0, style=solid];
m13_59 -> m13_57  [key=0, style=bold, color=blue];
m13_65 -> m13_66  [key=0, style=solid];
m13_69 -> m13_70  [key=0, style=solid];
m13_72 -> m13_73  [key=0, style=solid];
m13_67 -> m13_65  [key=0, style=bold, color=blue];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_25  [key=2, style=dotted];
m13_71 -> m13_69  [key=0, style=bold, color=blue];
m13_73 -> m13_74  [key=0, style=solid];
m13_74 -> m13_72  [key=0, style=bold, color=blue];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_43  [key=2, style=dotted];
m13_80 -> m13_60  [key=2, style=dotted];
m13_80 -> m13_61  [key=2, style=dotted];
m13_80 -> m13_17  [key=2, style=dotted];
m13_80 -> m13_82  [key=2, style=dotted];
m13_80 -> m13_83  [key=2, style=dotted];
m13_80 -> m13_29  [key=2, style=dotted];
m13_80 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_80 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_80 -> m13_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_68  [key=2, style=dotted];
m13_81 -> m13_79  [key=0, style=bold, color=blue];
m13_84 -> m13_85  [key=0, style=solid];
m13_87 -> m13_88  [key=0, style=solid];
m13_86 -> m13_84  [key=0, style=bold, color=blue];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_25  [key=2, style=dotted];
m13_89 -> m13_87  [key=0, style=bold, color=blue];
m13_91 -> m13_92  [key=0, style=solid];
m13_92 -> m13_90  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_0 -> m13_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_0 -> m13_3  [key=1, style=dashed, color=green, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m13_0 -> m13_5  [key=1, style=dashed, color=green, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_11  [key=2, style=dotted, color=green];
m13_1 -> m13_9  [key=1, style=dashed, color=green, label=switches];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_12  [key=2, style=dotted, color=green];
m13_2 -> m13_4  [key=1, style=dashed, color=green, label=tokensExceptSwitches];
m13_3 -> m13_4  [key=0, style=solid, color=green];
m13_3 -> m13_13  [key=2, style=dotted, color=green];
m13_3 -> m13_9  [key=1, style=dashed, color=green, label=scalars];
m13_5 -> m13_6  [key=0, style=solid, color=green];
m13_5 -> m13_14  [key=2, style=dotted, color=green];
m13_5 -> m13_9  [key=1, style=dashed, color=green, label=sequences];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_18  [key=2, style=dotted];
m13_9 -> m13_19  [key=2, style=dotted];
m13_9 -> m13_20  [key=2, style=dotted];
m13_9 -> m13_21  [key=2, style=dotted];
m13_9 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_9 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_9 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> m13_12  [key=2, style=dotted, color=green];
m13_4 -> m13_6  [key=1, style=dashed, color=green, label=tokensExceptSwitchesAndScalars];
m13_6 -> m13_7  [key=0, style=solid, color=green];
m13_6 -> m13_12  [key=2, style=dotted, color=green];
m13_6 -> m13_8  [key=1, style=dashed, color=green, label=tokensExceptSwitchesAndScalarsAndSeq];
m13_7 -> m13_8  [key=0, style=solid, color=green];
m13_7 -> m13_15  [key=2, style=dotted, color=green];
m13_7 -> m13_22  [key=1, style=dashed, color=green, label="lambda expression"];
m13_7 -> m13_9  [key=1, style=dashed, color=green, label=values];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_16  [key=2, style=dotted, color=green];
m13_10 -> m13_0  [key=0, style=bold, color=blue];
m13_14 -> m13_52  [key=0, style=solid];
m13_14 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_14 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_18  [key=2, style=dotted];
m13_52 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_52 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m13_53 -> m13_14  [key=0, style=bold, color=blue];
m13_20 -> m13_75  [key=0, style=solid];
m13_20 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_77  [key=2, style=dotted];
m13_75 -> m13_78  [key=2, style=dotted];
m13_75 -> m13_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_75 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_76 -> m13_20  [key=0, style=bold, color=blue];
m13_25 -> m13_5  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Core.Token> tokens"];
m13_96 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_97 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m13_98 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_99 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_100 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_100 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_101 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m13_102 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_102 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_103 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_104 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_6  [key=2, style=dotted];
m14_1 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m14_2 -> m14_3  [key=0, style=solid, color=green];
m14_2 -> m14_7  [key=2, style=dotted, color=green];
m14_2 -> m14_14  [key=1, style=dashed, color=green, label=specs];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_11  [key=2, style=dotted];
m14_4 -> m14_12  [key=2, style=dotted];
m14_4 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_3 -> m14_9  [key=2, style=dotted];
m14_3 -> m14_10  [key=2, style=dotted];
m14_3 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_3 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_5 -> m14_0  [key=0, style=bold, color=blue];
m14_21 -> m14_22  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_18 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m14_17 -> m14_18  [key=0, style=solid];
m14_15 -> m14_13  [key=0, style=bold, color=blue];
m14_19 -> m14_17  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_22 -> m14_25  [key=2, style=dotted];
m14_22 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m14_23 -> m14_21  [key=0, style=bold, color=blue];
m14_26 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label=specs];
m14_27 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_28 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
}
