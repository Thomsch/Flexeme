digraph  {
n0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()"];
n1 [label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()"];
n2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()"];
n3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33", cluster="CommandLine.Text.HelpText.HelpText()"];
n4 [label="Entry CommandLine.Text.HelpText.ToString()", span="427-427", cluster="CommandLine.Text.HelpText.ToString()"];
n5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79", cluster="CommandLine.Text.HelpText.HelpText(string, string)"];
n17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])"];
n19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n9 [label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n21 [label="Entry string.ToNotEmptyLines()", span="9-9", cluster="string.ToNotEmptyLines()"];
n10 [label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n11 [label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n12 [label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n13 [label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n14 [label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()"];
n22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n32 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()"];
n33 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="343-343", cluster="CommandLine.Text.HelpText.AddOptions<T>(T)"];
n25 [label="Assert.Equal(''pre-options'', lines[0])", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n34 [label="Entry string[].TrimStringArray()", span="14-14", cluster="string[].TrimStringArray()"];
n26 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n27 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n28 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n29 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n30 [label="Assert.Equal(''post-options'', lines[5])", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n31 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()"];
n35 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n36 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=red, community=0];
n37 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=red, community=0];
n45 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="13-13", cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()"];
n38 [label="Assert.Equal(''pre-options'', lines[0])", span="80-80", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n39 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n40 [label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n41 [label="Assert.Equal(''Triangle'', lines[3])", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n42 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n43 [label="Assert.Equal(''post-options'', lines[5])", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n44 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()"];
n46 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n47 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=red, community=0];
n48 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n49 [label="Assert.Equal(''pre-options'', lines[0])", span="102-102", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n50 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n51 [label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n52 [label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n53 [label="Assert.Equal(''post-options'', lines[4])", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n54 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()"];
n55 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()"];
n56 [label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", color=red, community=0];
n57 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()"];
n60 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56", cluster="CommandLine.Text.HelpText.HelpText(string)"];
n61 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()"];
n58 [label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()"];
n59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()"];
n62 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n63 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n64 [label="sut.MaximumDisplayWidth = 40", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n65 [label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n66 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=red, community=0];
n73 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()"];
n67 [label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n74 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)"];
n68 [label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n69 [label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n70 [label="lines[5].Should().Be(''                capabilities of the '')", span="140-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n71 [label="lines[6].Should().Be(''                Help Text.'')", span="141-141", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n75 [label="Entry Unk.Should", span="", cluster="Unk.Should"];
n76 [label="Entry Unk.Be", span="", cluster="Unk.Be"];
n72 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()"];
n77 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n78 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n79 [label="sut.MaximumDisplayWidth = 40", span="151-151", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n80 [label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n81 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", color=red, community=0];
n89 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()"];
n82 [label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", color=red, community=0];
n83 [label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n84 [label="lines[4].Should().Be(''                After'')", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n85 [label="lines[5].Should().Be(''  input-file    Before '')", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n86 [label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n87 [label="lines[7].Should().Be(''                456789 After'')", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", color=red, community=0];
n88 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()"];
n90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n91 [label="var sut = new HelpText(''Heading Info.'')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n92 [label="sut.MaximumDisplayWidth = 40", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n94 [label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n102 [label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()"];
n95 [label="lines[1].Should().Be(''Before '')", span="178-178", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n96 [label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0];
n97 [label="lines[3].Should().Be(''012 After'')", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n98 [label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n99 [label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n100 [label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()"];
n103 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n104 [label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=red, community=0];
n105 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=red, community=0];
n117 [label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)"];
n118 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()"];
n119 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)"];
n120 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)"];
n121 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)"];
n122 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)"];
n123 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)"];
n124 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)"];
n125 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)"];
n126 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()"];
n127 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)"];
n128 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()"];
n129 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)"];
n130 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()"];
n106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n133 [label="err.Tag", span="211-211", cluster="lambda expression"];
n135 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214", cluster="lambda expression"];
n137 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216", cluster="lambda expression"];
n139 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218", cluster="lambda expression"];
n141 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220", cluster="lambda expression"];
n143 [label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222", cluster="lambda expression"];
n145 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224", cluster="lambda expression"];
n149 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228", cluster="lambda expression"];
n107 [label="var lines = errorsText.ToNotEmptyLines()", span="238-238", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n131 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="399-399", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)"];
n108 [label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n109 [label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n110 [label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n111 [label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n112 [label="Assert.Equal(''  ERR z'', lines[4])", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n113 [label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n114 [label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n115 [label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n116 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()"];
n132 [label="Entry lambda expression", span="209-232", cluster="lambda expression"];
n134 [label="ErrorType.BadFormatTokenError", span="213-213", cluster="lambda expression"];
n136 [label="ErrorType.MissingValueOptionError", span="215-215", cluster="lambda expression"];
n138 [label="ErrorType.UnknownOptionError", span="217-217", cluster="lambda expression", color=red, community=0];
n140 [label="ErrorType.MissingRequiredOptionError", span="219-219", cluster="lambda expression"];
n142 [label="ErrorType.MutuallyExclusiveSetError", span="221-221", cluster="lambda expression"];
n144 [label="ErrorType.SequenceOutOfRangeError", span="223-223", cluster="lambda expression"];
n146 [label="ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression"];
n148 [label="ErrorType.BadVerbSelectedError", span="227-227", cluster="lambda expression"];
n150 [label="throw new InvalidOperationException();", span="230-230", cluster="lambda expression"];
n147 [label="return ''ERR no-verb-selected'';", span="226-226", cluster="lambda expression"];
n151 [label="Exit lambda expression", span="209-232", cluster="lambda expression"];
n152 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()"];
n153 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n154 [label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", color=red, community=0];
n155 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n156 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n167 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n157 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n158 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n159 [label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n160 [label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n161 [label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n162 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n163 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n164 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n165 [label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n168 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)"];
n169 [label="Entry Unk.True", span="", cluster="Unk.True"];
n166 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()"];
n170 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n171 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n172 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n173 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n174 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n175 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n176 [label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n177 [label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n178 [label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n179 [label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n180 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()"];
n181 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n182 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n183 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", color=red, community=0];
n193 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n194 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n184 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n195 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)"];
n185 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n186 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n187 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n188 [label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n189 [label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n190 [label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
n191 [label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", color=red, community=0];
n192 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()"];
m0_14 [label="argument.IsNumeric()", span="61-61", cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", file="EnumerableExtensions.cs"];
m0_12 [label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .MapMaybeOrDefault(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="30-33", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="EnumerableExtensions.cs"];
m0_76 [label="Entry CommandLine.ParsingError.ParsingError(char?, string, bool)", span="36-36", cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", file="EnumerableExtensions.cs"];
m0_10 [label="return string.Compare(\r\n                argument,\r\n                option.ToOption(),\r\n                caseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase) == 0;", span="53-56", cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", file="EnumerableExtensions.cs"];
m0_24 [label="Entry string.IsNumeric()", span="40-40", cluster="string.IsNumeric()", file="EnumerableExtensions.cs"];
m0_26 [label="System.StringComparer", span="", cluster="string.IsLongOption()", file="EnumerableExtensions.cs"];
m0_65 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_66 [label="!option.IsAttributeArrayCompatible", span="157-157", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_67 [label="throw new ParserException();", span="159-159", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_68 [label="Exit CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_4 [label="return option.ConversionType == typeof(bool)\r\n                ? NameLookupResult.BooleanOptionFound\r\n                : NameLookupResult.OtherOptionFound;", span="22-24", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="EnumerableExtensions.cs", color=green, community=0];
m0_5 [label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="EnumerableExtensions.cs"];
m0_6 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="EnumerableExtensions.cs"];
m0_11 [label="Exit CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", span="51-51", cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", file="EnumerableExtensions.cs"];
m0_13 [label="Entry CommandLine.Parsing.ArgumentParser.Create(string, bool)", span="59-59", cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", file="EnumerableExtensions.cs"];
m0_17 [label="return null;", span="68-68", cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", file="EnumerableExtensions.cs"];
m0_9 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_16 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="EnumerableExtensions.cs"];
m0_18 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_19 [label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="31-31", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_20 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_21 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_15 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="EnumerableExtensions.cs"];
m0_22 [label="Maybe.Just(spec.Separator)", span="33-33", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_23 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="EnumerableExtensions.cs"];
m0_25 [label=string, span="", cluster="string.IsDash()", file="EnumerableExtensions.cs"];
m0_54 [label="Entry CommandLine.ParserException.ParserException()", span="40-40", cluster="CommandLine.ParserException.ParserException()", file="EnumerableExtensions.cs"];
m0_73 [label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_74 [label="PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="173-173", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_75 [label="Exit CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_58 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="EnumerableExtensions.cs"];
m0_59 [label="value && !addMoveNextIfTrue", span="142-142", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="EnumerableExtensions.cs"];
m0_61 [label=value, span="147-147", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="EnumerableExtensions.cs"];
m0_60 [label="return PresentParserState.Success;", span="144-144", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="EnumerableExtensions.cs"];
m0_62 [label="return PresentParserState.Success | PresentParserState.MoveOnNextElement;", span="149-149", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, file="EnumerableExtensions.cs"];
m0_63 [label="return PresentParserState.Failure;", span="152-152", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="EnumerableExtensions.cs"];
m0_64 [label="Exit CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="EnumerableExtensions.cs"];
m0_0 [label="Entry CommandLine.Parsing.ArgumentParser.ArgumentParser()", span="33-33", cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", file="EnumerableExtensions.cs"];
m0_1 [label="PostParsingState = new List<ParsingError>()", span="35-35", cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", file="EnumerableExtensions.cs"];
m0_2 [label="Exit CommandLine.Parsing.ArgumentParser.ArgumentParser()", span="33-33", cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", file="EnumerableExtensions.cs"];
m0_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="EnumerableExtensions.cs"];
m0_27 [label=string, span="", cluster="CommandLine.Parsing.LongOptionParser.LongOptionParser(bool)", file="EnumerableExtensions.cs"];
m0_7 [label="Entry char?.ToOption()", span="61-61", cluster="char?.ToOption()", file="EnumerableExtensions.cs"];
m0_8 [label="Entry string.Compare(string, string, System.StringComparison)", span="0-0", cluster="string.Compare(string, string, System.StringComparison)", file="EnumerableExtensions.cs"];
m0_51 [label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34", cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="EnumerableExtensions.cs"];
m0_53 [label="Entry CommandLine.Parsing.IArgumentEnumerator.MovePrevious()", span="36-36", cluster="CommandLine.Parsing.IArgumentEnumerator.MovePrevious()", file="EnumerableExtensions.cs"];
m0_55 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="EnumerableExtensions.cs"];
m0_56 [label="return BooleanToParserState(value, false);", span="137-137", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="EnumerableExtensions.cs"];
m0_57 [label="Exit CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="EnumerableExtensions.cs"];
m0_37 [label="Entry CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="99-99", cluster="CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="EnumerableExtensions.cs"];
m0_38 [label="Exit CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="99-99", cluster="CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="EnumerableExtensions.cs"];
m0_52 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnumerableExtensions.cs"];
m0_29 [label="Entry CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33", cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="EnumerableExtensions.cs"];
m0_30 [label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_31 [label="argument.IsNumeric()", span="86-86", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_33 [label="argument.Length > 0", span="91-91", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_34 [label="return argument.IsDash() || !argument.IsShortOption();", span="93-93", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_32 [label="return true;", span="88-88", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_35 [label="return true;", span="96-96", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_36 [label="Exit CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="EnumerableExtensions.cs"];
m0_77 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="EnumerableExtensions.cs"];
m0_39 [label="Entry CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="106-106", cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_40 [label="return GetNextInputValues(ae);", span="108-108", cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_41 [label="Exit CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="106-106", cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_42 [label="Entry CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_43 [label="IList<string> list = new List<string>()", span="113-113", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_44 [label="ae.MoveNext()", span="115-115", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_45 [label="IsInputValue(ae.Current)", span="117-117", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_46 [label="list.Add(ae.Current)", span="119-119", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_47 [label="!ae.MovePrevious()", span="127-127", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_49 [label="return list;", span="132-132", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_48 [label="throw new ParserException();", span="129-129", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_50 [label="Exit CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="EnumerableExtensions.cs"];
m0_69 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_70 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="165-165", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_71 [label="throw new ParserException();", span="167-167", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_72 [label="Exit CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="EnumerableExtensions.cs"];
m0_28 [label="System.StringComparer", span="", cluster="string.IsShortOption()", file="EnumerableExtensions.cs"];
m0_78 [label="CommandLine.Parsing.ArgumentParser", span="", file="EnumerableExtensions.cs"];
m3_43 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="KeyValuePairHelperTests.cs"];
m3_62 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="34-34", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="KeyValuePairHelperTests.cs"];
m3_10 [label="result.SequenceEqual(expected)", span="34-34", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="KeyValuePairHelperTests.cs", color=green, community=0];
m3_98 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="KeyValuePairHelperTests.cs"];
m3_52 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="KeyValuePairHelperTests.cs"];
m3_48 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="KeyValuePairHelperTests.cs"];
m3_68 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="KeyValuePairHelperTests.cs"];
m3_91 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_105 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="KeyValuePairHelperTests.cs"];
m3_61 [label="Entry T.cstr", span="", cluster="T.cstr", file="KeyValuePairHelperTests.cs"];
m3_120 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="KeyValuePairHelperTests.cs"];
m3_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_7 [label="return explodedTokens;", span="28-28", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=green, community=0, file="KeyValuePairHelperTests.cs"];
m3_8 [label="Exit lambda expression", span="22-29", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_18 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="KeyValuePairHelperTests.cs"];
m3_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="KeyValuePairHelperTests.cs"];
m3_55 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="KeyValuePairHelperTests.cs"];
m3_65 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="KeyValuePairHelperTests.cs"];
m3_71 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="KeyValuePairHelperTests.cs"];
m3_73 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="KeyValuePairHelperTests.cs"];
m3_113 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="KeyValuePairHelperTests.cs"];
m3_109 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="KeyValuePairHelperTests.cs"];
m3_79 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="KeyValuePairHelperTests.cs"];
m3_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="KeyValuePairHelperTests.cs"];
m3_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_4 [label="Entry lambda expression", span="22-29", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_64 [label="Entry Unk.GetConstructor", span="", cluster="Unk.GetConstructor", file="KeyValuePairHelperTests.cs"];
m3_47 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="KeyValuePairHelperTests.cs"];
m3_42 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="13-13", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="KeyValuePairHelperTests.cs"];
m3_57 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="KeyValuePairHelperTests.cs"];
m3_45 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="KeyValuePairHelperTests.cs"];
m3_50 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="KeyValuePairHelperTests.cs"];
m3_70 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelperTests.cs"];
m3_80 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_5 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22", cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelperTests.cs"];
m3_12 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="KeyValuePairHelperTests.cs"];
m3_6 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="KeyValuePairHelperTests.cs"];
m3_16 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_85 [label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="65-65", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_89 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="70-70", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_93 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="76-76", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_96 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="80-80", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_74 [label="Entry lambda expression", span="42-43", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_84 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_88 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_92 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_95 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_99 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_127 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_130 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_102 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_106 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_110 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_114 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_117 [label="Entry lambda expression", span="98-100", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_121 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_75 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_76 [label="Exit lambda expression", span="42-43", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_81 [label="f()", span="55-55", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_82 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_86 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_90 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_94 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_97 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_100 [label="f()", span="88-88", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_101 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_103 [label="sp.Value.IsJust()", span="92-92", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_104 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_107 [label="sp.Value.FromJust()", span="93-93", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_108 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_111 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="95-95", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_112 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_115 [label="sp.Specification.DefaultValue.FromJust()", span="96-96", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_116 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_118 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="98-100", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_119 [label="Exit lambda expression", span="98-100", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_122 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="101-101", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_123 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_128 [label=v, span="109-109", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_129 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_131 [label=d, span="110-110", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_132 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="KeyValuePairHelperTests.cs"];
m3_46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="KeyValuePairHelperTests.cs"];
m3_83 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="KeyValuePairHelperTests.cs"];
m3_72 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="KeyValuePairHelperTests.cs"];
m3_60 [label="Entry Unk.IsTypeMutable", span="", cluster="Unk.IsTypeMutable", file="KeyValuePairHelperTests.cs"];
m3_125 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="KeyValuePairHelperTests.cs"];
m3_126 [label="Entry System.Type.CreateEmptyArray()", span="77-77", cluster="System.Type.CreateEmptyArray()", file="KeyValuePairHelperTests.cs"];
m3_67 [label="Entry System.Type.GetDefaultValue()", span="82-82", cluster="System.Type.GetDefaultValue()", file="KeyValuePairHelperTests.cs"];
m3_66 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="KeyValuePairHelperTests.cs"];
m3_124 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="KeyValuePairHelperTests.cs"];
m3_77 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="KeyValuePairHelperTests.cs"];
m3_53 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="KeyValuePairHelperTests.cs"];
m3_78 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="KeyValuePairHelperTests.cs"];
m3_44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="KeyValuePairHelperTests.cs"];
m3_19 [label="var specProps = typeof(T).GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="42-43", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_22 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="51-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_23 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    factory.Return(f => f(), default(T)) ,\r\n                    new[] { new HelpRequestedError() });", span="53-56", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="63-65", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="67-71", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="73-76", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="78-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_33 [label="instance = factory.Return(f => f(), new T())", span="88-88", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_20 [label="var specs = from pt in specProps select pt.Specification", span="45-45", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_36 [label="var ctor = t.GetConstructor((from p in specProps select p.Specification.ConversionType).ToArray())", span="106-106", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_37 [label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specProps on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.GetDefaultValue()))).ToArray()", span="107-111", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_21 [label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="47-49", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_25 [label="var tokens = tokenizerResult.Value", span="61-61", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_40 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="118-125", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_39 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="115-116", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="82-82", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_31 [label="T instance", span="84-84", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_34 [label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="90-101", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_32 [label="ReflectionHelper.IsTypeMutable(typeof(T))", span="86-86", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_35 [label="var t = typeof(T)", span="105-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_38 [label="instance = (T)ctor.Invoke(values)", span="112-112", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_41 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="KeyValuePairHelperTests.cs"];
m3_69 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="KeyValuePairHelperTests.cs"];
m3_87 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="KeyValuePairHelperTests.cs"];
m3_63 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="KeyValuePairHelperTests.cs"];
m3_49 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="KeyValuePairHelperTests.cs"];
m3_58 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="KeyValuePairHelperTests.cs"];
m3_51 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="KeyValuePairHelperTests.cs"];
m3_59 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="KeyValuePairHelperTests.cs"];
m3_54 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="KeyValuePairHelperTests.cs"];
m3_133 [label="System.StringComparer", span="", file="KeyValuePairHelperTests.cs"];
m3_134 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="KeyValuePairHelperTests.cs"];
m3_135 [label="System.StringComparer", span="", file="KeyValuePairHelperTests.cs"];
m3_136 [label=optionSpecs, span="", file="KeyValuePairHelperTests.cs"];
m3_137 [label="System.Globalization.CultureInfo", span="", file="KeyValuePairHelperTests.cs"];
m3_138 [label=token, span="", file="KeyValuePairHelperTests.cs"];
m4_0 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Maybe.cs"];
m4_1 [label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", color=green, community=0, file="Maybe.cs"];
m4_2 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Maybe.cs"];
m4_4 [label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18", cluster="lambda expression", file="Maybe.cs"];
m4_7 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Maybe.cs"];
m4_13 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76", cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="Maybe.cs"];
m4_3 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Maybe.cs"];
m4_8 [label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Maybe.cs"];
m4_9 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Maybe.cs"];
m4_5 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Maybe.cs"];
m4_18 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="Maybe.cs"];
m4_11 [label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24", cluster="lambda expression", file="Maybe.cs"];
m4_10 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="Maybe.cs"];
m4_12 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="Maybe.cs"];
m4_19 [label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29", cluster="lambda expression", file="Maybe.cs"];
m4_20 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="Maybe.cs"];
m4_6 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="Maybe.cs"];
m4_15 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Maybe.cs"];
m4_16 [label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Maybe.cs"];
m4_17 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Maybe.cs"];
m4_21 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="Maybe.cs"];
m4_14 [label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81", cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="Maybe.cs"];
m6_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="UnParserExtensions.cs"];
m6_17 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs"];
m6_31 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs"];
m6_18 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="UnParserExtensions.cs"];
m6_88 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m6_89 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m6_90 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m6_51 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_52 [label="var builder = new StringBuilder()", span="60-60", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_53 [label="spec.TargetType", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_55 [label="builder.Append(FormatWithQuotesIfString(value))", span="64-64", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_57 [label="var sep = spec.SeperatorOrSpace()", span="67-67", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_59 [label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_61 [label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_62 [label="builder.TrimEndIfMatch(' ')", span="73-73", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_63 [label="return builder.ToString();", span="76-76", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_54 [label="TargetType.Scalar", span="63-63", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_56 [label="TargetType.Sequence", span="66-66", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_58 [label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_60 [label="e.MoveNext()", span="71-71", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_64 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m6_68 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs"];
m6_20 [label="Entry object.IsEmpty()", span="111-111", cluster="object.IsEmpty()", file="UnParserExtensions.cs"];
m6_70 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs"];
m6_102 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_103 [label="value == null", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_105 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_107 [label="value is string && ((string)value).Length == 0", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_109 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_104 [label="return true;", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_106 [label="return true;", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_108 [label="return true;", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_110 [label="return true;", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_111 [label="return false;", span="117-117", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_112 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m6_21 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="UnParserExtensions.cs"];
m6_82 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="UnParserExtensions.cs"];
m6_94 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs"];
m6_95 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs"];
m6_96 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="UnParserExtensions.cs"];
m6_19 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs"];
m6_77 [label="Entry T.ToMaybe<T>()", span="105-105", cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs"];
m6_81 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="UnParserExtensions.cs"];
m6_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnParserExtensions.cs"];
m6_91 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_33 [label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_28 [label="builder.Append(verb.Name).Append(' ')", span="32-32", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_44 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_48 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="52-52", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_47 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_38 [label="i.Specification.Tag == SpecificationType.Option", span="40-40", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_39 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_41 [label="i.Specification.Tag == SpecificationType.Value", span="45-45", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_45 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_49 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_72 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_71 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_73 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_79 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_84 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_83 [label="Entry lambda expression", span="86-87", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_78 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_80 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_85 [label="Exit lambda expression", span="86-87", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_92 [label="o.Separator != '\0' ? o.Separator : ' '", span="93-93", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_93 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="UnParserExtensions.cs"];
m6_98 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs"];
m6_26 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs"];
m6_24 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs"];
m6_113 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs"];
m6_50 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="UnParserExtensions.cs"];
m6_46 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="UnParserExtensions.cs"];
m6_22 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="UnParserExtensions.cs"];
m6_87 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs"];
m6_25 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs"];
m6_67 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs"];
m6_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs"];
m6_97 [label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105", cluster="CommandLine.Core.OptionSpecification.FormatName()", file="UnParserExtensions.cs"];
m6_65 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m6_74 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m6_75 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m6_76 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m6_23 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="UnParserExtensions.cs"];
m6_66 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs"];
m6_16 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs"];
m6_114 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnParserExtensions.cs"];
m6_69 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs"];
m6_99 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs"];
m6_100 [label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs"];
m6_101 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="UnParserExtensions.cs"];
m6_35 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs"];
m6_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs"];
m6_0 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_1 [label="options == null", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_3 [label="var type = options.GetType()", span="28-28", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_6 [label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_2 [label="throw new ArgumentNullException(''options'');", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_4 [label="var builder = new StringBuilder()", span="29-29", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_5 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_9 [label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_10 [label="builder.TrimEndIfMatch(' ')", span="51-51", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_11 [label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_12 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_7 [label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="40-44", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_8 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="45-48", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_13 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs"];
m6_36 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs"];
m6_115 [label=builder, span="", file="UnParserExtensions.cs"];
m6_116 [label=T, span="", file="UnParserExtensions.cs"];
m6_117 [label=sep, span="", file="UnParserExtensions.cs"];
m6_118 [label=doubQt, span="", file="UnParserExtensions.cs"];
m7_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="24-24", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="UnParserExtensionsTests.cs"];
m7_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="UnParserExtensionsTests.cs"];
m7_6 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="30-30", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs"];
m7_7 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="32-34", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs"];
m7_8 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="30-30", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="UnParserExtensionsTests.cs"];
m7_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m7_1 [label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", span="23-25", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m7_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="21-21", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="UnParserExtensionsTests.cs"];
m7_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="UnParserExtensionsTests.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n1 -> n5  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=2, style=dotted];
n7 -> n17  [key=2, style=dotted];
n7 -> n18  [key=2, style=dotted];
n7 -> n19  [key=2, style=dotted];
n7 -> n20  [key=2, style=dotted];
n7 -> n6  [key=3, color=darkorchid, style=bold, label="Property variable CSharpx.Either2Type Tag"];
n8 -> n9  [key=0, style=solid];
n8 -> n4  [key=2, style=dotted];
n8 -> n21  [key=2, style=dotted];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label=lines];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label=lines];
n8 -> n12  [key=1, style=dashed, color=darkseagreen4, label=lines];
n8 -> n13  [key=1, style=dashed, color=darkseagreen4, label=lines];
n8 -> n14  [key=1, style=dashed, color=darkseagreen4, label=lines];
n18 -> n28  [key=3, color=darkorchid, style=bold, label="Field variable T2 value"];
n9 -> n10  [key=0, style=solid];
n9 -> n5  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n5  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n5  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n5  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n5  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n5  [key=2, style=dotted];
n15 -> n6  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n3  [key=2, style=dotted];
n23 -> n19  [key=2, style=dotted];
n23 -> n32  [key=2, style=dotted];
n23 -> n33  [key=2, style=dotted];
n23 -> n20  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n4  [key=2, style=dotted];
n24 -> n21  [key=2, style=dotted];
n24 -> n34  [key=2, style=dotted];
n24 -> n26  [key=1, style=dashed, color=darkseagreen4, label=lines];
n24 -> n27  [key=1, style=dashed, color=darkseagreen4, label=lines];
n24 -> n28  [key=1, style=dashed, color=darkseagreen4, label=lines];
n24 -> n29  [key=1, style=dashed, color=darkseagreen4, label=lines];
n24 -> n30  [key=1, style=dashed, color=darkseagreen4, label=lines];
n25 -> n26  [key=0, style=solid];
n25 -> n5  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n5  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n5  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n5  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n5  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n5  [key=2, style=dotted];
n31 -> n22  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid, color=red];
n36 -> n37  [key=0, style=solid, color=red];
n36 -> n3  [key=2, style=dotted, color=red];
n36 -> n19  [key=2, style=dotted, color=red];
n36 -> n45  [key=2, style=dotted, color=red];
n36 -> n33  [key=2, style=dotted, color=red];
n36 -> n20  [key=2, style=dotted, color=red];
n37 -> n38  [key=0, style=solid, color=red];
n37 -> n4  [key=2, style=dotted, color=red];
n37 -> n21  [key=2, style=dotted, color=red];
n37 -> n34  [key=2, style=dotted, color=red];
n37 -> n39  [key=1, style=dashed, color=red, label=lines];
n37 -> n40  [key=1, style=dashed, color=red, label=lines];
n37 -> n41  [key=1, style=dashed, color=red, label=lines];
n37 -> n42  [key=1, style=dashed, color=red, label=lines];
n37 -> n43  [key=1, style=dashed, color=red, label=lines];
n38 -> n39  [key=0, style=solid];
n38 -> n5  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n5  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n5  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n5  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n5  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n5  [key=2, style=dotted];
n44 -> n35  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid, color=red];
n47 -> n48  [key=0, style=solid, color=red];
n47 -> n3  [key=2, style=dotted, color=red];
n47 -> n19  [key=2, style=dotted, color=red];
n47 -> n45  [key=2, style=dotted, color=red];
n47 -> n33  [key=2, style=dotted, color=red];
n47 -> n20  [key=2, style=dotted, color=red];
n48 -> n49  [key=0, style=solid];
n48 -> n4  [key=2, style=dotted];
n48 -> n21  [key=2, style=dotted];
n48 -> n34  [key=2, style=dotted];
n48 -> n50  [key=1, style=dashed, color=darkseagreen4, label=lines];
n48 -> n51  [key=1, style=dashed, color=darkseagreen4, label=lines];
n48 -> n52  [key=1, style=dashed, color=darkseagreen4, label=lines];
n48 -> n53  [key=1, style=dashed, color=darkseagreen4, label=lines];
n49 -> n50  [key=0, style=solid];
n49 -> n5  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n5  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n5  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n5  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n5  [key=2, style=dotted];
n54 -> n46  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid, color=red];
n56 -> n57  [key=0, style=solid, color=red];
n56 -> n60  [key=2, style=dotted, color=red];
n56 -> n61  [key=2, style=dotted, color=red];
n56 -> n33  [key=2, style=dotted, color=red];
n57 -> n58  [key=0, style=solid];
n57 -> n4  [key=2, style=dotted];
n57 -> n21  [key=2, style=dotted];
n57 -> n34  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n5  [key=2, style=dotted];
n59 -> n55  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n60  [key=2, style=dotted];
n63 -> n17  [key=2, style=dotted];
n63 -> n65  [key=1, style=dashed, color=darkseagreen4, label=sut];
n63 -> n66  [key=1, style=dashed, color=red, label=sut];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid, color=red];
n65 -> n73  [key=2, style=dotted];
n65 -> n33  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid, color=red];
n66 -> n4  [key=2, style=dotted, color=red];
n66 -> n74  [key=2, style=dotted, color=red];
n66 -> n68  [key=1, style=dashed, color=red, label=lines];
n66 -> n69  [key=1, style=dashed, color=red, label=lines];
n66 -> n70  [key=1, style=dashed, color=red, label=lines];
n66 -> n71  [key=1, style=dashed, color=red, label=lines];
n67 -> n68  [key=0, style=solid];
n67 -> n75  [key=2, style=dotted];
n67 -> n76  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n75  [key=2, style=dotted];
n68 -> n76  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n75  [key=2, style=dotted];
n69 -> n76  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n75  [key=2, style=dotted];
n70 -> n76  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n75  [key=2, style=dotted];
n71 -> n76  [key=2, style=dotted];
n72 -> n62  [key=0, style=bold, color=blue];
n77 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n60  [key=2, style=dotted];
n78 -> n17  [key=2, style=dotted];
n78 -> n80  [key=1, style=dashed, color=darkseagreen4, label=sut];
n78 -> n81  [key=1, style=dashed, color=red, label=sut];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid, color=red];
n80 -> n89  [key=2, style=dotted];
n80 -> n33  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid, color=red];
n81 -> n4  [key=2, style=dotted, color=red];
n81 -> n74  [key=2, style=dotted, color=red];
n81 -> n83  [key=1, style=dashed, color=red, label=lines];
n81 -> n84  [key=1, style=dashed, color=red, label=lines];
n81 -> n85  [key=1, style=dashed, color=red, label=lines];
n81 -> n86  [key=1, style=dashed, color=red, label=lines];
n81 -> n87  [key=1, style=dashed, color=red, label=lines];
n82 -> n83  [key=0, style=solid, color=red];
n82 -> n75  [key=2, style=dotted, color=red];
n82 -> n76  [key=2, style=dotted, color=red];
n83 -> n84  [key=0, style=solid];
n83 -> n75  [key=2, style=dotted];
n83 -> n76  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n75  [key=2, style=dotted];
n84 -> n76  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n75  [key=2, style=dotted];
n85 -> n76  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid, color=red];
n86 -> n75  [key=2, style=dotted];
n86 -> n76  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid, color=red];
n87 -> n75  [key=2, style=dotted, color=red];
n87 -> n76  [key=2, style=dotted, color=red];
n88 -> n77  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n60  [key=2, style=dotted];
n91 -> n93  [key=1, style=dashed, color=darkseagreen4, label=sut];
n91 -> n94  [key=1, style=dashed, color=darkseagreen4, label=sut];
n92 -> n93  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n93 -> n19  [key=2, style=dotted];
n93 -> n102  [key=2, style=dotted];
n93 -> n33  [key=2, style=dotted];
n93 -> n20  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n4  [key=2, style=dotted];
n94 -> n74  [key=2, style=dotted];
n94 -> n96  [key=1, style=dashed, color=red, label=lines];
n94 -> n97  [key=1, style=dashed, color=darkseagreen4, label=lines];
n94 -> n98  [key=1, style=dashed, color=darkseagreen4, label=lines];
n94 -> n99  [key=1, style=dashed, color=darkseagreen4, label=lines];
n94 -> n100  [key=1, style=dashed, color=darkseagreen4, label=lines];
n95 -> n96  [key=0, style=solid, color=red];
n95 -> n75  [key=2, style=dotted];
n95 -> n76  [key=2, style=dotted];
n96 -> n97  [key=0, style=solid, color=red];
n96 -> n75  [key=2, style=dotted, color=red];
n96 -> n76  [key=2, style=dotted, color=red];
n97 -> n98  [key=0, style=solid];
n97 -> n75  [key=2, style=dotted];
n97 -> n76  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n75  [key=2, style=dotted];
n98 -> n76  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n75  [key=2, style=dotted];
n99 -> n76  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n75  [key=2, style=dotted];
n100 -> n76  [key=2, style=dotted];
n101 -> n90  [key=0, style=bold, color=blue];
n103 -> n104  [key=0, style=solid, color=red];
n104 -> n105  [key=0, style=solid, color=red];
n104 -> n117  [key=2, style=dotted, color=red];
n104 -> n118  [key=2, style=dotted, color=red];
n104 -> n119  [key=2, style=dotted, color=red];
n104 -> n120  [key=2, style=dotted, color=red];
n104 -> n121  [key=2, style=dotted, color=red];
n104 -> n122  [key=2, style=dotted, color=red];
n104 -> n123  [key=2, style=dotted, color=red];
n104 -> n124  [key=2, style=dotted, color=red];
n104 -> n125  [key=2, style=dotted, color=red];
n104 -> n126  [key=2, style=dotted, color=red];
n104 -> n127  [key=2, style=dotted, color=red];
n104 -> n128  [key=2, style=dotted, color=red];
n104 -> n129  [key=2, style=dotted, color=red];
n104 -> n130  [key=2, style=dotted, color=red];
n104 -> n106  [key=1, style=dashed, color=red, label=fakeResult];
n105 -> n106  [key=0, style=solid, color=red];
n105 -> n133  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n135  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n137  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n139  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n141  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n143  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n145  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n105 -> n149  [key=1, style=dashed, color=red, label="CommandLine.Error"];
n106 -> n107  [key=0, style=solid];
n106 -> n131  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n136  [key=0, style=solid];
n133 -> n138  [key=0, style=solid, color=red];
n133 -> n140  [key=0, style=solid];
n133 -> n142  [key=0, style=solid];
n133 -> n144  [key=0, style=solid];
n133 -> n146  [key=0, style=solid];
n133 -> n148  [key=0, style=solid];
n133 -> n150  [key=0, style=solid];
n135 -> n151  [key=0, style=solid];
n137 -> n151  [key=0, style=solid];
n139 -> n151  [key=0, style=solid];
n141 -> n151  [key=0, style=solid];
n143 -> n151  [key=0, style=solid];
n145 -> n151  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n21  [key=2, style=dotted];
n107 -> n109  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n110  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n111  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n112  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n113  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n114  [key=1, style=dashed, color=darkseagreen4, label=lines];
n107 -> n115  [key=1, style=dashed, color=darkseagreen4, label=lines];
n108 -> n109  [key=0, style=solid];
n108 -> n5  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n5  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n5  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n5  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n5  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n5  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n114 -> n5  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n5  [key=2, style=dotted];
n116 -> n103  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n132 -> n149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
n134 -> n135  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n138 -> n139  [key=0, style=solid, color=red];
n140 -> n141  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n150 -> n152  [key=2, style=dotted];
n147 -> n151  [key=0, style=solid];
n151 -> n132  [key=0, style=bold, color=blue];
n153 -> n154  [key=0, style=solid, color=red];
n154 -> n155  [key=0, style=solid, color=red];
n154 -> n117  [key=2, style=dotted, color=red];
n154 -> n32  [key=2, style=dotted, color=red];
n154 -> n119  [key=2, style=dotted, color=red];
n154 -> n125  [key=2, style=dotted, color=red];
n154 -> n121  [key=2, style=dotted, color=red];
n154 -> n130  [key=2, style=dotted, color=red];
n155 -> n156  [key=0, style=solid];
n155 -> n167  [key=2, style=dotted];
n156 -> n157  [key=0, style=solid];
n156 -> n4  [key=2, style=dotted];
n156 -> n21  [key=2, style=dotted];
n156 -> n34  [key=2, style=dotted];
n156 -> n158  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n159  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n160  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n161  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n162  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n163  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n164  [key=1, style=dashed, color=darkseagreen4, label=lines];
n156 -> n165  [key=1, style=dashed, color=darkseagreen4, label=lines];
n157 -> n158  [key=0, style=solid];
n157 -> n168  [key=2, style=dotted];
n157 -> n169  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n168  [key=2, style=dotted];
n158 -> n169  [key=2, style=dotted];
n159 -> n160  [key=0, style=solid];
n159 -> n5  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n5  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n5  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n5  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n5  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n5  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n5  [key=2, style=dotted];
n166 -> n153  [key=0, style=bold, color=blue];
n170 -> n171  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n171 -> n117  [key=2, style=dotted];
n171 -> n118  [key=2, style=dotted];
n171 -> n129  [key=2, style=dotted];
n171 -> n130  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n167  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n173 -> n4  [key=2, style=dotted];
n173 -> n21  [key=2, style=dotted];
n173 -> n34  [key=2, style=dotted];
n173 -> n175  [key=1, style=dashed, color=darkseagreen4, label=lines];
n173 -> n176  [key=1, style=dashed, color=darkseagreen4, label=lines];
n173 -> n177  [key=1, style=dashed, color=darkseagreen4, label=lines];
n173 -> n178  [key=1, style=dashed, color=darkseagreen4, label=lines];
n173 -> n179  [key=1, style=dashed, color=darkseagreen4, label=lines];
n174 -> n175  [key=0, style=solid];
n174 -> n168  [key=2, style=dotted];
n174 -> n169  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n168  [key=2, style=dotted];
n175 -> n169  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n5  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n177 -> n5  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n5  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n5  [key=2, style=dotted];
n180 -> n170  [key=0, style=bold, color=blue];
n181 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid, color=red];
n182 -> n193  [key=2, style=dotted];
n182 -> n194  [key=2, style=dotted];
n183 -> n184  [key=0, style=solid, color=red];
n183 -> n117  [key=2, style=dotted, color=red];
n183 -> n118  [key=2, style=dotted, color=red];
n183 -> n129  [key=2, style=dotted, color=red];
n183 -> n195  [key=2, style=dotted, color=red];
n184 -> n185  [key=0, style=solid];
n184 -> n167  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n4  [key=2, style=dotted];
n185 -> n21  [key=2, style=dotted];
n185 -> n34  [key=2, style=dotted];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label=lines];
n185 -> n188  [key=1, style=dashed, color=darkseagreen4, label=lines];
n185 -> n189  [key=1, style=dashed, color=darkseagreen4, label=lines];
n185 -> n190  [key=1, style=dashed, color=darkseagreen4, label=lines];
n185 -> n191  [key=1, style=dashed, color=red, label=lines];
n186 -> n187  [key=0, style=solid];
n186 -> n168  [key=2, style=dotted];
n186 -> n169  [key=2, style=dotted];
n187 -> n188  [key=0, style=solid];
n187 -> n168  [key=2, style=dotted];
n187 -> n169  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n5  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n5  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid, color=red];
n190 -> n5  [key=2, style=dotted];
n191 -> n192  [key=0, style=solid, color=red];
n191 -> n5  [key=2, style=dotted, color=red];
n192 -> n181  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_14 -> m0_24  [key=2, style=dotted];
m0_12 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_16  [key=2, style=dotted];
m0_12 -> m0_17  [key=2, style=dotted];
m0_12 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_8  [key=2, style=dotted];
m0_26 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_70  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<int, TSource>> Index"];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_54  [key=2, style=dotted];
m0_68 -> m0_65  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [key=2, style=dotted];
m0_5 -> m0_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<int, int, System.Exception> errorSelector"];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_11 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_13 -> m0_11  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_13 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_13 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_13 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_13 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_17 -> m0_23  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_25  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=0, style=solid];
m0_18 -> m0_26  [key=2, style=dotted];
m0_19 -> m0_23  [key=0, style=solid];
m0_19 -> m0_27  [key=2, style=dotted];
m0_19 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_20 -> m0_28  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_21 -> m0_23  [key=0, style=solid];
m0_21 -> m0_29  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_15 -> m0_23  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=2, style=dotted];
m0_23 -> m0_13  [key=0, style=bold, color=blue];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_25 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_77  [key=2, style=dotted];
m0_75 -> m0_73  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_61  [key=1, style=dashed, color=red, label=bool];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=0, style=solid, color=red];
m0_61 -> m0_62  [key=0, style=solid, color=red];
m0_61 -> m0_63  [key=0, style=solid, color=red];
m0_60 -> m0_64  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid, color=red];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_58  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_1 -> m0_4  [key=1, style=dashed, color=green, label=option];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid, color=green];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_5  [key=0, style=solid];
m0_27 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=2, style=dotted];
m0_57 -> m0_55  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_37  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_30 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=0, style=solid];
m0_31 -> m0_24  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_34 -> m0_25  [key=2, style=dotted];
m0_34 -> m0_28  [key=2, style=dotted];
m0_32 -> m0_36  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_30  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m0_42 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m0_42 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m0_42 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_3  [key=2, style=dotted];
m0_43 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_43 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_47  [key=0, style=solid];
m0_44 -> m0_51  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_45 -> m0_30  [key=2, style=dotted];
m0_46 -> m0_44  [key=0, style=solid];
m0_46 -> m0_52  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=0, style=solid];
m0_47 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_48 -> m0_50  [key=0, style=solid];
m0_48 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_42  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_54  [key=2, style=dotted];
m0_72 -> m0_69  [key=0, style=bold, color=blue];
m0_28 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_78 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.ArgumentParser"];
m0_78 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.ArgumentParser"];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_10 -> m3_6  [key=2, style=dotted, color=green];
m3_13 -> m3_11  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_9 -> m3_13  [key=2, style=dotted, color=green];
m3_9 -> m3_14  [key=2, style=dotted, color=green];
m3_9 -> m3_5  [key=2, style=dotted, color=green];
m3_8 -> m3_9  [key=0, style=solid, color=green];
m3_8 -> m3_10  [key=1, style=dashed, color=green, label=expected];
m3_8 -> m3_12  [key=2, style=dotted];
m3_8 -> m3_4  [key=0, style=bold, color=blue];
m3_11 -> m3_7  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_0 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_0 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_0 -> m3_3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_3 -> m3_6  [key=2, style=dotted, color=green];
m3_3 -> m3_19  [key=0, style=solid];
m3_3 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_3 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<System.Func<T>>"];
m3_3 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m3_3 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_3 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_3 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_3 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m3_3 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m3_3 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m3_3 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_3 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_3 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<System.Func<T>>"];
m3_1 -> m3_3  [key=1, style=dashed, color=green, label=expected];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1 -> m3_1  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_4 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_4 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_80 -> m3_81  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_87  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_91  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_91  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_98  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_77  [key=2, style=dotted];
m3_75 -> m3_78  [key=2, style=dotted];
m3_75 -> m3_79  [key=2, style=dotted];
m3_76 -> m3_74  [key=0, style=bold, color=blue];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [key=2, style=dotted];
m3_82 -> m3_80  [key=0, style=bold, color=blue];
m3_86 -> m3_84  [key=0, style=bold, color=blue];
m3_90 -> m3_88  [key=0, style=bold, color=blue];
m3_94 -> m3_92  [key=0, style=bold, color=blue];
m3_97 -> m3_95  [key=0, style=bold, color=blue];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_83  [key=2, style=dotted];
m3_101 -> m3_99  [key=0, style=bold, color=blue];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_105  [key=2, style=dotted];
m3_104 -> m3_102  [key=0, style=bold, color=blue];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [key=2, style=dotted];
m3_108 -> m3_106  [key=0, style=bold, color=blue];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [key=2, style=dotted];
m3_111 -> m3_105  [key=2, style=dotted];
m3_112 -> m3_110  [key=0, style=bold, color=blue];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_109  [key=2, style=dotted];
m3_116 -> m3_114  [key=0, style=bold, color=blue];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_113  [key=2, style=dotted];
m3_118 -> m3_120  [key=2, style=dotted];
m3_119 -> m3_117  [key=0, style=bold, color=blue];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=2, style=dotted];
m3_122 -> m3_125  [key=2, style=dotted];
m3_122 -> m3_126  [key=2, style=dotted];
m3_123 -> m3_121  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_127  [key=0, style=bold, color=blue];
m3_131 -> m3_132  [key=0, style=solid];
m3_132 -> m3_130  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_42  [key=2, style=dotted];
m3_19 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_19 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m3_19 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m3_19 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m3_19 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_45  [key=2, style=dotted];
m3_22 -> m3_46  [key=2, style=dotted];
m3_22 -> m3_47  [key=2, style=dotted];
m3_23 -> m3_41  [key=0, style=solid];
m3_23 -> m3_48  [key=2, style=dotted];
m3_23 -> m3_49  [key=2, style=dotted];
m3_23 -> m3_50  [key=2, style=dotted];
m3_23 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_51  [key=2, style=dotted];
m3_24 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_52  [key=2, style=dotted];
m3_26 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_26 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m3_26 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_53  [key=2, style=dotted];
m3_27 -> m3_54  [key=2, style=dotted];
m3_27 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label=pt];
m3_27 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_27 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m3_27 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_55  [key=2, style=dotted];
m3_28 -> m3_54  [key=2, style=dotted];
m3_28 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m3_28 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_28 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m3_28 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> n120  [key=2, style=dotted];
m3_29 -> m3_57  [key=2, style=dotted];
m3_29 -> m3_58  [key=2, style=dotted];
m3_29 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=token];
m3_29 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_29 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m3_29 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_61  [key=2, style=dotted];
m3_33 -> m3_48  [key=2, style=dotted];
m3_33 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label=pt];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_63  [key=2, style=dotted];
m3_36 -> m3_64  [key=2, style=dotted];
m3_36 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_36 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_65  [key=2, style=dotted];
m3_37 -> m3_66  [key=2, style=dotted];
m3_37 -> m3_67  [key=2, style=dotted];
m3_37 -> m3_48  [key=2, style=dotted];
m3_37 -> m3_68  [key=2, style=dotted];
m3_37 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=prms];
m3_37 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_37 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_43  [key=2, style=dotted];
m3_21 -> m3_44  [key=2, style=dotted];
m3_21 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m3_21 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m3_21 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m3_21 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_72  [key=2, style=dotted];
m3_40 -> m3_73  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_70  [key=2, style=dotted];
m3_39 -> m3_71  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_59  [key=2, style=dotted];
m3_30 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m3_30 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m3_31 -> m3_32  [key=0, style=solid];
m3_34 -> m3_39  [key=0, style=solid];
m3_34 -> m3_62  [key=2, style=dotted];
m3_34 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=instance];
m3_34 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=instance];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_35  [key=0, style=solid];
m3_32 -> m3_60  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_69  [key=2, style=dotted];
m3_38 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=instance];
m3_41 -> m3_3  [key=0, style=bold, color=blue];
m3_133 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_133 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_133 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_133 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_134 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_134 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m3_135 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_135 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m3_136 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m3_137 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m3_137 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m3_138 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label=token];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=2, style=dotted, color=green];
m4_1 -> m4_4  [key=2, style=dotted, color=green];
m4_1 -> m4_5  [key=2, style=dotted, color=green];
m4_1 -> m4_6  [key=2, style=dotted, color=green];
m4_1 -> m4_7  [key=2, style=dotted, color=green];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_6  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m4_5 -> m4_3  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_6  [key=2, style=dotted];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_14  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_17 -> m4_15  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_77  [key=2, style=dotted];
m6_89 -> m6_18  [key=2, style=dotted];
m6_89 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_90 -> m6_88  [key=0, style=bold, color=blue];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_51 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_51 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_51 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_51 -> m6_94  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_16  [key=2, style=dotted];
m6_52 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_52 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_52 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_52 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_56  [key=0, style=solid];
m6_55 -> m6_63  [key=0, style=solid];
m6_55 -> m6_65  [key=2, style=dotted];
m6_55 -> m6_66  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_67  [key=2, style=dotted];
m6_57 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m6_57 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=sep];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_68  [key=2, style=dotted];
m6_59 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=e];
m6_61 -> m6_60  [key=0, style=solid];
m6_61 -> m6_70  [key=2, style=dotted];
m6_61 -> m6_66  [key=2, style=dotted];
m6_61 -> m6_31  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_24  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_25  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_58 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=fmtWithQuotesIfStr];
m6_58 -> m6_58  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<object, object> fmtWithQuotesIfStr"];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=0, style=solid];
m6_60 -> m6_69  [key=2, style=dotted];
m6_64 -> m6_51  [key=0, style=bold, color=blue];
m6_20 -> m6_103  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m6_20 -> m6_111  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_102 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_102 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_105  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=0, style=solid];
m6_105 -> m6_15  [key=2, style=dotted];
m6_105 -> m6_113  [key=2, style=dotted];
m6_105 -> m6_114  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_109  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_111  [key=0, style=solid];
m6_109 -> m6_68  [key=2, style=dotted];
m6_109 -> m6_69  [key=2, style=dotted];
m6_104 -> m6_112  [key=0, style=solid];
m6_106 -> m6_112  [key=0, style=solid];
m6_108 -> m6_112  [key=0, style=solid];
m6_110 -> m6_112  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_112 -> m6_102  [key=0, style=bold, color=blue];
m6_94 -> m6_95  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_16  [key=2, style=dotted];
m6_95 -> m6_97  [key=2, style=dotted];
m6_95 -> m6_30  [key=2, style=dotted];
m6_95 -> m6_31  [key=2, style=dotted];
m6_95 -> m6_51  [key=2, style=dotted];
m6_95 -> m6_98  [key=2, style=dotted];
m6_95 -> m6_25  [key=2, style=dotted];
m6_96 -> m6_94  [key=0, style=bold, color=blue];
m6_91 -> m6_92  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=2, style=dotted];
m6_33 -> m6_36  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_28 -> m6_31  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_44 -> m6_30  [key=2, style=dotted];
m6_44 -> m6_31  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_50  [key=2, style=dotted];
m6_48 -> m6_30  [key=2, style=dotted];
m6_48 -> m6_31  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m6_34 -> m6_32  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_37  [key=0, style=bold, color=blue];
m6_41 -> m6_42  [key=0, style=solid];
m6_42 -> m6_40  [key=0, style=bold, color=blue];
m6_45 -> m6_43  [key=0, style=bold, color=blue];
m6_49 -> m6_47  [key=0, style=bold, color=blue];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_65  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_73 -> m6_71  [key=0, style=bold, color=blue];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [key=2, style=dotted];
m6_79 -> m6_82  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=2, style=dotted];
m6_84 -> m6_81  [key=2, style=dotted];
m6_84 -> m6_70  [key=2, style=dotted];
m6_84 -> m6_87  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_80 -> m6_78  [key=0, style=bold, color=blue];
m6_85 -> m6_83  [key=0, style=bold, color=blue];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_91  [key=0, style=bold, color=blue];
m6_65 -> m6_74  [key=0, style=solid];
m6_65 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_65 -> m6_51  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m6_65 -> m6_58  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_74 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m6_74 -> m6_74  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, string> doubQt"];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_77  [key=2, style=dotted];
m6_75 -> m6_18  [key=2, style=dotted];
m6_75 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_76 -> m6_65  [key=0, style=bold, color=blue];
m6_99 -> m6_100  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_87  [key=2, style=dotted];
m6_101 -> m6_99  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=T];
m6_0 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_15  [key=2, style=dotted];
m6_3 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m6_3 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=type];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_19  [key=2, style=dotted];
m6_6 -> m6_20  [key=2, style=dotted];
m6_6 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_6 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m6_6 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=specs];
m6_2 -> m6_13  [key=0, style=solid];
m6_2 -> m6_14  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_16  [key=2, style=dotted];
m6_4 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_4 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_17  [key=2, style=dotted];
m6_5 -> m6_18  [key=2, style=dotted];
m6_5 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_23  [key=2, style=dotted];
m6_9 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_24  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_23  [key=2, style=dotted];
m6_11 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_25  [key=2, style=dotted];
m6_12 -> m6_26  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_21  [key=2, style=dotted];
m6_7 -> m6_22  [key=2, style=dotted];
m6_7 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_7 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=info];
m6_7 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_21  [key=2, style=dotted];
m6_8 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_8 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=info];
m6_8 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m6_13 -> m6_0  [key=0, style=bold, color=blue];
m6_115 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_115 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_115 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m6_116 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m6_117 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m6_118 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_3  [key=2, style=dotted];
m7_7 -> m7_4  [key=2, style=dotted];
m7_7 -> m7_5  [key=2, style=dotted];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
}
