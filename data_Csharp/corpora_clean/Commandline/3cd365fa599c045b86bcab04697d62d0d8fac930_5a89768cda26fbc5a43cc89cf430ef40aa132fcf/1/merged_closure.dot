digraph  {
m0_51 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="ErrorHandling.cs", label="onFail()", span="197-197"];
m0_9 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="var firstArg = arguments.First()", prediction=0, span="24-24"];
m0_10 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="Func<string, bool> preprocCompare = command =>\r\n                        nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", prediction=0, span="26-28"];
m0_11 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="var verbs = Verb.SelectFromTypes(types)", prediction=2, span="30-30"];
m0_12 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="return preprocCompare(''help'')\r\n                    ? MakeNotParsed(types,\r\n                        MakeHelpVerbRequestedError(verbs,\r\n                            arguments.Skip(1).FirstOrDefault() ?? string.Empty, nameComparer))\r\n                    : preprocCompare(''version'')\r\n                        ? MakeNotParsed(types, new VersionRequestedError())\r\n                        : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", prediction=0, span="32-38"];
m0_7 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m0_62 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", color=green, community=0, file="ErrorHandling.cs", label="object verbInstance = null", prediction=4, span="227-227"];
m0_63 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="229-229"];
m0_217 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="ErrorHandling.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m0_31 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="304-304"];
m0_225 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="277-277"];
m0_30 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m0_34 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="158-158"];
m0_29 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ErrorHandling.cs", label="return DoParseArguments(args, options);", span="139-139"];
m0_148 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", span="36-36"];
m0_26 [cluster="string.Concat(string, string)", file="ErrorHandling.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_27 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="ErrorHandling.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", prediction=5, span="54-64"];
m0_28 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="ErrorHandling.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46"];
m0_118 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ErrorHandling.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="86-86"];
m0_44 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", prediction=0, span="58-58"];
m0_45 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="58-58"];
m0_46 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="64-64"];
m0_47 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="v.Item2", prediction=0, span="64-64"];
m0_48 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="64-64"];
m0_49 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", color=green, community=0, file="ErrorHandling.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", prediction=0, span="72-78"];
m0_53 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ErrorHandling.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m0_50 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ErrorHandling.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67"];
m0_52 [cluster="Unk.ToMaybe", file="ErrorHandling.cs", label="Entry Unk.ToMaybe", span=""];
m0_54 [cluster="Unk.Return", file="ErrorHandling.cs", label="Entry Unk.Return", span=""];
m0_149 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", span="91-91"];
m0_120 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326"];
m0_123 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var hadError = false", span="328-328"];
m0_124 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var optionMap = OptionMap.Create(options, _settings)", span="329-329"];
m0_126 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="331-331"];
m0_127 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var arguments = new StringArrayEnumerator(args)", span="333-333"];
m0_133 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var result = parser.Parse(arguments, optionMap, options)", span="345-345"];
m0_135 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="348-348"];
m0_142 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="hadError |= !optionMap.EnforceRules()", span="367-367"];
m0_125 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="optionMap.SetDefaults()", span="330-330"];
m0_139 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="valueMapper.CanReceiveValues", span="358-358"];
m0_140 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="!valueMapper.MapValueItem(argument)", span="360-360"];
m0_128 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="arguments.MoveNext()", span="334-334"];
m0_129 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var argument = arguments.Current", span="336-336"];
m0_138 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="arguments.MoveNext()", span="355-355"];
m0_130 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="string.IsNullOrEmpty(argument)", span="337-337"];
m0_131 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="342-342"];
m0_132 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="parser != null", span="343-343"];
m0_134 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="346-346"];
m0_137 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="353-353"];
m0_136 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="hadError = true", span="349-349"];
m0_141 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="hadError = true", span="362-362"];
m0_143 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="return !hadError;", span="369-369"];
m0_144 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326"];
m0_151 [cluster="CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", span="99-99"];
m0_21 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="90-96"];
m0_19 [cluster="lambda expression", file="ErrorHandling.cs", label="with.HelpWriter = Console.Error", span="94-94"];
m0_194 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
m0_86 [cluster="string.IsNullOrEmpty(string)", file="ErrorHandling.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m0_237 [cluster="CommandLine.ParserSettings.Dispose()", file="ErrorHandling.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="173-173"];
m0_176 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482"];
m0_210 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="string helpText", span="484-484"];
m0_211 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="verb == null", span="485-485"];
m0_212 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="487-487"];
m0_213 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="491-491"];
m0_214 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="_settings.HelpWriter != null", span="494-494"];
m0_215 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="_settings.HelpWriter.Write(helpText)", span="496-496"];
m0_216 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482"];
m0_101 [cluster="CommandLine.ParserState.ParserState()", file="ErrorHandling.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m0_15 [cluster="CommandLine.Parser.Parser(bool)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.Parser(bool)", span="89-89"];
m0_55 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="73-73"];
m0_218 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="502-504"];
m0_220 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs", label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="510-514"];
m0_219 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs", label="return;", span="506-506"];
m0_221 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="500-500"];
m0_61 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="225-225"];
m0_119 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425"];
m0_184 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="var caseSensitive = _settings.CaseSensitive", span="427-427"];
m0_185 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label=args, span="428-428"];
m0_186 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="helpOption.ShortName != null", span="430-430"];
m0_187 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="432-432"];
m0_189 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="438-438"];
m0_190 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="443-443"];
m0_192 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="return false;", span="449-449"];
m0_188 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="return true;", span="434-434"];
m0_191 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="return true;", span="445-445"];
m0_193 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425"];
m0_58 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="76-76"];
m0_59 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", prediction=9, span="76-76"];
m0_60 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="76-76"];
m0_64 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ErrorHandling.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_65 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ErrorHandling.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m0_66 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m0_68 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<System.Type>", span=""];
m0_70 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.Globalization.CultureInfo", span=""];
m0_67 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.StringComparer", span=""];
m0_69 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span=""];
m0_71 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span=""];
m0_72 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="ErrorHandling.cs", label=firstArg, span=""];
m0_223 [cluster="object.HasVerbHelp()", file="ErrorHandling.cs", label="Entry object.HasVerbHelp()", span="44-44"];
m0_183 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_150 [cluster="CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", span="59-59"];
m0_107 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="306-306"];
m0_110 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="312-312"];
m0_112 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="315-315"];
m0_116 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="return DoParseArgumentsCore(args, options);", span="323-323"];
m0_108 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="var helpWriter = _settings.HelpWriter", span="307-307"];
m0_109 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="pair != null && helpWriter != null", span="309-309"];
m0_113 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="helpWriter.Write(helpText)", span="316-316"];
m0_111 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="string helpText", span="314-314"];
m0_115 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="return true;", span="320-320"];
m0_114 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="return false;", span="317-317"];
m0_117 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="304-304"];
m0_56 [cluster="lambda expression", color=green, community=0, file="ErrorHandling.cs", label="nameComparer.Equals(v.Item1.Name, verb)", prediction=10, span="73-73"];
m0_25 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="517-517"];
m0_41 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372"];
m0_16 [cluster="System.Func<T, TResult>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_17 [cluster="lambda expression", file="ErrorHandling.cs", label="with.CaseSensitive = false", span="92-92"];
m0_18 [cluster="lambda expression", file="ErrorHandling.cs", label="with.MutuallyExclusive = false", span="93-93"];
m0_20 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ErrorHandling.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
m0_227 [cluster="lambda expression", file="ErrorHandling.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="513-513"];
m0_226 [cluster="lambda expression", file="ErrorHandling.cs", label="Entry lambda expression", span="513-513"];
m0_228 [cluster="lambda expression", file="ErrorHandling.cs", label="Exit lambda expression", span="513-513"];
m0_8 [cluster="CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", file="ErrorHandling.cs", label="Entry CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", span="40-40"];
m0_23 [cluster="CommandLine.Parser.~Parser()", color=green, community=0, file="ErrorHandling.cs", label="Dispose(false)", prediction=0, span="105-105"];
m0_22 [cluster="CommandLine.Parser.~Parser()", file="ErrorHandling.cs", label="Entry CommandLine.Parser.~Parser()", span="103-103"];
m0_24 [cluster="CommandLine.Parser.~Parser()", file="ErrorHandling.cs", label="Exit CommandLine.Parser.~Parser()", span="103-103"];
m0_13 [cluster="System.Action<T>.Invoke(T)", file="ErrorHandling.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_35 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="159-159"];
m0_38 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="165-165"];
m0_36 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", color=green, community=0, file="ErrorHandling.cs", label="object verbInstance = null", prediction=12, span="161-161"];
m0_37 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs", label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="163-163"];
m0_39 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", color=green, community=0, file="ErrorHandling.cs", label="return result;", prediction=0, span="167-167"];
m0_40 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="155-155"];
m0_43 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ErrorHandling.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m0_57 [cluster="System.Action.Invoke()", file="ErrorHandling.cs", label="Entry System.Action.Invoke()", span="0-0"];
m0_154 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", span="374-374"];
m0_155 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="375-375"];
m0_156 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="args.Length == 0", span="376-376"];
m0_158 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="380-380"];
m0_160 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="386-386"];
m0_161 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="389-389"];
m0_163 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="var verbOption = optionMap[args.First()]", span="395-395"];
m0_166 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="402-402"];
m0_168 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="verbInstance = verbOption.GetValue(options)", span="408-408"];
m0_170 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="verbInstance = verbOption.CreateInstance(options)", span="412-412"];
m0_171 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="415-415"];
m0_173 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="DisplayHelpVerbText(options, helpInfo, args.First())", span="419-419"];
m0_157 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="helpInfo != null || _settings.HelpWriter != null", span="378-378"];
m0_165 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="helpInfo != null", span="400-400"];
m0_172 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="!verbResult && helpInfo != null", span="416-416"];
m0_159 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="return false;", span="383-383"];
m0_162 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="return false;", span="392-392"];
m0_164 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="verbOption == null", span="398-398"];
m0_167 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="return false;", span="405-405"];
m0_169 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="verbInstance == null", span="409-409"];
m0_174 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="return verbResult;", span="422-422"];
m0_175 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372"];
m0_179 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_182 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m0_180 [cluster="CommandLine.Infrastructure.OptionInfo.GetValue(object)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionInfo.GetValue(object)", span="141-141"];
m0_6 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ErrorHandling.cs", label="_settings = settings", span="71-71"];
m0_224 [cluster="object.HasVerbs()", file="ErrorHandling.cs", label="Entry object.HasVerbs()", span="34-34"];
m0_32 [cluster="Unk.Select", file="ErrorHandling.cs", label="Entry Unk.Select", span=""];
m0_33 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ErrorHandling.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m0_104 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299"];
m0_105 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs", label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="301-301"];
m0_106 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299"];
m0_122 [cluster="System.IO.TextWriter.Write(string)", file="ErrorHandling.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m0_78 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262"];
m0_79 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="found = false", span="264-264"];
m0_80 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="string.IsNullOrEmpty(verb)", span="265-265"];
m0_81 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="return target;", span="267-267"];
m0_82 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="270-270"];
m0_84 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="272-272"];
m0_83 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="found = pair != null", span="271-271"];
m0_85 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262"];
m0_152 [cluster="CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", span="68-68"];
m0_153 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162"];
m0_178 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452"];
m0_196 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="var helpWriter = _settings.HelpWriter", span="454-454"];
m0_197 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="helpInfo != null && helpWriter != null", span="455-455"];
m0_198 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="457-457"];
m0_199 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="var verb = args.FirstOrDefault()", span="460-460"];
m0_201 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="var verbOption = optionMap[verb]", span="463-463"];
m0_203 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="verbOption.GetValue(options) == null", span="466-466"];
m0_204 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="verbOption.CreateInstance(options)", span="469-469"];
m0_205 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="474-474"];
m0_207 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="return false;", span="479-479"];
m0_200 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="verb != null", span="461-461"];
m0_202 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="verbOption != null", span="464-464"];
m0_206 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="return true;", span="475-475"];
m0_208 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452"];
m0_177 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="135-135"];
m0_147 [cluster="CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="45-45"];
m0_89 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275"];
m0_90 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="!options.CanReceiveParserState()", span="277-277"];
m0_92 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="282-282"];
m0_93 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="property.GetValue(options, null) == null", span="285-285"];
m0_94 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="property.SetValue(options, new ParserState(), null)", span="288-288"];
m0_95 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="291-291"];
m0_96 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label=errors, span="293-293"];
m0_91 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="return;", span="279-279"];
m0_97 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="parserState.Errors.Add(error)", span="295-295"];
m0_98 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275"];
m0_121 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="ErrorHandling.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="106-106"];
m0_14 [cluster="CommandLine.Parser.Parser(bool)", file="ErrorHandling.cs", label="Entry CommandLine.Parser.Parser(bool)", span="89-89"];
m0_0 [cluster="CommandLine.Parser.Parser()", file="ErrorHandling.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m0_1 [cluster="CommandLine.Parser.Parser()", color=green, community=0, file="ErrorHandling.cs", label="_settings = new ParserSettings()", prediction=14, span="57-57"];
m0_2 [cluster="CommandLine.Parser.Parser()", color=green, community=0, file="ErrorHandling.cs", label="Exit CommandLine.Parser.Parser()", prediction=0, span="55-55"];
m0_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ErrorHandling.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
m0_181 [cluster="CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", span="146-146"];
m0_209 [cluster="string.Compare(string, string, System.StringComparison)", file="ErrorHandling.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m0_88 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ErrorHandling.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m0_145 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", span="102-102"];
m0_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ErrorHandling.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_5 [cluster="System.Func<TResult>.Invoke()", file="ErrorHandling.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_195 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
m0_229 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="ErrorHandling.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="337-337"];
m0_102 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ErrorHandling.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m0_146 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="ErrorHandling.cs", label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167"];
m0_222 [cluster="object.HasHelp()", file="ErrorHandling.cs", label="Entry object.HasHelp()", span="39-39"];
m0_87 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ErrorHandling.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199"];
m0_103 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ErrorHandling.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_77 [cluster="System.GC.SuppressFinalize(object)", file="ErrorHandling.cs", label="System.StringComparer", span=""];
m0_99 [cluster="object.CanReceiveParserState()", file="ErrorHandling.cs", label="Entry object.CanReceiveParserState()", span="49-49"];
m0_73 [cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m0_74 [cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs", label="System.StringComparer", span=""];
m0_75 [cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m0_76 [cluster="CommandLine.Parser.Dispose()", file="ErrorHandling.cs", label=string, span=""];
m0_230 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label=_disposed, span="519-519"];
m0_232 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label=disposing, span="524-524"];
m0_231 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="return;", span="521-521"];
m0_233 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="_settings != null", span="526-526"];
m0_234 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="_settings.Dispose()", span="528-528"];
m0_235 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="_disposed = true", span="531-531"];
m0_236 [cluster="CommandLine.Parser.Dispose(bool)", file="ErrorHandling.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="517-517"];
m0_100 [cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ErrorHandling.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m0_238 [file="ErrorHandling.cs", label="CommandLine.Parser", span=""];
m0_239 [file="ErrorHandling.cs", label=object, span=""];
m1_65 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_41 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_66 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m1_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="56-56"];
m1_64 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m1_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="return new DefaultSentenceBuilder();", span="23-23"];
m1_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="21-21"];
m1_51 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="135-159"];
m1_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="60-60"];
m1_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="60-60"];
m1_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="60-60"];
m1_7 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="65-65"];
m1_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="65-65"];
m1_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="65-65"];
m1_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="72-74"];
m1_11 [cluster="lambda expression", file="SentenceBuilder.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="72-74"];
m1_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="72-74"];
m1_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="80-80"];
m1_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Display version information.''", span="80-80"];
m1_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="80-80"];
m1_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="87-120"];
m1_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="89-89"];
m1_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="92-92"];
m1_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="94-95"];
m1_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="97-97"];
m1_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="99-99"];
m1_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="104-104"];
m1_31 [cluster="lambda expression", file="SentenceBuilder.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="109-109"];
m1_34 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="115-115"];
m1_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="91-91"];
m1_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="93-93"];
m1_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="96-96"];
m1_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="98-98"];
m1_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="103-103"];
m1_30 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.SequenceOutOfRangeError", span="108-108"];
m1_33 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadVerbSelectedError", span="114-114"];
m1_35 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.NoVerbSelectedError", span="116-116"];
m1_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="100-102"];
m1_29 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="105-107"];
m1_32 [cluster="lambda expression", file="SentenceBuilder.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with few items than required.'');", span="110-113"];
m1_36 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''No verb selected.'';", span="117-117"];
m1_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="87-120"];
m1_38 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="119-119"];
m1_42 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="128-161"];
m1_43 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132"];
m1_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147"];
m1_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="160-160"];
m1_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="128-161"];
m1_52 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139"];
m1_53 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="140-140"];
m1_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="135-159"];
m1_62 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_40 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m1_48 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m1_57 [cluster="Unk.JoinTo", file="SentenceBuilder.cs", label="Entry Unk.JoinTo", span=""];
m1_39 [cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m1_67 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_63 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_50 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m1_60 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m1_61 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_49 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m1_58 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m1_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_59 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m1_68 [file="SentenceBuilder.cs", label=bySet, span=""];
m0_9 -> m0_23  [color=green, key=1, label=firstArg, style=dashed];
m0_10 -> m0_23  [color=green, key=1, label=string, style=dashed];
m0_10 -> m0_12  [color=green, key=1, label=preprocCompare, style=dashed];
m0_63 -> m0_63  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m0_31 -> m0_110  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_31 -> m0_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_31 -> m0_116  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_27 -> m0_35  [color=green, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_38  [color=green, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_46  [color=green, key=1, label="lambda expression", style=dashed];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_44 -> m0_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_44 -> m0_49  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m0_44 -> m0_51  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m0_49 -> m0_55  [color=green, key=1, label="lambda expression", style=dashed];
m0_49 -> m0_58  [color=green, key=1, label="lambda expression", style=dashed];
m0_120 -> m0_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_126 -> m0_139  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m0_126 -> m0_140  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m0_127 -> m0_138  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_133 -> m0_137  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_129 -> m0_140  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_131 -> m0_135  [color=darkseagreen4, key=1, label=parser, style=dashed];
m0_21 -> m0_39  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m0_21 -> m0_44  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_19 -> m0_56  [color=green, key=1, label=string, style=dashed];
m0_176 -> m0_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_176 -> m0_212  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_176 -> m0_213  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_212 -> m0_215  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m0_213 -> m0_215  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m0_55 -> m0_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_55 -> m0_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_220 -> m0_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_119 -> m0_185  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_119 -> m0_186  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_119 -> m0_187  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_119 -> m0_189  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_119 -> m0_190  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m0_184 -> m0_187  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m0_184 -> m0_190  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m0_185 -> m0_187  [color=darkseagreen4, key=1, label=arg, style=dashed];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=arg, style=dashed];
m0_58 -> m0_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_58 -> m0_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_58 -> m0_63  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_58 -> m0_64  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_58 -> m0_66  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m0_58 -> m0_68  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m0_58 -> m0_70  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_66 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_68 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_70 -> m0_12  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_67 -> m0_23  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_67 -> m0_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_69 -> m0_12  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m0_71 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m0_72 -> m0_23  [color=green, key=1, label=firstArg, style=dashed];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_108 -> m0_113  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m0_25 -> m0_232  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_41 -> m0_156  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_41 -> m0_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_41 -> m0_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_41 -> m0_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_41 -> m0_173  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_16 -> m0_20  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_39 -> m0_43  [color=green, key=1, label="lambda expression", style=dashed];
m0_155 -> m0_157  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_158  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_161  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_165  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_166  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_172  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_155 -> m0_173  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m0_168 -> m0_175  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m0_170 -> m0_175  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m0_171 -> m0_174  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_32 -> m0_35  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_32 -> m0_38  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_78 -> m0_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_78 -> m0_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m0_178 -> m0_197  [color=darkseagreen4, key=1, label="CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m0_178 -> m0_198  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_178 -> m0_203  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_178 -> m0_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_178 -> m0_205  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_199 -> m0_205  [color=darkseagreen4, key=1, label=verb, style=dashed];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m0_201 -> m0_204  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m0_89 -> m0_93  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_89 -> m0_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_89 -> m0_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m0_92 -> m0_94  [color=darkseagreen4, key=1, label=property, style=dashed];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m0_0 -> m0_23  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_12  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m0_0 -> m0_2  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_77 -> m0_56  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_73 -> m0_39  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_73 -> m0_44  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_74 -> m0_39  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_74 -> m0_44  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_75 -> m0_39  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m0_76 -> m0_56  [color=green, key=1, label=string, style=dashed];
m0_238 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_29  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_47  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_48  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_63  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_74  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_75  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_110  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_116  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_157  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_158  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_161  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_166  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_173  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_198  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_205  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_214  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_215  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_218  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_220  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_230  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_233  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_238 -> m0_234  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m0_239 -> m0_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_16 -> m1_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
}
