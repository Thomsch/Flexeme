digraph  {
n0 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n1 [label="source == null", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n3 [label="selector == null", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n5 [label="return source.PairwiseImpl(selector);", span="15-15", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n2 [label="throw new ArgumentNullException(''source'');", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n4 [label="throw new ArgumentNullException(''selector'');", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n6 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="18-18", cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)"];
n9 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n10 [label="var enumerator = source.GetEnumerator()", span="20-20", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n15 [label="yield return selector(left, right);", span="29-29", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n11 [label="enumerator.MoveNext()", span="22-22", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n18 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
n12 [label="var left = enumerator.Current", span="24-24", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n13 [label="enumerator.MoveNext()", span="26-26", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n14 [label="var right = enumerator.Current", span="28-28", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n17 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n19 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()"];
n16 [label="left = right", span="30-30", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n20 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)"];
n21 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)"];
n22 [label="return value;", span="63-63", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)"];
n23 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)"];
n24 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)"];
n25 [label="var array = Array.CreateInstance(type, value.Count())", span="68-68", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)"];
n26 [label="value.ToArray().CopyTo(array, 0)", span="69-69", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)"];
n29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
n30 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)"];
n27 [label="return array;", span="70-70", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)"];
n31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n32 [label="Entry System.Array.CopyTo(System.Array, int)", span="0-0", cluster="System.Array.CopyTo(System.Array, int)"];
n28 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)"];
n33 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n34 [label="return !source.Any();", span="75-75", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n35 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
m0_0 [label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="NameLookup.cs"];
m0_2 [label="Exit Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs"];
m0_1 [label="return Formatters.ResolveForCulture(culture);", span="68-68", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="NameLookup.cs"];
m0_3 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="46-46", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs"];
m0_5 [label="return NumberToWordsConverters.ResolveForCulture(culture);", span="77-77", cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs"];
m0_7 [label="Entry lambda expression", span="111-111", cluster="lambda expression", color=green, community=0, file="NameLookup.cs"];
m0_4 [label="Entry Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", span="75-75", cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs"];
m0_6 [label="Exit Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", span="75-75", cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs"];
m0_8 [label="p.Name == ''Description''", span="111-111", cluster="lambda expression", color=green, community=0, file="NameLookup.cs"];
m0_9 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="NameLookup.cs"];
m0_11 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="NameLookup.cs"];
m0_14 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", span="34-34", cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs"];
m0_15 [label="!Available", span="36-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs"];
m0_17 [label="return type.IsAssignableFrom(fsharpOptionType);", span="40-40", cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs"];
m0_16 [label="throw new InvalidOperationException();", span="38-38", cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs"];
m0_18 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", span="34-34", cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs"];
m0_13 [label="Entry System.Reflection.Assembly.GetType(string, bool)", span="0-0", cluster="System.Reflection.Assembly.GetType(string, bool)", file="NameLookup.cs"];
m0_20 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="NameLookup.cs"];
m0_10 [label="Entry System.Reflection.Assembly.GetCallingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetCallingAssembly()", file="NameLookup.cs"];
m0_12 [label="Entry System.Reflection.Assembly.Load(string)", span="0-0", cluster="System.Reflection.Assembly.Load(string)", file="NameLookup.cs"];
m0_19 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="NameLookup.cs"];
m0_21 [label="CommandLine.Infrastructure.FSharpOptionHelper", span="", file="NameLookup.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n0 -> n8  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TResult> Pairwise"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n2 -> n6  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n4 -> n6  [key=0, style=solid];
n4 -> n7  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
n8 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<TSource, TSource, TResult> selector"];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [key=0, style=bold, color=crimson];
n10 -> n11  [key=0, style=solid];
n10 -> n18  [key=2, style=dotted];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
n10 -> n14  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
n15 -> n16  [key=0, style=solid];
n15 -> n20  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=0, style=solid];
n11 -> n19  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label=left];
n12 -> n14  [key=3, color=darkorchid, style=bold, label="Local variable TSource left"];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label=right];
n17 -> n9  [key=0, style=bold, color=blue];
n16 -> n13  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n21  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<T> ToEnumerable"];
n22 -> n23  [key=0, style=solid];
n23 -> n21  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n25 -> n30  [key=2, style=dotted];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=array];
n26 -> n27  [key=0, style=solid];
n26 -> n31  [key=2, style=dotted];
n26 -> n32  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n28 -> n24  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n35 -> n33  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_5  [key=0, style=solid, color=green];
m0_2 -> m0_7  [key=0, style=solid, color=green];
m0_2 -> m0_10  [key=2, style=dotted, color=green];
m0_2 -> m0_11  [key=2, style=dotted, color=green];
m0_2 -> m0_12  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_3  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_9  [key=0, style=solid, color=green];
m0_4 -> m0_7  [key=0, style=solid, color=green];
m0_4 -> m0_5  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_8  [key=1, style=dashed, color=green, label=fsharpCoreAssembly];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_13  [key=2, style=dotted, color=green];
m0_9 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_14  [key=0, style=bold, color=blue];
m0_21 -> m0_8  [key=1, style=dashed, color=green, label="CommandLine.Infrastructure.FSharpOptionHelper"];
m0_21 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.FSharpOptionHelper"];
m0_21 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.FSharpOptionHelper"];
}
