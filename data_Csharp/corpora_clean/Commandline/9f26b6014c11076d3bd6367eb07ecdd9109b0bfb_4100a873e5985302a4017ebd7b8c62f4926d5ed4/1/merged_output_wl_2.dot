digraph  {
n0 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10"];
n1 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="source == null", span="12-12"];
n3 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="selector == null", span="13-13"];
n5 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="return source.PairwiseImpl(selector);", span="15-15"];
n2 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="throw new ArgumentNullException(''source'');", span="12-12"];
n4 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="throw new ArgumentNullException(''selector'');", span="13-13"];
n6 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10"];
n7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n8 [cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="18-18"];
n9 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18"];
n10 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="var enumerator = source.GetEnumerator()", span="20-20"];
n15 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="yield return selector(left, right);", span="29-29"];
n11 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="enumerator.MoveNext()", span="22-22"];
n18 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
n12 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="var left = enumerator.Current", span="24-24"];
n13 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="enumerator.MoveNext()", span="26-26"];
n14 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="var right = enumerator.Current", span="28-28"];
n17 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18"];
n19 [cluster="System.Collections.IEnumerator.MoveNext()", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
n16 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="left = right", span="30-30"];
n20 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
n21 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61"];
n22 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", label="return value;", span="63-63"];
n23 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61"];
n24 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66"];
n25 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", label="var array = Array.CreateInstance(type, value.Count())", span="68-68"];
n26 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", label="value.ToArray().CopyTo(array, 0)", span="69-69"];
n29 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
n30 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n27 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", label="return array;", span="70-70"];
n31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n32 [cluster="System.Array.CopyTo(System.Array, int)", label="Entry System.Array.CopyTo(System.Array, int)", span="0-0"];
n28 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66"];
n33 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73"];
n34 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="return !source.Any();", span="75-75"];
n35 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73"];
n36 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_0 [cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="NameLookup.cs", label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66"];
m0_2 [cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs", label="0: Exit Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66"];
m0_1 [cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="NameLookup.cs", label="return Formatters.ResolveForCulture(culture);", span="68-68"];
m0_3 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs", label="0: Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="46-46"];
m0_5 [cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs", label="0: return NumberToWordsConverters.ResolveForCulture(culture);", span="77-77"];
m0_7 [cluster="lambda expression", color=green, community=0, file="NameLookup.cs", label="0: Entry lambda expression", span="111-111"];
m0_4 [cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs", label="1: Entry Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", span="75-75"];
m0_6 [cluster="Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="NameLookup.cs", label="0: Exit Humanizer.Configuration.Configurator.GetNumberToWordsConverter(System.Globalization.CultureInfo)", span="75-75"];
m0_8 [cluster="lambda expression", color=green, community=0, file="NameLookup.cs", label="0: p.Name == ''Description''", span="111-111"];
m0_9 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="111-111"];
m0_11 [cluster="System.IO.Path.Combine(string, string)", file="NameLookup.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m0_14 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", span="34-34"];
m0_15 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs", label="!Available", span="36-36"];
m0_17 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs", label="return type.IsAssignableFrom(fsharpOptionType);", span="40-40"];
m0_16 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs", label="throw new InvalidOperationException();", span="38-38"];
m0_18 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", file="NameLookup.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.MatchType(System.Type)", span="34-34"];
m0_13 [cluster="System.Reflection.Assembly.GetType(string, bool)", file="NameLookup.cs", label="Entry System.Reflection.Assembly.GetType(string, bool)", span="0-0"];
m0_20 [cluster="System.Type.IsAssignableFrom(System.Type)", file="NameLookup.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_10 [cluster="System.Reflection.Assembly.GetCallingAssembly()", file="NameLookup.cs", label="Entry System.Reflection.Assembly.GetCallingAssembly()", span="0-0"];
m0_12 [cluster="System.Reflection.Assembly.Load(string)", file="NameLookup.cs", label="Entry System.Reflection.Assembly.Load(string)", span="0-0"];
m0_19 [cluster="System.InvalidOperationException.InvalidOperationException()", file="NameLookup.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_21 [file="NameLookup.cs", label="CommandLine.Infrastructure.FSharpOptionHelper", span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n0 -> n8  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TResult> Pairwise", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n2 -> n6  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n4 -> n6  [key=0, style=solid];
n4 -> n7  [key=2, style=dotted];
n6 -> n0  [color=blue, key=0, style=bold];
n8 -> n0  [color=darkorchid, key=3, label="Parameter variable System.Func<TSource, TSource, TResult> selector", style=bold];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [color=crimson, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n18  [key=2, style=dotted];
n10 -> n12  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
n10 -> n14  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n20  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n17  [key=0, style=solid];
n11 -> n19  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [color=darkseagreen4, key=1, label=left, style=dashed];
n12 -> n14  [color=darkorchid, key=3, label="Local variable TSource left", style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [color=darkseagreen4, key=1, label=right, style=dashed];
n17 -> n9  [color=blue, key=0, style=bold];
n16 -> n13  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n21  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> ToEnumerable", style=bold];
n22 -> n23  [key=0, style=solid];
n23 -> n21  [color=blue, key=0, style=bold];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n25 -> n30  [key=2, style=dotted];
n25 -> n27  [color=darkseagreen4, key=1, label=array, style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n31  [key=2, style=dotted];
n26 -> n32  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n28 -> n24  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n35 -> n33  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_5  [color=green, key=0, style=solid];
m0_2 -> m0_7  [color=green, key=0, style=solid];
m0_2 -> m0_10  [color=green, key=2, style=dotted];
m0_2 -> m0_11  [color=green, key=2, style=dotted];
m0_2 -> m0_12  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_3  [key=2, style=dotted];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_9  [color=green, key=0, style=solid];
m0_4 -> m0_7  [color=green, key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_8  [color=green, key=1, label=fsharpCoreAssembly, style=dashed];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_13  [color=green, key=2, style=dotted];
m0_9 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m0_21 -> m0_8  [color=green, key=1, label="CommandLine.Infrastructure.FSharpOptionHelper", style=dashed];
m0_21 -> m0_15  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.FSharpOptionHelper", style=dashed];
m0_21 -> m0_17  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.FSharpOptionHelper", style=dashed];
}
