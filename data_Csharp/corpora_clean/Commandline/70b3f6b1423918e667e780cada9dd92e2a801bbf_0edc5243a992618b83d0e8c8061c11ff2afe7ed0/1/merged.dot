digraph  {
n48 [label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
n49 [label=T, span=""];
n0 [label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)"];
n1 [label="return from pi in type.GetProperties()\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                        attrs.OfType<OptionAttribute>().Any() ||\r\n                        attrs.OfType<ValueAttribute>().Any()\r\n                   select selector(pi);", span="14-19", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)"];
n2 [label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)"];
n3 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()"];
n4 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)"];
n5 [label="Entry Unk.>", span="", cluster="Unk.>"];
n6 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
n7 [label="Entry Unk.selector", span="", cluster="Unk.selector"];
n8 [label="Entry CommandLine.Core.ReflectionExtensions.ToDescriptorKind(System.Type)", span="22-22", cluster="CommandLine.Core.ReflectionExtensions.ToDescriptorKind(System.Type)"];
n9 [label="return type == typeof(bool)\r\n                       ? TypeDescriptorKind.Boolean\r\n                       : type == typeof(string)\r\n                             ? TypeDescriptorKind.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TypeDescriptorKind.Sequence\r\n                                   : TypeDescriptorKind.Scalar;", span="24-30", cluster="CommandLine.Core.ReflectionExtensions.ToDescriptorKind(System.Type)", color=red, community=0];
n10 [label="Exit CommandLine.Core.ReflectionExtensions.ToDescriptorKind(System.Type)", span="22-22", cluster="CommandLine.Core.ReflectionExtensions.ToDescriptorKind(System.Type)"];
n11 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n12 [label="Entry CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="33-33", cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)"];
n13 [label="return type == typeof(string) || !type.IsArray && !typeof(IEnumerable).IsAssignableFrom(type);", span="35-35", cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)"];
n14 [label="Exit CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)", span="33-33", cluster="CommandLine.Core.ReflectionExtensions.IsScalar(System.Type)"];
n15 [label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)"];
n16 [label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="44-50", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)"];
n21 [label="specProp.Property.SetValue(current, selector(specProp))", span="48-48", cluster="lambda expression"];
n22 [label="return instance;", span="49-49", cluster="lambda expression"];
n17 [label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)"];
n18 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n19 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate"];
n20 [label="Entry lambda expression", span="46-50", cluster="lambda expression"];
n24 [label="Entry Unk.SetValue", span="", cluster="Unk.SetValue"];
n23 [label="Exit lambda expression", span="46-50", cluster="lambda expression"];
n25 [label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="53-53", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n26 [label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="55-55", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n27 [label="property.SetValue(instance, value, null)", span="59-59", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n36 [label="return instance;", span="78-78", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n41 [label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="55-55", cluster="lambda expression"];
n29 [label="fail(e)", span="63-63", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n31 [label="fail(e)", span="67-67", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n33 [label="fail(e)", span="71-71", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n35 [label="fail(e)", span="75-75", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n28 [label=TargetException, span="61-61", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n30 [label=TargetParameterCountException, span="65-65", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n32 [label=MethodAccessException, span="69-69", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n34 [label=TargetInvocationException, span="73-73", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n38 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])"];
n39 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
n37 [label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="53-53", cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)"];
n40 [label="Entry lambda expression", span="55-55", cluster="lambda expression"];
n42 [label="Exit lambda expression", span="55-55", cluster="lambda expression"];
n43 [label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0", cluster="System.ApplicationException.ApplicationException(string, System.Exception)"];
n44 [label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="81-81", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)"];
n45 [label="return Array.CreateInstance(type, 0);", span="83-83", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)"];
n46 [label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="81-81", cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)"];
n47 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)"];
m0_9 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_10 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="31-43", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_11 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_12 [label="Entry T.ToMaybe<T>()", span="79-79", cluster="T.ToMaybe<T>()", file="InstanceChooser.cs"];
m0_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_1 [label="this.shortName = shortName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_2 [label="this.longName = longName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_3 [label="this.separator = separator", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_4 [label="this.setName = setName", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_5 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_6 [label="this.metaValue = metaValue", span="25-25", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_7 [label="this.enumValues = enumValues", span="26-26", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="InstanceChooser.cs"];
m0_8 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs"];
m0_13 [label="CommandLine.Core.OptionSpecification", span="", file="InstanceChooser.cs"];
m1_11 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Parser.cs"];
m1_12 [label="array.Length == 0", span="51-51", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Parser.cs"];
m1_13 [label="throw new ArgumentOutOfRangeException(paramName);", span="52-52", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Parser.cs"];
m1_14 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="49-49", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="Parser.cs"];
m1_0 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Parser.cs"];
m1_1 [label="value == null", span="39-39", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Parser.cs"];
m1_2 [label="throw new ArgumentNullException(paramName);", span="40-40", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Parser.cs"];
m1_3 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="36-36", cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="Parser.cs"];
m1_9 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Parser.cs"];
m1_4 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m1_5 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Parser.cs"];
m1_6 [label="string.IsNullOrEmpty(value)", span="45-45", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Parser.cs"];
m1_7 [label="throw new ArgumentException(paramName);", span="46-46", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Parser.cs"];
m1_8 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="43-43", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="Parser.cs"];
m1_15 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs"];
m1_10 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs"];
n48 -> n21  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
n49 -> n22  [key=1, style=dashed, color=darkseagreen4, label=T];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n1 -> n5  [key=2, style=dotted];
n1 -> n6  [key=2, style=dotted];
n1 -> n7  [key=2, style=dotted];
n1 -> n1  [key=1, style=dashed, color=darkseagreen4, label=pi];
n2 -> n0  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid, color=red];
n9 -> n10  [key=0, style=solid, color=red];
n9 -> n11  [key=2, style=dotted, color=red];
n10 -> n8  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n11  [key=2, style=dotted];
n14 -> n12  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n15 -> n21  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
n15 -> n22  [key=1, style=dashed, color=darkseagreen4, label=T];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n19  [key=2, style=dotted];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n21 -> n22  [key=0, style=solid];
n21 -> n7  [key=2, style=dotted];
n21 -> n24  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n17 -> n15  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n23 -> n20  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
n25 -> n36  [key=1, style=dashed, color=darkseagreen4, label=T];
n26 -> n27  [key=0, style=solid];
n26 -> n41  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label=fail];
n26 -> n31  [key=1, style=dashed, color=darkseagreen4, label=fail];
n26 -> n33  [key=1, style=dashed, color=darkseagreen4, label=fail];
n26 -> n35  [key=1, style=dashed, color=darkseagreen4, label=fail];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=0, style=solid];
n27 -> n32  [key=0, style=solid];
n27 -> n34  [key=0, style=solid];
n27 -> n36  [key=0, style=solid];
n27 -> n38  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [key=2, style=dotted];
n29 -> n36  [key=0, style=solid];
n29 -> n39  [key=2, style=dotted];
n31 -> n36  [key=0, style=solid];
n31 -> n39  [key=2, style=dotted];
n33 -> n36  [key=0, style=solid];
n33 -> n39  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n37 -> n25  [key=0, style=bold, color=blue];
n40 -> n41  [key=0, style=solid];
n42 -> n40  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=2, style=dotted];
n46 -> n44  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_0  [key=2, style=dotted];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_3  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>> tokenizer"];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=char];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_7  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=3, color=darkorchid, style=bold, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> "];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_8 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_7  [key=1, style=dashed, color=red, label="CommandLine.Core.OptionSpecification"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_14 -> m1_11  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=0, style=solid];
m1_6 -> m1_9  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_5  [key=0, style=bold, color=blue];
}
