digraph  {
m1_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m1_6 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m1_7 [cluster="OptionSpecification.cstr", file="ParserResultExtensionsTests.cs", label="Entry OptionSpecification.cstr", span=""];
m1_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=green, community=0, file="ParserResultExtensionsTests.cs", label="var expected = Maybe.Just(''.'')", prediction=0, span="17-17"];
m1_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=green, community=0, file="ParserResultExtensionsTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", prediction=1, span="18-19"];
m1_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=green, community=0, file="ParserResultExtensionsTests.cs", label="expected.ShouldBeEquivalentTo(result)", prediction=0, span="25-25"];
m1_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=green, community=0, file="ParserResultExtensionsTests.cs", label="var result = NameLookup.HavingSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", prediction=3, span="22-22"];
m1_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_11 [cluster="Unk.ShouldBeEquivalentTo", file="ParserResultExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_1 -> m1_4  [color=green, key=1, label=expected, style=dashed];
}
