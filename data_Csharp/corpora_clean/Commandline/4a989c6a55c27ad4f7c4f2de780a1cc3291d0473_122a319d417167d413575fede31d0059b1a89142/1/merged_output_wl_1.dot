digraph  {
m0_54 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="92-92"];
m0_55 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceBuilderTests.cs", label="return ReflectionHelper.IsTypeMutable(type);", span="94-94"];
m0_56 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="92-92"];
m0_5 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m0_36 [cluster="System.Action<T>.Invoke(T)", file="InstanceBuilderTests.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_45 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="83-83"];
m0_46 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceBuilderTests.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="85-88"];
m0_47 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceBuilderTests.cs", label="return e.Compile()();", span="89-89"];
m0_48 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="83-83"];
m0_6 [cluster="Unk.Any", file="InstanceBuilderTests.cs", label="Entry Unk.Any", span=""];
m0_15 [cluster="Unk.Where", file="InstanceBuilderTests.cs", label="Entry Unk.Where", span=""];
m0_22 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="50-50"];
m0_23 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="52-52"];
m0_24 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: property.SetValue(instance, value, null)", span="56-56"];
m0_33 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="return instance;", span="75-75"];
m0_26 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: fail(e)", span="60-60"];
m0_28 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="fail(e)", span="64-64"];
m0_30 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="fail(e)", span="68-68"];
m0_32 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="fail(e)", span="72-72"];
m0_25 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: TargetException", span="58-58"];
m0_27 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label=TargetParameterCountException, span="62-62"];
m0_29 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label=MethodAccessException, span="66-66"];
m0_31 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label=TargetInvocationException, span="70-70"];
m0_34 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="50-50"];
m0_8 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="24-24"];
m0_9 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="26-32"];
m0_10 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="24-24"];
m0_40 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="InstanceBuilderTests.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m0_53 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilderTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_44 [cluster="System.Array.CreateInstance(System.Type, int)", file="InstanceBuilderTests.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m0_50 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="InstanceBuilderTests.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m0_7 [cluster="Unk.selector", file="InstanceBuilderTests.cs", label="Entry Unk.selector", span=""];
m0_37 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="52-52"];
m0_18 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="45-45"];
m0_19 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="return instance;", span="46-46"];
m0_17 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="43-47"];
m0_20 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="43-47"];
m0_38 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="52-52"];
m0_39 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="52-52"];
m0_35 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="InstanceBuilderTests.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m0_49 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="InstanceBuilderTests.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m0_11 [cluster="System.Type.IsAssignableFrom(System.Type)", file="InstanceBuilderTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_58 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="97-97"];
m0_59 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="InstanceBuilderTests.cs", label="type == typeof(string)", span="99-99"];
m0_61 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="InstanceBuilderTests.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="103-103"];
m0_62 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: return type.GetGenericArguments()[0].CreateEmptyArray();", span="105-105"];
m0_63 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: return type.GetDefaultValue();", span="107-107"];
m0_60 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="InstanceBuilderTests.cs", label="return string.Empty;", span="101-101"];
m0_64 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="97-97"];
m0_3 [cluster="System.Type.GetProperties()", file="InstanceBuilderTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m0_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m0_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: return from pi in type.GetProperties()\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                        attrs.OfType<OptionAttribute>().Any() ||\r\n                        attrs.OfType<ValueAttribute>().Any()\r\n                   select selector(pi);", span="16-21"];
m0_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m0_51 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="InstanceBuilderTests.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m0_65 [cluster="System.Type.GetGenericTypeDefinition()", file="InstanceBuilderTests.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m0_67 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilderTests.cs", label="Entry System.Type.CreateEmptyArray()", span="78-78"];
m0_68 [cluster="System.Type.GetDefaultValue()", file="InstanceBuilderTests.cs", label="Entry System.Type.GetDefaultValue()", span="83-83"];
m0_66 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilderTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m0_57 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", span="39-39"];
m0_4 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="InstanceBuilderTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m0_16 [cluster="Unk.Aggregate", file="InstanceBuilderTests.cs", label="Entry Unk.Aggregate", span=""];
m0_41 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="78-78"];
m0_42 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", color=red, community=0, file="InstanceBuilderTests.cs", label="0: return Array.CreateInstance(type, 0);", span="80-80"];
m0_43 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="78-78"];
m0_12 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="35-35"];
m0_13 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilderTests.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="41-47"];
m0_14 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="35-35"];
m0_21 [cluster="Unk.SetValue", file="InstanceBuilderTests.cs", label="Entry Unk.SetValue", span=""];
m0_52 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="InstanceBuilderTests.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m0_69 [file="InstanceBuilderTests.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m0_70 [file="InstanceBuilderTests.cs", label=T, span=""];
m1_17 [cluster="Unk.SingleOrDefault", file="InstanceChooserTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m1_92 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="143-143"];
m1_93 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooserTests.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="145-149"];
m1_94 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooserTests.cs", label="return type != typeof(object) ? isMutable() : true;", span="150-150"];
m1_95 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="143-143"];
m1_102 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="InstanceChooserTests.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m1_6 [cluster="Unk.>", file="InstanceChooserTests.cs", label="Entry Unk.>", span=""];
m1_83 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="134-134"];
m1_85 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooserTests.cs", label="return e.Compile()();", span="140-140"];
m1_84 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooserTests.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="136-139"];
m1_86 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="134-134"];
m1_7 [cluster="Unk.Any", file="InstanceChooserTests.cs", label="Entry Unk.Any", span=""];
m1_8 [cluster="Unk.First", file="InstanceChooserTests.cs", label="Entry Unk.First", span=""];
m1_53 [cluster="Unk.Where", file="InstanceChooserTests.cs", label="Entry Unk.Where", span=""];
m1_26 [cluster="Unk.Create", file="InstanceChooserTests.cs", label="Entry Unk.Create", span=""];
m1_18 [cluster="Unk.ToMaybe", file="InstanceChooserTests.cs", label="Entry Unk.ToMaybe", span=""];
m1_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="InstanceChooserTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m1_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="InstanceChooserTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m1_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m1_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", color=green, community=0, file="InstanceChooserTests.cs", label="0: return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="29-35"];
m1_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m1_9 [cluster="Unk.selector", file="InstanceChooserTests.cs", label="Entry Unk.selector", span=""];
m1_55 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="90-94"];
m1_10 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="18-18"];
m1_11 [cluster="lambda expression", color=green, community=0, file="InstanceChooserTests.cs", label="0: x.GetProperties()", span="18-18"];
m1_12 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="18-18"];
m1_19 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="31-31"];
m1_97 [cluster="lambda expression", file="InstanceChooserTests.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="146-146"];
m1_56 [cluster="lambda expression", file="InstanceChooserTests.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="92-92"];
m1_28 [cluster="lambda expression", file="InstanceChooserTests.cs", label="x.GetProperties()", span="41-41"];
m1_21 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="31-31"];
m1_20 [cluster="lambda expression", file="InstanceChooserTests.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m1_27 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="41-41"];
m1_96 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="145-149"];
m1_98 [cluster="lambda expression", file="InstanceChooserTests.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="147-147"];
m1_104 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Entry lambda expression", span="146-146"];
m1_99 [cluster="lambda expression", file="InstanceChooserTests.cs", label="return props || fields;", span="148-148"];
m1_57 [cluster="lambda expression", file="InstanceChooserTests.cs", label="return instance;", span="93-93"];
m1_29 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="41-41"];
m1_100 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="145-149"];
m1_106 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="146-146"];
m1_105 [cluster="lambda expression", file="InstanceChooserTests.cs", label="p.CanWrite", span="146-146"];
m1_58 [cluster="lambda expression", file="InstanceChooserTests.cs", label="Exit lambda expression", span="90-94"];
m1_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceChooserTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_91 [cluster="System.Func<TResult>.Invoke()", file="InstanceChooserTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_88 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="InstanceChooserTests.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m1_87 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="InstanceChooserTests.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m1_13 [cluster="System.Type.GetProperties()", file="InstanceChooserTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m1_23 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m1_24 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="InstanceChooserTests.cs", label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="40-46"];
m1_25 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m1_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m1_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", color=green, community=0, file="InstanceChooserTests.cs", label="0: return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24"];
m1_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m1_89 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="InstanceChooserTests.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m1_101 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="InstanceChooserTests.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m1_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="InstanceChooserTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m1_54 [cluster="Unk.Aggregate", file="InstanceChooserTests.cs", label="Entry Unk.Aggregate", span=""];
m1_50 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooserTests.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m1_51 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooserTests.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="88-94"];
m1_52 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooserTests.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m1_59 [cluster="Unk.SetValue", file="InstanceChooserTests.cs", label="Entry Unk.SetValue", span=""];
m1_3 [cluster="System.Type.FlattenHierarchy()", file="InstanceChooserTests.cs", label="Entry System.Type.FlattenHierarchy()", span="49-49"];
m1_90 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="InstanceChooserTests.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m1_162 [file="InstanceChooserTests.cs", label="System.Type", span=""];
m1_160 [file="InstanceChooserTests.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m1_161 [file="InstanceChooserTests.cs", label=T, span=""];
m3_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="Tokenizer.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m3_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="Tokenizer.cs", label="FileAccess = FileAccess.Read", span="40-40"];
m3_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="Tokenizer.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m3_3 [file="Tokenizer.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span=""];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_57  [key=2, style=dotted];
m0_56 -> m0_54  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_50  [key=2, style=dotted];
m0_46 -> m0_51  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_52  [key=2, style=dotted];
m0_47 -> m0_53  [key=2, style=dotted];
m0_48 -> m0_45  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m0_22 -> m0_33  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_23 -> m0_24  [color=red, key=0, style=solid];
m0_23 -> m0_38  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m0_23 -> m0_26  [color=red, key=1, label=fail, style=dashed];
m0_23 -> m0_28  [color=darkseagreen4, key=1, label=fail, style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label=fail, style=dashed];
m0_23 -> m0_32  [color=darkseagreen4, key=1, label=fail, style=dashed];
m0_24 -> m0_25  [color=red, key=0, style=solid];
m0_24 -> m0_27  [color=red, key=0, style=solid];
m0_24 -> m0_29  [color=red, key=0, style=solid];
m0_24 -> m0_31  [color=red, key=0, style=solid];
m0_24 -> m0_33  [color=red, key=0, style=solid];
m0_24 -> m0_35  [color=red, key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_26 -> m0_33  [color=red, key=0, style=solid];
m0_26 -> m0_36  [color=red, key=2, style=dotted];
m0_28 -> m0_33  [key=0, style=solid];
m0_28 -> m0_36  [key=2, style=dotted];
m0_30 -> m0_33  [key=0, style=solid];
m0_30 -> m0_36  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_26  [color=red, key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_34 -> m0_22  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_9 -> m0_10  [color=red, key=0, style=solid];
m0_9 -> m0_11  [color=red, key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_7  [key=2, style=dotted];
m0_18 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_20 -> m0_17  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_58 -> m0_62  [color=red, key=1, label="System.Type", style=dashed];
m0_58 -> m0_63  [color=red, key=1, label="System.Type", style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [color=red, key=0, style=solid];
m0_61 -> m0_63  [color=red, key=0, style=solid];
m0_61 -> m0_65  [key=2, style=dotted];
m0_62 -> m0_64  [color=red, key=0, style=solid];
m0_62 -> m0_66  [color=red, key=2, style=dotted];
m0_62 -> m0_67  [color=red, key=2, style=dotted];
m0_63 -> m0_64  [color=red, key=0, style=solid];
m0_63 -> m0_68  [color=red, key=2, style=dotted];
m0_60 -> m0_64  [key=0, style=solid];
m0_64 -> m0_58  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_3  [color=red, key=2, style=dotted];
m0_1 -> m0_4  [color=red, key=2, style=dotted];
m0_1 -> m0_5  [color=red, key=2, style=dotted];
m0_1 -> m0_6  [color=red, key=2, style=dotted];
m0_1 -> m0_7  [color=red, key=2, style=dotted];
m0_1 -> m0_1  [color=red, key=1, label=pi, style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [color=red, key=0, style=solid];
m0_42 -> m0_43  [color=red, key=0, style=solid];
m0_42 -> m0_44  [color=red, key=2, style=dotted];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_18  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m0_12 -> m0_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_13 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_69 -> m0_18  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m0_70 -> m0_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_92 -> m1_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_92 -> m1_94  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_91  [key=2, style=dotted];
m1_95 -> m1_92  [color=blue, key=0, style=bold];
m1_83 -> m1_84  [key=0, style=solid];
m1_85 -> m1_91  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_90  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_87  [key=2, style=dotted];
m1_84 -> m1_88  [key=2, style=dotted];
m1_84 -> m1_89  [key=2, style=dotted];
m1_86 -> m1_83  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_15 -> m1_15  [color=green, key=1, label=attr, style=dashed];
m1_15 -> m1_16  [color=green, key=0, style=solid];
m1_15 -> m1_3  [color=green, key=2, style=dotted];
m1_15 -> m1_4  [color=green, key=2, style=dotted];
m1_15 -> m1_17  [color=green, key=2, style=dotted];
m1_15 -> m1_18  [color=green, key=2, style=dotted];
m1_15 -> m1_19  [color=green, key=1, label="lambda expression", style=dashed];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_13  [color=green, key=2, style=dotted];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_97 -> m1_7  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_101  [key=2, style=dotted];
m1_97 -> m1_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label=props, style=dashed];
m1_56 -> m1_9  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_59  [key=2, style=dotted];
m1_28 -> m1_13  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_21 -> m1_19  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_102  [key=2, style=dotted];
m1_98 -> m1_103  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_100 -> m1_96  [color=blue, key=0, style=bold];
m1_106 -> m1_104  [color=blue, key=0, style=bold];
m1_105 -> m1_106  [key=0, style=solid];
m1_58 -> m1_55  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_3  [key=2, style=dotted];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_5  [key=2, style=dotted];
m1_24 -> m1_6  [key=2, style=dotted];
m1_24 -> m1_7  [key=2, style=dotted];
m1_24 -> m1_8  [key=2, style=dotted];
m1_24 -> m1_17  [key=2, style=dotted];
m1_24 -> m1_18  [key=2, style=dotted];
m1_24 -> m1_24  [color=darkseagreen4, key=1, label=pi, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_1  [color=green, key=1, label=pi, style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_1 -> m1_4  [color=green, key=2, style=dotted];
m1_1 -> m1_5  [color=green, key=2, style=dotted];
m1_1 -> m1_6  [color=green, key=2, style=dotted];
m1_1 -> m1_7  [color=green, key=2, style=dotted];
m1_1 -> m1_8  [color=green, key=2, style=dotted];
m1_1 -> m1_9  [color=green, key=2, style=dotted];
m1_1 -> m1_10  [color=green, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_50 -> m1_56  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_57  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_51 -> m1_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=2, style=dotted];
m1_51 -> m1_54  [key=2, style=dotted];
m1_52 -> m1_50  [color=blue, key=0, style=bold];
m1_162 -> m1_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_162 -> m1_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_160 -> m1_56  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m1_161 -> m1_57  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", style=dashed];
}
