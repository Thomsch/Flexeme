digraph  {
m0_17 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="InstanceChooser.cs"];
m0_12 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="InstanceChooser.cs"];
m0_16 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="InstanceChooser.cs"];
m0_34 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", span="76-76", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_35 [label="var options = new OptionsWithValueListMaximumThree()", span="78-78", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_36 [label="var parser = new Parser()", span="79-79", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_37 [label="var result = parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="80-81", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_38 [label="result.Should().BeFalse()", span="83-83", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_39 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", span="76-76", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="InstanceChooser.cs"];
m0_18 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="InstanceChooser.cs"];
m0_14 [label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="InstanceChooser.cs"];
m0_33 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="InstanceChooser.cs"];
m0_32 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull", file="InstanceChooser.cs"];
m0_13 [label="Entry CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="InstanceChooser.cs"];
m0_19 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", span="59-59", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_20 [label="var options = new OptionsWithValueListMaximumThree()", span="61-61", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_21 [label="var parser = new Parser()", span="62-62", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", color=red, community=0, file="InstanceChooser.cs"];
m0_22 [label="var result = parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="63-63", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_24 [label="options.InputFilenames[0].Should().Be(''file.a'')", span="67-67", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_25 [label="options.InputFilenames[1].Should().Be(''file.b'')", span="68-68", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_26 [label="options.InputFilenames[2].Should().Be(''file.c'')", span="69-69", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_27 [label="options.OutputFile.Should().BeNull()", span="70-70", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_28 [label="options.Overwrite.Should().BeFalse()", span="71-71", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_29 [label="Console.WriteLine(options)", span="72-72", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_23 [label="result.Should().BeTrue()", span="65-65", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_30 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", span="59-59", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_inside_bounds()", file="InstanceChooser.cs"];
m0_49 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="InstanceChooser.cs"];
m0_40 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_41 [label="var options = new OptionsWithValueListMaximumZero()", span="89-89", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_42 [label="var parser = new Parser()", span="90-90", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_43 [label="var result = parser.ParseArguments(new string[] { }, options)", span="91-91", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_45 [label="options.Junk.Should().HaveCount(n => n == 0)", span="95-95", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_46 [label="Console.WriteLine(options)", span="96-96", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_44 [label="result.Should().BeTrue()", span="93-93", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_47 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="InstanceChooser.cs"];
m0_50 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="InstanceChooser.cs"];
m0_51 [label="n == 0", span="95-95", cluster="lambda expression", file="InstanceChooser.cs"];
m0_52 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="InstanceChooser.cs"];
m0_48 [label="Entry CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36", cluster="CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="InstanceChooser.cs"];
m0_31 [label="Entry CommandLine.Tests.Fakes.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35", cluster="CommandLine.Tests.Fakes.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="InstanceChooser.cs"];
m0_53 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", span="100-100", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_54 [label="var options = new OptionsWithValueListMaximumZero()", span="102-102", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_55 [label="var parser = new Parser()", span="103-103", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_56 [label="var result = parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="104-104", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_57 [label="result.Should().BeFalse()", span="106-106", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_58 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", span="100-100", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="InstanceChooser.cs"];
m0_0 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_1 [label="var options = new SimpleOptionsWithValueList()", span="43-43", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_2 [label="var parser = new Parser()", span="44-44", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_3 [label="var result = parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="45-46", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_5 [label="options.Items[0].Should().Be(''file1.ext'')", span="50-50", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_6 [label="options.Items[1].Should().Be(''file2.ext'')", span="51-51", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_7 [label="options.Items[2].Should().Be(''file3.ext'')", span="52-52", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_8 [label="options.StringValue.Should().Be(''out.ext'')", span="53-53", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_9 [label="options.BooleanValue.Should().BeTrue()", span="54-54", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_10 [label="Console.WriteLine(options)", span="55-55", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_4 [label="result.Should().BeTrue()", span="48-48", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_11 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="InstanceChooser.cs"];
m0_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="InstanceChooser.cs"];
m1_4 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="OptionMapper.cs"];
m1_18 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapper.cs"];
m1_24 [label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15", cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapper.cs"];
m1_26 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="OptionMapper.cs"];
m1_23 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapper.cs"];
m1_11 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="OptionMapper.cs"];
m1_10 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="OptionMapper.cs"];
m1_25 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="OptionMapper.cs"];
m1_13 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionMapper.cs"];
m1_27 [label="Entry lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m1_8 [label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="22-35", cluster="lambda expression", file="OptionMapper.cs"];
m1_16 [label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24", cluster="lambda expression", file="OptionMapper.cs"];
m1_20 [label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="27-34", cluster="lambda expression", file="OptionMapper.cs"];
m1_7 [label="Entry lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m1_31 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m1_34 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_37 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_28 [label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31", cluster="lambda expression", file="OptionMapper.cs"];
m1_9 [label="Exit lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m1_15 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m1_19 [label="Entry lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m1_17 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m1_21 [label="Exit lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m1_29 [label="Exit lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m1_32 [label="se.Item1", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m1_33 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m1_35 [label="se.Item2", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_36 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_38 [label="se.Value", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m1_14 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="OptionMapper.cs"];
m1_22 [label="Entry Unk.converter", span="", cluster="Unk.converter", file="OptionMapper.cs"];
m1_5 [label="Entry Unk.>", span="", cluster="Unk.>", file="OptionMapper.cs"];
m1_12 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapper.cs"];
m1_30 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", file="OptionMapper.cs"];
m1_6 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="OptionMapper.cs"];
m1_0 [label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m1_1 [label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="20-36", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m1_2 [label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m1_3 [label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m1_40 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span="", file="OptionMapper.cs"];
m1_41 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span="", file="OptionMapper.cs"];
m1_42 [label="System.StringComparer", span="", file="OptionMapper.cs"];
m1_43 [label="CommandLine.Core.SpecificationProperty", span="", file="OptionMapper.cs"];
m2_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapperTests.cs"];
m2_12 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionMapperTests.cs"];
m2_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs"];
m2_11 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionMapperTests.cs"];
m2_15 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="OptionMapperTests.cs"];
m2_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs"];
m2_27 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs"];
m2_16 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_28 [label="Entry lambda expression", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_20 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_24 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_30 [label="Exit lambda expression", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_29 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_21 [label="pt.Specification.IsOption()", span="34-34", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_26 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_25 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_17 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_18 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="OptionMapperTests.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m2_4 [label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=1, file="OptionMapperTests.cs"];
m2_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m2_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m2_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m2_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs"];
m2_31 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="OptionMapperTests.cs"];
m2_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs"];
m2_19 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs"];
m2_23 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs"];
m2_14 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionMapperTests.cs"];
m2_10 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="OptionMapperTests.cs"];
m2_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs"];
m5_36 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ValueMapper.cs"];
m5_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ValueMapper.cs"];
m5_0 [label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_2 [label="return Result.Succeed(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="22-26", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=green, community=0, file="ValueMapper.cs"];
m5_1 [label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="20-20", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_3 [label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="15-15", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_71 [label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160", cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="ValueMapper.cs"];
m5_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="ValueMapper.cs"];
m5_4 [label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_29 [label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="65-65", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_17 [label="specProps.Empty()", span="34-34", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_18 [label="yield break;", span="36-36", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_22 [label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="42-43", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_23 [label="yield break;", span="44-44", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_26 [label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="52-54", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_27 [label="yield break;", span="55-55", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_28 [label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="58-63", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_30 [label="yield return value;", span="67-67", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_19 [label="var pt = specProps.First()", span="38-38", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_20 [label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="39-39", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_24 [label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="47-47", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_25 [label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="48-50", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_21 [label="taken.Empty()", span="40-40", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_31 [label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="ValueMapper.cs"];
m5_34 [label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="71-71", cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs"];
m5_56 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs"];
m5_42 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ValueMapper.cs"];
m5_46 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs"];
m5_39 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs"];
m5_47 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="ValueMapper.cs"];
m5_53 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m5_8 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m5_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m5_14 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m5_10 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m5_9 [label="pe.Item1", span="23-23", cluster="lambda expression", file="ValueMapper.cs"];
m5_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m5_12 [label="pe.Item2", span="24-24", cluster="lambda expression", file="ValueMapper.cs"];
m5_16 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m5_15 [label="e.Value", span="25-25", cluster="lambda expression", file="ValueMapper.cs"];
m5_57 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m5_58 [label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m5_50 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m5_59 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="ValueMapper.cs"];
m5_52 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m5_51 [label=n, span="39-39", cluster="lambda expression", file="ValueMapper.cs"];
m5_54 [label="s.Specification.IsValue()", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m5_55 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="ValueMapper.cs"];
m5_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs"];
m5_45 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs"];
m5_60 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", file="ValueMapper.cs"];
m5_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs"];
m5_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ValueMapper.cs"];
m5_48 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ValueMapper.cs"];
m5_72 [label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_73 [label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="89-91", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_74 [label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="87-87", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_5 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ValueMapper.cs"];
m5_49 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs"];
m5_38 [label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="87-87", cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="ValueMapper.cs"];
m5_61 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="ValueMapper.cs"];
m5_44 [label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170", cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="ValueMapper.cs"];
m5_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs"];
m5_62 [label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_68 [label="return Maybe.Just(specification.Max.FromJust());", span="80-80", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_65 [label="return Maybe.Just(1);", span="76-76", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_67 [label="specification.Max.IsJust()", span="78-78", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_64 [label="TargetType.Scalar", span="75-75", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_69 [label="return Maybe.Nothing<int>();", span="84-84", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_66 [label="TargetType.Sequence", span="77-77", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_63 [label="specification.TargetType", span="73-73", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_70 [label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71", cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs"];
m5_41 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="ValueMapper.cs"];
m5_43 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ValueMapper.cs"];
m5_7 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="ValueMapper.cs"];
m5_75 [label=pt, span="", file="ValueMapper.cs"];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_31  [key=2, style=dotted];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_13  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_14  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_15  [key=2, style=dotted];
m0_38 -> m0_33  [key=2, style=dotted];
m0_39 -> m0_34  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid, color=red];
m0_20 -> m0_31  [key=2, style=dotted];
m0_20 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_20 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_22  [key=0, style=solid, color=red];
m0_21 -> m0_13  [key=2, style=dotted, color=red];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_14  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_15  [key=2, style=dotted];
m0_24 -> m0_17  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_15  [key=2, style=dotted];
m0_25 -> m0_17  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_15  [key=2, style=dotted];
m0_26 -> m0_17  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_15  [key=2, style=dotted];
m0_27 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_15  [key=2, style=dotted];
m0_28 -> m0_33  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_18  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_15  [key=2, style=dotted];
m0_23 -> m0_16  [key=2, style=dotted];
m0_30 -> m0_19  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_48  [key=2, style=dotted];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_41 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_41 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_13  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_14  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_15  [key=2, style=dotted];
m0_45 -> m0_49  [key=2, style=dotted];
m0_45 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_18  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_15  [key=2, style=dotted];
m0_44 -> m0_16  [key=2, style=dotted];
m0_47 -> m0_40  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_50  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_48  [key=2, style=dotted];
m0_54 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_13  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_14  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_15  [key=2, style=dotted];
m0_57 -> m0_33  [key=2, style=dotted];
m0_58 -> m0_53  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_12  [key=2, style=dotted];
m0_1 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_1 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_17  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_17  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_17  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_18  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_15  [key=2, style=dotted];
m0_4 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_0  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [key=2, style=dotted];
m1_8 -> m1_12  [key=2, style=dotted];
m1_8 -> m1_13  [key=2, style=dotted];
m1_8 -> m1_14  [key=2, style=dotted];
m1_8 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_16 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_23  [key=2, style=dotted];
m1_20 -> m1_24  [key=2, style=dotted];
m1_20 -> m1_25  [key=2, style=dotted];
m1_20 -> m1_13  [key=2, style=dotted];
m1_20 -> m1_26  [key=2, style=dotted];
m1_20 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m1_7 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m1_7 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m1_31 -> m1_32  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_25  [key=2, style=dotted];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_12  [key=2, style=dotted];
m1_28 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_31  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_34  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_37  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m1_0 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_40 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m1_41 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m1_41 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m1_42 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_42 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_43 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m1_43 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m1_43 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m2_16 -> m2_17  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_23  [key=2, style=dotted];
m2_29 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_11  [key=2, style=dotted, color=green];
m2_4 -> m2_15  [key=2, style=dotted, color=green];
m2_4 -> m2_28  [key=1, style=dashed, color=green, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_14  [key=2, style=dotted];
m2_3 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=tokenPartitions];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_12  [key=2, style=dotted];
m2_2 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_5  [key=2, style=dotted, color=green];
m5_2 -> m5_6  [key=2, style=dotted, color=green];
m5_2 -> m5_7  [key=2, style=dotted, color=green];
m5_2 -> m5_8  [key=1, style=dashed, color=green, label="lambda expression"];
m5_2 -> m5_11  [key=1, style=dashed, color=green, label="lambda expression"];
m5_2 -> m5_14  [key=1, style=dashed, color=green, label="lambda expression"];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_4  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_17  [key=0, style=solid];
m5_4 -> m5_18  [key=0, style=bold, color=crimson];
m5_4 -> m5_22  [key=0, style=bold, color=crimson];
m5_4 -> m5_23  [key=0, style=bold, color=crimson];
m5_4 -> m5_26  [key=0, style=bold, color=crimson];
m5_4 -> m5_27  [key=0, style=bold, color=crimson];
m5_4 -> m5_28  [key=0, style=bold, color=crimson];
m5_4 -> m5_30  [key=0, style=bold, color=crimson];
m5_4 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_4 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_4 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_4 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_4 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m5_29 -> m5_4  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=0, style=solid];
m5_29 -> m5_40  [key=2, style=dotted];
m5_29 -> m5_35  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=0, style=solid];
m5_17 -> m5_32  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_38  [key=2, style=dotted];
m5_22 -> m5_39  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_46  [key=2, style=dotted];
m5_26 -> m5_47  [key=2, style=dotted];
m5_26 -> m5_39  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_48  [key=2, style=dotted];
m5_28 -> m5_49  [key=2, style=dotted];
m5_28 -> m5_47  [key=2, style=dotted];
m5_28 -> m5_39  [key=2, style=dotted];
m5_28 -> m5_36  [key=2, style=dotted];
m5_28 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_30 -> m5_29  [key=0, style=solid];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_19 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_19 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_33  [key=2, style=dotted];
m5_19 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_19 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_20 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=taken];
m5_20 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=taken];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_34  [key=2, style=dotted];
m5_20 -> m5_35  [key=2, style=dotted];
m5_20 -> m5_36  [key=2, style=dotted];
m5_20 -> m5_37  [key=2, style=dotted];
m5_20 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_20 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label=taken];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_40  [key=2, style=dotted];
m5_24 -> m5_41  [key=2, style=dotted];
m5_24 -> m5_42  [key=2, style=dotted];
m5_24 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [key=0, style=solid];
m5_25 -> m5_43  [key=2, style=dotted];
m5_25 -> m5_44  [key=2, style=dotted];
m5_25 -> m5_35  [key=2, style=dotted];
m5_25 -> m5_40  [key=2, style=dotted];
m5_25 -> m5_45  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_24  [key=0, style=solid];
m5_21 -> m5_32  [key=2, style=dotted];
m5_31 -> m5_4  [key=0, style=bold, color=blue];
m5_53 -> m5_54  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_10 -> m5_8  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_16 -> m5_14  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_39  [key=2, style=dotted];
m5_58 -> m5_47  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_60  [key=2, style=dotted];
m5_58 -> m5_61  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_59 -> m5_57  [key=0, style=bold, color=blue];
m5_52 -> m5_50  [key=0, style=bold, color=blue];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_56  [key=2, style=dotted];
m5_55 -> m5_53  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_46  [key=2, style=dotted];
m5_73 -> m5_47  [key=2, style=dotted];
m5_73 -> m5_43  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_61  [key=2, style=dotted];
m5_74 -> m5_72  [key=0, style=bold, color=blue];
m5_62 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_62 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m5_62 -> m5_63  [key=0, style=solid];
m5_68 -> m5_47  [key=2, style=dotted];
m5_68 -> m5_70  [key=0, style=solid];
m5_68 -> m5_71  [key=2, style=dotted];
m5_65 -> m5_47  [key=2, style=dotted];
m5_65 -> m5_70  [key=0, style=solid];
m5_67 -> m5_43  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_69  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_69 -> m5_61  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_66  [key=0, style=solid];
m5_70 -> m5_62  [key=0, style=bold, color=blue];
m5_75 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=pt];
}
